
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002a934  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000036a4  9002abd8  9002abd8  0002ebd8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000002f8  9002e27c  9002e27c  0003227c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002e574  9002e574  000529dc  2**0
                  CONTENTS
  6 .ARM          00000008  9002e574  9002e574  00032574  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  9002e57c  9002e57c  000529dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   0000001c  9002e57c  9002e57c  0003257c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002e598  9002e598  00032598  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000188  24000000  9002e5a0  00033000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_ScratchbufferA 00000100  240001a0  9002e728  000331a0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferB 00000100  240002a0  9002e828  000332a0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00023d74  240003a0  9002e928  000333a0  2**3
                  ALLOC
 14 ._user_heap_stack 00002004  24024114  9002e928  00034114  2**0
                  ALLOC
 15 .ARM.attributes 0000002e  00000000  00000000  000529dc  2**0
                  CONTENTS, READONLY
 16 FontFlashSection 00007208  90200000  90200000  00034000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TextFlashSection 000000d4  90207208  90207208  0003b208  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 ExtFlashSection 00017700  902072dc  902072dc  0003b2dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00053000  2**2
                  ALLOC
 20 .debug_line   0007c0fe  00000000  00000000  00052a0a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005b  00000000  00000000  000ceb08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   001292ed  00000000  00000000  000ceb63  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 0001e28a  00000000  00000000  001f7e50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 000039f0  00000000  00000000  002160e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001a1198  00000000  00000000  00219ad0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 0000727e  00000000  00000000  003bac68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  0004b844  00000000  00000000  003c1ee6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  0040d72a  2**0
                  CONTENTS, READONLY
 29 .debug_frame  0000b110  00000000  00000000  0040d7ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_loclists 00032667  00000000  00000000  004188fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	240003a0 	.word	0x240003a0
900002bc:	00000000 	.word	0x00000000
900002c0:	9002abbc 	.word	0x9002abbc

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	240003a4 	.word	0x240003a4
900002dc:	9002abbc 	.word	0x9002abbc

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_drsub>:
90000380:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000384:	e002      	b.n	9000038c <__adddf3>
90000386:	bf00      	nop

90000388 <__aeabi_dsub>:
90000388:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000038c <__adddf3>:
9000038c:	b530      	push	{r4, r5, lr}
9000038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
90000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
90000396:	ea94 0f05 	teq	r4, r5
9000039a:	bf08      	it	eq
9000039c:	ea90 0f02 	teqeq	r0, r2
900003a0:	bf1f      	itttt	ne
900003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003b2:	f000 80e2 	beq.w	9000057a <__adddf3+0x1ee>
900003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003be:	bfb8      	it	lt
900003c0:	426d      	neglt	r5, r5
900003c2:	dd0c      	ble.n	900003de <__adddf3+0x52>
900003c4:	442c      	add	r4, r5
900003c6:	ea80 0202 	eor.w	r2, r0, r2
900003ca:	ea81 0303 	eor.w	r3, r1, r3
900003ce:	ea82 0000 	eor.w	r0, r2, r0
900003d2:	ea83 0101 	eor.w	r1, r3, r1
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	2d36      	cmp	r5, #54	@ 0x36
900003e0:	bf88      	it	hi
900003e2:	bd30      	pophi	{r4, r5, pc}
900003e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
900003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
900003f4:	d002      	beq.n	900003fc <__adddf3+0x70>
900003f6:	4240      	negs	r0, r0
900003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900003fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000408:	d002      	beq.n	90000410 <__adddf3+0x84>
9000040a:	4252      	negs	r2, r2
9000040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000410:	ea94 0f05 	teq	r4, r5
90000414:	f000 80a7 	beq.w	90000566 <__adddf3+0x1da>
90000418:	f1a4 0401 	sub.w	r4, r4, #1
9000041c:	f1d5 0e20 	rsbs	lr, r5, #32
90000420:	db0d      	blt.n	9000043e <__adddf3+0xb2>
90000422:	fa02 fc0e 	lsl.w	ip, r2, lr
90000426:	fa22 f205 	lsr.w	r2, r2, r5
9000042a:	1880      	adds	r0, r0, r2
9000042c:	f141 0100 	adc.w	r1, r1, #0
90000430:	fa03 f20e 	lsl.w	r2, r3, lr
90000434:	1880      	adds	r0, r0, r2
90000436:	fa43 f305 	asr.w	r3, r3, r5
9000043a:	4159      	adcs	r1, r3
9000043c:	e00e      	b.n	9000045c <__adddf3+0xd0>
9000043e:	f1a5 0520 	sub.w	r5, r5, #32
90000442:	f10e 0e20 	add.w	lr, lr, #32
90000446:	2a01      	cmp	r2, #1
90000448:	fa03 fc0e 	lsl.w	ip, r3, lr
9000044c:	bf28      	it	cs
9000044e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000452:	fa43 f305 	asr.w	r3, r3, r5
90000456:	18c0      	adds	r0, r0, r3
90000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000045c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000460:	d507      	bpl.n	90000472 <__adddf3+0xe6>
90000462:	f04f 0e00 	mov.w	lr, #0
90000466:	f1dc 0c00 	rsbs	ip, ip, #0
9000046a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000046e:	eb6e 0101 	sbc.w	r1, lr, r1
90000472:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000476:	d31b      	bcc.n	900004b0 <__adddf3+0x124>
90000478:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000047c:	d30c      	bcc.n	90000498 <__adddf3+0x10c>
9000047e:	0849      	lsrs	r1, r1, #1
90000480:	ea5f 0030 	movs.w	r0, r0, rrx
90000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000488:	f104 0401 	add.w	r4, r4, #1
9000048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
90000490:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
90000494:	f080 809a 	bcs.w	900005cc <__adddf3+0x240>
90000498:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
9000049c:	bf08      	it	eq
9000049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004a2:	f150 0000 	adcs.w	r0, r0, #0
900004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004aa:	ea41 0105 	orr.w	r1, r1, r5
900004ae:	bd30      	pop	{r4, r5, pc}
900004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004b4:	4140      	adcs	r0, r0
900004b6:	eb41 0101 	adc.w	r1, r1, r1
900004ba:	3c01      	subs	r4, #1
900004bc:	bf28      	it	cs
900004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004c2:	d2e9      	bcs.n	90000498 <__adddf3+0x10c>
900004c4:	f091 0f00 	teq	r1, #0
900004c8:	bf04      	itt	eq
900004ca:	4601      	moveq	r1, r0
900004cc:	2000      	moveq	r0, #0
900004ce:	fab1 f381 	clz	r3, r1
900004d2:	bf08      	it	eq
900004d4:	3320      	addeq	r3, #32
900004d6:	f1a3 030b 	sub.w	r3, r3, #11
900004da:	f1b3 0220 	subs.w	r2, r3, #32
900004de:	da0c      	bge.n	900004fa <__adddf3+0x16e>
900004e0:	320c      	adds	r2, #12
900004e2:	dd08      	ble.n	900004f6 <__adddf3+0x16a>
900004e4:	f102 0c14 	add.w	ip, r2, #20
900004e8:	f1c2 020c 	rsb	r2, r2, #12
900004ec:	fa01 f00c 	lsl.w	r0, r1, ip
900004f0:	fa21 f102 	lsr.w	r1, r1, r2
900004f4:	e00c      	b.n	90000510 <__adddf3+0x184>
900004f6:	f102 0214 	add.w	r2, r2, #20
900004fa:	bfd8      	it	le
900004fc:	f1c2 0c20 	rsble	ip, r2, #32
90000500:	fa01 f102 	lsl.w	r1, r1, r2
90000504:	fa20 fc0c 	lsr.w	ip, r0, ip
90000508:	bfdc      	itt	le
9000050a:	ea41 010c 	orrle.w	r1, r1, ip
9000050e:	4090      	lslle	r0, r2
90000510:	1ae4      	subs	r4, r4, r3
90000512:	bfa2      	ittt	ge
90000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000518:	4329      	orrge	r1, r5
9000051a:	bd30      	popge	{r4, r5, pc}
9000051c:	ea6f 0404 	mvn.w	r4, r4
90000520:	3c1f      	subs	r4, #31
90000522:	da1c      	bge.n	9000055e <__adddf3+0x1d2>
90000524:	340c      	adds	r4, #12
90000526:	dc0e      	bgt.n	90000546 <__adddf3+0x1ba>
90000528:	f104 0414 	add.w	r4, r4, #20
9000052c:	f1c4 0220 	rsb	r2, r4, #32
90000530:	fa20 f004 	lsr.w	r0, r0, r4
90000534:	fa01 f302 	lsl.w	r3, r1, r2
90000538:	ea40 0003 	orr.w	r0, r0, r3
9000053c:	fa21 f304 	lsr.w	r3, r1, r4
90000540:	ea45 0103 	orr.w	r1, r5, r3
90000544:	bd30      	pop	{r4, r5, pc}
90000546:	f1c4 040c 	rsb	r4, r4, #12
9000054a:	f1c4 0220 	rsb	r2, r4, #32
9000054e:	fa20 f002 	lsr.w	r0, r0, r2
90000552:	fa01 f304 	lsl.w	r3, r1, r4
90000556:	ea40 0003 	orr.w	r0, r0, r3
9000055a:	4629      	mov	r1, r5
9000055c:	bd30      	pop	{r4, r5, pc}
9000055e:	fa21 f004 	lsr.w	r0, r1, r4
90000562:	4629      	mov	r1, r5
90000564:	bd30      	pop	{r4, r5, pc}
90000566:	f094 0f00 	teq	r4, #0
9000056a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000056e:	bf06      	itte	eq
90000570:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000574:	3401      	addeq	r4, #1
90000576:	3d01      	subne	r5, #1
90000578:	e74e      	b.n	90000418 <__adddf3+0x8c>
9000057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000057e:	bf18      	it	ne
90000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000584:	d029      	beq.n	900005da <__adddf3+0x24e>
90000586:	ea94 0f05 	teq	r4, r5
9000058a:	bf08      	it	eq
9000058c:	ea90 0f02 	teqeq	r0, r2
90000590:	d005      	beq.n	9000059e <__adddf3+0x212>
90000592:	ea54 0c00 	orrs.w	ip, r4, r0
90000596:	bf04      	itt	eq
90000598:	4619      	moveq	r1, r3
9000059a:	4610      	moveq	r0, r2
9000059c:	bd30      	pop	{r4, r5, pc}
9000059e:	ea91 0f03 	teq	r1, r3
900005a2:	bf1e      	ittt	ne
900005a4:	2100      	movne	r1, #0
900005a6:	2000      	movne	r0, #0
900005a8:	bd30      	popne	{r4, r5, pc}
900005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005ae:	d105      	bne.n	900005bc <__adddf3+0x230>
900005b0:	0040      	lsls	r0, r0, #1
900005b2:	4149      	adcs	r1, r1
900005b4:	bf28      	it	cs
900005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ba:	bd30      	pop	{r4, r5, pc}
900005bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005c0:	bf3c      	itt	cc
900005c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005c6:	bd30      	popcc	{r4, r5, pc}
900005c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005d4:	f04f 0000 	mov.w	r0, #0
900005d8:	bd30      	pop	{r4, r5, pc}
900005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005de:	bf1a      	itte	ne
900005e0:	4619      	movne	r1, r3
900005e2:	4610      	movne	r0, r2
900005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005e8:	bf1c      	itt	ne
900005ea:	460b      	movne	r3, r1
900005ec:	4602      	movne	r2, r0
900005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
900005f2:	bf06      	itte	eq
900005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
900005f8:	ea91 0f03 	teqeq	r1, r3
900005fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000600:	bd30      	pop	{r4, r5, pc}
90000602:	bf00      	nop

90000604 <__aeabi_ui2d>:
90000604:	f090 0f00 	teq	r0, #0
90000608:	bf04      	itt	eq
9000060a:	2100      	moveq	r1, #0
9000060c:	4770      	bxeq	lr
9000060e:	b530      	push	{r4, r5, lr}
90000610:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000614:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000618:	f04f 0500 	mov.w	r5, #0
9000061c:	f04f 0100 	mov.w	r1, #0
90000620:	e750      	b.n	900004c4 <__adddf3+0x138>
90000622:	bf00      	nop

90000624 <__aeabi_i2d>:
90000624:	f090 0f00 	teq	r0, #0
90000628:	bf04      	itt	eq
9000062a:	2100      	moveq	r1, #0
9000062c:	4770      	bxeq	lr
9000062e:	b530      	push	{r4, r5, lr}
90000630:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000634:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000638:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000063c:	bf48      	it	mi
9000063e:	4240      	negmi	r0, r0
90000640:	f04f 0100 	mov.w	r1, #0
90000644:	e73e      	b.n	900004c4 <__adddf3+0x138>
90000646:	bf00      	nop

90000648 <__aeabi_f2d>:
90000648:	0042      	lsls	r2, r0, #1
9000064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000064e:	ea4f 0131 	mov.w	r1, r1, rrx
90000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000656:	bf1f      	itttt	ne
90000658:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000065c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000660:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000664:	4770      	bxne	lr
90000666:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000066a:	bf08      	it	eq
9000066c:	4770      	bxeq	lr
9000066e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000672:	bf04      	itt	eq
90000674:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000678:	4770      	bxeq	lr
9000067a:	b530      	push	{r4, r5, lr}
9000067c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000680:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000684:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000688:	e71c      	b.n	900004c4 <__adddf3+0x138>
9000068a:	bf00      	nop

9000068c <__aeabi_ul2d>:
9000068c:	ea50 0201 	orrs.w	r2, r0, r1
90000690:	bf08      	it	eq
90000692:	4770      	bxeq	lr
90000694:	b530      	push	{r4, r5, lr}
90000696:	f04f 0500 	mov.w	r5, #0
9000069a:	e00a      	b.n	900006b2 <__aeabi_l2d+0x16>

9000069c <__aeabi_l2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006aa:	d502      	bpl.n	900006b2 <__aeabi_l2d+0x16>
900006ac:	4240      	negs	r0, r0
900006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006be:	f43f aed8 	beq.w	90000472 <__adddf3+0xe6>
900006c2:	f04f 0203 	mov.w	r2, #3
900006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006ca:	bf18      	it	ne
900006cc:	3203      	addne	r2, #3
900006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006d2:	bf18      	it	ne
900006d4:	3203      	addne	r2, #3
900006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006da:	f1c2 0320 	rsb	r3, r2, #32
900006de:	fa00 fc03 	lsl.w	ip, r0, r3
900006e2:	fa20 f002 	lsr.w	r0, r0, r2
900006e6:	fa01 fe03 	lsl.w	lr, r1, r3
900006ea:	ea40 000e 	orr.w	r0, r0, lr
900006ee:	fa21 f102 	lsr.w	r1, r1, r2
900006f2:	4414      	add	r4, r2
900006f4:	e6bd      	b.n	90000472 <__adddf3+0xe6>
900006f6:	bf00      	nop

900006f8 <__aeabi_ldivmod>:
900006f8:	b97b      	cbnz	r3, 9000071a <__aeabi_ldivmod+0x22>
900006fa:	b972      	cbnz	r2, 9000071a <__aeabi_ldivmod+0x22>
900006fc:	2900      	cmp	r1, #0
900006fe:	bfbe      	ittt	lt
90000700:	2000      	movlt	r0, #0
90000702:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000706:	e006      	blt.n	90000716 <__aeabi_ldivmod+0x1e>
90000708:	bf08      	it	eq
9000070a:	2800      	cmpeq	r0, #0
9000070c:	bf1c      	itt	ne
9000070e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000712:	f04f 30ff 	movne.w	r0, #4294967295
90000716:	f000 b99d 	b.w	90000a54 <__aeabi_idiv0>
9000071a:	f1ad 0c08 	sub.w	ip, sp, #8
9000071e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000722:	2900      	cmp	r1, #0
90000724:	db09      	blt.n	9000073a <__aeabi_ldivmod+0x42>
90000726:	2b00      	cmp	r3, #0
90000728:	db1a      	blt.n	90000760 <__aeabi_ldivmod+0x68>
9000072a:	f000 f835 	bl	90000798 <__udivmoddi4>
9000072e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000732:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000736:	b004      	add	sp, #16
90000738:	4770      	bx	lr
9000073a:	4240      	negs	r0, r0
9000073c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000740:	2b00      	cmp	r3, #0
90000742:	db1b      	blt.n	9000077c <__aeabi_ldivmod+0x84>
90000744:	f000 f828 	bl	90000798 <__udivmoddi4>
90000748:	f8dd e004 	ldr.w	lr, [sp, #4]
9000074c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000750:	b004      	add	sp, #16
90000752:	4240      	negs	r0, r0
90000754:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000758:	4252      	negs	r2, r2
9000075a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000075e:	4770      	bx	lr
90000760:	4252      	negs	r2, r2
90000762:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000766:	f000 f817 	bl	90000798 <__udivmoddi4>
9000076a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000076e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000772:	b004      	add	sp, #16
90000774:	4240      	negs	r0, r0
90000776:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000077a:	4770      	bx	lr
9000077c:	4252      	negs	r2, r2
9000077e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000782:	f000 f809 	bl	90000798 <__udivmoddi4>
90000786:	f8dd e004 	ldr.w	lr, [sp, #4]
9000078a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000078e:	b004      	add	sp, #16
90000790:	4252      	negs	r2, r2
90000792:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000796:	4770      	bx	lr

90000798 <__udivmoddi4>:
90000798:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000079c:	9d08      	ldr	r5, [sp, #32]
9000079e:	460c      	mov	r4, r1
900007a0:	2b00      	cmp	r3, #0
900007a2:	d14e      	bne.n	90000842 <__udivmoddi4+0xaa>
900007a4:	4694      	mov	ip, r2
900007a6:	458c      	cmp	ip, r1
900007a8:	4686      	mov	lr, r0
900007aa:	fab2 f282 	clz	r2, r2
900007ae:	d962      	bls.n	90000876 <__udivmoddi4+0xde>
900007b0:	b14a      	cbz	r2, 900007c6 <__udivmoddi4+0x2e>
900007b2:	f1c2 0320 	rsb	r3, r2, #32
900007b6:	4091      	lsls	r1, r2
900007b8:	fa20 f303 	lsr.w	r3, r0, r3
900007bc:	fa0c fc02 	lsl.w	ip, ip, r2
900007c0:	4319      	orrs	r1, r3
900007c2:	fa00 fe02 	lsl.w	lr, r0, r2
900007c6:	ea4f 471c 	mov.w	r7, ip, lsr #16
900007ca:	fa1f f68c 	uxth.w	r6, ip
900007ce:	fbb1 f4f7 	udiv	r4, r1, r7
900007d2:	ea4f 431e 	mov.w	r3, lr, lsr #16
900007d6:	fb07 1114 	mls	r1, r7, r4, r1
900007da:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900007de:	fb04 f106 	mul.w	r1, r4, r6
900007e2:	4299      	cmp	r1, r3
900007e4:	d90a      	bls.n	900007fc <__udivmoddi4+0x64>
900007e6:	eb1c 0303 	adds.w	r3, ip, r3
900007ea:	f104 30ff 	add.w	r0, r4, #4294967295
900007ee:	f080 8112 	bcs.w	90000a16 <__udivmoddi4+0x27e>
900007f2:	4299      	cmp	r1, r3
900007f4:	f240 810f 	bls.w	90000a16 <__udivmoddi4+0x27e>
900007f8:	3c02      	subs	r4, #2
900007fa:	4463      	add	r3, ip
900007fc:	1a59      	subs	r1, r3, r1
900007fe:	fa1f f38e 	uxth.w	r3, lr
90000802:	fbb1 f0f7 	udiv	r0, r1, r7
90000806:	fb07 1110 	mls	r1, r7, r0, r1
9000080a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000080e:	fb00 f606 	mul.w	r6, r0, r6
90000812:	429e      	cmp	r6, r3
90000814:	d90a      	bls.n	9000082c <__udivmoddi4+0x94>
90000816:	eb1c 0303 	adds.w	r3, ip, r3
9000081a:	f100 31ff 	add.w	r1, r0, #4294967295
9000081e:	f080 80fc 	bcs.w	90000a1a <__udivmoddi4+0x282>
90000822:	429e      	cmp	r6, r3
90000824:	f240 80f9 	bls.w	90000a1a <__udivmoddi4+0x282>
90000828:	4463      	add	r3, ip
9000082a:	3802      	subs	r0, #2
9000082c:	1b9b      	subs	r3, r3, r6
9000082e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
90000832:	2100      	movs	r1, #0
90000834:	b11d      	cbz	r5, 9000083e <__udivmoddi4+0xa6>
90000836:	40d3      	lsrs	r3, r2
90000838:	2200      	movs	r2, #0
9000083a:	e9c5 3200 	strd	r3, r2, [r5]
9000083e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90000842:	428b      	cmp	r3, r1
90000844:	d905      	bls.n	90000852 <__udivmoddi4+0xba>
90000846:	b10d      	cbz	r5, 9000084c <__udivmoddi4+0xb4>
90000848:	e9c5 0100 	strd	r0, r1, [r5]
9000084c:	2100      	movs	r1, #0
9000084e:	4608      	mov	r0, r1
90000850:	e7f5      	b.n	9000083e <__udivmoddi4+0xa6>
90000852:	fab3 f183 	clz	r1, r3
90000856:	2900      	cmp	r1, #0
90000858:	d146      	bne.n	900008e8 <__udivmoddi4+0x150>
9000085a:	42a3      	cmp	r3, r4
9000085c:	d302      	bcc.n	90000864 <__udivmoddi4+0xcc>
9000085e:	4290      	cmp	r0, r2
90000860:	f0c0 80f0 	bcc.w	90000a44 <__udivmoddi4+0x2ac>
90000864:	1a86      	subs	r6, r0, r2
90000866:	eb64 0303 	sbc.w	r3, r4, r3
9000086a:	2001      	movs	r0, #1
9000086c:	2d00      	cmp	r5, #0
9000086e:	d0e6      	beq.n	9000083e <__udivmoddi4+0xa6>
90000870:	e9c5 6300 	strd	r6, r3, [r5]
90000874:	e7e3      	b.n	9000083e <__udivmoddi4+0xa6>
90000876:	2a00      	cmp	r2, #0
90000878:	f040 8090 	bne.w	9000099c <__udivmoddi4+0x204>
9000087c:	eba1 040c 	sub.w	r4, r1, ip
90000880:	ea4f 481c 	mov.w	r8, ip, lsr #16
90000884:	fa1f f78c 	uxth.w	r7, ip
90000888:	2101      	movs	r1, #1
9000088a:	fbb4 f6f8 	udiv	r6, r4, r8
9000088e:	ea4f 431e 	mov.w	r3, lr, lsr #16
90000892:	fb08 4416 	mls	r4, r8, r6, r4
90000896:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
9000089a:	fb07 f006 	mul.w	r0, r7, r6
9000089e:	4298      	cmp	r0, r3
900008a0:	d908      	bls.n	900008b4 <__udivmoddi4+0x11c>
900008a2:	eb1c 0303 	adds.w	r3, ip, r3
900008a6:	f106 34ff 	add.w	r4, r6, #4294967295
900008aa:	d202      	bcs.n	900008b2 <__udivmoddi4+0x11a>
900008ac:	4298      	cmp	r0, r3
900008ae:	f200 80cd 	bhi.w	90000a4c <__udivmoddi4+0x2b4>
900008b2:	4626      	mov	r6, r4
900008b4:	1a1c      	subs	r4, r3, r0
900008b6:	fa1f f38e 	uxth.w	r3, lr
900008ba:	fbb4 f0f8 	udiv	r0, r4, r8
900008be:	fb08 4410 	mls	r4, r8, r0, r4
900008c2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
900008c6:	fb00 f707 	mul.w	r7, r0, r7
900008ca:	429f      	cmp	r7, r3
900008cc:	d908      	bls.n	900008e0 <__udivmoddi4+0x148>
900008ce:	eb1c 0303 	adds.w	r3, ip, r3
900008d2:	f100 34ff 	add.w	r4, r0, #4294967295
900008d6:	d202      	bcs.n	900008de <__udivmoddi4+0x146>
900008d8:	429f      	cmp	r7, r3
900008da:	f200 80b0 	bhi.w	90000a3e <__udivmoddi4+0x2a6>
900008de:	4620      	mov	r0, r4
900008e0:	1bdb      	subs	r3, r3, r7
900008e2:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
900008e6:	e7a5      	b.n	90000834 <__udivmoddi4+0x9c>
900008e8:	f1c1 0620 	rsb	r6, r1, #32
900008ec:	408b      	lsls	r3, r1
900008ee:	fa22 f706 	lsr.w	r7, r2, r6
900008f2:	431f      	orrs	r7, r3
900008f4:	fa20 fc06 	lsr.w	ip, r0, r6
900008f8:	fa04 f301 	lsl.w	r3, r4, r1
900008fc:	ea43 030c 	orr.w	r3, r3, ip
90000900:	40f4      	lsrs	r4, r6
90000902:	fa00 f801 	lsl.w	r8, r0, r1
90000906:	0c38      	lsrs	r0, r7, #16
90000908:	ea4f 4913 	mov.w	r9, r3, lsr #16
9000090c:	fbb4 fef0 	udiv	lr, r4, r0
90000910:	fa1f fc87 	uxth.w	ip, r7
90000914:	fb00 441e 	mls	r4, r0, lr, r4
90000918:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
9000091c:	fb0e f90c 	mul.w	r9, lr, ip
90000920:	45a1      	cmp	r9, r4
90000922:	fa02 f201 	lsl.w	r2, r2, r1
90000926:	d90a      	bls.n	9000093e <__udivmoddi4+0x1a6>
90000928:	193c      	adds	r4, r7, r4
9000092a:	f10e 3aff 	add.w	sl, lr, #4294967295
9000092e:	f080 8084 	bcs.w	90000a3a <__udivmoddi4+0x2a2>
90000932:	45a1      	cmp	r9, r4
90000934:	f240 8081 	bls.w	90000a3a <__udivmoddi4+0x2a2>
90000938:	f1ae 0e02 	sub.w	lr, lr, #2
9000093c:	443c      	add	r4, r7
9000093e:	eba4 0409 	sub.w	r4, r4, r9
90000942:	fa1f f983 	uxth.w	r9, r3
90000946:	fbb4 f3f0 	udiv	r3, r4, r0
9000094a:	fb00 4413 	mls	r4, r0, r3, r4
9000094e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
90000952:	fb03 fc0c 	mul.w	ip, r3, ip
90000956:	45a4      	cmp	ip, r4
90000958:	d907      	bls.n	9000096a <__udivmoddi4+0x1d2>
9000095a:	193c      	adds	r4, r7, r4
9000095c:	f103 30ff 	add.w	r0, r3, #4294967295
90000960:	d267      	bcs.n	90000a32 <__udivmoddi4+0x29a>
90000962:	45a4      	cmp	ip, r4
90000964:	d965      	bls.n	90000a32 <__udivmoddi4+0x29a>
90000966:	3b02      	subs	r3, #2
90000968:	443c      	add	r4, r7
9000096a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
9000096e:	fba0 9302 	umull	r9, r3, r0, r2
90000972:	eba4 040c 	sub.w	r4, r4, ip
90000976:	429c      	cmp	r4, r3
90000978:	46ce      	mov	lr, r9
9000097a:	469c      	mov	ip, r3
9000097c:	d351      	bcc.n	90000a22 <__udivmoddi4+0x28a>
9000097e:	d04e      	beq.n	90000a1e <__udivmoddi4+0x286>
90000980:	b155      	cbz	r5, 90000998 <__udivmoddi4+0x200>
90000982:	ebb8 030e 	subs.w	r3, r8, lr
90000986:	eb64 040c 	sbc.w	r4, r4, ip
9000098a:	fa04 f606 	lsl.w	r6, r4, r6
9000098e:	40cb      	lsrs	r3, r1
90000990:	431e      	orrs	r6, r3
90000992:	40cc      	lsrs	r4, r1
90000994:	e9c5 6400 	strd	r6, r4, [r5]
90000998:	2100      	movs	r1, #0
9000099a:	e750      	b.n	9000083e <__udivmoddi4+0xa6>
9000099c:	f1c2 0320 	rsb	r3, r2, #32
900009a0:	fa20 f103 	lsr.w	r1, r0, r3
900009a4:	fa0c fc02 	lsl.w	ip, ip, r2
900009a8:	fa24 f303 	lsr.w	r3, r4, r3
900009ac:	4094      	lsls	r4, r2
900009ae:	430c      	orrs	r4, r1
900009b0:	ea4f 481c 	mov.w	r8, ip, lsr #16
900009b4:	fa00 fe02 	lsl.w	lr, r0, r2
900009b8:	fa1f f78c 	uxth.w	r7, ip
900009bc:	fbb3 f0f8 	udiv	r0, r3, r8
900009c0:	fb08 3110 	mls	r1, r8, r0, r3
900009c4:	0c23      	lsrs	r3, r4, #16
900009c6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900009ca:	fb00 f107 	mul.w	r1, r0, r7
900009ce:	4299      	cmp	r1, r3
900009d0:	d908      	bls.n	900009e4 <__udivmoddi4+0x24c>
900009d2:	eb1c 0303 	adds.w	r3, ip, r3
900009d6:	f100 36ff 	add.w	r6, r0, #4294967295
900009da:	d22c      	bcs.n	90000a36 <__udivmoddi4+0x29e>
900009dc:	4299      	cmp	r1, r3
900009de:	d92a      	bls.n	90000a36 <__udivmoddi4+0x29e>
900009e0:	3802      	subs	r0, #2
900009e2:	4463      	add	r3, ip
900009e4:	1a5b      	subs	r3, r3, r1
900009e6:	b2a4      	uxth	r4, r4
900009e8:	fbb3 f1f8 	udiv	r1, r3, r8
900009ec:	fb08 3311 	mls	r3, r8, r1, r3
900009f0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
900009f4:	fb01 f307 	mul.w	r3, r1, r7
900009f8:	42a3      	cmp	r3, r4
900009fa:	d908      	bls.n	90000a0e <__udivmoddi4+0x276>
900009fc:	eb1c 0404 	adds.w	r4, ip, r4
90000a00:	f101 36ff 	add.w	r6, r1, #4294967295
90000a04:	d213      	bcs.n	90000a2e <__udivmoddi4+0x296>
90000a06:	42a3      	cmp	r3, r4
90000a08:	d911      	bls.n	90000a2e <__udivmoddi4+0x296>
90000a0a:	3902      	subs	r1, #2
90000a0c:	4464      	add	r4, ip
90000a0e:	1ae4      	subs	r4, r4, r3
90000a10:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
90000a14:	e739      	b.n	9000088a <__udivmoddi4+0xf2>
90000a16:	4604      	mov	r4, r0
90000a18:	e6f0      	b.n	900007fc <__udivmoddi4+0x64>
90000a1a:	4608      	mov	r0, r1
90000a1c:	e706      	b.n	9000082c <__udivmoddi4+0x94>
90000a1e:	45c8      	cmp	r8, r9
90000a20:	d2ae      	bcs.n	90000980 <__udivmoddi4+0x1e8>
90000a22:	ebb9 0e02 	subs.w	lr, r9, r2
90000a26:	eb63 0c07 	sbc.w	ip, r3, r7
90000a2a:	3801      	subs	r0, #1
90000a2c:	e7a8      	b.n	90000980 <__udivmoddi4+0x1e8>
90000a2e:	4631      	mov	r1, r6
90000a30:	e7ed      	b.n	90000a0e <__udivmoddi4+0x276>
90000a32:	4603      	mov	r3, r0
90000a34:	e799      	b.n	9000096a <__udivmoddi4+0x1d2>
90000a36:	4630      	mov	r0, r6
90000a38:	e7d4      	b.n	900009e4 <__udivmoddi4+0x24c>
90000a3a:	46d6      	mov	lr, sl
90000a3c:	e77f      	b.n	9000093e <__udivmoddi4+0x1a6>
90000a3e:	4463      	add	r3, ip
90000a40:	3802      	subs	r0, #2
90000a42:	e74d      	b.n	900008e0 <__udivmoddi4+0x148>
90000a44:	4606      	mov	r6, r0
90000a46:	4623      	mov	r3, r4
90000a48:	4608      	mov	r0, r1
90000a4a:	e70f      	b.n	9000086c <__udivmoddi4+0xd4>
90000a4c:	3e02      	subs	r6, #2
90000a4e:	4463      	add	r3, ip
90000a50:	e730      	b.n	900008b4 <__udivmoddi4+0x11c>
90000a52:	bf00      	nop

90000a54 <__aeabi_idiv0>:
90000a54:	4770      	bx	lr
90000a56:	bf00      	nop

90000a58 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000a58:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000a90 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000a5c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000a5e:	e003      	b.n	90000a68 <LoopCopyDataInit>

90000a60 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000a60:	4b0c      	ldr	r3, [pc, #48]	@ (90000a94 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000a62:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000a64:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000a66:	3104      	adds	r1, #4

90000a68 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000a68:	480b      	ldr	r0, [pc, #44]	@ (90000a98 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000a6a:	4b0c      	ldr	r3, [pc, #48]	@ (90000a9c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000a6c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000a6e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000a70:	d3f6      	bcc.n	90000a60 <CopyDataInit>
  ldr  r2, =_sbss
90000a72:	4a0b      	ldr	r2, [pc, #44]	@ (90000aa0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000a74:	e002      	b.n	90000a7c <LoopFillZerobss>

90000a76 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000a76:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000a78:	f842 3b04 	str.w	r3, [r2], #4

90000a7c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000a7c:	4b09      	ldr	r3, [pc, #36]	@ (90000aa4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000a7e:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000a80:	d3f9      	bcc.n	90000a76 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000a82:	f007 fa81 	bl	90007f88 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000a86:	f029 fbbd 	bl	9002a204 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000a8a:	f002 fef1 	bl	90003870 <main>
  bx  lr    
90000a8e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000a90:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000a94:	9002e5a0 	.word	0x9002e5a0
  ldr  r0, =_sdata
90000a98:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000a9c:	24000188 	.word	0x24000188
  ldr  r2, =_sbss
90000aa0:	240003a0 	.word	0x240003a0
  ldr  r3, = _ebss
90000aa4:	24024114 	.word	0x24024114

90000aa8 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000aa8:	e7fe      	b.n	90000aa8 <ADC3_IRQHandler>
	...

90000aac <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000aac:	4770      	bx	lr
90000aae:	bf00      	nop

90000ab0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000ab0:	4770      	bx	lr
90000ab2:	bf00      	nop

90000ab4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000ab4:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000ab6:	f002 f929 	bl	90002d0c <touchgfx_components_init>
    touchgfx_init();
}
90000aba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000abe:	f002 b8a3 	b.w	90002c08 <touchgfx_init>
90000ac2:	bf00      	nop

90000ac4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000ac4:	f002 b924 	b.w	90002d10 <touchgfx_taskEntry>

90000ac8 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000ac8:	6840      	ldr	r0, [r0, #4]
    }
90000aca:	4770      	bx	lr

90000acc <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000acc:	6041      	str	r1, [r0, #4]
    }
90000ace:	4770      	bx	lr

90000ad0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000ad0:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000ad4:	4b08      	ldr	r3, [pc, #32]	@ (90000af8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000ad6:	4a09      	ldr	r2, [pc, #36]	@ (90000afc <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000ad8:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000adc:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000ae0:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000ae4:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000ae8:	430a      	orrs	r2, r1
90000aea:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000aee:	681a      	ldr	r2, [r3, #0]
90000af0:	f042 0201 	orr.w	r2, r2, #1
90000af4:	601a      	str	r2, [r3, #0]
}
90000af6:	4770      	bx	lr
90000af8:	e0001000 	.word	0xe0001000
90000afc:	c5acce55 	.word	0xc5acce55

90000b00 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000b00:	1a52      	subs	r2, r2, r1
90000b02:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000b06:	fbb2 f0f3 	udiv	r0, r2, r3
90000b0a:	4770      	bx	lr

90000b0c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000b0c:	4b01      	ldr	r3, [pc, #4]	@ (90000b14 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000b0e:	6858      	ldr	r0, [r3, #4]
}
90000b10:	4770      	bx	lr
90000b12:	bf00      	nop
90000b14:	e0001000 	.word	0xe0001000

90000b18 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000b18:	4770      	bx	lr
90000b1a:	bf00      	nop

90000b1c <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000b1c:	b510      	push	{r4, lr}
90000b1e:	4604      	mov	r4, r0
90000b20:	210c      	movs	r1, #12
90000b22:	f028 fca3 	bl	9002946c <_ZdlPvj>
90000b26:	4620      	mov	r0, r4
90000b28:	bd10      	pop	{r4, pc}
90000b2a:	bf00      	nop

90000b2c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b2c:	6803      	ldr	r3, [r0, #0]
90000b2e:	4a0c      	ldr	r2, [pc, #48]	@ (90000b60 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000b30:	691b      	ldr	r3, [r3, #16]
{
90000b32:	b510      	push	{r4, lr}
90000b34:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000b36:	b149      	cbz	r1, 90000b4c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b38:	4293      	cmp	r3, r2
90000b3a:	d10d      	bne.n	90000b58 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000b3c:	4b09      	ldr	r3, [pc, #36]	@ (90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b3e:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b40:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000b42:	6863      	ldr	r3, [r4, #4]
90000b44:	1a9b      	subs	r3, r3, r2
90000b46:	4403      	add	r3, r0
90000b48:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000b4a:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000b4c:	4293      	cmp	r3, r2
90000b4e:	d105      	bne.n	90000b5c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000b50:	4b04      	ldr	r3, [pc, #16]	@ (90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b52:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000b54:	60a0      	str	r0, [r4, #8]
}
90000b56:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b58:	4798      	blx	r3
90000b5a:	e7f1      	b.n	90000b40 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000b5c:	4798      	blx	r3
90000b5e:	e7f9      	b.n	90000b54 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000b60:	90000b0d 	.word	0x90000b0d
90000b64:	e0001000 	.word	0xe0001000

90000b68 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000b68:	4770      	bx	lr
90000b6a:	bf00      	nop
90000b6c:	0000      	movs	r0, r0
	...

90000b70 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000b70:	b500      	push	{lr}
90000b72:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000b74:	2208      	movs	r2, #8
90000b76:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000b78:	2000      	movs	r0, #0
90000b7a:	4669      	mov	r1, sp
    hTS.Width = 480;
90000b7c:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000b98 <_ZN20STM32TouchController4initEv+0x28>
90000b80:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000b84:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000b88:	f007 f910 	bl	90007dac <BSP_TS_Init>
}
90000b8c:	b005      	add	sp, #20
90000b8e:	f85d fb04 	ldr.w	pc, [sp], #4
90000b92:	bf00      	nop
90000b94:	f3af 8000 	nop.w
90000b98:	000001e0 	.word	0x000001e0
90000b9c:	00000110 	.word	0x00000110

90000ba0 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000ba0:	b530      	push	{r4, r5, lr}
90000ba2:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000ba4:	2000      	movs	r0, #0
{
90000ba6:	460d      	mov	r5, r1
90000ba8:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000baa:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000bac:	9001      	str	r0, [sp, #4]
90000bae:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000bb2:	f007 f989 	bl	90007ec8 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000bb6:	9801      	ldr	r0, [sp, #4]
90000bb8:	b120      	cbz	r0, 90000bc4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000bba:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000bbc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000bc0:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000bc2:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000bc4:	b005      	add	sp, #20
90000bc6:	bd30      	pop	{r4, r5, pc}

90000bc8 <_ZN20STM32TouchControllerD0Ev>:
90000bc8:	b510      	push	{r4, lr}
90000bca:	4604      	mov	r4, r0
90000bcc:	2104      	movs	r1, #4
90000bce:	f028 fc4d 	bl	9002946c <_ZdlPvj>
90000bd2:	4620      	mov	r0, r4
90000bd4:	bd10      	pop	{r4, pc}
90000bd6:	bf00      	nop

90000bd8 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
90000bd8:	b508      	push	{r3, lr}
    for (int id = 0; id <= 4; id++)
90000bda:	2300      	movs	r3, #0
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
90000bdc:	2b03      	cmp	r3, #3
90000bde:	d82b      	bhi.n	90000c38 <_ZN8touchgfx4GPIO4initEv+0x60>
90000be0:	e8df f003 	tbb	[pc, r3]
90000be4:	020c1620 	.word	0x020c1620
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000be8:	2140      	movs	r1, #64	@ 0x40
90000bea:	4814      	ldr	r0, [pc, #80]	@ (90000c3c <_ZN8touchgfx4GPIO4initEv+0x64>)
90000bec:	f007 fed6 	bl	9000899c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000bf0:	2801      	cmp	r0, #1
90000bf2:	d101      	bne.n	90000bf8 <_ZN8touchgfx4GPIO4initEv+0x20>
            GPIO_InvertedLevels[id] = 1;
90000bf4:	4b12      	ldr	r3, [pc, #72]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000bf6:	60d8      	str	r0, [r3, #12]
    for (int id = 0; id <= 4; id++)
90000bf8:	2304      	movs	r3, #4
90000bfa:	e7ef      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000bfc:	2140      	movs	r1, #64	@ 0x40
90000bfe:	4811      	ldr	r0, [pc, #68]	@ (90000c44 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c00:	f007 fecc 	bl	9000899c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c04:	2801      	cmp	r0, #1
90000c06:	d101      	bne.n	90000c0c <_ZN8touchgfx4GPIO4initEv+0x34>
            GPIO_InvertedLevels[id] = 1;
90000c08:	4b0d      	ldr	r3, [pc, #52]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c0a:	6098      	str	r0, [r3, #8]
    for (int id = 0; id <= 4; id++)
90000c0c:	2303      	movs	r3, #3
90000c0e:	e7e5      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000c10:	2180      	movs	r1, #128	@ 0x80
90000c12:	480c      	ldr	r0, [pc, #48]	@ (90000c44 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c14:	f007 fec2 	bl	9000899c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c18:	2801      	cmp	r0, #1
90000c1a:	d101      	bne.n	90000c20 <_ZN8touchgfx4GPIO4initEv+0x48>
            GPIO_InvertedLevels[id] = 1;
90000c1c:	4b08      	ldr	r3, [pc, #32]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c1e:	6058      	str	r0, [r3, #4]
    for (int id = 0; id <= 4; id++)
90000c20:	2302      	movs	r3, #2
90000c22:	e7db      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c24:	2108      	movs	r1, #8
90000c26:	4808      	ldr	r0, [pc, #32]	@ (90000c48 <_ZN8touchgfx4GPIO4initEv+0x70>)
90000c28:	f007 feb8 	bl	9000899c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c2c:	2801      	cmp	r0, #1
90000c2e:	d101      	bne.n	90000c34 <_ZN8touchgfx4GPIO4initEv+0x5c>
            GPIO_InvertedLevels[id] = 1;
90000c30:	4b03      	ldr	r3, [pc, #12]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c32:	6018      	str	r0, [r3, #0]
    for (int id = 0; id <= 4; id++)
90000c34:	2301      	movs	r3, #1
90000c36:	e7d1      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
}
90000c38:	bd08      	pop	{r3, pc}
90000c3a:	bf00      	nop
90000c3c:	58020000 	.word	0x58020000
90000c40:	240003bc 	.word	0x240003bc
90000c44:	58020400 	.word	0x58020400
90000c48:	58021800 	.word	0x58021800

90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000c4c:	2803      	cmp	r0, #3
90000c4e:	d827      	bhi.n	90000ca0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000c50:	e8df f000 	tbb	[pc, r0]
90000c54:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000c58:	4b12      	ldr	r3, [pc, #72]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c5a:	2140      	movs	r1, #64	@ 0x40
90000c5c:	4812      	ldr	r0, [pc, #72]	@ (90000ca8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000c5e:	68da      	ldr	r2, [r3, #12]
90000c60:	fab2 f282 	clz	r2, r2
90000c64:	0952      	lsrs	r2, r2, #5
90000c66:	f007 be9f 	b.w	900089a8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000c6a:	4b0e      	ldr	r3, [pc, #56]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c6c:	2140      	movs	r1, #64	@ 0x40
90000c6e:	480f      	ldr	r0, [pc, #60]	@ (90000cac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c70:	689a      	ldr	r2, [r3, #8]
90000c72:	fab2 f282 	clz	r2, r2
90000c76:	0952      	lsrs	r2, r2, #5
90000c78:	f007 be96 	b.w	900089a8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000c7c:	4b09      	ldr	r3, [pc, #36]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c7e:	2180      	movs	r1, #128	@ 0x80
90000c80:	480a      	ldr	r0, [pc, #40]	@ (90000cac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c82:	685a      	ldr	r2, [r3, #4]
90000c84:	fab2 f282 	clz	r2, r2
90000c88:	0952      	lsrs	r2, r2, #5
90000c8a:	f007 be8d 	b.w	900089a8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000c8e:	4b05      	ldr	r3, [pc, #20]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c90:	2108      	movs	r1, #8
90000c92:	4807      	ldr	r0, [pc, #28]	@ (90000cb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
90000c94:	681a      	ldr	r2, [r3, #0]
90000c96:	fab2 f282 	clz	r2, r2
90000c9a:	0952      	lsrs	r2, r2, #5
90000c9c:	f007 be84 	b.w	900089a8 <HAL_GPIO_WritePin>
}
90000ca0:	4770      	bx	lr
90000ca2:	bf00      	nop
90000ca4:	240003bc 	.word	0x240003bc
90000ca8:	58020000 	.word	0x58020000
90000cac:	58020400 	.word	0x58020400
90000cb0:	58021800 	.word	0x58021800

90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000cb4:	2803      	cmp	r0, #3
90000cb6:	d827      	bhi.n	90000d08 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
90000cb8:	e8df f000 	tbb	[pc, r0]
90000cbc:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000cc0:	4b12      	ldr	r3, [pc, #72]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cc2:	2140      	movs	r1, #64	@ 0x40
90000cc4:	4812      	ldr	r0, [pc, #72]	@ (90000d10 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
90000cc6:	68da      	ldr	r2, [r3, #12]
90000cc8:	3a00      	subs	r2, #0
90000cca:	bf18      	it	ne
90000ccc:	2201      	movne	r2, #1
90000cce:	f007 be6b 	b.w	900089a8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000cd2:	4b0e      	ldr	r3, [pc, #56]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cd4:	2140      	movs	r1, #64	@ 0x40
90000cd6:	480f      	ldr	r0, [pc, #60]	@ (90000d14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000cd8:	689a      	ldr	r2, [r3, #8]
90000cda:	3a00      	subs	r2, #0
90000cdc:	bf18      	it	ne
90000cde:	2201      	movne	r2, #1
90000ce0:	f007 be62 	b.w	900089a8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90000ce4:	4b09      	ldr	r3, [pc, #36]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000ce6:	2180      	movs	r1, #128	@ 0x80
90000ce8:	480a      	ldr	r0, [pc, #40]	@ (90000d14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000cea:	685a      	ldr	r2, [r3, #4]
90000cec:	3a00      	subs	r2, #0
90000cee:	bf18      	it	ne
90000cf0:	2201      	movne	r2, #1
90000cf2:	f007 be59 	b.w	900089a8 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000cf6:	4b05      	ldr	r3, [pc, #20]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cf8:	2108      	movs	r1, #8
90000cfa:	4807      	ldr	r0, [pc, #28]	@ (90000d18 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000cfc:	681a      	ldr	r2, [r3, #0]
90000cfe:	3a00      	subs	r2, #0
90000d00:	bf18      	it	ne
90000d02:	2201      	movne	r2, #1
90000d04:	f007 be50 	b.w	900089a8 <HAL_GPIO_WritePin>
}
90000d08:	4770      	bx	lr
90000d0a:	bf00      	nop
90000d0c:	240003bc 	.word	0x240003bc
90000d10:	58020000 	.word	0x58020000
90000d14:	58020400 	.word	0x58020400
90000d18:	58021800 	.word	0x58021800

90000d1c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d1c:	2803      	cmp	r0, #3
90000d1e:	d813      	bhi.n	90000d48 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000d20:	e8df f000 	tbb	[pc, r0]
90000d24:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d28:	2140      	movs	r1, #64	@ 0x40
90000d2a:	4808      	ldr	r0, [pc, #32]	@ (90000d4c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000d2c:	f007 be40 	b.w	900089b0 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000d30:	2140      	movs	r1, #64	@ 0x40
90000d32:	4807      	ldr	r0, [pc, #28]	@ (90000d50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d34:	f007 be3c 	b.w	900089b0 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000d38:	2180      	movs	r1, #128	@ 0x80
90000d3a:	4805      	ldr	r0, [pc, #20]	@ (90000d50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d3c:	f007 be38 	b.w	900089b0 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d40:	2108      	movs	r1, #8
90000d42:	4804      	ldr	r0, [pc, #16]	@ (90000d54 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
90000d44:	f007 be34 	b.w	900089b0 <HAL_GPIO_TogglePin>
}
90000d48:	4770      	bx	lr
90000d4a:	bf00      	nop
90000d4c:	58020000 	.word	0x58020000
90000d50:	58020400 	.word	0x58020400
90000d54:	58021800 	.word	0x58021800

90000d58 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000d58:	2000      	movs	r0, #0
90000d5a:	4770      	bx	lr

90000d5c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000d5c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000d5e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000d62:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000d66:	4770      	bx	lr

90000d68 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000d68:	2000      	movs	r0, #0
90000d6a:	4770      	bx	lr

90000d6c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d6c:	1e0a      	subs	r2, r1, #0
90000d6e:	4b03      	ldr	r3, [pc, #12]	@ (90000d7c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000d70:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d72:	bf18      	it	ne
90000d74:	2201      	movne	r2, #1
90000d76:	701a      	strb	r2, [r3, #0]
    }
90000d78:	4770      	bx	lr
90000d7a:	bf00      	nop
90000d7c:	240233d3 	.word	0x240233d3

90000d80 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000d80:	2000      	movs	r0, #0
90000d82:	4770      	bx	lr

90000d84 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000d84:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000d86:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000d88:	b103      	cbz	r3, 90000d8c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000d8a:	4718      	bx	r3
        }
    }
90000d8c:	4770      	bx	lr
90000d8e:	bf00      	nop

90000d90 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000d90:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000d94:	4770      	bx	lr
90000d96:	bf00      	nop

90000d98 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000d98:	4770      	bx	lr
90000d9a:	bf00      	nop

90000d9c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000d9c:	b510      	push	{r4, lr}
90000d9e:	4604      	mov	r4, r0
        swapFrameBuffers();
90000da0:	f010 fb28 	bl	900113f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000da4:	6823      	ldr	r3, [r4, #0]
90000da6:	4620      	mov	r0, r4
90000da8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
90000dac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000db0:	4718      	bx	r3
90000db2:	bf00      	nop

90000db4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000db4:	f002 b8c2 	b.w	90002f3c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000db8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000db8:	f002 b8c6 	b.w	90002f48 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000dbc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000dbc:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000dbe:	f002 f961 	bl	90003084 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000dc2:	4812      	ldr	r0, [pc, #72]	@ (90000e0c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000dc4:	2300      	movs	r3, #0
90000dc6:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000dca:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000dce:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dd2:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000dd6:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000dda:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000dde:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000de2:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000de6:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000de8:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000dec:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dee:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000df2:	1c5a      	adds	r2, r3, #1
90000df4:	d1f8      	bne.n	90000de8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000df6:	f1ac 0c20 	sub.w	ip, ip, #32
90000dfa:	f11c 0f20 	cmn.w	ip, #32
90000dfe:	d1f0      	bne.n	90000de2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000e00:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e04:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000e08:	bd10      	pop	{r4, pc}
90000e0a:	bf00      	nop
90000e0c:	e000ed00 	.word	0xe000ed00

90000e10 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000e10:	f002 b870 	b.w	90002ef4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000e14 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000e14:	f002 b9b8 	b.w	90003188 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000e18 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000e18:	f002 b9a2 	b.w	90003160 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000e1c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000e1c:	f002 b874 	b.w	90002f08 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e20:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e22:	4b09      	ldr	r3, [pc, #36]	@ (90000e48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e24:	881b      	ldrh	r3, [r3, #0]
90000e26:	428b      	cmp	r3, r1
90000e28:	d808      	bhi.n	90000e3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e2a:	4b08      	ldr	r3, [pc, #32]	@ (90000e4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e2c:	881b      	ldrh	r3, [r3, #0]
90000e2e:	4293      	cmp	r3, r2
90000e30:	d804      	bhi.n	90000e3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e32:	4807      	ldr	r0, [pc, #28]	@ (90000e50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e34:	4b07      	ldr	r3, [pc, #28]	@ (90000e54 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e36:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e38:	801a      	strh	r2, [r3, #0]
    }
90000e3a:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e3c:	4b06      	ldr	r3, [pc, #24]	@ (90000e58 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e3e:	219e      	movs	r1, #158	@ 0x9e
90000e40:	4a06      	ldr	r2, [pc, #24]	@ (90000e5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e42:	4807      	ldr	r0, [pc, #28]	@ (90000e60 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e44:	f028 fe88 	bl	90029b58 <__assert_func>
90000e48:	240233c8 	.word	0x240233c8
90000e4c:	240233ca 	.word	0x240233ca
90000e50:	240233ce 	.word	0x240233ce
90000e54:	240233d0 	.word	0x240233d0
90000e58:	9002ac58 	.word	0x9002ac58
90000e5c:	9002acbc 	.word	0x9002acbc
90000e60:	9002ad00 	.word	0x9002ad00

90000e64 <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000e64:	f00f be42 	b.w	90010aec <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000e68 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000e68:	f00f bd16 	b.w	90010898 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000e6c <_ZN11TouchGFXHALD0Ev>:
90000e6c:	b510      	push	{r4, lr}
90000e6e:	4604      	mov	r4, r0
90000e70:	2188      	movs	r1, #136	@ 0x88
90000e72:	f028 fafb 	bl	9002946c <_ZdlPvj>
90000e76:	4620      	mov	r0, r4
90000e78:	bd10      	pop	{r4, pc}
90000e7a:	bf00      	nop

90000e7c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
90000e7c:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000e80:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
90000e84:	4b0b      	ldr	r3, [pc, #44]	@ (90000eb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000e86:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000e88:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000e8a:	d00b      	beq.n	90000ea4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000e8c:	b94a      	cbnz	r2, 90000ea2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
90000e8e:	4a0a      	ldr	r2, [pc, #40]	@ (90000eb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
90000e90:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e94:	4909      	ldr	r1, [pc, #36]	@ (90000ebc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
90000e96:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
90000e98:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e9c:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000e9e:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ea0:	8013      	strh	r3, [r2, #0]
        }
    }
90000ea2:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000ea4:	2a00      	cmp	r2, #0
90000ea6:	d0fc      	beq.n	90000ea2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000ea8:	4a03      	ldr	r2, [pc, #12]	@ (90000eb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000eaa:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000eae:	4903      	ldr	r1, [pc, #12]	@ (90000ebc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000eb0:	e7f1      	b.n	90000e96 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000eb2:	bf00      	nop
90000eb4:	240233cc 	.word	0x240233cc
90000eb8:	240233ca 	.word	0x240233ca
90000ebc:	240233c8 	.word	0x240233c8

90000ec0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000ec0:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000ec2:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000ec6:	b118      	cbz	r0, 90000ed0 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000ec8:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000eca:	6803      	ldr	r3, [r0, #0]
90000ecc:	681b      	ldr	r3, [r3, #0]
90000ece:	4718      	bx	r3
    }
90000ed0:	4770      	bx	lr
90000ed2:	bf00      	nop

90000ed4 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000ed4:	6840      	ldr	r0, [r0, #4]
90000ed6:	4a04      	ldr	r2, [pc, #16]	@ (90000ee8 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000ed8:	6803      	ldr	r3, [r0, #0]
90000eda:	699b      	ldr	r3, [r3, #24]
90000edc:	4293      	cmp	r3, r2
90000ede:	d101      	bne.n	90000ee4 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000ee0:	2000      	movs	r0, #0
90000ee2:	4770      	bx	lr
        return dma.getDMAType();
90000ee4:	4718      	bx	r3
90000ee6:	bf00      	nop
90000ee8:	90000d59 	.word	0x90000d59

90000eec <_ZN11TouchGFXHAL10initializeEv>:
{
90000eec:	b538      	push	{r3, r4, r5, lr}
90000eee:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000ef0:	f002 facc 	bl	9000348c <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000ef4:	4a0b      	ldr	r2, [pc, #44]	@ (90000f24 <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000ef6:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000ef8:	490b      	ldr	r1, [pc, #44]	@ (90000f28 <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000efa:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
90000efe:	4293      	cmp	r3, r2
90000f00:	d10d      	bne.n	90000f1e <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f02:	4b0a      	ldr	r3, [pc, #40]	@ (90000f2c <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000f04:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f06:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f08:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000f0a:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
90000f0e:	4628      	mov	r0, r5
90000f10:	f7ff fdde 	bl	90000ad0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f14:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f16:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f18:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000f1c:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f1e:	4620      	mov	r0, r4
90000f20:	4798      	blx	r3
90000f22:	e7f2      	b.n	90000f0a <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f24:	90000d6d 	.word	0x90000d6d
90000f28:	d0000000 	.word	0xd0000000
90000f2c:	240233d3 	.word	0x240233d3

90000f30 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f30:	b1a9      	cbz	r1, 90000f5e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f32:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f34:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f36:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f38:	bf18      	it	ne
90000f3a:	2201      	movne	r2, #1
90000f3c:	490c      	ldr	r1, [pc, #48]	@ (90000f70 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f3e:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f40:	6802      	ldr	r2, [r0, #0]
90000f42:	490c      	ldr	r1, [pc, #48]	@ (90000f74 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f44:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
90000f48:	428a      	cmp	r2, r1
90000f4a:	d106      	bne.n	90000f5a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f4c:	1e19      	subs	r1, r3, #0
90000f4e:	4a0a      	ldr	r2, [pc, #40]	@ (90000f78 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f50:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f52:	bf18      	it	ne
90000f54:	2101      	movne	r1, #1
90000f56:	7011      	strb	r1, [r2, #0]
90000f58:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000f5a:	4619      	mov	r1, r3
90000f5c:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f5e:	4b07      	ldr	r3, [pc, #28]	@ (90000f7c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000f60:	f240 21d2 	movw	r1, #722	@ 0x2d2
90000f64:	4a06      	ldr	r2, [pc, #24]	@ (90000f80 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000f66:	4807      	ldr	r0, [pc, #28]	@ (90000f84 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000f68:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f6a:	f028 fdf5 	bl	90029b58 <__assert_func>
90000f6e:	bf00      	nop
90000f70:	240233d2 	.word	0x240233d2
90000f74:	90000d6d 	.word	0x90000d6d
90000f78:	240233d3 	.word	0x240233d3
90000f7c:	9002ad48 	.word	0x9002ad48
90000f80:	9002ad80 	.word	0x9002ad80
90000f84:	9002ad00 	.word	0x9002ad00

90000f88 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000f88:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000f8a:	6803      	ldr	r3, [r0, #0]
{
90000f8c:	4604      	mov	r4, r0
90000f8e:	4d14      	ldr	r5, [pc, #80]	@ (90000fe0 <_ZN11TouchGFXHAL9taskEntryEv+0x58>)
    enableLCDControllerInterrupt();
90000f90:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90000f94:	4798      	blx	r3
    enableInterrupts();
90000f96:	6823      	ldr	r3, [r4, #0]
90000f98:	4620      	mov	r0, r4
90000f9a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90000f9c:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000f9e:	f001 f9ed 	bl	9000237c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000fa2:	6823      	ldr	r3, [r4, #0]
90000fa4:	4620      	mov	r0, r4
90000fa6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fa8:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000faa:	2201      	movs	r2, #1
90000fac:	2180      	movs	r1, #128	@ 0x80
90000fae:	480d      	ldr	r0, [pc, #52]	@ (90000fe4 <_ZN11TouchGFXHAL9taskEntryEv+0x5c>)
90000fb0:	f007 fcfa 	bl	900089a8 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000fb4:	2201      	movs	r2, #1
90000fb6:	480c      	ldr	r0, [pc, #48]	@ (90000fe8 <_ZN11TouchGFXHAL9taskEntryEv+0x60>)
90000fb8:	4611      	mov	r1, r2
90000fba:	f007 fcf5 	bl	900089a8 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90000fbe:	f001 f9dd 	bl	9000237c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000fc2:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
90000fc4:	4620      	mov	r0, r4
90000fc6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fc8:	42ab      	cmp	r3, r5
90000fca:	d107      	bne.n	90000fdc <_ZN11TouchGFXHAL9taskEntryEv+0x54>
90000fcc:	f010 fa12 	bl	900113f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000fd0:	6823      	ldr	r3, [r4, #0]
90000fd2:	4620      	mov	r0, r4
90000fd4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90000fd8:	4798      	blx	r3
    }
90000fda:	e7f0      	b.n	90000fbe <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000fdc:	4798      	blx	r3
90000fde:	e7ee      	b.n	90000fbe <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000fe0:	90000d9d 	.word	0x90000d9d
90000fe4:	58020c00 	.word	0x58020c00
90000fe8:	58022800 	.word	0x58022800

90000fec <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
90000fec:	4601      	mov	r1, r0
    {
90000fee:	b508      	push	{r3, lr}
        return instance;
90000ff0:	4b05      	ldr	r3, [pc, #20]	@ (90001008 <IdleTaskHook+0x1c>)
90000ff2:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
90000ff4:	b121      	cbz	r1, 90001000 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
90000ff6:	2101      	movs	r1, #1
90000ff8:	f010 fa16 	bl	90011428 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000ffc:	2001      	movs	r0, #1
90000ffe:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90001000:	f010 fa12 	bl	90011428 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90001004:	2001      	movs	r0, #1
90001006:	bd08      	pop	{r3, pc}
90001008:	240233d4 	.word	0x240233d4

9000100c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000100c:	6940      	ldr	r0, [r0, #20]
9000100e:	4770      	bx	lr

90001010 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90001010:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
90001014:	4770      	bx	lr
90001016:	bf00      	nop

90001018 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90001018:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9000101a:	b10b      	cbz	r3, 90001020 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000101c:	2001      	movs	r0, #1
}
9000101e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001020:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
90001022:	3800      	subs	r0, #0
90001024:	bf18      	it	ne
90001026:	2001      	movne	r0, #1
90001028:	4770      	bx	lr
9000102a:	bf00      	nop

9000102c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000102c:	6880      	ldr	r0, [r0, #8]
9000102e:	4770      	bx	lr

90001030 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001030:	4770      	bx	lr
90001032:	bf00      	nop

90001034 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90001034:	3004      	adds	r0, #4
{
90001036:	468c      	mov	ip, r1
    *data = videoInfo;
90001038:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9000103a:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
9000103e:	4770      	bx	lr

90001040 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001040:	4770      	bx	lr
90001042:	bf00      	nop

90001044 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90001044:	b508      	push	{r3, lr}
    assert(0);
90001046:	4a03      	ldr	r2, [pc, #12]	@ (90001054 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
90001048:	f240 11f3 	movw	r1, #499	@ 0x1f3
9000104c:	4b02      	ldr	r3, [pc, #8]	@ (90001058 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
9000104e:	4803      	ldr	r0, [pc, #12]	@ (9000105c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90001050:	f028 fd82 	bl	90029b58 <__assert_func>
90001054:	9002aeac 	.word	0x9002aeac
90001058:	9002aea8 	.word	0x9002aea8
9000105c:	9002af08 	.word	0x9002af08

90001060 <_ZN20HardwareMJPEGDecoderD0Ev>:
90001060:	b510      	push	{r4, lr}
90001062:	4604      	mov	r4, r0
90001064:	2148      	movs	r1, #72	@ 0x48
90001066:	f028 fa01 	bl	9002946c <_ZdlPvj>
9000106a:	4620      	mov	r0, r4
9000106c:	bd10      	pop	{r4, pc}
9000106e:	bf00      	nop

90001070 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90001070:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90001072:	6803      	ldr	r3, [r0, #0]
90001074:	2901      	cmp	r1, #1
90001076:	4d30      	ldr	r5, [pc, #192]	@ (90001138 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
90001078:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
9000107a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000107c:	bf38      	it	cc
9000107e:	2101      	movcc	r1, #1
90001080:	42ab      	cmp	r3, r5
90001082:	460e      	mov	r6, r1
90001084:	d13f      	bne.n	90001106 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
90001086:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90001088:	42a9      	cmp	r1, r5
9000108a:	d947      	bls.n	9000111c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
9000108c:	1e6b      	subs	r3, r5, #1
9000108e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90001090:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90001092:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90001096:	b338      	cbz	r0, 900010e8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
90001098:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000109a:	2b0f      	cmp	r3, #15
9000109c:	d940      	bls.n	90001120 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
9000109e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010a0:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
900010a4:	68db      	ldr	r3, [r3, #12]
900010a6:	4631      	mov	r1, r6
900010a8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900010aa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900010ac:	2210      	movs	r2, #16
900010ae:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900010b0:	6803      	ldr	r3, [r0, #0]
900010b2:	691b      	ldr	r3, [r3, #16]
900010b4:	4798      	blx	r3
900010b6:	b198      	cbz	r0, 900010e0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
900010b8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
900010ba:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
900010bc:	b1a3      	cbz	r3, 900010e8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900010be:	6b62      	ldr	r2, [r4, #52]	@ 0x34
900010c0:	7a93      	ldrb	r3, [r2, #10]
900010c2:	7a51      	ldrb	r1, [r2, #9]
900010c4:	041b      	lsls	r3, r3, #16
900010c6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
900010ca:	7a11      	ldrb	r1, [r2, #8]
900010cc:	7ad2      	ldrb	r2, [r2, #11]
900010ce:	430b      	orrs	r3, r1
900010d0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010d4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
900010d6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010d8:	3a04      	subs	r2, #4
900010da:	441a      	add	r2, r3
900010dc:	61a2      	str	r2, [r4, #24]
}
900010de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900010e0:	230d      	movs	r3, #13
900010e2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
900010e6:	e7e7      	b.n	900010b8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010e8:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
900010ec:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900010ee:	18ca      	adds	r2, r1, r3
        val |= d[0];
900010f0:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
900010f2:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
900010f4:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
900010f6:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900010f8:	041b      	lsls	r3, r3, #16
900010fa:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900010fe:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001100:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
90001104:	e7e6      	b.n	900010d4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90001106:	4798      	blx	r3
90001108:	4286      	cmp	r6, r0
9000110a:	d907      	bls.n	9000111c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
9000110c:	6823      	ldr	r3, [r4, #0]
9000110e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001110:	42ab      	cmp	r3, r5
90001112:	d00e      	beq.n	90001132 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
90001114:	4620      	mov	r0, r4
90001116:	4798      	blx	r3
90001118:	4605      	mov	r5, r0
9000111a:	e7b7      	b.n	9000108c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
9000111c:	4635      	mov	r5, r6
9000111e:	e7b5      	b.n	9000108c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001120:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001122:	4b06      	ldr	r3, [pc, #24]	@ (9000113c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90001124:	4a06      	ldr	r2, [pc, #24]	@ (90001140 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90001126:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001128:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
9000112c:	4805      	ldr	r0, [pc, #20]	@ (90001144 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
9000112e:	f028 fd13 	bl	90029b58 <__assert_func>
    return videoInfo.number_of_frames;
90001132:	68a5      	ldr	r5, [r4, #8]
90001134:	e7aa      	b.n	9000108c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
90001136:	bf00      	nop
90001138:	9000102d 	.word	0x9000102d
9000113c:	9002af54 	.word	0x9002af54
90001140:	9002af68 	.word	0x9002af68
90001144:	9002af08 	.word	0x9002af08

90001148 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001148:	6943      	ldr	r3, [r0, #20]
{
9000114a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000114e:	2b00      	cmp	r3, #0
90001150:	f000 80c1 	beq.w	900012d6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
90001154:	4605      	mov	r5, r0
    if (reader != 0)
90001156:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
90001158:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
9000115a:	2800      	cmp	r0, #0
9000115c:	f000 80a1 	beq.w	900012a2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
90001160:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001162:	2b07      	cmp	r3, #7
90001164:	f240 80ac 	bls.w	900012c0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
90001168:	6803      	ldr	r3, [r0, #0]
9000116a:	4621      	mov	r1, r4
9000116c:	68db      	ldr	r3, [r3, #12]
9000116e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001170:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001172:	2208      	movs	r2, #8
90001174:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001176:	6803      	ldr	r3, [r0, #0]
90001178:	691b      	ldr	r3, [r3, #16]
9000117a:	4798      	blx	r3
9000117c:	2800      	cmp	r0, #0
9000117e:	f000 808c 	beq.w	9000129a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001182:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90001184:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001186:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90001188:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
9000118a:	2800      	cmp	r0, #0
9000118c:	f000 808b 	beq.w	900012a6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
90001190:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001192:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
90001194:	18a1      	adds	r1, r4, r2
90001196:	5ca2      	ldrb	r2, [r4, r2]
90001198:	788c      	ldrb	r4, [r1, #2]
9000119a:	784e      	ldrb	r6, [r1, #1]
9000119c:	0424      	lsls	r4, r4, #16
9000119e:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900011a2:	4314      	orrs	r4, r2
900011a4:	78ca      	ldrb	r2, [r1, #3]
900011a6:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
900011aa:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
900011ac:	f243 0630 	movw	r6, #12336	@ 0x3030
900011b0:	e03a      	b.n	90001228 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
900011b2:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900011b4:	2b07      	cmp	r3, #7
900011b6:	f240 8083 	bls.w	900012c0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
900011ba:	6803      	ldr	r3, [r0, #0]
900011bc:	4621      	mov	r1, r4
900011be:	68db      	ldr	r3, [r3, #12]
900011c0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011c2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011c4:	2208      	movs	r2, #8
900011c6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011c8:	6803      	ldr	r3, [r0, #0]
900011ca:	691b      	ldr	r3, [r3, #16]
900011cc:	4798      	blx	r3
900011ce:	b908      	cbnz	r0, 900011d4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
900011d0:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
900011d4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
900011d6:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
900011d8:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011da:	2800      	cmp	r0, #0
900011dc:	d079      	beq.n	900012d2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
900011de:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011e0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011e2:	18ca      	adds	r2, r1, r3
900011e4:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011e6:	7994      	ldrb	r4, [r2, #6]
900011e8:	f892 a005 	ldrb.w	sl, [r2, #5]
900011ec:	0424      	lsls	r4, r4, #16
900011ee:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011f2:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011f6:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
900011fa:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011fc:	f892 8003 	ldrb.w	r8, [r2, #3]
90001200:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001204:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001208:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000120c:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001210:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001214:	f246 3164 	movw	r1, #25444	@ 0x6364
90001218:	42b3      	cmp	r3, r6
9000121a:	bf08      	it	eq
9000121c:	428a      	cmpeq	r2, r1
9000121e:	bf0c      	ite	eq
90001220:	2301      	moveq	r3, #1
90001222:	2300      	movne	r3, #0
90001224:	d036      	beq.n	90001294 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90001226:	69ab      	ldr	r3, [r5, #24]
90001228:	441c      	add	r4, r3
9000122a:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000122c:	f104 0208 	add.w	r2, r4, #8
90001230:	429a      	cmp	r2, r3
90001232:	d22a      	bcs.n	9000128a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
90001234:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001236:	3409      	adds	r4, #9
        frameNumber++;
90001238:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000123a:	f024 0401 	bic.w	r4, r4, #1
9000123e:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90001242:	2800      	cmp	r0, #0
90001244:	d1b5      	bne.n	900011b2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90001246:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
90001248:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
9000124a:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
9000124e:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90001252:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90001254:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90001258:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
9000125c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001260:	188c      	adds	r4, r1, r2
        val |= d[0];
90001262:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90001264:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90001266:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
9000126a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
9000126e:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001272:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
90001276:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
9000127a:	0424      	lsls	r4, r4, #16
9000127c:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
90001280:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
90001284:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
90001288:	e7c4      	b.n	90001214 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
9000128a:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
9000128c:	6a2a      	ldr	r2, [r5, #32]
    return false;
9000128e:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90001290:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
90001294:	4618      	mov	r0, r3
90001296:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
9000129a:	230d      	movs	r3, #13
9000129c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900012a0:	e76f      	b.n	90001182 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900012a2:	1d22      	adds	r2, r4, #4
900012a4:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
900012a6:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
900012a8:	18a1      	adds	r1, r4, r2
        val |= d[0];
900012aa:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
900012ac:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
900012ae:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
900012b0:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
900012b2:	0424      	lsls	r4, r4, #16
900012b4:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
900012b8:	4334      	orrs	r4, r6
        val |= d[3] << 24;
900012ba:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
900012be:	e774      	b.n	900011aa <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012c0:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900012c2:	4b08      	ldr	r3, [pc, #32]	@ (900012e4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
900012c4:	4a08      	ldr	r2, [pc, #32]	@ (900012e8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
900012c6:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012c8:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
900012cc:	4807      	ldr	r0, [pc, #28]	@ (900012ec <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012ce:	f028 fc43 	bl	90029b58 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
900012d2:	461c      	mov	r4, r3
900012d4:	e7b7      	b.n	90001246 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900012d6:	4b06      	ldr	r3, [pc, #24]	@ (900012f0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
900012d8:	21f5      	movs	r1, #245	@ 0xf5
900012da:	4a06      	ldr	r2, [pc, #24]	@ (900012f4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
900012dc:	4803      	ldr	r0, [pc, #12]	@ (900012ec <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012de:	f028 fc3b 	bl	90029b58 <__assert_func>
900012e2:	bf00      	nop
900012e4:	9002af54 	.word	0x9002af54
900012e8:	9002af68 	.word	0x9002af68
900012ec:	9002af08 	.word	0x9002af08
900012f0:	9002afac 	.word	0x9002afac
900012f4:	9002aff8 	.word	0x9002aff8

900012f8 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900012f8:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900012fa:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900012fc:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900012fe:	4b0e      	ldr	r3, [pc, #56]	@ (90001338 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
90001300:	2001      	movs	r0, #1
90001302:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001304:	63e2      	str	r2, [r4, #60]	@ 0x3c
90001306:	6023      	str	r3, [r4, #0]
90001308:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000130c:	e9c4 2205 	strd	r2, r2, [r4, #20]
90001310:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001314:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
90001318:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000131c:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001320:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001324:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001328:	f00c fa40 	bl	9000d7ac <osSemaphoreNew>
9000132c:	4b03      	ldr	r3, [pc, #12]	@ (9000133c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
9000132e:	4602      	mov	r2, r0
}
90001330:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001332:	601a      	str	r2, [r3, #0]
}
90001334:	bd10      	pop	{r4, pc}
90001336:	bf00      	nop
90001338:	9002b150 	.word	0x9002b150
9000133c:	24000414 	.word	0x24000414

90001340 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001340:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001344:	2100      	movs	r1, #0
    if (reader != 0)
90001346:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
90001348:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000134a:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000134c:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
90001350:	2e00      	cmp	r6, #0
90001352:	f000 81b3 	beq.w	900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
90001356:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90001358:	2b47      	cmp	r3, #71	@ 0x47
9000135a:	f240 8270 	bls.w	9000183e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
9000135e:	6833      	ldr	r3, [r6, #0]
90001360:	4630      	mov	r0, r6
90001362:	68db      	ldr	r3, [r3, #12]
90001364:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001366:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001368:	2248      	movs	r2, #72	@ 0x48
9000136a:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000136c:	6803      	ldr	r3, [r0, #0]
9000136e:	691b      	ldr	r3, [r3, #16]
90001370:	4798      	blx	r3
90001372:	2800      	cmp	r0, #0
90001374:	f000 80b7 	beq.w	900014e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
90001378:	2300      	movs	r3, #0
    if (reader != 0)
9000137a:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000137c:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
9000137e:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
90001380:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
90001382:	2e00      	cmp	r6, #0
90001384:	f000 819b 	beq.w	900016be <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001388:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
9000138c:	2204      	movs	r2, #4
9000138e:	49c3      	ldr	r1, [pc, #780]	@ (9000169c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001390:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
90001394:	4620      	mov	r0, r4
90001396:	f028 fe83 	bl	9002a0a0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000139a:	2800      	cmp	r0, #0
9000139c:	f040 825f 	bne.w	9000185e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900013a0:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900013a4:	2204      	movs	r2, #4
900013a6:	49be      	ldr	r1, [pc, #760]	@ (900016a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
900013a8:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900013aa:	4448      	add	r0, r9
900013ac:	f028 fe78 	bl	9002a0a0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900013b0:	2800      	cmp	r0, #0
900013b2:	f040 8268 	bne.w	90001886 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900013b6:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900013ba:	2204      	movs	r2, #4
900013bc:	49b9      	ldr	r1, [pc, #740]	@ (900016a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
900013be:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900013c2:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900013c6:	f028 fe6b 	bl	9002a0a0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900013ca:	4680      	mov	r8, r0
900013cc:	2800      	cmp	r0, #0
900013ce:	f040 8250 	bne.w	90001872 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013d2:	7ca3      	ldrb	r3, [r4, #18]
900013d4:	7c62      	ldrb	r2, [r4, #17]
900013d6:	041b      	lsls	r3, r3, #16
900013d8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
900013dc:	7c22      	ldrb	r2, [r4, #16]
900013de:	4313      	orrs	r3, r2
900013e0:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
900013e2:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
900013e6:	f000 8233 	beq.w	90001850 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
900013ea:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900013ee:	2204      	movs	r2, #4
900013f0:	49ad      	ldr	r1, [pc, #692]	@ (900016a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
900013f2:	4448      	add	r0, r9
900013f4:	f028 fe54 	bl	9002a0a0 <strncmp>
    if (compare(offset, "hdrl", 4))
900013f8:	2800      	cmp	r0, #0
900013fa:	d078      	beq.n	900014ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900013fc:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013fe:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001402:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001406:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001408:	445c      	add	r4, fp
    return strncmp(src, str, num);
9000140a:	2204      	movs	r2, #4
9000140c:	49a7      	ldr	r1, [pc, #668]	@ (900016ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
9000140e:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90001410:	f028 fe46 	bl	9002a0a0 <strncmp>
    if (compare(offset, "avih", 4))
90001414:	2800      	cmp	r0, #0
90001416:	f000 80e6 	beq.w	900015e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
9000141a:	2307      	movs	r3, #7
9000141c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001420:	f1ba 0f00 	cmp.w	sl, #0
90001424:	f000 8190 	beq.w	90001748 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
90001428:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000142a:	2b0b      	cmp	r3, #11
9000142c:	f240 8207 	bls.w	9000183e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001430:	f8da 3000 	ldr.w	r3, [sl]
90001434:	4621      	mov	r1, r4
90001436:	4650      	mov	r0, sl
90001438:	68db      	ldr	r3, [r3, #12]
9000143a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000143c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000143e:	220c      	movs	r2, #12
90001440:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001442:	6803      	ldr	r3, [r0, #0]
90001444:	691b      	ldr	r3, [r3, #16]
90001446:	4798      	blx	r3
90001448:	2800      	cmp	r0, #0
9000144a:	f000 8121 	beq.w	90001690 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000144e:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
90001452:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
90001454:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001456:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 900016b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
9000145a:	f04f 090d 	mov.w	r9, #13
9000145e:	e003      	b.n	90001468 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001460:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
90001464:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
90001466:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001468:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
9000146c:	2e00      	cmp	r6, #0
9000146e:	d052      	beq.n	90001516 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001470:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001472:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001474:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
90001476:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001478:	1afb      	subs	r3, r7, r3
9000147a:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000147c:	f028 fe10 	bl	9002a0a0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001480:	2800      	cmp	r0, #0
90001482:	d051      	beq.n	90001528 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
90001484:	f1ba 0f00 	cmp.w	sl, #0
90001488:	f040 80a8 	bne.w	900015dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
9000148c:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000148e:	42a3      	cmp	r3, r4
90001490:	d94d      	bls.n	9000152e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001492:	3404      	adds	r4, #4
    if (reader != 0)
90001494:	b386      	cbz	r6, 900014f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
90001496:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
90001498:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
9000149c:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
9000149e:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014a0:	eb01 0204 	add.w	r2, r1, r4
900014a4:	5d09      	ldrb	r1, [r1, r4]
900014a6:	7894      	ldrb	r4, [r2, #2]
900014a8:	7850      	ldrb	r0, [r2, #1]
900014aa:	ea4f 4404 	mov.w	r4, r4, lsl #16
900014ae:	78d2      	ldrb	r2, [r2, #3]
900014b0:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
900014b4:	ea44 0401 	orr.w	r4, r4, r1
900014b8:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
900014bc:	443c      	add	r4, r7
        if (length > aviBufferLength)
900014be:	f240 81be 	bls.w	9000183e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900014c2:	6833      	ldr	r3, [r6, #0]
900014c4:	4621      	mov	r1, r4
900014c6:	4630      	mov	r0, r6
900014c8:	68db      	ldr	r3, [r3, #12]
900014ca:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014cc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900014ce:	220c      	movs	r2, #12
900014d0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900014d2:	6803      	ldr	r3, [r0, #0]
900014d4:	691b      	ldr	r3, [r3, #16]
900014d6:	4798      	blx	r3
900014d8:	2800      	cmp	r0, #0
900014da:	d1c1      	bne.n	90001460 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
900014dc:	f04f 0a0d 	mov.w	sl, #13
900014e0:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
900014e4:	e7be      	b.n	90001464 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
900014e6:	230d      	movs	r3, #13
900014e8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900014ec:	e744      	b.n	90001378 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
900014ee:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900014f2:	f04f 0801 	mov.w	r8, #1
900014f6:	e786      	b.n	90001406 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
900014f8:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
900014fa:	1913      	adds	r3, r2, r4
        val |= d[0];
900014fc:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
900014fe:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001500:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001502:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001504:	0424      	lsls	r4, r4, #16
90001506:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000150a:	4314      	orrs	r4, r2
        val |= d[3] << 24;
9000150c:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
90001510:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001512:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
90001516:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
90001518:	2204      	movs	r2, #4
9000151a:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
9000151c:	2600      	movs	r6, #0
9000151e:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001520:	f028 fdbe 	bl	9002a0a0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001524:	2800      	cmp	r0, #0
90001526:	d1ad      	bne.n	90001484 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
90001528:	f1ba 0f00 	cmp.w	sl, #0
9000152c:	d156      	bne.n	900015dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
9000152e:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001532:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001534:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
90001536:	2e00      	cmp	r6, #0
90001538:	f000 8118 	beq.w	9000176c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
9000153c:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
9000153e:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001540:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001544:	f104 0e02 	add.w	lr, r4, #2
90001548:	f104 0c01 	add.w	ip, r4, #1
9000154c:	f811 8004 	ldrb.w	r8, [r1, r4]
90001550:	1ce0      	adds	r0, r4, #3
90001552:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
90001556:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001558:	f811 900c 	ldrb.w	r9, [r1, ip]
9000155c:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001560:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001564:	ea43 0308 	orr.w	r3, r3, r8
90001568:	f811 8000 	ldrb.w	r8, [r1, r0]
9000156c:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001570:	443b      	add	r3, r7
90001572:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001574:	f811 300e 	ldrb.w	r3, [r1, lr]
90001578:	f811 e00c 	ldrb.w	lr, [r1, ip]
9000157c:	f811 c004 	ldrb.w	ip, [r1, r4]
90001580:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001584:	5c09      	ldrb	r1, [r1, r0]
90001586:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
9000158a:	ea44 040c 	orr.w	r4, r4, ip
9000158e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
90001592:	443c      	add	r4, r7
        if (length > aviBufferLength)
90001594:	f240 8153 	bls.w	9000183e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001598:	6833      	ldr	r3, [r6, #0]
9000159a:	4621      	mov	r1, r4
9000159c:	4630      	mov	r0, r6
9000159e:	68db      	ldr	r3, [r3, #12]
900015a0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900015a2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900015a4:	2204      	movs	r2, #4
900015a6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900015a8:	6803      	ldr	r3, [r0, #0]
900015aa:	691b      	ldr	r3, [r3, #16]
900015ac:	4798      	blx	r3
900015ae:	2800      	cmp	r0, #0
900015b0:	f000 80cd 	beq.w	9000174e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
900015b4:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900015b6:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900015b8:	2b00      	cmp	r3, #0
900015ba:	f000 816e 	beq.w	9000189a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900015be:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900015c0:	2204      	movs	r2, #4
900015c2:	493b      	ldr	r1, [pc, #236]	@ (900016b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
900015c4:	f028 fd6c 	bl	9002a0a0 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900015c8:	2800      	cmp	r0, #0
900015ca:	f040 80ca 	bne.w	90001762 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
900015ce:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900015d0:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900015d2:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
900015d4:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
900015d6:	622b      	str	r3, [r5, #32]
}
900015d8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900015dc:	230a      	movs	r3, #10
900015de:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900015e2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
900015e6:	f1b8 0f00 	cmp.w	r8, #0
900015ea:	f43f af19 	beq.w	90001420 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
900015ee:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
900015f2:	f1ba 0f00 	cmp.w	sl, #0
900015f6:	f000 80d4 	beq.w	900017a2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
900015fa:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900015fc:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 900016b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
90001600:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001602:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001604:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001608:	f812 8001 	ldrb.w	r8, [r2, r1]
9000160c:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001610:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
90001614:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
90001618:	4438      	add	r0, r7
9000161a:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000161c:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001620:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001622:	f89e 7001 	ldrb.w	r7, [lr, #1]
90001626:	041b      	lsls	r3, r3, #16
90001628:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000162c:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001630:	ea43 0308 	orr.w	r3, r3, r8
90001634:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90001638:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000163a:	fbac c303 	umull	ip, r3, ip, r3
9000163e:	099b      	lsrs	r3, r3, #6
90001640:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001642:	78bb      	ldrb	r3, [r7, #2]
90001644:	f897 e001 	ldrb.w	lr, [r7, #1]
90001648:	041b      	lsls	r3, r3, #16
9000164a:	f812 c000 	ldrb.w	ip, [r2, r0]
9000164e:	78ff      	ldrb	r7, [r7, #3]
90001650:	1850      	adds	r0, r2, r1
90001652:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001656:	ea43 030c 	orr.w	r3, r3, ip
9000165a:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000165e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001660:	7883      	ldrb	r3, [r0, #2]
90001662:	7847      	ldrb	r7, [r0, #1]
90001664:	041b      	lsls	r3, r3, #16
90001666:	5c51      	ldrb	r1, [r2, r1]
90001668:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000166c:	430b      	orrs	r3, r1
9000166e:	78c1      	ldrb	r1, [r0, #3]
90001670:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001674:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
90001676:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001678:	788b      	ldrb	r3, [r1, #2]
9000167a:	7848      	ldrb	r0, [r1, #1]
9000167c:	041b      	lsls	r3, r3, #16
9000167e:	5d92      	ldrb	r2, [r2, r6]
90001680:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001684:	4313      	orrs	r3, r2
90001686:	78ca      	ldrb	r2, [r1, #3]
90001688:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000168c:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000168e:	e6cb      	b.n	90001428 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
90001690:	230d      	movs	r3, #13
90001692:	469a      	mov	sl, r3
90001694:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001698:	e6db      	b.n	90001452 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
9000169a:	bf00      	nop
9000169c:	9002b02c 	.word	0x9002b02c
900016a0:	9002b0e4 	.word	0x9002b0e4
900016a4:	9002b0dc 	.word	0x9002b0dc
900016a8:	9002b0b0 	.word	0x9002b0b0
900016ac:	9002b0c4 	.word	0x9002b0c4
900016b0:	9002b0d4 	.word	0x9002b0d4
900016b4:	9002b0cc 	.word	0x9002b0cc
900016b8:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
900016bc:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
900016be:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
900016c2:	2204      	movs	r2, #4
900016c4:	4976      	ldr	r1, [pc, #472]	@ (900018a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
900016c6:	eb09 0007 	add.w	r0, r9, r7
900016ca:	f028 fce9 	bl	9002a0a0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900016ce:	2800      	cmp	r0, #0
900016d0:	f040 80c5 	bne.w	9000185e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900016d4:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900016d8:	2204      	movs	r2, #4
900016da:	4972      	ldr	r1, [pc, #456]	@ (900018a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
900016dc:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900016de:	4448      	add	r0, r9
900016e0:	f028 fcde 	bl	9002a0a0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900016e4:	2800      	cmp	r0, #0
900016e6:	f040 80ce 	bne.w	90001886 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900016ea:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900016ee:	2204      	movs	r2, #4
900016f0:	496d      	ldr	r1, [pc, #436]	@ (900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016f2:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900016f6:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900016fa:	f028 fcd1 	bl	9002a0a0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900016fe:	4680      	mov	r8, r0
90001700:	2800      	cmp	r0, #0
90001702:	f040 80b6 	bne.w	90001872 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
90001706:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000170a:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
9000170e:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
90001712:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001714:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001716:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001718:	0424      	lsls	r4, r4, #16
9000171a:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000171e:	4314      	orrs	r4, r2
    assert(aviListSize);
90001720:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
90001724:	f000 8094 	beq.w	90001850 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001728:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000172c:	2204      	movs	r2, #4
9000172e:	495f      	ldr	r1, [pc, #380]	@ (900018ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001730:	4448      	add	r0, r9
90001732:	f028 fcb5 	bl	9002a0a0 <strncmp>
    if (compare(offset, "hdrl", 4))
90001736:	b970      	cbnz	r0, 90001756 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
90001738:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000173c:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001740:	4448      	add	r0, r9
90001742:	f04f 0a00 	mov.w	sl, #0
90001746:	e65f      	b.n	90001408 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001748:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
9000174c:	e683      	b.n	90001456 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
9000174e:	230d      	movs	r3, #13
90001750:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001754:	e72e      	b.n	900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001756:	2306      	movs	r3, #6
    offset += 4;
90001758:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000175c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001760:	e7ee      	b.n	90001740 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001762:	230b      	movs	r3, #11
90001764:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90001768:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000176c:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
9000176e:	1902      	adds	r2, r0, r4
        val |= d[0];
90001770:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
90001772:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
90001774:	7893      	ldrb	r3, [r2, #2]
90001776:	041b      	lsls	r3, r3, #16
90001778:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
9000177c:	430b      	orrs	r3, r1
        val |= d[3] << 24;
9000177e:	78d1      	ldrb	r1, [r2, #3]
90001780:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001784:	443b      	add	r3, r7
90001786:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
90001788:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
9000178a:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
9000178c:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
9000178e:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001790:	0424      	lsls	r4, r4, #16
90001792:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90001796:	430c      	orrs	r4, r1
        val |= d[3] << 24;
90001798:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
9000179c:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
9000179e:	4420      	add	r0, r4
900017a0:	e70e      	b.n	900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900017a2:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
900017a4:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017a8:	f8df e124 	ldr.w	lr, [pc, #292]	@ 900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
900017ac:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
900017b0:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
900017b4:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
900017b8:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
900017bc:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
900017be:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
900017c2:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
900017c6:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
900017ca:	041b      	lsls	r3, r3, #16
900017cc:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900017d0:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
900017d4:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
900017d8:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017dc:	fbae e303 	umull	lr, r3, lr, r3
900017e0:	099b      	lsrs	r3, r3, #6
900017e2:	606b      	str	r3, [r5, #4]
        val |= d[0];
900017e4:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
900017e8:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
900017ec:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
900017ee:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900017f0:	041b      	lsls	r3, r3, #16
900017f2:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
900017f6:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
900017fa:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
900017fe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
90001802:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90001804:	60ab      	str	r3, [r5, #8]
        val |= d[0];
90001806:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
9000180a:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
9000180e:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
90001812:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
90001816:	041b      	lsls	r3, r3, #16
90001818:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
9000181c:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001820:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
90001824:	60eb      	str	r3, [r5, #12]
        val |= d[0];
90001826:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
90001828:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000182a:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000182c:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
9000182e:	041b      	lsls	r3, r3, #16
90001830:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001834:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001836:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000183a:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000183c:	e60b      	b.n	90001456 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000183e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001840:	4b1b      	ldr	r3, [pc, #108]	@ (900018b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
90001842:	4a1c      	ldr	r2, [pc, #112]	@ (900018b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
90001844:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001846:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
9000184a:	481b      	ldr	r0, [pc, #108]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000184c:	f028 f984 	bl	90029b58 <__assert_func>
    assert(aviListSize);
90001850:	4b1a      	ldr	r3, [pc, #104]	@ (900018bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
90001852:	f44f 71a9 	mov.w	r1, #338	@ 0x152
90001856:	4a1a      	ldr	r2, [pc, #104]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001858:	4817      	ldr	r0, [pc, #92]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000185a:	f028 f97d 	bl	90029b58 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
9000185e:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001860:	4b18      	ldr	r3, [pc, #96]	@ (900018c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
90001862:	4a17      	ldr	r2, [pc, #92]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001864:	f240 113d 	movw	r1, #317	@ 0x13d
        lastError = AVI_ERROR_NOT_RIFF;
90001868:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
9000186c:	4812      	ldr	r0, [pc, #72]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000186e:	f028 f973 	bl	90029b58 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001872:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
90001874:	4b14      	ldr	r3, [pc, #80]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
90001876:	4a12      	ldr	r2, [pc, #72]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001878:	f44f 71a6 	mov.w	r1, #332	@ 0x14c
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
9000187c:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
90001880:	480d      	ldr	r0, [pc, #52]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001882:	f028 f969 	bl	90029b58 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001886:	2004      	movs	r0, #4
        assert(!"AVI header not found");
90001888:	4b10      	ldr	r3, [pc, #64]	@ (900018cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
9000188a:	4a0d      	ldr	r2, [pc, #52]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
9000188c:	f240 1145 	movw	r1, #325	@ 0x145
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001890:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
90001894:	4808      	ldr	r0, [pc, #32]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001896:	f028 f95f 	bl	90029b58 <__assert_func>
        src = (const char*)movieData + offset;
9000189a:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000189c:	4420      	add	r0, r4
9000189e:	e68f      	b.n	900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900018a0:	9002b02c 	.word	0x9002b02c
900018a4:	9002b0e4 	.word	0x9002b0e4
900018a8:	9002b0dc 	.word	0x9002b0dc
900018ac:	9002b0b0 	.word	0x9002b0b0
900018b0:	9002af54 	.word	0x9002af54
900018b4:	9002af68 	.word	0x9002af68
900018b8:	9002af08 	.word	0x9002af08
900018bc:	9002b0b8 	.word	0x9002b0b8
900018c0:	9002b050 	.word	0x9002b050
900018c4:	9002b034 	.word	0x9002b034
900018c8:	9002b098 	.word	0x9002b098
900018cc:	9002b080 	.word	0x9002b080
900018d0:	10624dd3 	.word	0x10624dd3

900018d4 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900018d4:	b410      	push	{r4}
    reader = 0; /* not using reader */
900018d6:	2400      	movs	r4, #0
    movieLength = length;
900018d8:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
900018dc:	6304      	str	r4, [r0, #48]	@ 0x30
}
900018de:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900018e2:	f7ff bd2d 	b.w	90001340 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900018e6:	bf00      	nop

900018e8 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900018e8:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900018ea:	680b      	ldr	r3, [r1, #0]
{
900018ec:	4604      	mov	r4, r0
    movieData = 0;
900018ee:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
900018f0:	4608      	mov	r0, r1
900018f2:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
900018f4:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
900018f8:	4798      	blx	r3
900018fa:	4603      	mov	r3, r0
    readVideoHeader();
900018fc:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
900018fe:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90001900:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
90001904:	f7ff bd1c 	b.w	90001340 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001908 <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
90001908:	b5f0      	push	{r4, r5, r6, r7, lr}
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
9000190a:	2400      	movs	r4, #0
9000190c:	4d20      	ldr	r5, [pc, #128]	@ (90001990 <JPEG_Decode_DMA+0x88>)
    {
9000190e:	461e      	mov	r6, r3
        JPEG_OUT_Read_BufferIndex = 0;
        JPEG_OUT_Write_BufferIndex = 0;
90001910:	4b20      	ldr	r3, [pc, #128]	@ (90001994 <JPEG_Decode_DMA+0x8c>)
        JPEG_output_is_paused = 0;
90001912:	602c      	str	r4, [r5, #0]
    {
90001914:	b083      	sub	sp, #12
        JPEG_OUT_Read_BufferIndex = 0;
90001916:	4d20      	ldr	r5, [pc, #128]	@ (90001998 <JPEG_Decode_DMA+0x90>)
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001918:	4f20      	ldr	r7, [pc, #128]	@ (9000199c <JPEG_Decode_DMA+0x94>)
        JPEG_OUT_Read_BufferIndex = 0;
9000191a:	602c      	str	r4, [r5, #0]
        MCU_BlockIndex = 0;
9000191c:	4d20      	ldr	r5, [pc, #128]	@ (900019a0 <JPEG_Decode_DMA+0x98>)
        JPEG_OUT_Write_BufferIndex = 0;
9000191e:	601c      	str	r4, [r3, #0]
        MCU_BlockIndex = 0;
90001920:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001922:	4d20      	ldr	r5, [pc, #128]	@ (900019a4 <JPEG_Decode_DMA+0x9c>)
90001924:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001926:	68fd      	ldr	r5, [r7, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001928:	6b7f      	ldr	r7, [r7, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000192a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9000192e:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001930:	ebb7 0c04 	subs.w	ip, r7, r4
        FrameBufferAddress = output;
90001934:	4f1c      	ldr	r7, [pc, #112]	@ (900019a8 <JPEG_Decode_DMA+0xa0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001936:	ea4f 15c5 	mov.w	r5, r5, lsl #7
9000193a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000193e:	bf18      	it	ne
90001940:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001944:	9500      	str	r5, [sp, #0]
        FrameBufferAddress = output;
90001946:	603e      	str	r6, [r7, #0]
        JPEG_InputImageIndex = 0;
90001948:	4e18      	ldr	r6, [pc, #96]	@ (900019ac <JPEG_Decode_DMA+0xa4>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000194a:	4d19      	ldr	r5, [pc, #100]	@ (900019b0 <JPEG_Decode_DMA+0xa8>)
        JPEG_InputImageIndex = 0;
9000194c:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
9000194e:	4e19      	ldr	r6, [pc, #100]	@ (900019b4 <JPEG_Decode_DMA+0xac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001950:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001954:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageAddress = (uint32_t)input;
90001958:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000195a:	4e17      	ldr	r6, [pc, #92]	@ (900019b8 <JPEG_Decode_DMA+0xb0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000195c:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000195e:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001960:	2201      	movs	r2, #1
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001962:	702c      	strb	r4, [r5, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001964:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001966:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
9000196a:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
9000196c:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
9000196e:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001970:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
90001972:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
90001974:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
90001978:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
9000197c:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
90001980:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001984:	f008 f9f6 	bl	90009d74 <HAL_JPEG_Decode_DMA>

        return 0;
    }
90001988:	4620      	mov	r0, r4
9000198a:	b003      	add	sp, #12
9000198c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000198e:	bf00      	nop
90001990:	24006030 	.word	0x24006030
90001994:	24006024 	.word	0x24006024
90001998:	24000410 	.word	0x24000410
9000199c:	240003cc 	.word	0x240003cc
900019a0:	24000418 	.word	0x24000418
900019a4:	24006020 	.word	0x24006020
900019a8:	24006044 	.word	0x24006044
900019ac:	24006040 	.word	0x24006040
900019b0:	24000004 	.word	0x24000004
900019b4:	24006038 	.word	0x24006038
900019b8:	2400603c 	.word	0x2400603c

900019bc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900019bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900019c0:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900019c2:	2402      	movs	r4, #2
900019c4:	483d      	ldr	r0, [pc, #244]	@ (90001abc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x100>)
900019c6:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019c8:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900019ca:	0725      	lsls	r5, r4, #28
900019cc:	d002      	beq.n	900019d4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900019ce:	f024 040f 	bic.w	r4, r4, #15
900019d2:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019d4:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019d6:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
900019d8:	4d39      	ldr	r5, [pc, #228]	@ (90001ac0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019da:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900019dc:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
900019e0:	f8df a0f8 	ldr.w	sl, [pc, #248]	@ 90001adc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>
900019e4:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019e6:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019e8:	4f36      	ldr	r7, [pc, #216]	@ (90001ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019ea:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019ee:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 90001ae0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>
900019f2:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 90001ae4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019f6:	bf18      	it	ne
900019f8:	f1c4 0410 	rsbne	r4, r4, #16
900019fc:	6084      	str	r4, [r0, #8]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
900019fe:	4832      	ldr	r0, [pc, #200]	@ (90001ac8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a00:	f7ff ff82 	bl	90001908 <JPEG_Decode_DMA>
        DMA2D_reference = dma;
90001a04:	4c31      	ldr	r4, [pc, #196]	@ (90001acc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
90001a06:	6c73      	ldr	r3, [r6, #68]	@ 0x44
90001a08:	4e31      	ldr	r6, [pc, #196]	@ (90001ad0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
90001a0a:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001a0c:	f8da 3000 	ldr.w	r3, [sl]
90001a10:	b10b      	cbz	r3, 90001a16 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5a>
90001a12:	6833      	ldr	r3, [r6, #0]
90001a14:	bb6b      	cbnz	r3, 90001a72 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xb6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a16:	6828      	ldr	r0, [r5, #0]
90001a18:	7a03      	ldrb	r3, [r0, #8]
90001a1a:	b93b      	cbnz	r3, 90001a2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
90001a1c:	4b2d      	ldr	r3, [pc, #180]	@ (90001ad4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a1e:	681b      	ldr	r3, [r3, #0]
90001a20:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a24:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a28:	2b01      	cmp	r3, #1
90001a2a:	d03b      	beq.n	90001aa4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe8>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a2c:	683b      	ldr	r3, [r7, #0]
90001a2e:	2b01      	cmp	r3, #1
90001a30:	d00d      	beq.n	90001a4e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x92>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a32:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a34:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a36:	6823      	ldr	r3, [r4, #0]
90001a38:	2b02      	cmp	r3, #2
90001a3a:	d024      	beq.n	90001a86 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xca>
        } while (JpegProcessing_End != 1);
90001a3c:	6823      	ldr	r3, [r4, #0]
90001a3e:	2b01      	cmp	r3, #1
90001a40:	d1e4      	bne.n	90001a0c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001a42:	2300      	movs	r3, #0
90001a44:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a48:	6033      	str	r3, [r6, #0]
}
90001a4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a4e:	f8d9 3000 	ldr.w	r3, [r9]
90001a52:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a56:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a5a:	2b00      	cmp	r3, #0
90001a5c:	d1e9      	bne.n	90001a32 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
90001a5e:	f8da 3000 	ldr.w	r3, [sl]
90001a62:	2b00      	cmp	r3, #0
90001a64:	d1e5      	bne.n	90001a32 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a66:	2102      	movs	r1, #2
90001a68:	4817      	ldr	r0, [pc, #92]	@ (90001ac8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_output_is_paused = 0;
90001a6a:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a6c:	f008 fb32 	bl	9000a0d4 <HAL_JPEG_Resume>
90001a70:	e7df      	b.n	90001a32 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001a72:	4815      	ldr	r0, [pc, #84]	@ (90001ac8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a74:	f009 f8ec 	bl	9000ac50 <HAL_JPEG_GetState>
90001a78:	2804      	cmp	r0, #4
90001a7a:	d01a      	beq.n	90001ab2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf6>
        return 1;
90001a7c:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a7e:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a80:	6823      	ldr	r3, [r4, #0]
90001a82:	2b02      	cmp	r3, #2
90001a84:	d1da      	bne.n	90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x80>
                SEM_WAIT(semDecodingDone);
90001a86:	4b14      	ldr	r3, [pc, #80]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
90001a88:	f04f 31ff 	mov.w	r1, #4294967295
90001a8c:	6818      	ldr	r0, [r3, #0]
90001a8e:	f00b fed9 	bl	9000d844 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001a92:	6823      	ldr	r3, [r4, #0]
90001a94:	2b01      	cmp	r3, #1
90001a96:	d1b9      	bne.n	90001a0c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001a98:	2300      	movs	r3, #0
90001a9a:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a9e:	6033      	str	r3, [r6, #0]
}
90001aa0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001aa4:	6833      	ldr	r3, [r6, #0]
90001aa6:	2b00      	cmp	r3, #0
90001aa8:	d1c0      	bne.n	90001a2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
        DMA2D_reference->start();
90001aaa:	6803      	ldr	r3, [r0, #0]
90001aac:	691b      	ldr	r3, [r3, #16]
90001aae:	4798      	blx	r3
90001ab0:	e7bc      	b.n	90001a2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
            HAL_JPEG_Abort(hjpeg);
90001ab2:	4805      	ldr	r0, [pc, #20]	@ (90001ac8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001ab4:	f008 f9dc 	bl	90009e70 <HAL_JPEG_Abort>
90001ab8:	e7e0      	b.n	90001a7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90001aba:	bf00      	nop
90001abc:	240003cc 	.word	0x240003cc
90001ac0:	24006028 	.word	0x24006028
90001ac4:	24006030 	.word	0x24006030
90001ac8:	2400919c 	.word	0x2400919c
90001acc:	2400602c 	.word	0x2400602c
90001ad0:	2400040c 	.word	0x2400040c
90001ad4:	24000410 	.word	0x24000410
90001ad8:	24000414 	.word	0x24000414
90001adc:	24006034 	.word	0x24006034
90001ae0:	24006024 	.word	0x24006024
90001ae4:	24000004 	.word	0x24000004

90001ae8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001ae8:	6943      	ldr	r3, [r0, #20]
{
90001aea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001aee:	2b00      	cmp	r3, #0
90001af0:	f000 80ad 	beq.w	90001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001af4:	4604      	mov	r4, r0
    if (reader != 0)
90001af6:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001af8:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001afa:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001afc:	2800      	cmp	r0, #0
90001afe:	d05f      	beq.n	90001bc0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001b00:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001b02:	2b07      	cmp	r3, #7
90001b04:	f240 80a9 	bls.w	90001c5a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001b08:	6803      	ldr	r3, [r0, #0]
90001b0a:	4629      	mov	r1, r5
90001b0c:	68db      	ldr	r3, [r3, #12]
90001b0e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001b10:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001b12:	2208      	movs	r2, #8
90001b14:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001b16:	6803      	ldr	r3, [r0, #0]
90001b18:	691b      	ldr	r3, [r3, #16]
90001b1a:	4798      	blx	r3
90001b1c:	2800      	cmp	r0, #0
90001b1e:	d04a      	beq.n	90001bb6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001b20:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001b22:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b24:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b28:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b2a:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b2c:	2800      	cmp	r0, #0
90001b2e:	d046      	beq.n	90001bbe <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b30:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b32:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b36:	1b52      	subs	r2, r2, r5
90001b38:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b3a:	eb03 070c 	add.w	r7, r3, ip
90001b3e:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b42:	eb03 0805 	add.w	r8, r3, r5
90001b46:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b4a:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b4e:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b52:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b56:	78bd      	ldrb	r5, [r7, #2]
90001b58:	78ff      	ldrb	r7, [r7, #3]
90001b5a:	042d      	lsls	r5, r5, #16
90001b5c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001b60:	ea45 050e 	orr.w	r5, r5, lr
90001b64:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b68:	189f      	adds	r7, r3, r2
90001b6a:	5c9b      	ldrb	r3, [r3, r2]
90001b6c:	787a      	ldrb	r2, [r7, #1]
90001b6e:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001b72:	eb01 0e05 	add.w	lr, r1, r5
90001b76:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001b78:	f10e 0208 	add.w	r2, lr, #8
90001b7c:	429a      	cmp	r2, r3
90001b7e:	d213      	bcs.n	90001ba8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001b80:	f243 0330 	movw	r3, #12336	@ 0x3030
90001b84:	459c      	cmp	ip, r3
90001b86:	d138      	bne.n	90001bfa <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b88:	f246 3364 	movw	r3, #25444	@ 0x6364
90001b8c:	429f      	cmp	r7, r3
90001b8e:	d134      	bne.n	90001bfa <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b90:	2d00      	cmp	r5, #0
90001b92:	d136      	bne.n	90001c02 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b94:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001b96:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b98:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001b9c:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001b9e:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001ba0:	d002      	beq.n	90001ba8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001ba2:	2001      	movs	r0, #1
}
90001ba4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001ba8:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001baa:	6a23      	ldr	r3, [r4, #32]
90001bac:	2000      	movs	r0, #0
        frameNumber = 1;
90001bae:	6162      	str	r2, [r4, #20]
        currentMovieOffset = firstFrameOffset; /* start over */
90001bb0:	61a3      	str	r3, [r4, #24]
}
90001bb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001bb6:	230d      	movs	r3, #13
90001bb8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001bbc:	e7b0      	b.n	90001b20 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001bbe:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001bc0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001bc2:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001bc4:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001bc6:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001bc8:	195a      	adds	r2, r3, r5
        val |= d[0];
90001bca:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001bce:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001bd0:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001bd2:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001bd4:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001bd8:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001bda:	181a      	adds	r2, r3, r0
        val |= d[0];
90001bdc:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001bde:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001be2:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001be6:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001be8:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001bea:	042d      	lsls	r5, r5, #16
90001bec:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001bf0:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001bf2:	2000      	movs	r0, #0
90001bf4:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001bf8:	e7bb      	b.n	90001b72 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001bfa:	2d00      	cmp	r5, #0
90001bfc:	bf18      	it	ne
90001bfe:	4672      	movne	r2, lr
90001c00:	e7c8      	b.n	90001b94 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001c02:	f101 0708 	add.w	r7, r1, #8
90001c06:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001c08:	b1f0      	cbz	r0, 90001c48 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001c0a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c0c:	429d      	cmp	r5, r3
90001c0e:	d824      	bhi.n	90001c5a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001c10:	6803      	ldr	r3, [r0, #0]
90001c12:	4639      	mov	r1, r7
90001c14:	68db      	ldr	r3, [r3, #12]
90001c16:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c18:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c1a:	462a      	mov	r2, r5
90001c1c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c1e:	6803      	ldr	r3, [r0, #0]
90001c20:	691b      	ldr	r3, [r3, #16]
90001c22:	4798      	blx	r3
90001c24:	b910      	cbnz	r0, 90001c2c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c26:	230d      	movs	r3, #13
90001c28:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c2c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c2e:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c30:	b126      	cbz	r6, 90001c3c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c32:	4633      	mov	r3, r6
90001c34:	462a      	mov	r2, r5
90001c36:	4620      	mov	r0, r4
90001c38:	f7ff fec0 	bl	900019bc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c3c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c40:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c42:	442a      	add	r2, r5
            frameNumber++;
90001c44:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c46:	e7a5      	b.n	90001b94 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c48:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c4a:	4439      	add	r1, r7
90001c4c:	e7f0      	b.n	90001c30 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001c4e:	4b07      	ldr	r3, [pc, #28]	@ (90001c6c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001c50:	21c1      	movs	r1, #193	@ 0xc1
90001c52:	4a07      	ldr	r2, [pc, #28]	@ (90001c70 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001c54:	4807      	ldr	r0, [pc, #28]	@ (90001c74 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c56:	f027 ff7f 	bl	90029b58 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c5a:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001c5c:	4b06      	ldr	r3, [pc, #24]	@ (90001c78 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001c5e:	4a07      	ldr	r2, [pc, #28]	@ (90001c7c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001c60:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c62:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001c66:	4803      	ldr	r0, [pc, #12]	@ (90001c74 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c68:	f027 ff76 	bl	90029b58 <__assert_func>
90001c6c:	9002afac 	.word	0x9002afac
90001c70:	9002b0ec 	.word	0x9002b0ec
90001c74:	9002af08 	.word	0x9002af08
90001c78:	9002af54 	.word	0x9002af54
90001c7c:	9002af68 	.word	0x9002af68

90001c80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001c80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001c84:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001c86:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001c8a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001c8c:	460e      	mov	r6, r1
90001c8e:	4690      	mov	r8, r2
90001c90:	461f      	mov	r7, r3
    if (reader != 0)
90001c92:	2800      	cmp	r0, #0
90001c94:	f000 80f5 	beq.w	90001e82 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        if (length > aviBufferLength)
90001c98:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c9a:	2b07      	cmp	r3, #7
90001c9c:	f240 8106 	bls.w	90001eac <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001ca0:	6803      	ldr	r3, [r0, #0]
90001ca2:	4649      	mov	r1, r9
90001ca4:	68db      	ldr	r3, [r3, #12]
90001ca6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001ca8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001caa:	2208      	movs	r2, #8
90001cac:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001cae:	6803      	ldr	r3, [r0, #0]
90001cb0:	691b      	ldr	r3, [r3, #16]
90001cb2:	4798      	blx	r3
90001cb4:	2800      	cmp	r0, #0
90001cb6:	f000 80af 	beq.w	90001e18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cba:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001cbc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cbe:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001cc0:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001cc4:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001cc8:	2800      	cmp	r0, #0
90001cca:	f000 80f8 	beq.w	90001ebe <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x23e>
        const uint32_t index = offset - aviBufferStartOffset;
90001cce:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cd2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001cd4:	1899      	adds	r1, r3, r2
90001cd6:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001cd8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cda:	f891 9002 	ldrb.w	r9, [r1, #2]
90001cde:	f891 c001 	ldrb.w	ip, [r1, #1]
90001ce2:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001ce6:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001cea:	ea49 0902 	orr.w	r9, r9, r2
90001cee:	78ca      	ldrb	r2, [r1, #3]
90001cf0:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001cf4:	454b      	cmp	r3, r9
90001cf6:	f0c0 80d9 	bcc.w	90001eac <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001cfa:	6803      	ldr	r3, [r0, #0]
90001cfc:	4629      	mov	r1, r5
90001cfe:	68db      	ldr	r3, [r3, #12]
90001d00:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001d02:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001d04:	464a      	mov	r2, r9
90001d06:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d08:	6803      	ldr	r3, [r0, #0]
90001d0a:	691b      	ldr	r3, [r3, #16]
90001d0c:	4798      	blx	r3
90001d0e:	2800      	cmp	r0, #0
90001d10:	d07e      	beq.n	90001e10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x190>
        return aviBuffer;
90001d12:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001d14:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d16:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d1a:	2302      	movs	r3, #2
90001d1c:	4869      	ldr	r0, [pc, #420]	@ (90001ec4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x244>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d1e:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d22:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d24:	d16f      	bne.n	90001e06 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x186>
90001d26:	4662      	mov	r2, ip
90001d28:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d2a:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d2c:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d2e:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d30:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d34:	60c3      	str	r3, [r0, #12]
90001d36:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d38:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d3c:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d3e:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d40:	6143      	str	r3, [r0, #20]
90001d42:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d44:	f003 030f 	and.w	r3, r3, #15
90001d48:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001d4a:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d4c:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d4e:	b236      	sxth	r6, r6
90001d50:	bf28      	it	cs
90001d52:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d54:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d58:	f002 020f 	and.w	r2, r2, #15
90001d5c:	f8df a194 	ldr.w	sl, [pc, #404]	@ 90001ef4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d60:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d64:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d66:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d68:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d6a:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d6c:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001d70:	f8df 9184 	ldr.w	r9, [pc, #388]	@ 90001ef8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d74:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001d76:	eba3 030c 	sub.w	r3, r3, ip
90001d7a:	62c3      	str	r3, [r0, #44]	@ 0x2c
90001d7c:	6923      	ldr	r3, [r4, #16]
90001d7e:	429e      	cmp	r6, r3
90001d80:	bf28      	it	cs
90001d82:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d84:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d88:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d8c:	bf18      	it	ne
90001d8e:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d92:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001d94:	f016 060f 	ands.w	r6, r6, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d98:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d9a:	6385      	str	r5, [r0, #56]	@ 0x38
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d9c:	4643      	mov	r3, r8
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001d9e:	bf18      	it	ne
90001da0:	f1c6 0610 	rsbne	r6, r6, #16
    DMA2D_reference = dma;
90001da4:	4d48      	ldr	r5, [pc, #288]	@ (90001ec8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x248>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001da6:	f8df 8154 	ldr.w	r8, [pc, #340]	@ 90001efc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001daa:	63c6      	str	r6, [r0, #60]	@ 0x3c
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dac:	4847      	ldr	r0, [pc, #284]	@ (90001ecc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001dae:	f7ff fdab 	bl	90001908 <JPEG_Decode_DMA>
    FrameBufferWidth = framebuffer_width;
90001db2:	4b47      	ldr	r3, [pc, #284]	@ (90001ed0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    DMA2D_reference = dma;
90001db4:	6c62      	ldr	r2, [r4, #68]	@ 0x44
    FrameBufferWidth = framebuffer_width;
90001db6:	601f      	str	r7, [r3, #0]
90001db8:	4e46      	ldr	r6, [pc, #280]	@ (90001ed4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
90001dba:	4c47      	ldr	r4, [pc, #284]	@ (90001ed8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dbc:	4f47      	ldr	r7, [pc, #284]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
    DMA2D_reference = dma;
90001dbe:	602a      	str	r2, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001dc0:	f8da 3000 	ldr.w	r3, [sl]
90001dc4:	b113      	cbz	r3, 90001dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x14c>
90001dc6:	6833      	ldr	r3, [r6, #0]
90001dc8:	2b00      	cmp	r3, #0
90001dca:	d13b      	bne.n	90001e44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001dcc:	6828      	ldr	r0, [r5, #0]
90001dce:	7a03      	ldrb	r3, [r0, #8]
90001dd0:	b93b      	cbnz	r3, 90001de2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
90001dd2:	4b43      	ldr	r3, [pc, #268]	@ (90001ee0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001dd4:	681b      	ldr	r3, [r3, #0]
90001dd6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001dda:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001dde:	2b01      	cmp	r3, #1
90001de0:	d044      	beq.n	90001e6c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001de2:	683b      	ldr	r3, [r7, #0]
90001de4:	2b01      	cmp	r3, #1
90001de6:	d01b      	beq.n	90001e20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    return 2;
90001de8:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001dea:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001dec:	6823      	ldr	r3, [r4, #0]
90001dee:	2b02      	cmp	r3, #2
90001df0:	d032      	beq.n	90001e58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
    } while (JpegProcessing_End != 1);
90001df2:	6823      	ldr	r3, [r4, #0]
90001df4:	2b01      	cmp	r3, #1
90001df6:	d1e3      	bne.n	90001dc0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    Jpeg_HWDecodingEnd = 0;
90001df8:	2300      	movs	r3, #0
}
90001dfa:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001dfc:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001e00:	6033      	str	r3, [r6, #0]
}
90001e02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001e06:	f02c 030f 	bic.w	r3, ip, #15
90001e0a:	3310      	adds	r3, #16
90001e0c:	461a      	mov	r2, r3
90001e0e:	e78c      	b.n	90001d2a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xaa>
            lastError = AVI_ERROR_EOF_REACHED;
90001e10:	230d      	movs	r3, #13
90001e12:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e16:	e77c      	b.n	90001d12 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x92>
90001e18:	230d      	movs	r3, #13
90001e1a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e1e:	e74c      	b.n	90001cba <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e20:	f8d9 3000 	ldr.w	r3, [r9]
90001e24:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e28:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e2c:	2b00      	cmp	r3, #0
90001e2e:	d1db      	bne.n	90001de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
90001e30:	f8da 3000 	ldr.w	r3, [sl]
90001e34:	2b00      	cmp	r3, #0
90001e36:	d1d7      	bne.n	90001de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e38:	2102      	movs	r1, #2
90001e3a:	4824      	ldr	r0, [pc, #144]	@ (90001ecc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
        JPEG_output_is_paused = 0;
90001e3c:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e3e:	f008 f949 	bl	9000a0d4 <HAL_JPEG_Resume>
90001e42:	e7d1      	b.n	90001de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001e44:	4821      	ldr	r0, [pc, #132]	@ (90001ecc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e46:	f008 ff03 	bl	9000ac50 <HAL_JPEG_GetState>
90001e4a:	2804      	cmp	r0, #4
90001e4c:	d015      	beq.n	90001e7a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1fa>
        return 1;
90001e4e:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e50:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e52:	6823      	ldr	r3, [r4, #0]
90001e54:	2b02      	cmp	r3, #2
90001e56:	d1cc      	bne.n	90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x172>
            SEM_WAIT(semDecodingDone);
90001e58:	4b22      	ldr	r3, [pc, #136]	@ (90001ee4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
90001e5a:	f04f 31ff 	mov.w	r1, #4294967295
90001e5e:	6818      	ldr	r0, [r3, #0]
90001e60:	f00b fcf0 	bl	9000d844 <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001e64:	6823      	ldr	r3, [r4, #0]
90001e66:	2b01      	cmp	r3, #1
90001e68:	d1aa      	bne.n	90001dc0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
90001e6a:	e7c5      	b.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x178>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e6c:	6833      	ldr	r3, [r6, #0]
90001e6e:	2b00      	cmp	r3, #0
90001e70:	d1b7      	bne.n	90001de2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
        DMA2D_reference->start();
90001e72:	6803      	ldr	r3, [r0, #0]
90001e74:	691b      	ldr	r3, [r3, #16]
90001e76:	4798      	blx	r3
90001e78:	e7b3      	b.n	90001de2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
            HAL_JPEG_Abort(hjpeg);
90001e7a:	4814      	ldr	r0, [pc, #80]	@ (90001ecc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e7c:	f007 fff8 	bl	90009e70 <HAL_JPEG_Abort>
90001e80:	e7e5      	b.n	90001e4e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ce>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001e82:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001e86:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001e88:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001e8c:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001e8e:	4401      	add	r1, r0
        val |= d[0];
90001e90:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001e92:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001e94:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001e98:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001e9a:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001e9e:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001ea2:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001ea6:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001eaa:	e734      	b.n	90001d16 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x96>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001eac:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001eae:	4b0e      	ldr	r3, [pc, #56]	@ (90001ee8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001eb0:	4a0e      	ldr	r2, [pc, #56]	@ (90001eec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001eb2:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001eb4:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001eb8:	480d      	ldr	r0, [pc, #52]	@ (90001ef0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001eba:	f027 fe4d 	bl	90029b58 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001ebe:	4691      	mov	r9, r2
90001ec0:	e7e1      	b.n	90001e86 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x206>
90001ec2:	bf00      	nop
90001ec4:	240003cc 	.word	0x240003cc
90001ec8:	24006028 	.word	0x24006028
90001ecc:	2400919c 	.word	0x2400919c
90001ed0:	2400601c 	.word	0x2400601c
90001ed4:	2400040c 	.word	0x2400040c
90001ed8:	2400602c 	.word	0x2400602c
90001edc:	24006030 	.word	0x24006030
90001ee0:	24000410 	.word	0x24000410
90001ee4:	24000414 	.word	0x24000414
90001ee8:	9002af54 	.word	0x9002af54
90001eec:	9002af68 	.word	0x9002af68
90001ef0:	9002af08 	.word	0x9002af08
90001ef4:	24006034 	.word	0x24006034
90001ef8:	24006024 	.word	0x24006024
90001efc:	24000004 	.word	0x24000004

90001f00 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001f00:	684b      	ldr	r3, [r1, #4]
90001f02:	2b01      	cmp	r3, #1
90001f04:	d015      	beq.n	90001f32 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001f06:	2b02      	cmp	r3, #2
90001f08:	d00b      	beq.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001f0a:	b94b      	cbnz	r3, 90001f20 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001f0c:	68cb      	ldr	r3, [r1, #12]
90001f0e:	0758      	lsls	r0, r3, #29
90001f10:	d11e      	bne.n	90001f50 <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001f12:	688b      	ldr	r3, [r1, #8]
90001f14:	075a      	lsls	r2, r3, #29
90001f16:	d003      	beq.n	90001f20 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f18:	f023 0307 	bic.w	r3, r3, #7
90001f1c:	3308      	adds	r3, #8
90001f1e:	608b      	str	r3, [r1, #8]
    }
90001f20:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f22:	68cb      	ldr	r3, [r1, #12]
90001f24:	071a      	lsls	r2, r3, #28
90001f26:	d0f4      	beq.n	90001f12 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f28:	f023 030f 	bic.w	r3, r3, #15
90001f2c:	3310      	adds	r3, #16
90001f2e:	60cb      	str	r3, [r1, #12]
90001f30:	e7ef      	b.n	90001f12 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f32:	68cb      	ldr	r3, [r1, #12]
90001f34:	071a      	lsls	r2, r3, #28
90001f36:	d003      	beq.n	90001f40 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f38:	f023 030f 	bic.w	r3, r3, #15
90001f3c:	3310      	adds	r3, #16
90001f3e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001f40:	688b      	ldr	r3, [r1, #8]
90001f42:	0718      	lsls	r0, r3, #28
90001f44:	d0ec      	beq.n	90001f20 <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001f46:	f023 030f 	bic.w	r3, r3, #15
90001f4a:	3310      	adds	r3, #16
90001f4c:	608b      	str	r3, [r1, #8]
90001f4e:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001f50:	f023 0307 	bic.w	r3, r3, #7
90001f54:	3308      	adds	r3, #8
90001f56:	60cb      	str	r3, [r1, #12]
90001f58:	e7db      	b.n	90001f12 <HAL_JPEG_InfoReadyCallback+0x12>
90001f5a:	bf00      	nop

90001f5c <HAL_JPEG_GetDataCallback>:
    {
90001f5c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001f5e:	4c0c      	ldr	r4, [pc, #48]	@ (90001f90 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f60:	4a0c      	ldr	r2, [pc, #48]	@ (90001f94 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001f62:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f64:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001f66:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f68:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001f6a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f6c:	d302      	bcc.n	90001f74 <HAL_JPEG_GetDataCallback+0x18>
    }
90001f6e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001f72:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001f74:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f76:	4b08      	ldr	r3, [pc, #32]	@ (90001f98 <HAL_JPEG_GetDataCallback+0x3c>)
90001f78:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f7a:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f7e:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f80:	bf28      	it	cs
90001f82:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001f86:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f8a:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f8c:	f007 bf68 	b.w	90009e60 <HAL_JPEG_ConfigInputBuffer>
90001f90:	24006040 	.word	0x24006040
90001f94:	2400603c 	.word	0x2400603c
90001f98:	24006038 	.word	0x24006038

90001f9c <HAL_JPEG_DataReadyCallback>:
    {
90001f9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90001fa0:	4e4a      	ldr	r6, [pc, #296]	@ (900020cc <HAL_JPEG_DataReadyCallback+0x130>)
    {
90001fa2:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fa4:	4f4a      	ldr	r7, [pc, #296]	@ (900020d0 <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90001fa6:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fa8:	4d4a      	ldr	r5, [pc, #296]	@ (900020d4 <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
90001faa:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fac:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fae:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90001fb2:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fb4:	4b48      	ldr	r3, [pc, #288]	@ (900020d8 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fb6:	4c49      	ldr	r4, [pc, #292]	@ (900020dc <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fb8:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fba:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fbc:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fc0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fc4:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90001fc8:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fca:	4d45      	ldr	r5, [pc, #276]	@ (900020e0 <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
90001fcc:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fce:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001fd2:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90001fd6:	697b      	ldr	r3, [r7, #20]
90001fd8:	428b      	cmp	r3, r1
90001fda:	d260      	bcs.n	9000209e <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fdc:	6821      	ldr	r1, [r4, #0]
90001fde:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001fe0:	6823      	ldr	r3, [r4, #0]
90001fe2:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fe4:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001fe8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fec:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90001ff0:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001ff2:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001ff6:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90001ffa:	6823      	ldr	r3, [r4, #0]
90001ffc:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002000:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002004:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90002006:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90002008:	b12b      	cbz	r3, 90002016 <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
9000200a:	6823      	ldr	r3, [r4, #0]
9000200c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002010:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002014:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
90002016:	6832      	ldr	r2, [r6, #0]
90002018:	69bb      	ldr	r3, [r7, #24]
9000201a:	4293      	cmp	r3, r2
9000201c:	d922      	bls.n	90002064 <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000201e:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
90002020:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002022:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
90002026:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002028:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
9000202c:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000202e:	2200      	movs	r2, #0
90002030:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90002032:	6823      	ldr	r3, [r4, #0]
90002034:	2b01      	cmp	r3, #1
90002036:	d900      	bls.n	9000203a <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002038:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000203a:	6823      	ldr	r3, [r4, #0]
9000203c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002040:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90002044:	2b00      	cmp	r3, #0
90002046:	d138      	bne.n	900020ba <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002048:	6823      	ldr	r3, [r4, #0]
9000204a:	4640      	mov	r0, r8
9000204c:	68fa      	ldr	r2, [r7, #12]
9000204e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002052:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90002056:	eb05 0383 	add.w	r3, r5, r3, lsl #2
9000205a:	01d2      	lsls	r2, r2, #7
9000205c:	6859      	ldr	r1, [r3, #4]
9000205e:	f007 ff03 	bl	90009e68 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
90002062:	69bb      	ldr	r3, [r7, #24]
90002064:	6832      	ldr	r2, [r6, #0]
90002066:	429a      	cmp	r2, r3
90002068:	d20b      	bcs.n	90002082 <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
9000206a:	4b1e      	ldr	r3, [pc, #120]	@ (900020e4 <HAL_JPEG_DataReadyCallback+0x148>)
9000206c:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
9000206e:	7a1b      	ldrb	r3, [r3, #8]
90002070:	b10b      	cbz	r3, 90002076 <HAL_JPEG_DataReadyCallback+0xda>
    }
90002072:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
90002076:	4b1c      	ldr	r3, [pc, #112]	@ (900020e8 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
90002078:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
9000207c:	6818      	ldr	r0, [r3, #0]
9000207e:	f00b bc13 	b.w	9000d8a8 <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
90002082:	6823      	ldr	r3, [r4, #0]
90002084:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
90002086:	4919      	ldr	r1, [pc, #100]	@ (900020ec <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002088:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
9000208a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
9000208e:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002090:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
90002092:	eb05 0583 	add.w	r5, r5, r3, lsl #2
90002096:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002098:	f007 feaa 	bl	90009df0 <HAL_JPEG_Pause>
9000209c:	e7e5      	b.n	9000206a <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000209e:	6823      	ldr	r3, [r4, #0]
900020a0:	68fa      	ldr	r2, [r7, #12]
900020a2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900020aa:	eb05 0383 	add.w	r3, r5, r3, lsl #2
900020ae:	01d2      	lsls	r2, r2, #7
900020b0:	6859      	ldr	r1, [r3, #4]
    }
900020b2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020b6:	f007 bed7 	b.w	90009e68 <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020ba:	2102      	movs	r1, #2
900020bc:	4640      	mov	r0, r8
900020be:	f007 fe97 	bl	90009df0 <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
900020c2:	4b0b      	ldr	r3, [pc, #44]	@ (900020f0 <HAL_JPEG_DataReadyCallback+0x154>)
900020c4:	2201      	movs	r2, #1
900020c6:	601a      	str	r2, [r3, #0]
900020c8:	e7be      	b.n	90002048 <HAL_JPEG_DataReadyCallback+0xac>
900020ca:	bf00      	nop
900020cc:	24006020 	.word	0x24006020
900020d0:	240003cc 	.word	0x240003cc
900020d4:	24006044 	.word	0x24006044
900020d8:	2400601c 	.word	0x2400601c
900020dc:	24006024 	.word	0x24006024
900020e0:	24000004 	.word	0x24000004
900020e4:	24006028 	.word	0x24006028
900020e8:	24000414 	.word	0x24000414
900020ec:	24006034 	.word	0x24006034
900020f0:	24006030 	.word	0x24006030

900020f4 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
900020f4:	b672      	cpsid	i
        while (1)
900020f6:	e7fe      	b.n	900020f6 <HAL_JPEG_ErrorCallback+0x2>

900020f8 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
900020f8:	4b01      	ldr	r3, [pc, #4]	@ (90002100 <HAL_JPEG_DecodeCpltCallback+0x8>)
900020fa:	2201      	movs	r2, #1
900020fc:	601a      	str	r2, [r3, #0]
    }
900020fe:	4770      	bx	lr
90002100:	24006034 	.word	0x24006034

90002104 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90002104:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002106:	4f1e      	ldr	r7, [pc, #120]	@ (90002180 <DMA2D_CopyBuffer+0x7c>)
90002108:	6903      	ldr	r3, [r0, #16]
9000210a:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
9000210c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
9000210e:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
90002112:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002114:	4e1b      	ldr	r6, [pc, #108]	@ (90002184 <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002116:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
9000211a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
9000211e:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002122:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002126:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002128:	bf18      	it	ne
9000212a:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000212e:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002130:	6939      	ldr	r1, [r7, #16]
90002132:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002136:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000213a:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000213e:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002140:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002142:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
90002144:	7e81      	ldrb	r1, [r0, #26]
90002146:	b1b9      	cbz	r1, 90002178 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002148:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
9000214a:	f1c1 0110 	rsb	r1, r1, #16
9000214e:	4321      	orrs	r1, r4
90002150:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002152:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
90002154:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002158:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000215c:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
9000215e:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002162:	4809      	ldr	r0, [pc, #36]	@ (90002188 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002164:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002166:	4b07      	ldr	r3, [pc, #28]	@ (90002184 <DMA2D_CopyBuffer+0x80>)
90002168:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
9000216a:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000216c:	4a07      	ldr	r2, [pc, #28]	@ (9000218c <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
9000216e:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002170:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002172:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002174:	6018      	str	r0, [r3, #0]
}
90002176:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
90002178:	f044 0410 	orr.w	r4, r4, #16
9000217c:	6474      	str	r4, [r6, #68]	@ 0x44
9000217e:	e7e8      	b.n	90002152 <DMA2D_CopyBuffer+0x4e>
90002180:	240003cc 	.word	0x240003cc
90002184:	52001000 	.word	0x52001000
90002188:	00012301 	.word	0x00012301
9000218c:	ff09000b 	.word	0xff09000b

90002190 <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
90002190:	6902      	ldr	r2, [r0, #16]
{
90002192:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002196:	4605      	mov	r5, r0
90002198:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
9000219a:	2a00      	cmp	r2, #0
9000219c:	d165      	bne.n	9000226a <DMA2D_CropBuffer+0xda>
9000219e:	4b35      	ldr	r3, [pc, #212]	@ (90002274 <DMA2D_CropBuffer+0xe4>)
900021a0:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
900021a4:	f1cc 0010 	rsb	r0, ip, #16
900021a8:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
900021aa:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900021ac:	3901      	subs	r1, #1
900021ae:	428a      	cmp	r2, r1
900021b0:	d102      	bne.n	900021b8 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
900021b2:	6b99      	ldr	r1, [r3, #56]	@ 0x38
900021b4:	1a41      	subs	r1, r0, r1
900021b6:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900021b8:	7e6e      	ldrb	r6, [r5, #25]
900021ba:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
900021bc:	2e00      	cmp	r6, #0
900021be:	d051      	beq.n	90002264 <DMA2D_CropBuffer+0xd4>
900021c0:	f1c7 0110 	rsb	r1, r7, #16
900021c4:	46b8      	mov	r8, r7
900021c6:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
900021c8:	f895 e01a 	ldrb.w	lr, [r5, #26]
900021cc:	f1be 0f00 	cmp.w	lr, #0
900021d0:	d002      	beq.n	900021d8 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
900021d2:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
900021d4:	1b09      	subs	r1, r1, r4
900021d6:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021d8:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021de:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021e2:	4413      	add	r3, r2
    job.MCU_drawn++;
900021e4:	3201      	adds	r2, #1
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
900021e6:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
900021ea:	612a      	str	r2, [r5, #16]
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021ec:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
900021f0:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021f4:	0052      	lsls	r2, r2, #1
900021f6:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021fa:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021fe:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002202:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
90002204:	b107      	cbz	r7, 90002208 <DMA2D_CropBuffer+0x78>
90002206:	b90e      	cbnz	r6, 9000220c <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
90002208:	2300      	movs	r3, #0
9000220a:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
9000220c:	4b1a      	ldr	r3, [pc, #104]	@ (90002278 <DMA2D_CropBuffer+0xe8>)
        : color(0)
9000220e:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002210:	4f1a      	ldr	r7, [pc, #104]	@ (9000227c <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
90002212:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002214:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
90002216:	4a1a      	ldr	r2, [pc, #104]	@ (90002280 <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002218:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
9000221a:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
9000221e:	6810      	ldr	r0, [r2, #0]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002220:	2201      	movs	r2, #1
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002222:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002224:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
90002228:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000222c:	9302      	str	r3, [sp, #8]
    DMA2D_reference->addToQueue(blitOp);
9000222e:	6803      	ldr	r3, [r0, #0]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
90002230:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
90002234:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002236:	9201      	str	r2, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
90002238:	685b      	ldr	r3, [r3, #4]
9000223a:	9604      	str	r6, [sp, #16]
9000223c:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000223e:	4b11      	ldr	r3, [pc, #68]	@ (90002284 <DMA2D_CropBuffer+0xf4>)
90002240:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002242:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002244:	4810      	ldr	r0, [pc, #64]	@ (90002288 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002246:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
90002248:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000224c:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
9000224e:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002250:	490e      	ldr	r1, [pc, #56]	@ (9000228c <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
90002252:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
90002254:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
90002256:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002258:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000225a:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000225c:	6019      	str	r1, [r3, #0]
}
9000225e:	b00a      	add	sp, #40	@ 0x28
90002260:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90002264:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
90002266:	46b0      	mov	r8, r6
90002268:	e7ae      	b.n	900021c8 <DMA2D_CropBuffer+0x38>
9000226a:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
9000226c:	f04f 0c00 	mov.w	ip, #0
90002270:	4b00      	ldr	r3, [pc, #0]	@ (90002274 <DMA2D_CropBuffer+0xe4>)
90002272:	e79a      	b.n	900021aa <DMA2D_CropBuffer+0x1a>
90002274:	240003cc 	.word	0x240003cc
90002278:	01e00010 	.word	0x01e00010
9000227c:	2400041c 	.word	0x2400041c
90002280:	24006028 	.word	0x24006028
90002284:	52001000 	.word	0x52001000
90002288:	ff09000b 	.word	0xff09000b
9000228c:	00012301 	.word	0x00012301

90002290 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
90002290:	4b0d      	ldr	r3, [pc, #52]	@ (900022c8 <DMA2D_ExternalJobCompleted+0x38>)
90002292:	6902      	ldr	r2, [r0, #16]
90002294:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90002296:	429a      	cmp	r2, r3
90002298:	d000      	beq.n	9000229c <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
9000229a:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
9000229c:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
9000229e:	4b0b      	ldr	r3, [pc, #44]	@ (900022cc <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
900022a0:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
900022a2:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
900022a4:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
900022a6:	3101      	adds	r1, #1
        job.DoCropping = false;
900022a8:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
900022aa:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900022ac:	6819      	ldr	r1, [r3, #0]
900022ae:	2901      	cmp	r1, #1
900022b0:	d900      	bls.n	900022b4 <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
900022b2:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
900022b4:	7e83      	ldrb	r3, [r0, #26]
900022b6:	b113      	cbz	r3, 900022be <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
900022b8:	4b05      	ldr	r3, [pc, #20]	@ (900022d0 <DMA2D_ExternalJobCompleted+0x40>)
900022ba:	2201      	movs	r2, #1
900022bc:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
900022be:	4b05      	ldr	r3, [pc, #20]	@ (900022d4 <DMA2D_ExternalJobCompleted+0x44>)
900022c0:	6818      	ldr	r0, [r3, #0]
900022c2:	f00b baf1 	b.w	9000d8a8 <osSemaphoreRelease>
900022c6:	bf00      	nop
900022c8:	240003cc 	.word	0x240003cc
900022cc:	24000410 	.word	0x24000410
900022d0:	2400040c 	.word	0x2400040c
900022d4:	24000414 	.word	0x24000414

900022d8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022d8:	2101      	movs	r1, #1
900022da:	2200      	movs	r2, #0
{
900022dc:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022de:	4608      	mov	r0, r1
900022e0:	f00b fa64 	bl	9000d7ac <osSemaphoreNew>
900022e4:	4b0b      	ldr	r3, [pc, #44]	@ (90002314 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
900022e6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900022e8:	b140      	cbz	r0, 900022fc <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
900022ea:	2200      	movs	r2, #0
900022ec:	2104      	movs	r1, #4
900022ee:	2001      	movs	r0, #1
900022f0:	f00b fb04 	bl	9000d8fc <osMessageQueueNew>
900022f4:	4b08      	ldr	r3, [pc, #32]	@ (90002318 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
900022f6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900022f8:	b130      	cbz	r0, 90002308 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
900022fa:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900022fc:	4b07      	ldr	r3, [pc, #28]	@ (9000231c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
900022fe:	2128      	movs	r1, #40	@ 0x28
90002300:	4a07      	ldr	r2, [pc, #28]	@ (90002320 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90002302:	4808      	ldr	r0, [pc, #32]	@ (90002324 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002304:	f027 fc28 	bl	90029b58 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002308:	4b07      	ldr	r3, [pc, #28]	@ (90002328 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
9000230a:	212c      	movs	r1, #44	@ 0x2c
9000230c:	4a04      	ldr	r2, [pc, #16]	@ (90002320 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000230e:	4805      	ldr	r0, [pc, #20]	@ (90002324 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002310:	f027 fc22 	bl	90029b58 <__assert_func>
90002314:	2400604c 	.word	0x2400604c
90002318:	24006048 	.word	0x24006048
9000231c:	9002b18c 	.word	0x9002b18c
90002320:	9002b1d8 	.word	0x9002b1d8
90002324:	9002b208 	.word	0x9002b208
90002328:	9002b24c 	.word	0x9002b24c

9000232c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
9000232c:	4b02      	ldr	r3, [pc, #8]	@ (90002338 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000232e:	f04f 31ff 	mov.w	r1, #4294967295
90002332:	6818      	ldr	r0, [r3, #0]
90002334:	f00b ba86 	b.w	9000d844 <osSemaphoreAcquire>
90002338:	2400604c 	.word	0x2400604c

9000233c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
9000233c:	4b01      	ldr	r3, [pc, #4]	@ (90002344 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000233e:	6818      	ldr	r0, [r3, #0]
90002340:	f00b bab2 	b.w	9000d8a8 <osSemaphoreRelease>
90002344:	2400604c 	.word	0x2400604c

90002348 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90002348:	4b02      	ldr	r3, [pc, #8]	@ (90002354 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
9000234a:	2100      	movs	r1, #0
9000234c:	6818      	ldr	r0, [r3, #0]
9000234e:	f00b ba79 	b.w	9000d844 <osSemaphoreAcquire>
90002352:	bf00      	nop
90002354:	2400604c 	.word	0x2400604c

90002358 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
90002358:	4b01      	ldr	r3, [pc, #4]	@ (90002360 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
9000235a:	6818      	ldr	r0, [r3, #0]
9000235c:	f00b baa4 	b.w	9000d8a8 <osSemaphoreRelease>
90002360:	2400604c 	.word	0x2400604c

90002364 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90002364:	4803      	ldr	r0, [pc, #12]	@ (90002374 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90002366:	2300      	movs	r3, #0
90002368:	4903      	ldr	r1, [pc, #12]	@ (90002378 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
9000236a:	461a      	mov	r2, r3
9000236c:	6800      	ldr	r0, [r0, #0]
9000236e:	f00b bb01 	b.w	9000d974 <osMessageQueuePut>
90002372:	bf00      	nop
90002374:	24006048 	.word	0x24006048
90002378:	2400003c 	.word	0x2400003c

9000237c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
9000237c:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
9000237e:	2300      	movs	r3, #0
{
90002380:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90002382:	4c07      	ldr	r4, [pc, #28]	@ (900023a0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90002384:	461a      	mov	r2, r3
90002386:	a901      	add	r1, sp, #4
90002388:	6820      	ldr	r0, [r4, #0]
9000238a:	f00b fb2f 	bl	9000d9ec <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
9000238e:	f04f 33ff 	mov.w	r3, #4294967295
90002392:	2200      	movs	r2, #0
90002394:	a901      	add	r1, sp, #4
90002396:	6820      	ldr	r0, [r4, #0]
90002398:	f00b fb28 	bl	9000d9ec <osMessageQueueGet>
}
9000239c:	b002      	add	sp, #8
9000239e:	bd10      	pop	{r4, pc}
900023a0:	24006048 	.word	0x24006048

900023a4 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
900023a4:	6803      	ldr	r3, [r0, #0]
900023a6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900023a8:	4718      	bx	r3
900023aa:	bf00      	nop

900023ac <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
900023ac:	2001      	movs	r0, #1
900023ae:	4770      	bx	lr

900023b0 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
900023b0:	e7fe      	b.n	900023b0 <DMA2D_XferErrorCallback>
900023b2:	bf00      	nop

900023b4 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
900023b4:	4905      	ldr	r1, [pc, #20]	@ (900023cc <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900023b6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900023ba:	4b05      	ldr	r3, [pc, #20]	@ (900023d0 <_ZN8STM32DMAD1Ev+0x1c>)
900023bc:	6001      	str	r1, [r0, #0]
900023be:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900023c2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900023c6:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
900023ca:	4770      	bx	lr
900023cc:	9002b3e8 	.word	0x9002b3e8
900023d0:	e000e100 	.word	0xe000e100

900023d4 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023d4:	4b11      	ldr	r3, [pc, #68]	@ (9000241c <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023d6:	4912      	ldr	r1, [pc, #72]	@ (90002420 <_ZN8STM32DMA10initializeEv+0x4c>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023d8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023dc:	4811      	ldr	r0, [pc, #68]	@ (90002424 <_ZN8STM32DMA10initializeEv+0x50>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023de:	f042 0210 	orr.w	r2, r2, #16
{
900023e2:	b410      	push	{r4}
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023e4:	4c10      	ldr	r4, [pc, #64]	@ (90002428 <_ZN8STM32DMA10initializeEv+0x54>)
{
900023e6:	b083      	sub	sp, #12
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023e8:	e9c1 4008 	strd	r4, r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023ec:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900023f0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900023f4:	f002 0210 	and.w	r2, r2, #16
900023f8:	9201      	str	r2, [sp, #4]
900023fa:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
900023fc:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
900023fe:	f042 0210 	orr.w	r2, r2, #16
90002402:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90002404:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002406:	f022 0210 	bic.w	r2, r2, #16
9000240a:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000240c:	4b07      	ldr	r3, [pc, #28]	@ (9000242c <_ZN8STM32DMA10initializeEv+0x58>)
9000240e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002412:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90002414:	b003      	add	sp, #12
90002416:	f85d 4b04 	ldr.w	r4, [sp], #4
9000241a:	4770      	bx	lr
9000241c:	58024400 	.word	0x58024400
90002420:	240091f4 	.word	0x240091f4
90002424:	900023b1 	.word	0x900023b1
90002428:	900027fd 	.word	0x900027fd
9000242c:	e000e100 	.word	0xe000e100

90002430 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90002430:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90002434:	4770      	bx	lr
90002436:	bf00      	nop

90002438 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002438:	4909      	ldr	r1, [pc, #36]	@ (90002460 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000243a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000243e:	4b09      	ldr	r3, [pc, #36]	@ (90002464 <_ZN8STM32DMAD0Ev+0x2c>)
90002440:	b510      	push	{r4, lr}
90002442:	6001      	str	r1, [r0, #0]
90002444:	4604      	mov	r4, r0
90002446:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000244a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000244e:	f3bf 8f6f 	isb	sy
}
90002452:	f640 51a4 	movw	r1, #3492	@ 0xda4
90002456:	f027 f809 	bl	9002946c <_ZdlPvj>
9000245a:	4620      	mov	r0, r4
9000245c:	bd10      	pop	{r4, pc}
9000245e:	bf00      	nop
90002460:	9002b3e8 	.word	0x9002b3e8
90002464:	e000e100 	.word	0xe000e100

90002468 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
90002468:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
9000246c:	b510      	push	{r4, lr}
9000246e:	4604      	mov	r4, r0
        if (!started_by_external_job)
90002470:	b963      	cbnz	r3, 9000248c <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
90002472:	6803      	ldr	r3, [r0, #0]
90002474:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002476:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002478:	4924      	ldr	r1, [pc, #144]	@ (9000250c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
9000247a:	4a25      	ldr	r2, [pc, #148]	@ (90002510 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
9000247c:	680b      	ldr	r3, [r1, #0]
9000247e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002482:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002486:	2b01      	cmp	r3, #1
90002488:	d015      	beq.n	900024b6 <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
9000248a:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
9000248c:	7a03      	ldrb	r3, [r0, #8]
9000248e:	2b00      	cmp	r3, #0
90002490:	d12b      	bne.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
90002492:	6860      	ldr	r0, [r4, #4]
90002494:	6803      	ldr	r3, [r0, #0]
90002496:	681b      	ldr	r3, [r3, #0]
90002498:	4798      	blx	r3
9000249a:	4603      	mov	r3, r0
9000249c:	2800      	cmp	r0, #0
9000249e:	d1f4      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024a0:	7a62      	ldrb	r2, [r4, #9]
900024a2:	2a00      	cmp	r2, #0
900024a4:	d0f1      	beq.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
900024a6:	6822      	ldr	r2, [r4, #0]
900024a8:	4620      	mov	r0, r4
                started_by_external_job = false;
900024aa:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
900024ae:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900024b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
900024b4:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024b6:	4817      	ldr	r0, [pc, #92]	@ (90002514 <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
900024b8:	6800      	ldr	r0, [r0, #0]
900024ba:	2800      	cmp	r0, #0
900024bc:	d1e5      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024be:	7a20      	ldrb	r0, [r4, #8]
900024c0:	2800      	cmp	r0, #0
900024c2:	d1e2      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024c4:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900024c6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024ca:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900024ce:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024d0:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900024d4:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024d6:	6808      	ldr	r0, [r1, #0]
900024d8:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900024dc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024e0:	b17b      	cbz	r3, 90002502 <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
900024e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024e6:	f7ff be53 	b.w	90002190 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024ea:	4b08      	ldr	r3, [pc, #32]	@ (9000250c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
900024ec:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024ee:	4808      	ldr	r0, [pc, #32]	@ (90002510 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
900024f0:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900024f2:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024f4:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900024f8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900024fc:	f7ff fec8 	bl	90002290 <DMA2D_ExternalJobCompleted>
90002500:	e7c7      	b.n	90002492 <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
90002502:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002506:	f7ff bdfd 	b.w	90002104 <DMA2D_CopyBuffer>
9000250a:	bf00      	nop
9000250c:	24000410 	.word	0x24000410
90002510:	24000004 	.word	0x24000004
90002514:	2400040c 	.word	0x2400040c

90002518 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002518:	b570      	push	{r4, r5, r6, lr}
    switch (format)
9000251a:	7f8b      	ldrb	r3, [r1, #30]
9000251c:	2b0a      	cmp	r3, #10
9000251e:	d83d      	bhi.n	9000259c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
90002520:	e8df f003 	tbb	[pc, r3]
90002524:	3c2a063a 	.word	0x3c2a063a
90002528:	063c3c3c 	.word	0x063c3c3c
9000252c:	0606      	.short	0x0606
9000252e:	06          	.byte	0x06
9000252f:	00          	.byte	0x00
90002530:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002532:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90002536:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002538:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000253a:	4b1b      	ldr	r3, [pc, #108]	@ (900025a8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000253c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002540:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002542:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002546:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002548:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000254a:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000254c:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
9000254e:	680e      	ldr	r6, [r1, #0]
        return color;
90002550:	68c8      	ldr	r0, [r1, #12]
90002552:	2e08      	cmp	r6, #8
90002554:	d012      	beq.n	9000257c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002556:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
90002558:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000255a:	0941      	lsrs	r1, r0, #5
9000255c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90002560:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002564:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002566:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
9000256a:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000256c:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
9000256e:	490f      	ldr	r1, [pc, #60]	@ (900025ac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002570:	4302      	orrs	r2, r0
90002572:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
90002574:	6019      	str	r1, [r3, #0]
    }
}
90002576:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002578:	2400      	movs	r4, #0
9000257a:	e7da      	b.n	90002532 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000257c:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000257e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002580:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002582:	4a0b      	ldr	r2, [pc, #44]	@ (900025b0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
90002584:	7f09      	ldrb	r1, [r1, #28]
90002586:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
9000258a:	490a      	ldr	r1, [pc, #40]	@ (900025b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
9000258c:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
9000258e:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002590:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002592:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
90002594:	6019      	str	r1, [r3, #0]
}
90002596:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90002598:	2402      	movs	r4, #2
9000259a:	e7ca      	b.n	90002532 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
9000259c:	4b06      	ldr	r3, [pc, #24]	@ (900025b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
9000259e:	2191      	movs	r1, #145	@ 0x91
900025a0:	4a06      	ldr	r2, [pc, #24]	@ (900025bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
900025a2:	4807      	ldr	r0, [pc, #28]	@ (900025c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
900025a4:	f027 fad8 	bl	90029b58 <__assert_func>
900025a8:	52001000 	.word	0x52001000
900025ac:	00032301 	.word	0x00032301
900025b0:	00010009 	.word	0x00010009
900025b4:	00022301 	.word	0x00022301
900025b8:	9002b290 	.word	0x9002b290
900025bc:	9002b2ac 	.word	0x9002b2ac
900025c0:	9002b2f8 	.word	0x9002b2f8

900025c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
900025c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
900025c6:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
900025ca:	f1be 0f0b 	cmp.w	lr, #11
900025ce:	f200 80ac 	bhi.w	9000272a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
900025d2:	e8df f00e 	tbb	[pc, lr]
900025d6:	605b      	.short	0x605b
900025d8:	aaaaaa46 	.word	0xaaaaaa46
900025dc:	060606aa 	.word	0x060606aa
900025e0:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
900025e2:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
900025e4:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
900025e8:	f1bc 0f0b 	cmp.w	ip, #11
900025ec:	f200 809d 	bhi.w	9000272a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
900025f0:	e8df f00c 	tbb	[pc, ip]
900025f4:	9b0d494e 	.word	0x9b0d494e
900025f8:	069b9b9b 	.word	0x069b9b9b
900025fc:	06060606 	.word	0x06060606
    switch (format)
90002600:	f1bc 0f0b 	cmp.w	ip, #11
90002604:	f000 8097 	beq.w	90002736 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x172>
        dma2dColorMode = DMA2D_INPUT_L8;
90002608:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
9000260a:	2701      	movs	r7, #1
9000260c:	e001      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000260e:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002610:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002612:	8a8b      	ldrh	r3, [r1, #20]
90002614:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002616:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002618:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000261a:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000261c:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000261e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002622:	4b4b      	ldr	r3, [pc, #300]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90002624:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002626:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002628:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000262a:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000262c:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000262e:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002630:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002632:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002634:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90002636:	680a      	ldr	r2, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002638:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
9000263a:	2a80      	cmp	r2, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000263c:	ea4f 6007 	mov.w	r0, r7, lsl #24
    switch (blitOp.operation)
90002640:	d02e      	beq.n	900026a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xdc>
90002642:	d810      	bhi.n	90002666 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
90002644:	2a20      	cmp	r2, #32
90002646:	d028      	beq.n	9000269a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
90002648:	2a40      	cmp	r2, #64	@ 0x40
9000264a:	d026      	beq.n	9000269a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
9000264c:	2a04      	cmp	r2, #4
9000264e:	d15a      	bne.n	90002706 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002650:	4330      	orrs	r0, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002652:	4a40      	ldr	r2, [pc, #256]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002654:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
90002658:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000265a:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000265c:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000265e:	601a      	str	r2, [r3, #0]
}
90002660:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90002662:	2600      	movs	r6, #0
90002664:	e7be      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
90002666:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000266a:	d059      	beq.n	90002720 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
9000266c:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
90002670:	d149      	bne.n	90002706 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002672:	4a39      	ldr	r2, [pc, #228]	@ (90002758 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
90002674:	4302      	orrs	r2, r0
90002676:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002678:	4a36      	ldr	r2, [pc, #216]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
9000267a:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
9000267c:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000267e:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002680:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002682:	601a      	str	r2, [r3, #0]
}
90002684:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90002686:	2401      	movs	r4, #1
90002688:	4627      	mov	r7, r4
9000268a:	e7c2      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
9000268c:	2602      	movs	r6, #2
9000268e:	e7a9      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
90002690:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90002692:	4627      	mov	r7, r4
90002694:	e7bd      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90002696:	2601      	movs	r6, #1
90002698:	e7a4      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000269a:	4330      	orrs	r0, r6
9000269c:	4b2c      	ldr	r3, [pc, #176]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
9000269e:	e7d8      	b.n	90002652 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
900026a0:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026a2:	4330      	orrs	r0, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026a4:	1d11      	adds	r1, r2, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026a6:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026aa:	62d9      	str	r1, [r3, #44]	@ 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
900026ac:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026ae:	61d8      	str	r0, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026b0:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026b2:	615d      	str	r5, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
900026b4:	b9b1      	cbnz	r1, 900026e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026b6:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
900026b8:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ba:	69d8      	ldr	r0, [r3, #28]
900026bc:	4a27      	ldr	r2, [pc, #156]	@ (9000275c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026be:	3901      	subs	r1, #1
900026c0:	4002      	ands	r2, r0
900026c2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026c6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
900026c8:	4a21      	ldr	r2, [pc, #132]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
900026ca:	69d3      	ldr	r3, [r2, #28]
900026cc:	f043 0320 	orr.w	r3, r3, #32
900026d0:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
900026d2:	69d3      	ldr	r3, [r2, #28]
900026d4:	069b      	lsls	r3, r3, #26
900026d6:	d4fc      	bmi.n	900026d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10e>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
900026d8:	2310      	movs	r3, #16
900026da:	6093      	str	r3, [r2, #8]
            if (blend)
900026dc:	b317      	cbz	r7, 90002724 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026de:	4b1d      	ldr	r3, [pc, #116]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
900026e0:	6013      	str	r3, [r2, #0]
}
900026e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900026e4:	2901      	cmp	r1, #1
900026e6:	d12c      	bne.n	90002742 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17e>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026e8:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
900026ea:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ec:	69d8      	ldr	r0, [r3, #28]
900026ee:	4a1b      	ldr	r2, [pc, #108]	@ (9000275c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026f0:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
900026f4:	bf18      	it	ne
900026f6:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026f8:	4002      	ands	r2, r0
900026fa:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026fe:	f042 0210 	orr.w	r2, r2, #16
90002702:	61da      	str	r2, [r3, #28]
                break;
90002704:	e7e0      	b.n	900026c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
        if (blitOp.srcFormat != blitOp.dstFormat)
90002706:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002708:	ea46 0600 	orr.w	r6, r6, r0
9000270c:	4b10      	ldr	r3, [pc, #64]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
9000270e:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002712:	bf14      	ite	ne
90002714:	4a12      	ldrne	r2, [pc, #72]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002716:	f242 3201 	movweq	r2, #8961	@ 0x2301
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000271a:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000271c:	601a      	str	r2, [r3, #0]
}
9000271e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002720:	4a10      	ldr	r2, [pc, #64]	@ (90002764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002722:	e7a7      	b.n	90002674 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002724:	4b0e      	ldr	r3, [pc, #56]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
90002726:	6013      	str	r3, [r2, #0]
}
90002728:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
9000272a:	4b0f      	ldr	r3, [pc, #60]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
9000272c:	2170      	movs	r1, #112	@ 0x70
9000272e:	4a0f      	ldr	r2, [pc, #60]	@ (9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002730:	480f      	ldr	r0, [pc, #60]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002732:	f027 fa11 	bl	90029b58 <__assert_func>
        assert(0 && "Unsupported Format!");
90002736:	4b0c      	ldr	r3, [pc, #48]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
90002738:	2191      	movs	r1, #145	@ 0x91
9000273a:	4a0e      	ldr	r2, [pc, #56]	@ (90002774 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
9000273c:	480c      	ldr	r0, [pc, #48]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000273e:	f027 fa0b 	bl	90029b58 <__assert_func>
                assert(0 && "Unsupported format");
90002742:	4b0d      	ldr	r3, [pc, #52]	@ (90002778 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
90002744:	f240 111b 	movw	r1, #283	@ 0x11b
90002748:	4a0c      	ldr	r2, [pc, #48]	@ (9000277c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
9000274a:	4809      	ldr	r0, [pc, #36]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000274c:	f027 fa04 	bl	90029b58 <__assert_func>
90002750:	52001000 	.word	0x52001000
90002754:	00022301 	.word	0x00022301
90002758:	00020009 	.word	0x00020009
9000275c:	ffff00ef 	.word	0xffff00ef
90002760:	00012301 	.word	0x00012301
90002764:	0002000a 	.word	0x0002000a
90002768:	9002b290 	.word	0x9002b290
9000276c:	9002b338 	.word	0x9002b338
90002770:	9002b2f8 	.word	0x9002b2f8
90002774:	9002b2ac 	.word	0x9002b2ac
90002778:	9002b384 	.word	0x9002b384
9000277c:	9002b3a0 	.word	0x9002b3a0

90002780 <_ZN8STM32DMA5startEv>:
    virtual void start()
90002780:	b510      	push	{r4, lr}
90002782:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
90002784:	6840      	ldr	r0, [r0, #4]
90002786:	6803      	ldr	r3, [r0, #0]
90002788:	681b      	ldr	r3, [r3, #0]
9000278a:	4798      	blx	r3
9000278c:	b958      	cbnz	r0, 900027a6 <_ZN8STM32DMA5startEv+0x26>
9000278e:	7a63      	ldrb	r3, [r4, #9]
90002790:	b14b      	cbz	r3, 900027a6 <_ZN8STM32DMA5startEv+0x26>
90002792:	7a23      	ldrb	r3, [r4, #8]
90002794:	bb3b      	cbnz	r3, 900027e6 <_ZN8STM32DMA5startEv+0x66>
            execute();
90002796:	6822      	ldr	r2, [r4, #0]
90002798:	4620      	mov	r0, r4
            started_by_external_job = false;
9000279a:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
9000279e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900027a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
900027a4:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027a6:	4913      	ldr	r1, [pc, #76]	@ (900027f4 <_ZN8STM32DMA5startEv+0x74>)
900027a8:	4a13      	ldr	r2, [pc, #76]	@ (900027f8 <_ZN8STM32DMA5startEv+0x78>)
900027aa:	680b      	ldr	r3, [r1, #0]
900027ac:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900027b0:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900027b4:	2b01      	cmp	r3, #1
900027b6:	d000      	beq.n	900027ba <_ZN8STM32DMA5startEv+0x3a>
    }
900027b8:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027ba:	7a20      	ldrb	r0, [r4, #8]
900027bc:	2800      	cmp	r0, #0
900027be:	d1fb      	bne.n	900027b8 <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027c0:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
900027c2:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027c6:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900027ca:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027cc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900027d0:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027d2:	6808      	ldr	r0, [r1, #0]
900027d4:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900027d8:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027dc:	b133      	cbz	r3, 900027ec <_ZN8STM32DMA5startEv+0x6c>
    }
900027de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027e2:	f7ff bcd5 	b.w	90002190 <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027e6:	4b03      	ldr	r3, [pc, #12]	@ (900027f4 <_ZN8STM32DMA5startEv+0x74>)
900027e8:	681b      	ldr	r3, [r3, #0]
    }
900027ea:	bd10      	pop	{r4, pc}
900027ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027f0:	f7ff bc88 	b.w	90002104 <DMA2D_CopyBuffer>
900027f4:	24000410 	.word	0x24000410
900027f8:	24000004 	.word	0x24000004

900027fc <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
900027fc:	4b2c      	ldr	r3, [pc, #176]	@ (900028b0 <DMA2D_XferCpltCallback+0xb4>)
900027fe:	492d      	ldr	r1, [pc, #180]	@ (900028b4 <DMA2D_XferCpltCallback+0xb8>)
90002800:	681b      	ldr	r3, [r3, #0]
    {
90002802:	b510      	push	{r4, lr}
90002804:	685c      	ldr	r4, [r3, #4]
90002806:	6823      	ldr	r3, [r4, #0]
90002808:	695a      	ldr	r2, [r3, #20]
9000280a:	428a      	cmp	r2, r1
9000280c:	d122      	bne.n	90002854 <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
9000280e:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
90002812:	b192      	cbz	r2, 9000283a <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90002814:	7a23      	ldrb	r3, [r4, #8]
90002816:	2b00      	cmp	r3, #0
90002818:	d13a      	bne.n	90002890 <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
9000281a:	6860      	ldr	r0, [r4, #4]
9000281c:	6803      	ldr	r3, [r0, #0]
9000281e:	681b      	ldr	r3, [r3, #0]
90002820:	4798      	blx	r3
90002822:	4603      	mov	r3, r0
90002824:	b9a8      	cbnz	r0, 90002852 <DMA2D_XferCpltCallback+0x56>
90002826:	7a62      	ldrb	r2, [r4, #9]
90002828:	b19a      	cbz	r2, 90002852 <DMA2D_XferCpltCallback+0x56>
                execute();
9000282a:	6822      	ldr	r2, [r4, #0]
9000282c:	4620      	mov	r0, r4
                started_by_external_job = false;
9000282e:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
90002832:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002834:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002838:	4718      	bx	r3
            executeCompleted();
9000283a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000283c:	4620      	mov	r0, r4
9000283e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002840:	491d      	ldr	r1, [pc, #116]	@ (900028b8 <DMA2D_XferCpltCallback+0xbc>)
90002842:	4a1e      	ldr	r2, [pc, #120]	@ (900028bc <DMA2D_XferCpltCallback+0xc0>)
90002844:	680b      	ldr	r3, [r1, #0]
90002846:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000284a:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
9000284e:	2b01      	cmp	r3, #1
90002850:	d004      	beq.n	9000285c <DMA2D_XferCpltCallback+0x60>
90002852:	bd10      	pop	{r4, pc}
90002854:	4620      	mov	r0, r4
90002856:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000285a:	4710      	bx	r2
9000285c:	4818      	ldr	r0, [pc, #96]	@ (900028c0 <DMA2D_XferCpltCallback+0xc4>)
9000285e:	6800      	ldr	r0, [r0, #0]
90002860:	2800      	cmp	r0, #0
90002862:	d1f6      	bne.n	90002852 <DMA2D_XferCpltCallback+0x56>
90002864:	7a20      	ldrb	r0, [r4, #8]
90002866:	2800      	cmp	r0, #0
90002868:	d1f3      	bne.n	90002852 <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000286a:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
9000286c:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002870:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
90002874:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002876:	eb02 0080 	add.w	r0, r2, r0, lsl #2
9000287a:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000287c:	6808      	ldr	r0, [r1, #0]
9000287e:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002882:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002886:	b17b      	cbz	r3, 900028a8 <DMA2D_XferCpltCallback+0xac>
90002888:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000288c:	f7ff bc80 	b.w	90002190 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002890:	4b09      	ldr	r3, [pc, #36]	@ (900028b8 <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
90002892:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002894:	4809      	ldr	r0, [pc, #36]	@ (900028bc <DMA2D_XferCpltCallback+0xc0>)
90002896:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
90002898:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000289a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000289e:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900028a2:	f7ff fcf5 	bl	90002290 <DMA2D_ExternalJobCompleted>
900028a6:	e7b8      	b.n	9000281a <DMA2D_XferCpltCallback+0x1e>
900028a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028ac:	f7ff bc2a 	b.w	90002104 <DMA2D_CopyBuffer>
900028b0:	240233d4 	.word	0x240233d4
900028b4:	90002469 	.word	0x90002469
900028b8:	24000410 	.word	0x24000410
900028bc:	24000004 	.word	0x24000004
900028c0:	2400040c 	.word	0x2400040c

900028c4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
900028c4:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028c6:	4b0c      	ldr	r3, [pc, #48]	@ (900028f8 <_ZN8STM32DMAC1Ev+0x34>)
STM32DMA::STM32DMA()
900028c8:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028ca:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
900028cc:	2500      	movs	r5, #0
900028ce:	300c      	adds	r0, #12
900028d0:	2260      	movs	r2, #96	@ 0x60
900028d2:	7235      	strb	r5, [r6, #8]
900028d4:	7275      	strb	r5, [r6, #9]
900028d6:	6070      	str	r0, [r6, #4]
900028d8:	f844 3b20 	str.w	r3, [r4], #32
900028dc:	4621      	mov	r1, r4
900028de:	f00e fee7 	bl	900116b0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
900028e2:	4621      	mov	r1, r4
900028e4:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
900028e8:	60cd      	str	r5, [r1, #12]
900028ea:	3124      	adds	r1, #36	@ 0x24
900028ec:	4299      	cmp	r1, r3
900028ee:	d1fb      	bne.n	900028e8 <_ZN8STM32DMAC1Ev+0x24>
}
900028f0:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028f2:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
900028f6:	bd70      	pop	{r4, r5, r6, pc}
900028f8:	9002b3e8 	.word	0x9002b3e8

900028fc <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900028fc:	4a03      	ldr	r2, [pc, #12]	@ (9000290c <_ZN8touchgfx5paint8tearDownEv+0x10>)
900028fe:	6813      	ldr	r3, [r2, #0]
90002900:	07db      	lsls	r3, r3, #31
90002902:	d4fc      	bmi.n	900028fe <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002904:	2323      	movs	r3, #35	@ 0x23
90002906:	6093      	str	r3, [r2, #8]
}
90002908:	4770      	bx	lr
9000290a:	bf00      	nop
9000290c:	52001000 	.word	0x52001000

90002910 <_ZN8touchgfx5paint9flushLineEPmi>:
void flushLine(uint32_t* addr, int sizebytes)
{
    // This funciton is used when decompressing RGB images to flush
    // the currently decoded pixels in the cache to allow the DMA2D
    // to blend the pixels correcly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002910:	4a0b      	ldr	r2, [pc, #44]	@ (90002940 <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
90002912:	6953      	ldr	r3, [r2, #20]
  \param[in]   dsize   size of memory block (in number of bytes)
*/
__STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
{
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    if ( dsize > 0 ) { 
90002914:	03db      	lsls	r3, r3, #15
90002916:	d501      	bpl.n	9000291c <_ZN8touchgfx5paint9flushLineEPmi+0xc>
90002918:	2900      	cmp	r1, #0
9000291a:	dc00      	bgt.n	9000291e <_ZN8touchgfx5paint9flushLineEPmi+0xe>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
9000291c:	4770      	bx	lr
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
9000291e:	f000 031f 	and.w	r3, r0, #31
90002922:	4419      	add	r1, r3
  __ASM volatile ("dsb 0xF":::"memory");
90002924:	f3bf 8f4f 	dsb	sy
90002928:	4401      	add	r1, r0
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
    
      __DSB();

      do {
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
9000292a:	f8c2 0268 	str.w	r0, [r2, #616]	@ 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
9000292e:	3020      	adds	r0, #32
        op_size -= __SCB_DCACHE_LINE_SIZE;
      } while ( op_size > 0 );
90002930:	1a0b      	subs	r3, r1, r0
90002932:	2b00      	cmp	r3, #0
90002934:	dcf9      	bgt.n	9000292a <_ZN8touchgfx5paint9flushLineEPmi+0x1a>
90002936:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000293a:	f3bf 8f6f 	isb	sy
9000293e:	4770      	bx	lr
90002940:	e000ed00 	.word	0xe000ed00

90002944 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90002944:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002946:	4c11      	ldr	r4, [pc, #68]	@ (9000298c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90002948:	6825      	ldr	r5, [r4, #0]
9000294a:	07ed      	lsls	r5, r5, #31
9000294c:	d4fc      	bmi.n	90002948 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000294e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002950:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90002952:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002954:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002956:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000295a:	f04f 0502 	mov.w	r5, #2
9000295e:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002960:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002962:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
90002964:	d00b      	beq.n	9000297e <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002966:	490a      	ldr	r1, [pc, #40]	@ (90002990 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002968:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
9000296a:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
9000296e:	4909      	ldr	r1, [pc, #36]	@ (90002994 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002970:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90002972:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90002974:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90002976:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90002978:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
9000297a:	bc30      	pop	{r4, r5}
9000297c:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
9000297e:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90002980:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002982:	4b05      	ldr	r3, [pc, #20]	@ (90002998 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90002984:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002986:	6023      	str	r3, [r4, #0]
}
90002988:	bc30      	pop	{r4, r5}
9000298a:	4770      	bx	lr
9000298c:	52001000 	.word	0x52001000
90002990:	00010009 	.word	0x00010009
90002994:	00020001 	.word	0x00020001
90002998:	00030001 	.word	0x00030001

9000299c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
9000299c:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
9000299e:	4c10      	ldr	r4, [pc, #64]	@ (900029e0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
900029a0:	6825      	ldr	r5, [r4, #0]
900029a2:	07ed      	lsls	r5, r5, #31
900029a4:	d4fc      	bmi.n	900029a0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029a6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029a8:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
900029aa:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029ac:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029ae:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029b2:	f04f 0502 	mov.w	r5, #2
900029b6:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029b8:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900029ba:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
900029bc:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
900029be:	d009      	beq.n	900029d4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x38>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029c0:	061b      	lsls	r3, r3, #24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029c2:	4a08      	ldr	r2, [pc, #32]	@ (900029e4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029c4:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
900029c8:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900029ca:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
900029cc:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029ce:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
900029d0:	bc30      	pop	{r4, r5}
900029d2:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029d4:	4a04      	ldr	r2, [pc, #16]	@ (900029e8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029d6:	2301      	movs	r3, #1
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029d8:	61e2      	str	r2, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029da:	6023      	str	r3, [r4, #0]
}
900029dc:	bc30      	pop	{r4, r5}
900029de:	4770      	bx	lr
900029e0:	52001000 	.word	0x52001000
900029e4:	00020001 	.word	0x00020001
900029e8:	ff020002 	.word	0xff020002

900029ec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
900029ec:	b470      	push	{r4, r5, r6}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029ee:	4c0c      	ldr	r4, [pc, #48]	@ (90002a20 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
900029f0:	6825      	ldr	r5, [r4, #0]
900029f2:	07ed      	lsls	r5, r5, #31
900029f4:	d4fc      	bmi.n	900029f0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029f6:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029f8:	2502      	movs	r5, #2

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029fa:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029fc:	2623      	movs	r6, #35	@ 0x23
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029fe:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a02:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a06:	60a6      	str	r6, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a08:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a0a:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a0c:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a0e:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a10:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a12:	4b04      	ldr	r3, [pc, #16]	@ (90002a24 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a14:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a16:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a18:	6023      	str	r3, [r4, #0]
}
90002a1a:	bc70      	pop	{r4, r5, r6}
90002a1c:	4770      	bx	lr
90002a1e:	bf00      	nop
90002a20:	52001000 	.word	0x52001000
90002a24:	00020001 	.word	0x00020001

90002a28 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002a28:	2001      	movs	r0, #1
90002a2a:	4770      	bx	lr

90002a2c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002a2c:	200c      	movs	r0, #12
90002a2e:	4770      	bx	lr

90002a30 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002a30:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a34:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a38:	3008      	adds	r0, #8
90002a3a:	4770      	bx	lr

90002a3c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002a3c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a40:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a44:	3008      	adds	r0, #8
90002a46:	4770      	bx	lr

90002a48 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18pongGameScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a48:	2001      	movs	r0, #1
90002a4a:	4770      	bx	lr

90002a4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18pongGameScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a4c:	f641 50c4 	movw	r0, #7620	@ 0x1dc4
90002a50:	4770      	bx	lr
90002a52:	bf00      	nop

90002a54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18pongGameScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a54:	f641 53c4 	movw	r3, #7620	@ 0x1dc4
90002a58:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a5c:	3008      	adds	r0, #8
90002a5e:	4770      	bx	lr

90002a60 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18pongGameScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a60:	f641 53c4 	movw	r3, #7620	@ 0x1dc4
90002a64:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a68:	3008      	adds	r0, #8
90002a6a:	4770      	bx	lr

90002a6c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI23gameOverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a6c:	2001      	movs	r0, #1
90002a6e:	4770      	bx	lr

90002a70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23gameOverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a70:	2010      	movs	r0, #16
90002a72:	4770      	bx	lr

90002a74 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23gameOverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a74:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a78:	3008      	adds	r0, #8
90002a7a:	4770      	bx	lr

90002a7c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI23gameOverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a7c:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a80:	3008      	adds	r0, #8
90002a82:	4770      	bx	lr

90002a84 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
90002a84:	4608      	mov	r0, r1
90002a86:	f002 ba03 	b.w	90004e90 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
90002a8a:	bf00      	nop

90002a8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002a8c:	4b03      	ldr	r3, [pc, #12]	@ (90002a9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002a8e:	b510      	push	{r4, lr}
90002a90:	4604      	mov	r4, r0
90002a92:	6003      	str	r3, [r0, #0]
90002a94:	f00d fc57 	bl	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a98:	4620      	mov	r0, r4
90002a9a:	bd10      	pop	{r4, pc}
90002a9c:	9002b4a0 	.word	0x9002b4a0

90002aa0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002aa0:	4b05      	ldr	r3, [pc, #20]	@ (90002ab8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002aa2:	b510      	push	{r4, lr}
90002aa4:	4604      	mov	r4, r0
90002aa6:	6003      	str	r3, [r0, #0]
90002aa8:	f00d fc4d 	bl	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002aac:	2114      	movs	r1, #20
90002aae:	4620      	mov	r0, r4
90002ab0:	f026 fcdc 	bl	9002946c <_ZdlPvj>
90002ab4:	4620      	mov	r0, r4
90002ab6:	bd10      	pop	{r4, pc}
90002ab8:	9002b4a0 	.word	0x9002b4a0

90002abc <_ZN8touchgfx9PartitionINS_4meta8TypeListI18pongGameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002abc:	4b03      	ldr	r3, [pc, #12]	@ (90002acc <_ZN8touchgfx9PartitionINS_4meta8TypeListI18pongGameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002abe:	b510      	push	{r4, lr}
90002ac0:	4604      	mov	r4, r0
90002ac2:	6003      	str	r3, [r0, #0]
90002ac4:	f00d fc3f 	bl	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ac8:	4620      	mov	r0, r4
90002aca:	bd10      	pop	{r4, pc}
90002acc:	9002b46c 	.word	0x9002b46c

90002ad0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18pongGameScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002ad0:	4b06      	ldr	r3, [pc, #24]	@ (90002aec <_ZN8touchgfx9PartitionINS_4meta8TypeListI18pongGameScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002ad2:	b510      	push	{r4, lr}
90002ad4:	4604      	mov	r4, r0
90002ad6:	6003      	str	r3, [r0, #0]
90002ad8:	f00d fc35 	bl	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002adc:	f641 51cc 	movw	r1, #7628	@ 0x1dcc
90002ae0:	4620      	mov	r0, r4
90002ae2:	f026 fcc3 	bl	9002946c <_ZdlPvj>
90002ae6:	4620      	mov	r0, r4
90002ae8:	bd10      	pop	{r4, pc}
90002aea:	bf00      	nop
90002aec:	9002b46c 	.word	0x9002b46c

90002af0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23gameOverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002af0:	4b03      	ldr	r3, [pc, #12]	@ (90002b00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23gameOverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002af2:	b510      	push	{r4, lr}
90002af4:	4604      	mov	r4, r0
90002af6:	6003      	str	r3, [r0, #0]
90002af8:	f00d fc25 	bl	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002afc:	4620      	mov	r0, r4
90002afe:	bd10      	pop	{r4, pc}
90002b00:	9002b438 	.word	0x9002b438

90002b04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23gameOverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002b04:	4b05      	ldr	r3, [pc, #20]	@ (90002b1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI23gameOverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002b06:	b510      	push	{r4, lr}
90002b08:	4604      	mov	r4, r0
90002b0a:	6003      	str	r3, [r0, #0]
90002b0c:	f00d fc1b 	bl	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b10:	2118      	movs	r1, #24
90002b12:	4620      	mov	r0, r4
90002b14:	f026 fcaa 	bl	9002946c <_ZdlPvj>
90002b18:	4620      	mov	r0, r4
90002b1a:	bd10      	pop	{r4, pc}
90002b1c:	9002b438 	.word	0x9002b438

90002b20 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002b20:	b510      	push	{r4, lr}
90002b22:	4604      	mov	r4, r0
90002b24:	490c      	ldr	r1, [pc, #48]	@ (90002b58 <_ZN12FrontendHeapD1Ev+0x38>)
90002b26:	4a0d      	ldr	r2, [pc, #52]	@ (90002b5c <_ZN12FrontendHeapD1Ev+0x3c>)
90002b28:	f641 50f8 	movw	r0, #7672	@ 0x1df8
90002b2c:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002b30:	6021      	str	r1, [r4, #0]
90002b32:	4420      	add	r0, r4
90002b34:	f8c3 2df8 	str.w	r2, [r3, #3576]	@ 0xdf8
90002b38:	f00d fc05 	bl	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b3c:	4620      	mov	r0, r4
90002b3e:	4b08      	ldr	r3, [pc, #32]	@ (90002b60 <_ZN12FrontendHeapD1Ev+0x40>)
90002b40:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b44:	f00d fbff 	bl	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b48:	4620      	mov	r0, r4
90002b4a:	4b06      	ldr	r3, [pc, #24]	@ (90002b64 <_ZN12FrontendHeapD1Ev+0x44>)
90002b4c:	f840 3f14 	str.w	r3, [r0, #20]!
90002b50:	f00d fbf9 	bl	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b54:	4620      	mov	r0, r4
90002b56:	bd10      	pop	{r4, pc}
90002b58:	9002b4d4 	.word	0x9002b4d4
90002b5c:	9002b4a0 	.word	0x9002b4a0
90002b60:	9002b46c 	.word	0x9002b46c
90002b64:	9002b438 	.word	0x9002b438

90002b68 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002b68:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002b6a:	4c0c      	ldr	r4, [pc, #48]	@ (90002b9c <__tcf_0+0x34>)
90002b6c:	490c      	ldr	r1, [pc, #48]	@ (90002ba0 <__tcf_0+0x38>)
90002b6e:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002b72:	4a0c      	ldr	r2, [pc, #48]	@ (90002ba4 <__tcf_0+0x3c>)
90002b74:	480c      	ldr	r0, [pc, #48]	@ (90002ba8 <__tcf_0+0x40>)
90002b76:	6021      	str	r1, [r4, #0]
90002b78:	f8c3 2df8 	str.w	r2, [r3, #3576]	@ 0xdf8
90002b7c:	f00d fbe3 	bl	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b80:	4620      	mov	r0, r4
90002b82:	4b0a      	ldr	r3, [pc, #40]	@ (90002bac <__tcf_0+0x44>)
90002b84:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b88:	f00d fbdd 	bl	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b8c:	4620      	mov	r0, r4
90002b8e:	4b08      	ldr	r3, [pc, #32]	@ (90002bb0 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002b90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002b94:	f840 3f14 	str.w	r3, [r0, #20]!
90002b98:	f00d bbd5 	b.w	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b9c:	24006f30 	.word	0x24006f30
90002ba0:	9002b4d4 	.word	0x9002b4d4
90002ba4:	9002b4a0 	.word	0x9002b4a0
90002ba8:	24008d28 	.word	0x24008d28
90002bac:	9002b46c 	.word	0x9002b46c
90002bb0:	9002b438 	.word	0x9002b438

90002bb4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002bb4:	b510      	push	{r4, lr}
90002bb6:	4604      	mov	r4, r0
90002bb8:	4a0f      	ldr	r2, [pc, #60]	@ (90002bf8 <_ZN12FrontendHeapD0Ev+0x44>)
90002bba:	4910      	ldr	r1, [pc, #64]	@ (90002bfc <_ZN12FrontendHeapD0Ev+0x48>)
90002bbc:	f641 50f8 	movw	r0, #7672	@ 0x1df8
90002bc0:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002bc4:	6021      	str	r1, [r4, #0]
90002bc6:	4420      	add	r0, r4
90002bc8:	f8c3 2df8 	str.w	r2, [r3, #3576]	@ 0xdf8
90002bcc:	f00d fbbb 	bl	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bd0:	4620      	mov	r0, r4
90002bd2:	4b0b      	ldr	r3, [pc, #44]	@ (90002c00 <_ZN12FrontendHeapD0Ev+0x4c>)
90002bd4:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bd8:	f00d fbb5 	bl	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bdc:	4b09      	ldr	r3, [pc, #36]	@ (90002c04 <_ZN12FrontendHeapD0Ev+0x50>)
90002bde:	4620      	mov	r0, r4
90002be0:	f840 3f14 	str.w	r3, [r0, #20]!
90002be4:	f00d fbaf 	bl	90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002be8:	4620      	mov	r0, r4
90002bea:	f641 716c 	movw	r1, #8044	@ 0x1f6c
90002bee:	f026 fc3d 	bl	9002946c <_ZdlPvj>
90002bf2:	4620      	mov	r0, r4
90002bf4:	bd10      	pop	{r4, pc}
90002bf6:	bf00      	nop
90002bf8:	9002b4a0 	.word	0x9002b4a0
90002bfc:	9002b4d4 	.word	0x9002b4d4
90002c00:	9002b46c 	.word	0x9002b46c
90002c04:	9002b438 	.word	0x9002b438

90002c08 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002c08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002c0c:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002c0e:	2400      	movs	r4, #0
90002c10:	f001 fbfc 	bl	9000440c <_ZN14BitmapDatabase11getInstanceEv>
90002c14:	4605      	mov	r5, r0
90002c16:	f001 fbfd 	bl	90004414 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002c1a:	4623      	mov	r3, r4
90002c1c:	4601      	mov	r1, r0
90002c1e:	4622      	mov	r2, r4
90002c20:	4628      	mov	r0, r5
90002c22:	9400      	str	r4, [sp, #0]
90002c24:	f017 fbb8 	bl	9001a398 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002c28:	4b2a      	ldr	r3, [pc, #168]	@ (90002cd4 <touchgfx_init+0xcc>)
90002c2a:	4a2b      	ldr	r2, [pc, #172]	@ (90002cd8 <touchgfx_init+0xd0>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002c2c:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002c2e:	4c2b      	ldr	r4, [pc, #172]	@ (90002cdc <touchgfx_init+0xd4>)
90002c30:	601a      	str	r2, [r3, #0]
90002c32:	f002 fddd 	bl	900057f0 <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002c36:	4b2a      	ldr	r3, [pc, #168]	@ (90002ce0 <touchgfx_init+0xd8>)
90002c38:	4a2a      	ldr	r2, [pc, #168]	@ (90002ce4 <touchgfx_init+0xdc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002c3a:	482b      	ldr	r0, [pc, #172]	@ (90002ce8 <touchgfx_init+0xe0>)
90002c3c:	609a      	str	r2, [r3, #8]
90002c3e:	f017 fb13 	bl	9001a268 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002c42:	6823      	ldr	r3, [r4, #0]
90002c44:	f3bf 8f5b 	dmb	ish
90002c48:	07db      	lsls	r3, r3, #31
90002c4a:	d505      	bpl.n	90002c58 <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002c4c:	4827      	ldr	r0, [pc, #156]	@ (90002cec <touchgfx_init+0xe4>)
}
90002c4e:	b002      	add	sp, #8
90002c50:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002c54:	f7fe b94a 	b.w	90000eec <_ZN11TouchGFXHAL10initializeEv>
90002c58:	4620      	mov	r0, r4
90002c5a:	f026 fc09 	bl	90029470 <__cxa_guard_acquire>
90002c5e:	2800      	cmp	r0, #0
90002c60:	d0f4      	beq.n	90002c4c <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002c62:	4d23      	ldr	r5, [pc, #140]	@ (90002cf0 <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
90002c64:	4f23      	ldr	r7, [pc, #140]	@ (90002cf4 <touchgfx_init+0xec>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002c66:	4b24      	ldr	r3, [pc, #144]	@ (90002cf8 <touchgfx_init+0xf0>)
        : presenterStorage(pres),
90002c68:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
90002c6c:	f107 0618 	add.w	r6, r7, #24
          screenStorage(scr),
90002c70:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
90002c74:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
90002c76:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
90002c78:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
90002c7a:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002c7c:	f8c5 8008 	str.w	r8, [r5, #8]
90002c80:	f00d fb62 	bl	90010348 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c84:	4b1d      	ldr	r3, [pc, #116]	@ (90002cfc <touchgfx_init+0xf4>)
90002c86:	4640      	mov	r0, r8
90002c88:	616b      	str	r3, [r5, #20]
90002c8a:	f00d fb5d 	bl	90010348 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c8e:	4b1c      	ldr	r3, [pc, #112]	@ (90002d00 <touchgfx_init+0xf8>)
90002c90:	4638      	mov	r0, r7
90002c92:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002c94:	f00d fb58 	bl	90010348 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002c98:	f505 5380 	add.w	r3, r5, #4096	@ 0x1000
90002c9c:	4a19      	ldr	r2, [pc, #100]	@ (90002d04 <touchgfx_init+0xfc>)
90002c9e:	f603 600c 	addw	r0, r3, #3596	@ 0xe0c
90002ca2:	f8c3 2df8 	str.w	r2, [r3, #3576]	@ 0xdf8
90002ca6:	f003 fb8f 	bl	900063c8 <_ZN5ModelC1Ev>
90002caa:	462a      	mov	r2, r5
90002cac:	f107 0114 	add.w	r1, r7, #20
90002cb0:	4630      	mov	r0, r6
90002cb2:	f003 fb79 	bl	900063a8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002cb6:	4630      	mov	r0, r6
90002cb8:	f002 f8ea 	bl	90004e90 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
90002cbc:	4812      	ldr	r0, [pc, #72]	@ (90002d08 <touchgfx_init+0x100>)
90002cbe:	f026 ff69 	bl	90029b94 <atexit>
90002cc2:	4620      	mov	r0, r4
90002cc4:	f026 fbe0 	bl	90029488 <__cxa_guard_release>
90002cc8:	4808      	ldr	r0, [pc, #32]	@ (90002cec <touchgfx_init+0xe4>)
}
90002cca:	b002      	add	sp, #8
90002ccc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002cd0:	f7fe b90c 	b.w	90000eec <_ZN11TouchGFXHAL10initializeEv>
90002cd4:	24023438 	.word	0x24023438
90002cd8:	240060d8 	.word	0x240060d8
90002cdc:	24006f2c 	.word	0x24006f2c
90002ce0:	240060f8 	.word	0x240060f8
90002ce4:	240060dc 	.word	0x240060dc
90002ce8:	24000040 	.word	0x24000040
90002cec:	24006050 	.word	0x24006050
90002cf0:	24006f30 	.word	0x24006f30
90002cf4:	24008d28 	.word	0x24008d28
90002cf8:	9002b4d4 	.word	0x9002b4d4
90002cfc:	9002b438 	.word	0x9002b438
90002d00:	9002b46c 	.word	0x9002b46c
90002d04:	9002b4a0 	.word	0x9002b4a0
90002d08:	90002b69 	.word	0x90002b69

90002d0c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002d0c:	4770      	bx	lr
90002d0e:	bf00      	nop

90002d10 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002d10:	4801      	ldr	r0, [pc, #4]	@ (90002d18 <touchgfx_taskEntry+0x8>)
90002d12:	f7fe b939 	b.w	90000f88 <_ZN11TouchGFXHAL9taskEntryEv>
90002d16:	bf00      	nop
90002d18:	24006050 	.word	0x24006050

90002d1c <_GLOBAL__sub_I_touchgfx_init>:
}
90002d1c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002d1e:	4e27      	ldr	r6, [pc, #156]	@ (90002dbc <_GLOBAL__sub_I_touchgfx_init+0xa0>)
{
public:

    STM32TouchController() {}
90002d20:	4b27      	ldr	r3, [pc, #156]	@ (90002dc0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
90002d22:	4c28      	ldr	r4, [pc, #160]	@ (90002dc4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
90002d24:	4630      	mov	r0, r6
static LCD16bpp display;
90002d26:	4d28      	ldr	r5, [pc, #160]	@ (90002dc8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
90002d28:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002d2a:	f7ff fdcb 	bl	900028c4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002d2e:	4628      	mov	r0, r5
90002d30:	f01c fc42 	bl	9001f5b8 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002d34:	4825      	ldr	r0, [pc, #148]	@ (90002dcc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002d36:	f015 f863 	bl	90017e00 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002d3a:	4b25      	ldr	r3, [pc, #148]	@ (90002dd0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          mcuInstrumentation(0),
90002d3c:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d3e:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d42:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002d46:	62da      	str	r2, [r3, #44]	@ 0x2c
90002d48:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002d4a:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002d4c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002d50:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002d52:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002d54:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002d58:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002d5c:	4c1d      	ldr	r4, [pc, #116]	@ (90002dd4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002d5e:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002d60:	4c1d      	ldr	r4, [pc, #116]	@ (90002dd8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002d62:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d64:	4c1d      	ldr	r4, [pc, #116]	@ (90002ddc <_GLOBAL__sub_I_touchgfx_init+0xc0>)
90002d66:	8020      	strh	r0, [r4, #0]
90002d68:	4c1d      	ldr	r4, [pc, #116]	@ (90002de0 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002d6a:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d6c:	4c1d      	ldr	r4, [pc, #116]	@ (90002de4 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002d6e:	481e      	ldr	r0, [pc, #120]	@ (90002de8 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002d70:	8021      	strh	r1, [r4, #0]
90002d72:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002d74:	4c1d      	ldr	r4, [pc, #116]	@ (90002dec <_GLOBAL__sub_I_touchgfx_init+0xd0>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002d76:	491e      	ldr	r1, [pc, #120]	@ (90002df0 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002d78:	481e      	ldr	r0, [pc, #120]	@ (90002df4 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
          lcdRef(display),
90002d7a:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d7e:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002d82:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002d86:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002d88:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002d8c:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002d90:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002d94:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002d98:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002d9c:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002da0:	7022      	strb	r2, [r4, #0]
90002da2:	6019      	str	r1, [r3, #0]
90002da4:	4914      	ldr	r1, [pc, #80]	@ (90002df8 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
        : cc_consumed(0),
90002da6:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002daa:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          cc_in(0)
90002dae:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
90002db2:	67d9      	str	r1, [r3, #124]	@ 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002db4:	e9c3 201d 	strd	r2, r0, [r3, #116]	@ 0x74
}
90002db8:	bd70      	pop	{r4, r5, r6, pc}
90002dba:	bf00      	nop
90002dbc:	24006184 	.word	0x24006184
90002dc0:	9002ac48 	.word	0x9002ac48
90002dc4:	24006f28 	.word	0x24006f28
90002dc8:	240060f8 	.word	0x240060f8
90002dcc:	240060dc 	.word	0x240060dc
90002dd0:	24006050 	.word	0x24006050
90002dd4:	01000001 	.word	0x01000001
90002dd8:	240233d4 	.word	0x240233d4
90002ddc:	240233c8 	.word	0x240233c8
90002de0:	240233ce 	.word	0x240233ce
90002de4:	240233ca 	.word	0x240233ca
90002de8:	240233d0 	.word	0x240233d0
90002dec:	240233cc 	.word	0x240233cc
90002df0:	9002add8 	.word	0x9002add8
90002df4:	01010000 	.word	0x01010000
90002df8:	9002ac20 	.word	0x9002ac20

90002dfc <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002dfc:	4801      	ldr	r0, [pc, #4]	@ (90002e04 <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002dfe:	f7ff bad9 	b.w	900023b4 <_ZN8STM32DMAD1Ev>
90002e02:	bf00      	nop
90002e04:	24006184 	.word	0x24006184

90002e08 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002e08:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e0c:	b112      	cbz	r2, 90002e14 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002e0e:	6803      	ldr	r3, [r0, #0]
90002e10:	695b      	ldr	r3, [r3, #20]
90002e12:	4718      	bx	r3
        }
    }
90002e14:	4770      	bx	lr
90002e16:	bf00      	nop

90002e18 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002e18:	2000      	movs	r0, #0
90002e1a:	4770      	bx	lr

90002e1c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002e1c:	8081      	strh	r1, [r0, #4]
    }
90002e1e:	4770      	bx	lr

90002e20 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002e20:	80c1      	strh	r1, [r0, #6]
    }
90002e22:	4770      	bx	lr

90002e24 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002e24:	8101      	strh	r1, [r0, #8]
    }
90002e26:	4770      	bx	lr

90002e28 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002e28:	8141      	strh	r1, [r0, #10]
    }
90002e2a:	4770      	bx	lr

90002e2c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002e2c:	4770      	bx	lr
90002e2e:	bf00      	nop

90002e30 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002e30:	4770      	bx	lr
90002e32:	bf00      	nop

90002e34 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002e34:	4770      	bx	lr
90002e36:	bf00      	nop

90002e38 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002e38:	4770      	bx	lr
90002e3a:	bf00      	nop

90002e3c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002e3c:	4770      	bx	lr
90002e3e:	bf00      	nop

90002e40 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002e40:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002e44:	6803      	ldr	r3, [r0, #0]
90002e46:	eba2 020c 	sub.w	r2, r2, ip
90002e4a:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002e4e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002e50:	eba1 010c 	sub.w	r1, r1, ip
90002e54:	b212      	sxth	r2, r2
90002e56:	b209      	sxth	r1, r1
90002e58:	4718      	bx	r3
90002e5a:	bf00      	nop

90002e5c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002e5c:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e5e:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002e62:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e66:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002e6a:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002e6e:	6010      	str	r0, [r2, #0]
    }
90002e70:	4770      	bx	lr
90002e72:	bf00      	nop

90002e74 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002e74:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e78:	b11a      	cbz	r2, 90002e82 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002e7a:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002e7e:	b102      	cbz	r2, 90002e82 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002e80:	6018      	str	r0, [r3, #0]
        }
    }
90002e82:	4770      	bx	lr

90002e84 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002e84:	2000      	movs	r0, #0
90002e86:	4770      	bx	lr

90002e88 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002e88:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002e8a:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002e8c:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002e8e:	809a      	strh	r2, [r3, #4]
    }
90002e90:	4770      	bx	lr
90002e92:	bf00      	nop

90002e94 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002e94:	4770      	bx	lr
90002e96:	bf00      	nop

90002e98 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002e98:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002e9c:	4770      	bx	lr
90002e9e:	bf00      	nop

90002ea0 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002ea0:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002ea4:	4770      	bx	lr
90002ea6:	bf00      	nop

90002ea8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002ea8:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002eac:	688a      	ldr	r2, [r1, #8]
90002eae:	f8c0 c000 	str.w	ip, [r0]
90002eb2:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002eb4:	4770      	bx	lr
90002eb6:	bf00      	nop

90002eb8 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002eb8:	2200      	movs	r2, #0
90002eba:	6002      	str	r2, [r0, #0]
90002ebc:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002ebe:	4770      	bx	lr

90002ec0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002ec0:	2000      	movs	r0, #0
90002ec2:	4770      	bx	lr

90002ec4 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002ec4:	7701      	strb	r1, [r0, #28]
    }
90002ec6:	4770      	bx	lr

90002ec8 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002ec8:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002ecc:	4770      	bx	lr
90002ece:	bf00      	nop

90002ed0 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002ed0:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002ed4:	4770      	bx	lr
90002ed6:	bf00      	nop

90002ed8 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002ed8:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002edc:	4770      	bx	lr
90002ede:	bf00      	nop

90002ee0 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002ee0:	2001      	movs	r0, #1
90002ee2:	4770      	bx	lr

90002ee4 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002ee4:	3098      	adds	r0, #152	@ 0x98
90002ee6:	4770      	bx	lr

90002ee8 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002ee8:	308c      	adds	r0, #140	@ 0x8c
90002eea:	4770      	bx	lr

90002eec <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002eec:	3084      	adds	r0, #132	@ 0x84
90002eee:	4770      	bx	lr

90002ef0 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002ef0:	4770      	bx	lr
90002ef2:	bf00      	nop

90002ef4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002ef4:	4b03      	ldr	r3, [pc, #12]	@ (90002f04 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002ef6:	2290      	movs	r2, #144	@ 0x90
90002ef8:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002efc:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002f00:	4770      	bx	lr
90002f02:	bf00      	nop
90002f04:	e000e100 	.word	0xe000e100

90002f08 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002f08:	4a09      	ldr	r2, [pc, #36]	@ (90002f30 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002f0a:	490a      	ldr	r1, [pc, #40]	@ (90002f34 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002f0c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002f0e:	480a      	ldr	r0, [pc, #40]	@ (90002f38 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002f10:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002f14:	3b01      	subs	r3, #1
90002f16:	b29b      	uxth	r3, r3
90002f18:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002f1a:	6911      	ldr	r1, [r2, #16]
90002f1c:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002f20:	3901      	subs	r1, #1
90002f22:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002f24:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002f26:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002f28:	f043 0301 	orr.w	r3, r3, #1
90002f2c:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002f2e:	4770      	bx	lr
90002f30:	50001000 	.word	0x50001000
90002f34:	24008e9e 	.word	0x24008e9e
90002f38:	24008e9c 	.word	0x24008e9c

90002f3c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002f3c:	4b01      	ldr	r3, [pc, #4]	@ (90002f44 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002f3e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002f42:	4770      	bx	lr
90002f44:	50001000 	.word	0x50001000

90002f48 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f48:	4b02      	ldr	r3, [pc, #8]	@ (90002f54 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f4a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f4c:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f50:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002f52:	4770      	bx	lr
90002f54:	50001000 	.word	0x50001000

90002f58 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f58:	4770      	bx	lr
90002f5a:	bf00      	nop

90002f5c <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f5c:	4770      	bx	lr
90002f5e:	bf00      	nop

90002f60 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002f60:	4770      	bx	lr
90002f62:	bf00      	nop

90002f64 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002f64:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002f68:	2300      	movs	r3, #0
90002f6a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002f6e:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002f72:	4770      	bx	lr

90002f74 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002f74:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002f78:	4770      	bx	lr
90002f7a:	bf00      	nop

90002f7c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f7c:	b510      	push	{r4, lr}
90002f7e:	4604      	mov	r4, r0
90002f80:	2130      	movs	r1, #48	@ 0x30
90002f82:	f026 fa73 	bl	9002946c <_ZdlPvj>
90002f86:	4620      	mov	r0, r4
90002f88:	bd10      	pop	{r4, pc}
90002f8a:	bf00      	nop

90002f8c <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
90002f8c:	b510      	push	{r4, lr}
90002f8e:	4604      	mov	r4, r0
90002f90:	212c      	movs	r1, #44	@ 0x2c
90002f92:	f026 fa6b 	bl	9002946c <_ZdlPvj>
90002f96:	4620      	mov	r0, r4
90002f98:	bd10      	pop	{r4, pc}
90002f9a:	bf00      	nop

90002f9c <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f9c:	b510      	push	{r4, lr}
90002f9e:	4604      	mov	r4, r0
90002fa0:	21bc      	movs	r1, #188	@ 0xbc
90002fa2:	f026 fa63 	bl	9002946c <_ZdlPvj>
90002fa6:	4620      	mov	r0, r4
90002fa8:	bd10      	pop	{r4, pc}
90002faa:	bf00      	nop

90002fac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90002fac:	b911      	cbnz	r1, 90002fb4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90002fae:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
90002fb2:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002fb4:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002fb6:	4a03      	ldr	r2, [pc, #12]	@ (90002fc4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002fb8:	f44f 7191 	mov.w	r1, #290	@ 0x122
90002fbc:	4b02      	ldr	r3, [pc, #8]	@ (90002fc8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90002fbe:	4803      	ldr	r0, [pc, #12]	@ (90002fcc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002fc0:	f026 fdca 	bl	90029b58 <__assert_func>
90002fc4:	9002b4f4 	.word	0x9002b4f4
90002fc8:	9002b4e0 	.word	0x9002b4e0
90002fcc:	9002b610 	.word	0x9002b610

90002fd0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002fd0:	b921      	cbnz	r1, 90002fdc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002fd2:	6840      	ldr	r0, [r0, #4]
90002fd4:	4611      	mov	r1, r2
90002fd6:	6803      	ldr	r3, [r0, #0]
90002fd8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90002fda:	4718      	bx	r3
        assert(handle < no_streams);
90002fdc:	4b03      	ldr	r3, [pc, #12]	@ (90002fec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90002fde:	f44f 718e 	mov.w	r1, #284	@ 0x11c
90002fe2:	4a03      	ldr	r2, [pc, #12]	@ (90002ff0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002fe4:	4803      	ldr	r0, [pc, #12]	@ (90002ff4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002fe6:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002fe8:	f026 fdb6 	bl	90029b58 <__assert_func>
90002fec:	9002b4e0 	.word	0x9002b4e0
90002ff0:	9002b658 	.word	0x9002b658
90002ff4:	9002b610 	.word	0x9002b610

90002ff8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002ff8:	b909      	cbnz	r1, 90002ffe <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90002ffa:	68c0      	ldr	r0, [r0, #12]
90002ffc:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90002ffe:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003000:	4a03      	ldr	r2, [pc, #12]	@ (90003010 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90003002:	f44f 718a 	mov.w	r1, #276	@ 0x114
90003006:	4b03      	ldr	r3, [pc, #12]	@ (90003014 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90003008:	4803      	ldr	r0, [pc, #12]	@ (90003018 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
9000300a:	f026 fda5 	bl	90029b58 <__assert_func>
9000300e:	bf00      	nop
90003010:	9002b798 	.word	0x9002b798
90003014:	9002b4e0 	.word	0x9002b4e0
90003018:	9002b610 	.word	0x9002b610

9000301c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
9000301c:	b921      	cbnz	r1, 90003028 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
9000301e:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90003020:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90003022:	e9c0 3205 	strd	r3, r2, [r0, #20]
90003026:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90003028:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000302a:	4a03      	ldr	r2, [pc, #12]	@ (90003038 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
9000302c:	2140      	movs	r1, #64	@ 0x40
9000302e:	4b03      	ldr	r3, [pc, #12]	@ (9000303c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90003030:	4803      	ldr	r0, [pc, #12]	@ (90003040 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90003032:	f026 fd91 	bl	90029b58 <__assert_func>
90003036:	bf00      	nop
90003038:	9002b8e0 	.word	0x9002b8e0
9000303c:	9002b4e0 	.word	0x9002b4e0
90003040:	9002b610 	.word	0x9002b610

90003044 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
90003044:	b508      	push	{r3, lr}
90003046:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90003048:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
9000304c:	b940      	cbnz	r0, 90003060 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
9000304e:	2201      	movs	r2, #1
90003050:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
90003054:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
90003058:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
9000305c:	6308      	str	r0, [r1, #48]	@ 0x30
    }
9000305e:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90003060:	4b03      	ldr	r3, [pc, #12]	@ (90003070 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
90003062:	f240 116b 	movw	r1, #363	@ 0x16b
90003066:	4a03      	ldr	r2, [pc, #12]	@ (90003074 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
90003068:	4803      	ldr	r0, [pc, #12]	@ (90003078 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
9000306a:	f026 fd75 	bl	90029b58 <__assert_func>
9000306e:	bf00      	nop
90003070:	9002ba2c 	.word	0x9002ba2c
90003074:	9002ba5c 	.word	0x9002ba5c
90003078:	9002b610 	.word	0x9002b610

9000307c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
9000307c:	f00d bc48 	b.w	90010910 <_ZN8touchgfx3HAL10beginFrameEv>

90003080 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
90003080:	f00d bc52 	b.w	90010928 <_ZN8touchgfx3HAL8endFrameEv>

90003084 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90003084:	f00d bc0e 	b.w	900108a4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

90003088 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
90003088:	f00d bd6f 	b.w	90010b6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

9000308c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
9000308c:	4814      	ldr	r0, [pc, #80]	@ (900030e0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
9000308e:	6943      	ldr	r3, [r0, #20]
90003090:	03d9      	lsls	r1, r3, #15
90003092:	d523      	bpl.n	900030dc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90003094:	2300      	movs	r3, #0
{
90003096:	b510      	push	{r4, lr}
90003098:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
9000309c:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900030a0:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030a4:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
900030a8:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030ac:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
900030b0:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030b4:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030b8:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030ba:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
900030be:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030c0:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
900030c4:	1c5a      	adds	r2, r3, #1
900030c6:	d1f8      	bne.n	900030ba <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
900030c8:	f1ac 0c20 	sub.w	ip, ip, #32
900030cc:	f11c 0f20 	cmn.w	ip, #32
900030d0:	d1f0      	bne.n	900030b4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900030d2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900030d6:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900030da:	bd10      	pop	{r4, pc}
900030dc:	4770      	bx	lr
900030de:	bf00      	nop
900030e0:	e000ed00 	.word	0xe000ed00

900030e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
900030e4:	b5f0      	push	{r4, r5, r6, r7, lr}
900030e6:	b083      	sub	sp, #12
        assert(handle < no_streams);
900030e8:	bb49      	cbnz	r1, 9000313e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5a>
900030ea:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
900030ec:	6840      	ldr	r0, [r0, #4]
900030ee:	461d      	mov	r5, r3
900030f0:	4616      	mov	r6, r2
900030f2:	6803      	ldr	r3, [r0, #0]
900030f4:	691b      	ldr	r3, [r3, #16]
900030f6:	4798      	blx	r3
900030f8:	b908      	cbnz	r0, 900030fe <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
900030fa:	b003      	add	sp, #12
900030fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
900030fe:	4f13      	ldr	r7, [pc, #76]	@ (9000314c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x68>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003100:	2101      	movs	r1, #1
90003102:	6838      	ldr	r0, [r7, #0]
90003104:	f00e f9d8 	bl	900114b8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
90003108:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
9000310a:	4605      	mov	r5, r0
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
9000310c:	4668      	mov	r0, sp
9000310e:	f014 fe5d 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003112:	4b0f      	ldr	r3, [pc, #60]	@ (90003150 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
90003114:	6860      	ldr	r0, [r4, #4]
90003116:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003118:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
9000311c:	881b      	ldrh	r3, [r3, #0]
9000311e:	f9bd 2000 	ldrsh.w	r2, [sp]
90003122:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
90003126:	6804      	ldr	r4, [r0, #0]
90003128:	eb05 0242 	add.w	r2, r5, r2, lsl #1
9000312c:	69e4      	ldr	r4, [r4, #28]
9000312e:	47a0      	blx	r4
90003130:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003132:	6803      	ldr	r3, [r0, #0]
90003134:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
    }
90003136:	b003      	add	sp, #12
90003138:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
9000313c:	4718      	bx	r3
        assert(handle < no_streams);
9000313e:	4b05      	ldr	r3, [pc, #20]	@ (90003154 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
90003140:	21e9      	movs	r1, #233	@ 0xe9
90003142:	4a05      	ldr	r2, [pc, #20]	@ (90003158 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
90003144:	4805      	ldr	r0, [pc, #20]	@ (9000315c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
90003146:	f026 fd07 	bl	90029b58 <__assert_func>
9000314a:	bf00      	nop
9000314c:	240233d4 	.word	0x240233d4
90003150:	240233ce 	.word	0x240233ce
90003154:	9002b4e0 	.word	0x9002b4e0
90003158:	9002bb74 	.word	0x9002bb74
9000315c:	9002b610 	.word	0x9002b610

90003160 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003160:	4b08      	ldr	r3, [pc, #32]	@ (90003184 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
90003162:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90003166:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000316a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000316e:	f3bf 8f6f 	isb	sy
90003172:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
90003176:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000317a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000317e:	f3bf 8f6f 	isb	sy
}
90003182:	4770      	bx	lr
90003184:	e000e100 	.word	0xe000e100

90003188 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003188:	4b03      	ldr	r3, [pc, #12]	@ (90003198 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
9000318a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000318e:	609a      	str	r2, [r3, #8]
90003190:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
90003194:	609a      	str	r2, [r3, #8]
}
90003196:	4770      	bx	lr
90003198:	e000e100 	.word	0xe000e100

9000319c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
9000319c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
900031a0:	2900      	cmp	r1, #0
900031a2:	f040 8096 	bne.w	900032d2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
900031a6:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900031aa:	4604      	mov	r4, r0
900031ac:	b933      	cbnz	r3, 900031bc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
900031ae:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
900031b2:	b91b      	cbnz	r3, 900031bc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
900031b4:	2501      	movs	r5, #1
    }
900031b6:	4628      	mov	r0, r5
900031b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
900031bc:	4b48      	ldr	r3, [pc, #288]	@ (900032e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
900031be:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031c0:	6921      	ldr	r1, [r4, #16]
900031c2:	681b      	ldr	r3, [r3, #0]
900031c4:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
900031c8:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031cc:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
900031ce:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031d2:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
900031d4:	b979      	cbnz	r1, 900031f6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031d6:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
900031d8:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031da:	6961      	ldr	r1, [r4, #20]
900031dc:	fb01 f303 	mul.w	r3, r1, r3
900031e0:	69a1      	ldr	r1, [r4, #24]
900031e2:	fb01 f202 	mul.w	r2, r1, r2
900031e6:	4293      	cmp	r3, r2
900031e8:	d824      	bhi.n	90003234 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
900031ea:	2300      	movs	r3, #0
    }
900031ec:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
900031ee:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
900031f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
900031f6:	6813      	ldr	r3, [r2, #0]
900031f8:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
900031fa:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
900031fc:	695b      	ldr	r3, [r3, #20]
900031fe:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
90003200:	69e1      	ldr	r1, [r4, #28]
90003202:	bb21      	cbnz	r1, 9000324e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
90003204:	6a23      	ldr	r3, [r4, #32]
90003206:	2b00      	cmp	r3, #0
90003208:	d142      	bne.n	90003290 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
9000320a:	4f36      	ldr	r7, [pc, #216]	@ (900032e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
9000320c:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
90003210:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
90003212:	2d00      	cmp	r5, #0
90003214:	d02c      	beq.n	90003270 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
90003216:	699b      	ldr	r3, [r3, #24]
90003218:	4630      	mov	r0, r6
9000321a:	4798      	blx	r3
9000321c:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
9000321e:	6833      	ldr	r3, [r6, #0]
90003220:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003222:	42bb      	cmp	r3, r7
90003224:	d145      	bne.n	900032b2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
90003226:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
90003228:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
9000322a:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
9000322c:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
9000322e:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
90003230:	60a2      	str	r2, [r4, #8]
90003232:	e7d2      	b.n	900031da <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
90003234:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
90003238:	b138      	cbz	r0, 9000324a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
9000323a:	1a9b      	subs	r3, r3, r2
9000323c:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90003240:	4299      	cmp	r1, r3
                    stream.skip_frames--;
90003242:	bf98      	it	ls
90003244:	f102 32ff 	addls.w	r2, r2, #4294967295
90003248:	6222      	str	r2, [r4, #32]
            return true;
9000324a:	2301      	movs	r3, #1
9000324c:	e7ce      	b.n	900031ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
9000324e:	6833      	ldr	r3, [r6, #0]
90003250:	4630      	mov	r0, r6
90003252:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90003254:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
90003256:	6833      	ldr	r3, [r6, #0]
90003258:	69e5      	ldr	r5, [r4, #28]
9000325a:	4630      	mov	r0, r6
9000325c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000325e:	4798      	blx	r3
90003260:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
90003262:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
90003264:	bf28      	it	cs
90003266:	2500      	movcs	r5, #0
90003268:	4f1e      	ldr	r7, [pc, #120]	@ (900032e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
9000326a:	bf38      	it	cc
9000326c:	2501      	movcc	r5, #1
9000326e:	e7d6      	b.n	9000321e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
90003270:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90003272:	42ba      	cmp	r2, r7
90003274:	d124      	bne.n	900032c0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
90003276:	f8d6 8014 	ldr.w	r8, [r6, #20]
9000327a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000327c:	4630      	mov	r0, r6
9000327e:	4798      	blx	r3
90003280:	4580      	cmp	r8, r0
90003282:	d219      	bcs.n	900032b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
90003284:	6833      	ldr	r3, [r6, #0]
90003286:	4630      	mov	r0, r6
90003288:	699b      	ldr	r3, [r3, #24]
9000328a:	4798      	blx	r3
9000328c:	4605      	mov	r5, r0
9000328e:	e7c6      	b.n	9000321e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
90003290:	6832      	ldr	r2, [r6, #0]
90003292:	4f14      	ldr	r7, [pc, #80]	@ (900032e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90003294:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
90003298:	42ba      	cmp	r2, r7
9000329a:	d116      	bne.n	900032ca <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
9000329c:	6970      	ldr	r0, [r6, #20]
9000329e:	18c1      	adds	r1, r0, r3
900032a0:	4630      	mov	r0, r6
900032a2:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
900032a4:	6a22      	ldr	r2, [r4, #32]
900032a6:	68a3      	ldr	r3, [r4, #8]
900032a8:	4413      	add	r3, r2
                        stream.skip_frames = 0;
900032aa:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
900032ac:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
900032ae:	6222      	str	r2, [r4, #32]
900032b0:	e7ac      	b.n	9000320c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
900032b2:	4630      	mov	r0, r6
900032b4:	4798      	blx	r3
900032b6:	e7b7      	b.n	90003228 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
900032b8:	2300      	movs	r3, #0
900032ba:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
900032be:	e7ae      	b.n	9000321e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900032c0:	4630      	mov	r0, r6
900032c2:	4790      	blx	r2
900032c4:	6833      	ldr	r3, [r6, #0]
900032c6:	4680      	mov	r8, r0
900032c8:	e7d7      	b.n	9000327a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032ca:	4630      	mov	r0, r6
900032cc:	4790      	blx	r2
900032ce:	6a23      	ldr	r3, [r4, #32]
900032d0:	e7e5      	b.n	9000329e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
900032d2:	4b05      	ldr	r3, [pc, #20]	@ (900032e8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
900032d4:	21a9      	movs	r1, #169	@ 0xa9
900032d6:	4a05      	ldr	r2, [pc, #20]	@ (900032ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
900032d8:	4805      	ldr	r0, [pc, #20]	@ (900032f0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
900032da:	f026 fc3d 	bl	90029b58 <__assert_func>
900032de:	bf00      	nop
900032e0:	240233d4 	.word	0x240233d4
900032e4:	9000100d 	.word	0x9000100d
900032e8:	9002b4e0 	.word	0x9002b4e0
900032ec:	9002bcbc 	.word	0x9002bcbc
900032f0:	9002b610 	.word	0x9002b610

900032f4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
900032f4:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900032f6:	bb11      	cbnz	r1, 9000333e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
900032f8:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
900032fa:	6840      	ldr	r0, [r0, #4]
900032fc:	4611      	mov	r1, r2
900032fe:	461a      	mov	r2, r3
90003300:	6803      	ldr	r3, [r0, #0]
90003302:	689b      	ldr	r3, [r3, #8]
90003304:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003306:	6860      	ldr	r0, [r4, #4]
90003308:	4a10      	ldr	r2, [pc, #64]	@ (9000334c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
9000330a:	6803      	ldr	r3, [r0, #0]
9000330c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000330e:	4293      	cmp	r3, r2
90003310:	d10c      	bne.n	9000332c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
90003312:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
90003314:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
90003316:	2300      	movs	r3, #0
90003318:	4a0d      	ldr	r2, [pc, #52]	@ (90003350 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
9000331a:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000331c:	60e0      	str	r0, [r4, #12]
9000331e:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
90003320:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90003324:	d104      	bne.n	90003330 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
90003326:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
9000332a:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000332c:	4798      	blx	r3
9000332e:	e7f1      	b.n	90003314 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
90003330:	4620      	mov	r0, r4
90003332:	46ac      	mov	ip, r5
90003334:	2201      	movs	r2, #1
90003336:	4619      	mov	r1, r3
    }
90003338:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
9000333c:	4760      	bx	ip
        assert(handle < no_streams);
9000333e:	4b05      	ldr	r3, [pc, #20]	@ (90003354 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
90003340:	214e      	movs	r1, #78	@ 0x4e
90003342:	4a05      	ldr	r2, [pc, #20]	@ (90003358 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
90003344:	4805      	ldr	r0, [pc, #20]	@ (9000335c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
90003346:	f026 fc07 	bl	90029b58 <__assert_func>
9000334a:	bf00      	nop
9000334c:	9000100d 	.word	0x9000100d
90003350:	900033c9 	.word	0x900033c9
90003354:	9002b4e0 	.word	0x9002b4e0
90003358:	9002bdf0 	.word	0x9002bdf0
9000335c:	9002b610 	.word	0x9002b610

90003360 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
90003360:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
90003362:	bb09      	cbnz	r1, 900033a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
90003364:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
90003366:	6840      	ldr	r0, [r0, #4]
90003368:	4611      	mov	r1, r2
9000336a:	6803      	ldr	r3, [r0, #0]
9000336c:	68db      	ldr	r3, [r3, #12]
9000336e:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003370:	6860      	ldr	r0, [r4, #4]
90003372:	4a10      	ldr	r2, [pc, #64]	@ (900033b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
90003374:	6803      	ldr	r3, [r0, #0]
90003376:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003378:	4293      	cmp	r3, r2
9000337a:	d10c      	bne.n	90003396 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
9000337c:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
9000337e:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
90003380:	2300      	movs	r3, #0
90003382:	4a0d      	ldr	r2, [pc, #52]	@ (900033b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
90003384:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003386:	60e0      	str	r0, [r4, #12]
90003388:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
9000338a:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
9000338e:	d104      	bne.n	9000339a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
90003390:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
90003394:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003396:	4798      	blx	r3
90003398:	e7f1      	b.n	9000337e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
9000339a:	4620      	mov	r0, r4
9000339c:	46ac      	mov	ip, r5
9000339e:	2201      	movs	r2, #1
900033a0:	4619      	mov	r1, r3
    }
900033a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
900033a6:	4760      	bx	ip
        assert(handle < no_streams);
900033a8:	4b04      	ldr	r3, [pc, #16]	@ (900033bc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
900033aa:	215e      	movs	r1, #94	@ 0x5e
900033ac:	4a04      	ldr	r2, [pc, #16]	@ (900033c0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
900033ae:	4805      	ldr	r0, [pc, #20]	@ (900033c4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
900033b0:	f026 fbd2 	bl	90029b58 <__assert_func>
900033b4:	9000100d 	.word	0x9000100d
900033b8:	900033c9 	.word	0x900033c9
900033bc:	9002b4e0 	.word	0x9002b4e0
900033c0:	9002bf5c 	.word	0x9002bf5c
900033c4:	9002b610 	.word	0x9002b610

900033c8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900033c8:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900033ca:	2900      	cmp	r1, #0
900033cc:	d14f      	bne.n	9000346e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
900033ce:	4604      	mov	r4, r0
        switch (cmd)
900033d0:	2a05      	cmp	r2, #5
900033d2:	d80b      	bhi.n	900033ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
900033d4:	e8df f002 	tbb	[pc, r2]
900033d8:	3c373311 	.word	0x3c373311
900033dc:	0b03      	.short	0x0b03
            stream.isPlaying = false;
900033de:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
900033e0:	2201      	movs	r2, #1
            stream.isPlaying = false;
900033e2:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
900033e6:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
900033e8:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
900033ea:	6103      	str	r3, [r0, #16]
    }
900033ec:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
900033ee:	3b00      	subs	r3, #0
900033f0:	bf18      	it	ne
900033f2:	2301      	movne	r3, #1
900033f4:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
900033f8:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
900033fa:	6840      	ldr	r0, [r0, #4]
900033fc:	6803      	ldr	r3, [r0, #0]
900033fe:	691b      	ldr	r3, [r3, #16]
90003400:	4798      	blx	r3
90003402:	2800      	cmp	r0, #0
90003404:	d0f2      	beq.n	900033ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
90003406:	2300      	movs	r3, #0
                stream.isPlaying = true;
90003408:	2101      	movs	r1, #1
                if (!stream.repeat)
9000340a:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
9000340e:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
90003412:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
90003414:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
90003416:	2a00      	cmp	r2, #0
90003418:	d1e8      	bne.n	900033ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
9000341a:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
9000341c:	4917      	ldr	r1, [pc, #92]	@ (9000347c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
9000341e:	6823      	ldr	r3, [r4, #0]
90003420:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90003422:	428a      	cmp	r2, r1
90003424:	d11e      	bne.n	90003464 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
90003426:	6965      	ldr	r5, [r4, #20]
90003428:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000342a:	4620      	mov	r0, r4
9000342c:	4798      	blx	r3
9000342e:	4285      	cmp	r5, r0
90003430:	d1dc      	bne.n	900033ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
90003432:	6823      	ldr	r3, [r4, #0]
90003434:	4620      	mov	r0, r4
90003436:	699b      	ldr	r3, [r3, #24]
    }
90003438:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
9000343c:	4718      	bx	r3
            stream.isPlaying = false;
9000343e:	2300      	movs	r3, #0
90003440:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
90003444:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
90003446:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003448:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
9000344a:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
9000344c:	6102      	str	r2, [r0, #16]
    }
9000344e:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
90003450:	2101      	movs	r1, #1
            stream.frameCount = 0;
90003452:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003454:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
90003456:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
9000345a:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
9000345e:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003460:	6102      	str	r2, [r0, #16]
    }
90003462:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003464:	4620      	mov	r0, r4
90003466:	4790      	blx	r2
90003468:	6823      	ldr	r3, [r4, #0]
9000346a:	4605      	mov	r5, r0
9000346c:	e7dc      	b.n	90003428 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
9000346e:	4b04      	ldr	r3, [pc, #16]	@ (90003480 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
90003470:	216e      	movs	r1, #110	@ 0x6e
90003472:	4a04      	ldr	r2, [pc, #16]	@ (90003484 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
90003474:	4804      	ldr	r0, [pc, #16]	@ (90003488 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
90003476:	f026 fb6f 	bl	90029b58 <__assert_func>
9000347a:	bf00      	nop
9000347c:	9000100d 	.word	0x9000100d
90003480:	9002b4e0 	.word	0x9002b4e0
90003484:	9002c094 	.word	0x9002c094
90003488:	9002b610 	.word	0x9002b610

9000348c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
9000348c:	b538      	push	{r3, r4, r5, lr}
9000348e:	4604      	mov	r4, r0
    HAL::initialize();
90003490:	f00d fa57 	bl	90010942 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
90003494:	6823      	ldr	r3, [r4, #0]
90003496:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
90003498:	f013 fb84 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
9000349c:	4601      	mov	r1, r0
9000349e:	4620      	mov	r0, r4
900034a0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034a2:	6823      	ldr	r3, [r4, #0]
900034a4:	4a13      	ldr	r2, [pc, #76]	@ (900034f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
900034a6:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
900034aa:	4295      	cmp	r5, r2
900034ac:	d116      	bne.n	900034dc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034ae:	4a12      	ldr	r2, [pc, #72]	@ (900034f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034b0:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
900034b2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
900034b6:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034ba:	4810      	ldr	r0, [pc, #64]	@ (900034fc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034bc:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
900034c0:	4a0f      	ldr	r2, [pc, #60]	@ (90003500 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034c2:	7005      	strb	r5, [r0, #0]
900034c4:	4293      	cmp	r3, r2
900034c6:	d110      	bne.n	900034ea <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034c8:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034ca:	4a0e      	ldr	r2, [pc, #56]	@ (90003504 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034cc:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034ce:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900034d0:	4b0d      	ldr	r3, [pc, #52]	@ (90003508 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
900034d2:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
900034d4:	4a0d      	ldr	r2, [pc, #52]	@ (9000350c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
900034d6:	6459      	str	r1, [r3, #68]	@ 0x44
900034d8:	6053      	str	r3, [r2, #4]
}
900034da:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034dc:	4a0c      	ldr	r2, [pc, #48]	@ (90003510 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
900034de:	2300      	movs	r3, #0
900034e0:	4620      	mov	r0, r4
900034e2:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
900034e6:	47a8      	blx	r5
900034e8:	e7f2      	b.n	900034d0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
900034ea:	2100      	movs	r1, #0
900034ec:	4620      	mov	r0, r4
900034ee:	4798      	blx	r3
900034f0:	e7ee      	b.n	900034d0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
900034f2:	bf00      	nop
900034f4:	90000f31 	.word	0x90000f31
900034f8:	d003fc00 	.word	0xd003fc00
900034fc:	240233d2 	.word	0x240233d2
90003500:	90000d6d 	.word	0x90000d6d
90003504:	240233d3 	.word	0x240233d3
90003508:	24008f90 	.word	0x24008f90
9000350c:	24008f60 	.word	0x24008f60
90003510:	d007f800 	.word	0xd007f800

90003514 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
90003514:	4842      	ldr	r0, [pc, #264]	@ (90003620 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
{
90003516:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
90003518:	6804      	ldr	r4, [r0, #0]
9000351a:	f3bf 8f5b 	dmb	ish
9000351e:	f014 0401 	ands.w	r4, r4, #1
90003522:	d001      	beq.n	90003528 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
90003524:	483f      	ldr	r0, [pc, #252]	@ (90003624 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
90003526:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
90003528:	f025 ffa2 	bl	90029470 <__cxa_guard_acquire>
9000352c:	2800      	cmp	r0, #0
9000352e:	d0f9      	beq.n	90003524 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
90003530:	4d3c      	ldr	r5, [pc, #240]	@ (90003624 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
90003532:	4b3d      	ldr	r3, [pc, #244]	@ (90003628 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90003534:	4e3d      	ldr	r6, [pc, #244]	@ (9000362c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
90003536:	f105 0034 	add.w	r0, r5, #52	@ 0x34
9000353a:	612c      	str	r4, [r5, #16]
9000353c:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
90003540:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
90003544:	e9c5 3400 	strd	r3, r4, [r5]
90003548:	e9c5 4402 	strd	r4, r4, [r5, #8]
9000354c:	f014 feb7 	bl	900182be <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
90003550:	f105 0058 	add.w	r0, r5, #88	@ 0x58
90003554:	f010 f976 	bl	90013844 <_ZN8touchgfx12CanvasWidgetC1Ev>
90003558:	4935      	ldr	r1, [pc, #212]	@ (90003630 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
9000355a:	4a36      	ldr	r2, [pc, #216]	@ (90003634 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
9000355c:	6833      	ldr	r3, [r6, #0]
9000355e:	65a9      	str	r1, [r5, #88]	@ 0x58
90003560:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90003564:	4934      	ldr	r1, [pc, #208]	@ (90003638 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
90003566:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
9000356a:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
9000356e:	6029      	str	r1, [r5, #0]
90003570:	b192      	cbz	r2, 90003598 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
90003572:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90003574:	2800      	cmp	r0, #0
90003576:	d03f      	beq.n	900035f8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe4>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90003578:	6803      	ldr	r3, [r0, #0]
9000357a:	4c30      	ldr	r4, [pc, #192]	@ (9000363c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
9000357c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000357e:	42a2      	cmp	r2, r4
90003580:	d017      	beq.n	900035b2 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003582:	4790      	blx	r2
        return auxiliaryLCD;
90003584:	6833      	ldr	r3, [r6, #0]
90003586:	fab0 f680 	clz	r6, r0
9000358a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000358c:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
9000358e:	2800      	cmp	r0, #0
90003590:	d03e      	beq.n	90003610 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfc>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90003592:	6803      	ldr	r3, [r0, #0]
90003594:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003596:	e00a      	b.n	900035ae <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
90003598:	6898      	ldr	r0, [r3, #8]
9000359a:	4c28      	ldr	r4, [pc, #160]	@ (9000363c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
9000359c:	6802      	ldr	r2, [r0, #0]
9000359e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900035a0:	42a2      	cmp	r2, r4
900035a2:	d1ee      	bne.n	90003582 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
900035a4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900035a6:	b120      	cbz	r0, 900035b2 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
900035a8:	6803      	ldr	r3, [r0, #0]
900035aa:	2601      	movs	r6, #1
900035ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035ae:	42a3      	cmp	r3, r4
900035b0:	d129      	bne.n	90003606 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf2>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
900035b2:	4923      	ldr	r1, [pc, #140]	@ (90003640 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
900035b4:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035b6:	2300      	movs	r3, #0
        : AbstractPainter(),
900035b8:	2464      	movs	r4, #100	@ 0x64
900035ba:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : widgetWidth(0)
900035be:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
900035c2:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035c6:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
900035ca:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
900035ce:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
900035d2:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
        : AbstractPainter(),
900035d6:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
900035da:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
900035de:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
900035e2:	4a18      	ldr	r2, [pc, #96]	@ (90003644 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
900035e4:	4818      	ldr	r0, [pc, #96]	@ (90003648 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
900035e6:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
900035ea:	f026 fad3 	bl	90029b94 <atexit>
900035ee:	480c      	ldr	r0, [pc, #48]	@ (90003620 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
900035f0:	f025 ff4a 	bl	90029488 <__cxa_guard_release>
}
900035f4:	480b      	ldr	r0, [pc, #44]	@ (90003624 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
900035f6:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900035f8:	6898      	ldr	r0, [r3, #8]
900035fa:	4c10      	ldr	r4, [pc, #64]	@ (9000363c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900035fc:	6803      	ldr	r3, [r0, #0]
900035fe:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90003600:	42a2      	cmp	r2, r4
90003602:	d0d6      	beq.n	900035b2 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003604:	e7bd      	b.n	90003582 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90003606:	4798      	blx	r3
90003608:	2800      	cmp	r0, #0
9000360a:	bf08      	it	eq
9000360c:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90003610:	2e00      	cmp	r6, #0
90003612:	d1ce      	bne.n	900035b2 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003614:	4b0d      	ldr	r3, [pc, #52]	@ (9000364c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
90003616:	212c      	movs	r1, #44	@ 0x2c
90003618:	4a0d      	ldr	r2, [pc, #52]	@ (90003650 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
9000361a:	480e      	ldr	r0, [pc, #56]	@ (90003654 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
9000361c:	f026 fa9c 	bl	90029b58 <__assert_func>
90003620:	24008ea0 	.word	0x24008ea0
90003624:	24008ea4 	.word	0x24008ea4
90003628:	9002d868 	.word	0x9002d868
9000362c:	240233d4 	.word	0x240233d4
90003630:	9002c320 	.word	0x9002c320
90003634:	9002c300 	.word	0x9002c300
90003638:	9002c398 	.word	0x9002c398
9000363c:	90002ec1 	.word	0x90002ec1
90003640:	9002d81c 	.word	0x9002d81c
90003644:	9002d7fc 	.word	0x9002d7fc
90003648:	90002ef1 	.word	0x90002ef1
9000364c:	9002c1f8 	.word	0x9002c1f8
90003650:	9002c258 	.word	0x9002c258
90003654:	9002c294 	.word	0x9002c294

90003658 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90003658:	b510      	push	{r4, lr}
        return instance;
9000365a:	4c14      	ldr	r4, [pc, #80]	@ (900036ac <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
9000365c:	6823      	ldr	r3, [r4, #0]
9000365e:	b323      	cbz	r3, 900036aa <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90003660:	4b13      	ldr	r3, [pc, #76]	@ (900036b0 <HAL_LTDC_LineEventCallback+0x58>)
90003662:	4a14      	ldr	r2, [pc, #80]	@ (900036b4 <HAL_LTDC_LineEventCallback+0x5c>)
90003664:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90003666:	8811      	ldrh	r1, [r2, #0]
90003668:	428b      	cmp	r3, r1
9000366a:	d00a      	beq.n	90003682 <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
9000366c:	f007 fc9c 	bl	9000afa8 <HAL_LTDC_ProgramLineEvent>
90003670:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
90003672:	6803      	ldr	r3, [r0, #0]
90003674:	6a1b      	ldr	r3, [r3, #32]
90003676:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90003678:	2000      	movs	r0, #0
        }
    }
9000367a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
9000367e:	f7fd bb19 	b.w	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
90003682:	4b0d      	ldr	r3, [pc, #52]	@ (900036b8 <HAL_LTDC_LineEventCallback+0x60>)
90003684:	8819      	ldrh	r1, [r3, #0]
90003686:	f007 fc8f 	bl	9000afa8 <HAL_LTDC_ProgramLineEvent>
        return instance;
9000368a:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
9000368c:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
90003690:	3301      	adds	r3, #1
90003692:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            OSWrappers::signalVSync();
90003696:	f7fe fe65 	bl	90002364 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
9000369a:	6820      	ldr	r0, [r4, #0]
9000369c:	f00d feaa 	bl	900113f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
900036a0:	2000      	movs	r0, #0
    }
900036a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
900036a6:	f7fd bad1 	b.w	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900036aa:	bd10      	pop	{r4, pc}
900036ac:	240233d4 	.word	0x240233d4
900036b0:	50001000 	.word	0x50001000
900036b4:	24008e9e 	.word	0x24008e9e
900036b8:	24008e9c 	.word	0x24008e9c

900036bc <_GLOBAL__sub_I_mjpegdecoder1>:
}
900036bc:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
900036be:	480b      	ldr	r0, [pc, #44]	@ (900036ec <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
900036c0:	f7fd fe1a 	bl	900012f8 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
900036c4:	4c0a      	ldr	r4, [pc, #40]	@ (900036f0 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
900036c6:	4b0b      	ldr	r3, [pc, #44]	@ (900036f4 <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
900036c8:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036ca:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
900036ce:	2101      	movs	r1, #1
900036d0:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036d2:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
900036d4:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
900036d8:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
900036dc:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
900036de:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
900036e2:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
900036e6:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
900036ea:	bd10      	pop	{r4, pc}
900036ec:	24008f90 	.word	0x24008f90
900036f0:	9002c3e4 	.word	0x9002c3e4
900036f4:	24008f60 	.word	0x24008f60

900036f8 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
900036f8:	4901      	ldr	r1, [pc, #4]	@ (90003700 <vApplicationIdleHook+0x8>)
900036fa:	2000      	movs	r0, #0
900036fc:	f00c b984 	b.w	9000fa08 <vTaskSetApplicationTaskTag>
90003700:	90000fed 	.word	0x90000fed

90003704 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
90003704:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
90003706:	2064      	movs	r0, #100	@ 0x64
90003708:	f00a f842 	bl	9000d790 <osDelay>
  for(;;)
9000370c:	e7fb      	b.n	90003706 <StartDefaultTask+0x2>
9000370e:	bf00      	nop

90003710 <buttonListenerTaskFunction>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_buttonListenerTaskFunction */
void buttonListenerTaskFunction(void *argument)
{
90003710:	b5f0      	push	{r4, r5, r6, r7, lr}
  /* USER CODE BEGIN buttonListenerTaskFunction */
  int stateSent = 0;
  uint16_t pinStateInfo = 1;
90003712:	2701      	movs	r7, #1
{
90003714:	b083      	sub	sp, #12
  int stateSent = 0;
90003716:	2400      	movs	r4, #0
90003718:	4e14      	ldr	r6, [pc, #80]	@ (9000376c <buttonListenerTaskFunction+0x5c>)
  /* Infinite loop */
  for(;;)
  {
	GPIO_PinState buttonPinState = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13);
9000371a:	4d15      	ldr	r5, [pc, #84]	@ (90003770 <buttonListenerTaskFunction+0x60>)
  uint16_t pinStateInfo = 1;
9000371c:	f8ad 7006 	strh.w	r7, [sp, #6]
90003720:	e008      	b.n	90003734 <buttonListenerTaskFunction+0x24>
	if (buttonPinState == GPIO_PIN_SET && stateSent == 0) {
		pinStateInfo = 1;
		osMessageQueuePut(buttonQueueHandle, &pinStateInfo, 0U, 0U);
90003722:	6830      	ldr	r0, [r6, #0]
		stateSent = 1;
90003724:	2401      	movs	r4, #1
		pinStateInfo = 1;
90003726:	f8ad 7006 	strh.w	r7, [sp, #6]
		osMessageQueuePut(buttonQueueHandle, &pinStateInfo, 0U, 0U);
9000372a:	f00a f923 	bl	9000d974 <osMessageQueuePut>
	} else if (buttonPinState == GPIO_PIN_RESET && stateSent == 1) {
		pinStateInfo = 0;
		osMessageQueuePut(buttonQueueHandle, &pinStateInfo, 0U, 0U);
		stateSent = 0;
	}
    osDelay(10);
9000372e:	200a      	movs	r0, #10
90003730:	f00a f82e 	bl	9000d790 <osDelay>
	GPIO_PinState buttonPinState = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13);
90003734:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90003738:	4628      	mov	r0, r5
9000373a:	f005 f92f 	bl	9000899c <HAL_GPIO_ReadPin>
		osMessageQueuePut(buttonQueueHandle, &pinStateInfo, 0U, 0U);
9000373e:	2300      	movs	r3, #0
	if (buttonPinState == GPIO_PIN_SET && stateSent == 0) {
90003740:	2801      	cmp	r0, #1
		osMessageQueuePut(buttonQueueHandle, &pinStateInfo, 0U, 0U);
90003742:	f10d 0106 	add.w	r1, sp, #6
90003746:	461a      	mov	r2, r3
	if (buttonPinState == GPIO_PIN_SET && stateSent == 0) {
90003748:	d101      	bne.n	9000374e <buttonListenerTaskFunction+0x3e>
9000374a:	2c00      	cmp	r4, #0
9000374c:	d0e9      	beq.n	90003722 <buttonListenerTaskFunction+0x12>
	} else if (buttonPinState == GPIO_PIN_RESET && stateSent == 1) {
9000374e:	2800      	cmp	r0, #0
90003750:	d1ed      	bne.n	9000372e <buttonListenerTaskFunction+0x1e>
		pinStateInfo = 0;
90003752:	2300      	movs	r3, #0
		osMessageQueuePut(buttonQueueHandle, &pinStateInfo, 0U, 0U);
90003754:	f10d 0106 	add.w	r1, sp, #6
	} else if (buttonPinState == GPIO_PIN_RESET && stateSent == 1) {
90003758:	2c00      	cmp	r4, #0
9000375a:	d0e8      	beq.n	9000372e <buttonListenerTaskFunction+0x1e>
		osMessageQueuePut(buttonQueueHandle, &pinStateInfo, 0U, 0U);
9000375c:	461a      	mov	r2, r3
9000375e:	6830      	ldr	r0, [r6, #0]
		stateSent = 0;
90003760:	461c      	mov	r4, r3
		pinStateInfo = 0;
90003762:	f8ad 3006 	strh.w	r3, [sp, #6]
		osMessageQueuePut(buttonQueueHandle, &pinStateInfo, 0U, 0U);
90003766:	f00a f905 	bl	9000d974 <osMessageQueuePut>
		stateSent = 0;
9000376a:	e7e0      	b.n	9000372e <buttonListenerTaskFunction+0x1e>
9000376c:	24008fd8 	.word	0x24008fd8
90003770:	58020800 	.word	0x58020800

90003774 <SystemClock_Config>:
{
90003774:	b570      	push	{r4, r5, r6, lr}
90003776:	b0a0      	sub	sp, #128	@ 0x80
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90003778:	224c      	movs	r2, #76	@ 0x4c
9000377a:	2100      	movs	r1, #0
9000377c:	a80c      	add	r0, sp, #48	@ 0x30
9000377e:	f026 fc87 	bl	9002a090 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90003782:	2220      	movs	r2, #32
90003784:	2100      	movs	r1, #0
90003786:	a804      	add	r0, sp, #16
90003788:	f026 fc82 	bl	9002a090 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
9000378c:	2002      	movs	r0, #2
9000378e:	f007 fe75 	bl	9000b47c <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90003792:	4b34      	ldr	r3, [pc, #208]	@ (90003864 <SystemClock_Config+0xf0>)
90003794:	2100      	movs	r1, #0
90003796:	4a34      	ldr	r2, [pc, #208]	@ (90003868 <SystemClock_Config+0xf4>)
90003798:	9101      	str	r1, [sp, #4]
9000379a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
9000379c:	f021 0101 	bic.w	r1, r1, #1
900037a0:	62d9      	str	r1, [r3, #44]	@ 0x2c
900037a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900037a4:	f003 0301 	and.w	r3, r3, #1
900037a8:	9301      	str	r3, [sp, #4]
900037aa:	6993      	ldr	r3, [r2, #24]
900037ac:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
900037b0:	6193      	str	r3, [r2, #24]
900037b2:	6993      	ldr	r3, [r2, #24]
900037b4:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
900037b8:	9301      	str	r3, [sp, #4]
900037ba:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
900037bc:	6993      	ldr	r3, [r2, #24]
900037be:	0498      	lsls	r0, r3, #18
900037c0:	d5fc      	bpl.n	900037bc <SystemClock_Config+0x48>
  __HAL_RCC_SYSCFG_CLK_ENABLE();
900037c2:	4b2a      	ldr	r3, [pc, #168]	@ (9000386c <SystemClock_Config+0xf8>)
900037c4:	f8d3 10f4 	ldr.w	r1, [r3, #244]	@ 0xf4
900037c8:	f041 0102 	orr.w	r1, r1, #2
900037cc:	f8c3 10f4 	str.w	r1, [r3, #244]	@ 0xf4
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
900037d0:	2100      	movs	r1, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
900037d2:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
900037d6:	f003 0302 	and.w	r3, r3, #2
900037da:	9302      	str	r3, [sp, #8]
900037dc:	9b02      	ldr	r3, [sp, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
900037de:	9103      	str	r1, [sp, #12]
900037e0:	6991      	ldr	r1, [r2, #24]
900037e2:	4b20      	ldr	r3, [pc, #128]	@ (90003864 <SystemClock_Config+0xf0>)
900037e4:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
900037e8:	6191      	str	r1, [r2, #24]
900037ea:	6992      	ldr	r2, [r2, #24]
900037ec:	f402 4240 	and.w	r2, r2, #49152	@ 0xc000
900037f0:	9203      	str	r2, [sp, #12]
900037f2:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
900037f4:	4a1c      	ldr	r2, [pc, #112]	@ (90003868 <SystemClock_Config+0xf4>)
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
900037f6:	f041 0101 	orr.w	r1, r1, #1
900037fa:	62d9      	str	r1, [r3, #44]	@ 0x2c
900037fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900037fe:	f003 0301 	and.w	r3, r3, #1
90003802:	9303      	str	r3, [sp, #12]
90003804:	9b03      	ldr	r3, [sp, #12]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003806:	6993      	ldr	r3, [r2, #24]
90003808:	0499      	lsls	r1, r3, #18
9000380a:	d5fc      	bpl.n	90003806 <SystemClock_Config+0x92>
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
9000380c:	2302      	movs	r3, #2
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
9000380e:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
90003812:	2001      	movs	r0, #1
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003814:	2400      	movs	r4, #0
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003816:	2604      	movs	r6, #4
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90003818:	2508      	movs	r5, #8
  RCC_OscInitStruct.PLL.PLLN = 192;
9000381a:	2205      	movs	r2, #5
  RCC_OscInitStruct.PLL.PLLP = 2;
9000381c:	9319      	str	r3, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLR = 2;
9000381e:	931b      	str	r3, [sp, #108]	@ 0x6c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003820:	961a      	str	r6, [sp, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003822:	941e      	str	r4, [sp, #120]	@ 0x78
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90003824:	e9cd 3315 	strd	r3, r3, [sp, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLN = 192;
90003828:	23c0      	movs	r3, #192	@ 0xc0
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
9000382a:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
9000382e:	a80c      	add	r0, sp, #48	@ 0x30
  RCC_OscInitStruct.PLL.PLLN = 192;
90003830:	e9cd 2317 	strd	r2, r3, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003834:	e9cd 541c 	strd	r5, r4, [sp, #112]	@ 0x70
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003838:	f007 feb6 	bl	9000b5a8 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
9000383c:	2340      	movs	r3, #64	@ 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
9000383e:	223f      	movs	r2, #63	@ 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003840:	4631      	mov	r1, r6
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90003842:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003844:	a804      	add	r0, sp, #16
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003846:	9204      	str	r2, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003848:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
9000384a:	930b      	str	r3, [sp, #44]	@ 0x2c
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
9000384c:	9406      	str	r4, [sp, #24]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
9000384e:	9205      	str	r2, [sp, #20]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90003850:	e9cd 5307 	strd	r5, r3, [sp, #28]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003854:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90003858:	930a      	str	r3, [sp, #40]	@ 0x28
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
9000385a:	f008 fa25 	bl	9000bca8 <HAL_RCC_ClockConfig>
}
9000385e:	b020      	add	sp, #128	@ 0x80
90003860:	bd70      	pop	{r4, r5, r6, pc}
90003862:	bf00      	nop
90003864:	58000400 	.word	0x58000400
90003868:	58024800 	.word	0x58024800
9000386c:	58024400 	.word	0x58024400

90003870 <main>:
{
90003870:	b580      	push	{r7, lr}

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003872:	2400      	movs	r4, #0
{
90003874:	b09a      	sub	sp, #104	@ 0x68
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003876:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003878:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
9000387a:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
9000387c:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
90003880:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_MPU_Disable();
90003884:	f004 fc78 	bl	90008178 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90003888:	f04f 5310 	mov.w	r3, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
9000388c:	f8df c388 	ldr.w	ip, [pc, #904]	@ 90003c18 <main+0x3a8>
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003890:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.BaseAddress = 0x24000000;
90003892:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003894:	4bd5      	ldr	r3, [pc, #852]	@ (90003bec <main+0x37c>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003896:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
9000389a:	e9cd c30f 	strd	ip, r3, [sp, #60]	@ 0x3c
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000389e:	f004 fc89 	bl	900081b4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
900038a2:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038a6:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
900038a8:	f88d 403f 	strb.w	r4, [sp, #63]	@ 0x3f
  MPU_InitStruct.BaseAddress = 0x90000000;
900038ac:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
900038ae:	f8ad 4042 	strh.w	r4, [sp, #66]	@ 0x42
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
900038b2:	f88d 5035 	strb.w	r5, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
900038b6:	f88d 703c 	strb.w	r7, [sp, #60]	@ 0x3c
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038ba:	f004 fc7b 	bl	900081b4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
900038be:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038c0:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
900038c2:	f8ad 603f 	strh.w	r6, [sp, #63]	@ 0x3f
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
900038c6:	f88d 3035 	strb.w	r3, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
900038ca:	231a      	movs	r3, #26
900038cc:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
900038d0:	f240 1301 	movw	r3, #257	@ 0x101
900038d4:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038d8:	f004 fc6c 	bl	900081b4 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
900038dc:	f44f 7380 	mov.w	r3, #256	@ 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038e0:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
900038e2:	f8ad 4042 	strh.w	r4, [sp, #66]	@ 0x42

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
900038e6:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
900038e8:	f8ad 303f 	strh.w	r3, [sp, #63]	@ 0x3f
  MPU_InitStruct.BaseAddress = 0xD0000000;
900038ec:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
900038f0:	f88d 703c 	strb.w	r7, [sp, #60]	@ 0x3c
  MPU_InitStruct.BaseAddress = 0xD0000000;
900038f4:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
900038f6:	f88d 6035 	strb.w	r6, [sp, #53]	@ 0x35
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038fa:	f004 fc5b 	bl	900081b4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
900038fe:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003900:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003902:	f88d 603f 	strb.w	r6, [sp, #63]	@ 0x3f
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003906:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
9000390a:	f88d 4035 	strb.w	r4, [sp, #53]	@ 0x35
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
9000390e:	f88d 5042 	strb.w	r5, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003912:	f004 fc4f 	bl	900081b4 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90003916:	4620      	mov	r0, r4
90003918:	f004 fc3c 	bl	90008194 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
9000391c:	4ab4      	ldr	r2, [pc, #720]	@ (90003bf0 <main+0x380>)
9000391e:	6953      	ldr	r3, [r2, #20]
90003920:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
90003924:	d111      	bne.n	9000394a <main+0xda>
  __ASM volatile ("dsb 0xF":::"memory");
90003926:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000392a:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
9000392e:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90003932:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003936:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
9000393a:	6953      	ldr	r3, [r2, #20]
9000393c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
90003940:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90003942:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003946:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
9000394a:	48a9      	ldr	r0, [pc, #676]	@ (90003bf0 <main+0x380>)
9000394c:	6943      	ldr	r3, [r0, #20]
9000394e:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
90003952:	d124      	bne.n	9000399e <main+0x12e>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90003954:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90003958:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
9000395c:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003960:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003964:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003968:	f3c5 05c9 	ubfx	r5, r5, #3, #10
9000396c:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
9000396e:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003972:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003974:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90003978:	3b01      	subs	r3, #1
9000397a:	1c5f      	adds	r7, r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
9000397c:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
90003980:	d1f8      	bne.n	90003974 <main+0x104>
    } while(sets-- != 0U);
90003982:	3c20      	subs	r4, #32
90003984:	f114 0f20 	cmn.w	r4, #32
90003988:	d1f1      	bne.n	9000396e <main+0xfe>
9000398a:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
9000398e:	6943      	ldr	r3, [r0, #20]
90003990:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
90003994:	6143      	str	r3, [r0, #20]
90003996:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000399a:	f3bf 8f6f 	isb	sy
  HAL_Init();
9000399e:	f004 fb35 	bl	9000800c <HAL_Init>
  SystemClock_Config();
900039a2:	f7ff fee7 	bl	90003774 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
900039a6:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900039a8:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
900039aa:	4d92      	ldr	r5, [pc, #584]	@ (90003bf4 <main+0x384>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
900039ac:	21c0      	movs	r1, #192	@ 0xc0
900039ae:	4892      	ldr	r0, [pc, #584]	@ (90003bf8 <main+0x388>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900039b0:	9411      	str	r4, [sp, #68]	@ 0x44
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
900039b2:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
900039b4:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
900039b6:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
900039ba:	2708      	movs	r7, #8
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
900039bc:	f04f 0905 	mov.w	r9, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900039c0:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
900039c4:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  __HAL_RCC_GPIOK_CLK_ENABLE();
900039c8:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039cc:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
900039d0:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900039d4:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039d8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
900039dc:	9302      	str	r3, [sp, #8]
900039de:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
900039e0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039e4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
900039e8:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900039ec:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039f0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
900039f4:	9303      	str	r3, [sp, #12]
900039f6:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOI_CLK_ENABLE();
900039f8:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039fc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90003a00:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a04:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a08:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90003a0c:	9304      	str	r3, [sp, #16]
90003a0e:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90003a10:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a14:	f043 0310 	orr.w	r3, r3, #16
90003a18:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a1c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a20:	f003 0310 	and.w	r3, r3, #16
90003a24:	9305      	str	r3, [sp, #20]
90003a26:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90003a28:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a2c:	f043 0302 	orr.w	r3, r3, #2
90003a30:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a34:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a38:	f003 0302 	and.w	r3, r3, #2
90003a3c:	9306      	str	r3, [sp, #24]
90003a3e:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90003a40:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a44:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90003a48:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a4c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a50:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90003a54:	9307      	str	r3, [sp, #28]
90003a56:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90003a58:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a5c:	f043 0308 	orr.w	r3, r3, #8
90003a60:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a64:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a68:	f003 0308 	and.w	r3, r3, #8
90003a6c:	9308      	str	r3, [sp, #32]
90003a6e:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
90003a70:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a74:	f043 0304 	orr.w	r3, r3, #4
90003a78:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a7c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a80:	f003 0304 	and.w	r3, r3, #4
90003a84:	9309      	str	r3, [sp, #36]	@ 0x24
90003a86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOF_CLK_ENABLE();
90003a88:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a8c:	f043 0320 	orr.w	r3, r3, #32
90003a90:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a94:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a98:	f003 0320 	and.w	r3, r3, #32
90003a9c:	930a      	str	r3, [sp, #40]	@ 0x28
90003a9e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
90003aa0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003aa4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90003aa8:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003aac:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ab0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90003ab4:	930b      	str	r3, [sp, #44]	@ 0x2c
90003ab6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
90003ab8:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003abc:	f043 0301 	orr.w	r3, r3, #1
90003ac0:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003ac4:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003ac8:	f003 0301 	and.w	r3, r3, #1
90003acc:	930c      	str	r3, [sp, #48]	@ 0x30
90003ace:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003ad0:	f004 ff6a 	bl	900089a8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003ad4:	4622      	mov	r2, r4
90003ad6:	2180      	movs	r1, #128	@ 0x80
90003ad8:	4848      	ldr	r0, [pc, #288]	@ (90003bfc <main+0x38c>)
90003ada:	f004 ff65 	bl	900089a8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90003ade:	4622      	mov	r2, r4
90003ae0:	2108      	movs	r1, #8
90003ae2:	4847      	ldr	r0, [pc, #284]	@ (90003c00 <main+0x390>)
90003ae4:	f004 ff60 	bl	900089a8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90003ae8:	2201      	movs	r2, #1
90003aea:	4846      	ldr	r0, [pc, #280]	@ (90003c04 <main+0x394>)
90003aec:	4611      	mov	r1, r2
90003aee:	f004 ff5b 	bl	900089a8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90003af2:	4622      	mov	r2, r4
90003af4:	2140      	movs	r1, #64	@ 0x40
90003af6:	4844      	ldr	r0, [pc, #272]	@ (90003c08 <main+0x398>)
90003af8:	f004 ff56 	bl	900089a8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90003afc:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003afe:	a90d      	add	r1, sp, #52	@ 0x34
90003b00:	483d      	ldr	r0, [pc, #244]	@ (90003bf8 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003b02:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003b06:	e9cd 480f 	strd	r4, r8, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003b0a:	f004 fd3b 	bl	90008584 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003b0e:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003b10:	a90d      	add	r1, sp, #52	@ 0x34
90003b12:	483a      	ldr	r0, [pc, #232]	@ (90003bfc <main+0x38c>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003b14:	930d      	str	r3, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003b16:	9410      	str	r4, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003b18:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003b1c:	f004 fd32 	bl	90008584 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_13;
90003b20:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
90003b24:	a90d      	add	r1, sp, #52	@ 0x34
90003b26:	4839      	ldr	r0, [pc, #228]	@ (90003c0c <main+0x39c>)
  GPIO_InitStruct.Pin = GPIO_PIN_13;
90003b28:	930d      	str	r3, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003b2a:	e9cd 440e 	strd	r4, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
90003b2e:	f004 fd29 	bl	90008584 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003b32:	a90d      	add	r1, sp, #52	@ 0x34
90003b34:	4832      	ldr	r0, [pc, #200]	@ (90003c00 <main+0x390>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003b36:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003b3a:	970d      	str	r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003b3c:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003b40:	f004 fd20 	bl	90008584 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003b44:	a90d      	add	r1, sp, #52	@ 0x34
90003b46:	482f      	ldr	r0, [pc, #188]	@ (90003c04 <main+0x394>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003b48:	e9cd 660d 	strd	r6, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003b4c:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003b50:	f004 fd18 	bl	90008584 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003b54:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003b58:	f04f 0840 	mov.w	r8, #64	@ 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003b5c:	a90d      	add	r1, sp, #52	@ 0x34
90003b5e:	482a      	ldr	r0, [pc, #168]	@ (90003c08 <main+0x398>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003b60:	f8cd 8034 	str.w	r8, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003b64:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003b68:	f004 fd0c 	bl	90008584 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b6c:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003b70:	4622      	mov	r2, r4
90003b72:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b74:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003b76:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b78:	f8c5 30d4 	str.w	r3, [r5, #212]	@ 0xd4
90003b7c:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  hltdc.Instance = LTDC;
90003b80:	4d23      	ldr	r5, [pc, #140]	@ (90003c10 <main+0x3a0>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b82:	4033      	ands	r3, r6
90003b84:	9301      	str	r3, [sp, #4]
90003b86:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003b88:	f004 fa9a 	bl	900080c0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90003b8c:	207a      	movs	r0, #122	@ 0x7a
90003b8e:	f004 fad3 	bl	90008138 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90003b92:	2234      	movs	r2, #52	@ 0x34
90003b94:	4621      	mov	r1, r4
90003b96:	eb0d 0002 	add.w	r0, sp, r2
90003b9a:	f026 fa79 	bl	9002a090 <memset>
  hltdc.Instance = LTDC;
90003b9e:	4b1d      	ldr	r3, [pc, #116]	@ (90003c14 <main+0x3a4>)
  hltdc.Init.AccumulatedVBP = 11;
90003ba0:	202a      	movs	r0, #42	@ 0x2a
  hltdc.Init.VerticalSync = 8;
90003ba2:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90003ba4:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90003ba6:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90003ba8:	f240 270a 	movw	r7, #522	@ 0x20a
  hltdc.Init.TotalHeigh = 285;
90003bac:	f44f 7c04 	mov.w	ip, #528	@ 0x210
  hltdc.Init.HorizontalSync = 39;
90003bb0:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90003bb2:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90003bb4:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90003bb6:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.AccumulatedVBP = 11;
90003bba:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90003bbe:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003bc2:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90003bc4:	e9c5 7309 	strd	r7, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
90003bc8:	f240 131d 	movw	r3, #285	@ 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90003bcc:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90003bce:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90003bd2:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90003bd6:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003bda:	f007 f83d 	bl	9000ac58 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90003bde:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003be2:	4622      	mov	r2, r4
90003be4:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.WindowX1 = 480;
90003be6:	930e      	str	r3, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003be8:	4628      	mov	r0, r5
90003bea:	e017      	b.n	90003c1c <main+0x3ac>
90003bec:	01010001 	.word	0x01010001
90003bf0:	e000ed00 	.word	0xe000ed00
90003bf4:	58024400 	.word	0x58024400
90003bf8:	58020400 	.word	0x58020400
90003bfc:	58020c00 	.word	0x58020c00
90003c00:	58021800 	.word	0x58021800
90003c04:	58022800 	.word	0x58022800
90003c08:	58020000 	.word	0x58020000
90003c0c:	58020800 	.word	0x58020800
90003c10:	2400901c 	.word	0x2400901c
90003c14:	50001000 	.word	0x50001000
90003c18:	03000012 	.word	0x03000012
  pLayerCfg.ImageWidth = 480;
90003c1c:	9317      	str	r3, [sp, #92]	@ 0x5c
  pLayerCfg.WindowY1 = 272;
90003c1e:	f44f 7388 	mov.w	r3, #272	@ 0x110
  hdma2d.Instance = DMA2D;
90003c22:	4d43      	ldr	r5, [pc, #268]	@ (90003d30 <main+0x4c0>)
  pLayerCfg.WindowY1 = 272;
90003c24:	9310      	str	r3, [sp, #64]	@ 0x40
  pLayerCfg.ImageHeight = 272;
90003c26:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Alpha = 255;
90003c28:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.WindowX0 = 0;
90003c2a:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Alpha = 255;
90003c2c:	9312      	str	r3, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003c2e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
  pLayerCfg.WindowY0 = 0;
90003c32:	940f      	str	r4, [sp, #60]	@ 0x3c
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003c34:	9314      	str	r3, [sp, #80]	@ 0x50
  pLayerCfg.Alpha0 = 0;
90003c36:	9413      	str	r4, [sp, #76]	@ 0x4c
  pLayerCfg.FBStartAdress = 0;
90003c38:	9416      	str	r4, [sp, #88]	@ 0x58
  pLayerCfg.Backcolor.Blue = 0;
90003c3a:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
90003c3e:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90003c42:	9711      	str	r7, [sp, #68]	@ 0x44
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003c44:	f8cd 9054 	str.w	r9, [sp, #84]	@ 0x54
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003c48:	f007 f8da 	bl	9000ae00 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003c4c:	4b39      	ldr	r3, [pc, #228]	@ (90003d34 <main+0x4c4>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003c4e:	4628      	mov	r0, r5
  hdma2d.Init.OutputOffset = 0;
90003c50:	60ec      	str	r4, [r5, #12]
  hdma2d.Instance = DMA2D;
90003c52:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003c54:	65ec      	str	r4, [r5, #92]	@ 0x5c
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003c56:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003c5a:	e9c5 4711 	strd	r4, r7, [r5, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003c5e:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003c62:	e9c5 4415 	strd	r4, r4, [r5, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003c66:	f004 fb4b 	bl	90008300 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003c6a:	4631      	mov	r1, r6
90003c6c:	4628      	mov	r0, r5
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003c6e:	2510      	movs	r5, #16
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003c70:	f004 fc1e 	bl	900084b0 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003c74:	4830      	ldr	r0, [pc, #192]	@ (90003d38 <main+0x4c8>)
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003c76:	2304      	movs	r3, #4
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003c78:	f44f 6200 	mov.w	r2, #2048	@ 0x800
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003c7c:	a90d      	add	r1, sp, #52	@ 0x34
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003c7e:	6105      	str	r5, [r0, #16]
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003c80:	60c3      	str	r3, [r0, #12]
  SdramTiming.SelfRefreshTime = 4;
90003c82:	930f      	str	r3, [sp, #60]	@ 0x3c
  SdramTiming.ExitSelfRefreshDelay = 7;
90003c84:	2307      	movs	r3, #7
  SdramTiming.WriteRecoveryTime = 5;
90003c86:	f8cd 9044 	str.w	r9, [sp, #68]	@ 0x44
  SdramTiming.ExitSelfRefreshDelay = 7;
90003c8a:	930e      	str	r3, [sp, #56]	@ 0x38
  SdramTiming.RowCycleDelay = 7;
90003c8c:	9310      	str	r3, [sp, #64]	@ 0x40
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003c8e:	4b2b      	ldr	r3, [pc, #172]	@ (90003d3c <main+0x4cc>)
  SdramTiming.LoadToActiveDelay = 2;
90003c90:	970d      	str	r7, [sp, #52]	@ 0x34
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003c92:	6003      	str	r3, [r0, #0]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003c94:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90003c98:	f8c0 8014 	str.w	r8, [r0, #20]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003c9c:	6183      	str	r3, [r0, #24]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003c9e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  hsdram2.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90003ca2:	61c4      	str	r4, [r0, #28]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003ca4:	6284      	str	r4, [r0, #40]	@ 0x28
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003ca6:	e9c0 2308 	strd	r2, r3, [r0, #32]
  SdramTiming.RCDDelay = 2;
90003caa:	e9cd 7712 	strd	r7, r7, [sp, #72]	@ 0x48
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003cae:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003cb2:	f009 fa1d 	bl	9000d0f0 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90003cb6:	4620      	mov	r0, r4
90003cb8:	f003 ff44 	bl	90007b44 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90003cbc:	4620      	mov	r0, r4
90003cbe:	f003 ff8b 	bl	90007bd8 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90003cc2:	f7fc fef3 	bl	90000aac <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90003cc6:	4b1e      	ldr	r3, [pc, #120]	@ (90003d40 <main+0x4d0>)
90003cc8:	481e      	ldr	r0, [pc, #120]	@ (90003d44 <main+0x4d4>)
90003cca:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90003ccc:	f005 ff20 	bl	90009b10 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90003cd0:	4b1d      	ldr	r3, [pc, #116]	@ (90003d48 <main+0x4d8>)
90003cd2:	481e      	ldr	r0, [pc, #120]	@ (90003d4c <main+0x4dc>)
90003cd4:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90003cd6:	6206      	str	r6, [r0, #32]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90003cd8:	8084      	strh	r4, [r0, #4]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90003cda:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90003cde:	f004 fa99 	bl	90008214 <HAL_CRC_Init>
  MX_TouchGFX_Init();
90003ce2:	f7fc fee7 	bl	90000ab4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90003ce6:	f7fc fee3 	bl	90000ab0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90003cea:	f009 fce3 	bl	9000d6b4 <osKernelInitialize>
  buttonQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &buttonQueue_attributes);
90003cee:	4a18      	ldr	r2, [pc, #96]	@ (90003d50 <main+0x4e0>)
90003cf0:	4639      	mov	r1, r7
90003cf2:	4628      	mov	r0, r5
90003cf4:	f009 fe02 	bl	9000d8fc <osMessageQueueNew>
90003cf8:	4b16      	ldr	r3, [pc, #88]	@ (90003d54 <main+0x4e4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003cfa:	4a17      	ldr	r2, [pc, #92]	@ (90003d58 <main+0x4e8>)
90003cfc:	4621      	mov	r1, r4
  buttonQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &buttonQueue_attributes);
90003cfe:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003d00:	4816      	ldr	r0, [pc, #88]	@ (90003d5c <main+0x4ec>)
90003d02:	f009 fd03 	bl	9000d70c <osThreadNew>
90003d06:	4b16      	ldr	r3, [pc, #88]	@ (90003d60 <main+0x4f0>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003d08:	4a16      	ldr	r2, [pc, #88]	@ (90003d64 <main+0x4f4>)
90003d0a:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003d0c:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003d0e:	4816      	ldr	r0, [pc, #88]	@ (90003d68 <main+0x4f8>)
90003d10:	f009 fcfc 	bl	9000d70c <osThreadNew>
90003d14:	4b15      	ldr	r3, [pc, #84]	@ (90003d6c <main+0x4fc>)
90003d16:	4605      	mov	r5, r0
  buttonListenerTHandle = osThreadNew(buttonListenerTaskFunction, NULL, &buttonListenerT_attributes);
90003d18:	4a15      	ldr	r2, [pc, #84]	@ (90003d70 <main+0x500>)
90003d1a:	4621      	mov	r1, r4
90003d1c:	4815      	ldr	r0, [pc, #84]	@ (90003d74 <main+0x504>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003d1e:	601d      	str	r5, [r3, #0]
  buttonListenerTHandle = osThreadNew(buttonListenerTaskFunction, NULL, &buttonListenerT_attributes);
90003d20:	f009 fcf4 	bl	9000d70c <osThreadNew>
90003d24:	4b14      	ldr	r3, [pc, #80]	@ (90003d78 <main+0x508>)
90003d26:	6018      	str	r0, [r3, #0]
  osKernelStart();
90003d28:	f009 fcd6 	bl	9000d6d8 <osKernelStart>
  while (1)
90003d2c:	e7fe      	b.n	90003d2c <main+0x4bc>
90003d2e:	bf00      	nop
90003d30:	240091f4 	.word	0x240091f4
90003d34:	52001000 	.word	0x52001000
90003d38:	24008fe8 	.word	0x24008fe8
90003d3c:	52004140 	.word	0x52004140
90003d40:	52003000 	.word	0x52003000
90003d44:	2400919c 	.word	0x2400919c
90003d48:	58024c00 	.word	0x58024c00
90003d4c:	2400925c 	.word	0x2400925c
90003d50:	9002c44c 	.word	0x9002c44c
90003d54:	24008fd8 	.word	0x24008fd8
90003d58:	9002c4ac 	.word	0x9002c4ac
90003d5c:	90003705 	.word	0x90003705
90003d60:	24008fe4 	.word	0x24008fe4
90003d64:	9002c488 	.word	0x9002c488
90003d68:	90000ac5 	.word	0x90000ac5
90003d6c:	24008fe0 	.word	0x24008fe0
90003d70:	9002c464 	.word	0x9002c464
90003d74:	90003711 	.word	0x90003711
90003d78:	24008fdc 	.word	0x24008fdc

90003d7c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90003d7c:	4b03      	ldr	r3, [pc, #12]	@ (90003d8c <HAL_TIM_PeriodElapsedCallback+0x10>)
90003d7e:	6802      	ldr	r2, [r0, #0]
90003d80:	429a      	cmp	r2, r3
90003d82:	d000      	beq.n	90003d86 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90003d84:	4770      	bx	lr
    HAL_IncTick();
90003d86:	f004 b971 	b.w	9000806c <HAL_IncTick>
90003d8a:	bf00      	nop
90003d8c:	40001000 	.word	0x40001000

90003d90 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90003d90:	4770      	bx	lr
90003d92:	bf00      	nop

90003d94 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003d94:	4b0b      	ldr	r3, [pc, #44]	@ (90003dc4 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003d96:	2200      	movs	r2, #0
90003d98:	210f      	movs	r1, #15
90003d9a:	f06f 0001 	mvn.w	r0, #1
{
90003d9e:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003da0:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
90003da4:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003da6:	f044 0402 	orr.w	r4, r4, #2
90003daa:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
90003dae:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
90003db2:	f003 0302 	and.w	r3, r3, #2
90003db6:	9301      	str	r3, [sp, #4]
90003db8:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90003dba:	b003      	add	sp, #12
90003dbc:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003dc0:	f004 b97e 	b.w	900080c0 <HAL_NVIC_SetPriority>
90003dc4:	58024400 	.word	0x58024400

90003dc8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90003dc8:	4b0a      	ldr	r3, [pc, #40]	@ (90003df4 <HAL_CRC_MspInit+0x2c>)
90003dca:	6802      	ldr	r2, [r0, #0]
90003dcc:	429a      	cmp	r2, r3
90003dce:	d000      	beq.n	90003dd2 <HAL_CRC_MspInit+0xa>
90003dd0:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90003dd2:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
90003dd6:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90003dd8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003ddc:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
90003de0:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003de4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
90003de8:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
90003dec:	9301      	str	r3, [sp, #4]
90003dee:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE END CRC_MspInit 1 */

  }

}
90003df0:	b002      	add	sp, #8
90003df2:	4770      	bx	lr
90003df4:	58024c00 	.word	0x58024c00

90003df8 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90003df8:	4b0f      	ldr	r3, [pc, #60]	@ (90003e38 <HAL_DMA2D_MspInit+0x40>)
90003dfa:	6802      	ldr	r2, [r0, #0]
90003dfc:	429a      	cmp	r2, r3
90003dfe:	d000      	beq.n	90003e02 <HAL_DMA2D_MspInit+0xa>
90003e00:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003e02:	4b0e      	ldr	r3, [pc, #56]	@ (90003e3c <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003e04:	205a      	movs	r0, #90	@ 0x5a
90003e06:	2200      	movs	r2, #0
90003e08:	2105      	movs	r1, #5
{
90003e0a:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003e0c:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
90003e10:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003e12:	f044 0410 	orr.w	r4, r4, #16
90003e16:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
90003e1a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
90003e1e:	f003 0310 	and.w	r3, r3, #16
90003e22:	9301      	str	r3, [sp, #4]
90003e24:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003e26:	f004 f94b 	bl	900080c0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003e2a:	205a      	movs	r0, #90	@ 0x5a

  /* USER CODE END DMA2D_MspInit 1 */

  }

}
90003e2c:	b002      	add	sp, #8
90003e2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003e32:	f004 b981 	b.w	90008138 <HAL_NVIC_EnableIRQ>
90003e36:	bf00      	nop
90003e38:	52001000 	.word	0x52001000
90003e3c:	58024400 	.word	0x58024400

90003e40 <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90003e40:	4b3f      	ldr	r3, [pc, #252]	@ (90003f40 <HAL_JPEG_MspInit+0x100>)
90003e42:	6802      	ldr	r2, [r0, #0]
90003e44:	429a      	cmp	r2, r3
90003e46:	d000      	beq.n	90003e4a <HAL_JPEG_MspInit+0xa>
90003e48:	4770      	bx	lr
{
90003e4a:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003e4c:	4b3d      	ldr	r3, [pc, #244]	@ (90003f44 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003e4e:	2211      	movs	r2, #17
90003e50:	4e3d      	ldr	r6, [pc, #244]	@ (90003f48 <HAL_JPEG_MspInit+0x108>)
{
90003e52:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003e54:	4d3d      	ldr	r5, [pc, #244]	@ (90003f4c <HAL_JPEG_MspInit+0x10c>)
90003e56:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003e58:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003e5a:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003e5c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003e60:	493b      	ldr	r1, [pc, #236]	@ (90003f50 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90003e62:	f042 0220 	orr.w	r2, r2, #32
90003e66:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003e6a:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90003e6c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90003e70:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003e72:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003e76:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003e78:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003e7a:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90003e7c:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90003e7e:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003e80:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003e84:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
90003e88:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003e8a:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90003e8c:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90003e90:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003e94:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90003e96:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
90003e9a:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
90003e9e:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003ea2:	2313      	movs	r3, #19
90003ea4:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90003ea6:	2302      	movs	r3, #2
90003ea8:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003eaa:	f007 f89f 	bl	9000afec <HAL_MDMA_Init>
90003eae:	2800      	cmp	r0, #0
90003eb0:	d13a      	bne.n	90003f28 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
90003eb2:	2200      	movs	r2, #0
90003eb4:	4824      	ldr	r0, [pc, #144]	@ (90003f48 <HAL_JPEG_MspInit+0x108>)
90003eb6:	4611      	mov	r1, r2
90003eb8:	f007 f936 	bl	9000b128 <HAL_MDMA_ConfigPostRequestMask>
90003ebc:	2800      	cmp	r0, #0
90003ebe:	d13c      	bne.n	90003f3a <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003ec0:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003ec2:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003ec4:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003ec6:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003ec8:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90003eca:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003ecc:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003ed0:	4920      	ldr	r1, [pc, #128]	@ (90003f54 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003ed2:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003ed4:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
90003ed6:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003ed8:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003eda:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
90003ede:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90003ee2:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90003ee4:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003ee6:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90003eea:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90003eec:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003ef0:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90003ef4:	4815      	ldr	r0, [pc, #84]	@ (90003f4c <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90003ef6:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90003ef8:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003efa:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90003efc:	f007 f876 	bl	9000afec <HAL_MDMA_Init>
90003f00:	b9c0      	cbnz	r0, 90003f34 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
90003f02:	2200      	movs	r2, #0
90003f04:	4811      	ldr	r0, [pc, #68]	@ (90003f4c <HAL_JPEG_MspInit+0x10c>)
90003f06:	4611      	mov	r1, r2
90003f08:	f007 f90e 	bl	9000b128 <HAL_MDMA_ConfigPostRequestMask>
90003f0c:	b978      	cbnz	r0, 90003f2e <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90003f0e:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90003f10:	2079      	movs	r0, #121	@ 0x79
90003f12:	2200      	movs	r2, #0
90003f14:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90003f16:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90003f18:	f004 f8d2 	bl	900080c0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90003f1c:	2079      	movs	r0, #121	@ 0x79

  /* USER CODE END JPEG_MspInit 1 */

  }

}
90003f1e:	b002      	add	sp, #8
90003f20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90003f24:	f004 b908 	b.w	90008138 <HAL_NVIC_EnableIRQ>
      Error_Handler();
90003f28:	f7ff ff32 	bl	90003d90 <Error_Handler>
90003f2c:	e7c1      	b.n	90003eb2 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
90003f2e:	f7ff ff2f 	bl	90003d90 <Error_Handler>
90003f32:	e7ec      	b.n	90003f0e <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90003f34:	f7ff ff2c 	bl	90003d90 <Error_Handler>
90003f38:	e7e3      	b.n	90003f02 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
90003f3a:	f7ff ff29 	bl	90003d90 <Error_Handler>
90003f3e:	e7bf      	b.n	90003ec0 <HAL_JPEG_MspInit+0x80>
90003f40:	52003000 	.word	0x52003000
90003f44:	58024400 	.word	0x58024400
90003f48:	24009130 	.word	0x24009130
90003f4c:	240090c4 	.word	0x240090c4
90003f50:	52000200 	.word	0x52000200
90003f54:	520001c0 	.word	0x520001c0

90003f58 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
90003f58:	b570      	push	{r4, r5, r6, lr}
90003f5a:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003f5c:	2100      	movs	r1, #0
{
90003f5e:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003f60:	22c0      	movs	r2, #192	@ 0xc0
90003f62:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003f64:	9109      	str	r1, [sp, #36]	@ 0x24
90003f66:	e9cd 1105 	strd	r1, r1, [sp, #20]
90003f6a:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003f6e:	f026 f88f 	bl	9002a090 <memset>
  if(hltdc->Instance==LTDC)
90003f72:	4b4a      	ldr	r3, [pc, #296]	@ (9000409c <HAL_LTDC_MspInit+0x144>)
90003f74:	6822      	ldr	r2, [r4, #0]
90003f76:	429a      	cmp	r2, r3
90003f78:	d001      	beq.n	90003f7e <HAL_LTDC_MspInit+0x26>

  /* USER CODE END LTDC_MspInit 1 */

  }

}
90003f7a:	b03a      	add	sp, #232	@ 0xe8
90003f7c:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003f7e:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003f80:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003f82:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
90003f86:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003f88:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003f8a:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003f8c:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90003f8e:	225d      	movs	r2, #93	@ 0x5d
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90003f90:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90003f92:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003f96:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003f98:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003f9a:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90003f9e:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003fa2:	f008 f94b 	bl	9000c23c <HAL_RCCEx_PeriphCLKConfig>
90003fa6:	2800      	cmp	r0, #0
90003fa8:	d174      	bne.n	90004094 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
90003faa:	4b3d      	ldr	r3, [pc, #244]	@ (900040a0 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003fac:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003fae:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003fb0:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
90003fb2:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003fb6:	a905      	add	r1, sp, #20
90003fb8:	483a      	ldr	r0, [pc, #232]	@ (900040a4 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90003fba:	f042 0208 	orr.w	r2, r2, #8
90003fbe:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
90003fc2:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
90003fc6:	f002 0208 	and.w	r2, r2, #8
90003fca:	9200      	str	r2, [sp, #0]
90003fcc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
90003fce:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003fd2:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
90003fd6:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003fda:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003fde:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
90003fe2:	9201      	str	r2, [sp, #4]
90003fe4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
90003fe6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003fea:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
90003fee:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003ff2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003ff6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90003ffa:	9202      	str	r2, [sp, #8]
90003ffc:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
90003ffe:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004002:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
90004006:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000400a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000400e:	f402 7200 	and.w	r2, r2, #512	@ 0x200
90004012:	9203      	str	r2, [sp, #12]
90004014:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004016:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000401a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
9000401e:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004022:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90004026:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004028:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000402c:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000402e:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90004030:	23fc      	movs	r3, #252	@ 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004032:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90004034:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004036:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000403a:	f004 faa3 	bl	90008584 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000403e:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004042:	a905      	add	r1, sp, #20
90004044:	4818      	ldr	r0, [pc, #96]	@ (900040a8 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90004046:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004048:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000404c:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90004050:	f004 fa98 	bl	90008584 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90004054:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90004058:	a905      	add	r1, sp, #20
9000405a:	4814      	ldr	r0, [pc, #80]	@ (900040ac <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
9000405c:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000405e:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004062:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90004066:	f004 fa8d 	bl	90008584 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000406a:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000406e:	a905      	add	r1, sp, #20
90004070:	480f      	ldr	r0, [pc, #60]	@ (900040b0 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004072:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90004074:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90004078:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000407c:	f004 fa82 	bl	90008584 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90004080:	462a      	mov	r2, r5
90004082:	2105      	movs	r1, #5
90004084:	2058      	movs	r0, #88	@ 0x58
90004086:	f004 f81b 	bl	900080c0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
9000408a:	2058      	movs	r0, #88	@ 0x58
9000408c:	f004 f854 	bl	90008138 <HAL_NVIC_EnableIRQ>
}
90004090:	b03a      	add	sp, #232	@ 0xe8
90004092:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90004094:	f7ff fe7c 	bl	90003d90 <Error_Handler>
90004098:	e787      	b.n	90003faa <HAL_LTDC_MspInit+0x52>
9000409a:	bf00      	nop
9000409c:	50001000 	.word	0x50001000
900040a0:	58024400 	.word	0x58024400
900040a4:	58022800 	.word	0x58022800
900040a8:	58022000 	.word	0x58022000
900040ac:	58022400 	.word	0x58022400
900040b0:	58021c00 	.word	0x58021c00

900040b4 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
900040b4:	4836      	ldr	r0, [pc, #216]	@ (90004190 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900040b6:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900040b8:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
900040ba:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900040bc:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900040be:	e9cd 3302 	strd	r3, r3, [sp, #8]
900040c2:	e9cd 3304 	strd	r3, r3, [sp, #16]
900040c6:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
900040c8:	b109      	cbz	r1, 900040ce <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
900040ca:	b038      	add	sp, #224	@ 0xe0
900040cc:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
900040ce:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900040d0:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
900040d2:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900040d4:	a80a      	add	r0, sp, #40	@ 0x28
900040d6:	f025 ffdb 	bl	9002a090 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900040da:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900040de:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900040e0:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900040e2:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900040e6:	f008 f8a9 	bl	9000c23c <HAL_RCCEx_PeriphCLKConfig>
900040ea:	2800      	cmp	r0, #0
900040ec:	d14c      	bne.n	90004188 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
900040ee:	4b29      	ldr	r3, [pc, #164]	@ (90004194 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900040f0:	f64f 7083 	movw	r0, #65411	@ 0xff83
900040f4:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900040f6:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900040f8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900040fc:	2600      	movs	r6, #0
900040fe:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90004100:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90004104:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90004108:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000410c:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
9000410e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004112:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
90004116:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90004118:	a902      	add	r1, sp, #8
9000411a:	481f      	ldr	r0, [pc, #124]	@ (90004198 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000411c:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000411e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90004122:	f004 fa2f 	bl	90008584 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004126:	f248 1233 	movw	r2, #33075	@ 0x8133
9000412a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000412c:	a902      	add	r1, sp, #8
9000412e:	481b      	ldr	r0, [pc, #108]	@ (9000419c <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004130:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004132:	e9cd 2302 	strd	r2, r3, [sp, #8]
90004136:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000413a:	f004 fa23 	bl	90008584 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000413e:	f24c 7203 	movw	r2, #50947	@ 0xc703
90004142:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004144:	a902      	add	r1, sp, #8
90004146:	4816      	ldr	r0, [pc, #88]	@ (900041a0 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004148:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000414a:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000414e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004152:	f004 fa17 	bl	90008584 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004156:	f64f 023f 	movw	r2, #63551	@ 0xf83f
9000415a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000415c:	a902      	add	r1, sp, #8
9000415e:	4811      	ldr	r0, [pc, #68]	@ (900041a4 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004160:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004162:	e9cd 2302 	strd	r2, r3, [sp, #8]
90004166:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000416a:	f004 fa0b 	bl	90008584 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000416e:	22e0      	movs	r2, #224	@ 0xe0
90004170:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004172:	a902      	add	r1, sp, #8
90004174:	480c      	ldr	r0, [pc, #48]	@ (900041a8 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004176:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90004178:	e9cd 6704 	strd	r6, r7, [sp, #16]
9000417c:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004180:	f004 fa00 	bl	90008584 <HAL_GPIO_Init>
}
90004184:	b038      	add	sp, #224	@ 0xe0
90004186:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90004188:	f7ff fe02 	bl	90003d90 <Error_Handler>
9000418c:	e7af      	b.n	900040ee <HAL_SDRAM_MspInit+0x3a>
9000418e:	bf00      	nop
90004190:	24009284 	.word	0x24009284
90004194:	58024400 	.word	0x58024400
90004198:	58021000 	.word	0x58021000
9000419c:	58021800 	.word	0x58021800
900041a0:	58020c00 	.word	0x58020c00
900041a4:	58021400 	.word	0x58021400
900041a8:	58021c00 	.word	0x58021c00

900041ac <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
900041ac:	4b13      	ldr	r3, [pc, #76]	@ (900041fc <HAL_SDRAM_MspDeInit+0x50>)
900041ae:	681a      	ldr	r2, [r3, #0]
900041b0:	b102      	cbz	r2, 900041b4 <HAL_SDRAM_MspDeInit+0x8>
900041b2:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
900041b4:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
900041b6:	4a12      	ldr	r2, [pc, #72]	@ (90004200 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
900041b8:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900041ba:	f64f 7183 	movw	r1, #65411	@ 0xff83
900041be:	4811      	ldr	r0, [pc, #68]	@ (90004204 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
900041c0:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
900041c2:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
900041c6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
900041ca:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900041ce:	f004 fb1b 	bl	90008808 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900041d2:	f248 1133 	movw	r1, #33075	@ 0x8133
900041d6:	480c      	ldr	r0, [pc, #48]	@ (90004208 <HAL_SDRAM_MspDeInit+0x5c>)
900041d8:	f004 fb16 	bl	90008808 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900041dc:	f24c 7103 	movw	r1, #50947	@ 0xc703
900041e0:	480a      	ldr	r0, [pc, #40]	@ (9000420c <HAL_SDRAM_MspDeInit+0x60>)
900041e2:	f004 fb11 	bl	90008808 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900041e6:	f64f 013f 	movw	r1, #63551	@ 0xf83f
900041ea:	4809      	ldr	r0, [pc, #36]	@ (90004210 <HAL_SDRAM_MspDeInit+0x64>)
900041ec:	f004 fb0c 	bl	90008808 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900041f0:	21e0      	movs	r1, #224	@ 0xe0
900041f2:	4808      	ldr	r0, [pc, #32]	@ (90004214 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900041f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900041f8:	f004 bb06 	b.w	90008808 <HAL_GPIO_DeInit>
900041fc:	24009280 	.word	0x24009280
90004200:	58024400 	.word	0x58024400
90004204:	58021000 	.word	0x58021000
90004208:	58021800 	.word	0x58021800
9000420c:	58020c00 	.word	0x58020c00
90004210:	58021400 	.word	0x58021400
90004214:	58021c00 	.word	0x58021c00

90004218 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
90004218:	280f      	cmp	r0, #15
9000421a:	d901      	bls.n	90004220 <HAL_InitTick+0x8>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
     uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
9000421c:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
9000421e:	4770      	bx	lr
{
90004220:	b530      	push	{r4, r5, lr}
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
90004222:	4601      	mov	r1, r0
{
90004224:	b08b      	sub	sp, #44	@ 0x2c
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
90004226:	2200      	movs	r2, #0
90004228:	4604      	mov	r4, r0
9000422a:	2036      	movs	r0, #54	@ 0x36
9000422c:	f003 ff48 	bl	900080c0 <HAL_NVIC_SetPriority>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90004230:	2036      	movs	r0, #54	@ 0x36
90004232:	f003 ff81 	bl	90008138 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
90004236:	4b1b      	ldr	r3, [pc, #108]	@ (900042a4 <HAL_InitTick+0x8c>)
     uwTickPrio = TickPriority;
90004238:	4a1b      	ldr	r2, [pc, #108]	@ (900042a8 <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000423a:	4669      	mov	r1, sp
9000423c:	a802      	add	r0, sp, #8
     uwTickPrio = TickPriority;
9000423e:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90004240:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
90004244:	f042 0210 	orr.w	r2, r2, #16
90004248:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
9000424c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
90004250:	f003 0310 	and.w	r3, r3, #16
90004254:	9301      	str	r3, [sp, #4]
90004256:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90004258:	f007 fee0 	bl	9000c01c <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
9000425c:	9b07      	ldr	r3, [sp, #28]
9000425e:	b9c3      	cbnz	r3, 90004292 <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90004260:	f007 fe4c 	bl	9000befc <HAL_RCC_GetPCLK1Freq>
90004264:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004266:	4911      	ldr	r1, [pc, #68]	@ (900042ac <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
90004268:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
9000426a:	4c11      	ldr	r4, [pc, #68]	@ (900042b0 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000426c:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
90004270:	4d10      	ldr	r5, [pc, #64]	@ (900042b4 <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004272:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004276:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004278:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
9000427a:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
9000427c:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000427e:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004280:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90004284:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004286:	f008 ffa5 	bl	9000d1d4 <HAL_TIM_Base_Init>
9000428a:	b130      	cbz	r0, 9000429a <HAL_InitTick+0x82>
    return HAL_ERROR;
9000428c:	2001      	movs	r0, #1
}
9000428e:	b00b      	add	sp, #44	@ 0x2c
90004290:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90004292:	f007 fe33 	bl	9000befc <HAL_RCC_GetPCLK1Freq>
90004296:	0043      	lsls	r3, r0, #1
90004298:	e7e5      	b.n	90004266 <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
9000429a:	4620      	mov	r0, r4
9000429c:	f009 f840 	bl	9000d320 <HAL_TIM_Base_Start_IT>
900042a0:	e7f5      	b.n	9000428e <HAL_InitTick+0x76>
900042a2:	bf00      	nop
900042a4:	58024400 	.word	0x58024400
900042a8:	240000a0 	.word	0x240000a0
900042ac:	431bde83 	.word	0x431bde83
900042b0:	24009288 	.word	0x24009288
900042b4:	40001000 	.word	0x40001000

900042b8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
900042b8:	4770      	bx	lr
900042ba:	bf00      	nop

900042bc <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
900042bc:	e7fe      	b.n	900042bc <HardFault_Handler>
900042be:	bf00      	nop

900042c0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
900042c0:	e7fe      	b.n	900042c0 <MemManage_Handler>
900042c2:	bf00      	nop

900042c4 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
900042c4:	e7fe      	b.n	900042c4 <BusFault_Handler>
900042c6:	bf00      	nop

900042c8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
900042c8:	e7fe      	b.n	900042c8 <UsageFault_Handler>
900042ca:	bf00      	nop

900042cc <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
900042cc:	4770      	bx	lr
900042ce:	bf00      	nop

900042d0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
900042d0:	4801      	ldr	r0, [pc, #4]	@ (900042d8 <TIM6_DAC_IRQHandler+0x8>)
900042d2:	f009 b87f 	b.w	9000d3d4 <HAL_TIM_IRQHandler>
900042d6:	bf00      	nop
900042d8:	24009288 	.word	0x24009288

900042dc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
900042dc:	4801      	ldr	r0, [pc, #4]	@ (900042e4 <LTDC_IRQHandler+0x8>)
900042de:	f006 bd2d 	b.w	9000ad3c <HAL_LTDC_IRQHandler>
900042e2:	bf00      	nop
900042e4:	2400901c 	.word	0x2400901c

900042e8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900042e8:	4801      	ldr	r0, [pc, #4]	@ (900042f0 <DMA2D_IRQHandler+0x8>)
900042ea:	f004 b84d 	b.w	90008388 <HAL_DMA2D_IRQHandler>
900042ee:	bf00      	nop
900042f0:	240091f4 	.word	0x240091f4

900042f4 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
900042f4:	4801      	ldr	r0, [pc, #4]	@ (900042fc <JPEG_IRQHandler+0x8>)
900042f6:	f006 bc0f 	b.w	9000ab18 <HAL_JPEG_IRQHandler>
900042fa:	bf00      	nop
900042fc:	2400919c 	.word	0x2400919c

90004300 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004300:	4804      	ldr	r0, [pc, #16]	@ (90004314 <MDMA_IRQHandler+0x14>)
{
90004302:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004304:	f006 fffc 	bl	9000b300 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90004308:	4803      	ldr	r0, [pc, #12]	@ (90004318 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
9000430a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
9000430e:	f006 bff7 	b.w	9000b300 <HAL_MDMA_IRQHandler>
90004312:	bf00      	nop
90004314:	240090c4 	.word	0x240090c4
90004318:	24009130 	.word	0x24009130

9000431c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
9000431c:	2001      	movs	r0, #1
9000431e:	4770      	bx	lr

90004320 <_kill>:

int _kill(int pid, int sig)
{
90004320:	b508      	push	{r3, lr}
	errno = EINVAL;
90004322:	f025 ff69 	bl	9002a1f8 <__errno>
90004326:	2216      	movs	r2, #22
90004328:	4603      	mov	r3, r0
	return -1;
}
9000432a:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
9000432e:	601a      	str	r2, [r3, #0]
}
90004330:	bd08      	pop	{r3, pc}
90004332:	bf00      	nop

90004334 <_exit>:

void _exit (int status)
{
90004334:	b508      	push	{r3, lr}
	errno = EINVAL;
90004336:	f025 ff5f 	bl	9002a1f8 <__errno>
9000433a:	2316      	movs	r3, #22
9000433c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
9000433e:	e7fe      	b.n	9000433e <_exit+0xa>

90004340 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90004340:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004342:	1e16      	subs	r6, r2, #0
90004344:	dd07      	ble.n	90004356 <_read+0x16>
90004346:	460c      	mov	r4, r1
90004348:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
9000434a:	f3af 8000 	nop.w
9000434e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004352:	42a5      	cmp	r5, r4
90004354:	d1f9      	bne.n	9000434a <_read+0xa>
	}

return len;
}
90004356:	4630      	mov	r0, r6
90004358:	bd70      	pop	{r4, r5, r6, pc}
9000435a:	bf00      	nop

9000435c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
9000435c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000435e:	1e16      	subs	r6, r2, #0
90004360:	dd07      	ble.n	90004372 <_write+0x16>
90004362:	460c      	mov	r4, r1
90004364:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90004366:	f814 0b01 	ldrb.w	r0, [r4], #1
9000436a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000436e:	42ac      	cmp	r4, r5
90004370:	d1f9      	bne.n	90004366 <_write+0xa>
	}
	return len;
}
90004372:	4630      	mov	r0, r6
90004374:	bd70      	pop	{r4, r5, r6, pc}
90004376:	bf00      	nop

90004378 <_close>:

int _close(int file)
{
	return -1;
}
90004378:	f04f 30ff 	mov.w	r0, #4294967295
9000437c:	4770      	bx	lr
9000437e:	bf00      	nop

90004380 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90004380:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
90004384:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90004386:	604b      	str	r3, [r1, #4]
}
90004388:	4770      	bx	lr
9000438a:	bf00      	nop

9000438c <_isatty>:

int _isatty(int file)
{
	return 1;
}
9000438c:	2001      	movs	r0, #1
9000438e:	4770      	bx	lr

90004390 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90004390:	2000      	movs	r0, #0
90004392:	4770      	bx	lr

90004394 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
90004394:	4a0c      	ldr	r2, [pc, #48]	@ (900043c8 <_sbrk+0x34>)
{
90004396:	b508      	push	{r3, lr}
90004398:	4603      	mov	r3, r0
	if (heap_end == 0)
9000439a:	6810      	ldr	r0, [r2, #0]
9000439c:	b128      	cbz	r0, 900043aa <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
9000439e:	4403      	add	r3, r0
900043a0:	4669      	mov	r1, sp
900043a2:	428b      	cmp	r3, r1
900043a4:	d808      	bhi.n	900043b8 <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
900043a6:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
900043a8:	bd08      	pop	{r3, pc}
		heap_end = &end;
900043aa:	4908      	ldr	r1, [pc, #32]	@ (900043cc <_sbrk+0x38>)
900043ac:	4608      	mov	r0, r1
900043ae:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
900043b0:	4669      	mov	r1, sp
900043b2:	4403      	add	r3, r0
900043b4:	428b      	cmp	r3, r1
900043b6:	d9f6      	bls.n	900043a6 <_sbrk+0x12>
		errno = ENOMEM;
900043b8:	f025 ff1e 	bl	9002a1f8 <__errno>
900043bc:	220c      	movs	r2, #12
900043be:	4603      	mov	r3, r0
		return (caddr_t) -1;
900043c0:	f04f 30ff 	mov.w	r0, #4294967295
		errno = ENOMEM;
900043c4:	601a      	str	r2, [r3, #0]
}
900043c6:	bd08      	pop	{r3, pc}
900043c8:	240092d4 	.word	0x240092d4
900043cc:	24024118 	.word	0x24024118

900043d0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
900043d0:	4770      	bx	lr
900043d2:	bf00      	nop

900043d4 <_ZN23ApplicationFontProviderD0Ev>:
900043d4:	b510      	push	{r4, lr}
900043d6:	4604      	mov	r4, r0
900043d8:	2104      	movs	r1, #4
900043da:	f025 f847 	bl	9002946c <_ZdlPvj>
900043de:	4620      	mov	r0, r4
900043e0:	bd10      	pop	{r4, pc}
900043e2:	bf00      	nop

900043e4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
900043e4:	2901      	cmp	r1, #1
{
900043e6:	b508      	push	{r3, lr}
    switch (typography)
900043e8:	d004      	beq.n	900043f4 <_ZN23ApplicationFontProvider7getFontEt+0x10>
900043ea:	2902      	cmp	r1, #2
900043ec:	d00a      	beq.n	90004404 <_ZN23ApplicationFontProvider7getFontEt+0x20>
900043ee:	b129      	cbz	r1, 900043fc <_ZN23ApplicationFontProvider7getFontEt+0x18>
900043f0:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
900043f2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
900043f4:	f001 fa4a 	bl	9000588c <_ZN17TypedTextDatabase8getFontsEv>
900043f8:	6840      	ldr	r0, [r0, #4]
}
900043fa:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
900043fc:	f001 fa46 	bl	9000588c <_ZN17TypedTextDatabase8getFontsEv>
90004400:	6800      	ldr	r0, [r0, #0]
}
90004402:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90004404:	f001 fa42 	bl	9000588c <_ZN17TypedTextDatabase8getFontsEv>
90004408:	6880      	ldr	r0, [r0, #8]
}
9000440a:	bd08      	pop	{r3, pc}

9000440c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
9000440c:	4800      	ldr	r0, [pc, #0]	@ (90004410 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
9000440e:	4770      	bx	lr
90004410:	9002c4e4 	.word	0x9002c4e4

90004414 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90004414:	2002      	movs	r0, #2
90004416:	4770      	bx	lr

90004418 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
90004418:	b169      	cbz	r1, 90004436 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000441a:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
9000441c:	b530      	push	{r4, r5, lr}
9000441e:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
90004420:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004422:	6895      	ldr	r5, [r2, #8]
90004424:	f10d 0303 	add.w	r3, sp, #3
90004428:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
9000442a:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
9000442c:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004430:	47a8      	blx	r5
        return glyph;
    }
90004432:	b003      	add	sp, #12
90004434:	bd30      	pop	{r4, r5, pc}
            return 0;
90004436:	4608      	mov	r0, r1
    }
90004438:	4770      	bx	lr
9000443a:	bf00      	nop

9000443c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
9000443c:	89c0      	ldrh	r0, [r0, #14]
9000443e:	4770      	bx	lr

90004440 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90004440:	8a00      	ldrh	r0, [r0, #16]
90004442:	4770      	bx	lr

90004444 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90004444:	88c0      	ldrh	r0, [r0, #6]
90004446:	4770      	bx	lr

90004448 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
90004448:	8880      	ldrh	r0, [r0, #4]
9000444a:	4770      	bx	lr

9000444c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
9000444c:	7a80      	ldrb	r0, [r0, #10]
    }
9000444e:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
90004452:	4770      	bx	lr

90004454 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90004454:	7a80      	ldrb	r0, [r0, #10]
    }
90004456:	09c0      	lsrs	r0, r0, #7
90004458:	4770      	bx	lr
9000445a:	bf00      	nop

9000445c <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
9000445c:	2000      	movs	r0, #0
9000445e:	4770      	bx	lr

90004460 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
90004460:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 90004468 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90004464:	4770      	bx	lr
90004466:	bf00      	nop
90004468:	00000000 	.word	0x00000000

9000446c <_ZN8touchgfx9TypedTextD1Ev>:
    }
9000446c:	4770      	bx	lr
9000446e:	bf00      	nop

90004470 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90004470:	b510      	push	{r4, lr}
90004472:	4604      	mov	r4, r0
    }
90004474:	2108      	movs	r1, #8
90004476:	f024 fff9 	bl	9002946c <_ZdlPvj>
9000447a:	4620      	mov	r0, r4
9000447c:	bd10      	pop	{r4, pc}
9000447e:	bf00      	nop

90004480 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90004480:	4770      	bx	lr
90004482:	bf00      	nop

90004484 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90004484:	f500 7398 	add.w	r3, r0, #304	@ 0x130
90004488:	6808      	ldr	r0, [r1, #0]
9000448a:	6849      	ldr	r1, [r1, #4]
9000448c:	c303      	stmia	r3!, {r0, r1}
    }
9000448e:	4770      	bx	lr

90004490 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90004490:	4770      	bx	lr
90004492:	bf00      	nop

90004494 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90004494:	4770      	bx	lr
90004496:	bf00      	nop

90004498 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90004498:	6041      	str	r1, [r0, #4]
    }
9000449a:	4770      	bx	lr

9000449c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
9000449c:	4770      	bx	lr
9000449e:	bf00      	nop

900044a0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900044a0:	4905      	ldr	r1, [pc, #20]	@ (900044b8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
900044a2:	2200      	movs	r2, #0
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
900044a4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900044a8:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900044ac:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900044b0:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
900044b4:	4770      	bx	lr
900044b6:	bf00      	nop
900044b8:	90004751 	.word	0x90004751

900044bc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
900044bc:	2301      	movs	r3, #1
900044be:	7203      	strb	r3, [r0, #8]
    }
900044c0:	4770      	bx	lr
900044c2:	bf00      	nop

900044c4 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
900044c4:	4770      	bx	lr
900044c6:	bf00      	nop

900044c8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
900044c8:	4770      	bx	lr
900044ca:	bf00      	nop

900044cc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
900044cc:	1d01      	adds	r1, r0, #4
900044ce:	c90e      	ldmia	r1, {r1, r2, r3}
900044d0:	ea4f 0c63 	mov.w	ip, r3, asr #1
900044d4:	eb01 0063 	add.w	r0, r1, r3, asr #1
900044d8:	07db      	lsls	r3, r3, #31
900044da:	d502      	bpl.n	900044e2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
900044dc:	f851 300c 	ldr.w	r3, [r1, ip]
900044e0:	589a      	ldr	r2, [r3, r2]
900044e2:	4710      	bx	r2

900044e4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
900044e4:	6843      	ldr	r3, [r0, #4]
900044e6:	b13b      	cbz	r3, 900044f8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
900044e8:	6883      	ldr	r3, [r0, #8]
900044ea:	b10b      	cbz	r3, 900044f0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
900044ec:	2001      	movs	r0, #1
    }
900044ee:	4770      	bx	lr
900044f0:	68c0      	ldr	r0, [r0, #12]
900044f2:	f000 0001 	and.w	r0, r0, #1
900044f6:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900044f8:	4618      	mov	r0, r3
900044fa:	4770      	bx	lr

900044fc <_ZN8touchgfx12NoTransitionD0Ev>:
900044fc:	b510      	push	{r4, lr}
900044fe:	4604      	mov	r4, r0
90004500:	210c      	movs	r1, #12
90004502:	f024 ffb3 	bl	9002946c <_ZdlPvj>
90004506:	4620      	mov	r0, r4
90004508:	bd10      	pop	{r4, pc}
9000450a:	bf00      	nop

9000450c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
9000450c:	b510      	push	{r4, lr}
9000450e:	4604      	mov	r4, r0
90004510:	2110      	movs	r1, #16
90004512:	f024 ffab 	bl	9002946c <_ZdlPvj>
90004516:	4620      	mov	r0, r4
90004518:	bd10      	pop	{r4, pc}
9000451a:	bf00      	nop

9000451c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
9000451c:	b510      	push	{r4, lr}
9000451e:	4604      	mov	r4, r0
90004520:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90004524:	f024 ffa2 	bl	9002946c <_ZdlPvj>
90004528:	4620      	mov	r0, r4
9000452a:	bd10      	pop	{r4, pc}

9000452c <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
9000452c:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
9000452e:	f012 fb39 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
90004532:	6803      	ldr	r3, [r0, #0]
    }
90004534:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90004538:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9000453a:	4718      	bx	r3

9000453c <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotogameOverScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotogameOverScreenScreenNoTransitionImpl()
{
9000453c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<gameOverScreenView, gameOverScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004540:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004544:	4607      	mov	r7, r0
90004546:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004548:	68b0      	ldr	r0, [r6, #8]
9000454a:	6803      	ldr	r3, [r0, #0]
9000454c:	6a1b      	ldr	r3, [r3, #32]
9000454e:	4798      	blx	r3
90004550:	f5b0 7f86 	cmp.w	r0, #268	@ 0x10c
90004554:	f0c0 809c 	bcc.w	90004690 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x154>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004558:	6870      	ldr	r0, [r6, #4]
9000455a:	6803      	ldr	r3, [r0, #0]
9000455c:	6a1b      	ldr	r3, [r3, #32]
9000455e:	4798      	blx	r3
90004560:	280f      	cmp	r0, #15
90004562:	f240 80a1 	bls.w	900046a8 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x16c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004566:	68f0      	ldr	r0, [r6, #12]
90004568:	6803      	ldr	r3, [r0, #0]
9000456a:	6a1b      	ldr	r3, [r3, #32]
9000456c:	4798      	blx	r3
9000456e:	280b      	cmp	r0, #11
90004570:	f240 8094 	bls.w	9000469c <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x160>
    if (*currentTrans)
90004574:	f8df 9160 	ldr.w	r9, [pc, #352]	@ 900046d8 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90004578:	f012 fb14 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
9000457c:	3004      	adds	r0, #4
9000457e:	f012 fb36 	bl	90016bee <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004582:	f8d9 0000 	ldr.w	r0, [r9]
90004586:	b130      	cbz	r0, 90004596 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
90004588:	6803      	ldr	r3, [r0, #0]
9000458a:	494a      	ldr	r1, [pc, #296]	@ (900046b4 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x178>)
9000458c:	68da      	ldr	r2, [r3, #12]
9000458e:	428a      	cmp	r2, r1
90004590:	d177      	bne.n	90004682 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x146>
        (*currentTrans)->~Transition();
90004592:	681b      	ldr	r3, [r3, #0]
90004594:	4798      	blx	r3
    if (*currentScreen)
90004596:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 900046dc <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x1a0>
9000459a:	f8d8 0000 	ldr.w	r0, [r8]
9000459e:	2800      	cmp	r0, #0
900045a0:	d061      	beq.n	90004666 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x12a>
        (*currentScreen)->tearDownScreen();
900045a2:	6803      	ldr	r3, [r0, #0]
900045a4:	695b      	ldr	r3, [r3, #20]
900045a6:	4798      	blx	r3
    if (*currentPresenter)
900045a8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
900045ac:	2800      	cmp	r0, #0
900045ae:	d055      	beq.n	9000465c <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x120>
        (*currentPresenter)->deactivate();
900045b0:	6803      	ldr	r3, [r0, #0]
900045b2:	685b      	ldr	r3, [r3, #4]
900045b4:	4798      	blx	r3
    if (*currentScreen)
900045b6:	f8d8 0000 	ldr.w	r0, [r8]
900045ba:	b110      	cbz	r0, 900045c2 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
900045bc:	6803      	ldr	r3, [r0, #0]
900045be:	681b      	ldr	r3, [r3, #0]
900045c0:	4798      	blx	r3
    if (*currentPresenter)
900045c2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
900045c6:	b110      	cbz	r0, 900045ce <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
900045c8:	6803      	ldr	r3, [r0, #0]
900045ca:	689b      	ldr	r3, [r3, #8]
900045cc:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
900045ce:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
900045d0:	2100      	movs	r1, #0
900045d2:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
900045d4:	468b      	mov	fp, r1
900045d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900045d8:	4798      	blx	r3
900045da:	4b37      	ldr	r3, [pc, #220]	@ (900046b8 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x17c>)
900045dc:	4604      	mov	r4, r0
900045de:	f8c0 b004 	str.w	fp, [r0, #4]
900045e2:	f880 b008 	strb.w	fp, [r0, #8]
900045e6:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900045e8:	68b0      	ldr	r0, [r6, #8]
900045ea:	6023      	str	r3, [r4, #0]
900045ec:	6803      	ldr	r3, [r0, #0]
900045ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900045f0:	4798      	blx	r3
900045f2:	4605      	mov	r5, r0
900045f4:	f002 facc 	bl	90006b90 <_ZN18gameOverScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900045f8:	6870      	ldr	r0, [r6, #4]
900045fa:	4659      	mov	r1, fp
900045fc:	6803      	ldr	r3, [r0, #0]
900045fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004600:	4798      	blx	r3
90004602:	4606      	mov	r6, r0
90004604:	4629      	mov	r1, r5
90004606:	f002 fa99 	bl	90006b3c <_ZN23gameOverScreenPresenterC1ER18gameOverScreenView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
9000460a:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
9000460c:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004610:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004612:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004616:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
9000461a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
9000461e:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90004620:	f8c6 a008 	str.w	sl, [r6, #8]
90004624:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90004626:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004628:	4798      	blx	r3
    newPresenter->activate();
9000462a:	6833      	ldr	r3, [r6, #0]
9000462c:	4630      	mov	r0, r6
9000462e:	681b      	ldr	r3, [r3, #0]
90004630:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004632:	4621      	mov	r1, r4
90004634:	4628      	mov	r0, r5
90004636:	f014 fb31 	bl	90018c9c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
9000463a:	6823      	ldr	r3, [r4, #0]
9000463c:	491f      	ldr	r1, [pc, #124]	@ (900046bc <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x180>)
9000463e:	691a      	ldr	r2, [r3, #16]
90004640:	428a      	cmp	r2, r1
90004642:	d11a      	bne.n	9000467a <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x13e>
    newTransition->invalidate();
90004644:	695b      	ldr	r3, [r3, #20]
90004646:	4a1e      	ldr	r2, [pc, #120]	@ (900046c0 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x184>)
90004648:	4293      	cmp	r3, r2
9000464a:	d111      	bne.n	90004670 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x134>
        Application::getInstance()->invalidate();
9000464c:	f012 faaa 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
90004650:	6803      	ldr	r3, [r0, #0]
90004652:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004654:	b001      	add	sp, #4
90004656:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000465a:	4718      	bx	r3
    if (*currentScreen)
9000465c:	f8d8 0000 	ldr.w	r0, [r8]
90004660:	2800      	cmp	r0, #0
90004662:	d1ab      	bne.n	900045bc <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x80>
90004664:	e7b3      	b.n	900045ce <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
90004666:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
9000466a:	2800      	cmp	r0, #0
9000466c:	d1a0      	bne.n	900045b0 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x74>
9000466e:	e7ae      	b.n	900045ce <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90004670:	4620      	mov	r0, r4
90004672:	b001      	add	sp, #4
90004674:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004678:	4718      	bx	r3
    newTransition->init();
9000467a:	4620      	mov	r0, r4
9000467c:	4790      	blx	r2
    newTransition->invalidate();
9000467e:	6823      	ldr	r3, [r4, #0]
90004680:	e7e0      	b.n	90004644 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x108>
        (*currentTrans)->tearDown();
90004682:	4790      	blx	r2
    if (*currentTrans)
90004684:	f8d9 0000 	ldr.w	r0, [r9]
90004688:	2800      	cmp	r0, #0
9000468a:	d084      	beq.n	90004596 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
9000468c:	6803      	ldr	r3, [r0, #0]
9000468e:	e780      	b.n	90004592 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004690:	4b0c      	ldr	r3, [pc, #48]	@ (900046c4 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x188>)
90004692:	21a3      	movs	r1, #163	@ 0xa3
90004694:	4a0c      	ldr	r2, [pc, #48]	@ (900046c8 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x18c>)
90004696:	480d      	ldr	r0, [pc, #52]	@ (900046cc <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x190>)
90004698:	f025 fa5e 	bl	90029b58 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000469c:	4b0c      	ldr	r3, [pc, #48]	@ (900046d0 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x194>)
9000469e:	21a5      	movs	r1, #165	@ 0xa5
900046a0:	4a09      	ldr	r2, [pc, #36]	@ (900046c8 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x18c>)
900046a2:	480a      	ldr	r0, [pc, #40]	@ (900046cc <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x190>)
900046a4:	f025 fa58 	bl	90029b58 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900046a8:	4b0a      	ldr	r3, [pc, #40]	@ (900046d4 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x198>)
900046aa:	21a4      	movs	r1, #164	@ 0xa4
900046ac:	4a06      	ldr	r2, [pc, #24]	@ (900046c8 <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x18c>)
900046ae:	4807      	ldr	r0, [pc, #28]	@ (900046cc <_ZN23FrontendApplicationBase40gotogameOverScreenScreenNoTransitionImplEv+0x190>)
900046b0:	f025 fa52 	bl	90029b58 <__assert_func>
900046b4:	90004491 	.word	0x90004491
900046b8:	9002cc34 	.word	0x9002cc34
900046bc:	90004495 	.word	0x90004495
900046c0:	9000452d 	.word	0x9000452d
900046c4:	9002c51c 	.word	0x9002c51c
900046c8:	9002c5ac 	.word	0x9002c5ac
900046cc:	9002c68c 	.word	0x9002c68c
900046d0:	9002c778 	.word	0x9002c778
900046d4:	9002c6d4 	.word	0x9002c6d4
900046d8:	2402341c 	.word	0x2402341c
900046dc:	24023418 	.word	0x24023418

900046e0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    virtual void handlePendingScreenTransition()
900046e0:	b570      	push	{r4, r5, r6, lr}
900046e2:	4604      	mov	r4, r0
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
900046e4:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
900046e8:	b1b8      	cbz	r0, 9000471a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
900046ea:	6802      	ldr	r2, [r0, #0]
900046ec:	4916      	ldr	r1, [pc, #88]	@ (90004748 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x68>)
900046ee:	68d3      	ldr	r3, [r2, #12]
900046f0:	428b      	cmp	r3, r1
900046f2:	d11f      	bne.n	90004734 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x54>
        return (pobject != 0) && (pmemfun != 0);
900046f4:	6843      	ldr	r3, [r0, #4]
900046f6:	b183      	cbz	r3, 9000471a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
900046f8:	6881      	ldr	r1, [r0, #8]
900046fa:	b179      	cbz	r1, 9000471c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
            pendingScreenTransitionCallback->execute();
900046fc:	6892      	ldr	r2, [r2, #8]
900046fe:	4b13      	ldr	r3, [pc, #76]	@ (9000474c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90004700:	429a      	cmp	r2, r3
90004702:	d11e      	bne.n	90004742 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90004704:	68c2      	ldr	r2, [r0, #12]
90004706:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
9000470a:	eb03 0062 	add.w	r0, r3, r2, asr #1
9000470e:	07d3      	lsls	r3, r2, #31
90004710:	d40d      	bmi.n	9000472e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
90004712:	4788      	blx	r1
            pendingScreenTransitionCallback = 0;
90004714:	2300      	movs	r3, #0
90004716:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
9000471a:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
9000471c:	68c5      	ldr	r5, [r0, #12]
9000471e:	07ee      	lsls	r6, r5, #31
90004720:	d5fb      	bpl.n	9000471a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90004722:	6892      	ldr	r2, [r2, #8]
90004724:	4e09      	ldr	r6, [pc, #36]	@ (9000474c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90004726:	42b2      	cmp	r2, r6
90004728:	d10b      	bne.n	90004742 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
9000472a:	eb03 0065 	add.w	r0, r3, r5, asr #1
9000472e:	6803      	ldr	r3, [r0, #0]
90004730:	5859      	ldr	r1, [r3, r1]
90004732:	e7ee      	b.n	90004712 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004734:	4798      	blx	r3
90004736:	2800      	cmp	r0, #0
90004738:	d0ef      	beq.n	9000471a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
9000473a:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
9000473e:	6802      	ldr	r2, [r0, #0]
90004740:	e7dc      	b.n	900046fc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
90004742:	4790      	blx	r2
90004744:	e7e6      	b.n	90004714 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90004746:	bf00      	nop
90004748:	900044e5 	.word	0x900044e5
9000474c:	900044cd 	.word	0x900044cd

90004750 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
90004750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004754:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004758:	4607      	mov	r7, r0
9000475a:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
9000475c:	68b0      	ldr	r0, [r6, #8]
9000475e:	6803      	ldr	r3, [r0, #0]
90004760:	6a1b      	ldr	r3, [r3, #32]
90004762:	4798      	blx	r3
90004764:	f5b0 7f86 	cmp.w	r0, #268	@ 0x10c
90004768:	f0c0 809c 	bcc.w	900048a4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x154>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000476c:	6870      	ldr	r0, [r6, #4]
9000476e:	6803      	ldr	r3, [r0, #0]
90004770:	6a1b      	ldr	r3, [r3, #32]
90004772:	4798      	blx	r3
90004774:	280f      	cmp	r0, #15
90004776:	f240 80a1 	bls.w	900048bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x16c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000477a:	68f0      	ldr	r0, [r6, #12]
9000477c:	6803      	ldr	r3, [r0, #0]
9000477e:	6a1b      	ldr	r3, [r3, #32]
90004780:	4798      	blx	r3
90004782:	280b      	cmp	r0, #11
90004784:	f240 8094 	bls.w	900048b0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x160>
    if (*currentTrans)
90004788:	f8df 9160 	ldr.w	r9, [pc, #352]	@ 900048ec <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
9000478c:	f012 fa0a 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
90004790:	3004      	adds	r0, #4
90004792:	f012 fa2c 	bl	90016bee <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004796:	f8d9 0000 	ldr.w	r0, [r9]
9000479a:	b130      	cbz	r0, 900047aa <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
9000479c:	6803      	ldr	r3, [r0, #0]
9000479e:	494a      	ldr	r1, [pc, #296]	@ (900048c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x178>)
900047a0:	68da      	ldr	r2, [r3, #12]
900047a2:	428a      	cmp	r2, r1
900047a4:	d177      	bne.n	90004896 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x146>
        (*currentTrans)->~Transition();
900047a6:	681b      	ldr	r3, [r3, #0]
900047a8:	4798      	blx	r3
    if (*currentScreen)
900047aa:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 900048f0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1a0>
900047ae:	f8d8 0000 	ldr.w	r0, [r8]
900047b2:	2800      	cmp	r0, #0
900047b4:	d061      	beq.n	9000487a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
        (*currentScreen)->tearDownScreen();
900047b6:	6803      	ldr	r3, [r0, #0]
900047b8:	695b      	ldr	r3, [r3, #20]
900047ba:	4798      	blx	r3
    if (*currentPresenter)
900047bc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
900047c0:	2800      	cmp	r0, #0
900047c2:	d055      	beq.n	90004870 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x120>
        (*currentPresenter)->deactivate();
900047c4:	6803      	ldr	r3, [r0, #0]
900047c6:	685b      	ldr	r3, [r3, #4]
900047c8:	4798      	blx	r3
    if (*currentScreen)
900047ca:	f8d8 0000 	ldr.w	r0, [r8]
900047ce:	b110      	cbz	r0, 900047d6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
900047d0:	6803      	ldr	r3, [r0, #0]
900047d2:	681b      	ldr	r3, [r3, #0]
900047d4:	4798      	blx	r3
    if (*currentPresenter)
900047d6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
900047da:	b110      	cbz	r0, 900047e2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
900047dc:	6803      	ldr	r3, [r0, #0]
900047de:	689b      	ldr	r3, [r3, #8]
900047e0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
900047e2:	68f0      	ldr	r0, [r6, #12]
900047e4:	2100      	movs	r1, #0
900047e6:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
900047e8:	468b      	mov	fp, r1
900047ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900047ec:	4798      	blx	r3
900047ee:	4b37      	ldr	r3, [pc, #220]	@ (900048cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x17c>)
900047f0:	4604      	mov	r4, r0
900047f2:	f8c0 b004 	str.w	fp, [r0, #4]
900047f6:	f880 b008 	strb.w	fp, [r0, #8]
900047fa:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900047fc:	68b0      	ldr	r0, [r6, #8]
900047fe:	6023      	str	r3, [r4, #0]
90004800:	6803      	ldr	r3, [r0, #0]
90004802:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004804:	4798      	blx	r3
90004806:	4605      	mov	r5, r0
90004808:	f002 f91a 	bl	90006a40 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
9000480c:	6870      	ldr	r0, [r6, #4]
9000480e:	4659      	mov	r1, fp
90004810:	6803      	ldr	r3, [r0, #0]
90004812:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004814:	4798      	blx	r3
90004816:	4606      	mov	r6, r0
90004818:	4629      	mov	r1, r5
9000481a:	f002 f8e7 	bl	900069ec <_ZN16Screen1PresenterC1ER11Screen1View>
    model->bind(newPresenter);
9000481e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004820:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004824:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004826:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
9000482a:	f8c8 5000 	str.w	r5, [r8]
9000482e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004832:	682b      	ldr	r3, [r5, #0]
90004834:	f8c6 a008 	str.w	sl, [r6, #8]
90004838:	68db      	ldr	r3, [r3, #12]
9000483a:	63ee      	str	r6, [r5, #60]	@ 0x3c
9000483c:	4798      	blx	r3
    newPresenter->activate();
9000483e:	6833      	ldr	r3, [r6, #0]
90004840:	4630      	mov	r0, r6
90004842:	681b      	ldr	r3, [r3, #0]
90004844:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004846:	4621      	mov	r1, r4
90004848:	4628      	mov	r0, r5
9000484a:	f014 fa27 	bl	90018c9c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
9000484e:	6823      	ldr	r3, [r4, #0]
90004850:	491f      	ldr	r1, [pc, #124]	@ (900048d0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x180>)
90004852:	691a      	ldr	r2, [r3, #16]
90004854:	428a      	cmp	r2, r1
90004856:	d11a      	bne.n	9000488e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13e>
    newTransition->invalidate();
90004858:	695b      	ldr	r3, [r3, #20]
9000485a:	4a1e      	ldr	r2, [pc, #120]	@ (900048d4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x184>)
9000485c:	4293      	cmp	r3, r2
9000485e:	d111      	bne.n	90004884 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>
        Application::getInstance()->invalidate();
90004860:	f012 f9a0 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
90004864:	6803      	ldr	r3, [r0, #0]
90004866:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004868:	b001      	add	sp, #4
9000486a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000486e:	4718      	bx	r3
    if (*currentScreen)
90004870:	f8d8 0000 	ldr.w	r0, [r8]
90004874:	2800      	cmp	r0, #0
90004876:	d1ab      	bne.n	900047d0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
90004878:	e7b3      	b.n	900047e2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
9000487a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
9000487e:	2800      	cmp	r0, #0
90004880:	d1a0      	bne.n	900047c4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x74>
90004882:	e7ae      	b.n	900047e2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90004884:	4620      	mov	r0, r4
90004886:	b001      	add	sp, #4
90004888:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000488c:	4718      	bx	r3
    newTransition->init();
9000488e:	4620      	mov	r0, r4
90004890:	4790      	blx	r2
    newTransition->invalidate();
90004892:	6823      	ldr	r3, [r4, #0]
90004894:	e7e0      	b.n	90004858 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x108>
        (*currentTrans)->tearDown();
90004896:	4790      	blx	r2
    if (*currentTrans)
90004898:	f8d9 0000 	ldr.w	r0, [r9]
9000489c:	2800      	cmp	r0, #0
9000489e:	d084      	beq.n	900047aa <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
900048a0:	6803      	ldr	r3, [r0, #0]
900048a2:	e780      	b.n	900047a6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900048a4:	4b0c      	ldr	r3, [pc, #48]	@ (900048d8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x188>)
900048a6:	21a3      	movs	r1, #163	@ 0xa3
900048a8:	4a0c      	ldr	r2, [pc, #48]	@ (900048dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x18c>)
900048aa:	480d      	ldr	r0, [pc, #52]	@ (900048e0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>)
900048ac:	f025 f954 	bl	90029b58 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900048b0:	4b0c      	ldr	r3, [pc, #48]	@ (900048e4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x194>)
900048b2:	21a5      	movs	r1, #165	@ 0xa5
900048b4:	4a09      	ldr	r2, [pc, #36]	@ (900048dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x18c>)
900048b6:	480a      	ldr	r0, [pc, #40]	@ (900048e0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>)
900048b8:	f025 f94e 	bl	90029b58 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900048bc:	4b0a      	ldr	r3, [pc, #40]	@ (900048e8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x198>)
900048be:	21a4      	movs	r1, #164	@ 0xa4
900048c0:	4a06      	ldr	r2, [pc, #24]	@ (900048dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x18c>)
900048c2:	4807      	ldr	r0, [pc, #28]	@ (900048e0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x190>)
900048c4:	f025 f948 	bl	90029b58 <__assert_func>
900048c8:	90004491 	.word	0x90004491
900048cc:	9002cc34 	.word	0x9002cc34
900048d0:	90004495 	.word	0x90004495
900048d4:	9000452d 	.word	0x9000452d
900048d8:	9002c51c 	.word	0x9002c51c
900048dc:	9002c81c 	.word	0x9002c81c
900048e0:	9002c68c 	.word	0x9002c68c
900048e4:	9002c778 	.word	0x9002c778
900048e8:	9002c6d4 	.word	0x9002c6d4
900048ec:	2402341c 	.word	0x2402341c
900048f0:	24023418 	.word	0x24023418

900048f4 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv>:
{
900048f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<difficultySelectionScreenView, difficultySelectionScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900048f8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
900048fc:	4607      	mov	r7, r0
900048fe:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004900:	68b0      	ldr	r0, [r6, #8]
90004902:	6803      	ldr	r3, [r0, #0]
90004904:	6a1b      	ldr	r3, [r3, #32]
90004906:	4798      	blx	r3
90004908:	f5b0 7f86 	cmp.w	r0, #268	@ 0x10c
9000490c:	f0c0 809c 	bcc.w	90004a48 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x154>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004910:	6870      	ldr	r0, [r6, #4]
90004912:	6803      	ldr	r3, [r0, #0]
90004914:	6a1b      	ldr	r3, [r3, #32]
90004916:	4798      	blx	r3
90004918:	280f      	cmp	r0, #15
9000491a:	f240 80a1 	bls.w	90004a60 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x16c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000491e:	68f0      	ldr	r0, [r6, #12]
90004920:	6803      	ldr	r3, [r0, #0]
90004922:	6a1b      	ldr	r3, [r3, #32]
90004924:	4798      	blx	r3
90004926:	280b      	cmp	r0, #11
90004928:	f240 8094 	bls.w	90004a54 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x160>
    if (*currentTrans)
9000492c:	f8df 9160 	ldr.w	r9, [pc, #352]	@ 90004a90 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90004930:	f012 f938 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
90004934:	3004      	adds	r0, #4
90004936:	f012 f95a 	bl	90016bee <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
9000493a:	f8d9 0000 	ldr.w	r0, [r9]
9000493e:	b130      	cbz	r0, 9000494e <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
90004940:	6803      	ldr	r3, [r0, #0]
90004942:	494a      	ldr	r1, [pc, #296]	@ (90004a6c <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x178>)
90004944:	68da      	ldr	r2, [r3, #12]
90004946:	428a      	cmp	r2, r1
90004948:	d177      	bne.n	90004a3a <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x146>
        (*currentTrans)->~Transition();
9000494a:	681b      	ldr	r3, [r3, #0]
9000494c:	4798      	blx	r3
    if (*currentScreen)
9000494e:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90004a94 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x1a0>
90004952:	f8d8 0000 	ldr.w	r0, [r8]
90004956:	2800      	cmp	r0, #0
90004958:	d061      	beq.n	90004a1e <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x12a>
        (*currentScreen)->tearDownScreen();
9000495a:	6803      	ldr	r3, [r0, #0]
9000495c:	695b      	ldr	r3, [r3, #20]
9000495e:	4798      	blx	r3
    if (*currentPresenter)
90004960:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004964:	2800      	cmp	r0, #0
90004966:	d055      	beq.n	90004a14 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x120>
        (*currentPresenter)->deactivate();
90004968:	6803      	ldr	r3, [r0, #0]
9000496a:	685b      	ldr	r3, [r3, #4]
9000496c:	4798      	blx	r3
    if (*currentScreen)
9000496e:	f8d8 0000 	ldr.w	r0, [r8]
90004972:	b110      	cbz	r0, 9000497a <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
90004974:	6803      	ldr	r3, [r0, #0]
90004976:	681b      	ldr	r3, [r3, #0]
90004978:	4798      	blx	r3
    if (*currentPresenter)
9000497a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
9000497e:	b110      	cbz	r0, 90004986 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
90004980:	6803      	ldr	r3, [r0, #0]
90004982:	689b      	ldr	r3, [r3, #8]
90004984:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004986:	68f0      	ldr	r0, [r6, #12]
90004988:	2100      	movs	r1, #0
9000498a:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
9000498c:	468b      	mov	fp, r1
9000498e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004990:	4798      	blx	r3
90004992:	4b37      	ldr	r3, [pc, #220]	@ (90004a70 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x17c>)
90004994:	4604      	mov	r4, r0
90004996:	f8c0 b004 	str.w	fp, [r0, #4]
9000499a:	f880 b008 	strb.w	fp, [r0, #8]
9000499e:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900049a0:	68b0      	ldr	r0, [r6, #8]
900049a2:	6023      	str	r3, [r4, #0]
900049a4:	6803      	ldr	r3, [r0, #0]
900049a6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900049a8:	4798      	blx	r3
900049aa:	4605      	mov	r5, r0
900049ac:	f002 f8a4 	bl	90006af8 <_ZN29difficultySelectionScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900049b0:	6870      	ldr	r0, [r6, #4]
900049b2:	4659      	mov	r1, fp
900049b4:	6803      	ldr	r3, [r0, #0]
900049b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900049b8:	4798      	blx	r3
900049ba:	4606      	mov	r6, r0
900049bc:	4629      	mov	r1, r5
900049be:	f002 f861 	bl	90006a84 <_ZN34difficultySelectionScreenPresenterC1ER29difficultySelectionScreenView>
    model->bind(newPresenter);
900049c2:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
900049c4:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
900049c8:	4628      	mov	r0, r5
    *currentTrans = newTransition;
900049ca:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
900049ce:	f8c8 5000 	str.w	r5, [r8]
900049d2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
900049d6:	682b      	ldr	r3, [r5, #0]
900049d8:	f8c6 a008 	str.w	sl, [r6, #8]
900049dc:	68db      	ldr	r3, [r3, #12]
900049de:	63ee      	str	r6, [r5, #60]	@ 0x3c
900049e0:	4798      	blx	r3
    newPresenter->activate();
900049e2:	6833      	ldr	r3, [r6, #0]
900049e4:	4630      	mov	r0, r6
900049e6:	681b      	ldr	r3, [r3, #0]
900049e8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
900049ea:	4621      	mov	r1, r4
900049ec:	4628      	mov	r0, r5
900049ee:	f014 f955 	bl	90018c9c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
900049f2:	6823      	ldr	r3, [r4, #0]
900049f4:	491f      	ldr	r1, [pc, #124]	@ (90004a74 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x180>)
900049f6:	691a      	ldr	r2, [r3, #16]
900049f8:	428a      	cmp	r2, r1
900049fa:	d11a      	bne.n	90004a32 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x13e>
    newTransition->invalidate();
900049fc:	695b      	ldr	r3, [r3, #20]
900049fe:	4a1e      	ldr	r2, [pc, #120]	@ (90004a78 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x184>)
90004a00:	4293      	cmp	r3, r2
90004a02:	d111      	bne.n	90004a28 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x134>
        Application::getInstance()->invalidate();
90004a04:	f012 f8ce 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
90004a08:	6803      	ldr	r3, [r0, #0]
90004a0a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004a0c:	b001      	add	sp, #4
90004a0e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004a12:	4718      	bx	r3
    if (*currentScreen)
90004a14:	f8d8 0000 	ldr.w	r0, [r8]
90004a18:	2800      	cmp	r0, #0
90004a1a:	d1ab      	bne.n	90004974 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x80>
90004a1c:	e7b3      	b.n	90004986 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
90004a1e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004a22:	2800      	cmp	r0, #0
90004a24:	d1a0      	bne.n	90004968 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x74>
90004a26:	e7ae      	b.n	90004986 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90004a28:	4620      	mov	r0, r4
90004a2a:	b001      	add	sp, #4
90004a2c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004a30:	4718      	bx	r3
    newTransition->init();
90004a32:	4620      	mov	r0, r4
90004a34:	4790      	blx	r2
    newTransition->invalidate();
90004a36:	6823      	ldr	r3, [r4, #0]
90004a38:	e7e0      	b.n	900049fc <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x108>
        (*currentTrans)->tearDown();
90004a3a:	4790      	blx	r2
    if (*currentTrans)
90004a3c:	f8d9 0000 	ldr.w	r0, [r9]
90004a40:	2800      	cmp	r0, #0
90004a42:	d084      	beq.n	9000494e <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90004a44:	6803      	ldr	r3, [r0, #0]
90004a46:	e780      	b.n	9000494a <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004a48:	4b0c      	ldr	r3, [pc, #48]	@ (90004a7c <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x188>)
90004a4a:	21a3      	movs	r1, #163	@ 0xa3
90004a4c:	4a0c      	ldr	r2, [pc, #48]	@ (90004a80 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x18c>)
90004a4e:	480d      	ldr	r0, [pc, #52]	@ (90004a84 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x190>)
90004a50:	f025 f882 	bl	90029b58 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004a54:	4b0c      	ldr	r3, [pc, #48]	@ (90004a88 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x194>)
90004a56:	21a5      	movs	r1, #165	@ 0xa5
90004a58:	4a09      	ldr	r2, [pc, #36]	@ (90004a80 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x18c>)
90004a5a:	480a      	ldr	r0, [pc, #40]	@ (90004a84 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x190>)
90004a5c:	f025 f87c 	bl	90029b58 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004a60:	4b0a      	ldr	r3, [pc, #40]	@ (90004a8c <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x198>)
90004a62:	21a4      	movs	r1, #164	@ 0xa4
90004a64:	4a06      	ldr	r2, [pc, #24]	@ (90004a80 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x18c>)
90004a66:	4807      	ldr	r0, [pc, #28]	@ (90004a84 <_ZN23FrontendApplicationBase51gotodifficultySelectionScreenScreenNoTransitionImplEv+0x190>)
90004a68:	f025 f876 	bl	90029b58 <__assert_func>
90004a6c:	90004491 	.word	0x90004491
90004a70:	9002cc34 	.word	0x9002cc34
90004a74:	90004495 	.word	0x90004495
90004a78:	9000452d 	.word	0x9000452d
90004a7c:	9002c51c 	.word	0x9002c51c
90004a80:	9002c8f0 	.word	0x9002c8f0
90004a84:	9002c68c 	.word	0x9002c68c
90004a88:	9002c778 	.word	0x9002c778
90004a8c:	9002c6d4 	.word	0x9002c6d4
90004a90:	2402341c 	.word	0x2402341c
90004a94:	24023418 	.word	0x24023418

90004a98 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv>:
{
90004a98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<pongGameScreenView, pongGameScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004a9c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004aa0:	4607      	mov	r7, r0
90004aa2:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004aa4:	68b0      	ldr	r0, [r6, #8]
90004aa6:	6803      	ldr	r3, [r0, #0]
90004aa8:	6a1b      	ldr	r3, [r3, #32]
90004aaa:	4798      	blx	r3
90004aac:	f641 53c3 	movw	r3, #7619	@ 0x1dc3
90004ab0:	4298      	cmp	r0, r3
90004ab2:	f240 809c 	bls.w	90004bee <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x156>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004ab6:	6870      	ldr	r0, [r6, #4]
90004ab8:	6803      	ldr	r3, [r0, #0]
90004aba:	6a1b      	ldr	r3, [r3, #32]
90004abc:	4798      	blx	r3
90004abe:	280f      	cmp	r0, #15
90004ac0:	f240 80a1 	bls.w	90004c06 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x16e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004ac4:	68f0      	ldr	r0, [r6, #12]
90004ac6:	6803      	ldr	r3, [r0, #0]
90004ac8:	6a1b      	ldr	r3, [r3, #32]
90004aca:	4798      	blx	r3
90004acc:	280b      	cmp	r0, #11
90004ace:	f240 8094 	bls.w	90004bfa <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x162>
    if (*currentTrans)
90004ad2:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 90004c38 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
90004ad6:	f012 f865 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
90004ada:	3004      	adds	r0, #4
90004adc:	f012 f887 	bl	90016bee <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004ae0:	f8d9 0000 	ldr.w	r0, [r9]
90004ae4:	b130      	cbz	r0, 90004af4 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x5c>
        (*currentTrans)->tearDown();
90004ae6:	6803      	ldr	r3, [r0, #0]
90004ae8:	494a      	ldr	r1, [pc, #296]	@ (90004c14 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x17c>)
90004aea:	68da      	ldr	r2, [r3, #12]
90004aec:	428a      	cmp	r2, r1
90004aee:	d177      	bne.n	90004be0 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x148>
        (*currentTrans)->~Transition();
90004af0:	681b      	ldr	r3, [r3, #0]
90004af2:	4798      	blx	r3
    if (*currentScreen)
90004af4:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90004c3c <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x1a4>
90004af8:	f8d8 0000 	ldr.w	r0, [r8]
90004afc:	2800      	cmp	r0, #0
90004afe:	d061      	beq.n	90004bc4 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x12c>
        (*currentScreen)->tearDownScreen();
90004b00:	6803      	ldr	r3, [r0, #0]
90004b02:	695b      	ldr	r3, [r3, #20]
90004b04:	4798      	blx	r3
    if (*currentPresenter)
90004b06:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004b0a:	2800      	cmp	r0, #0
90004b0c:	d055      	beq.n	90004bba <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x122>
        (*currentPresenter)->deactivate();
90004b0e:	6803      	ldr	r3, [r0, #0]
90004b10:	685b      	ldr	r3, [r3, #4]
90004b12:	4798      	blx	r3
    if (*currentScreen)
90004b14:	f8d8 0000 	ldr.w	r0, [r8]
90004b18:	b110      	cbz	r0, 90004b20 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x88>
        (*currentScreen)->~Screen();
90004b1a:	6803      	ldr	r3, [r0, #0]
90004b1c:	681b      	ldr	r3, [r3, #0]
90004b1e:	4798      	blx	r3
    if (*currentPresenter)
90004b20:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004b24:	b110      	cbz	r0, 90004b2c <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x94>
        (*currentPresenter)->~Presenter();
90004b26:	6803      	ldr	r3, [r0, #0]
90004b28:	689b      	ldr	r3, [r3, #8]
90004b2a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004b2c:	68f0      	ldr	r0, [r6, #12]
90004b2e:	2100      	movs	r1, #0
90004b30:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90004b32:	468b      	mov	fp, r1
90004b34:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004b36:	4798      	blx	r3
90004b38:	4b37      	ldr	r3, [pc, #220]	@ (90004c18 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x180>)
90004b3a:	4604      	mov	r4, r0
90004b3c:	f8c0 b004 	str.w	fp, [r0, #4]
90004b40:	f880 b008 	strb.w	fp, [r0, #8]
90004b44:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004b46:	68b0      	ldr	r0, [r6, #8]
90004b48:	6023      	str	r3, [r4, #0]
90004b4a:	6803      	ldr	r3, [r0, #0]
90004b4c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004b4e:	4798      	blx	r3
90004b50:	4605      	mov	r5, r0
90004b52:	f002 f8c1 	bl	90006cd8 <_ZN18pongGameScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004b56:	6870      	ldr	r0, [r6, #4]
90004b58:	4659      	mov	r1, fp
90004b5a:	6803      	ldr	r3, [r0, #0]
90004b5c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004b5e:	4798      	blx	r3
90004b60:	4606      	mov	r6, r0
90004b62:	4629      	mov	r1, r5
90004b64:	f002 f872 	bl	90006c4c <_ZN23pongGameScreenPresenterC1ER18pongGameScreenView>
    model->bind(newPresenter);
90004b68:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004b6a:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004b6e:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004b70:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004b74:	f8c8 5000 	str.w	r5, [r8]
90004b78:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004b7c:	682b      	ldr	r3, [r5, #0]
90004b7e:	f8c6 a008 	str.w	sl, [r6, #8]
90004b82:	68db      	ldr	r3, [r3, #12]
90004b84:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004b86:	4798      	blx	r3
    newPresenter->activate();
90004b88:	6833      	ldr	r3, [r6, #0]
90004b8a:	4630      	mov	r0, r6
90004b8c:	681b      	ldr	r3, [r3, #0]
90004b8e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004b90:	4621      	mov	r1, r4
90004b92:	4628      	mov	r0, r5
90004b94:	f014 f882 	bl	90018c9c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004b98:	6823      	ldr	r3, [r4, #0]
90004b9a:	4920      	ldr	r1, [pc, #128]	@ (90004c1c <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x184>)
90004b9c:	691a      	ldr	r2, [r3, #16]
90004b9e:	428a      	cmp	r2, r1
90004ba0:	d11a      	bne.n	90004bd8 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90004ba2:	695b      	ldr	r3, [r3, #20]
90004ba4:	4a1e      	ldr	r2, [pc, #120]	@ (90004c20 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x188>)
90004ba6:	4293      	cmp	r3, r2
90004ba8:	d111      	bne.n	90004bce <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x136>
        Application::getInstance()->invalidate();
90004baa:	f011 fffb 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
90004bae:	6803      	ldr	r3, [r0, #0]
90004bb0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004bb2:	b001      	add	sp, #4
90004bb4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004bb8:	4718      	bx	r3
    if (*currentScreen)
90004bba:	f8d8 0000 	ldr.w	r0, [r8]
90004bbe:	2800      	cmp	r0, #0
90004bc0:	d1ab      	bne.n	90004b1a <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x82>
90004bc2:	e7b3      	b.n	90004b2c <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x94>
    if (*currentPresenter)
90004bc4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004bc8:	2800      	cmp	r0, #0
90004bca:	d1a0      	bne.n	90004b0e <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x76>
90004bcc:	e7ae      	b.n	90004b2c <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x94>
    newTransition->invalidate();
90004bce:	4620      	mov	r0, r4
90004bd0:	b001      	add	sp, #4
90004bd2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004bd6:	4718      	bx	r3
    newTransition->init();
90004bd8:	4620      	mov	r0, r4
90004bda:	4790      	blx	r2
    newTransition->invalidate();
90004bdc:	6823      	ldr	r3, [r4, #0]
90004bde:	e7e0      	b.n	90004ba2 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x10a>
        (*currentTrans)->tearDown();
90004be0:	4790      	blx	r2
    if (*currentTrans)
90004be2:	f8d9 0000 	ldr.w	r0, [r9]
90004be6:	2800      	cmp	r0, #0
90004be8:	d084      	beq.n	90004af4 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x5c>
        (*currentTrans)->~Transition();
90004bea:	6803      	ldr	r3, [r0, #0]
90004bec:	e780      	b.n	90004af0 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x58>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004bee:	4b0d      	ldr	r3, [pc, #52]	@ (90004c24 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x18c>)
90004bf0:	21a3      	movs	r1, #163	@ 0xa3
90004bf2:	4a0d      	ldr	r2, [pc, #52]	@ (90004c28 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x190>)
90004bf4:	480d      	ldr	r0, [pc, #52]	@ (90004c2c <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x194>)
90004bf6:	f024 ffaf 	bl	90029b58 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004bfa:	4b0d      	ldr	r3, [pc, #52]	@ (90004c30 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x198>)
90004bfc:	21a5      	movs	r1, #165	@ 0xa5
90004bfe:	4a0a      	ldr	r2, [pc, #40]	@ (90004c28 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x190>)
90004c00:	480a      	ldr	r0, [pc, #40]	@ (90004c2c <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x194>)
90004c02:	f024 ffa9 	bl	90029b58 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004c06:	4b0b      	ldr	r3, [pc, #44]	@ (90004c34 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x19c>)
90004c08:	21a4      	movs	r1, #164	@ 0xa4
90004c0a:	4a07      	ldr	r2, [pc, #28]	@ (90004c28 <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x190>)
90004c0c:	4807      	ldr	r0, [pc, #28]	@ (90004c2c <_ZN23FrontendApplicationBase40gotopongGameScreenScreenNoTransitionImplEv+0x194>)
90004c0e:	f024 ffa3 	bl	90029b58 <__assert_func>
90004c12:	bf00      	nop
90004c14:	90004491 	.word	0x90004491
90004c18:	9002cc34 	.word	0x9002cc34
90004c1c:	90004495 	.word	0x90004495
90004c20:	9000452d 	.word	0x9000452d
90004c24:	9002c51c 	.word	0x9002c51c
90004c28:	9002c9e8 	.word	0x9002c9e8
90004c2c:	9002c68c 	.word	0x9002c68c
90004c30:	9002c778 	.word	0x9002c778
90004c34:	9002c6d4 	.word	0x9002c6d4
90004c38:	2402341c 	.word	0x2402341c
90004c3c:	24023418 	.word	0x24023418

90004c40 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv>:
{
90004c40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<PongPlayerSelectionScreenView, PongPlayerSelectionScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004c44:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004c48:	4607      	mov	r7, r0
90004c4a:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004c4c:	68b0      	ldr	r0, [r6, #8]
90004c4e:	6803      	ldr	r3, [r0, #0]
90004c50:	6a1b      	ldr	r3, [r3, #32]
90004c52:	4798      	blx	r3
90004c54:	f5b0 7fba 	cmp.w	r0, #372	@ 0x174
90004c58:	f0c0 809c 	bcc.w	90004d94 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x154>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004c5c:	6870      	ldr	r0, [r6, #4]
90004c5e:	6803      	ldr	r3, [r0, #0]
90004c60:	6a1b      	ldr	r3, [r3, #32]
90004c62:	4798      	blx	r3
90004c64:	280f      	cmp	r0, #15
90004c66:	f240 80a1 	bls.w	90004dac <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x16c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004c6a:	68f0      	ldr	r0, [r6, #12]
90004c6c:	6803      	ldr	r3, [r0, #0]
90004c6e:	6a1b      	ldr	r3, [r3, #32]
90004c70:	4798      	blx	r3
90004c72:	280b      	cmp	r0, #11
90004c74:	f240 8094 	bls.w	90004da0 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x160>
    if (*currentTrans)
90004c78:	f8df 9160 	ldr.w	r9, [pc, #352]	@ 90004ddc <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90004c7c:	f011 ff92 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
90004c80:	3004      	adds	r0, #4
90004c82:	f011 ffb4 	bl	90016bee <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004c86:	f8d9 0000 	ldr.w	r0, [r9]
90004c8a:	b130      	cbz	r0, 90004c9a <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
90004c8c:	6803      	ldr	r3, [r0, #0]
90004c8e:	494a      	ldr	r1, [pc, #296]	@ (90004db8 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x178>)
90004c90:	68da      	ldr	r2, [r3, #12]
90004c92:	428a      	cmp	r2, r1
90004c94:	d177      	bne.n	90004d86 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x146>
        (*currentTrans)->~Transition();
90004c96:	681b      	ldr	r3, [r3, #0]
90004c98:	4798      	blx	r3
    if (*currentScreen)
90004c9a:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90004de0 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x1a0>
90004c9e:	f8d8 0000 	ldr.w	r0, [r8]
90004ca2:	2800      	cmp	r0, #0
90004ca4:	d061      	beq.n	90004d6a <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x12a>
        (*currentScreen)->tearDownScreen();
90004ca6:	6803      	ldr	r3, [r0, #0]
90004ca8:	695b      	ldr	r3, [r3, #20]
90004caa:	4798      	blx	r3
    if (*currentPresenter)
90004cac:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004cb0:	2800      	cmp	r0, #0
90004cb2:	d055      	beq.n	90004d60 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x120>
        (*currentPresenter)->deactivate();
90004cb4:	6803      	ldr	r3, [r0, #0]
90004cb6:	685b      	ldr	r3, [r3, #4]
90004cb8:	4798      	blx	r3
    if (*currentScreen)
90004cba:	f8d8 0000 	ldr.w	r0, [r8]
90004cbe:	b110      	cbz	r0, 90004cc6 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
90004cc0:	6803      	ldr	r3, [r0, #0]
90004cc2:	681b      	ldr	r3, [r3, #0]
90004cc4:	4798      	blx	r3
    if (*currentPresenter)
90004cc6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004cca:	b110      	cbz	r0, 90004cd2 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
90004ccc:	6803      	ldr	r3, [r0, #0]
90004cce:	689b      	ldr	r3, [r3, #8]
90004cd0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004cd2:	68f0      	ldr	r0, [r6, #12]
90004cd4:	2100      	movs	r1, #0
90004cd6:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90004cd8:	468b      	mov	fp, r1
90004cda:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004cdc:	4798      	blx	r3
90004cde:	4b37      	ldr	r3, [pc, #220]	@ (90004dbc <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x17c>)
90004ce0:	4604      	mov	r4, r0
90004ce2:	f8c0 b004 	str.w	fp, [r0, #4]
90004ce6:	f880 b008 	strb.w	fp, [r0, #8]
90004cea:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004cec:	68b0      	ldr	r0, [r6, #8]
90004cee:	6023      	str	r3, [r4, #0]
90004cf0:	6803      	ldr	r3, [r0, #0]
90004cf2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004cf4:	4798      	blx	r3
90004cf6:	4605      	mov	r5, r0
90004cf8:	f001 fe56 	bl	900069a8 <_ZN29PongPlayerSelectionScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004cfc:	6870      	ldr	r0, [r6, #4]
90004cfe:	4659      	mov	r1, fp
90004d00:	6803      	ldr	r3, [r0, #0]
90004d02:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004d04:	4798      	blx	r3
90004d06:	4606      	mov	r6, r0
90004d08:	4629      	mov	r1, r5
90004d0a:	f001 fe13 	bl	90006934 <_ZN34PongPlayerSelectionScreenPresenterC1ER29PongPlayerSelectionScreenView>
    model->bind(newPresenter);
90004d0e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004d10:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004d14:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004d16:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004d1a:	f8c8 5000 	str.w	r5, [r8]
90004d1e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004d22:	682b      	ldr	r3, [r5, #0]
90004d24:	f8c6 a008 	str.w	sl, [r6, #8]
90004d28:	68db      	ldr	r3, [r3, #12]
90004d2a:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004d2c:	4798      	blx	r3
    newPresenter->activate();
90004d2e:	6833      	ldr	r3, [r6, #0]
90004d30:	4630      	mov	r0, r6
90004d32:	681b      	ldr	r3, [r3, #0]
90004d34:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004d36:	4621      	mov	r1, r4
90004d38:	4628      	mov	r0, r5
90004d3a:	f013 ffaf 	bl	90018c9c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004d3e:	6823      	ldr	r3, [r4, #0]
90004d40:	491f      	ldr	r1, [pc, #124]	@ (90004dc0 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x180>)
90004d42:	691a      	ldr	r2, [r3, #16]
90004d44:	428a      	cmp	r2, r1
90004d46:	d11a      	bne.n	90004d7e <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x13e>
    newTransition->invalidate();
90004d48:	695b      	ldr	r3, [r3, #20]
90004d4a:	4a1e      	ldr	r2, [pc, #120]	@ (90004dc4 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x184>)
90004d4c:	4293      	cmp	r3, r2
90004d4e:	d111      	bne.n	90004d74 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x134>
        Application::getInstance()->invalidate();
90004d50:	f011 ff28 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
90004d54:	6803      	ldr	r3, [r0, #0]
90004d56:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004d58:	b001      	add	sp, #4
90004d5a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004d5e:	4718      	bx	r3
    if (*currentScreen)
90004d60:	f8d8 0000 	ldr.w	r0, [r8]
90004d64:	2800      	cmp	r0, #0
90004d66:	d1ab      	bne.n	90004cc0 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x80>
90004d68:	e7b3      	b.n	90004cd2 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
90004d6a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004d6e:	2800      	cmp	r0, #0
90004d70:	d1a0      	bne.n	90004cb4 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x74>
90004d72:	e7ae      	b.n	90004cd2 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90004d74:	4620      	mov	r0, r4
90004d76:	b001      	add	sp, #4
90004d78:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004d7c:	4718      	bx	r3
    newTransition->init();
90004d7e:	4620      	mov	r0, r4
90004d80:	4790      	blx	r2
    newTransition->invalidate();
90004d82:	6823      	ldr	r3, [r4, #0]
90004d84:	e7e0      	b.n	90004d48 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x108>
        (*currentTrans)->tearDown();
90004d86:	4790      	blx	r2
    if (*currentTrans)
90004d88:	f8d9 0000 	ldr.w	r0, [r9]
90004d8c:	2800      	cmp	r0, #0
90004d8e:	d084      	beq.n	90004c9a <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90004d90:	6803      	ldr	r3, [r0, #0]
90004d92:	e780      	b.n	90004c96 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004d94:	4b0c      	ldr	r3, [pc, #48]	@ (90004dc8 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x188>)
90004d96:	21a3      	movs	r1, #163	@ 0xa3
90004d98:	4a0c      	ldr	r2, [pc, #48]	@ (90004dcc <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x18c>)
90004d9a:	480d      	ldr	r0, [pc, #52]	@ (90004dd0 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x190>)
90004d9c:	f024 fedc 	bl	90029b58 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004da0:	4b0c      	ldr	r3, [pc, #48]	@ (90004dd4 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x194>)
90004da2:	21a5      	movs	r1, #165	@ 0xa5
90004da4:	4a09      	ldr	r2, [pc, #36]	@ (90004dcc <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x18c>)
90004da6:	480a      	ldr	r0, [pc, #40]	@ (90004dd0 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x190>)
90004da8:	f024 fed6 	bl	90029b58 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004dac:	4b0a      	ldr	r3, [pc, #40]	@ (90004dd8 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x198>)
90004dae:	21a4      	movs	r1, #164	@ 0xa4
90004db0:	4a06      	ldr	r2, [pc, #24]	@ (90004dcc <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x18c>)
90004db2:	4807      	ldr	r0, [pc, #28]	@ (90004dd0 <_ZN23FrontendApplicationBase51gotoPongPlayerSelectionScreenScreenNoTransitionImplEv+0x190>)
90004db4:	f024 fed0 	bl	90029b58 <__assert_func>
90004db8:	90004491 	.word	0x90004491
90004dbc:	9002cc34 	.word	0x9002cc34
90004dc0:	90004495 	.word	0x90004495
90004dc4:	9000452d 	.word	0x9000452d
90004dc8:	9002c51c 	.word	0x9002c51c
90004dcc:	9002cac8 	.word	0x9002cac8
90004dd0:	9002c68c 	.word	0x9002c68c
90004dd4:	9002c778 	.word	0x9002c778
90004dd8:	9002c6d4 	.word	0x9002c6d4
90004ddc:	2402341c 	.word	0x2402341c
90004de0:	24023418 	.word	0x24023418

90004de4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90004de4:	b570      	push	{r4, r5, r6, lr}
90004de6:	4604      	mov	r4, r0
90004de8:	4615      	mov	r5, r2
90004dea:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90004dec:	f011 ffa0 	bl	90016d30 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90004df0:	4a22      	ldr	r2, [pc, #136]	@ (90004e7c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x98>)
        : currentPresenter(0),
90004df2:	2300      	movs	r3, #0
      frontendHeap(heap),
90004df4:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
90004df8:	6014      	str	r4, [r2, #0]
        return instance;
90004dfa:	4d21      	ldr	r5, [pc, #132]	@ (90004e80 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x9c>)
      model(m)
90004dfc:	4a21      	ldr	r2, [pc, #132]	@ (90004e84 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa0>)
90004dfe:	6828      	ldr	r0, [r5, #0]
90004e00:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90004e02:	4a21      	ldr	r2, [pc, #132]	@ (90004e88 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa4>)
90004e04:	4921      	ldr	r1, [pc, #132]	@ (90004e8c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
90004e06:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
90004e0a:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
90004e0e:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
90004e12:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
90004e16:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004e1a:	6802      	ldr	r2, [r0, #0]
90004e1c:	6892      	ldr	r2, [r2, #8]
90004e1e:	428a      	cmp	r2, r1
90004e20:	d129      	bne.n	90004e76 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x92>
        requestedOrientation = orientation;
90004e22:	f44f 7380 	mov.w	r3, #256	@ 0x100
90004e26:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
90004e2a:	2000      	movs	r0, #0
90004e2c:	f000 fce0 	bl	900057f0 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90004e30:	682b      	ldr	r3, [r5, #0]
90004e32:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004e36:	b1e2      	cbz	r2, 90004e72 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
90004e38:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004e3a:	b1d0      	cbz	r0, 90004e72 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90004e3c:	f01c fa0f 	bl	9002125e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90004e40:	682b      	ldr	r3, [r5, #0]
90004e42:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004e46:	b192      	cbz	r2, 90004e6e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
90004e48:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004e4a:	b180      	cbz	r0, 90004e6e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90004e4c:	f01c fa82 	bl	90021354 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
90004e50:	682b      	ldr	r3, [r5, #0]
90004e52:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004e56:	b12a      	cbz	r2, 90004e64 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
90004e58:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004e5a:	b118      	cbz	r0, 90004e64 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90004e5c:	f01c fa86 	bl	9002136c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90004e60:	4620      	mov	r0, r4
90004e62:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90004e64:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90004e66:	f01c fa81 	bl	9002136c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90004e6a:	4620      	mov	r0, r4
90004e6c:	bd70      	pop	{r4, r5, r6, pc}
90004e6e:	6898      	ldr	r0, [r3, #8]
90004e70:	e7ec      	b.n	90004e4c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>
90004e72:	6898      	ldr	r0, [r3, #8]
90004e74:	e7e2      	b.n	90004e3c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004e76:	4619      	mov	r1, r3
90004e78:	4790      	blx	r2
90004e7a:	e7d6      	b.n	90004e2a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90004e7c:	24023428 	.word	0x24023428
90004e80:	240233d4 	.word	0x240233d4
90004e84:	9002cbe0 	.word	0x9002cbe0
90004e88:	9002cbc8 	.word	0x9002cbc8
90004e8c:	90000d5d 	.word	0x90000d5d

90004e90 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004e90:	4905      	ldr	r1, [pc, #20]	@ (90004ea8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x18>)
90004e92:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004e94:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004e98:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004e9c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004ea0:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90004ea4:	4770      	bx	lr
90004ea6:	bf00      	nop
90004ea8:	90004751 	.word	0x90004751

90004eac <_ZN23FrontendApplicationBase47gotoPongPlayerSelectionScreenScreenNoTransitionEv>:
90004eac:	4905      	ldr	r1, [pc, #20]	@ (90004ec4 <_ZN23FrontendApplicationBase47gotoPongPlayerSelectionScreenScreenNoTransitionEv+0x18>)
90004eae:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004eb0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004eb4:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004eb8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004ebc:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90004ec0:	4770      	bx	lr
90004ec2:	bf00      	nop
90004ec4:	90004c41 	.word	0x90004c41

90004ec8 <_ZN23FrontendApplicationBase47gotodifficultySelectionScreenScreenNoTransitionEv>:
90004ec8:	4905      	ldr	r1, [pc, #20]	@ (90004ee0 <_ZN23FrontendApplicationBase47gotodifficultySelectionScreenScreenNoTransitionEv+0x18>)
90004eca:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004ecc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004ed0:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004ed4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004ed8:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90004edc:	4770      	bx	lr
90004ede:	bf00      	nop
90004ee0:	900048f5 	.word	0x900048f5

90004ee4 <_ZN23FrontendApplicationBase36gotopongGameScreenScreenNoTransitionEv>:
90004ee4:	4905      	ldr	r1, [pc, #20]	@ (90004efc <_ZN23FrontendApplicationBase36gotopongGameScreenScreenNoTransitionEv+0x18>)
90004ee6:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004ee8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004eec:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004ef0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004ef4:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90004ef8:	4770      	bx	lr
90004efa:	bf00      	nop
90004efc:	90004a99 	.word	0x90004a99

90004f00 <_ZN23FrontendApplicationBase36gotogameOverScreenScreenNoTransitionEv>:
90004f00:	4905      	ldr	r1, [pc, #20]	@ (90004f18 <_ZN23FrontendApplicationBase36gotogameOverScreenScreenNoTransitionEv+0x18>)
90004f02:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004f04:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004f08:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004f0c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004f10:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90004f14:	4770      	bx	lr
90004f16:	bf00      	nop
90004f18:	9000453d 	.word	0x9000453d

90004f1c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90004f1c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
90004f1e:	4770      	bx	lr

90004f20 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90004f20:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90004f22:	4770      	bx	lr

90004f24 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90004f24:	4770      	bx	lr
90004f26:	bf00      	nop

90004f28 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90004f28:	888b      	ldrh	r3, [r1, #4]
90004f2a:	69c0      	ldr	r0, [r0, #28]
90004f2c:	0adb      	lsrs	r3, r3, #11
90004f2e:	680a      	ldr	r2, [r1, #0]
90004f30:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90004f34:	4410      	add	r0, r2
90004f36:	4770      	bx	lr

90004f38 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90004f38:	b1fa      	cbz	r2, 90004f7a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
90004f3a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90004f3c:	7b14      	ldrb	r4, [r2, #12]
90004f3e:	b1d4      	cbz	r4, 90004f76 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90004f40:	f892 c00d 	ldrb.w	ip, [r2, #13]
90004f44:	f892 e00b 	ldrb.w	lr, [r2, #11]
90004f48:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90004f4c:	6a03      	ldr	r3, [r0, #32]
90004f4e:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
90004f52:	ea4e 0202 	orr.w	r2, lr, r2
90004f56:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004f5a:	eb03 0084 	add.w	r0, r3, r4, lsl #2
90004f5e:	e004      	b.n	90004f6a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
90004f60:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90004f64:	d807      	bhi.n	90004f76 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004f66:	4283      	cmp	r3, r0
90004f68:	d005      	beq.n	90004f76 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
90004f6a:	881a      	ldrh	r2, [r3, #0]
90004f6c:	428a      	cmp	r2, r1
90004f6e:	d1f7      	bne.n	90004f60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
90004f70:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
90004f74:	bd10      	pop	{r4, pc}
        return 0;
90004f76:	2000      	movs	r0, #0
}
90004f78:	bd10      	pop	{r4, pc}
        return 0;
90004f7a:	4610      	mov	r0, r2
}
90004f7c:	4770      	bx	lr
90004f7e:	bf00      	nop

90004f80 <_ZN8touchgfx13GeneratedFontD0Ev>:
90004f80:	b510      	push	{r4, lr}
90004f82:	4604      	mov	r4, r0
90004f84:	212c      	movs	r1, #44	@ 0x2c
90004f86:	f024 fa71 	bl	9002946c <_ZdlPvj>
90004f8a:	4620      	mov	r0, r4
90004f8c:	bd10      	pop	{r4, pc}
90004f8e:	bf00      	nop

90004f90 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f90:	b530      	push	{r4, r5, lr}
90004f92:	b08b      	sub	sp, #44	@ 0x2c
90004f94:	4604      	mov	r4, r0
90004f96:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
90004f9a:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004f9c:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
90004fa0:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004fa2:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
90004fa6:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004fa8:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
90004fac:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004fae:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
90004fb2:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004fb4:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
90004fb8:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004fba:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
90004fbe:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004fc0:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
90004fc4:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004fc6:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
90004fca:	9508      	str	r5, [sp, #32]
90004fcc:	f013 fa34 	bl	90018438 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90004fd0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
90004fd2:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
90004fd4:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
90004fd6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90004fd8:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90004fda:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90004fdc:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
90004fde:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90004fe0:	62a3      	str	r3, [r4, #40]	@ 0x28
90004fe2:	4b02      	ldr	r3, [pc, #8]	@ (90004fec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
90004fe4:	6023      	str	r3, [r4, #0]
}
90004fe6:	b00b      	add	sp, #44	@ 0x2c
90004fe8:	bd30      	pop	{r4, r5, pc}
90004fea:	bf00      	nop
90004fec:	9002cc58 	.word	0x9002cc58

90004ff0 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90004ff0:	4770      	bx	lr
90004ff2:	bf00      	nop

90004ff4 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004ff4:	4770      	bx	lr
90004ff6:	bf00      	nop

90004ff8 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004ff8:	4770      	bx	lr
90004ffa:	bf00      	nop

90004ffc <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90004ffc:	4770      	bx	lr
90004ffe:	bf00      	nop

90005000 <_ZN33PongPlayerSelectionScreenViewBase25singleplayerButtonPressedEv>:
     * Virtual Action Handlers
     */
    virtual void singleplayerButtonPressed()
    {
        // Override and implement this function in PongPlayerSelectionScreen
    }
90005000:	4770      	bx	lr
90005002:	bf00      	nop

90005004 <_ZN33PongPlayerSelectionScreenViewBase24multiplayerButtonPressedEv>:
    virtual void multiplayerButtonPressed()
    {
        // Override and implement this function in PongPlayerSelectionScreen
    }
90005004:	4770      	bx	lr
90005006:	bf00      	nop

90005008 <_ZN33PongPlayerSelectionScreenViewBaseD1Ev>:
}

PongPlayerSelectionScreenViewBase::~PongPlayerSelectionScreenViewBase()
{

}
90005008:	4770      	bx	lr
9000500a:	bf00      	nop

9000500c <_ZN33PongPlayerSelectionScreenViewBase11setupScreenEv>:

void PongPlayerSelectionScreenViewBase::setupScreen()
{

}
9000500c:	4770      	bx	lr
9000500e:	bf00      	nop

90005010 <_ZN8touchgfx8CallbackI33PongPlayerSelectionScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005010:	4770      	bx	lr
90005012:	bf00      	nop

90005014 <_ZN8touchgfx8CallbackI33PongPlayerSelectionScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005014:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90005016:	68c3      	ldr	r3, [r0, #12]
90005018:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
9000501c:	f013 0f01 	tst.w	r3, #1
90005020:	eb04 0063 	add.w	r0, r4, r3, asr #1
90005024:	d004      	beq.n	90005030 <_ZN8touchgfx8CallbackI33PongPlayerSelectionScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90005026:	ea4f 0c63 	mov.w	ip, r3, asr #1
9000502a:	f854 300c 	ldr.w	r3, [r4, ip]
9000502e:	589a      	ldr	r2, [r3, r2]
    }
90005030:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005034:	4710      	bx	r2
90005036:	bf00      	nop

90005038 <_ZNK8touchgfx8CallbackI33PongPlayerSelectionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005038:	6843      	ldr	r3, [r0, #4]
9000503a:	b13b      	cbz	r3, 9000504c <_ZNK8touchgfx8CallbackI33PongPlayerSelectionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
9000503c:	6883      	ldr	r3, [r0, #8]
9000503e:	b10b      	cbz	r3, 90005044 <_ZNK8touchgfx8CallbackI33PongPlayerSelectionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90005040:	2001      	movs	r0, #1
    }
90005042:	4770      	bx	lr
90005044:	68c0      	ldr	r0, [r0, #12]
90005046:	f000 0001 	and.w	r0, r0, #1
9000504a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
9000504c:	4618      	mov	r0, r3
9000504e:	4770      	bx	lr

90005050 <_ZN8touchgfx8CallbackI33PongPlayerSelectionScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005050:	b510      	push	{r4, lr}
90005052:	4604      	mov	r4, r0
90005054:	2110      	movs	r1, #16
90005056:	f024 fa09 	bl	9002946c <_ZdlPvj>
9000505a:	4620      	mov	r0, r4
9000505c:	bd10      	pop	{r4, pc}
9000505e:	bf00      	nop

90005060 <_ZN33PongPlayerSelectionScreenViewBaseD0Ev>:
PongPlayerSelectionScreenViewBase::~PongPlayerSelectionScreenViewBase()
90005060:	b510      	push	{r4, lr}
90005062:	4604      	mov	r4, r0
}
90005064:	f44f 71ba 	mov.w	r1, #372	@ 0x174
90005068:	f024 fa00 	bl	9002946c <_ZdlPvj>
9000506c:	4620      	mov	r0, r4
9000506e:	bd10      	pop	{r4, pc}

90005070 <_ZN33PongPlayerSelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void PongPlayerSelectionScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &twoPlayerButton)
90005070:	f100 03a0 	add.w	r3, r0, #160	@ 0xa0
90005074:	4299      	cmp	r1, r3
{
90005076:	b570      	push	{r4, r5, r6, lr}
90005078:	4604      	mov	r4, r0
9000507a:	460d      	mov	r5, r1
    if (&src == &twoPlayerButton)
9000507c:	d011      	beq.n	900050a2 <_ZN33PongPlayerSelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x32>
        //multiplayerChosenInteraction
        //When twoPlayerButton clicked call virtual function
        //Call multiplayerButtonPressed
        multiplayerButtonPressed();
    }
    if (&src == &onePlayerButton)
9000507e:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
90005082:	429d      	cmp	r5, r3
90005084:	d000      	beq.n	90005088 <_ZN33PongPlayerSelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
        //singleplayerChosenInteraction
        //When onePlayerButton clicked call virtual function
        //Call singleplayerButtonPressed
        singleplayerButtonPressed();
    }
}
90005086:	bd70      	pop	{r4, r5, r6, pc}

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005088:	f011 fd8c 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotodifficultySelectionScreenScreenNoTransition();
9000508c:	f7ff ff1c 	bl	90004ec8 <_ZN23FrontendApplicationBase47gotodifficultySelectionScreenScreenNoTransitionEv>
        singleplayerButtonPressed();
90005090:	6823      	ldr	r3, [r4, #0]
90005092:	4a0a      	ldr	r2, [pc, #40]	@ (900050bc <_ZN33PongPlayerSelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4c>)
90005094:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90005096:	4293      	cmp	r3, r2
90005098:	d0f5      	beq.n	90005086 <_ZN33PongPlayerSelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
9000509a:	4620      	mov	r0, r4
}
9000509c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        singleplayerButtonPressed();
900050a0:	4718      	bx	r3
900050a2:	f011 fd7f 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotopongGameScreenScreenNoTransition();
900050a6:	f7ff ff1d 	bl	90004ee4 <_ZN23FrontendApplicationBase36gotopongGameScreenScreenNoTransitionEv>
        multiplayerButtonPressed();
900050aa:	6823      	ldr	r3, [r4, #0]
900050ac:	4a04      	ldr	r2, [pc, #16]	@ (900050c0 <_ZN33PongPlayerSelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x50>)
900050ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900050b0:	4293      	cmp	r3, r2
900050b2:	d0e4      	beq.n	9000507e <_ZN33PongPlayerSelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
900050b4:	4620      	mov	r0, r4
900050b6:	4798      	blx	r3
900050b8:	e7e1      	b.n	9000507e <_ZN33PongPlayerSelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
900050ba:	bf00      	nop
900050bc:	90005001 	.word	0x90005001
900050c0:	90005005 	.word	0x90005005

900050c4 <_ZN33PongPlayerSelectionScreenViewBaseC1Ev>:
PongPlayerSelectionScreenViewBase::PongPlayerSelectionScreenViewBase() :
900050c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900050c8:	b089      	sub	sp, #36	@ 0x24
900050ca:	4604      	mov	r4, r0
        : presenter(0)
900050cc:	f013 fc3a 	bl	90018944 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &PongPlayerSelectionScreenViewBase::buttonCallbackHandler)
900050d0:	497f      	ldr	r1, [pc, #508]	@ (900052d0 <_ZN33PongPlayerSelectionScreenViewBaseC1Ev+0x20c>)
900050d2:	2500      	movs	r5, #0
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
900050d4:	f04f 37ff 	mov.w	r7, #4294967295
900050d8:	6021      	str	r1, [r4, #0]
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
900050da:	23ff      	movs	r3, #255	@ 0xff
900050dc:	497d      	ldr	r1, [pc, #500]	@ (900052d4 <_ZN33PongPlayerSelectionScreenViewBaseC1Ev+0x210>)
          touchable(false),
900050de:	f44f 7280 	mov.w	r2, #256	@ 0x100
        touchable = touch;
900050e2:	f240 1001 	movw	r0, #257	@ 0x101
        : typedTextId(id)
900050e6:	f8df 9214 	ldr.w	r9, [pc, #532]	@ 900052fc <_ZN33PongPlayerSelectionScreenViewBaseC1Ev+0x238>
900050ea:	6421      	str	r1, [r4, #64]	@ 0x40
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
900050ec:	f104 0804 	add.w	r8, r4, #4
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
900050f0:	4979      	ldr	r1, [pc, #484]	@ (900052d8 <_ZN33PongPlayerSelectionScreenViewBaseC1Ev+0x214>)
900050f2:	f104 066c 	add.w	r6, r4, #108	@ 0x6c
          touchable(false),
900050f6:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
    onePlayerButton.setAction(buttonCallback);
900050fa:	f504 7ab2 	add.w	sl, r4, #356	@ 0x164
900050fe:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
90005102:	f04f 0b01 	mov.w	fp, #1
        touchable = touch;
90005106:	f8a4 0090 	strh.w	r0, [r4, #144]	@ 0x90
9000510a:	66e1      	str	r1, [r4, #108]	@ 0x6c
9000510c:	63e5      	str	r5, [r4, #60]	@ 0x3c
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
9000510e:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
90005112:	f884 5098 	strb.w	r5, [r4, #152]	@ 0x98
90005116:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
9000511a:	f8c4 709a 	str.w	r7, [r4, #154]	@ 0x9a
9000511e:	f884 709e 	strb.w	r7, [r4, #158]	@ 0x9e
          nextSibling(0),
90005122:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
90005126:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
9000512a:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
9000512e:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
90005132:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
90005136:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
9000513a:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
9000513e:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          nextSibling(0),
90005142:	e9c4 552d 	strd	r5, r5, [r4, #180]	@ 0xb4
          cachedAbsX(0),
90005146:	e9c4 552f 	strd	r5, r5, [r4, #188]	@ 0xbc
9000514a:	f884 50cc 	strb.w	r5, [r4, #204]	@ 0xcc
          touchable(false),
9000514e:	f8a4 20f8 	strh.w	r2, [r4, #248]	@ 0xf8
90005152:	f8a4 2140 	strh.w	r2, [r4, #320]	@ 0x140
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005156:	4a61      	ldr	r2, [pc, #388]	@ (900052dc <_ZN33PongPlayerSelectionScreenViewBaseC1Ev+0x218>)
        touchable = touch;
90005158:	f8a4 00c4 	strh.w	r0, [r4, #196]	@ 0xc4
9000515c:	4640      	mov	r0, r8
9000515e:	f8c4 20d4 	str.w	r2, [r4, #212]	@ 0xd4
90005162:	f8c4 211c 	str.w	r2, [r4, #284]	@ 0x11c
90005166:	f8c4 10a0 	str.w	r1, [r4, #160]	@ 0xa0
9000516a:	f104 0140 	add.w	r1, r4, #64	@ 0x40
9000516e:	f884 30d2 	strb.w	r3, [r4, #210]	@ 0xd2
90005172:	f8c4 310a 	str.w	r3, [r4, #266]	@ 0x10a
90005176:	f8c4 70ce 	str.w	r7, [r4, #206]	@ 0xce
9000517a:	f8c4 90fc 	str.w	r9, [r4, #252]	@ 0xfc
9000517e:	f8a4 7100 	strh.w	r7, [r4, #256]	@ 0x100
        : color(col)
90005182:	f8c4 5104 	str.w	r5, [r4, #260]	@ 0x104
90005186:	f8a4 5108 	strh.w	r5, [r4, #264]	@ 0x108
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
9000518a:	f8c4 5118 	str.w	r5, [r4, #280]	@ 0x118
        : x(0), y(0), width(0), height(0)
9000518e:	e9c4 5536 	strd	r5, r5, [r4, #216]	@ 0xd8
90005192:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
          nextSibling(0),
90005196:	e9c4 553a 	strd	r5, r5, [r4, #232]	@ 0xe8
          cachedAbsX(0),
9000519a:	e9c4 553c 	strd	r5, r5, [r4, #240]	@ 0xf0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000519e:	e9c4 5744 	strd	r5, r7, [r4, #272]	@ 0x110
        : x(0), y(0), width(0), height(0)
900051a2:	e9c4 5548 	strd	r5, r5, [r4, #288]	@ 0x120
900051a6:	e9c4 554a 	strd	r5, r5, [r4, #296]	@ 0x128
          nextSibling(0),
900051aa:	e9c4 554c 	strd	r5, r5, [r4, #304]	@ 0x130
          cachedAbsX(0),
900051ae:	e9c4 554e 	strd	r5, r5, [r4, #312]	@ 0x138
900051b2:	f8c4 9144 	str.w	r9, [r4, #324]	@ 0x144
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900051b6:	f8c4 3152 	str.w	r3, [r4, #338]	@ 0x152
900051ba:	f64f 73ff 	movw	r3, #65535	@ 0xffff
        : color(col)
900051be:	f8c4 514c 	str.w	r5, [r4, #332]	@ 0x14c
900051c2:	f8a4 3148 	strh.w	r3, [r4, #328]	@ 0x148
        : pobject(pObject), pmemfun(pmemfun_1)
900051c6:	4b46      	ldr	r3, [pc, #280]	@ (900052e0 <_ZN33PongPlayerSelectionScreenViewBaseC1Ev+0x21c>)
900051c8:	f8a4 5150 	strh.w	r5, [r4, #336]	@ 0x150
900051cc:	f8c4 3164 	str.w	r3, [r4, #356]	@ 0x164
900051d0:	4b44      	ldr	r3, [pc, #272]	@ (900052e4 <_ZN33PongPlayerSelectionScreenViewBaseC1Ev+0x220>)
              text(0)
900051d2:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160
900051d6:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
        rect.x = x;
900051da:	4b43      	ldr	r3, [pc, #268]	@ (900052e8 <_ZN33PongPlayerSelectionScreenViewBaseC1Ev+0x224>)
900051dc:	f8c4 4168 	str.w	r4, [r4, #360]	@ 0x168
900051e0:	64a3      	str	r3, [r4, #72]	@ 0x48
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
900051e2:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
900051e6:	f8c4 5170 	str.w	r5, [r4, #368]	@ 0x170
900051ea:	66a3      	str	r3, [r4, #104]	@ 0x68
900051ec:	6465      	str	r5, [r4, #68]	@ 0x44
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900051ee:	e9c4 5756 	strd	r5, r7, [r4, #344]	@ 0x158
900051f2:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
900051f6:	f00b f8bb 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900051fa:	4b3c      	ldr	r3, [pc, #240]	@ (900052ec <_ZN33PongPlayerSelectionScreenViewBaseC1Ev+0x228>)
    onePlayerButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
900051fc:	aa06      	add	r2, sp, #24
900051fe:	a905      	add	r1, sp, #20
90005200:	6723      	str	r3, [r4, #112]	@ 0x70
90005202:	4630      	mov	r0, r6
90005204:	f8ad b018 	strh.w	fp, [sp, #24]
90005208:	f8ad 5014 	strh.w	r5, [sp, #20]
9000520c:	f00e ff1e 	bl	9001404c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
90005210:	4631      	mov	r1, r6
90005212:	4640      	mov	r0, r8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
90005214:	f8c4 a094 	str.w	sl, [r4, #148]	@ 0x94
    buttonCallback(this, &PongPlayerSelectionScreenViewBase::buttonCallbackHandler)
90005218:	f104 06a0 	add.w	r6, r4, #160	@ 0xa0
9000521c:	f00b f8a8 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005220:	4b33      	ldr	r3, [pc, #204]	@ (900052f0 <_ZN33PongPlayerSelectionScreenViewBaseC1Ev+0x22c>)
    twoPlayerButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
90005222:	aa06      	add	r2, sp, #24
90005224:	a905      	add	r1, sp, #20
90005226:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
9000522a:	4630      	mov	r0, r6
9000522c:	f8ad b018 	strh.w	fp, [sp, #24]
    buttonCallback(this, &PongPlayerSelectionScreenViewBase::buttonCallbackHandler)
90005230:	f104 0bd4 	add.w	fp, r4, #212	@ 0xd4
90005234:	f8ad 5014 	strh.w	r5, [sp, #20]
    twoPlayerButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
90005238:	f00e ff08 	bl	9001404c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
9000523c:	4631      	mov	r1, r6
9000523e:	4640      	mov	r0, r8
90005240:	f8c4 a0c8 	str.w	sl, [r4, #200]	@ 0xc8
        boundingArea = calculateBoundingArea();
90005244:	466e      	mov	r6, sp
90005246:	f00b f893 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000524a:	4b2a      	ldr	r3, [pc, #168]	@ (900052f4 <_ZN33PongPlayerSelectionScreenViewBaseC1Ev+0x230>)
9000524c:	4659      	mov	r1, fp
9000524e:	4630      	mov	r0, r6
90005250:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
    buttonCallback(this, &PongPlayerSelectionScreenViewBase::buttonCallbackHandler)
90005254:	f504 7a8e 	add.w	sl, r4, #284	@ 0x11c
        color = newColor;
90005258:	f8c4 7104 	str.w	r7, [r4, #260]	@ 0x104
        linespace = space;
9000525c:	f8a4 5108 	strh.w	r5, [r4, #264]	@ 0x108
        boundingArea = calculateBoundingArea();
90005260:	f00e fbee 	bl	90013a40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005264:	2209      	movs	r2, #9
90005266:	f504 7388 	add.w	r3, r4, #272	@ 0x110
9000526a:	f8cd 9018 	str.w	r9, [sp, #24]
9000526e:	f8ad 201c 	strh.w	r2, [sp, #28]
90005272:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90005276:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    onePlayerTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FREN));
9000527a:	a906      	add	r1, sp, #24
9000527c:	4658      	mov	r0, fp
9000527e:	f00e fe87 	bl	90013f90 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005282:	4659      	mov	r1, fp
90005284:	4640      	mov	r0, r8
90005286:	f00b f873 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000528a:	4b1b      	ldr	r3, [pc, #108]	@ (900052f8 <_ZN33PongPlayerSelectionScreenViewBaseC1Ev+0x234>)
9000528c:	4651      	mov	r1, sl
9000528e:	4630      	mov	r0, r6
90005290:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
        color = newColor;
90005294:	f8c4 714c 	str.w	r7, [r4, #332]	@ 0x14c
        linespace = space;
90005298:	f8a4 5150 	strh.w	r5, [r4, #336]	@ 0x150
        boundingArea = calculateBoundingArea();
9000529c:	f00e fbd0 	bl	90013a40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900052a0:	2208      	movs	r2, #8
900052a2:	f504 73ac 	add.w	r3, r4, #344	@ 0x158
900052a6:	f8cd 9018 	str.w	r9, [sp, #24]
900052aa:	f8ad 201c 	strh.w	r2, [sp, #28]
900052ae:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
900052b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    twoPlayerTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3MOU));
900052b6:	a906      	add	r1, sp, #24
900052b8:	4650      	mov	r0, sl
900052ba:	f00e fe69 	bl	90013f90 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900052be:	4640      	mov	r0, r8
900052c0:	4651      	mov	r1, sl
900052c2:	f00b f855 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900052c6:	4620      	mov	r0, r4
900052c8:	b009      	add	sp, #36	@ 0x24
900052ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900052ce:	bf00      	nop
900052d0:	9002ccd8 	.word	0x9002ccd8
900052d4:	9002daec 	.word	0x9002daec
900052d8:	9002db54 	.word	0x9002db54
900052dc:	9002da5c 	.word	0x9002da5c
900052e0:	9002ccc0 	.word	0x9002ccc0
900052e4:	90005071 	.word	0x90005071
900052e8:	011001e0 	.word	0x011001e0
900052ec:	00440078 	.word	0x00440078
900052f0:	00b80078 	.word	0x00b80078
900052f4:	0014009e 	.word	0x0014009e
900052f8:	0088009e 	.word	0x0088009e
900052fc:	9002c514 	.word	0x9002c514

90005300 <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
90005300:	4770      	bx	lr
90005302:	bf00      	nop

90005304 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
90005304:	4770      	bx	lr
90005306:	bf00      	nop

90005308 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005308:	4770      	bx	lr
9000530a:	bf00      	nop

9000530c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
9000530c:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
9000530e:	68c3      	ldr	r3, [r0, #12]
90005310:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90005314:	f013 0f01 	tst.w	r3, #1
90005318:	eb04 0063 	add.w	r0, r4, r3, asr #1
9000531c:	d004      	beq.n	90005328 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
9000531e:	ea4f 0c63 	mov.w	ip, r3, asr #1
90005322:	f854 300c 	ldr.w	r3, [r4, ip]
90005326:	589a      	ldr	r2, [r3, r2]
    }
90005328:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
9000532c:	4710      	bx	r2
9000532e:	bf00      	nop

90005330 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005330:	6843      	ldr	r3, [r0, #4]
90005332:	b13b      	cbz	r3, 90005344 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90005334:	6883      	ldr	r3, [r0, #8]
90005336:	b10b      	cbz	r3, 9000533c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90005338:	2001      	movs	r0, #1
    }
9000533a:	4770      	bx	lr
9000533c:	68c0      	ldr	r0, [r0, #12]
9000533e:	f000 0001 	and.w	r0, r0, #1
90005342:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005344:	4618      	mov	r0, r3
90005346:	4770      	bx	lr

90005348 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005348:	b510      	push	{r4, lr}
9000534a:	4604      	mov	r4, r0
9000534c:	2110      	movs	r1, #16
9000534e:	f024 f88d 	bl	9002946c <_ZdlPvj>
90005352:	4620      	mov	r0, r4
90005354:	bd10      	pop	{r4, pc}
90005356:	bf00      	nop

90005358 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
90005358:	b510      	push	{r4, lr}
9000535a:	4604      	mov	r4, r0
}
9000535c:	f44f 7186 	mov.w	r1, #268	@ 0x10c
90005360:	f024 f884 	bl	9002946c <_ZdlPvj>
90005364:	4620      	mov	r0, r4
90005366:	bd10      	pop	{r4, pc}

90005368 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &enterPongButton)
90005368:	30b4      	adds	r0, #180	@ 0xb4
9000536a:	4288      	cmp	r0, r1
9000536c:	d000      	beq.n	90005370 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x8>
9000536e:	4770      	bx	lr
{
90005370:	b508      	push	{r3, lr}
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005372:	f011 fc17 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
        //enterProgramInteraction
        //When enterPongButton clicked change screen to PongPlayerSelectionScreen
        //Go to PongPlayerSelectionScreen with no screen transition
        application().gotoPongPlayerSelectionScreenScreenNoTransition();
    }
}
90005376:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoPongPlayerSelectionScreenScreenNoTransition();
9000537a:	f7ff bd97 	b.w	90004eac <_ZN23FrontendApplicationBase47gotoPongPlayerSelectionScreenScreenNoTransitionEv>
9000537e:	bf00      	nop

90005380 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
90005380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90005384:	b088      	sub	sp, #32
90005386:	4604      	mov	r4, r0
90005388:	f013 fadc 	bl	90018944 <_ZN8touchgfx6ScreenC1Ev>
          touchable(false),
9000538c:	f44f 7380 	mov.w	r3, #256	@ 0x100
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
90005390:	4962      	ldr	r1, [pc, #392]	@ (9000551c <_ZN15Screen1ViewBaseC1Ev+0x19c>)
90005392:	2500      	movs	r5, #0
90005394:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
        : Widget(), alpha(255), color(0)
90005398:	22ff      	movs	r2, #255	@ 0xff
9000539a:	f8a4 3090 	strh.w	r3, [r4, #144]	@ 0x90
9000539e:	f04f 38ff 	mov.w	r8, #4294967295
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900053a2:	4b5f      	ldr	r3, [pc, #380]	@ (90005520 <_ZN15Screen1ViewBaseC1Ev+0x1a0>)
900053a4:	f104 07b4 	add.w	r7, r4, #180	@ 0xb4
900053a8:	f8df a1b0 	ldr.w	sl, [pc, #432]	@ 9000555c <_ZN15Screen1ViewBaseC1Ev+0x1dc>
900053ac:	1d26      	adds	r6, r4, #4
900053ae:	6021      	str	r1, [r4, #0]
900053b0:	4638      	mov	r0, r7
900053b2:	495c      	ldr	r1, [pc, #368]	@ (90005524 <_ZN15Screen1ViewBaseC1Ev+0x1a4>)
900053b4:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
900053b8:	66e3      	str	r3, [r4, #108]	@ 0x6c
900053ba:	f64f 73ff 	movw	r3, #65535	@ 0xffff
900053be:	f884 2066 	strb.w	r2, [r4, #102]	@ 0x66
900053c2:	f8c4 20a2 	str.w	r2, [r4, #162]	@ 0xa2
900053c6:	6421      	str	r1, [r4, #64]	@ 0x40
900053c8:	f8c4 a094 	str.w	sl, [r4, #148]	@ 0x94
900053cc:	f8a4 3098 	strh.w	r3, [r4, #152]	@ 0x98
900053d0:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
900053d2:	66a5      	str	r5, [r4, #104]	@ 0x68
900053d4:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
900053d8:	f8a4 50a0 	strh.w	r5, [r4, #160]	@ 0xa0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900053dc:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
              text(0)
900053e0:	e9c4 852b 	strd	r8, r5, [r4, #172]	@ 0xac
        : x(0), y(0), width(0), height(0)
900053e4:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
900053e8:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
900053ec:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
900053f0:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
900053f4:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
900053f8:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
900053fc:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
90005400:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
90005404:	f00f f81e 	bl	90014444 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
90005408:	4b47      	ldr	r3, [pc, #284]	@ (90005528 <_ZN15Screen1ViewBaseC1Ev+0x1a8>)
9000540a:	f104 0140 	add.w	r1, r4, #64	@ 0x40
9000540e:	4630      	mov	r0, r6
90005410:	f8c4 30fc 	str.w	r3, [r4, #252]	@ 0xfc
90005414:	4b45      	ldr	r3, [pc, #276]	@ (9000552c <_ZN15Screen1ViewBaseC1Ev+0x1ac>)
90005416:	f8c4 4100 	str.w	r4, [r4, #256]	@ 0x100
9000541a:	f8c4 3104 	str.w	r3, [r4, #260]	@ 0x104
        rect.x = x;
9000541e:	4b44      	ldr	r3, [pc, #272]	@ (90005530 <_ZN15Screen1ViewBaseC1Ev+0x1b0>)
90005420:	f8c4 5108 	str.w	r5, [r4, #264]	@ 0x108
90005424:	64a3      	str	r3, [r4, #72]	@ 0x48
        color = newColor;
90005426:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
9000542a:	6465      	str	r5, [r4, #68]	@ 0x44
9000542c:	66a3      	str	r3, [r4, #104]	@ 0x68
9000542e:	f00a ff9f 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005432:	4b40      	ldr	r3, [pc, #256]	@ (90005534 <_ZN15Screen1ViewBaseC1Ev+0x1b4>)
        color = newColor;
90005434:	f8c4 809c 	str.w	r8, [r4, #156]	@ 0x9c
        boundingArea = calculateBoundingArea();
90005438:	46e8      	mov	r8, sp
9000543a:	4649      	mov	r1, r9
9000543c:	6723      	str	r3, [r4, #112]	@ 0x70
9000543e:	4640      	mov	r0, r8
        linespace = space;
90005440:	f8a4 50a0 	strh.w	r5, [r4, #160]	@ 0xa0
        boundingArea = calculateBoundingArea();
90005444:	f00e fafc 	bl	90013a40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005448:	f8cd a018 	str.w	sl, [sp, #24]
9000544c:	f04f 0a01 	mov.w	sl, #1
90005450:	f104 03a8 	add.w	r3, r4, #168	@ 0xa8
90005454:	f8ad a01c 	strh.w	sl, [sp, #28]
90005458:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
9000545c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UF9Q));
90005460:	a906      	add	r1, sp, #24
90005462:	4648      	mov	r0, r9
90005464:	f00e fd94 	bl	90013f90 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005468:	4649      	mov	r1, r9
9000546a:	4630      	mov	r0, r6
9000546c:	f00a ff80 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005470:	4b31      	ldr	r3, [pc, #196]	@ (90005538 <_ZN15Screen1ViewBaseC1Ev+0x1b8>)
    enterPongButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
90005472:	aa06      	add	r2, sp, #24
90005474:	a905      	add	r1, sp, #20
90005476:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
9000547a:	4638      	mov	r0, r7
9000547c:	f8ad a018 	strh.w	sl, [sp, #24]
90005480:	f8ad 5014 	strh.w	r5, [sp, #20]
90005484:	f00e fde2 	bl	9001404c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        return typedTextId < numberOfTypedTexts;
90005488:	4b2c      	ldr	r3, [pc, #176]	@ (9000553c <_ZN15Screen1ViewBaseC1Ev+0x1bc>)
class TypedText
9000548a:	f8a4 50ec 	strh.w	r5, [r4, #236]	@ 0xec
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
9000548e:	881b      	ldrh	r3, [r3, #0]
90005490:	b32b      	cbz	r3, 900054de <_ZN15Screen1ViewBaseC1Ev+0x15e>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005492:	4b2b      	ldr	r3, [pc, #172]	@ (90005540 <_ZN15Screen1ViewBaseC1Ev+0x1c0>)
90005494:	681b      	ldr	r3, [r3, #0]
90005496:	2b00      	cmp	r3, #0
90005498:	d039      	beq.n	9000550e <_ZN15Screen1ViewBaseC1Ev+0x18e>
        return fonts[typedTexts[typedTextId].fontIdx];
9000549a:	781a      	ldrb	r2, [r3, #0]
        return texts->getText(typedTextId);
9000549c:	4629      	mov	r1, r5
        return fonts[typedTexts[typedTextId].fontIdx];
9000549e:	4b29      	ldr	r3, [pc, #164]	@ (90005544 <_ZN15Screen1ViewBaseC1Ev+0x1c4>)
900054a0:	681b      	ldr	r3, [r3, #0]
900054a2:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
900054a6:	4b28      	ldr	r3, [pc, #160]	@ (90005548 <_ZN15Screen1ViewBaseC1Ev+0x1c8>)
900054a8:	6818      	ldr	r0, [r3, #0]
900054aa:	f000 f9df 	bl	9000586c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900054ae:	f8d8 3000 	ldr.w	r3, [r8]
900054b2:	4926      	ldr	r1, [pc, #152]	@ (9000554c <_ZN15Screen1ViewBaseC1Ev+0x1cc>)
900054b4:	4681      	mov	r9, r0
900054b6:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900054b8:	428a      	cmp	r2, r1
900054ba:	d122      	bne.n	90005502 <_ZN15Screen1ViewBaseC1Ev+0x182>
        return fontHeight;
900054bc:	f8b8 5004 	ldrh.w	r5, [r8, #4]
900054c0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900054c2:	4649      	mov	r1, r9
900054c4:	4640      	mov	r0, r8
900054c6:	4798      	blx	r3
900054c8:	fb15 f500 	smulbb	r5, r5, r0
900054cc:	f8d8 3000 	ldr.w	r3, [r8]
900054d0:	4649      	mov	r1, r9
900054d2:	b2ad      	uxth	r5, r5
900054d4:	4640      	mov	r0, r8
900054d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900054d8:	4798      	blx	r3
900054da:	4428      	add	r0, r5
900054dc:	b203      	sxth	r3, r0
        color = col;
900054de:	f04f 32ff 	mov.w	r2, #4294967295
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900054e2:	f8a4 30fa 	strh.w	r3, [r4, #250]	@ 0xfa
    enterPongButton.setAction(buttonCallback);
900054e6:	f104 03fc 	add.w	r3, r4, #252	@ 0xfc
900054ea:	4630      	mov	r0, r6
900054ec:	4639      	mov	r1, r7
900054ee:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
        colorPressed = col;
900054f2:	e9c4 223c 	strd	r2, r2, [r4, #240]	@ 0xf0
900054f6:	f00a ff3b 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900054fa:	4620      	mov	r0, r4
900054fc:	b008      	add	sp, #32
900054fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005502:	4640      	mov	r0, r8
90005504:	4790      	blx	r2
90005506:	f8d8 3000 	ldr.w	r3, [r8]
9000550a:	4605      	mov	r5, r0
9000550c:	e7d8      	b.n	900054c0 <_ZN15Screen1ViewBaseC1Ev+0x140>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000550e:	4b10      	ldr	r3, [pc, #64]	@ (90005550 <_ZN15Screen1ViewBaseC1Ev+0x1d0>)
90005510:	216c      	movs	r1, #108	@ 0x6c
90005512:	4a10      	ldr	r2, [pc, #64]	@ (90005554 <_ZN15Screen1ViewBaseC1Ev+0x1d4>)
90005514:	4810      	ldr	r0, [pc, #64]	@ (90005558 <_ZN15Screen1ViewBaseC1Ev+0x1d8>)
90005516:	f024 fb1f 	bl	90029b58 <__assert_func>
9000551a:	bf00      	nop
9000551c:	9002cdf4 	.word	0x9002cdf4
90005520:	9002da5c 	.word	0x9002da5c
90005524:	9002daec 	.word	0x9002daec
90005528:	9002cddc 	.word	0x9002cddc
9000552c:	90005369 	.word	0x90005369
90005530:	011001e0 	.word	0x011001e0
90005534:	005800ae 	.word	0x005800ae
90005538:	00880078 	.word	0x00880078
9000553c:	24023430 	.word	0x24023430
90005540:	2402342c 	.word	0x2402342c
90005544:	24023434 	.word	0x24023434
90005548:	24023438 	.word	0x24023438
9000554c:	90004449 	.word	0x90004449
90005550:	9002cd0c 	.word	0x9002cd0c
90005554:	9002cd50 	.word	0x9002cd50
90005558:	9002cd8c 	.word	0x9002cd8c
9000555c:	9002c514 	.word	0x9002c514

90005560 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005560:	4770      	bx	lr
90005562:	bf00      	nop

90005564 <_Z23getFont_verdana_10_4bppv>:
{
90005564:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005566:	4d18      	ldr	r5, [pc, #96]	@ (900055c8 <_Z23getFont_verdana_10_4bppv+0x64>)
{
90005568:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000556a:	682c      	ldr	r4, [r5, #0]
9000556c:	f3bf 8f5b 	dmb	ish
90005570:	f014 0401 	ands.w	r4, r4, #1
90005574:	d002      	beq.n	9000557c <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90005576:	4815      	ldr	r0, [pc, #84]	@ (900055cc <_Z23getFont_verdana_10_4bppv+0x68>)
90005578:	b00f      	add	sp, #60	@ 0x3c
9000557a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000557c:	4628      	mov	r0, r5
9000557e:	f023 ff77 	bl	90029470 <__cxa_guard_acquire>
90005582:	2800      	cmp	r0, #0
90005584:	d0f7      	beq.n	90005576 <_Z23getFont_verdana_10_4bppv+0x12>
90005586:	213f      	movs	r1, #63	@ 0x3f
90005588:	2201      	movs	r2, #1
9000558a:	230a      	movs	r3, #10
9000558c:	2004      	movs	r0, #4
9000558e:	9204      	str	r2, [sp, #16]
90005590:	9300      	str	r3, [sp, #0]
90005592:	9003      	str	r0, [sp, #12]
90005594:	480d      	ldr	r0, [pc, #52]	@ (900055cc <_Z23getFont_verdana_10_4bppv+0x68>)
90005596:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
9000559a:	490d      	ldr	r1, [pc, #52]	@ (900055d0 <_Z23getFont_verdana_10_4bppv+0x6c>)
9000559c:	9108      	str	r1, [sp, #32]
9000559e:	490d      	ldr	r1, [pc, #52]	@ (900055d4 <_Z23getFont_verdana_10_4bppv+0x70>)
900055a0:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
900055a4:	9107      	str	r1, [sp, #28]
900055a6:	490c      	ldr	r1, [pc, #48]	@ (900055d8 <_Z23getFont_verdana_10_4bppv+0x74>)
900055a8:	e9cd 4405 	strd	r4, r4, [sp, #20]
900055ac:	e9cd 4401 	strd	r4, r4, [sp, #4]
900055b0:	f7ff fcee 	bl	90004f90 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900055b4:	4809      	ldr	r0, [pc, #36]	@ (900055dc <_Z23getFont_verdana_10_4bppv+0x78>)
900055b6:	f024 faed 	bl	90029b94 <atexit>
900055ba:	4628      	mov	r0, r5
900055bc:	f023 ff64 	bl	90029488 <__cxa_guard_release>
}
900055c0:	4802      	ldr	r0, [pc, #8]	@ (900055cc <_Z23getFont_verdana_10_4bppv+0x68>)
900055c2:	b00f      	add	sp, #60	@ 0x3c
900055c4:	bd30      	pop	{r4, r5, pc}
900055c6:	bf00      	nop
900055c8:	240092d8 	.word	0x240092d8
900055cc:	240092dc 	.word	0x240092dc
900055d0:	9002e27c 	.word	0x9002e27c
900055d4:	9002e568 	.word	0x9002e568
900055d8:	90206c70 	.word	0x90206c70
900055dc:	90005561 	.word	0x90005561

900055e0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 6, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900055e0:	4770      	bx	lr
900055e2:	bf00      	nop

900055e4 <_Z23getFont_verdana_20_4bppv>:
{
900055e4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 6, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900055e6:	4d18      	ldr	r5, [pc, #96]	@ (90005648 <_Z23getFont_verdana_20_4bppv+0x64>)
{
900055e8:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 6, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900055ea:	682c      	ldr	r4, [r5, #0]
900055ec:	f3bf 8f5b 	dmb	ish
900055f0:	f014 0401 	ands.w	r4, r4, #1
900055f4:	d002      	beq.n	900055fc <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
900055f6:	4815      	ldr	r0, [pc, #84]	@ (9000564c <_Z23getFont_verdana_20_4bppv+0x68>)
900055f8:	b00f      	add	sp, #60	@ 0x3c
900055fa:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 6, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900055fc:	4628      	mov	r0, r5
900055fe:	f023 ff37 	bl	90029470 <__cxa_guard_acquire>
90005602:	2800      	cmp	r0, #0
90005604:	d0f7      	beq.n	900055f6 <_Z23getFont_verdana_20_4bppv+0x12>
90005606:	4a12      	ldr	r2, [pc, #72]	@ (90005650 <_Z23getFont_verdana_20_4bppv+0x6c>)
90005608:	213f      	movs	r1, #63	@ 0x3f
9000560a:	2314      	movs	r3, #20
9000560c:	480f      	ldr	r0, [pc, #60]	@ (9000564c <_Z23getFont_verdana_20_4bppv+0x68>)
9000560e:	9208      	str	r2, [sp, #32]
90005610:	2201      	movs	r2, #1
90005612:	9300      	str	r3, [sp, #0]
90005614:	9204      	str	r2, [sp, #16]
90005616:	2204      	movs	r2, #4
90005618:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
9000561c:	490d      	ldr	r1, [pc, #52]	@ (90005654 <_Z23getFont_verdana_20_4bppv+0x70>)
9000561e:	9203      	str	r2, [sp, #12]
90005620:	2206      	movs	r2, #6
90005622:	9107      	str	r1, [sp, #28]
90005624:	490c      	ldr	r1, [pc, #48]	@ (90005658 <_Z23getFont_verdana_20_4bppv+0x74>)
90005626:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
9000562a:	e9cd 4405 	strd	r4, r4, [sp, #20]
9000562e:	e9cd 4401 	strd	r4, r4, [sp, #4]
90005632:	f7ff fcad 	bl	90004f90 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005636:	4809      	ldr	r0, [pc, #36]	@ (9000565c <_Z23getFont_verdana_20_4bppv+0x78>)
90005638:	f024 faac 	bl	90029b94 <atexit>
9000563c:	4628      	mov	r0, r5
9000563e:	f023 ff23 	bl	90029488 <__cxa_guard_release>
}
90005642:	4802      	ldr	r0, [pc, #8]	@ (9000564c <_Z23getFont_verdana_20_4bppv+0x68>)
90005644:	b00f      	add	sp, #60	@ 0x3c
90005646:	bd30      	pop	{r4, r5, pc}
90005648:	24009308 	.word	0x24009308
9000564c:	2400930c 	.word	0x2400930c
90005650:	9002e280 	.word	0x9002e280
90005654:	9002e56c 	.word	0x9002e56c
90005658:	90206c80 	.word	0x90206c80
9000565c:	900055e1 	.word	0x900055e1

90005660 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 95, 48, 40, 0, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005660:	4770      	bx	lr
90005662:	bf00      	nop

90005664 <_Z23getFont_verdana_40_4bppv>:
{
90005664:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 95, 48, 40, 0, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005666:	4d19      	ldr	r5, [pc, #100]	@ (900056cc <_Z23getFont_verdana_40_4bppv+0x68>)
{
90005668:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 95, 48, 40, 0, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000566a:	682c      	ldr	r4, [r5, #0]
9000566c:	f3bf 8f5b 	dmb	ish
90005670:	f014 0401 	ands.w	r4, r4, #1
90005674:	d002      	beq.n	9000567c <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
90005676:	4816      	ldr	r0, [pc, #88]	@ (900056d0 <_Z23getFont_verdana_40_4bppv+0x6c>)
90005678:	b00f      	add	sp, #60	@ 0x3c
9000567a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 95, 48, 40, 0, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000567c:	4628      	mov	r0, r5
9000567e:	f023 fef7 	bl	90029470 <__cxa_guard_acquire>
90005682:	2800      	cmp	r0, #0
90005684:	d0f7      	beq.n	90005676 <_Z23getFont_verdana_40_4bppv+0x12>
90005686:	4a13      	ldr	r2, [pc, #76]	@ (900056d4 <_Z23getFont_verdana_40_4bppv+0x70>)
90005688:	213f      	movs	r1, #63	@ 0x3f
9000568a:	2302      	movs	r3, #2
9000568c:	2028      	movs	r0, #40	@ 0x28
9000568e:	9208      	str	r2, [sp, #32]
90005690:	2201      	movs	r2, #1
90005692:	9000      	str	r0, [sp, #0]
90005694:	9204      	str	r2, [sp, #16]
90005696:	2204      	movs	r2, #4
90005698:	9401      	str	r4, [sp, #4]
9000569a:	480d      	ldr	r0, [pc, #52]	@ (900056d0 <_Z23getFont_verdana_40_4bppv+0x6c>)
9000569c:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
900056a0:	490d      	ldr	r1, [pc, #52]	@ (900056d8 <_Z23getFont_verdana_40_4bppv+0x74>)
900056a2:	e9cd 3305 	strd	r3, r3, [sp, #20]
900056a6:	9107      	str	r1, [sp, #28]
900056a8:	2330      	movs	r3, #48	@ 0x30
900056aa:	490c      	ldr	r1, [pc, #48]	@ (900056dc <_Z23getFont_verdana_40_4bppv+0x78>)
900056ac:	e9cd 4202 	strd	r4, r2, [sp, #8]
900056b0:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
900056b4:	225f      	movs	r2, #95	@ 0x5f
900056b6:	f7ff fc6b 	bl	90004f90 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900056ba:	4809      	ldr	r0, [pc, #36]	@ (900056e0 <_Z23getFont_verdana_40_4bppv+0x7c>)
900056bc:	f024 fa6a 	bl	90029b94 <atexit>
900056c0:	4628      	mov	r0, r5
900056c2:	f023 fee1 	bl	90029488 <__cxa_guard_release>
}
900056c6:	4802      	ldr	r0, [pc, #8]	@ (900056d0 <_Z23getFont_verdana_40_4bppv+0x6c>)
900056c8:	b00f      	add	sp, #60	@ 0x3c
900056ca:	bd30      	pop	{r4, r5, pc}
900056cc:	24009338 	.word	0x24009338
900056d0:	2400933c 	.word	0x2400933c
900056d4:	9002e284 	.word	0x9002e284
900056d8:	9002e570 	.word	0x9002e570
900056dc:	90206cd4 	.word	0x90206cd4
900056e0:	90005661 	.word	0x90005661

900056e4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
900056e4:	2000      	movs	r0, #0
900056e6:	4770      	bx	lr

900056e8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
900056e8:	2000      	movs	r0, #0
900056ea:	4770      	bx	lr

900056ec <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900056ec:	b40e      	push	{r1, r2, r3}
900056ee:	b500      	push	{lr}
900056f0:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900056f2:	2100      	movs	r1, #0
{
900056f4:	ab03      	add	r3, sp, #12
900056f6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
900056fa:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900056fc:	f012 f9a0 	bl	90017a40 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90005700:	b002      	add	sp, #8
90005702:	f85d eb04 	ldr.w	lr, [sp], #4
90005706:	b003      	add	sp, #12
90005708:	4770      	bx	lr
9000570a:	bf00      	nop

9000570c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
9000570c:	b40c      	push	{r2, r3}
9000570e:	b500      	push	{lr}
90005710:	b083      	sub	sp, #12
90005712:	ab04      	add	r3, sp, #16
90005714:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90005718:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
9000571a:	f012 f991 	bl	90017a40 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
9000571e:	b003      	add	sp, #12
90005720:	f85d eb04 	ldr.w	lr, [sp], #4
90005724:	b002      	add	sp, #8
90005726:	4770      	bx	lr

90005728 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90005728:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
9000572a:	b510      	push	{r4, lr}
9000572c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
9000572e:	b133      	cbz	r3, 9000573e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
90005730:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
90005732:	b39b      	cbz	r3, 9000579c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90005734:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90005736:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9000573a:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
9000573c:	b923      	cbnz	r3, 90005748 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
9000573e:	4620      	mov	r0, r4
}
90005740:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90005744:	f013 bedc 	b.w	90019500 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90005748:	f013 ffd8 	bl	900196fc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
9000574c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9000574e:	2b01      	cmp	r3, #1
90005750:	d92a      	bls.n	900057a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
90005752:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90005754:	1c53      	adds	r3, r2, #1
90005756:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90005758:	2b09      	cmp	r3, #9
9000575a:	d812      	bhi.n	90005782 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
9000575c:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90005760:	f640 103f 	movw	r0, #2367	@ 0x93f
90005764:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
90005766:	4281      	cmp	r1, r0
90005768:	d1e9      	bne.n	9000573e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
9000576a:	eb04 0142 	add.w	r1, r4, r2, lsl #1
9000576e:	0052      	lsls	r2, r2, #1
90005770:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90005772:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90005776:	4422      	add	r2, r4
90005778:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
9000577c:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
9000577e:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
90005780:	e7dd      	b.n	9000573e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90005782:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90005786:	f640 113f 	movw	r1, #2367	@ 0x93f
9000578a:	89db      	ldrh	r3, [r3, #14]
9000578c:	428b      	cmp	r3, r1
9000578e:	d1d6      	bne.n	9000573e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90005790:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90005794:	2300      	movs	r3, #0
90005796:	0052      	lsls	r2, r2, #1
90005798:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
9000579a:	e7ea      	b.n	90005772 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
9000579c:	4b05      	ldr	r3, [pc, #20]	@ (900057b4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
9000579e:	21c5      	movs	r1, #197	@ 0xc5
900057a0:	4a05      	ldr	r2, [pc, #20]	@ (900057b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
900057a2:	4806      	ldr	r0, [pc, #24]	@ (900057bc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900057a4:	f024 f9d8 	bl	90029b58 <__assert_func>
            assert(offset < used);
900057a8:	4b05      	ldr	r3, [pc, #20]	@ (900057c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
900057aa:	21cb      	movs	r1, #203	@ 0xcb
900057ac:	4a05      	ldr	r2, [pc, #20]	@ (900057c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
900057ae:	4803      	ldr	r0, [pc, #12]	@ (900057bc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900057b0:	f024 f9d2 	bl	90029b58 <__assert_func>
900057b4:	9002ce20 	.word	0x9002ce20
900057b8:	9002ce2c 	.word	0x9002ce2c
900057bc:	9002ced8 	.word	0x9002ced8
900057c0:	9002cf24 	.word	0x9002cf24
900057c4:	9002cf34 	.word	0x9002cf34

900057c8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
900057c8:	f013 be63 	b.w	90019492 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900057cc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
900057cc:	b510      	push	{r4, lr}
900057ce:	b086      	sub	sp, #24
900057d0:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
900057d4:	ac0a      	add	r4, sp, #40	@ 0x28
{
900057d6:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900057da:	461a      	mov	r2, r3
900057dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900057de:	4661      	mov	r1, ip
900057e0:	9401      	str	r4, [sp, #4]
900057e2:	9300      	str	r3, [sp, #0]
900057e4:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
900057e6:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900057e8:	f010 fd78 	bl	900162dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
900057ec:	b006      	add	sp, #24
900057ee:	bd10      	pop	{r4, pc}

900057f0 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
900057f0:	b9e0      	cbnz	r0, 9000582c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
900057f2:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
900057f4:	4b13      	ldr	r3, [pc, #76]	@ (90005844 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
900057f6:	681b      	ldr	r3, [r3, #0]
900057f8:	b1cb      	cbz	r3, 9000582e <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900057fa:	4c13      	ldr	r4, [pc, #76]	@ (90005848 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900057fc:	4813      	ldr	r0, [pc, #76]	@ (9000584c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900057fe:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005802:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005804:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005806:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005808:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
9000580a:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
9000580c:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
9000580e:	4b10      	ldr	r3, [pc, #64]	@ (90005850 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90005810:	2200      	movs	r2, #0
90005812:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90005814:	f000 f83a 	bl	9000588c <_ZN17TypedTextDatabase8getFontsEv>
90005818:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
9000581a:	f000 f835 	bl	90005888 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
9000581e:	4b0d      	ldr	r3, [pc, #52]	@ (90005854 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90005820:	4a0d      	ldr	r2, [pc, #52]	@ (90005858 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
90005822:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90005824:	4b0d      	ldr	r3, [pc, #52]	@ (9000585c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90005826:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90005828:	8018      	strh	r0, [r3, #0]
    }
}
9000582a:	bd38      	pop	{r3, r4, r5, pc}
9000582c:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000582e:	4c0c      	ldr	r4, [pc, #48]	@ (90005860 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90005830:	4905      	ldr	r1, [pc, #20]	@ (90005848 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
90005832:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90005834:	480b      	ldr	r0, [pc, #44]	@ (90005864 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90005836:	4b05      	ldr	r3, [pc, #20]	@ (9000584c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005838:	4a0b      	ldr	r2, [pc, #44]	@ (90005868 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
9000583a:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
9000583c:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
9000583e:	2c00      	cmp	r4, #0
90005840:	d1e5      	bne.n	9000580e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90005842:	bd38      	pop	{r3, r4, r5, pc}
90005844:	24009374 	.word	0x24009374
90005848:	2400936c 	.word	0x2400936c
9000584c:	24009368 	.word	0x24009368
90005850:	24009370 	.word	0x24009370
90005854:	2402342c 	.word	0x2402342c
90005858:	24023434 	.word	0x24023434
9000585c:	24023430 	.word	0x24023430
90005860:	902072c4 	.word	0x902072c4
90005864:	90207230 	.word	0x90207230
90005868:	90207208 	.word	0x90207208

9000586c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
9000586c:	4a04      	ldr	r2, [pc, #16]	@ (90005880 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
9000586e:	4b05      	ldr	r3, [pc, #20]	@ (90005884 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90005870:	6812      	ldr	r2, [r2, #0]
90005872:	681b      	ldr	r3, [r3, #0]
90005874:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90005878:	eb03 0040 	add.w	r0, r3, r0, lsl #1
9000587c:	4770      	bx	lr
9000587e:	bf00      	nop
90005880:	24009368 	.word	0x24009368
90005884:	2400936c 	.word	0x2400936c

90005888 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90005888:	200a      	movs	r0, #10
9000588a:	4770      	bx	lr

9000588c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
9000588c:	4800      	ldr	r0, [pc, #0]	@ (90005890 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
9000588e:	4770      	bx	lr
90005890:	24009378 	.word	0x24009378

90005894 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90005894:	b510      	push	{r4, lr}
};
90005896:	4c05      	ldr	r4, [pc, #20]	@ (900058ac <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90005898:	f7ff fea4 	bl	900055e4 <_Z23getFont_verdana_20_4bppv>
};
9000589c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
9000589e:	f7ff fee1 	bl	90005664 <_Z23getFont_verdana_40_4bppv>
};
900058a2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
900058a4:	f7ff fe5e 	bl	90005564 <_Z23getFont_verdana_10_4bppv>
};
900058a8:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
900058aa:	bd10      	pop	{r4, pc}
900058ac:	24009378 	.word	0x24009378

900058b0 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
900058b0:	b410      	push	{r4}
    pointArray = 0;
900058b2:	2400      	movs	r4, #0
900058b4:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
900058b6:	600c      	str	r4, [r1, #0]
    commandArray = 0;
900058b8:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
900058ba:	601c      	str	r4, [r3, #0]
}
900058bc:	f85d 4b04 	ldr.w	r4, [sp], #4
900058c0:	4770      	bx	lr
900058c2:	bf00      	nop

900058c4 <_ZN33difficultySelectionScreenViewBase29normalDifficultyButtonPressedEv>:
     * Virtual Action Handlers
     */
    virtual void normalDifficultyButtonPressed()
    {
        // Override and implement this function in difficultySelectionScreen
    }
900058c4:	4770      	bx	lr
900058c6:	bf00      	nop

900058c8 <_ZN33difficultySelectionScreenViewBase27hardDifficultyButtonPressedEv>:
    virtual void hardDifficultyButtonPressed()
    {
        // Override and implement this function in difficultySelectionScreen
    }
900058c8:	4770      	bx	lr
900058ca:	bf00      	nop

900058cc <_ZN33difficultySelectionScreenViewBaseD1Ev>:
}

difficultySelectionScreenViewBase::~difficultySelectionScreenViewBase()
{

}
900058cc:	4770      	bx	lr
900058ce:	bf00      	nop

900058d0 <_ZN33difficultySelectionScreenViewBase11setupScreenEv>:

void difficultySelectionScreenViewBase::setupScreen()
{

}
900058d0:	4770      	bx	lr
900058d2:	bf00      	nop

900058d4 <_ZN8touchgfx8CallbackI33difficultySelectionScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900058d4:	4770      	bx	lr
900058d6:	bf00      	nop

900058d8 <_ZN8touchgfx8CallbackI33difficultySelectionScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
900058d8:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900058da:	68c3      	ldr	r3, [r0, #12]
900058dc:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
900058e0:	f013 0f01 	tst.w	r3, #1
900058e4:	eb04 0063 	add.w	r0, r4, r3, asr #1
900058e8:	d004      	beq.n	900058f4 <_ZN8touchgfx8CallbackI33difficultySelectionScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
900058ea:	ea4f 0c63 	mov.w	ip, r3, asr #1
900058ee:	f854 300c 	ldr.w	r3, [r4, ip]
900058f2:	589a      	ldr	r2, [r3, r2]
    }
900058f4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900058f8:	4710      	bx	r2
900058fa:	bf00      	nop

900058fc <_ZNK8touchgfx8CallbackI33difficultySelectionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900058fc:	6843      	ldr	r3, [r0, #4]
900058fe:	b13b      	cbz	r3, 90005910 <_ZNK8touchgfx8CallbackI33difficultySelectionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90005900:	6883      	ldr	r3, [r0, #8]
90005902:	b10b      	cbz	r3, 90005908 <_ZNK8touchgfx8CallbackI33difficultySelectionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90005904:	2001      	movs	r0, #1
    }
90005906:	4770      	bx	lr
90005908:	68c0      	ldr	r0, [r0, #12]
9000590a:	f000 0001 	and.w	r0, r0, #1
9000590e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005910:	4618      	mov	r0, r3
90005912:	4770      	bx	lr

90005914 <_ZN8touchgfx8CallbackI33difficultySelectionScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005914:	b510      	push	{r4, lr}
90005916:	4604      	mov	r4, r0
90005918:	2110      	movs	r1, #16
9000591a:	f023 fda7 	bl	9002946c <_ZdlPvj>
9000591e:	4620      	mov	r0, r4
90005920:	bd10      	pop	{r4, pc}
90005922:	bf00      	nop

90005924 <_ZN33difficultySelectionScreenViewBaseD0Ev>:
difficultySelectionScreenViewBase::~difficultySelectionScreenViewBase()
90005924:	b510      	push	{r4, lr}
90005926:	4604      	mov	r4, r0
}
90005928:	f44f 7186 	mov.w	r1, #268	@ 0x10c
9000592c:	f023 fd9e 	bl	9002946c <_ZdlPvj>
90005930:	4620      	mov	r0, r4
90005932:	bd10      	pop	{r4, pc}

90005934 <_ZN33difficultySelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void difficultySelectionScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &normalDifficultyButton)
90005934:	f100 036c 	add.w	r3, r0, #108	@ 0x6c
90005938:	4299      	cmp	r1, r3
{
9000593a:	b570      	push	{r4, r5, r6, lr}
9000593c:	4604      	mov	r4, r0
9000593e:	460d      	mov	r5, r1
    if (&src == &normalDifficultyButton)
90005940:	d011      	beq.n	90005966 <_ZN33difficultySelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x32>
        //changeToNormalDifficulty
        //When normalDifficultyButton clicked call virtual function
        //Call normalDifficultyButtonPressed
        normalDifficultyButtonPressed();
    }
    if (&src == &hardDifficultyButton)
90005942:	f104 03b4 	add.w	r3, r4, #180	@ 0xb4
90005946:	429d      	cmp	r5, r3
90005948:	d000      	beq.n	9000594c <_ZN33difficultySelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
        //changeToHardDifficulty
        //When hardDifficultyButton clicked call virtual function
        //Call hardDifficultyButtonPressed
        hardDifficultyButtonPressed();
    }
}
9000594a:	bd70      	pop	{r4, r5, r6, pc}

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
9000594c:	f011 f92a 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotopongGameScreenScreenNoTransition();
90005950:	f7ff fac8 	bl	90004ee4 <_ZN23FrontendApplicationBase36gotopongGameScreenScreenNoTransitionEv>
        hardDifficultyButtonPressed();
90005954:	6823      	ldr	r3, [r4, #0]
90005956:	4a0a      	ldr	r2, [pc, #40]	@ (90005980 <_ZN33difficultySelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4c>)
90005958:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000595a:	4293      	cmp	r3, r2
9000595c:	d0f5      	beq.n	9000594a <_ZN33difficultySelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
9000595e:	4620      	mov	r0, r4
}
90005960:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        hardDifficultyButtonPressed();
90005964:	4718      	bx	r3
90005966:	f011 f91d 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotopongGameScreenScreenNoTransition();
9000596a:	f7ff fabb 	bl	90004ee4 <_ZN23FrontendApplicationBase36gotopongGameScreenScreenNoTransitionEv>
        normalDifficultyButtonPressed();
9000596e:	6823      	ldr	r3, [r4, #0]
90005970:	4a04      	ldr	r2, [pc, #16]	@ (90005984 <_ZN33difficultySelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x50>)
90005972:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90005974:	4293      	cmp	r3, r2
90005976:	d0e4      	beq.n	90005942 <_ZN33difficultySelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
90005978:	4620      	mov	r0, r4
9000597a:	4798      	blx	r3
9000597c:	e7e1      	b.n	90005942 <_ZN33difficultySelectionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
9000597e:	bf00      	nop
90005980:	900058c9 	.word	0x900058c9
90005984:	900058c5 	.word	0x900058c5

90005988 <_ZN33difficultySelectionScreenViewBaseC1Ev>:
difficultySelectionScreenViewBase::difficultySelectionScreenViewBase() :
90005988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000598c:	b083      	sub	sp, #12
9000598e:	4604      	mov	r4, r0
90005990:	f012 ffd8 	bl	90018944 <_ZN8touchgfx6ScreenC1Ev>
          touchable(false),
90005994:	f44f 7380 	mov.w	r3, #256	@ 0x100
90005998:	2500      	movs	r5, #0
    buttonCallback(this, &difficultySelectionScreenViewBase::buttonCallbackHandler)
9000599a:	4a6c      	ldr	r2, [pc, #432]	@ (90005b4c <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1c4>)
        : Widget(), alpha(255), color(0)
9000599c:	496c      	ldr	r1, [pc, #432]	@ (90005b50 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1c8>)
9000599e:	f104 066c 	add.w	r6, r4, #108	@ 0x6c
900059a2:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
900059a6:	23ff      	movs	r3, #255	@ 0xff
900059a8:	f104 08b4 	add.w	r8, r4, #180	@ 0xb4
900059ac:	6022      	str	r2, [r4, #0]
900059ae:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
900059b2:	4630      	mov	r0, r6
        : color(col)
900059b4:	66a5      	str	r5, [r4, #104]	@ 0x68
900059b6:	1d27      	adds	r7, r4, #4
        return typedTextId < numberOfTypedTexts;
900059b8:	f8df 91c8 	ldr.w	r9, [pc, #456]	@ 90005b84 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1fc>
900059bc:	e9c4 510f 	strd	r5, r1, [r4, #60]	@ 0x3c
        : x(0), y(0), width(0), height(0)
900059c0:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
900059c4:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
900059c8:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
900059cc:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
900059d0:	f00e fd38 	bl	90014444 <_ZN8touchgfx15ButtonWithLabelC1Ev>
900059d4:	4640      	mov	r0, r8
900059d6:	f00e fd35 	bl	90014444 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
900059da:	4b5e      	ldr	r3, [pc, #376]	@ (90005b54 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1cc>)
900059dc:	f104 0140 	add.w	r1, r4, #64	@ 0x40
900059e0:	4638      	mov	r0, r7
900059e2:	f8c4 30fc 	str.w	r3, [r4, #252]	@ 0xfc
900059e6:	4b5c      	ldr	r3, [pc, #368]	@ (90005b58 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1d0>)
900059e8:	f8c4 4100 	str.w	r4, [r4, #256]	@ 0x100
900059ec:	f8c4 3104 	str.w	r3, [r4, #260]	@ 0x104
        rect.x = x;
900059f0:	4b5a      	ldr	r3, [pc, #360]	@ (90005b5c <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1d4>)
900059f2:	f8c4 5108 	str.w	r5, [r4, #264]	@ 0x108
900059f6:	64a3      	str	r3, [r4, #72]	@ 0x48
        color = newColor;
900059f8:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
900059fc:	6465      	str	r5, [r4, #68]	@ 0x44
900059fe:	66a3      	str	r3, [r4, #104]	@ 0x68
90005a00:	f00a fcb6 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005a04:	4b56      	ldr	r3, [pc, #344]	@ (90005b60 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1d8>)
    normalDifficultyButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
90005a06:	4669      	mov	r1, sp
90005a08:	aa01      	add	r2, sp, #4
90005a0a:	6723      	str	r3, [r4, #112]	@ 0x70
90005a0c:	2301      	movs	r3, #1
90005a0e:	4630      	mov	r0, r6
90005a10:	f8ad 5000 	strh.w	r5, [sp]
90005a14:	f8ad 3004 	strh.w	r3, [sp, #4]
90005a18:	f00e fb18 	bl	9001404c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
90005a1c:	2107      	movs	r1, #7
        if (typedText.hasValidId())
90005a1e:	f8b9 3000 	ldrh.w	r3, [r9]
90005a22:	428b      	cmp	r3, r1
90005a24:	f8a4 10a4 	strh.w	r1, [r4, #164]	@ 0xa4
90005a28:	d925      	bls.n	90005a76 <_ZN33difficultySelectionScreenViewBaseC1Ev+0xee>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005a2a:	4b4e      	ldr	r3, [pc, #312]	@ (90005b64 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1dc>)
90005a2c:	681b      	ldr	r3, [r3, #0]
90005a2e:	2b00      	cmp	r3, #0
90005a30:	f000 8085 	beq.w	90005b3e <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1b6>
        return fonts[typedTexts[typedTextId].fontIdx];
90005a34:	7b9a      	ldrb	r2, [r3, #14]
90005a36:	4b4c      	ldr	r3, [pc, #304]	@ (90005b68 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1e0>)
90005a38:	681b      	ldr	r3, [r3, #0]
90005a3a:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005a3e:	4b4b      	ldr	r3, [pc, #300]	@ (90005b6c <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1e4>)
90005a40:	6818      	ldr	r0, [r3, #0]
90005a42:	f7ff ff13 	bl	9000586c <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005a46:	f8da 3000 	ldr.w	r3, [sl]
90005a4a:	4949      	ldr	r1, [pc, #292]	@ (90005b70 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1e8>)
90005a4c:	4683      	mov	fp, r0
90005a4e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90005a50:	428a      	cmp	r2, r1
90005a52:	d168      	bne.n	90005b26 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x19e>
        return fontHeight;
90005a54:	f8ba 5004 	ldrh.w	r5, [sl, #4]
90005a58:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90005a5a:	4659      	mov	r1, fp
90005a5c:	4650      	mov	r0, sl
90005a5e:	4798      	blx	r3
90005a60:	fb15 f500 	smulbb	r5, r5, r0
90005a64:	f8da 3000 	ldr.w	r3, [sl]
90005a68:	4659      	mov	r1, fp
90005a6a:	b2ad      	uxth	r5, r5
90005a6c:	4650      	mov	r0, sl
90005a6e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005a70:	4798      	blx	r3
90005a72:	4405      	add	r5, r0
90005a74:	b22d      	sxth	r5, r5
90005a76:	4631      	mov	r1, r6
        color = col;
90005a78:	f04f 33ff 	mov.w	r3, #4294967295
    normalDifficultyButton.setAction(buttonCallback);
90005a7c:	f104 06fc 	add.w	r6, r4, #252	@ 0xfc
90005a80:	4638      	mov	r0, r7
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005a82:	f8a4 50b2 	strh.w	r5, [r4, #178]	@ 0xb2
90005a86:	2500      	movs	r5, #0
90005a88:	f8c4 6094 	str.w	r6, [r4, #148]	@ 0x94
        colorPressed = col;
90005a8c:	e9c4 332a 	strd	r3, r3, [r4, #168]	@ 0xa8
90005a90:	f00a fc6e 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005a94:	4b37      	ldr	r3, [pc, #220]	@ (90005b74 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1ec>)
    hardDifficultyButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
90005a96:	4669      	mov	r1, sp
90005a98:	aa01      	add	r2, sp, #4
90005a9a:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
90005a9e:	2301      	movs	r3, #1
90005aa0:	4640      	mov	r0, r8
90005aa2:	f8ad 5000 	strh.w	r5, [sp]
90005aa6:	f8ad 3004 	strh.w	r3, [sp, #4]
90005aaa:	f00e facf 	bl	9001404c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
90005aae:	2106      	movs	r1, #6
        if (typedText.hasValidId())
90005ab0:	f8b9 3000 	ldrh.w	r3, [r9]
90005ab4:	428b      	cmp	r3, r1
90005ab6:	f8a4 10ec 	strh.w	r1, [r4, #236]	@ 0xec
90005aba:	d924      	bls.n	90005b06 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x17e>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005abc:	4b29      	ldr	r3, [pc, #164]	@ (90005b64 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1dc>)
90005abe:	681b      	ldr	r3, [r3, #0]
90005ac0:	2b00      	cmp	r3, #0
90005ac2:	d03c      	beq.n	90005b3e <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1b6>
        return fonts[typedTexts[typedTextId].fontIdx];
90005ac4:	7b1a      	ldrb	r2, [r3, #12]
90005ac6:	4b28      	ldr	r3, [pc, #160]	@ (90005b68 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1e0>)
90005ac8:	681b      	ldr	r3, [r3, #0]
90005aca:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005ace:	4b27      	ldr	r3, [pc, #156]	@ (90005b6c <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1e4>)
90005ad0:	6818      	ldr	r0, [r3, #0]
90005ad2:	f7ff fecb 	bl	9000586c <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005ad6:	f8d9 3000 	ldr.w	r3, [r9]
90005ada:	4925      	ldr	r1, [pc, #148]	@ (90005b70 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1e8>)
90005adc:	4682      	mov	sl, r0
90005ade:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90005ae0:	428a      	cmp	r2, r1
90005ae2:	d126      	bne.n	90005b32 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1aa>
90005ae4:	f8b9 5004 	ldrh.w	r5, [r9, #4]
90005ae8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90005aea:	4651      	mov	r1, sl
90005aec:	4648      	mov	r0, r9
90005aee:	4798      	blx	r3
90005af0:	fb15 f500 	smulbb	r5, r5, r0
90005af4:	f8d9 3000 	ldr.w	r3, [r9]
90005af8:	4651      	mov	r1, sl
90005afa:	b2ad      	uxth	r5, r5
90005afc:	4648      	mov	r0, r9
90005afe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005b00:	4798      	blx	r3
90005b02:	4405      	add	r5, r0
90005b04:	b22d      	sxth	r5, r5
        color = col;
90005b06:	f04f 33ff 	mov.w	r3, #4294967295
90005b0a:	4638      	mov	r0, r7
90005b0c:	4641      	mov	r1, r8
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005b0e:	f8a4 50fa 	strh.w	r5, [r4, #250]	@ 0xfa
90005b12:	f8c4 60dc 	str.w	r6, [r4, #220]	@ 0xdc
        colorPressed = col;
90005b16:	e9c4 333c 	strd	r3, r3, [r4, #240]	@ 0xf0
90005b1a:	f00a fc29 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005b1e:	4620      	mov	r0, r4
90005b20:	b003      	add	sp, #12
90005b22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005b26:	4650      	mov	r0, sl
90005b28:	4790      	blx	r2
90005b2a:	f8da 3000 	ldr.w	r3, [sl]
90005b2e:	4605      	mov	r5, r0
90005b30:	e792      	b.n	90005a58 <_ZN33difficultySelectionScreenViewBaseC1Ev+0xd0>
90005b32:	4648      	mov	r0, r9
90005b34:	4790      	blx	r2
90005b36:	f8d9 3000 	ldr.w	r3, [r9]
90005b3a:	4605      	mov	r5, r0
90005b3c:	e7d4      	b.n	90005ae8 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x160>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005b3e:	4b0e      	ldr	r3, [pc, #56]	@ (90005b78 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1f0>)
90005b40:	216c      	movs	r1, #108	@ 0x6c
90005b42:	4a0e      	ldr	r2, [pc, #56]	@ (90005b7c <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1f4>)
90005b44:	480e      	ldr	r0, [pc, #56]	@ (90005b80 <_ZN33difficultySelectionScreenViewBaseC1Ev+0x1f8>)
90005b46:	f024 f807 	bl	90029b58 <__assert_func>
90005b4a:	bf00      	nop
90005b4c:	9002d028 	.word	0x9002d028
90005b50:	9002daec 	.word	0x9002daec
90005b54:	9002d010 	.word	0x9002d010
90005b58:	90005935 	.word	0x90005935
90005b5c:	011001e0 	.word	0x011001e0
90005b60:	003f0078 	.word	0x003f0078
90005b64:	2402342c 	.word	0x2402342c
90005b68:	24023434 	.word	0x24023434
90005b6c:	24023438 	.word	0x24023438
90005b70:	90004449 	.word	0x90004449
90005b74:	00a60078 	.word	0x00a60078
90005b78:	9002cd0c 	.word	0x9002cd0c
90005b7c:	9002cd50 	.word	0x9002cd50
90005b80:	9002cd8c 	.word	0x9002cd8c
90005b84:	24023430 	.word	0x24023430

90005b88 <_ZN22gameOverScreenViewBaseD1Ev>:
}

gameOverScreenViewBase::~gameOverScreenViewBase()
{

}
90005b88:	4770      	bx	lr
90005b8a:	bf00      	nop

90005b8c <_ZN22gameOverScreenViewBase11setupScreenEv>:

void gameOverScreenViewBase::setupScreen()
{

}
90005b8c:	4770      	bx	lr
90005b8e:	bf00      	nop

90005b90 <_ZN8touchgfx8CallbackI22gameOverScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005b90:	4770      	bx	lr
90005b92:	bf00      	nop

90005b94 <_ZN8touchgfx8CallbackI22gameOverScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005b94:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90005b96:	68c3      	ldr	r3, [r0, #12]
90005b98:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90005b9c:	f013 0f01 	tst.w	r3, #1
90005ba0:	eb04 0063 	add.w	r0, r4, r3, asr #1
90005ba4:	d004      	beq.n	90005bb0 <_ZN8touchgfx8CallbackI22gameOverScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90005ba6:	ea4f 0c63 	mov.w	ip, r3, asr #1
90005baa:	f854 300c 	ldr.w	r3, [r4, ip]
90005bae:	589a      	ldr	r2, [r3, r2]
    }
90005bb0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005bb4:	4710      	bx	r2
90005bb6:	bf00      	nop

90005bb8 <_ZNK8touchgfx8CallbackI22gameOverScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005bb8:	6843      	ldr	r3, [r0, #4]
90005bba:	b13b      	cbz	r3, 90005bcc <_ZNK8touchgfx8CallbackI22gameOverScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90005bbc:	6883      	ldr	r3, [r0, #8]
90005bbe:	b10b      	cbz	r3, 90005bc4 <_ZNK8touchgfx8CallbackI22gameOverScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90005bc0:	2001      	movs	r0, #1
    }
90005bc2:	4770      	bx	lr
90005bc4:	68c0      	ldr	r0, [r0, #12]
90005bc6:	f000 0001 	and.w	r0, r0, #1
90005bca:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005bcc:	4618      	mov	r0, r3
90005bce:	4770      	bx	lr

90005bd0 <_ZN8touchgfx8CallbackI22gameOverScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005bd0:	b510      	push	{r4, lr}
90005bd2:	4604      	mov	r4, r0
90005bd4:	2110      	movs	r1, #16
90005bd6:	f023 fc49 	bl	9002946c <_ZdlPvj>
90005bda:	4620      	mov	r0, r4
90005bdc:	bd10      	pop	{r4, pc}
90005bde:	bf00      	nop

90005be0 <_ZN22gameOverScreenViewBaseD0Ev>:
gameOverScreenViewBase::~gameOverScreenViewBase()
90005be0:	b510      	push	{r4, lr}
90005be2:	4604      	mov	r4, r0
}
90005be4:	f44f 7186 	mov.w	r1, #268	@ 0x10c
90005be8:	f023 fc40 	bl	9002946c <_ZdlPvj>
90005bec:	4620      	mov	r0, r4
90005bee:	bd10      	pop	{r4, pc}

90005bf0 <_ZN22gameOverScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void gameOverScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &returnButton)
90005bf0:	30b4      	adds	r0, #180	@ 0xb4
90005bf2:	4288      	cmp	r0, r1
90005bf4:	d000      	beq.n	90005bf8 <_ZN22gameOverScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x8>
90005bf6:	4770      	bx	lr
{
90005bf8:	b508      	push	{r3, lr}
    virtual ~gameOverScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005bfa:	f010 ffd3 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
        //returnButtonInteraction
        //When returnButton clicked change screen to PongPlayerSelectionScreen
        //Go to PongPlayerSelectionScreen with no screen transition
        application().gotoPongPlayerSelectionScreenScreenNoTransition();
    }
}
90005bfe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoPongPlayerSelectionScreenScreenNoTransition();
90005c02:	f7ff b953 	b.w	90004eac <_ZN23FrontendApplicationBase47gotoPongPlayerSelectionScreenScreenNoTransitionEv>
90005c06:	bf00      	nop

90005c08 <_ZN22gameOverScreenViewBaseC1Ev>:
gameOverScreenViewBase::gameOverScreenViewBase() :
90005c08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90005c0c:	b088      	sub	sp, #32
90005c0e:	4604      	mov	r4, r0
90005c10:	f012 fe98 	bl	90018944 <_ZN8touchgfx6ScreenC1Ev>
          touchable(false),
90005c14:	f44f 7380 	mov.w	r3, #256	@ 0x100
    buttonCallback(this, &gameOverScreenViewBase::buttonCallbackHandler)
90005c18:	4962      	ldr	r1, [pc, #392]	@ (90005da4 <_ZN22gameOverScreenViewBaseC1Ev+0x19c>)
90005c1a:	2500      	movs	r5, #0
90005c1c:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
        : Widget(), alpha(255), color(0)
90005c20:	22ff      	movs	r2, #255	@ 0xff
90005c22:	f8a4 3090 	strh.w	r3, [r4, #144]	@ 0x90
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005c26:	f04f 38ff 	mov.w	r8, #4294967295
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005c2a:	4b5f      	ldr	r3, [pc, #380]	@ (90005da8 <_ZN22gameOverScreenViewBaseC1Ev+0x1a0>)
90005c2c:	f104 07b4 	add.w	r7, r4, #180	@ 0xb4
        : typedTextId(id)
90005c30:	f8df a1b0 	ldr.w	sl, [pc, #432]	@ 90005de4 <_ZN22gameOverScreenViewBaseC1Ev+0x1dc>
90005c34:	1d26      	adds	r6, r4, #4
90005c36:	6021      	str	r1, [r4, #0]
90005c38:	4638      	mov	r0, r7
90005c3a:	495c      	ldr	r1, [pc, #368]	@ (90005dac <_ZN22gameOverScreenViewBaseC1Ev+0x1a4>)
90005c3c:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
90005c40:	66e3      	str	r3, [r4, #108]	@ 0x6c
90005c42:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90005c46:	f884 2066 	strb.w	r2, [r4, #102]	@ 0x66
90005c4a:	f8c4 20a2 	str.w	r2, [r4, #162]	@ 0xa2
90005c4e:	6421      	str	r1, [r4, #64]	@ 0x40
90005c50:	f8a4 3098 	strh.w	r3, [r4, #152]	@ 0x98
90005c54:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
90005c56:	66a5      	str	r5, [r4, #104]	@ 0x68
90005c58:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
90005c5c:	f8a4 50a0 	strh.w	r5, [r4, #160]	@ 0xa0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005c60:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
90005c64:	f8c4 a094 	str.w	sl, [r4, #148]	@ 0x94
              text(0)
90005c68:	e9c4 852b 	strd	r8, r5, [r4, #172]	@ 0xac
        : x(0), y(0), width(0), height(0)
90005c6c:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
90005c70:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
90005c74:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
90005c78:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
90005c7c:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
90005c80:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
90005c84:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
90005c88:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
90005c8c:	f00e fbda 	bl	90014444 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
90005c90:	4b47      	ldr	r3, [pc, #284]	@ (90005db0 <_ZN22gameOverScreenViewBaseC1Ev+0x1a8>)
90005c92:	f104 0140 	add.w	r1, r4, #64	@ 0x40
90005c96:	4630      	mov	r0, r6
90005c98:	f8c4 30fc 	str.w	r3, [r4, #252]	@ 0xfc
90005c9c:	4b45      	ldr	r3, [pc, #276]	@ (90005db4 <_ZN22gameOverScreenViewBaseC1Ev+0x1ac>)
90005c9e:	f8c4 4100 	str.w	r4, [r4, #256]	@ 0x100
90005ca2:	f8c4 3104 	str.w	r3, [r4, #260]	@ 0x104
        rect.x = x;
90005ca6:	4b44      	ldr	r3, [pc, #272]	@ (90005db8 <_ZN22gameOverScreenViewBaseC1Ev+0x1b0>)
90005ca8:	f8c4 5108 	str.w	r5, [r4, #264]	@ 0x108
90005cac:	64a3      	str	r3, [r4, #72]	@ 0x48
        color = newColor;
90005cae:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
90005cb2:	6465      	str	r5, [r4, #68]	@ 0x44
90005cb4:	66a3      	str	r3, [r4, #104]	@ 0x68
90005cb6:	f00a fb5b 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005cba:	4b40      	ldr	r3, [pc, #256]	@ (90005dbc <_ZN22gameOverScreenViewBaseC1Ev+0x1b4>)
        color = newColor;
90005cbc:	f8c4 809c 	str.w	r8, [r4, #156]	@ 0x9c
        boundingArea = calculateBoundingArea();
90005cc0:	46e8      	mov	r8, sp
90005cc2:	4649      	mov	r1, r9
90005cc4:	6723      	str	r3, [r4, #112]	@ 0x70
90005cc6:	4640      	mov	r0, r8
        linespace = space;
90005cc8:	f8a4 50a0 	strh.w	r5, [r4, #160]	@ 0xa0
        boundingArea = calculateBoundingArea();
90005ccc:	f00d feb8 	bl	90013a40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005cd0:	2203      	movs	r2, #3
90005cd2:	f104 03a8 	add.w	r3, r4, #168	@ 0xa8
90005cd6:	f8cd a018 	str.w	sl, [sp, #24]
90005cda:	f8ad 201c 	strh.w	r2, [sp, #28]
90005cde:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
90005ce2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VR1));
90005ce6:	a906      	add	r1, sp, #24
90005ce8:	4648      	mov	r0, r9
90005cea:	f00e f951 	bl	90013f90 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005cee:	4649      	mov	r1, r9
90005cf0:	4630      	mov	r0, r6
90005cf2:	f00a fb3d 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005cf6:	4b32      	ldr	r3, [pc, #200]	@ (90005dc0 <_ZN22gameOverScreenViewBaseC1Ev+0x1b8>)
    returnButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
90005cf8:	a905      	add	r1, sp, #20
90005cfa:	aa06      	add	r2, sp, #24
90005cfc:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
90005d00:	2301      	movs	r3, #1
90005d02:	4638      	mov	r0, r7
90005d04:	f8ad 5014 	strh.w	r5, [sp, #20]
90005d08:	f8ad 3018 	strh.w	r3, [sp, #24]
90005d0c:	f00e f99e 	bl	9001404c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        return typedTextId < numberOfTypedTexts;
90005d10:	4b2c      	ldr	r3, [pc, #176]	@ (90005dc4 <_ZN22gameOverScreenViewBaseC1Ev+0x1bc>)
class TypedText
90005d12:	2102      	movs	r1, #2
        if (typedText.hasValidId())
90005d14:	881b      	ldrh	r3, [r3, #0]
90005d16:	f8a4 10ec 	strh.w	r1, [r4, #236]	@ 0xec
90005d1a:	428b      	cmp	r3, r1
90005d1c:	d924      	bls.n	90005d68 <_ZN22gameOverScreenViewBaseC1Ev+0x160>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005d1e:	4b2a      	ldr	r3, [pc, #168]	@ (90005dc8 <_ZN22gameOverScreenViewBaseC1Ev+0x1c0>)
90005d20:	681b      	ldr	r3, [r3, #0]
90005d22:	2b00      	cmp	r3, #0
90005d24:	d038      	beq.n	90005d98 <_ZN22gameOverScreenViewBaseC1Ev+0x190>
        return fonts[typedTexts[typedTextId].fontIdx];
90005d26:	791a      	ldrb	r2, [r3, #4]
90005d28:	4b28      	ldr	r3, [pc, #160]	@ (90005dcc <_ZN22gameOverScreenViewBaseC1Ev+0x1c4>)
90005d2a:	681b      	ldr	r3, [r3, #0]
90005d2c:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005d30:	4b27      	ldr	r3, [pc, #156]	@ (90005dd0 <_ZN22gameOverScreenViewBaseC1Ev+0x1c8>)
90005d32:	6818      	ldr	r0, [r3, #0]
90005d34:	f7ff fd9a 	bl	9000586c <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005d38:	f8d8 3000 	ldr.w	r3, [r8]
90005d3c:	4925      	ldr	r1, [pc, #148]	@ (90005dd4 <_ZN22gameOverScreenViewBaseC1Ev+0x1cc>)
90005d3e:	4681      	mov	r9, r0
90005d40:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90005d42:	428a      	cmp	r2, r1
90005d44:	d122      	bne.n	90005d8c <_ZN22gameOverScreenViewBaseC1Ev+0x184>
90005d46:	f8b8 5004 	ldrh.w	r5, [r8, #4]
90005d4a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90005d4c:	4649      	mov	r1, r9
90005d4e:	4640      	mov	r0, r8
90005d50:	4798      	blx	r3
90005d52:	fb15 f500 	smulbb	r5, r5, r0
90005d56:	f8d8 3000 	ldr.w	r3, [r8]
90005d5a:	4649      	mov	r1, r9
90005d5c:	b2ad      	uxth	r5, r5
90005d5e:	4640      	mov	r0, r8
90005d60:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90005d62:	4798      	blx	r3
90005d64:	4405      	add	r5, r0
90005d66:	b22d      	sxth	r5, r5
        color = col;
90005d68:	f04f 33ff 	mov.w	r3, #4294967295
90005d6c:	4630      	mov	r0, r6
90005d6e:	4639      	mov	r1, r7
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005d70:	f8a4 50fa 	strh.w	r5, [r4, #250]	@ 0xfa
        colorPressed = col;
90005d74:	e9c4 333c 	strd	r3, r3, [r4, #240]	@ 0xf0
    returnButton.setAction(buttonCallback);
90005d78:	f104 03fc 	add.w	r3, r4, #252	@ 0xfc
90005d7c:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
90005d80:	f00a faf6 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005d84:	4620      	mov	r0, r4
90005d86:	b008      	add	sp, #32
90005d88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005d8c:	4640      	mov	r0, r8
90005d8e:	4790      	blx	r2
90005d90:	f8d8 3000 	ldr.w	r3, [r8]
90005d94:	4605      	mov	r5, r0
90005d96:	e7d8      	b.n	90005d4a <_ZN22gameOverScreenViewBaseC1Ev+0x142>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005d98:	4b0f      	ldr	r3, [pc, #60]	@ (90005dd8 <_ZN22gameOverScreenViewBaseC1Ev+0x1d0>)
90005d9a:	216c      	movs	r1, #108	@ 0x6c
90005d9c:	4a0f      	ldr	r2, [pc, #60]	@ (90005ddc <_ZN22gameOverScreenViewBaseC1Ev+0x1d4>)
90005d9e:	4810      	ldr	r0, [pc, #64]	@ (90005de0 <_ZN22gameOverScreenViewBaseC1Ev+0x1d8>)
90005da0:	f023 feda 	bl	90029b58 <__assert_func>
90005da4:	9002d07c 	.word	0x9002d07c
90005da8:	9002da5c 	.word	0x9002da5c
90005dac:	9002daec 	.word	0x9002daec
90005db0:	9002d064 	.word	0x9002d064
90005db4:	90005bf1 	.word	0x90005bf1
90005db8:	011001e0 	.word	0x011001e0
90005dbc:	00440082 	.word	0x00440082
90005dc0:	00950078 	.word	0x00950078
90005dc4:	24023430 	.word	0x24023430
90005dc8:	2402342c 	.word	0x2402342c
90005dcc:	24023434 	.word	0x24023434
90005dd0:	24023438 	.word	0x24023438
90005dd4:	90004449 	.word	0x90004449
90005dd8:	9002cd0c 	.word	0x9002cd0c
90005ddc:	9002cd50 	.word	0x9002cd50
90005de0:	9002cd8c 	.word	0x9002cd8c
90005de4:	9002c514 	.word	0x9002c514

90005de8 <_ZN8touchgfx8TextArea8setWidthEs>:
    virtual void setWidth(int16_t width)
90005de8:	b530      	push	{r4, r5, lr}
90005dea:	b085      	sub	sp, #20
90005dec:	460a      	mov	r2, r1
        boundingArea = calculateBoundingArea();
90005dee:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90005df0:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90005df2:	466d      	mov	r5, sp
90005df4:	4601      	mov	r1, r0
        rect.width = width;
90005df6:	8102      	strh	r2, [r0, #8]
90005df8:	343c      	adds	r4, #60	@ 0x3c
90005dfa:	4628      	mov	r0, r5
90005dfc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90005e00:	4798      	blx	r3
90005e02:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005e06:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90005e0a:	b005      	add	sp, #20
90005e0c:	bd30      	pop	{r4, r5, pc}
90005e0e:	bf00      	nop

90005e10 <_ZN8touchgfx8TextArea9setHeightEs>:
    virtual void setHeight(int16_t height)
90005e10:	b530      	push	{r4, r5, lr}
90005e12:	b085      	sub	sp, #20
90005e14:	460a      	mov	r2, r1
        boundingArea = calculateBoundingArea();
90005e16:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90005e18:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90005e1a:	466d      	mov	r5, sp
90005e1c:	4601      	mov	r1, r0
        rect.height = height;
90005e1e:	8142      	strh	r2, [r0, #10]
90005e20:	343c      	adds	r4, #60	@ 0x3c
90005e22:	4628      	mov	r0, r5
90005e24:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90005e28:	4798      	blx	r3
90005e2a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005e2e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90005e32:	b005      	add	sp, #20
90005e34:	bd30      	pop	{r4, r5, pc}
90005e36:	bf00      	nop

90005e38 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90005e38:	2200      	movs	r2, #0
90005e3a:	6002      	str	r2, [r0, #0]
90005e3c:	6042      	str	r2, [r0, #4]
    }
90005e3e:	4770      	bx	lr

90005e40 <_ZN8touchgfx8TextArea8setAlphaEh>:
        alpha = newAlpha;
90005e40:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
90005e44:	4770      	bx	lr
90005e46:	bf00      	nop

90005e48 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
    }
90005e48:	2000      	movs	r0, #0
90005e4a:	4770      	bx	lr

90005e4c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
90005e4c:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90005e50:	b112      	cbz	r2, 90005e58 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
90005e52:	6803      	ldr	r3, [r0, #0]
90005e54:	695b      	ldr	r3, [r3, #20]
90005e56:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90005e58:	4770      	bx	lr
90005e5a:	bf00      	nop

90005e5c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005e5c:	2200      	movs	r2, #0
90005e5e:	f04f 31ff 	mov.w	r1, #4294967295
              text(0)
90005e62:	6082      	str	r2, [r0, #8]
90005e64:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
90005e68:	4770      	bx	lr
90005e6a:	bf00      	nop

90005e6c <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90005e6c:	6c80      	ldr	r0, [r0, #72]	@ 0x48
90005e6e:	4770      	bx	lr

90005e70 <_ZN22pongGameScreenViewBase16pongScreenOpenedEv>:
     * Virtual Action Handlers
     */
    virtual void pongScreenOpened()
    {
        // Override and implement this function in pongGameScreen
    }
90005e70:	4770      	bx	lr
90005e72:	bf00      	nop

90005e74 <_ZN22pongGameScreenViewBase11setupScreenEv>:
}

void pongGameScreenViewBase::setupScreen()
{

}
90005e74:	4770      	bx	lr
90005e76:	bf00      	nop

90005e78 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90005e78:	4770      	bx	lr
90005e7a:	bf00      	nop

90005e7c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90005e7c:	b510      	push	{r4, lr}
90005e7e:	4604      	mov	r4, r0
90005e80:	214c      	movs	r1, #76	@ 0x4c
90005e82:	f023 faf3 	bl	9002946c <_ZdlPvj>
90005e86:	4620      	mov	r0, r4
90005e88:	bd10      	pop	{r4, pc}
90005e8a:	bf00      	nop

90005e8c <_ZN22pongGameScreenViewBaseD1Ev>:
pongGameScreenViewBase::~pongGameScreenViewBase()
90005e8c:	4b03      	ldr	r3, [pc, #12]	@ (90005e9c <_ZN22pongGameScreenViewBaseD1Ev+0x10>)
90005e8e:	b510      	push	{r4, lr}
90005e90:	4604      	mov	r4, r0
90005e92:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90005e94:	f00f f98c 	bl	900151b0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90005e98:	4620      	mov	r0, r4
90005e9a:	bd10      	pop	{r4, pc}
90005e9c:	9002d1d0 	.word	0x9002d1d0

90005ea0 <_ZN22pongGameScreenViewBaseD0Ev>:
pongGameScreenViewBase::~pongGameScreenViewBase()
90005ea0:	4b06      	ldr	r3, [pc, #24]	@ (90005ebc <_ZN22pongGameScreenViewBaseD0Ev+0x1c>)
90005ea2:	b510      	push	{r4, lr}
90005ea4:	4604      	mov	r4, r0
90005ea6:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90005ea8:	f00f f982 	bl	900151b0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90005eac:	f641 51c4 	movw	r1, #7620	@ 0x1dc4
90005eb0:	4620      	mov	r0, r4
90005eb2:	f023 fadb 	bl	9002946c <_ZdlPvj>
90005eb6:	4620      	mov	r0, r4
90005eb8:	bd10      	pop	{r4, pc}
90005eba:	bf00      	nop
90005ebc:	9002d1d0 	.word	0x9002d1d0

90005ec0 <_ZN22pongGameScreenViewBase14handleKeyEventEh>:
    pongScreenOpened();
}

void pongGameScreenViewBase::handleKeyEvent(uint8_t key)
{
    if(0 == key)
90005ec0:	b101      	cbz	r1, 90005ec4 <_ZN22pongGameScreenViewBase14handleKeyEventEh+0x4>
90005ec2:	4770      	bx	lr
{
90005ec4:	b508      	push	{r3, lr}

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005ec6:	f010 fe6d 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
        //When hardware button 0 clicked change screen to gameOverScreen
        //Go to gameOverScreen with no screen transition
        application().gotogameOverScreenScreenNoTransition();
    
    }
}
90005eca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotogameOverScreenScreenNoTransition();
90005ece:	f7ff b817 	b.w	90004f00 <_ZN23FrontendApplicationBase36gotogameOverScreenScreenNoTransitionEv>
90005ed2:	bf00      	nop

90005ed4 <_ZN22pongGameScreenViewBase15afterTransitionEv>:
    pongScreenOpened();
90005ed4:	6803      	ldr	r3, [r0, #0]
90005ed6:	4a03      	ldr	r2, [pc, #12]	@ (90005ee4 <_ZN22pongGameScreenViewBase15afterTransitionEv+0x10>)
90005ed8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90005eda:	4293      	cmp	r3, r2
90005edc:	d100      	bne.n	90005ee0 <_ZN22pongGameScreenViewBase15afterTransitionEv+0xc>
}
90005ede:	4770      	bx	lr
    pongScreenOpened();
90005ee0:	4718      	bx	r3
90005ee2:	bf00      	nop
90005ee4:	90005e71 	.word	0x90005e71

90005ee8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
90005ee8:	4b1b      	ldr	r3, [pc, #108]	@ (90005f58 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005eea:	6802      	ldr	r2, [r0, #0]
90005eec:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90005eee:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005ef0:	6b55      	ldr	r5, [r2, #52]	@ 0x34
90005ef2:	b323      	cbz	r3, 90005f3e <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
90005ef4:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
90005ef6:	4919      	ldr	r1, [pc, #100]	@ (90005f5c <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90005ef8:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90005efa:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005efc:	8809      	ldrh	r1, [r1, #0]
90005efe:	4291      	cmp	r1, r2
90005f00:	d923      	bls.n	90005f4a <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
90005f02:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90005f06:	4b16      	ldr	r3, [pc, #88]	@ (90005f60 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90005f08:	681b      	ldr	r3, [r3, #0]
90005f0a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90005f0e:	4a15      	ldr	r2, [pc, #84]	@ (90005f64 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90005f10:	6803      	ldr	r3, [r0, #0]
90005f12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005f14:	4293      	cmp	r3, r2
90005f16:	d107      	bne.n	90005f28 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90005f18:	88c0      	ldrh	r0, [r0, #6]
90005f1a:	4b13      	ldr	r3, [pc, #76]	@ (90005f68 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90005f1c:	1a31      	subs	r1, r6, r0
90005f1e:	429d      	cmp	r5, r3
90005f20:	b209      	sxth	r1, r1
90005f22:	d107      	bne.n	90005f34 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
90005f24:	80e1      	strh	r1, [r4, #6]
    }
90005f26:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005f28:	4798      	blx	r3
90005f2a:	4b0f      	ldr	r3, [pc, #60]	@ (90005f68 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90005f2c:	1a31      	subs	r1, r6, r0
90005f2e:	429d      	cmp	r5, r3
90005f30:	b209      	sxth	r1, r1
90005f32:	d0f7      	beq.n	90005f24 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
90005f34:	4620      	mov	r0, r4
90005f36:	462b      	mov	r3, r5
    }
90005f38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005f3c:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005f3e:	4b0b      	ldr	r3, [pc, #44]	@ (90005f6c <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90005f40:	216c      	movs	r1, #108	@ 0x6c
90005f42:	4a0b      	ldr	r2, [pc, #44]	@ (90005f70 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90005f44:	480b      	ldr	r0, [pc, #44]	@ (90005f74 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90005f46:	f023 fe07 	bl	90029b58 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005f4a:	4b0b      	ldr	r3, [pc, #44]	@ (90005f78 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90005f4c:	216d      	movs	r1, #109	@ 0x6d
90005f4e:	4a08      	ldr	r2, [pc, #32]	@ (90005f70 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90005f50:	4808      	ldr	r0, [pc, #32]	@ (90005f74 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90005f52:	f023 fe01 	bl	90029b58 <__assert_func>
90005f56:	bf00      	nop
90005f58:	2402342c 	.word	0x2402342c
90005f5c:	24023430 	.word	0x24023430
90005f60:	24023434 	.word	0x24023434
90005f64:	90004445 	.word	0x90004445
90005f68:	90002e21 	.word	0x90002e21
90005f6c:	9002cd0c 	.word	0x9002cd0c
90005f70:	9002cd50 	.word	0x9002cd50
90005f74:	9002cd8c 	.word	0x9002cd8c
90005f78:	9002d0a8 	.word	0x9002d0a8

90005f7c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90005f7c:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90005f7e:	b570      	push	{r4, r5, r6, lr}
90005f80:	4614      	mov	r4, r2
90005f82:	4e23      	ldr	r6, [pc, #140]	@ (90006010 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x94>)
        setX(x);
90005f84:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90005f86:	4605      	mov	r5, r0
90005f88:	42b2      	cmp	r2, r6
90005f8a:	d122      	bne.n	90005fd2 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x56>
        setBaselineY(baselineY);
90005f8c:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
        rect.x = x;
90005f8e:	80a9      	strh	r1, [r5, #4]
90005f90:	4920      	ldr	r1, [pc, #128]	@ (90006014 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
90005f92:	428a      	cmp	r2, r1
90005f94:	d123      	bne.n	90005fde <_ZN8touchgfx8TextArea13setXBaselineYEss+0x62>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005f96:	4a20      	ldr	r2, [pc, #128]	@ (90006018 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005f98:	b2a4      	uxth	r4, r4
90005f9a:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
90005f9c:	6813      	ldr	r3, [r2, #0]
90005f9e:	2b00      	cmp	r3, #0
90005fa0:	d02f      	beq.n	90006002 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x86>
        return typedTextId < numberOfTypedTexts;
90005fa2:	491e      	ldr	r1, [pc, #120]	@ (9000601c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90005fa4:	8daa      	ldrh	r2, [r5, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005fa6:	8809      	ldrh	r1, [r1, #0]
90005fa8:	4291      	cmp	r1, r2
90005faa:	d924      	bls.n	90005ff6 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x7a>
        return fonts[typedTexts[typedTextId].fontIdx];
90005fac:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90005fb0:	4b1b      	ldr	r3, [pc, #108]	@ (90006020 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
90005fb2:	681b      	ldr	r3, [r3, #0]
90005fb4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90005fb8:	4a1a      	ldr	r2, [pc, #104]	@ (90006024 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90005fba:	6803      	ldr	r3, [r0, #0]
90005fbc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90005fbe:	4293      	cmp	r3, r2
90005fc0:	d117      	bne.n	90005ff2 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
90005fc2:	88c0      	ldrh	r0, [r0, #6]
90005fc4:	4b18      	ldr	r3, [pc, #96]	@ (90006028 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
90005fc6:	1a24      	subs	r4, r4, r0
90005fc8:	429e      	cmp	r6, r3
90005fca:	b221      	sxth	r1, r4
90005fcc:	d10c      	bne.n	90005fe8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6c>
        rect.y = y;
90005fce:	80e9      	strh	r1, [r5, #6]
    }
90005fd0:	bd70      	pop	{r4, r5, r6, pc}
        setX(x);
90005fd2:	4790      	blx	r2
        setBaselineY(baselineY);
90005fd4:	682b      	ldr	r3, [r5, #0]
90005fd6:	490f      	ldr	r1, [pc, #60]	@ (90006014 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
90005fd8:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
90005fda:	428a      	cmp	r2, r1
90005fdc:	d0db      	beq.n	90005f96 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1a>
90005fde:	4621      	mov	r1, r4
90005fe0:	4628      	mov	r0, r5
    }
90005fe2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
90005fe6:	4710      	bx	r2
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005fe8:	4628      	mov	r0, r5
90005fea:	4633      	mov	r3, r6
    }
90005fec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005ff0:	4718      	bx	r3
90005ff2:	4798      	blx	r3
90005ff4:	e7e6      	b.n	90005fc4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x48>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005ff6:	4b0d      	ldr	r3, [pc, #52]	@ (9000602c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90005ff8:	216d      	movs	r1, #109	@ 0x6d
90005ffa:	4a0d      	ldr	r2, [pc, #52]	@ (90006030 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90005ffc:	480d      	ldr	r0, [pc, #52]	@ (90006034 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90005ffe:	f023 fdab 	bl	90029b58 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006002:	4b0d      	ldr	r3, [pc, #52]	@ (90006038 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90006004:	216c      	movs	r1, #108	@ 0x6c
90006006:	4a0a      	ldr	r2, [pc, #40]	@ (90006030 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90006008:	480a      	ldr	r0, [pc, #40]	@ (90006034 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
9000600a:	f023 fda5 	bl	90029b58 <__assert_func>
9000600e:	bf00      	nop
90006010:	90002e1d 	.word	0x90002e1d
90006014:	90005ee9 	.word	0x90005ee9
90006018:	2402342c 	.word	0x2402342c
9000601c:	24023430 	.word	0x24023430
90006020:	24023434 	.word	0x24023434
90006024:	90004445 	.word	0x90004445
90006028:	90002e21 	.word	0x90002e21
9000602c:	9002d0a8 	.word	0x9002d0a8
90006030:	9002cd50 	.word	0x9002cd50
90006034:	9002cd8c 	.word	0x9002cd8c
90006038:	9002cd0c 	.word	0x9002cd0c

9000603c <_ZN22pongGameScreenViewBaseC1Ev>:
pongGameScreenViewBase::pongGameScreenViewBase()
9000603c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006040:	b087      	sub	sp, #28
90006042:	4604      	mov	r4, r0
90006044:	f012 fc7e 	bl	90018944 <_ZN8touchgfx6ScreenC1Ev>
90006048:	48b3      	ldr	r0, [pc, #716]	@ (90006318 <_ZN22pongGameScreenViewBaseC1Ev+0x2dc>)
9000604a:	2500      	movs	r5, #0
          touchable(false),
9000604c:	f44f 7380 	mov.w	r3, #256	@ 0x100
        : Widget(), alpha(255), color(0)
90006050:	22ff      	movs	r2, #255	@ 0xff
90006052:	49b2      	ldr	r1, [pc, #712]	@ (9000631c <_ZN22pongGameScreenViewBaseC1Ev+0x2e0>)
90006054:	6020      	str	r0, [r4, #0]
90006056:	f04f 30ff 	mov.w	r0, #4294967295
9000605a:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
9000605e:	f504 789e 	add.w	r8, r4, #316	@ 0x13c
90006062:	f884 2066 	strb.w	r2, [r4, #102]	@ 0x66
90006066:	f504 79c2 	add.w	r9, r4, #388	@ 0x184
9000606a:	f8a4 3090 	strh.w	r3, [r4, #144]	@ 0x90
9000606e:	f884 2092 	strb.w	r2, [r4, #146]	@ 0x92
90006072:	6421      	str	r1, [r4, #64]	@ 0x40
90006074:	66e1      	str	r1, [r4, #108]	@ 0x6c
90006076:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
90006078:	66a5      	str	r5, [r4, #104]	@ 0x68
9000607a:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
        : typedTextId(id)
9000607e:	4fa8      	ldr	r7, [pc, #672]	@ (90006320 <_ZN22pongGameScreenViewBaseC1Ev+0x2e4>)
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90006080:	4ea8      	ldr	r6, [pc, #672]	@ (90006324 <_ZN22pongGameScreenViewBaseC1Ev+0x2e8>)
        : x(0), y(0), width(0), height(0)
90006082:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
90006086:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
9000608a:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
9000608e:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
90006092:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
90006096:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
9000609a:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
9000609e:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
900060a2:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
900060a6:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
900060aa:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          nextDrawChainElement(0),
900060ae:	f8c4 50b4 	str.w	r5, [r4, #180]	@ 0xb4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900060b2:	f8c4 00d8 	str.w	r0, [r4, #216]	@ 0xd8
900060b6:	f884 010a 	strb.w	r0, [r4, #266]	@ 0x10a
900060ba:	f64f 70ff 	movw	r0, #65535	@ 0xffff
          touchable(false),
900060be:	f8a4 30bc 	strh.w	r3, [r4, #188]	@ 0xbc
900060c2:	f8a4 00c4 	strh.w	r0, [r4, #196]	@ 0xc4
        : TextAreaWithWildcardBase(), wc1(0)
900060c6:	4898      	ldr	r0, [pc, #608]	@ (90006328 <_ZN22pongGameScreenViewBaseC1Ev+0x2ec>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900060c8:	f8c4 20ce 	str.w	r2, [r4, #206]	@ 0xce
900060cc:	f8a4 3108 	strh.w	r3, [r4, #264]	@ 0x108
900060d0:	f8c4 10e4 	str.w	r1, [r4, #228]	@ 0xe4
900060d4:	f8c4 0098 	str.w	r0, [r4, #152]	@ 0x98
900060d8:	4640      	mov	r0, r8
          cachedAbsX(0),
900060da:	f8c4 50b8 	str.w	r5, [r4, #184]	@ 0xb8
        : color(col)
900060de:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
900060e2:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900060e6:	f8c4 50d4 	str.w	r5, [r4, #212]	@ 0xd4
        : color(col)
900060ea:	f8c4 510c 	str.w	r5, [r4, #268]	@ 0x10c
900060ee:	f8c4 70c0 	str.w	r7, [r4, #192]	@ 0xc0
900060f2:	e9c4 5537 	strd	r5, r5, [r4, #220]	@ 0xdc
        : x(0), y(0), width(0), height(0)
900060f6:	e9c4 553a 	strd	r5, r5, [r4, #232]	@ 0xe8
900060fa:	e9c4 553c 	strd	r5, r5, [r4, #240]	@ 0xf0
          nextSibling(0),
900060fe:	e9c4 553e 	strd	r5, r5, [r4, #248]	@ 0xf8
          cachedAbsX(0),
90006102:	e9c4 5540 	strd	r5, r5, [r4, #256]	@ 0x100
90006106:	e9c4 5545 	strd	r5, r5, [r4, #276]	@ 0x114
9000610a:	e9c4 5547 	strd	r5, r5, [r4, #284]	@ 0x11c
          nextSibling(0),
9000610e:	e9c4 5549 	strd	r5, r5, [r4, #292]	@ 0x124
          cachedAbsX(0),
90006112:	e9c4 554b 	strd	r5, r5, [r4, #300]	@ 0x12c
          touchable(false),
90006116:	f8a4 3134 	strh.w	r3, [r4, #308]	@ 0x134
9000611a:	f884 2136 	strb.w	r2, [r4, #310]	@ 0x136
9000611e:	f8c4 1110 	str.w	r1, [r4, #272]	@ 0x110
        : color(col)
90006122:	f8c4 5138 	str.w	r5, [r4, #312]	@ 0x138
90006126:	f00c fe85 	bl	90012e34 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainter()
9000612a:	4b80      	ldr	r3, [pc, #512]	@ (9000632c <_ZN22pongGameScreenViewBaseC1Ev+0x2f0>)
        : widgetWidth(0)
9000612c:	f8a4 5188 	strh.w	r5, [r4, #392]	@ 0x188
90006130:	f8c4 3184 	str.w	r3, [r4, #388]	@ 0x184
90006134:	6833      	ldr	r3, [r6, #0]
90006136:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9000613a:	b1fa      	cbz	r2, 9000617c <_ZN22pongGameScreenViewBaseC1Ev+0x140>
9000613c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000613e:	2800      	cmp	r0, #0
90006140:	f000 80ca 	beq.w	900062d8 <_ZN22pongGameScreenViewBaseC1Ev+0x29c>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006144:	6803      	ldr	r3, [r0, #0]
90006146:	4d7a      	ldr	r5, [pc, #488]	@ (90006330 <_ZN22pongGameScreenViewBaseC1Ev+0x2f4>)
90006148:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000614a:	42aa      	cmp	r2, r5
9000614c:	d023      	beq.n	90006196 <_ZN22pongGameScreenViewBaseC1Ev+0x15a>
9000614e:	4790      	blx	r2
        return auxiliaryLCD;
90006150:	6833      	ldr	r3, [r6, #0]
90006152:	fab0 f680 	clz	r6, r0
90006156:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90006158:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
9000615a:	b140      	cbz	r0, 9000616e <_ZN22pongGameScreenViewBaseC1Ev+0x132>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000615c:	6803      	ldr	r3, [r0, #0]
9000615e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90006160:	42ab      	cmp	r3, r5
90006162:	d018      	beq.n	90006196 <_ZN22pongGameScreenViewBaseC1Ev+0x15a>
90006164:	4798      	blx	r3
90006166:	2800      	cmp	r0, #0
90006168:	bf08      	it	eq
9000616a:	f046 0601 	orreq.w	r6, r6, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
9000616e:	b996      	cbnz	r6, 90006196 <_ZN22pongGameScreenViewBaseC1Ev+0x15a>
90006170:	4b70      	ldr	r3, [pc, #448]	@ (90006334 <_ZN22pongGameScreenViewBaseC1Ev+0x2f8>)
90006172:	212c      	movs	r1, #44	@ 0x2c
90006174:	4a70      	ldr	r2, [pc, #448]	@ (90006338 <_ZN22pongGameScreenViewBaseC1Ev+0x2fc>)
90006176:	4871      	ldr	r0, [pc, #452]	@ (9000633c <_ZN22pongGameScreenViewBaseC1Ev+0x300>)
90006178:	f023 fcee 	bl	90029b58 <__assert_func>
        return instance->lcdRef;
9000617c:	6898      	ldr	r0, [r3, #8]
9000617e:	4d6c      	ldr	r5, [pc, #432]	@ (90006330 <_ZN22pongGameScreenViewBaseC1Ev+0x2f4>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90006180:	6802      	ldr	r2, [r0, #0]
90006182:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90006184:	42aa      	cmp	r2, r5
90006186:	d1e2      	bne.n	9000614e <_ZN22pongGameScreenViewBaseC1Ev+0x112>
        return auxiliaryLCD;
90006188:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
9000618a:	b120      	cbz	r0, 90006196 <_ZN22pongGameScreenViewBaseC1Ev+0x15a>
        bool compat = HAL::lcd().framebufferFormat() == format;
9000618c:	6803      	ldr	r3, [r0, #0]
9000618e:	2601      	movs	r6, #1
90006190:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90006192:	42ab      	cmp	r3, r5
90006194:	d1e6      	bne.n	90006164 <_ZN22pongGameScreenViewBaseC1Ev+0x128>
90006196:	4b6a      	ldr	r3, [pc, #424]	@ (90006340 <_ZN22pongGameScreenViewBaseC1Ev+0x304>)
90006198:	2600      	movs	r6, #0
        color = newColor;
9000619a:	f04f 4a7f 	mov.w	sl, #4278190080	@ 0xff000000
        rect.x = x;
9000619e:	f8df b1d4 	ldr.w	fp, [pc, #468]	@ 90006374 <_ZN22pongGameScreenViewBaseC1Ev+0x338>
900061a2:	f8c4 3184 	str.w	r3, [r4, #388]	@ 0x184
900061a6:	3324      	adds	r3, #36	@ 0x24
900061a8:	1d25      	adds	r5, r4, #4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
900061aa:	f44f 51e1 	mov.w	r1, #7200	@ 0x1c20
900061ae:	f8c4 318c 	str.w	r3, [r4, #396]	@ 0x18c
900061b2:	f504 70d1 	add.w	r0, r4, #418	@ 0x1a2
900061b6:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
900061ba:	f00e ffef 	bl	9001519c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
900061be:	f104 0140 	add.w	r1, r4, #64	@ 0x40
900061c2:	4628      	mov	r0, r5
900061c4:	f8c4 a068 	str.w	sl, [r4, #104]	@ 0x68
900061c8:	e9c4 6b11 	strd	r6, fp, [r4, #68]	@ 0x44
900061cc:	f00a f8d0 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900061d0:	f104 016c 	add.w	r1, r4, #108	@ 0x6c
900061d4:	f8c4 a094 	str.w	sl, [r4, #148]	@ 0x94
900061d8:	4628      	mov	r0, r5
900061da:	f8c4 b074 	str.w	fp, [r4, #116]	@ 0x74
    bouncesTextArea.setXY(103, 112);
900061de:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
900061e2:	6726      	str	r6, [r4, #112]	@ 0x70
900061e4:	f00a f8c4 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setX(x);
900061e8:	f8d4 3098 	ldr.w	r3, [r4, #152]	@ 0x98
900061ec:	4955      	ldr	r1, [pc, #340]	@ (90006344 <_ZN22pongGameScreenViewBaseC1Ev+0x308>)
        boundingArea = calculateBoundingArea();
900061ee:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
        rect.x = x;
900061f2:	4b55      	ldr	r3, [pc, #340]	@ (90006348 <_ZN22pongGameScreenViewBaseC1Ev+0x30c>)
900061f4:	428a      	cmp	r2, r1
        linespace = space;
900061f6:	f8a4 60cc 	strh.w	r6, [r4, #204]	@ 0xcc
900061fa:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
        color = newColor;
900061fe:	f04f 33ff 	mov.w	r3, #4294967295
90006202:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
90006206:	d16f      	bne.n	900062e8 <_ZN22pongGameScreenViewBaseC1Ev+0x2ac>
        boundingArea = calculateBoundingArea();
90006208:	f8c4 60dc 	str.w	r6, [r4, #220]	@ 0xdc
9000620c:	e9c4 6335 	strd	r6, r3, [r4, #212]	@ 0xd4
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006210:	4b4e      	ldr	r3, [pc, #312]	@ (9000634c <_ZN22pongGameScreenViewBaseC1Ev+0x310>)
    Unicode::snprintf(bouncesTextAreaBuffer, BOUNCESTEXTAREA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QM8E).getText());
90006212:	f504 76cc 	add.w	r6, r4, #408	@ 0x198
90006216:	681b      	ldr	r3, [r3, #0]
90006218:	2b00      	cmp	r3, #0
9000621a:	d076      	beq.n	9000630a <_ZN22pongGameScreenViewBaseC1Ev+0x2ce>
        return typedTextId < numberOfTypedTexts;
9000621c:	4b4c      	ldr	r3, [pc, #304]	@ (90006350 <_ZN22pongGameScreenViewBaseC1Ev+0x314>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000621e:	881b      	ldrh	r3, [r3, #0]
90006220:	2b04      	cmp	r3, #4
90006222:	d96c      	bls.n	900062fe <_ZN22pongGameScreenViewBaseC1Ev+0x2c2>
        return texts->getText(typedTextId);
90006224:	4b4b      	ldr	r3, [pc, #300]	@ (90006354 <_ZN22pongGameScreenViewBaseC1Ev+0x318>)
90006226:	2104      	movs	r1, #4
90006228:	6818      	ldr	r0, [r3, #0]
9000622a:	f7ff fb1f 	bl	9000586c <_ZNK8touchgfx5Texts7getTextEt>
9000622e:	4a4a      	ldr	r2, [pc, #296]	@ (90006358 <_ZN22pongGameScreenViewBaseC1Ev+0x31c>)
90006230:	4603      	mov	r3, r0
90006232:	2105      	movs	r1, #5
90006234:	4630      	mov	r0, r6
90006236:	f014 f809 	bl	9001a24c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    bouncesTextArea.resizeToCurrentText();
9000623a:	4650      	mov	r0, sl
        wc1 = value;
9000623c:	f8c4 60e0 	str.w	r6, [r4, #224]	@ 0xe0
90006240:	f04f 36ff 	mov.w	r6, #4294967295
90006244:	f00d fe84 	bl	90013f50 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
90006248:	2305      	movs	r3, #5
    bouncesTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DGFA));
9000624a:	a904      	add	r1, sp, #16
9000624c:	4650      	mov	r0, sl
9000624e:	9704      	str	r7, [sp, #16]
90006250:	2700      	movs	r7, #0
90006252:	f8ad 3014 	strh.w	r3, [sp, #20]
90006256:	f00d fe9b 	bl	90013f90 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
9000625a:	2361      	movs	r3, #97	@ 0x61
9000625c:	4651      	mov	r1, sl
9000625e:	f8df a118 	ldr.w	sl, [pc, #280]	@ 90006378 <_ZN22pongGameScreenViewBaseC1Ev+0x33c>
90006262:	4628      	mov	r0, r5
90006264:	f884 30ce 	strb.w	r3, [r4, #206]	@ 0xce
90006268:	f00a f882 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000626c:	f104 01e4 	add.w	r1, r4, #228	@ 0xe4
90006270:	4628      	mov	r0, r5
90006272:	f8c4 610c 	str.w	r6, [r4, #268]	@ 0x10c
90006276:	e9c4 7a3a 	strd	r7, sl, [r4, #232]	@ 0xe8
9000627a:	f00a f879 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000627e:	4b37      	ldr	r3, [pc, #220]	@ (9000635c <_ZN22pongGameScreenViewBaseC1Ev+0x320>)
90006280:	f504 7188 	add.w	r1, r4, #272	@ 0x110
90006284:	4628      	mov	r0, r5
90006286:	f8c4 3114 	str.w	r3, [r4, #276]	@ 0x114
9000628a:	f8c4 a118 	str.w	sl, [r4, #280]	@ 0x118
9000628e:	f8c4 6138 	str.w	r6, [r4, #312]	@ 0x138
90006292:	f00a f86d 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
     */
    template <typename T>
    void setArc(const T startAngle, const T endAngle)
    {
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
90006296:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
9000629a:	4a31      	ldr	r2, [pc, #196]	@ (90006360 <_ZN22pongGameScreenViewBaseC1Ev+0x324>)
9000629c:	4628      	mov	r0, r5
9000629e:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
        this->circleCenterX = CWRUtil::toQ5(x);
900062a2:	f44f 73a0 	mov.w	r3, #320	@ 0x140
900062a6:	4641      	mov	r1, r8
        canvasPainter = &painter;
900062a8:	f8c4 9164 	str.w	r9, [r4, #356]	@ 0x164
        this->circleRadius = CWRUtil::toQ5(r);
900062ac:	f8c4 3170 	str.w	r3, [r4, #368]	@ 0x170
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
900062b0:	f8c4 717c 	str.w	r7, [r4, #380]	@ 0x17c
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
900062b4:	f8c4 7174 	str.w	r7, [r4, #372]	@ 0x174
900062b8:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
900062bc:	f8a4 6194 	strh.w	r6, [r4, #404]	@ 0x194
        this->circleCenterY = CWRUtil::toQ5(y);
900062c0:	e9c4 335a 	strd	r3, r3, [r4, #360]	@ 0x168
900062c4:	f04f 1314 	mov.w	r3, #1310740	@ 0x140014
900062c8:	e9c4 2350 	strd	r2, r3, [r4, #320]	@ 0x140
900062cc:	f00a f850 	bl	90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900062d0:	4620      	mov	r0, r4
900062d2:	b007      	add	sp, #28
900062d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return instance->lcdRef;
900062d8:	6898      	ldr	r0, [r3, #8]
900062da:	4d15      	ldr	r5, [pc, #84]	@ (90006330 <_ZN22pongGameScreenViewBaseC1Ev+0x2f4>)
900062dc:	6803      	ldr	r3, [r0, #0]
900062de:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900062e0:	42aa      	cmp	r2, r5
900062e2:	f43f af58 	beq.w	90006196 <_ZN22pongGameScreenViewBaseC1Ev+0x15a>
900062e6:	e732      	b.n	9000614e <_ZN22pongGameScreenViewBaseC1Ev+0x112>
        boundingArea = calculateBoundingArea();
900062e8:	466e      	mov	r6, sp
900062ea:	4651      	mov	r1, sl
900062ec:	4630      	mov	r0, r6
900062ee:	4790      	blx	r2
900062f0:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
900062f4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
900062f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
900062fc:	e788      	b.n	90006210 <_ZN22pongGameScreenViewBaseC1Ev+0x1d4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900062fe:	4b19      	ldr	r3, [pc, #100]	@ (90006364 <_ZN22pongGameScreenViewBaseC1Ev+0x328>)
90006300:	2161      	movs	r1, #97	@ 0x61
90006302:	4a19      	ldr	r2, [pc, #100]	@ (90006368 <_ZN22pongGameScreenViewBaseC1Ev+0x32c>)
90006304:	4819      	ldr	r0, [pc, #100]	@ (9000636c <_ZN22pongGameScreenViewBaseC1Ev+0x330>)
90006306:	f023 fc27 	bl	90029b58 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000630a:	4b19      	ldr	r3, [pc, #100]	@ (90006370 <_ZN22pongGameScreenViewBaseC1Ev+0x334>)
9000630c:	2160      	movs	r1, #96	@ 0x60
9000630e:	4a16      	ldr	r2, [pc, #88]	@ (90006368 <_ZN22pongGameScreenViewBaseC1Ev+0x32c>)
90006310:	4816      	ldr	r0, [pc, #88]	@ (9000636c <_ZN22pongGameScreenViewBaseC1Ev+0x330>)
90006312:	f023 fc21 	bl	90029b58 <__assert_func>
90006316:	bf00      	nop
90006318:	9002d1d0 	.word	0x9002d1d0
9000631c:	9002daec 	.word	0x9002daec
90006320:	9002c514 	.word	0x9002c514
90006324:	240233d4 	.word	0x240233d4
90006328:	9002d140 	.word	0x9002d140
9000632c:	9002c300 	.word	0x9002c300
90006330:	90002ec1 	.word	0x90002ec1
90006334:	9002c1f8 	.word	0x9002c1f8
90006338:	9002c258 	.word	0x9002c258
9000633c:	9002c294 	.word	0x9002c294
90006340:	9002d81c 	.word	0x9002d81c
90006344:	90005e5d 	.word	0x90005e5d
90006348:	00700067 	.word	0x00700067
9000634c:	2402342c 	.word	0x2402342c
90006350:	24023430 	.word	0x24023430
90006354:	24023438 	.word	0x24023438
90006358:	9002d134 	.word	0x9002d134
9000635c:	00c001cc 	.word	0x00c001cc
90006360:	007e00e6 	.word	0x007e00e6
90006364:	9002d0a8 	.word	0x9002d0a8
90006368:	9002d0e8 	.word	0x9002d0e8
9000636c:	9002cd8c 	.word	0x9002cd8c
90006370:	9002cd0c 	.word	0x9002cd0c
90006374:	011001e0 	.word	0x011001e0
90006378:	00500014 	.word	0x00500014

9000637c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
9000637c:	4770      	bx	lr
9000637e:	bf00      	nop

90006380 <_ZN19FrontendApplicationD0Ev>:
90006380:	b510      	push	{r4, lr}
90006382:	4604      	mov	r4, r0
90006384:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90006388:	f023 f870 	bl	9002946c <_ZdlPvj>
9000638c:	4620      	mov	r0, r4
9000638e:	bd10      	pop	{r4, pc}

90006390 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90006390:	b510      	push	{r4, lr}
90006392:	4604      	mov	r4, r0
    {
        model.tick();
90006394:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
90006398:	f000 f9ee 	bl	90006778 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
9000639c:	4620      	mov	r0, r4
    }
9000639e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
900063a2:	f010 bc81 	b.w	90016ca8 <_ZN8touchgfx11Application15handleTickEventEv>
900063a6:	bf00      	nop

900063a8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
900063a8:	b510      	push	{r4, lr}
900063aa:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
900063ac:	f7fe fd1a 	bl	90004de4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
900063b0:	4b01      	ldr	r3, [pc, #4]	@ (900063b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
900063b2:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
900063b4:	6023      	str	r3, [r4, #0]
}
900063b6:	bd10      	pop	{r4, pc}
900063b8:	9002d208 	.word	0x9002d208

900063bc <_ZN13ModelListener10redrawPongEiiiiiii>:
    }

    virtual void redrawPong(int leftPlayerY, int rightPlayerY, int ballX, int ballY, int playerWidth, int playerLength, int ballRadius) { }
900063bc:	4770      	bx	lr
900063be:	bf00      	nop

900063c0 <_ZN13ModelListener13redrawBouncesEi>:
    virtual void redrawBounces(int bounces) { }
900063c0:	4770      	bx	lr
900063c2:	bf00      	nop

900063c4 <_ZN13ModelListener11endPongGameEv>:
    virtual void endPongGame() { }
900063c4:	4770      	bx	lr
900063c6:	bf00      	nop

900063c8 <_ZN5ModelC1Ev>:
extern "C"
{
	extern osMessageQueueId_t buttonQueueHandle;
}

Model::Model() : modelListener(0)
900063c8:	2200      	movs	r2, #0
900063ca:	6002      	str	r2, [r0, #0]
{

}
900063cc:	4770      	bx	lr
900063ce:	bf00      	nop

900063d0 <_ZN5Model22shouldDoHardDifficultyEb>:
// Hard AI variables
int lastHitY = -100;
int lastBallYDirection = 0;

void Model::shouldDoHardDifficulty(bool selectedHard) {
	hardDifficulty = selectedHard;
900063d0:	4b01      	ldr	r3, [pc, #4]	@ (900063d8 <_ZN5Model22shouldDoHardDifficultyEb+0x8>)
900063d2:	7019      	strb	r1, [r3, #0]
}
900063d4:	4770      	bx	lr
900063d6:	bf00      	nop
900063d8:	240093bc 	.word	0x240093bc

900063dc <_ZN5Model19shouldDoMultiplayerEb>:

void Model::shouldDoMultiplayer(bool selectedMultiplayer) {
	multiplayer = selectedMultiplayer;
900063dc:	4b01      	ldr	r3, [pc, #4]	@ (900063e4 <_ZN5Model19shouldDoMultiplayerEb+0x8>)
900063de:	7019      	strb	r1, [r3, #0]
}
900063e0:	4770      	bx	lr
900063e2:	bf00      	nop
900063e4:	240093bd 	.word	0x240093bd

900063e8 <_ZN5Model9pongSetupEiiiii>:

void Model::pongSetup(int ballRadius1, int playerWidth1, int playerHeight1, int screenWidth1, int screenHeight1) {
900063e8:	b410      	push	{r4}
	ballRadius = ballRadius1;
900063ea:	4c07      	ldr	r4, [pc, #28]	@ (90006408 <_ZN5Model9pongSetupEiiiii+0x20>)
void Model::pongSetup(int ballRadius1, int playerWidth1, int playerHeight1, int screenWidth1, int screenHeight1) {
900063ec:	9802      	ldr	r0, [sp, #8]
	ballRadius = ballRadius1;
900063ee:	6021      	str	r1, [r4, #0]
	playerWidth = playerWidth1;
900063f0:	4906      	ldr	r1, [pc, #24]	@ (9000640c <_ZN5Model9pongSetupEiiiii+0x24>)
900063f2:	600a      	str	r2, [r1, #0]
	playerLength = playerHeight1;
900063f4:	4906      	ldr	r1, [pc, #24]	@ (90006410 <_ZN5Model9pongSetupEiiiii+0x28>)
	screenWidth = screenWidth1;
900063f6:	4a07      	ldr	r2, [pc, #28]	@ (90006414 <_ZN5Model9pongSetupEiiiii+0x2c>)
	playerLength = playerHeight1;
900063f8:	600b      	str	r3, [r1, #0]
	screenWidth = screenWidth1;
900063fa:	9901      	ldr	r1, [sp, #4]
	screenHeight = screenHeight1;
900063fc:	4b06      	ldr	r3, [pc, #24]	@ (90006418 <_ZN5Model9pongSetupEiiiii+0x30>)
}
900063fe:	f85d 4b04 	ldr.w	r4, [sp], #4
	screenWidth = screenWidth1;
90006402:	6011      	str	r1, [r2, #0]
	screenHeight = screenHeight1;
90006404:	6018      	str	r0, [r3, #0]
}
90006406:	4770      	bx	lr
90006408:	240093b8 	.word	0x240093b8
9000640c:	240093b4 	.word	0x240093b4
90006410:	240093b0 	.word	0x240093b0
90006414:	2400005c 	.word	0x2400005c
90006418:	24000058 	.word	0x24000058

9000641c <_ZN5Model9pongStartEv>:

void Model::pongStart() {
	ballSpeed = ballSpeedDefault;
9000641c:	490d      	ldr	r1, [pc, #52]	@ (90006454 <_ZN5Model9pongStartEv+0x38>)
9000641e:	2002      	movs	r0, #2
	ballSpeedAddCounter = 0;
90006420:	2300      	movs	r3, #0
	bounces = 0;
	ballX = ballXDefault;
	ballY = ballYDefault;
90006422:	4a0d      	ldr	r2, [pc, #52]	@ (90006458 <_ZN5Model9pongStartEv+0x3c>)
void Model::pongStart() {
90006424:	b410      	push	{r4}
	ballSpeed = ballSpeedDefault;
90006426:	6008      	str	r0, [r1, #0]
	ballX = ballXDefault;
90006428:	4c0c      	ldr	r4, [pc, #48]	@ (9000645c <_ZN5Model9pongStartEv+0x40>)
	ballSpeedAddCounter = 0;
9000642a:	480d      	ldr	r0, [pc, #52]	@ (90006460 <_ZN5Model9pongStartEv+0x44>)
	bounces = 0;
9000642c:	490d      	ldr	r1, [pc, #52]	@ (90006464 <_ZN5Model9pongStartEv+0x48>)
	ballSpeedAddCounter = 0;
9000642e:	6003      	str	r3, [r0, #0]
	bounces = 0;
90006430:	600b      	str	r3, [r1, #0]
	ballX = ballXDefault;
90006432:	6824      	ldr	r4, [r4, #0]
	ballY = ballYDefault;
90006434:	6812      	ldr	r2, [r2, #0]
	ballX = ballXDefault;
90006436:	480c      	ldr	r0, [pc, #48]	@ (90006468 <_ZN5Model9pongStartEv+0x4c>)
	ballY = ballYDefault;
90006438:	4b0c      	ldr	r3, [pc, #48]	@ (9000646c <_ZN5Model9pongStartEv+0x50>)
	ballX = ballXDefault;
9000643a:	6004      	str	r4, [r0, #0]
	lastHitY = -100;
9000643c:	f06f 0063 	mvn.w	r0, #99	@ 0x63
	ballY = ballYDefault;
90006440:	601a      	str	r2, [r3, #0]

	gameRunning = true;
90006442:	2201      	movs	r2, #1
	lastHitY = -100;
90006444:	490a      	ldr	r1, [pc, #40]	@ (90006470 <_ZN5Model9pongStartEv+0x54>)
	gameRunning = true;
90006446:	4b0b      	ldr	r3, [pc, #44]	@ (90006474 <_ZN5Model9pongStartEv+0x58>)
}
90006448:	f85d 4b04 	ldr.w	r4, [sp], #4
	lastHitY = -100;
9000644c:	6008      	str	r0, [r1, #0]
	gameRunning = true;
9000644e:	701a      	strb	r2, [r3, #0]
}
90006450:	4770      	bx	lr
90006452:	bf00      	nop
90006454:	24000054 	.word	0x24000054
90006458:	24009390 	.word	0x24009390
9000645c:	24009394 	.word	0x24009394
90006460:	2400939c 	.word	0x2400939c
90006464:	24009398 	.word	0x24009398
90006468:	2400938c 	.word	0x2400938c
9000646c:	24009388 	.word	0x24009388
90006470:	24000048 	.word	0x24000048
90006474:	24000060 	.word	0x24000060

90006478 <_ZN5Model23receiveTouchDestinationEi>:
	redrawPong();
}

void Model::receiveTouchDestination(int y) {
	int player=1;
	if (multiplayer) {
90006478:	4b04      	ldr	r3, [pc, #16]	@ (9000648c <_ZN5Model23receiveTouchDestinationEi+0x14>)
9000647a:	781b      	ldrb	r3, [r3, #0]
9000647c:	b913      	cbnz	r3, 90006484 <_ZN5Model23receiveTouchDestinationEi+0xc>
	}
}

void Model::changePlayerDestination(int y, int player) {
	if (player==1) {
		leftPlayerDestinationY = y;
9000647e:	4b04      	ldr	r3, [pc, #16]	@ (90006490 <_ZN5Model23receiveTouchDestinationEi+0x18>)
90006480:	6019      	str	r1, [r3, #0]
90006482:	4770      	bx	lr
	} else {
		rightPlayerDestinationY = y;
90006484:	4b03      	ldr	r3, [pc, #12]	@ (90006494 <_ZN5Model23receiveTouchDestinationEi+0x1c>)
90006486:	6019      	str	r1, [r3, #0]
}
90006488:	4770      	bx	lr
9000648a:	bf00      	nop
9000648c:	240093bd 	.word	0x240093bd
90006490:	240093a8 	.word	0x240093a8
90006494:	240093a0 	.word	0x240093a0

90006498 <_ZN5Model15updateAIposHardEv>:
		updateAIposHard();
	}
}

void Model::updateAIposHard() {
	if (lastHitY == -100) {
90006498:	4b1c      	ldr	r3, [pc, #112]	@ (9000650c <_ZN5Model15updateAIposHardEv+0x74>)
9000649a:	681b      	ldr	r3, [r3, #0]
9000649c:	f113 0f64 	cmn.w	r3, #100	@ 0x64
900064a0:	d029      	beq.n	900064f6 <_ZN5Model15updateAIposHardEv+0x5e>
		updateAIposNormal();
		return;
	}

	int rawBallYDelta = 2*(screenWidth - 2*playerWidth - 2*ballRadius) * lastBallYDirection;
900064a2:	4a1b      	ldr	r2, [pc, #108]	@ (90006510 <_ZN5Model15updateAIposHardEv+0x78>)
900064a4:	491b      	ldr	r1, [pc, #108]	@ (90006514 <_ZN5Model15updateAIposHardEv+0x7c>)
900064a6:	481c      	ldr	r0, [pc, #112]	@ (90006518 <_ZN5Model15updateAIposHardEv+0x80>)
900064a8:	6809      	ldr	r1, [r1, #0]
900064aa:	6812      	ldr	r2, [r2, #0]
void Model::updateAIposHard() {
900064ac:	b430      	push	{r4, r5}
	int rawBallYDelta = 2*(screenWidth - 2*playerWidth - 2*ballRadius) * lastBallYDirection;
900064ae:	eba2 0241 	sub.w	r2, r2, r1, lsl #1
900064b2:	6804      	ldr	r4, [r0, #0]
900064b4:	4d19      	ldr	r5, [pc, #100]	@ (9000651c <_ZN5Model15updateAIposHardEv+0x84>)
900064b6:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
	int expectedBallY = lastHitY + rawBallYDelta;
	int bounceCount = 0;

	while (expectedBallY > screenHeight) {
900064ba:	4819      	ldr	r0, [pc, #100]	@ (90006520 <_ZN5Model15updateAIposHardEv+0x88>)
	int rawBallYDelta = 2*(screenWidth - 2*playerWidth - 2*ballRadius) * lastBallYDirection;
900064bc:	682d      	ldr	r5, [r5, #0]
900064be:	0061      	lsls	r1, r4, #1
	while (expectedBallY > screenHeight) {
900064c0:	6800      	ldr	r0, [r0, #0]
	int rawBallYDelta = 2*(screenWidth - 2*playerWidth - 2*ballRadius) * lastBallYDirection;
900064c2:	fb05 f202 	mul.w	r2, r5, r2
	int expectedBallY = lastHitY + rawBallYDelta;
900064c6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
	while (expectedBallY > screenHeight) {
900064ca:	4298      	cmp	r0, r3
900064cc:	da18      	bge.n	90006500 <_ZN5Model15updateAIposHardEv+0x68>
		expectedBallY -= screenHeight - 2*ballRadius;
		bounceCount++;
	}
	while (expectedBallY < 0) {
		expectedBallY += screenHeight - 2*ballRadius;
900064ce:	1a41      	subs	r1, r0, r1
	int bounceCount = 0;
900064d0:	2200      	movs	r2, #0
		expectedBallY -= screenHeight - 2*ballRadius;
900064d2:	1a5b      	subs	r3, r3, r1
		bounceCount++;
900064d4:	3201      	adds	r2, #1
	while (expectedBallY > screenHeight) {
900064d6:	4298      	cmp	r0, r3
900064d8:	dbfb      	blt.n	900064d2 <_ZN5Model15updateAIposHardEv+0x3a>
	while (expectedBallY < 0) {
900064da:	2b00      	cmp	r3, #0
900064dc:	da03      	bge.n	900064e6 <_ZN5Model15updateAIposHardEv+0x4e>
900064de:	185b      	adds	r3, r3, r1
		bounceCount++;
900064e0:	f102 0201 	add.w	r2, r2, #1
	while (expectedBallY < 0) {
900064e4:	d4fb      	bmi.n	900064de <_ZN5Model15updateAIposHardEv+0x46>
	}

	if (bounceCount%2==0) {
900064e6:	07d2      	lsls	r2, r2, #31
900064e8:	d501      	bpl.n	900064ee <_ZN5Model15updateAIposHardEv+0x56>
		rightPlayerDestinationY = expectedBallY;
	} else {
		rightPlayerDestinationY = (screenHeight - ballRadius) - expectedBallY;
900064ea:	1b00      	subs	r0, r0, r4
900064ec:	1ac3      	subs	r3, r0, r3
	}
}

void Model::updateAIposNormal() {
	rightPlayerDestinationY = ballY;
900064ee:	4a0d      	ldr	r2, [pc, #52]	@ (90006524 <_ZN5Model15updateAIposHardEv+0x8c>)
}
900064f0:	bc30      	pop	{r4, r5}
	rightPlayerDestinationY = ballY;
900064f2:	6013      	str	r3, [r2, #0]
}
900064f4:	4770      	bx	lr
	rightPlayerDestinationY = ballY;
900064f6:	4b0c      	ldr	r3, [pc, #48]	@ (90006528 <_ZN5Model15updateAIposHardEv+0x90>)
900064f8:	4a0a      	ldr	r2, [pc, #40]	@ (90006524 <_ZN5Model15updateAIposHardEv+0x8c>)
900064fa:	681b      	ldr	r3, [r3, #0]
900064fc:	6013      	str	r3, [r2, #0]
900064fe:	4770      	bx	lr
	while (expectedBallY < 0) {
90006500:	2b00      	cmp	r3, #0
90006502:	daf4      	bge.n	900064ee <_ZN5Model15updateAIposHardEv+0x56>
		expectedBallY += screenHeight - 2*ballRadius;
90006504:	1a41      	subs	r1, r0, r1
	int bounceCount = 0;
90006506:	2200      	movs	r2, #0
90006508:	e7e9      	b.n	900064de <_ZN5Model15updateAIposHardEv+0x46>
9000650a:	bf00      	nop
9000650c:	24000048 	.word	0x24000048
90006510:	2400005c 	.word	0x2400005c
90006514:	240093b4 	.word	0x240093b4
90006518:	240093b8 	.word	0x240093b8
9000651c:	24009384 	.word	0x24009384
90006520:	24000058 	.word	0x24000058
90006524:	240093a0 	.word	0x240093a0
90006528:	24009388 	.word	0x24009388

9000652c <_ZN5Model20updatePlayerPositionEv>:
}

void Model::updatePlayerPosition() {
	// Update left player
	int moveDistance = leftPlayerDestinationY - leftPlayerY;
9000652c:	481f      	ldr	r0, [pc, #124]	@ (900065ac <_ZN5Model20updatePlayerPositionEv+0x80>)
9000652e:	4920      	ldr	r1, [pc, #128]	@ (900065b0 <_ZN5Model20updatePlayerPositionEv+0x84>)
90006530:	6802      	ldr	r2, [r0, #0]
90006532:	6809      	ldr	r1, [r1, #0]
	}
	if (moveDistance < -maxPlayerMoveSpeed) {
		moveDistance = -maxPlayerMoveSpeed;
	}
	leftPlayerY += moveDistance;
	if (leftPlayerY-playerLength/2 < 0) {
90006534:	4b1f      	ldr	r3, [pc, #124]	@ (900065b4 <_ZN5Model20updatePlayerPositionEv+0x88>)
	int moveDistance = leftPlayerDestinationY - leftPlayerY;
90006536:	1a89      	subs	r1, r1, r2
	if (leftPlayerY-playerLength/2 < 0) {
90006538:	681b      	ldr	r3, [r3, #0]
void Model::updatePlayerPosition() {
9000653a:	b430      	push	{r4, r5}
	if (moveDistance < -maxPlayerMoveSpeed) {
9000653c:	f06f 0409 	mvn.w	r4, #9
90006540:	42a1      	cmp	r1, r4
90006542:	bfb8      	it	lt
90006544:	4621      	movlt	r1, r4
	leftPlayerY += moveDistance;
90006546:	290a      	cmp	r1, #10
90006548:	bfd4      	ite	le
9000654a:	1852      	addle	r2, r2, r1
9000654c:	320a      	addgt	r2, #10
	if (leftPlayerY-playerLength/2 < 0) {
9000654e:	2b00      	cmp	r3, #0
90006550:	bfb8      	it	lt
90006552:	3301      	addlt	r3, #1
	leftPlayerY += moveDistance;
90006554:	6002      	str	r2, [r0, #0]
	if (leftPlayerY-playerLength/2 < 0) {
90006556:	105b      	asrs	r3, r3, #1
90006558:	1ad4      	subs	r4, r2, r3
9000655a:	4259      	negs	r1, r3
9000655c:	2c00      	cmp	r4, #0
9000655e:	da01      	bge.n	90006564 <_ZN5Model20updatePlayerPositionEv+0x38>
		leftPlayerY = playerLength/2;
90006560:	461a      	mov	r2, r3
90006562:	6003      	str	r3, [r0, #0]
	}
	if (leftPlayerY + playerLength/2 > screenHeight) {
90006564:	4c14      	ldr	r4, [pc, #80]	@ (900065b8 <_ZN5Model20updatePlayerPositionEv+0x8c>)
90006566:	1a52      	subs	r2, r2, r1
90006568:	6824      	ldr	r4, [r4, #0]
9000656a:	4294      	cmp	r4, r2
9000656c:	da01      	bge.n	90006572 <_ZN5Model20updatePlayerPositionEv+0x46>
		leftPlayerY = screenHeight-playerLength/2;
9000656e:	190a      	adds	r2, r1, r4
90006570:	6002      	str	r2, [r0, #0]
	}

	// Update right player
	moveDistance = rightPlayerDestinationY - rightPlayerY;
90006572:	4d12      	ldr	r5, [pc, #72]	@ (900065bc <_ZN5Model20updatePlayerPositionEv+0x90>)
	if (moveDistance > maxPlayerMoveSpeed) {
		moveDistance = maxPlayerMoveSpeed;
	}
	if (moveDistance < -maxPlayerMoveSpeed) {
90006574:	f06f 0c09 	mvn.w	ip, #9
	moveDistance = rightPlayerDestinationY - rightPlayerY;
90006578:	4811      	ldr	r0, [pc, #68]	@ (900065c0 <_ZN5Model20updatePlayerPositionEv+0x94>)
9000657a:	682a      	ldr	r2, [r5, #0]
9000657c:	6800      	ldr	r0, [r0, #0]
9000657e:	1a80      	subs	r0, r0, r2
	if (moveDistance < -maxPlayerMoveSpeed) {
90006580:	4560      	cmp	r0, ip
90006582:	bfb8      	it	lt
90006584:	4660      	movlt	r0, ip
		moveDistance = -maxPlayerMoveSpeed;
	}
	rightPlayerY += moveDistance;
90006586:	280a      	cmp	r0, #10
90006588:	bfd4      	ite	le
9000658a:	1812      	addle	r2, r2, r0
9000658c:	320a      	addgt	r2, #10
	if (rightPlayerY-playerLength/2 < 0) {
9000658e:	42d1      	cmn	r1, r2
90006590:	bf54      	ite	pl
90006592:	4613      	movpl	r3, r2
90006594:	461a      	movmi	r2, r3
		rightPlayerY = playerLength/2;
	}
	if (rightPlayerY + playerLength/2 > screenHeight) {
90006596:	1a5b      	subs	r3, r3, r1
90006598:	429c      	cmp	r4, r3
9000659a:	db02      	blt.n	900065a2 <_ZN5Model20updatePlayerPositionEv+0x76>
	rightPlayerY += moveDistance;
9000659c:	602a      	str	r2, [r5, #0]
		rightPlayerY = screenHeight-playerLength/2;
	}
}
9000659e:	bc30      	pop	{r4, r5}
900065a0:	4770      	bx	lr
		rightPlayerY = screenHeight-playerLength/2;
900065a2:	4421      	add	r1, r4
900065a4:	6029      	str	r1, [r5, #0]
}
900065a6:	bc30      	pop	{r4, r5}
900065a8:	4770      	bx	lr
900065aa:	bf00      	nop
900065ac:	240093ac 	.word	0x240093ac
900065b0:	240093a8 	.word	0x240093a8
900065b4:	240093b0 	.word	0x240093b0
900065b8:	24000058 	.word	0x24000058
900065bc:	240093a4 	.word	0x240093a4
900065c0:	240093a0 	.word	0x240093a0

900065c4 <_ZN5Model14checkCollisionEv>:
	ballY += ballSpeed * ballVerticalDirection;
}

void Model::checkCollision() {
	// Top collision
	if (ballY <= 0 + ballRadius) {
900065c4:	4a58      	ldr	r2, [pc, #352]	@ (90006728 <_ZN5Model14checkCollisionEv+0x164>)
void Model::checkCollision() {
900065c6:	b5f0      	push	{r4, r5, r6, r7, lr}
	if (ballY <= 0 + ballRadius) {
900065c8:	4c58      	ldr	r4, [pc, #352]	@ (9000672c <_ZN5Model14checkCollisionEv+0x168>)
900065ca:	6812      	ldr	r2, [r2, #0]
900065cc:	6823      	ldr	r3, [r4, #0]
900065ce:	4293      	cmp	r3, r2
900065d0:	dc05      	bgt.n	900065de <_ZN5Model14checkCollisionEv+0x1a>
		ballY = ballRadius + (ballRadius - ballY);
900065d2:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
		ballVerticalDirection = 1;
900065d6:	4956      	ldr	r1, [pc, #344]	@ (90006730 <_ZN5Model14checkCollisionEv+0x16c>)
900065d8:	2501      	movs	r5, #1
		ballY = ballRadius + (ballRadius - ballY);
900065da:	6023      	str	r3, [r4, #0]
		ballVerticalDirection = 1;
900065dc:	600d      	str	r5, [r1, #0]
	}
	// Bottom collision
	if (ballY >= screenHeight - ballRadius) {
900065de:	4955      	ldr	r1, [pc, #340]	@ (90006734 <_ZN5Model14checkCollisionEv+0x170>)
900065e0:	6809      	ldr	r1, [r1, #0]
900065e2:	1a89      	subs	r1, r1, r2
900065e4:	4299      	cmp	r1, r3
900065e6:	dc07      	bgt.n	900065f8 <_ZN5Model14checkCollisionEv+0x34>
		ballY -= 2*( ballY - (screenHeight-ballRadius) );
900065e8:	1a59      	subs	r1, r3, r1
900065ea:	eba3 0341 	sub.w	r3, r3, r1, lsl #1
		ballVerticalDirection = -1;
900065ee:	4950      	ldr	r1, [pc, #320]	@ (90006730 <_ZN5Model14checkCollisionEv+0x16c>)
		ballY -= 2*( ballY - (screenHeight-ballRadius) );
900065f0:	6023      	str	r3, [r4, #0]
		ballVerticalDirection = -1;
900065f2:	f04f 34ff 	mov.w	r4, #4294967295
900065f6:	600c      	str	r4, [r1, #0]
	}

	// Left paddle collision - Check if ball left enough and moving left
	if (ballHorizontalDirection == -1 && ballX <= 0 + playerWidth + ballRadius) {
900065f8:	4d4f      	ldr	r5, [pc, #316]	@ (90006738 <_ZN5Model14checkCollisionEv+0x174>)
900065fa:	4950      	ldr	r1, [pc, #320]	@ (9000673c <_ZN5Model14checkCollisionEv+0x178>)
900065fc:	682c      	ldr	r4, [r5, #0]
900065fe:	6809      	ldr	r1, [r1, #0]
90006600:	1c66      	adds	r6, r4, #1
90006602:	d030      	beq.n	90006666 <_ZN5Model14checkCollisionEv+0xa2>
			return;
		}
	}

	// Right player collision
	if (ballHorizontalDirection == 1 && ballX >= screenWidth - playerWidth - ballRadius) {
90006604:	2c01      	cmp	r4, #1
90006606:	d11a      	bne.n	9000663e <_ZN5Model14checkCollisionEv+0x7a>
90006608:	4c4d      	ldr	r4, [pc, #308]	@ (90006740 <_ZN5Model14checkCollisionEv+0x17c>)
9000660a:	4e4e      	ldr	r6, [pc, #312]	@ (90006744 <_ZN5Model14checkCollisionEv+0x180>)
9000660c:	6824      	ldr	r4, [r4, #0]
9000660e:	6836      	ldr	r6, [r6, #0]
90006610:	1ba4      	subs	r4, r4, r6
90006612:	1aa4      	subs	r4, r4, r2
90006614:	428c      	cmp	r4, r1
90006616:	dc12      	bgt.n	9000663e <_ZN5Model14checkCollisionEv+0x7a>
		// Check vertical collision - Check if bottom of ball is below top of player and top of ball is above bottom of player
		if ( (ballY + ballRadius >= rightPlayerY - playerLength/2) && (ballY - ballRadius <= rightPlayerY + playerLength/2) ) {
90006618:	4c4b      	ldr	r4, [pc, #300]	@ (90006748 <_ZN5Model14checkCollisionEv+0x184>)
9000661a:	eb02 0c03 	add.w	ip, r2, r3
9000661e:	4e4b      	ldr	r6, [pc, #300]	@ (9000674c <_ZN5Model14checkCollisionEv+0x188>)
90006620:	6824      	ldr	r4, [r4, #0]
90006622:	6836      	ldr	r6, [r6, #0]
90006624:	2c00      	cmp	r4, #0
90006626:	bfb8      	it	lt
90006628:	3401      	addlt	r4, #1
9000662a:	1064      	asrs	r4, r4, #1
9000662c:	4264      	negs	r4, r4
9000662e:	eb04 0e06 	add.w	lr, r4, r6
90006632:	45f4      	cmp	ip, lr
90006634:	db03      	blt.n	9000663e <_ZN5Model14checkCollisionEv+0x7a>
90006636:	1b36      	subs	r6, r6, r4
90006638:	1a9c      	subs	r4, r3, r2
9000663a:	42b4      	cmp	r4, r6
9000663c:	dd4b      	ble.n	900066d6 <_ZN5Model14checkCollisionEv+0x112>
		}
	}

	// Game over collision
	// Left
	if (ballX <= 0 + ballRadius) {
9000663e:	428a      	cmp	r2, r1
90006640:	da05      	bge.n	9000664e <_ZN5Model14checkCollisionEv+0x8a>
		endPongGame();
		return;
	}
	// Right
	if (ballX >= screenWidth - ballRadius) {
90006642:	4b3f      	ldr	r3, [pc, #252]	@ (90006740 <_ZN5Model14checkCollisionEv+0x17c>)
90006644:	681b      	ldr	r3, [r3, #0]
90006646:	1a9b      	subs	r3, r3, r2
90006648:	428b      	cmp	r3, r1
9000664a:	dd00      	ble.n	9000664e <_ZN5Model14checkCollisionEv+0x8a>
		endPongGame();
		return;
	}
}
9000664c:	bdf0      	pop	{r4, r5, r6, r7, pc}
}

void Model::endPongGame() {
	gameRunning = false;

	modelListener->endPongGame();
9000664e:	6800      	ldr	r0, [r0, #0]
	gameRunning = false;
90006650:	2400      	movs	r4, #0
90006652:	4a3f      	ldr	r2, [pc, #252]	@ (90006750 <_ZN5Model14checkCollisionEv+0x18c>)
	modelListener->endPongGame();
90006654:	6803      	ldr	r3, [r0, #0]
	gameRunning = false;
90006656:	493f      	ldr	r1, [pc, #252]	@ (90006754 <_ZN5Model14checkCollisionEv+0x190>)
	modelListener->endPongGame();
90006658:	691b      	ldr	r3, [r3, #16]
	gameRunning = false;
9000665a:	700c      	strb	r4, [r1, #0]
	modelListener->endPongGame();
9000665c:	4293      	cmp	r3, r2
9000665e:	d0f5      	beq.n	9000664c <_ZN5Model14checkCollisionEv+0x88>
}
90006660:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	modelListener->endPongGame();
90006664:	4718      	bx	r3
	if (ballHorizontalDirection == -1 && ballX <= 0 + playerWidth + ballRadius) {
90006666:	4c37      	ldr	r4, [pc, #220]	@ (90006744 <_ZN5Model14checkCollisionEv+0x180>)
90006668:	6824      	ldr	r4, [r4, #0]
9000666a:	4414      	add	r4, r2
9000666c:	428c      	cmp	r4, r1
9000666e:	dbe6      	blt.n	9000663e <_ZN5Model14checkCollisionEv+0x7a>
		if ( (ballY + ballRadius >= leftPlayerY - playerLength/2) && (ballY - ballRadius <= leftPlayerY + playerLength/2) ) {
90006670:	4c35      	ldr	r4, [pc, #212]	@ (90006748 <_ZN5Model14checkCollisionEv+0x184>)
90006672:	eb02 0c03 	add.w	ip, r2, r3
90006676:	4e38      	ldr	r6, [pc, #224]	@ (90006758 <_ZN5Model14checkCollisionEv+0x194>)
90006678:	6824      	ldr	r4, [r4, #0]
9000667a:	6836      	ldr	r6, [r6, #0]
9000667c:	2c00      	cmp	r4, #0
9000667e:	bfb8      	it	lt
90006680:	3401      	addlt	r4, #1
90006682:	1064      	asrs	r4, r4, #1
90006684:	4264      	negs	r4, r4
90006686:	eb04 0e06 	add.w	lr, r4, r6
9000668a:	45f4      	cmp	ip, lr
9000668c:	dbd7      	blt.n	9000663e <_ZN5Model14checkCollisionEv+0x7a>
9000668e:	1b36      	subs	r6, r6, r4
90006690:	1a9b      	subs	r3, r3, r2
90006692:	42b3      	cmp	r3, r6
90006694:	dcd3      	bgt.n	9000663e <_ZN5Model14checkCollisionEv+0x7a>
	ballSpeedAddCounter += ballSpeedAdder;
90006696:	4c31      	ldr	r4, [pc, #196]	@ (9000675c <_ZN5Model14checkCollisionEv+0x198>)
	ballSpeed += ballSpeedAddCounter/100;
90006698:	4931      	ldr	r1, [pc, #196]	@ (90006760 <_ZN5Model14checkCollisionEv+0x19c>)
	ballSpeedAddCounter += ballSpeedAdder;
9000669a:	6823      	ldr	r3, [r4, #0]
	ballSpeed += ballSpeedAddCounter/100;
9000669c:	4f31      	ldr	r7, [pc, #196]	@ (90006764 <_ZN5Model14checkCollisionEv+0x1a0>)
	ballSpeedAddCounter += ballSpeedAdder;
9000669e:	3319      	adds	r3, #25
			bounces++;
900066a0:	4e31      	ldr	r6, [pc, #196]	@ (90006768 <_ZN5Model14checkCollisionEv+0x1a4>)
	modelListener->redrawBounces(bounces);
900066a2:	6800      	ldr	r0, [r0, #0]
	ballSpeed += ballSpeedAddCounter/100;
900066a4:	fb81 2103 	smull	r2, r1, r1, r3
900066a8:	17da      	asrs	r2, r3, #31
900066aa:	ebc2 1261 	rsb	r2, r2, r1, asr #5
900066ae:	6839      	ldr	r1, [r7, #0]
900066b0:	4411      	add	r1, r2
900066b2:	6039      	str	r1, [r7, #0]
			bounces++;
900066b4:	6831      	ldr	r1, [r6, #0]
900066b6:	3101      	adds	r1, #1
900066b8:	6031      	str	r1, [r6, #0]
	ballSpeedAddCounter %= 100;
900066ba:	2664      	movs	r6, #100	@ 0x64
900066bc:	fb06 3312 	mls	r3, r6, r2, r3
			ballHorizontalDirection = 1;
900066c0:	2201      	movs	r2, #1
	ballSpeedAddCounter %= 100;
900066c2:	6023      	str	r3, [r4, #0]
	modelListener->redrawBounces(bounces);
900066c4:	6803      	ldr	r3, [r0, #0]
			ballHorizontalDirection = 1;
900066c6:	602a      	str	r2, [r5, #0]
	modelListener->redrawBounces(bounces);
900066c8:	68db      	ldr	r3, [r3, #12]
900066ca:	4a28      	ldr	r2, [pc, #160]	@ (9000676c <_ZN5Model14checkCollisionEv+0x1a8>)
900066cc:	4293      	cmp	r3, r2
900066ce:	d0bd      	beq.n	9000664c <_ZN5Model14checkCollisionEv+0x88>
}
900066d0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	modelListener->redrawBounces(bounces);
900066d4:	4718      	bx	r3
	ballSpeedAddCounter += ballSpeedAdder;
900066d6:	4c21      	ldr	r4, [pc, #132]	@ (9000675c <_ZN5Model14checkCollisionEv+0x198>)
			lastHitY = ballY; // For hard AI
900066d8:	4925      	ldr	r1, [pc, #148]	@ (90006770 <_ZN5Model14checkCollisionEv+0x1ac>)
	modelListener->redrawBounces(bounces);
900066da:	6800      	ldr	r0, [r0, #0]
			lastHitY = ballY; // For hard AI
900066dc:	600b      	str	r3, [r1, #0]
	ballSpeedAddCounter += ballSpeedAdder;
900066de:	6823      	ldr	r3, [r4, #0]
			lastBallYDirection = ballVerticalDirection;
900066e0:	4a13      	ldr	r2, [pc, #76]	@ (90006730 <_ZN5Model14checkCollisionEv+0x16c>)
	ballSpeedAddCounter += ballSpeedAdder;
900066e2:	3319      	adds	r3, #25
	ballSpeed += ballSpeedAddCounter/100;
900066e4:	491e      	ldr	r1, [pc, #120]	@ (90006760 <_ZN5Model14checkCollisionEv+0x19c>)
900066e6:	4e1f      	ldr	r6, [pc, #124]	@ (90006764 <_ZN5Model14checkCollisionEv+0x1a0>)
			lastBallYDirection = ballVerticalDirection;
900066e8:	6817      	ldr	r7, [r2, #0]
	ballSpeed += ballSpeedAddCounter/100;
900066ea:	fb81 2103 	smull	r2, r1, r1, r3
900066ee:	17da      	asrs	r2, r3, #31
			bounces++;
900066f0:	f8df c074 	ldr.w	ip, [pc, #116]	@ 90006768 <_ZN5Model14checkCollisionEv+0x1a4>
	ballSpeed += ballSpeedAddCounter/100;
900066f4:	ebc2 1261 	rsb	r2, r2, r1, asr #5
900066f8:	6831      	ldr	r1, [r6, #0]
900066fa:	4411      	add	r1, r2
900066fc:	6031      	str	r1, [r6, #0]
	ballSpeedAddCounter %= 100;
900066fe:	2664      	movs	r6, #100	@ 0x64
			bounces++;
90006700:	f8dc 1000 	ldr.w	r1, [ip]
	ballSpeedAddCounter %= 100;
90006704:	fb06 3312 	mls	r3, r6, r2, r3
90006708:	4a18      	ldr	r2, [pc, #96]	@ (9000676c <_ZN5Model14checkCollisionEv+0x1a8>)
			bounces++;
9000670a:	3101      	adds	r1, #1
	ballSpeedAddCounter %= 100;
9000670c:	6023      	str	r3, [r4, #0]
			ballHorizontalDirection = -1;
9000670e:	f04f 33ff 	mov.w	r3, #4294967295
			lastBallYDirection = ballVerticalDirection;
90006712:	4c18      	ldr	r4, [pc, #96]	@ (90006774 <_ZN5Model14checkCollisionEv+0x1b0>)
			ballHorizontalDirection = -1;
90006714:	602b      	str	r3, [r5, #0]
	modelListener->redrawBounces(bounces);
90006716:	6803      	ldr	r3, [r0, #0]
			bounces++;
90006718:	f8cc 1000 	str.w	r1, [ip]
	modelListener->redrawBounces(bounces);
9000671c:	68db      	ldr	r3, [r3, #12]
			lastBallYDirection = ballVerticalDirection;
9000671e:	6027      	str	r7, [r4, #0]
	modelListener->redrawBounces(bounces);
90006720:	4293      	cmp	r3, r2
90006722:	d1d5      	bne.n	900066d0 <_ZN5Model14checkCollisionEv+0x10c>
}
90006724:	bdf0      	pop	{r4, r5, r6, r7, pc}
90006726:	bf00      	nop
90006728:	240093b8 	.word	0x240093b8
9000672c:	24009388 	.word	0x24009388
90006730:	2400004c 	.word	0x2400004c
90006734:	24000058 	.word	0x24000058
90006738:	24000050 	.word	0x24000050
9000673c:	2400938c 	.word	0x2400938c
90006740:	2400005c 	.word	0x2400005c
90006744:	240093b4 	.word	0x240093b4
90006748:	240093b0 	.word	0x240093b0
9000674c:	240093a4 	.word	0x240093a4
90006750:	900063c5 	.word	0x900063c5
90006754:	24000060 	.word	0x24000060
90006758:	240093ac 	.word	0x240093ac
9000675c:	2400939c 	.word	0x2400939c
90006760:	51eb851f 	.word	0x51eb851f
90006764:	24000054 	.word	0x24000054
90006768:	24009398 	.word	0x24009398
9000676c:	900063c1 	.word	0x900063c1
90006770:	24000048 	.word	0x24000048
90006774:	24009384 	.word	0x24009384

90006778 <_ZN5Model4tickEv>:
	uint16_t buttonPinState = 0;
90006778:	2300      	movs	r3, #0
	osStatus_t status = osMessageQueueGet(buttonQueueHandle, &buttonPinState, NULL, 0);
9000677a:	493d      	ldr	r1, [pc, #244]	@ (90006870 <_ZN5Model4tickEv+0xf8>)
{
9000677c:	b570      	push	{r4, r5, r6, lr}
9000677e:	b086      	sub	sp, #24
	osStatus_t status = osMessageQueueGet(buttonQueueHandle, &buttonPinState, NULL, 0);
90006780:	461a      	mov	r2, r3
{
90006782:	4604      	mov	r4, r0
	osStatus_t status = osMessageQueueGet(buttonQueueHandle, &buttonPinState, NULL, 0);
90006784:	6808      	ldr	r0, [r1, #0]
90006786:	f10d 0116 	add.w	r1, sp, #22
	uint16_t buttonPinState = 0;
9000678a:	f8ad 3016 	strh.w	r3, [sp, #22]
	osStatus_t status = osMessageQueueGet(buttonQueueHandle, &buttonPinState, NULL, 0);
9000678e:	f007 f92d 	bl	9000d9ec <osMessageQueueGet>
	if (!gameRunning) {
90006792:	4b38      	ldr	r3, [pc, #224]	@ (90006874 <_ZN5Model4tickEv+0xfc>)
90006794:	781b      	ldrb	r3, [r3, #0]
90006796:	b32b      	cbz	r3, 900067e4 <_ZN5Model4tickEv+0x6c>
	if (!multiplayer) {
90006798:	4b37      	ldr	r3, [pc, #220]	@ (90006878 <_ZN5Model4tickEv+0x100>)
9000679a:	781b      	ldrb	r3, [r3, #0]
9000679c:	bb23      	cbnz	r3, 900067e8 <_ZN5Model4tickEv+0x70>
	if (!hardDifficulty) {
9000679e:	4b37      	ldr	r3, [pc, #220]	@ (9000687c <_ZN5Model4tickEv+0x104>)
900067a0:	781b      	ldrb	r3, [r3, #0]
900067a2:	2b00      	cmp	r3, #0
900067a4:	d15b      	bne.n	9000685e <_ZN5Model4tickEv+0xe6>
	rightPlayerDestinationY = ballY;
900067a6:	4d36      	ldr	r5, [pc, #216]	@ (90006880 <_ZN5Model4tickEv+0x108>)
900067a8:	4b36      	ldr	r3, [pc, #216]	@ (90006884 <_ZN5Model4tickEv+0x10c>)
900067aa:	682a      	ldr	r2, [r5, #0]
900067ac:	601a      	str	r2, [r3, #0]
	updatePlayerPosition();
900067ae:	4620      	mov	r0, r4
	ballX += ballSpeed * ballHorizontalDirection;
900067b0:	4e35      	ldr	r6, [pc, #212]	@ (90006888 <_ZN5Model4tickEv+0x110>)
	updatePlayerPosition();
900067b2:	f7ff febb 	bl	9000652c <_ZN5Model20updatePlayerPositionEv>
	ballX += ballSpeed * ballHorizontalDirection;
900067b6:	4b35      	ldr	r3, [pc, #212]	@ (9000688c <_ZN5Model4tickEv+0x114>)
900067b8:	4a35      	ldr	r2, [pc, #212]	@ (90006890 <_ZN5Model4tickEv+0x118>)
900067ba:	6818      	ldr	r0, [r3, #0]
	ballY += ballSpeed * ballVerticalDirection;
900067bc:	4b35      	ldr	r3, [pc, #212]	@ (90006894 <_ZN5Model4tickEv+0x11c>)
	ballX += ballSpeed * ballHorizontalDirection;
900067be:	6812      	ldr	r2, [r2, #0]
	ballY += ballSpeed * ballVerticalDirection;
900067c0:	6819      	ldr	r1, [r3, #0]
	ballX += ballSpeed * ballHorizontalDirection;
900067c2:	6833      	ldr	r3, [r6, #0]
900067c4:	fb00 3302 	mla	r3, r0, r2, r3
	checkCollision();
900067c8:	4620      	mov	r0, r4
	ballX += ballSpeed * ballHorizontalDirection;
900067ca:	6033      	str	r3, [r6, #0]
	ballY += ballSpeed * ballVerticalDirection;
900067cc:	682b      	ldr	r3, [r5, #0]
900067ce:	fb01 3302 	mla	r3, r1, r2, r3
900067d2:	602b      	str	r3, [r5, #0]
	checkCollision();
900067d4:	f7ff fef6 	bl	900065c4 <_ZN5Model14checkCollisionEv>
	modelListener->redrawPong(leftPlayerY, rightPlayerY, ballX, ballY, playerWidth, playerLength, ballRadius);
900067d8:	6820      	ldr	r0, [r4, #0]
900067da:	4b2f      	ldr	r3, [pc, #188]	@ (90006898 <_ZN5Model4tickEv+0x120>)
900067dc:	6802      	ldr	r2, [r0, #0]
900067de:	6894      	ldr	r4, [r2, #8]
900067e0:	429c      	cmp	r4, r3
900067e2:	d129      	bne.n	90006838 <_ZN5Model4tickEv+0xc0>
}
900067e4:	b006      	add	sp, #24
900067e6:	bd70      	pop	{r4, r5, r6, pc}
		if (status == osOK) {
900067e8:	b1e0      	cbz	r0, 90006824 <_ZN5Model4tickEv+0xac>
	leftPlayerDestinationY += maxPlayerMoveSpeed * playerTwoMovementDirection;
900067ea:	4b2c      	ldr	r3, [pc, #176]	@ (9000689c <_ZN5Model4tickEv+0x124>)
900067ec:	681b      	ldr	r3, [r3, #0]
900067ee:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900067f2:	005b      	lsls	r3, r3, #1
	if (leftPlayerDestinationY < 0 + playerLength/2) {
900067f4:	4a2a      	ldr	r2, [pc, #168]	@ (900068a0 <_ZN5Model4tickEv+0x128>)
	leftPlayerDestinationY += maxPlayerMoveSpeed * playerTwoMovementDirection;
900067f6:	492b      	ldr	r1, [pc, #172]	@ (900068a4 <_ZN5Model4tickEv+0x12c>)
	if (leftPlayerDestinationY < 0 + playerLength/2) {
900067f8:	6812      	ldr	r2, [r2, #0]
	leftPlayerDestinationY += maxPlayerMoveSpeed * playerTwoMovementDirection;
900067fa:	6808      	ldr	r0, [r1, #0]
	if (leftPlayerDestinationY < 0 + playerLength/2) {
900067fc:	2a00      	cmp	r2, #0
	leftPlayerDestinationY += maxPlayerMoveSpeed * playerTwoMovementDirection;
900067fe:	4403      	add	r3, r0
	if (leftPlayerDestinationY < 0 + playerLength/2) {
90006800:	bfb8      	it	lt
90006802:	3201      	addlt	r2, #1
	leftPlayerDestinationY += maxPlayerMoveSpeed * playerTwoMovementDirection;
90006804:	600b      	str	r3, [r1, #0]
	if (leftPlayerDestinationY < 0 + playerLength/2) {
90006806:	ebb3 0f62 	cmp.w	r3, r2, asr #1
9000680a:	ea4f 0062 	mov.w	r0, r2, asr #1
9000680e:	da01      	bge.n	90006814 <_ZN5Model4tickEv+0x9c>
		leftPlayerDestinationY = 0 + playerLength/2;
90006810:	4603      	mov	r3, r0
90006812:	6008      	str	r0, [r1, #0]
	if (leftPlayerDestinationY > screenHeight - playerLength/2) {
90006814:	4a24      	ldr	r2, [pc, #144]	@ (900068a8 <_ZN5Model4tickEv+0x130>)
90006816:	4d1a      	ldr	r5, [pc, #104]	@ (90006880 <_ZN5Model4tickEv+0x108>)
90006818:	6812      	ldr	r2, [r2, #0]
9000681a:	1a12      	subs	r2, r2, r0
9000681c:	429a      	cmp	r2, r3
		leftPlayerDestinationY = screenHeight - playerLength/2;
9000681e:	bfb8      	it	lt
90006820:	600a      	strlt	r2, [r1, #0]
90006822:	e7c4      	b.n	900067ae <_ZN5Model4tickEv+0x36>
			if (buttonPinState == 0) {
90006824:	f8bd 3016 	ldrh.w	r3, [sp, #22]
				playerTwoMovementDirection = -1;
90006828:	4a1c      	ldr	r2, [pc, #112]	@ (9000689c <_ZN5Model4tickEv+0x124>)
			if (buttonPinState == 0) {
9000682a:	b9eb      	cbnz	r3, 90006868 <_ZN5Model4tickEv+0xf0>
				playerTwoMovementDirection = -1;
9000682c:	f04f 31ff 	mov.w	r1, #4294967295
90006830:	f06f 0309 	mvn.w	r3, #9
90006834:	6011      	str	r1, [r2, #0]
90006836:	e7dd      	b.n	900067f4 <_ZN5Model4tickEv+0x7c>
	modelListener->redrawPong(leftPlayerY, rightPlayerY, ballX, ballY, playerWidth, playerLength, ballRadius);
90006838:	682b      	ldr	r3, [r5, #0]
9000683a:	491c      	ldr	r1, [pc, #112]	@ (900068ac <_ZN5Model4tickEv+0x134>)
9000683c:	9300      	str	r3, [sp, #0]
9000683e:	4a1c      	ldr	r2, [pc, #112]	@ (900068b0 <_ZN5Model4tickEv+0x138>)
90006840:	6809      	ldr	r1, [r1, #0]
90006842:	6833      	ldr	r3, [r6, #0]
90006844:	6812      	ldr	r2, [r2, #0]
90006846:	9103      	str	r1, [sp, #12]
90006848:	4915      	ldr	r1, [pc, #84]	@ (900068a0 <_ZN5Model4tickEv+0x128>)
9000684a:	6809      	ldr	r1, [r1, #0]
9000684c:	9102      	str	r1, [sp, #8]
9000684e:	4919      	ldr	r1, [pc, #100]	@ (900068b4 <_ZN5Model4tickEv+0x13c>)
90006850:	6809      	ldr	r1, [r1, #0]
90006852:	9101      	str	r1, [sp, #4]
90006854:	4918      	ldr	r1, [pc, #96]	@ (900068b8 <_ZN5Model4tickEv+0x140>)
90006856:	6809      	ldr	r1, [r1, #0]
90006858:	47a0      	blx	r4
}
9000685a:	b006      	add	sp, #24
9000685c:	bd70      	pop	{r4, r5, r6, pc}
		updateAIposHard();
9000685e:	4620      	mov	r0, r4
90006860:	4d07      	ldr	r5, [pc, #28]	@ (90006880 <_ZN5Model4tickEv+0x108>)
90006862:	f7ff fe19 	bl	90006498 <_ZN5Model15updateAIposHardEv>
90006866:	e7a2      	b.n	900067ae <_ZN5Model4tickEv+0x36>
				playerTwoMovementDirection = 1;
90006868:	2101      	movs	r1, #1
9000686a:	230a      	movs	r3, #10
9000686c:	6011      	str	r1, [r2, #0]
9000686e:	e7c1      	b.n	900067f4 <_ZN5Model4tickEv+0x7c>
90006870:	24008fd8 	.word	0x24008fd8
90006874:	24000060 	.word	0x24000060
90006878:	240093bd 	.word	0x240093bd
9000687c:	240093bc 	.word	0x240093bc
90006880:	24009388 	.word	0x24009388
90006884:	240093a0 	.word	0x240093a0
90006888:	2400938c 	.word	0x2400938c
9000688c:	24000050 	.word	0x24000050
90006890:	24000054 	.word	0x24000054
90006894:	2400004c 	.word	0x2400004c
90006898:	900063bd 	.word	0x900063bd
9000689c:	24000044 	.word	0x24000044
900068a0:	240093b0 	.word	0x240093b0
900068a4:	240093a8 	.word	0x240093a8
900068a8:	24000058 	.word	0x24000058
900068ac:	240093b8 	.word	0x240093b8
900068b0:	240093a4 	.word	0x240093a4
900068b4:	240093b4 	.word	0x240093b4
900068b8:	240093ac 	.word	0x240093ac

900068bc <_GLOBAL__sub_I__ZN5ModelC2Ev>:
const int ballXDefault = screenWidth/2;
900068bc:	4b0c      	ldr	r3, [pc, #48]	@ (900068f0 <_GLOBAL__sub_I__ZN5ModelC2Ev+0x34>)
const int ballYDefault = screenHeight/2;
900068be:	480d      	ldr	r0, [pc, #52]	@ (900068f4 <_GLOBAL__sub_I__ZN5ModelC2Ev+0x38>)
const int ballXDefault = screenWidth/2;
900068c0:	681a      	ldr	r2, [r3, #0]
const int ballYDefault = screenHeight/2;
900068c2:	6803      	ldr	r3, [r0, #0]
const int ballXDefault = screenWidth/2;
900068c4:	2a00      	cmp	r2, #0
900068c6:	490c      	ldr	r1, [pc, #48]	@ (900068f8 <_GLOBAL__sub_I__ZN5ModelC2Ev+0x3c>)
int ballX = ballXDefault;
900068c8:	480c      	ldr	r0, [pc, #48]	@ (900068fc <_GLOBAL__sub_I__ZN5ModelC2Ev+0x40>)
const int ballXDefault = screenWidth/2;
900068ca:	bfb8      	it	lt
900068cc:	3201      	addlt	r2, #1
const int ballYDefault = screenHeight/2;
900068ce:	2b00      	cmp	r3, #0
const int ballXDefault = screenWidth/2;
900068d0:	ea4f 0262 	mov.w	r2, r2, asr #1
const int ballYDefault = screenHeight/2;
900068d4:	bfb8      	it	lt
900068d6:	3301      	addlt	r3, #1
}
900068d8:	b410      	push	{r4}
const int ballYDefault = screenHeight/2;
900068da:	105b      	asrs	r3, r3, #1
900068dc:	4c08      	ldr	r4, [pc, #32]	@ (90006900 <_GLOBAL__sub_I__ZN5ModelC2Ev+0x44>)
const int ballXDefault = screenWidth/2;
900068de:	600a      	str	r2, [r1, #0]
int ballY = ballYDefault;
900068e0:	4908      	ldr	r1, [pc, #32]	@ (90006904 <_GLOBAL__sub_I__ZN5ModelC2Ev+0x48>)
const int ballYDefault = screenHeight/2;
900068e2:	6023      	str	r3, [r4, #0]
int ballX = ballXDefault;
900068e4:	6002      	str	r2, [r0, #0]
}
900068e6:	f85d 4b04 	ldr.w	r4, [sp], #4
int ballY = ballYDefault;
900068ea:	600b      	str	r3, [r1, #0]
}
900068ec:	4770      	bx	lr
900068ee:	bf00      	nop
900068f0:	2400005c 	.word	0x2400005c
900068f4:	24000058 	.word	0x24000058
900068f8:	24009394 	.word	0x24009394
900068fc:	2400938c 	.word	0x2400938c
90006900:	24009390 	.word	0x24009390
90006904:	24009388 	.word	0x24009388

90006908 <_ZN34PongPlayerSelectionScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~PongPlayerSelectionScreenPresenter() {}
90006908:	4770      	bx	lr
9000690a:	bf00      	nop

9000690c <_ZThn4_N34PongPlayerSelectionScreenPresenterD1Ev>:
9000690c:	3804      	subs	r0, #4
9000690e:	4770      	bx	lr

90006910 <_ZN34PongPlayerSelectionScreenPresenter10deactivateEv>:
}

void PongPlayerSelectionScreenPresenter::activate()
{

}
90006910:	4770      	bx	lr
90006912:	bf00      	nop

90006914 <_ZN34PongPlayerSelectionScreenPresenterD0Ev>:
90006914:	b510      	push	{r4, lr}
90006916:	4604      	mov	r4, r0
90006918:	2110      	movs	r1, #16
9000691a:	f022 fda7 	bl	9002946c <_ZdlPvj>
9000691e:	4620      	mov	r0, r4
90006920:	bd10      	pop	{r4, pc}
90006922:	bf00      	nop

90006924 <_ZThn4_N34PongPlayerSelectionScreenPresenterD0Ev>:
90006924:	b510      	push	{r4, lr}
90006926:	1f04      	subs	r4, r0, #4
90006928:	2110      	movs	r1, #16
9000692a:	4620      	mov	r0, r4
9000692c:	f022 fd9e 	bl	9002946c <_ZdlPvj>
90006930:	4620      	mov	r0, r4
90006932:	bd10      	pop	{r4, pc}

90006934 <_ZN34PongPlayerSelectionScreenPresenterC1ER29PongPlayerSelectionScreenView>:
    : view(v)
90006934:	4a05      	ldr	r2, [pc, #20]	@ (9000694c <_ZN34PongPlayerSelectionScreenPresenterC1ER29PongPlayerSelectionScreenView+0x18>)
90006936:	60c1      	str	r1, [r0, #12]
90006938:	6002      	str	r2, [r0, #0]
PongPlayerSelectionScreenPresenter::PongPlayerSelectionScreenPresenter(PongPlayerSelectionScreenView& v)
9000693a:	b410      	push	{r4}
    ModelListener() : model(0) {}
9000693c:	2400      	movs	r4, #0
9000693e:	6084      	str	r4, [r0, #8]
    : view(v)
90006940:	f102 0418 	add.w	r4, r2, #24
90006944:	6044      	str	r4, [r0, #4]
}
90006946:	f85d 4b04 	ldr.w	r4, [sp], #4
9000694a:	4770      	bx	lr
9000694c:	9002d25c 	.word	0x9002d25c

90006950 <_ZN34PongPlayerSelectionScreenPresenter15setSingleplayerEv>:
{

}

void PongPlayerSelectionScreenPresenter::setSingleplayer() {
	model->shouldDoMultiplayer(false);
90006950:	2100      	movs	r1, #0
90006952:	6880      	ldr	r0, [r0, #8]
90006954:	f7ff bd42 	b.w	900063dc <_ZN5Model19shouldDoMultiplayerEb>

90006958 <_ZN34PongPlayerSelectionScreenPresenter14setMultiplayerEv>:
}

void PongPlayerSelectionScreenPresenter::setMultiplayer() {
	model->shouldDoMultiplayer(true);
90006958:	2101      	movs	r1, #1
9000695a:	6880      	ldr	r0, [r0, #8]
9000695c:	f7ff bd3e 	b.w	900063dc <_ZN5Model19shouldDoMultiplayerEb>

90006960 <_ZN29PongPlayerSelectionScreenView14tearDownScreenEv>:
}

void PongPlayerSelectionScreenView::tearDownScreen()
{
    PongPlayerSelectionScreenViewBase::tearDownScreen();
}
90006960:	4770      	bx	lr
90006962:	bf00      	nop

90006964 <_ZN29PongPlayerSelectionScreenView25singleplayerButtonPressedEv>:

void PongPlayerSelectionScreenView::singleplayerButtonPressed() {
	presenter->setSingleplayer();
90006964:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006966:	f7ff bff3 	b.w	90006950 <_ZN34PongPlayerSelectionScreenPresenter15setSingleplayerEv>
9000696a:	bf00      	nop

9000696c <_ZN29PongPlayerSelectionScreenView24multiplayerButtonPressedEv>:
}

void PongPlayerSelectionScreenView::multiplayerButtonPressed() {
	presenter->setMultiplayer();
9000696c:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
9000696e:	f7ff bff3 	b.w	90006958 <_ZN34PongPlayerSelectionScreenPresenter14setMultiplayerEv>
90006972:	bf00      	nop

90006974 <_ZN29PongPlayerSelectionScreenViewD1Ev>:

class PongPlayerSelectionScreenView : public PongPlayerSelectionScreenViewBase
{
public:
    PongPlayerSelectionScreenView();
    virtual ~PongPlayerSelectionScreenView() {}
90006974:	4b03      	ldr	r3, [pc, #12]	@ (90006984 <_ZN29PongPlayerSelectionScreenViewD1Ev+0x10>)
90006976:	b510      	push	{r4, lr}
90006978:	4604      	mov	r4, r0
9000697a:	6003      	str	r3, [r0, #0]
9000697c:	f7fe fb44 	bl	90005008 <_ZN33PongPlayerSelectionScreenViewBaseD1Ev>
90006980:	4620      	mov	r0, r4
90006982:	bd10      	pop	{r4, pc}
90006984:	9002d290 	.word	0x9002d290

90006988 <_ZN29PongPlayerSelectionScreenViewD0Ev>:
90006988:	4b06      	ldr	r3, [pc, #24]	@ (900069a4 <_ZN29PongPlayerSelectionScreenViewD0Ev+0x1c>)
9000698a:	b510      	push	{r4, lr}
9000698c:	4604      	mov	r4, r0
9000698e:	6003      	str	r3, [r0, #0]
90006990:	f7fe fb3a 	bl	90005008 <_ZN33PongPlayerSelectionScreenViewBaseD1Ev>
90006994:	f44f 71ba 	mov.w	r1, #372	@ 0x174
90006998:	4620      	mov	r0, r4
9000699a:	f022 fd67 	bl	9002946c <_ZdlPvj>
9000699e:	4620      	mov	r0, r4
900069a0:	bd10      	pop	{r4, pc}
900069a2:	bf00      	nop
900069a4:	9002d290 	.word	0x9002d290

900069a8 <_ZN29PongPlayerSelectionScreenViewC1Ev>:
PongPlayerSelectionScreenView::PongPlayerSelectionScreenView()
900069a8:	b510      	push	{r4, lr}
900069aa:	4604      	mov	r4, r0
900069ac:	f7fe fb8a 	bl	900050c4 <_ZN33PongPlayerSelectionScreenViewBaseC1Ev>
900069b0:	4b01      	ldr	r3, [pc, #4]	@ (900069b8 <_ZN29PongPlayerSelectionScreenViewC1Ev+0x10>)
}
900069b2:	4620      	mov	r0, r4
PongPlayerSelectionScreenView::PongPlayerSelectionScreenView()
900069b4:	6023      	str	r3, [r4, #0]
}
900069b6:	bd10      	pop	{r4, pc}
900069b8:	9002d290 	.word	0x9002d290

900069bc <_ZN29PongPlayerSelectionScreenView11setupScreenEv>:
    PongPlayerSelectionScreenViewBase::setupScreen();
900069bc:	f7fe bb26 	b.w	9000500c <_ZN33PongPlayerSelectionScreenViewBase11setupScreenEv>

900069c0 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
900069c0:	4770      	bx	lr
900069c2:	bf00      	nop

900069c4 <_ZThn4_N16Screen1PresenterD1Ev>:
900069c4:	3804      	subs	r0, #4
900069c6:	4770      	bx	lr

900069c8 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
900069c8:	4770      	bx	lr
900069ca:	bf00      	nop

900069cc <_ZN16Screen1PresenterD0Ev>:
900069cc:	b510      	push	{r4, lr}
900069ce:	4604      	mov	r4, r0
900069d0:	2110      	movs	r1, #16
900069d2:	f022 fd4b 	bl	9002946c <_ZdlPvj>
900069d6:	4620      	mov	r0, r4
900069d8:	bd10      	pop	{r4, pc}
900069da:	bf00      	nop

900069dc <_ZThn4_N16Screen1PresenterD0Ev>:
900069dc:	b510      	push	{r4, lr}
900069de:	1f04      	subs	r4, r0, #4
900069e0:	2110      	movs	r1, #16
900069e2:	4620      	mov	r0, r4
900069e4:	f022 fd42 	bl	9002946c <_ZdlPvj>
900069e8:	4620      	mov	r0, r4
900069ea:	bd10      	pop	{r4, pc}

900069ec <_ZN16Screen1PresenterC1ER11Screen1View>:
    : view(v)
900069ec:	4a05      	ldr	r2, [pc, #20]	@ (90006a04 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
900069ee:	60c1      	str	r1, [r0, #12]
900069f0:	6002      	str	r2, [r0, #0]
Screen1Presenter::Screen1Presenter(Screen1View& v)
900069f2:	b410      	push	{r4}
900069f4:	2400      	movs	r4, #0
900069f6:	6084      	str	r4, [r0, #8]
    : view(v)
900069f8:	f102 0418 	add.w	r4, r2, #24
900069fc:	6044      	str	r4, [r0, #4]
}
900069fe:	f85d 4b04 	ldr.w	r4, [sp], #4
90006a02:	4770      	bx	lr
90006a04:	9002d2cc 	.word	0x9002d2cc

90006a08 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
90006a08:	4770      	bx	lr
90006a0a:	bf00      	nop

90006a0c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
90006a0c:	4b03      	ldr	r3, [pc, #12]	@ (90006a1c <_ZN11Screen1ViewD1Ev+0x10>)
90006a0e:	b510      	push	{r4, lr}
90006a10:	4604      	mov	r4, r0
90006a12:	6003      	str	r3, [r0, #0]
90006a14:	f7fe fc74 	bl	90005300 <_ZN15Screen1ViewBaseD1Ev>
90006a18:	4620      	mov	r0, r4
90006a1a:	bd10      	pop	{r4, pc}
90006a1c:	9002d300 	.word	0x9002d300

90006a20 <_ZN11Screen1ViewD0Ev>:
90006a20:	4b06      	ldr	r3, [pc, #24]	@ (90006a3c <_ZN11Screen1ViewD0Ev+0x1c>)
90006a22:	b510      	push	{r4, lr}
90006a24:	4604      	mov	r4, r0
90006a26:	6003      	str	r3, [r0, #0]
90006a28:	f7fe fc6a 	bl	90005300 <_ZN15Screen1ViewBaseD1Ev>
90006a2c:	f44f 7186 	mov.w	r1, #268	@ 0x10c
90006a30:	4620      	mov	r0, r4
90006a32:	f022 fd1b 	bl	9002946c <_ZdlPvj>
90006a36:	4620      	mov	r0, r4
90006a38:	bd10      	pop	{r4, pc}
90006a3a:	bf00      	nop
90006a3c:	9002d300 	.word	0x9002d300

90006a40 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
90006a40:	b510      	push	{r4, lr}
90006a42:	4604      	mov	r4, r0
90006a44:	f7fe fc9c 	bl	90005380 <_ZN15Screen1ViewBaseC1Ev>
90006a48:	4b01      	ldr	r3, [pc, #4]	@ (90006a50 <_ZN11Screen1ViewC1Ev+0x10>)
}
90006a4a:	4620      	mov	r0, r4
Screen1View::Screen1View()
90006a4c:	6023      	str	r3, [r4, #0]
}
90006a4e:	bd10      	pop	{r4, pc}
90006a50:	9002d300 	.word	0x9002d300

90006a54 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
90006a54:	f7fe bc56 	b.w	90005304 <_ZN15Screen1ViewBase11setupScreenEv>

90006a58 <_ZN34difficultySelectionScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~difficultySelectionScreenPresenter() {}
90006a58:	4770      	bx	lr
90006a5a:	bf00      	nop

90006a5c <_ZThn4_N34difficultySelectionScreenPresenterD1Ev>:
90006a5c:	3804      	subs	r0, #4
90006a5e:	4770      	bx	lr

90006a60 <_ZN34difficultySelectionScreenPresenter10deactivateEv>:
}

void difficultySelectionScreenPresenter::activate()
{

}
90006a60:	4770      	bx	lr
90006a62:	bf00      	nop

90006a64 <_ZN34difficultySelectionScreenPresenterD0Ev>:
90006a64:	b510      	push	{r4, lr}
90006a66:	4604      	mov	r4, r0
90006a68:	2110      	movs	r1, #16
90006a6a:	f022 fcff 	bl	9002946c <_ZdlPvj>
90006a6e:	4620      	mov	r0, r4
90006a70:	bd10      	pop	{r4, pc}
90006a72:	bf00      	nop

90006a74 <_ZThn4_N34difficultySelectionScreenPresenterD0Ev>:
90006a74:	b510      	push	{r4, lr}
90006a76:	1f04      	subs	r4, r0, #4
90006a78:	2110      	movs	r1, #16
90006a7a:	4620      	mov	r0, r4
90006a7c:	f022 fcf6 	bl	9002946c <_ZdlPvj>
90006a80:	4620      	mov	r0, r4
90006a82:	bd10      	pop	{r4, pc}

90006a84 <_ZN34difficultySelectionScreenPresenterC1ER29difficultySelectionScreenView>:
    : view(v)
90006a84:	4a05      	ldr	r2, [pc, #20]	@ (90006a9c <_ZN34difficultySelectionScreenPresenterC1ER29difficultySelectionScreenView+0x18>)
90006a86:	60c1      	str	r1, [r0, #12]
90006a88:	6002      	str	r2, [r0, #0]
difficultySelectionScreenPresenter::difficultySelectionScreenPresenter(difficultySelectionScreenView& v)
90006a8a:	b410      	push	{r4}
90006a8c:	2400      	movs	r4, #0
90006a8e:	6084      	str	r4, [r0, #8]
    : view(v)
90006a90:	f102 0418 	add.w	r4, r2, #24
90006a94:	6044      	str	r4, [r0, #4]
}
90006a96:	f85d 4b04 	ldr.w	r4, [sp], #4
90006a9a:	4770      	bx	lr
90006a9c:	9002d334 	.word	0x9002d334

90006aa0 <_ZN34difficultySelectionScreenPresenter24changeToNormalDifficultyEv>:
{

}

void difficultySelectionScreenPresenter::changeToNormalDifficulty() {
	model->shouldDoHardDifficulty(false);
90006aa0:	2100      	movs	r1, #0
90006aa2:	6880      	ldr	r0, [r0, #8]
90006aa4:	f7ff bc94 	b.w	900063d0 <_ZN5Model22shouldDoHardDifficultyEb>

90006aa8 <_ZN34difficultySelectionScreenPresenter22changeToHardDifficultyEv>:
}

void difficultySelectionScreenPresenter::changeToHardDifficulty() {
	model->shouldDoHardDifficulty(true);
90006aa8:	2101      	movs	r1, #1
90006aaa:	6880      	ldr	r0, [r0, #8]
90006aac:	f7ff bc90 	b.w	900063d0 <_ZN5Model22shouldDoHardDifficultyEb>

90006ab0 <_ZN29difficultySelectionScreenView14tearDownScreenEv>:
}

void difficultySelectionScreenView::tearDownScreen()
{
    difficultySelectionScreenViewBase::tearDownScreen();
}
90006ab0:	4770      	bx	lr
90006ab2:	bf00      	nop

90006ab4 <_ZN29difficultySelectionScreenView29normalDifficultyButtonPressedEv>:

void difficultySelectionScreenView::normalDifficultyButtonPressed()
{
	presenter->changeToNormalDifficulty();
90006ab4:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006ab6:	f7ff bff3 	b.w	90006aa0 <_ZN34difficultySelectionScreenPresenter24changeToNormalDifficultyEv>
90006aba:	bf00      	nop

90006abc <_ZN29difficultySelectionScreenView27hardDifficultyButtonPressedEv>:
}
void difficultySelectionScreenView::hardDifficultyButtonPressed()
{
	// Override and implement this function in difficultySelectionScreen
	presenter->changeToHardDifficulty();
90006abc:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006abe:	f7ff bff3 	b.w	90006aa8 <_ZN34difficultySelectionScreenPresenter22changeToHardDifficultyEv>
90006ac2:	bf00      	nop

90006ac4 <_ZN29difficultySelectionScreenViewD1Ev>:

class difficultySelectionScreenView : public difficultySelectionScreenViewBase
{
public:
    difficultySelectionScreenView();
    virtual ~difficultySelectionScreenView() {}
90006ac4:	4b03      	ldr	r3, [pc, #12]	@ (90006ad4 <_ZN29difficultySelectionScreenViewD1Ev+0x10>)
90006ac6:	b510      	push	{r4, lr}
90006ac8:	4604      	mov	r4, r0
90006aca:	6003      	str	r3, [r0, #0]
90006acc:	f7fe fefe 	bl	900058cc <_ZN33difficultySelectionScreenViewBaseD1Ev>
90006ad0:	4620      	mov	r0, r4
90006ad2:	bd10      	pop	{r4, pc}
90006ad4:	9002d368 	.word	0x9002d368

90006ad8 <_ZN29difficultySelectionScreenViewD0Ev>:
90006ad8:	4b06      	ldr	r3, [pc, #24]	@ (90006af4 <_ZN29difficultySelectionScreenViewD0Ev+0x1c>)
90006ada:	b510      	push	{r4, lr}
90006adc:	4604      	mov	r4, r0
90006ade:	6003      	str	r3, [r0, #0]
90006ae0:	f7fe fef4 	bl	900058cc <_ZN33difficultySelectionScreenViewBaseD1Ev>
90006ae4:	f44f 7186 	mov.w	r1, #268	@ 0x10c
90006ae8:	4620      	mov	r0, r4
90006aea:	f022 fcbf 	bl	9002946c <_ZdlPvj>
90006aee:	4620      	mov	r0, r4
90006af0:	bd10      	pop	{r4, pc}
90006af2:	bf00      	nop
90006af4:	9002d368 	.word	0x9002d368

90006af8 <_ZN29difficultySelectionScreenViewC1Ev>:
difficultySelectionScreenView::difficultySelectionScreenView()
90006af8:	b510      	push	{r4, lr}
90006afa:	4604      	mov	r4, r0
90006afc:	f7fe ff44 	bl	90005988 <_ZN33difficultySelectionScreenViewBaseC1Ev>
90006b00:	4b01      	ldr	r3, [pc, #4]	@ (90006b08 <_ZN29difficultySelectionScreenViewC1Ev+0x10>)
}
90006b02:	4620      	mov	r0, r4
difficultySelectionScreenView::difficultySelectionScreenView()
90006b04:	6023      	str	r3, [r4, #0]
}
90006b06:	bd10      	pop	{r4, pc}
90006b08:	9002d368 	.word	0x9002d368

90006b0c <_ZN29difficultySelectionScreenView11setupScreenEv>:
    difficultySelectionScreenViewBase::setupScreen();
90006b0c:	f7fe bee0 	b.w	900058d0 <_ZN33difficultySelectionScreenViewBase11setupScreenEv>

90006b10 <_ZN23gameOverScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~gameOverScreenPresenter() {}
90006b10:	4770      	bx	lr
90006b12:	bf00      	nop

90006b14 <_ZThn4_N23gameOverScreenPresenterD1Ev>:
90006b14:	3804      	subs	r0, #4
90006b16:	4770      	bx	lr

90006b18 <_ZN23gameOverScreenPresenter10deactivateEv>:
}

void gameOverScreenPresenter::activate()
{

}
90006b18:	4770      	bx	lr
90006b1a:	bf00      	nop

90006b1c <_ZN23gameOverScreenPresenterD0Ev>:
90006b1c:	b510      	push	{r4, lr}
90006b1e:	4604      	mov	r4, r0
90006b20:	2110      	movs	r1, #16
90006b22:	f022 fca3 	bl	9002946c <_ZdlPvj>
90006b26:	4620      	mov	r0, r4
90006b28:	bd10      	pop	{r4, pc}
90006b2a:	bf00      	nop

90006b2c <_ZThn4_N23gameOverScreenPresenterD0Ev>:
90006b2c:	b510      	push	{r4, lr}
90006b2e:	1f04      	subs	r4, r0, #4
90006b30:	2110      	movs	r1, #16
90006b32:	4620      	mov	r0, r4
90006b34:	f022 fc9a 	bl	9002946c <_ZdlPvj>
90006b38:	4620      	mov	r0, r4
90006b3a:	bd10      	pop	{r4, pc}

90006b3c <_ZN23gameOverScreenPresenterC1ER18gameOverScreenView>:
    : view(v)
90006b3c:	4a05      	ldr	r2, [pc, #20]	@ (90006b54 <_ZN23gameOverScreenPresenterC1ER18gameOverScreenView+0x18>)
90006b3e:	60c1      	str	r1, [r0, #12]
90006b40:	6002      	str	r2, [r0, #0]
gameOverScreenPresenter::gameOverScreenPresenter(gameOverScreenView& v)
90006b42:	b410      	push	{r4}
90006b44:	2400      	movs	r4, #0
90006b46:	6084      	str	r4, [r0, #8]
    : view(v)
90006b48:	f102 0418 	add.w	r4, r2, #24
90006b4c:	6044      	str	r4, [r0, #4]
}
90006b4e:	f85d 4b04 	ldr.w	r4, [sp], #4
90006b52:	4770      	bx	lr
90006b54:	9002d3a4 	.word	0x9002d3a4

90006b58 <_ZN18gameOverScreenView14tearDownScreenEv>:
}

void gameOverScreenView::tearDownScreen()
{
    gameOverScreenViewBase::tearDownScreen();
}
90006b58:	4770      	bx	lr
90006b5a:	bf00      	nop

90006b5c <_ZN18gameOverScreenViewD1Ev>:

class gameOverScreenView : public gameOverScreenViewBase
{
public:
    gameOverScreenView();
    virtual ~gameOverScreenView() {}
90006b5c:	4b03      	ldr	r3, [pc, #12]	@ (90006b6c <_ZN18gameOverScreenViewD1Ev+0x10>)
90006b5e:	b510      	push	{r4, lr}
90006b60:	4604      	mov	r4, r0
90006b62:	6003      	str	r3, [r0, #0]
90006b64:	f7ff f810 	bl	90005b88 <_ZN22gameOverScreenViewBaseD1Ev>
90006b68:	4620      	mov	r0, r4
90006b6a:	bd10      	pop	{r4, pc}
90006b6c:	9002d3d8 	.word	0x9002d3d8

90006b70 <_ZN18gameOverScreenViewD0Ev>:
90006b70:	4b06      	ldr	r3, [pc, #24]	@ (90006b8c <_ZN18gameOverScreenViewD0Ev+0x1c>)
90006b72:	b510      	push	{r4, lr}
90006b74:	4604      	mov	r4, r0
90006b76:	6003      	str	r3, [r0, #0]
90006b78:	f7ff f806 	bl	90005b88 <_ZN22gameOverScreenViewBaseD1Ev>
90006b7c:	f44f 7186 	mov.w	r1, #268	@ 0x10c
90006b80:	4620      	mov	r0, r4
90006b82:	f022 fc73 	bl	9002946c <_ZdlPvj>
90006b86:	4620      	mov	r0, r4
90006b88:	bd10      	pop	{r4, pc}
90006b8a:	bf00      	nop
90006b8c:	9002d3d8 	.word	0x9002d3d8

90006b90 <_ZN18gameOverScreenViewC1Ev>:
gameOverScreenView::gameOverScreenView()
90006b90:	b510      	push	{r4, lr}
90006b92:	4604      	mov	r4, r0
90006b94:	f7ff f838 	bl	90005c08 <_ZN22gameOverScreenViewBaseC1Ev>
90006b98:	4b01      	ldr	r3, [pc, #4]	@ (90006ba0 <_ZN18gameOverScreenViewC1Ev+0x10>)
}
90006b9a:	4620      	mov	r0, r4
gameOverScreenView::gameOverScreenView()
90006b9c:	6023      	str	r3, [r4, #0]
}
90006b9e:	bd10      	pop	{r4, pc}
90006ba0:	9002d3d8 	.word	0x9002d3d8

90006ba4 <_ZN18gameOverScreenView11setupScreenEv>:
    gameOverScreenViewBase::setupScreen();
90006ba4:	f7fe bff2 	b.w	90005b8c <_ZN22gameOverScreenViewBase11setupScreenEv>

90006ba8 <_ZN23pongGameScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~pongGameScreenPresenter() {}
90006ba8:	4770      	bx	lr
90006baa:	bf00      	nop

90006bac <_ZThn4_N23pongGameScreenPresenterD1Ev>:
90006bac:	3804      	subs	r0, #4
90006bae:	4770      	bx	lr

90006bb0 <_ZN23pongGameScreenPresenter10deactivateEv>:
}

void pongGameScreenPresenter::activate()
{

}
90006bb0:	4770      	bx	lr
90006bb2:	bf00      	nop

90006bb4 <_ZN23pongGameScreenPresenterD0Ev>:
90006bb4:	b510      	push	{r4, lr}
90006bb6:	4604      	mov	r4, r0
90006bb8:	2110      	movs	r1, #16
90006bba:	f022 fc57 	bl	9002946c <_ZdlPvj>
90006bbe:	4620      	mov	r0, r4
90006bc0:	bd10      	pop	{r4, pc}
90006bc2:	bf00      	nop

90006bc4 <_ZThn4_N23pongGameScreenPresenterD0Ev>:
90006bc4:	b510      	push	{r4, lr}
90006bc6:	1f04      	subs	r4, r0, #4
90006bc8:	2110      	movs	r1, #16
90006bca:	4620      	mov	r0, r4
90006bcc:	f022 fc4e 	bl	9002946c <_ZdlPvj>
90006bd0:	4620      	mov	r0, r4
90006bd2:	bd10      	pop	{r4, pc}

90006bd4 <_ZN23pongGameScreenPresenter10redrawPongEiiiiiii>:
	int y = (int) evt.getY();

	model->receiveTouchDestination(y);
}

void pongGameScreenPresenter::redrawPong(int leftPlayerY, int rightPlayerY, int ballX, int ballY, int playerWidth, int playerLength, int ballRadius) {
90006bd4:	b470      	push	{r4, r5, r6}
90006bd6:	e9dd 4605 	ldrd	r4, r6, [sp, #20]
90006bda:	9d03      	ldr	r5, [sp, #12]
	view.redrawPong(leftPlayerY - playerLength/2, rightPlayerY - playerLength/2, ballX-ballRadius, ballY-ballRadius);
90006bdc:	2c00      	cmp	r4, #0
90006bde:	eba3 0306 	sub.w	r3, r3, r6
90006be2:	eba5 0506 	sub.w	r5, r5, r6
90006be6:	bfb8      	it	lt
90006be8:	3401      	addlt	r4, #1
90006bea:	9503      	str	r5, [sp, #12]
90006bec:	ea4f 0c64 	mov.w	ip, r4, asr #1
90006bf0:	68c0      	ldr	r0, [r0, #12]
90006bf2:	f1cc 0c00 	rsb	ip, ip, #0
}
90006bf6:	bc70      	pop	{r4, r5, r6}
	view.redrawPong(leftPlayerY - playerLength/2, rightPlayerY - playerLength/2, ballX-ballRadius, ballY-ballRadius);
90006bf8:	4462      	add	r2, ip
90006bfa:	4461      	add	r1, ip
90006bfc:	f000 b8ba 	b.w	90006d74 <_ZN18pongGameScreenView10redrawPongEiiii>

90006c00 <_ZN23pongGameScreenPresenter13redrawBouncesEi>:

void pongGameScreenPresenter::redrawBounces(int bounces) {
	view.redrawBounces(bounces);
90006c00:	68c0      	ldr	r0, [r0, #12]
90006c02:	f000 b8a5 	b.w	90006d50 <_ZN18pongGameScreenView13redrawBouncesEi>
90006c06:	bf00      	nop

90006c08 <_ZN23pongGameScreenPresenter11endPongGameEv>:
}

void pongGameScreenPresenter::endPongGame() {
	view.endPongGame();
90006c08:	68c0      	ldr	r0, [r0, #12]
90006c0a:	f000 b86f 	b.w	90006cec <_ZN18pongGameScreenView11endPongGameEv>
90006c0e:	bf00      	nop

90006c10 <_ZThn4_N23pongGameScreenPresenter11endPongGameEv>:

    void receiveDragEvent(const DragEvent& evt);
    void receiveClickEvent(const ClickEvent& evt);
    void redrawPong(int leftPlayerY, int rightPlayerY, int ballX, int ballY, int playerWidth, int playerLength, int ballRadius);
    void redrawBounces(int bounces);
    void endPongGame();
90006c10:	6880      	ldr	r0, [r0, #8]
90006c12:	f000 b86b 	b.w	90006cec <_ZN18pongGameScreenView11endPongGameEv>
90006c16:	bf00      	nop

90006c18 <_ZThn4_N23pongGameScreenPresenter13redrawBouncesEi>:
    void redrawBounces(int bounces);
90006c18:	6880      	ldr	r0, [r0, #8]
90006c1a:	f000 b899 	b.w	90006d50 <_ZN18pongGameScreenView13redrawBouncesEi>
90006c1e:	bf00      	nop

90006c20 <_ZThn4_N23pongGameScreenPresenter10redrawPongEiiiiiii>:
    void redrawPong(int leftPlayerY, int rightPlayerY, int ballX, int ballY, int playerWidth, int playerLength, int ballRadius);
90006c20:	b470      	push	{r4, r5, r6}
90006c22:	e9dd 4605 	ldrd	r4, r6, [sp, #20]
90006c26:	9d03      	ldr	r5, [sp, #12]
90006c28:	2c00      	cmp	r4, #0
90006c2a:	eba3 0306 	sub.w	r3, r3, r6
90006c2e:	eba5 0506 	sub.w	r5, r5, r6
90006c32:	bfb8      	it	lt
90006c34:	3401      	addlt	r4, #1
90006c36:	9503      	str	r5, [sp, #12]
90006c38:	ea4f 0c64 	mov.w	ip, r4, asr #1
90006c3c:	6880      	ldr	r0, [r0, #8]
90006c3e:	f1cc 0c00 	rsb	ip, ip, #0
90006c42:	bc70      	pop	{r4, r5, r6}
90006c44:	4462      	add	r2, ip
90006c46:	4461      	add	r1, ip
90006c48:	f000 b894 	b.w	90006d74 <_ZN18pongGameScreenView10redrawPongEiiii>

90006c4c <_ZN23pongGameScreenPresenterC1ER18pongGameScreenView>:
    : view(v)
90006c4c:	4a05      	ldr	r2, [pc, #20]	@ (90006c64 <_ZN23pongGameScreenPresenterC1ER18pongGameScreenView+0x18>)
90006c4e:	60c1      	str	r1, [r0, #12]
90006c50:	6002      	str	r2, [r0, #0]
pongGameScreenPresenter::pongGameScreenPresenter(pongGameScreenView& v)
90006c52:	b410      	push	{r4}
90006c54:	2400      	movs	r4, #0
90006c56:	6084      	str	r4, [r0, #8]
    : view(v)
90006c58:	f102 0424 	add.w	r4, r2, #36	@ 0x24
90006c5c:	6044      	str	r4, [r0, #4]
}
90006c5e:	f85d 4b04 	ldr.w	r4, [sp], #4
90006c62:	4770      	bx	lr
90006c64:	9002d40c 	.word	0x9002d40c

90006c68 <_ZN23pongGameScreenPresenter9pongSetupEiiiii>:
	model->pongSetup(ballRadius, playerWidth, playerHeight, screenWidth, screenHeight);
90006c68:	6880      	ldr	r0, [r0, #8]
90006c6a:	f7ff bbbd 	b.w	900063e8 <_ZN5Model9pongSetupEiiiii>
90006c6e:	bf00      	nop

90006c70 <_ZN23pongGameScreenPresenter9pongStartEv>:
	model->pongStart();
90006c70:	6880      	ldr	r0, [r0, #8]
90006c72:	f7ff bbd3 	b.w	9000641c <_ZN5Model9pongStartEv>
90006c76:	bf00      	nop

90006c78 <_ZN23pongGameScreenPresenter16receiveDragEventERKN8touchgfx9DragEventE>:
	model->receiveTouchDestination(y);
90006c78:	6880      	ldr	r0, [r0, #8]
90006c7a:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
90006c7e:	f7ff bbfb 	b.w	90006478 <_ZN5Model23receiveTouchDestinationEi>
90006c82:	bf00      	nop

90006c84 <_ZN23pongGameScreenPresenter17receiveClickEventERKN8touchgfx10ClickEventE>:
	model->receiveTouchDestination(y);
90006c84:	6880      	ldr	r0, [r0, #8]
90006c86:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
90006c8a:	f7ff bbf5 	b.w	90006478 <_ZN5Model23receiveTouchDestinationEi>
90006c8e:	bf00      	nop

90006c90 <_ZN18pongGameScreenView14tearDownScreenEv>:
}

void pongGameScreenView::tearDownScreen()
{
    pongGameScreenViewBase::tearDownScreen();
}
90006c90:	4770      	bx	lr
90006c92:	bf00      	nop

90006c94 <_ZN18pongGameScreenView15handleDragEventERKN8touchgfx9DragEventE>:

void pongGameScreenView::handleDragEvent(const DragEvent& evt) {
	/*touchgfx::Unicode::snprintf(textArea1Buffer1, TEXTAREA1BUFFER1_SIZE, "%u", evt.getNewY());
	touchgfx::Unicode::snprintf(textArea1Buffer2, TEXTAREA1BUFFER2_SIZE, "%u", evt.getNewX());
	textArea1.invalidate();*/
	presenter->receiveDragEvent(evt);
90006c94:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006c96:	f7ff bfef 	b.w	90006c78 <_ZN23pongGameScreenPresenter16receiveDragEventERKN8touchgfx9DragEventE>
90006c9a:	bf00      	nop

90006c9c <_ZN18pongGameScreenView16handleClickEventERKN8touchgfx10ClickEventE>:

void pongGameScreenView::handleClickEvent(const ClickEvent& evt) {
	/*touchgfx::Unicode::snprintf(textArea1Buffer1, TEXTAREA1BUFFER1_SIZE, "%u", evt.getY());
	touchgfx::Unicode::snprintf(textArea1Buffer2, TEXTAREA1BUFFER2_SIZE, "%u", evt.getX());
	textArea1.invalidate();*/
	presenter->receiveClickEvent(evt);
90006c9c:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006c9e:	f7ff bff1 	b.w	90006c84 <_ZN23pongGameScreenPresenter17receiveClickEventERKN8touchgfx10ClickEventE>
90006ca2:	bf00      	nop

90006ca4 <_ZN18pongGameScreenViewD1Ev>:

class pongGameScreenView : public pongGameScreenViewBase
{
public:
    pongGameScreenView();
    virtual ~pongGameScreenView() {}
90006ca4:	4b03      	ldr	r3, [pc, #12]	@ (90006cb4 <_ZN18pongGameScreenViewD1Ev+0x10>)
90006ca6:	b510      	push	{r4, lr}
90006ca8:	4604      	mov	r4, r0
90006caa:	6003      	str	r3, [r0, #0]
90006cac:	f7ff f8ee 	bl	90005e8c <_ZN22pongGameScreenViewBaseD1Ev>
90006cb0:	4620      	mov	r0, r4
90006cb2:	bd10      	pop	{r4, pc}
90006cb4:	9002d450 	.word	0x9002d450

90006cb8 <_ZN18pongGameScreenViewD0Ev>:
90006cb8:	4b06      	ldr	r3, [pc, #24]	@ (90006cd4 <_ZN18pongGameScreenViewD0Ev+0x1c>)
90006cba:	b510      	push	{r4, lr}
90006cbc:	4604      	mov	r4, r0
90006cbe:	6003      	str	r3, [r0, #0]
90006cc0:	f7ff f8e4 	bl	90005e8c <_ZN22pongGameScreenViewBaseD1Ev>
90006cc4:	f641 51c4 	movw	r1, #7620	@ 0x1dc4
90006cc8:	4620      	mov	r0, r4
90006cca:	f022 fbcf 	bl	9002946c <_ZdlPvj>
90006cce:	4620      	mov	r0, r4
90006cd0:	bd10      	pop	{r4, pc}
90006cd2:	bf00      	nop
90006cd4:	9002d450 	.word	0x9002d450

90006cd8 <_ZN18pongGameScreenViewC1Ev>:
pongGameScreenView::pongGameScreenView()
90006cd8:	b510      	push	{r4, lr}
90006cda:	4604      	mov	r4, r0
90006cdc:	f7ff f9ae 	bl	9000603c <_ZN22pongGameScreenViewBaseC1Ev>
90006ce0:	4b01      	ldr	r3, [pc, #4]	@ (90006ce8 <_ZN18pongGameScreenViewC1Ev+0x10>)
}
90006ce2:	4620      	mov	r0, r4
pongGameScreenView::pongGameScreenView()
90006ce4:	6023      	str	r3, [r4, #0]
}
90006ce6:	bd10      	pop	{r4, pc}
90006ce8:	9002d450 	.word	0x9002d450

90006cec <_ZN18pongGameScreenView11endPongGameEv>:
void pongGameScreenView::redrawBounces(int bounces) {
	Unicode::snprintf(bouncesTextAreaBuffer, BOUNCESTEXTAREA_SIZE, "%u", bounces);
	bouncesTextArea.invalidate();
}

void pongGameScreenView::endPongGame() {
90006cec:	b508      	push	{r3, lr}
90006cee:	f00f ff59 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
	application().gotogameOverScreenScreenNoTransition();
}
90006cf2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	application().gotogameOverScreenScreenNoTransition();
90006cf6:	f7fe b903 	b.w	90004f00 <_ZN23FrontendApplicationBase36gotogameOverScreenScreenNoTransitionEv>
90006cfa:	bf00      	nop

90006cfc <_ZN18pongGameScreenView11setupScreenEv>:
         * @note Using "to<int16_t>()" result in loss of precision. Use "(int16_t)to<int>()" instead.
         */
        template <typename T>
        T to() const
        {
            return (T)((T)v / (T)Rasterizer::POLY_BASE_SIZE);
90006cfc:	f8d0 1170 	ldr.w	r1, [r0, #368]	@ 0x170
        return HAL::DISPLAY_HEIGHT;
90006d00:	4b10      	ldr	r3, [pc, #64]	@ (90006d44 <_ZN18pongGameScreenView11setupScreenEv+0x48>)
90006d02:	2900      	cmp	r1, #0
        r = circleRadius.to<T>();
90006d04:	4a10      	ldr	r2, [pc, #64]	@ (90006d48 <_ZN18pongGameScreenView11setupScreenEv+0x4c>)
	presenter->pongSetup(r, playerLeftBox.getWidth(), playerLeftBox.getHeight(), getScreenWidth(), getScreenHeight());
90006d06:	f9b3 3000 	ldrsh.w	r3, [r3]
90006d0a:	bfb8      	it	lt
90006d0c:	311f      	addlt	r1, #31
{
90006d0e:	b510      	push	{r4, lr}
90006d10:	4604      	mov	r4, r0
        return HAL::DISPLAY_WIDTH;
90006d12:	480e      	ldr	r0, [pc, #56]	@ (90006d4c <_ZN18pongGameScreenView11setupScreenEv+0x50>)
90006d14:	b082      	sub	sp, #8
90006d16:	1149      	asrs	r1, r1, #5
	presenter->pongSetup(r, playerLeftBox.getWidth(), playerLeftBox.getHeight(), getScreenWidth(), getScreenHeight());
90006d18:	f9b0 0000 	ldrsh.w	r0, [r0]
90006d1c:	6011      	str	r1, [r2, #0]
90006d1e:	9301      	str	r3, [sp, #4]
90006d20:	f9b4 30ee 	ldrsh.w	r3, [r4, #238]	@ 0xee
90006d24:	f9b4 20ec 	ldrsh.w	r2, [r4, #236]	@ 0xec
90006d28:	9000      	str	r0, [sp, #0]
90006d2a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90006d2c:	f7ff ff9c 	bl	90006c68 <_ZN23pongGameScreenPresenter9pongSetupEiiiii>
	presenter->pongStart();
90006d30:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90006d32:	f7ff ff9d 	bl	90006c70 <_ZN23pongGameScreenPresenter9pongStartEv>
    pongGameScreenViewBase::setupScreen();
90006d36:	4620      	mov	r0, r4
}
90006d38:	b002      	add	sp, #8
90006d3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    pongGameScreenViewBase::setupScreen();
90006d3e:	f7ff b899 	b.w	90005e74 <_ZN22pongGameScreenViewBase11setupScreenEv>
90006d42:	bf00      	nop
90006d44:	240233ca 	.word	0x240233ca
90006d48:	240093c0 	.word	0x240093c0
90006d4c:	240233c8 	.word	0x240233c8

90006d50 <_ZN18pongGameScreenView13redrawBouncesEi>:
void pongGameScreenView::redrawBounces(int bounces) {
90006d50:	b510      	push	{r4, lr}
90006d52:	4604      	mov	r4, r0
90006d54:	460b      	mov	r3, r1
	Unicode::snprintf(bouncesTextAreaBuffer, BOUNCESTEXTAREA_SIZE, "%u", bounces);
90006d56:	4a06      	ldr	r2, [pc, #24]	@ (90006d70 <_ZN18pongGameScreenView13redrawBouncesEi+0x20>)
90006d58:	2105      	movs	r1, #5
90006d5a:	f500 70cc 	add.w	r0, r0, #408	@ 0x198
90006d5e:	f013 fa75 	bl	9001a24c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	bouncesTextArea.invalidate();
90006d62:	f104 0098 	add.w	r0, r4, #152	@ 0x98
}
90006d66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	bouncesTextArea.invalidate();
90006d6a:	f010 bf94 	b.w	90017c96 <_ZNK8touchgfx8Drawable10invalidateEv>
90006d6e:	bf00      	nop
90006d70:	9002d444 	.word	0x9002d444

90006d74 <_ZN18pongGameScreenView10redrawPongEiiii>:
void pongGameScreenView::redrawPong(int leftPlayerY, int rightPlayerY, int ballX, int ballY) {
90006d74:	b510      	push	{r4, lr}
90006d76:	4604      	mov	r4, r0
90006d78:	9802      	ldr	r0, [sp, #8]
	pongBall.setPosition(ballX, ballY, 20, 20);
90006d7a:	f8a4 3140 	strh.w	r3, [r4, #320]	@ 0x140
        rect.width = width;
90006d7e:	f04f 1314 	mov.w	r3, #1310740	@ 0x140014
	playerLeftBox.setPosition(playerLeftBox.getX(), leftPlayerY, playerLeftBox.getWidth(), playerLeftBox.getHeight());
90006d82:	f8a4 10ea 	strh.w	r1, [r4, #234]	@ 0xea
90006d86:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
	playerRightBox.setPosition(playerRightBox.getX(), rightPlayerY, playerRightBox.getWidth(), playerRightBox.getHeight());
90006d8a:	f8a4 2116 	strh.w	r2, [r4, #278]	@ 0x116
	pongBall.setPosition(ballX, ballY, 20, 20);
90006d8e:	f8a4 0142 	strh.w	r0, [r4, #322]	@ 0x142
	backgroundBox.invalidate();
90006d92:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
90006d96:	f010 ff7e 	bl	90017c96 <_ZNK8touchgfx8Drawable10invalidateEv>
	pongBall.invalidate();
90006d9a:	f504 709e 	add.w	r0, r4, #316	@ 0x13c
90006d9e:	f00c fd35 	bl	9001380c <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	playerLeftBox.invalidate();
90006da2:	f104 00e4 	add.w	r0, r4, #228	@ 0xe4
90006da6:	f010 ff76 	bl	90017c96 <_ZNK8touchgfx8Drawable10invalidateEv>
	playerRightBox.invalidate();
90006daa:	f504 7088 	add.w	r0, r4, #272	@ 0x110
}
90006dae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	playerRightBox.invalidate();
90006db2:	f010 bf70 	b.w	90017c96 <_ZNK8touchgfx8Drawable10invalidateEv>
90006db6:	bf00      	nop

90006db8 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90006db8:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90006dbc:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90006dbe:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006dc2:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90006dc6:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90006dc8:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90006dca:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006dce:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90006dd2:	4770      	bx	lr

90006dd4 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90006dd4:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90006dd8:	2b01      	cmp	r3, #1
90006dda:	d102      	bne.n	90006de2 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90006ddc:	2300      	movs	r3, #0
90006dde:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
90006de2:	2000      	movs	r0, #0
90006de4:	4770      	bx	lr
90006de6:	bf00      	nop

90006de8 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90006de8:	2000      	movs	r0, #0
90006dea:	4770      	bx	lr

90006dec <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006dec:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006dee:	6904      	ldr	r4, [r0, #16]
90006df0:	8900      	ldrh	r0, [r0, #8]
90006df2:	46a4      	mov	ip, r4
}
90006df4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006df8:	4760      	bx	ip
90006dfa:	bf00      	nop

90006dfc <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006dfc:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006dfe:	68c4      	ldr	r4, [r0, #12]
90006e00:	8900      	ldrh	r0, [r0, #8]
90006e02:	46a4      	mov	ip, r4
}
90006e04:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006e08:	4760      	bx	ip
90006e0a:	bf00      	nop

90006e0c <FT5336_GestureConfig>:
{
90006e0c:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006e0e:	f100 0518 	add.w	r5, r0, #24
{
90006e12:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006e14:	7809      	ldrb	r1, [r1, #0]
90006e16:	4628      	mov	r0, r5
90006e18:	f000 f96c 	bl	900070f4 <ft5336_radian_value>
90006e1c:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90006e1e:	7931      	ldrb	r1, [r6, #4]
90006e20:	4628      	mov	r0, r5
90006e22:	f000 f975 	bl	90007110 <ft5336_offset_left_right>
90006e26:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90006e28:	7a31      	ldrb	r1, [r6, #8]
90006e2a:	4628      	mov	r0, r5
90006e2c:	f000 f97e 	bl	9000712c <ft5336_offset_up_down>
90006e30:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006e32:	7b31      	ldrb	r1, [r6, #12]
90006e34:	4628      	mov	r0, r5
90006e36:	f000 f987 	bl	90007148 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006e3a:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006e3c:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006e3e:	4628      	mov	r0, r5
90006e40:	f000 f990 	bl	90007164 <ft5336_distance_up_down>
90006e44:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006e46:	7d31      	ldrb	r1, [r6, #20]
90006e48:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006e4a:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006e4c:	f000 f998 	bl	90007180 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90006e50:	42c4      	cmn	r4, r0
}
90006e52:	bf14      	ite	ne
90006e54:	f04f 30ff 	movne.w	r0, #4294967295
90006e58:	2000      	moveq	r0, #0
90006e5a:	bd70      	pop	{r4, r5, r6, pc}

90006e5c <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90006e5c:	3018      	adds	r0, #24
90006e5e:	f000 b9ab 	b.w	900071b8 <ft5336_chip_id>
90006e62:	bf00      	nop

90006e64 <FT5336_GetState>:
{
90006e64:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006e66:	f100 0518 	add.w	r5, r0, #24
{
90006e6a:	b083      	sub	sp, #12
90006e6c:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006e6e:	4628      	mov	r0, r5
90006e70:	a901      	add	r1, sp, #4
90006e72:	f000 f931 	bl	900070d8 <ft5336_td_status>
90006e76:	bb10      	cbnz	r0, 90006ebe <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006e78:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006e7c:	2b05      	cmp	r3, #5
90006e7e:	bf94      	ite	ls
90006e80:	4619      	movls	r1, r3
90006e82:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006e84:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006e86:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006e88:	4628      	mov	r0, r5
90006e8a:	2103      	movs	r1, #3
90006e8c:	eb0d 0203 	add.w	r2, sp, r3
90006e90:	f000 f910 	bl	900070b4 <ft5336_read_reg>
90006e94:	b9b0      	cbnz	r0, 90006ec4 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006e96:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006e9a:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006e9e:	0212      	lsls	r2, r2, #8
90006ea0:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006ea4:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006ea6:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006eaa:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006eae:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006eb0:	f89d 1007 	ldrb.w	r1, [sp, #7]
90006eb4:	430b      	orrs	r3, r1
90006eb6:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90006eba:	b003      	add	sp, #12
90006ebc:	bd30      	pop	{r4, r5, pc}
90006ebe:	f04f 31ff 	mov.w	r1, #4294967295
90006ec2:	e7df      	b.n	90006e84 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90006ec4:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006ec8:	e7f7      	b.n	90006eba <FT5336_GetState+0x56>
90006eca:	bf00      	nop

90006ecc <FT5336_GetMultiTouchState>:
{
90006ecc:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006ece:	f100 0518 	add.w	r5, r0, #24
{
90006ed2:	b088      	sub	sp, #32
90006ed4:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006ed6:	4628      	mov	r0, r5
90006ed8:	4669      	mov	r1, sp
90006eda:	f000 f8fd 	bl	900070d8 <ft5336_td_status>
90006ede:	2800      	cmp	r0, #0
90006ee0:	f040 809a 	bne.w	90007018 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006ee4:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006ee8:	2b05      	cmp	r3, #5
90006eea:	bf94      	ite	ls
90006eec:	4619      	movls	r1, r3
90006eee:	2100      	movhi	r1, #0
90006ef0:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006ef2:	231e      	movs	r3, #30
90006ef4:	466a      	mov	r2, sp
90006ef6:	4628      	mov	r0, r5
90006ef8:	2103      	movs	r1, #3
90006efa:	f000 f8db 	bl	900070b4 <ft5336_read_reg>
90006efe:	2800      	cmp	r0, #0
90006f00:	f040 808d 	bne.w	9000701e <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f04:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006f08:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f0c:	020a      	lsls	r2, r1, #8
90006f0e:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006f12:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f14:	f89d c007 	ldrb.w	ip, [sp, #7]
90006f18:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006f1c:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006f1e:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006f22:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f26:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006f28:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006f2c:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006f2e:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006f30:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f32:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006f34:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006f38:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006f3a:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f3e:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006f42:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006f44:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006f46:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f4a:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006f4c:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006f4e:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f50:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006f54:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006f56:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f58:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006f5c:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006f60:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f62:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006f64:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f66:	ea45 050c 	orr.w	r5, r5, ip
90006f6a:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006f6e:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006f72:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f74:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006f76:	0212      	lsls	r2, r2, #8
90006f78:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006f7c:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006f7e:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006f82:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006f86:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006f88:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006f8a:	f89d 300e 	ldrb.w	r3, [sp, #14]
90006f8e:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f90:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006f94:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f96:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006f98:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006f9c:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006f9e:	f89d 200f 	ldrb.w	r2, [sp, #15]
90006fa2:	4313      	orrs	r3, r2
90006fa4:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006fa6:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006fa8:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006fac:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006fb0:	020a      	lsls	r2, r1, #8
90006fb2:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006fb6:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006fb8:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006fbc:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006fbe:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006fc2:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006fc4:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006fc8:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006fca:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006fcc:	f89d 1018 	ldrb.w	r1, [sp, #24]
90006fd0:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006fd2:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006fd4:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006fd6:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006fda:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006fdc:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006fe0:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006fe2:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006fe6:	f89d 301d 	ldrb.w	r3, [sp, #29]
90006fea:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006fec:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006fee:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006ff0:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006ff4:	6625      	str	r5, [r4, #96]	@ 0x60
90006ff6:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006ff8:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006ffc:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006ffe:	021b      	lsls	r3, r3, #8
90007000:	f89d 101b 	ldrb.w	r1, [sp, #27]
90007004:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
90007008:	430b      	orrs	r3, r1
9000700a:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000700c:	f89d 3019 	ldrb.w	r3, [sp, #25]
90007010:	4313      	orrs	r3, r2
90007012:	6163      	str	r3, [r4, #20]
}
90007014:	b008      	add	sp, #32
90007016:	bd70      	pop	{r4, r5, r6, pc}
90007018:	f04f 31ff 	mov.w	r1, #4294967295
9000701c:	e768      	b.n	90006ef0 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
9000701e:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90007022:	e7f7      	b.n	90007014 <FT5336_GetMultiTouchState+0x148>

90007024 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90007024:	3018      	adds	r0, #24
90007026:	f000 b84d 	b.w	900070c4 <ft5336_gest_id>
9000702a:	bf00      	nop

9000702c <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
9000702c:	2101      	movs	r1, #1
9000702e:	3018      	adds	r0, #24
90007030:	f000 b8b4 	b.w	9000719c <ft5336_g_mode>

90007034 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90007034:	2100      	movs	r1, #0
90007036:	3018      	adds	r0, #24
90007038:	f000 b8b0 	b.w	9000719c <ft5336_g_mode>

9000703c <FT5336_Init>:
{
9000703c:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
9000703e:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
90007042:	b98d      	cbnz	r5, 90007068 <FT5336_Init+0x2c>
    pObj->IO.Init();
90007044:	4606      	mov	r6, r0
90007046:	4604      	mov	r4, r0
90007048:	f856 3b18 	ldr.w	r3, [r6], #24
9000704c:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
9000704e:	4629      	mov	r1, r5
90007050:	4630      	mov	r0, r6
90007052:	f000 f8a3 	bl	9000719c <ft5336_g_mode>
  if(ret != FT5336_OK)
90007056:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90007058:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
9000705c:	bf18      	it	ne
9000705e:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90007060:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
90007064:	4240      	negs	r0, r0
}
90007066:	bd70      	pop	{r4, r5, r6, pc}
    ret += FT5336_DisableIT(pObj);
90007068:	2000      	movs	r0, #0
}
9000706a:	bd70      	pop	{r4, r5, r6, pc}

9000706c <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
9000706c:	2000      	movs	r0, #0
9000706e:	4770      	bx	lr

90007070 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90007070:	b1c0      	cbz	r0, 900070a4 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90007072:	890a      	ldrh	r2, [r1, #8]
{
90007074:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90007076:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
9000707a:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
9000707c:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90007080:	694a      	ldr	r2, [r1, #20]
90007082:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90007086:	4909      	ldr	r1, [pc, #36]	@ (900070ac <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90007088:	60c5      	str	r5, [r0, #12]
9000708a:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
9000708e:	4a08      	ldr	r2, [pc, #32]	@ (900070b0 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90007090:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90007094:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90007096:	b10b      	cbz	r3, 9000709c <FT5336_RegisterBusIO+0x2c>
}
90007098:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
9000709a:	4718      	bx	r3
}
9000709c:	f04f 30ff 	mov.w	r0, #4294967295
900070a0:	bc30      	pop	{r4, r5}
900070a2:	4770      	bx	lr
900070a4:	f04f 30ff 	mov.w	r0, #4294967295
900070a8:	4770      	bx	lr
900070aa:	bf00      	nop
900070ac:	90006ded 	.word	0x90006ded
900070b0:	90006dfd 	.word	0x90006dfd

900070b4 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
900070b4:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900070b6:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900070ba:	46a4      	mov	ip, r4
}
900070bc:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900070c0:	4760      	bx	ip
900070c2:	bf00      	nop

900070c4 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900070c4:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900070c6:	2301      	movs	r3, #1
{
900070c8:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900070ca:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900070ce:	4619      	mov	r1, r3
900070d0:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
900070d2:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900070d6:	4760      	bx	ip

900070d8 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
900070d8:	b538      	push	{r3, r4, r5, lr}
900070da:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900070dc:	2301      	movs	r3, #1
900070de:	2102      	movs	r1, #2
900070e0:	4622      	mov	r2, r4
900070e2:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
900070e6:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
900070e8:	b918      	cbnz	r0, 900070f2 <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
900070ea:	7823      	ldrb	r3, [r4, #0]
900070ec:	f003 030f 	and.w	r3, r3, #15
900070f0:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
900070f2:	bd38      	pop	{r3, r4, r5, pc}

900070f4 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
900070f4:	b510      	push	{r4, lr}
900070f6:	460c      	mov	r4, r1
900070f8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900070fa:	2301      	movs	r3, #1
900070fc:	2191      	movs	r1, #145	@ 0x91
{
900070fe:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007102:	f10d 0207 	add.w	r2, sp, #7
90007106:	6804      	ldr	r4, [r0, #0]
90007108:	6880      	ldr	r0, [r0, #8]
9000710a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
9000710c:	b002      	add	sp, #8
9000710e:	bd10      	pop	{r4, pc}

90007110 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90007110:	b510      	push	{r4, lr}
90007112:	460c      	mov	r4, r1
90007114:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007116:	2301      	movs	r3, #1
90007118:	2192      	movs	r1, #146	@ 0x92
{
9000711a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000711e:	f10d 0207 	add.w	r2, sp, #7
90007122:	6804      	ldr	r4, [r0, #0]
90007124:	6880      	ldr	r0, [r0, #8]
90007126:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90007128:	b002      	add	sp, #8
9000712a:	bd10      	pop	{r4, pc}

9000712c <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
9000712c:	b510      	push	{r4, lr}
9000712e:	460c      	mov	r4, r1
90007130:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007132:	2301      	movs	r3, #1
90007134:	2193      	movs	r1, #147	@ 0x93
{
90007136:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000713a:	f10d 0207 	add.w	r2, sp, #7
9000713e:	6804      	ldr	r4, [r0, #0]
90007140:	6880      	ldr	r0, [r0, #8]
90007142:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90007144:	b002      	add	sp, #8
90007146:	bd10      	pop	{r4, pc}

90007148 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90007148:	b510      	push	{r4, lr}
9000714a:	460c      	mov	r4, r1
9000714c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000714e:	2301      	movs	r3, #1
90007150:	2194      	movs	r1, #148	@ 0x94
{
90007152:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007156:	f10d 0207 	add.w	r2, sp, #7
9000715a:	6804      	ldr	r4, [r0, #0]
9000715c:	6880      	ldr	r0, [r0, #8]
9000715e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90007160:	b002      	add	sp, #8
90007162:	bd10      	pop	{r4, pc}

90007164 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90007164:	b510      	push	{r4, lr}
90007166:	460c      	mov	r4, r1
90007168:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000716a:	2301      	movs	r3, #1
9000716c:	2195      	movs	r1, #149	@ 0x95
{
9000716e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007172:	f10d 0207 	add.w	r2, sp, #7
90007176:	6804      	ldr	r4, [r0, #0]
90007178:	6880      	ldr	r0, [r0, #8]
9000717a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
9000717c:	b002      	add	sp, #8
9000717e:	bd10      	pop	{r4, pc}

90007180 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90007180:	b510      	push	{r4, lr}
90007182:	460c      	mov	r4, r1
90007184:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007186:	2301      	movs	r3, #1
90007188:	2196      	movs	r1, #150	@ 0x96
{
9000718a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000718e:	f10d 0207 	add.w	r2, sp, #7
90007192:	6804      	ldr	r4, [r0, #0]
90007194:	6880      	ldr	r0, [r0, #8]
90007196:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90007198:	b002      	add	sp, #8
9000719a:	bd10      	pop	{r4, pc}

9000719c <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
9000719c:	b510      	push	{r4, lr}
9000719e:	460c      	mov	r4, r1
900071a0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900071a2:	2301      	movs	r3, #1
900071a4:	21a4      	movs	r1, #164	@ 0xa4
{
900071a6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900071aa:	f10d 0207 	add.w	r2, sp, #7
900071ae:	6804      	ldr	r4, [r0, #0]
900071b0:	6880      	ldr	r0, [r0, #8]
900071b2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
900071b4:	b002      	add	sp, #8
900071b6:	bd10      	pop	{r4, pc}

900071b8 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900071b8:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900071ba:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
900071be:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900071c0:	2301      	movs	r3, #1
900071c2:	46a4      	mov	ip, r4
900071c4:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
900071c6:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900071ca:	4760      	bx	ip

900071cc <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
900071cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
900071ce:	680b      	ldr	r3, [r1, #0]
{
900071d0:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
900071d2:	4c2a      	ldr	r4, [pc, #168]	@ (9000727c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900071d4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
{
900071d8:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
900071da:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
900071dc:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900071de:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
900071e0:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
900071e2:	2301      	movs	r3, #1
900071e4:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
900071e6:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900071e8:	f005 ffba 	bl	9000d160 <HAL_SDRAM_SendCommand>
900071ec:	2800      	cmp	r0, #0
900071ee:	d142      	bne.n	90007276 <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
900071f0:	f000 ff48 	bl	90008084 <HAL_GetTick>
900071f4:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
900071f6:	f000 ff45 	bl	90008084 <HAL_GetTick>
900071fa:	4286      	cmp	r6, r0
900071fc:	d0fb      	beq.n	900071f6 <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
900071fe:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90007200:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90007202:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007204:	491d      	ldr	r1, [pc, #116]	@ (9000727c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90007206:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90007208:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
9000720a:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000720c:	4638      	mov	r0, r7
9000720e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
90007212:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90007214:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007216:	f005 ffa3 	bl	9000d160 <HAL_SDRAM_SendCommand>
9000721a:	bb60      	cbnz	r0, 90007276 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000721c:	4917      	ldr	r1, [pc, #92]	@ (9000727c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
9000721e:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90007222:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007224:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90007226:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
9000722a:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000722c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
90007230:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007232:	f005 ff95 	bl	9000d160 <HAL_SDRAM_SendCommand>
90007236:	b9f0      	cbnz	r0, 90007276 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007238:	4910      	ldr	r1, [pc, #64]	@ (9000727c <MT48LC4M32B2_Init+0xb0>)
9000723a:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
9000723c:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90007240:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90007242:	696a      	ldr	r2, [r5, #20]
90007244:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90007246:	69aa      	ldr	r2, [r5, #24]
90007248:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
9000724a:	69ea      	ldr	r2, [r5, #28]
9000724c:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
9000724e:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90007250:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90007252:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90007254:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007258:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
9000725c:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000725e:	f005 ff7f 	bl	9000d160 <HAL_SDRAM_SendCommand>
90007262:	b940      	cbnz	r0, 90007276 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90007264:	68a9      	ldr	r1, [r5, #8]
90007266:	4638      	mov	r0, r7
90007268:	f005 ff9a 	bl	9000d1a0 <HAL_SDRAM_ProgramRefreshRate>
9000726c:	3800      	subs	r0, #0
9000726e:	bf18      	it	ne
90007270:	2001      	movne	r0, #1
90007272:	4240      	negs	r0, r0
}
90007274:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90007276:	f04f 30ff 	mov.w	r0, #4294967295
}
9000727a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000727c:	240093c8 	.word	0x240093c8

90007280 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90007280:	4a10      	ldr	r2, [pc, #64]	@ (900072c4 <BSP_I2C4_DeInit+0x44>)
{
90007282:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90007284:	6813      	ldr	r3, [r2, #0]
90007286:	3b01      	subs	r3, #1
90007288:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
9000728a:	b10b      	cbz	r3, 90007290 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
9000728c:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
9000728e:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90007290:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90007294:	480c      	ldr	r0, [pc, #48]	@ (900072c8 <BSP_I2C4_DeInit+0x48>)
90007296:	f001 fab7 	bl	90008808 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
9000729a:	480b      	ldr	r0, [pc, #44]	@ (900072c8 <BSP_I2C4_DeInit+0x48>)
9000729c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
900072a0:	f001 fab2 	bl	90008808 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
900072a4:	4a09      	ldr	r2, [pc, #36]	@ (900072cc <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900072a6:	480a      	ldr	r0, [pc, #40]	@ (900072d0 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
900072a8:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
900072ac:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
900072b0:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900072b4:	f001 feb4 	bl	90009020 <HAL_I2C_DeInit>
900072b8:	2800      	cmp	r0, #0
900072ba:	d0e7      	beq.n	9000728c <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
900072bc:	f06f 0007 	mvn.w	r0, #7
}
900072c0:	bd08      	pop	{r3, pc}
900072c2:	bf00      	nop
900072c4:	24009e30 	.word	0x24009e30
900072c8:	58020c00 	.word	0x58020c00
900072cc:	58024400 	.word	0x58024400
900072d0:	240093d8 	.word	0x240093d8

900072d4 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
900072d4:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
900072d6:	2201      	movs	r2, #1
{
900072d8:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
900072da:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
900072de:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
900072e2:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
900072e6:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
900072ea:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
900072ec:	f001 fe3c 	bl	90008f68 <HAL_I2C_Init>
900072f0:	b108      	cbz	r0, 900072f6 <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
900072f2:	2001      	movs	r0, #1
}
900072f4:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
900072f6:	4601      	mov	r1, r0
900072f8:	4620      	mov	r0, r4
900072fa:	f002 f8af 	bl	9000945c <HAL_I2CEx_ConfigAnalogFilter>
900072fe:	2800      	cmp	r0, #0
90007300:	d1f7      	bne.n	900072f2 <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90007302:	4601      	mov	r1, r0
90007304:	4620      	mov	r0, r4
90007306:	f002 f8d3 	bl	900094b0 <HAL_I2CEx_ConfigDigitalFilter>
9000730a:	3800      	subs	r0, #0
9000730c:	bf18      	it	ne
9000730e:	2001      	movne	r0, #1
}
90007310:	bd10      	pop	{r4, pc}
90007312:	bf00      	nop

90007314 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90007314:	4b9a      	ldr	r3, [pc, #616]	@ (90007580 <BSP_I2C4_Init+0x26c>)
  hbus_i2c4.Instance = BUS_I2C4;
90007316:	489b      	ldr	r0, [pc, #620]	@ (90007584 <BSP_I2C4_Init+0x270>)
90007318:	4a9b      	ldr	r2, [pc, #620]	@ (90007588 <BSP_I2C4_Init+0x274>)
{
9000731a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
9000731e:	681c      	ldr	r4, [r3, #0]
{
90007320:	b09d      	sub	sp, #116	@ 0x74
  hbus_i2c4.Instance = BUS_I2C4;
90007322:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90007324:	b11c      	cbz	r4, 9000732e <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
90007326:	2000      	movs	r0, #0
}
90007328:	b01d      	add	sp, #116	@ 0x74
9000732a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
9000732e:	2201      	movs	r2, #1
90007330:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90007332:	f002 f88d 	bl	90009450 <HAL_I2C_GetState>
90007336:	2800      	cmp	r0, #0
90007338:	d1f5      	bne.n	90007326 <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
9000733a:	4d94      	ldr	r5, [pc, #592]	@ (9000758c <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
9000733c:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
90007340:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90007342:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90007344:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007348:	f04f 0800 	mov.w	r8, #0
9000734c:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90007350:	f043 0308 	orr.w	r3, r3, #8
90007354:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90007358:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000735c:	f003 0308 	and.w	r3, r3, #8
90007360:	9313      	str	r3, [sp, #76]	@ 0x4c
90007362:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007364:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90007368:	f043 0308 	orr.w	r3, r3, #8
9000736c:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90007370:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90007374:	961a      	str	r6, [sp, #104]	@ 0x68
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007376:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
9000737a:	e9cd 0116 	strd	r0, r1, [sp, #88]	@ 0x58
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000737e:	9314      	str	r3, [sp, #80]	@ 0x50
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90007380:	a916      	add	r1, sp, #88	@ 0x58
90007382:	4883      	ldr	r0, [pc, #524]	@ (90007590 <BSP_I2C4_Init+0x27c>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007384:	9b14      	ldr	r3, [sp, #80]	@ 0x50
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007386:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
9000738a:	f001 f8fb 	bl	90008584 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
9000738e:	2312      	movs	r3, #18
90007390:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90007394:	a916      	add	r1, sp, #88	@ 0x58
90007396:	487e      	ldr	r0, [pc, #504]	@ (90007590 <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90007398:	961a      	str	r6, [sp, #104]	@ 0x68
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
9000739a:	e9cd 2316 	strd	r2, r3, [sp, #88]	@ 0x58
9000739e:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900073a2:	f001 f8ef 	bl	90008584 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
900073a6:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
900073aa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
900073ae:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
900073b2:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
900073b6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
900073ba:	9315      	str	r3, [sp, #84]	@ 0x54
900073bc:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_FORCE_RESET();
900073be:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
900073c2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
900073c6:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
900073ca:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
900073ce:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
900073d2:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900073d6:	f004 fdd9 	bl	9000bf8c <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
900073da:	2800      	cmp	r0, #0
900073dc:	f000 81fd 	beq.w	900077da <BSP_I2C4_Init+0x4c6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900073e0:	4b6c      	ldr	r3, [pc, #432]	@ (90007594 <BSP_I2C4_Init+0x280>)
  if (tsdadel_max <= 0)
900073e2:	4625      	mov	r5, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
900073e4:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073e8:	4e6b      	ldr	r6, [pc, #428]	@ (90007598 <BSP_I2C4_Init+0x284>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900073ea:	eb03 0350 	add.w	r3, r3, r0, lsr #1
900073ee:	9401      	str	r4, [sp, #4]
900073f0:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
900073f4:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900073f6:	9700      	str	r7, [sp, #0]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
900073f8:	eb07 0147 	add.w	r1, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
900073fc:	f5c3 7cc3 	rsb	ip, r3, #390	@ 0x186
90007400:	4b66      	ldr	r3, [pc, #408]	@ (9000759c <BSP_I2C4_Init+0x288>)
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90007402:	007a      	lsls	r2, r7, #1
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90007404:	f1c1 0e32 	rsb	lr, r1, #50	@ 0x32
90007408:	6819      	ldr	r1, [r3, #0]
  if (tsdadel_max <= 0)
9000740a:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
9000740e:	9202      	str	r2, [sp, #8]
  if (tsdadel_min <= 0)
90007410:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_max <= 0)
90007414:	4689      	mov	r9, r1
90007416:	4622      	mov	r2, r4
90007418:	9111      	str	r1, [sp, #68]	@ 0x44
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
9000741a:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
9000741e:	46b8      	mov	r8, r7
90007420:	eb07 0347 	add.w	r3, r7, r7, lsl #1
90007424:	bf2c      	ite	cs
90007426:	2001      	movcs	r0, #1
90007428:	2000      	movcc	r0, #0
9000742a:	ebbe 0f47 	cmp.w	lr, r7, lsl #1
9000742e:	f000 0001 	and.w	r0, r0, #1
90007432:	eb07 0187 	add.w	r1, r7, r7, lsl #2
90007436:	bf88      	it	hi
90007438:	2000      	movhi	r0, #0
9000743a:	459e      	cmp	lr, r3
9000743c:	eb07 0483 	add.w	r4, r7, r3, lsl #2
90007440:	9004      	str	r0, [sp, #16]
90007442:	bf8c      	ite	hi
90007444:	2000      	movhi	r0, #0
90007446:	2001      	movls	r0, #1
90007448:	459c      	cmp	ip, r3
9000744a:	940f      	str	r4, [sp, #60]	@ 0x3c
9000744c:	ebc7 0bc7 	rsb	fp, r7, r7, lsl #3
90007450:	bf38      	it	cc
90007452:	2000      	movcc	r0, #0
90007454:	ebbe 0f87 	cmp.w	lr, r7, lsl #2
90007458:	9006      	str	r0, [sp, #24]
9000745a:	eb07 0041 	add.w	r0, r7, r1, lsl #1
9000745e:	9005      	str	r0, [sp, #20]
90007460:	bf94      	ite	ls
90007462:	2001      	movls	r0, #1
90007464:	2000      	movhi	r0, #0
90007466:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
9000746a:	f000 0401 	and.w	r4, r0, #1
9000746e:	bf38      	it	cc
90007470:	2400      	movcc	r4, #0
90007472:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007474:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007478:	9407      	str	r4, [sp, #28]
9000747a:	bf8c      	ite	hi
9000747c:	2400      	movhi	r4, #0
9000747e:	2401      	movls	r4, #1
90007480:	458c      	cmp	ip, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007482:	9003      	str	r0, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007484:	bf38      	it	cc
90007486:	2400      	movcc	r4, #0
90007488:	ebbe 0f43 	cmp.w	lr, r3, lsl #1
9000748c:	bf98      	it	ls
9000748e:	2001      	movls	r0, #1
90007490:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
90007494:	9408      	str	r4, [sp, #32]
90007496:	465c      	mov	r4, fp
90007498:	f000 0001 	and.w	r0, r0, #1
9000749c:	bf38      	it	cc
9000749e:	2000      	movcc	r0, #0
900074a0:	45de      	cmp	lr, fp
900074a2:	9009      	str	r0, [sp, #36]	@ 0x24
900074a4:	4658      	mov	r0, fp
900074a6:	bf8c      	ite	hi
900074a8:	2000      	movhi	r0, #0
900074aa:	2001      	movls	r0, #1
900074ac:	45dc      	cmp	ip, fp
900074ae:	bf38      	it	cc
900074b0:	2000      	movcc	r0, #0
900074b2:	ebbe 0fc7 	cmp.w	lr, r7, lsl #3
900074b6:	4683      	mov	fp, r0
900074b8:	bf94      	ite	ls
900074ba:	f04f 0b01 	movls.w	fp, #1
900074be:	f04f 0b00 	movhi.w	fp, #0
900074c2:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
900074c6:	900a      	str	r0, [sp, #40]	@ 0x28
900074c8:	f00b 0b01 	and.w	fp, fp, #1
900074cc:	bf38      	it	cc
900074ce:	f04f 0b00 	movcc.w	fp, #0
900074d2:	4658      	mov	r0, fp
900074d4:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
900074d8:	eb07 0bc7 	add.w	fp, r7, r7, lsl #3
900074dc:	45de      	cmp	lr, fp
900074de:	bf8c      	ite	hi
900074e0:	2000      	movhi	r0, #0
900074e2:	2001      	movls	r0, #1
900074e4:	45dc      	cmp	ip, fp
900074e6:	bf38      	it	cc
900074e8:	2000      	movcc	r0, #0
900074ea:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
900074ee:	900c      	str	r0, [sp, #48]	@ 0x30
900074f0:	bf98      	it	ls
900074f2:	f04f 0b01 	movls.w	fp, #1
900074f6:	9805      	ldr	r0, [sp, #20]
900074f8:	bf88      	it	hi
900074fa:	f04f 0b00 	movhi.w	fp, #0
900074fe:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
90007502:	f00b 0b01 	and.w	fp, fp, #1
90007506:	4601      	mov	r1, r0
90007508:	bf38      	it	cc
9000750a:	f04f 0b00 	movcc.w	fp, #0
9000750e:	4586      	cmp	lr, r0
90007510:	bf8c      	ite	hi
90007512:	2100      	movhi	r1, #0
90007514:	2101      	movls	r1, #1
90007516:	4584      	cmp	ip, r0
90007518:	4620      	mov	r0, r4
9000751a:	bf38      	it	cc
9000751c:	2100      	movcc	r1, #0
9000751e:	ebbe 0f83 	cmp.w	lr, r3, lsl #2
90007522:	910d      	str	r1, [sp, #52]	@ 0x34
90007524:	bf94      	ite	ls
90007526:	2101      	movls	r1, #1
90007528:	2100      	movhi	r1, #0
9000752a:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
9000752e:	f001 0101 	and.w	r1, r1, #1
90007532:	bf38      	it	cc
90007534:	2100      	movcc	r1, #0
90007536:	910e      	str	r1, [sp, #56]	@ 0x38
90007538:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9000753a:	4571      	cmp	r1, lr
9000753c:	460b      	mov	r3, r1
9000753e:	bf34      	ite	cc
90007540:	2300      	movcc	r3, #0
90007542:	2301      	movcs	r3, #1
90007544:	4561      	cmp	r1, ip
90007546:	bf88      	it	hi
90007548:	2300      	movhi	r3, #0
9000754a:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
9000754e:	930f      	str	r3, [sp, #60]	@ 0x3c
90007550:	bf94      	ite	ls
90007552:	2301      	movls	r3, #1
90007554:	2300      	movhi	r3, #0
90007556:	ebbc 0f44 	cmp.w	ip, r4, lsl #1
9000755a:	f04f 0400 	mov.w	r4, #0
9000755e:	f003 0301 	and.w	r3, r3, #1
90007562:	bf38      	it	cc
90007564:	2300      	movcc	r3, #0
90007566:	9310      	str	r3, [sp, #64]	@ 0x40
90007568:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
9000756c:	459e      	cmp	lr, r3
9000756e:	bf8c      	ite	hi
90007570:	2100      	movhi	r1, #0
90007572:	2101      	movls	r1, #1
90007574:	459c      	cmp	ip, r3
90007576:	bf38      	it	cc
90007578:	2100      	movcc	r1, #0
9000757a:	9105      	str	r1, [sp, #20]
9000757c:	e014      	b.n	900075a8 <BSP_I2C4_Init+0x294>
9000757e:	bf00      	nop
90007580:	24009e30 	.word	0x24009e30
90007584:	240093d8 	.word	0x240093d8
90007588:	58001c00 	.word	0x58001c00
9000758c:	58024400 	.word	0x58024400
90007590:	58020c00 	.word	0x58020c00
90007594:	3b9aca00 	.word	0x3b9aca00
90007598:	24009430 	.word	0x24009430
9000759c:	2400942c 	.word	0x2400942c
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900075a0:	2c10      	cmp	r4, #16
900075a2:	44b8      	add	r8, r7
900075a4:	f000 8273 	beq.w	90007a8e <BSP_I2C4_Init+0x77a>
      if (tscldel >= (uint32_t)tscldel_min)
900075a8:	f5b8 7faf 	cmp.w	r8, #350	@ 0x15e
900075ac:	4623      	mov	r3, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
900075ae:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
900075b2:	d3f5      	bcc.n	900075a0 <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
900075b4:	ebba 0105 	subs.w	r1, sl, r5
900075b8:	bf18      	it	ne
900075ba:	2101      	movne	r1, #1
900075bc:	f1be 0f00 	cmp.w	lr, #0
900075c0:	bf18      	it	ne
900075c2:	2100      	movne	r1, #0
900075c4:	2900      	cmp	r1, #0
900075c6:	f040 8250 	bne.w	90007a6a <BSP_I2C4_Init+0x756>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900075ca:	45bc      	cmp	ip, r7
900075cc:	bf34      	ite	cc
900075ce:	2100      	movcc	r1, #0
900075d0:	2101      	movcs	r1, #1
900075d2:	45be      	cmp	lr, r7
900075d4:	bf88      	it	hi
900075d6:	2100      	movhi	r1, #0
            if(presc != prev_presc)
900075d8:	45aa      	cmp	sl, r5
900075da:	bf0c      	ite	eq
900075dc:	2100      	moveq	r1, #0
900075de:	f001 0101 	andne.w	r1, r1, #1
900075e2:	2900      	cmp	r1, #0
900075e4:	f000 8103 	beq.w	900077ee <BSP_I2C4_Init+0x4da>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075e8:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900075ec:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900075f0:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075f2:	46b2      	mov	sl, r6
900075f4:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900075f8:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075fc:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007600:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007602:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007604:	f200 81aa 	bhi.w	9000795c <BSP_I2C4_Init+0x648>
90007608:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000760a:	9a06      	ldr	r2, [sp, #24]
9000760c:	45aa      	cmp	sl, r5
9000760e:	bf0c      	ite	eq
90007610:	2200      	moveq	r2, #0
90007612:	f002 0201 	andne.w	r2, r2, #1
90007616:	2a00      	cmp	r2, #0
90007618:	f000 8105 	beq.w	90007826 <BSP_I2C4_Init+0x512>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000761c:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007620:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007624:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007626:	46b2      	mov	sl, r6
90007628:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000762c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007630:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007634:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007636:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007638:	f200 8190 	bhi.w	9000795c <BSP_I2C4_Init+0x648>
9000763c:	4611      	mov	r1, r2
9000763e:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007640:	9a08      	ldr	r2, [sp, #32]
90007642:	45aa      	cmp	sl, r5
90007644:	bf0c      	ite	eq
90007646:	2200      	moveq	r2, #0
90007648:	f002 0201 	andne.w	r2, r2, #1
9000764c:	2a00      	cmp	r2, #0
9000764e:	f000 8105 	beq.w	9000785c <BSP_I2C4_Init+0x548>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007652:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007656:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000765a:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000765c:	46b2      	mov	sl, r6
9000765e:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007662:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007666:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000766a:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000766c:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000766e:	f200 8175 	bhi.w	9000795c <BSP_I2C4_Init+0x648>
90007672:	4611      	mov	r1, r2
90007674:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007676:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90007678:	45aa      	cmp	sl, r5
9000767a:	bf0c      	ite	eq
9000767c:	2200      	moveq	r2, #0
9000767e:	f002 0201 	andne.w	r2, r2, #1
90007682:	2a00      	cmp	r2, #0
90007684:	f000 8104 	beq.w	90007890 <BSP_I2C4_Init+0x57c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007688:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000768c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007690:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007692:	46b2      	mov	sl, r6
90007694:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007698:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000769c:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900076a0:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076a2:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076a4:	f200 815a 	bhi.w	9000795c <BSP_I2C4_Init+0x648>
900076a8:	4611      	mov	r1, r2
900076aa:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900076ac:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900076ae:	45aa      	cmp	sl, r5
900076b0:	bf0c      	ite	eq
900076b2:	2200      	moveq	r2, #0
900076b4:	f002 0201 	andne.w	r2, r2, #1
900076b8:	2a00      	cmp	r2, #0
900076ba:	f000 8103 	beq.w	900078c4 <BSP_I2C4_Init+0x5b0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076be:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900076c2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076c6:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076c8:	46b2      	mov	sl, r6
900076ca:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076ce:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076d2:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900076d6:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076d8:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076da:	f200 813f 	bhi.w	9000795c <BSP_I2C4_Init+0x648>
900076de:	4611      	mov	r1, r2
900076e0:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900076e2:	980d      	ldr	r0, [sp, #52]	@ 0x34
900076e4:	4555      	cmp	r5, sl
900076e6:	bf0c      	ite	eq
900076e8:	2000      	moveq	r0, #0
900076ea:	f000 0001 	andne.w	r0, r0, #1
900076ee:	2800      	cmp	r0, #0
900076f0:	f000 8101 	beq.w	900078f6 <BSP_I2C4_Init+0x5e2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076f4:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900076f8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076fc:	210b      	movs	r1, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076fe:	46b2      	mov	sl, r6
90007700:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007704:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007708:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000770c:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000770e:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007710:	f200 8124 	bhi.w	9000795c <BSP_I2C4_Init+0x648>
90007714:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007716:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90007718:	4555      	cmp	r5, sl
9000771a:	bf0c      	ite	eq
9000771c:	2200      	moveq	r2, #0
9000771e:	f002 0201 	andne.w	r2, r2, #1
90007722:	2a00      	cmp	r2, #0
90007724:	f000 8100 	beq.w	90007928 <BSP_I2C4_Init+0x614>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007728:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000772c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007730:	200d      	movs	r0, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007732:	46b2      	mov	sl, r6
90007734:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007738:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000773c:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007740:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007742:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007744:	f200 810a 	bhi.w	9000795c <BSP_I2C4_Init+0x648>
90007748:	4610      	mov	r0, r2
9000774a:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000774c:	9a05      	ldr	r2, [sp, #20]
9000774e:	4555      	cmp	r5, sl
90007750:	bf0c      	ite	eq
90007752:	2200      	moveq	r2, #0
90007754:	f002 0201 	andne.w	r2, r2, #1
90007758:	2a00      	cmp	r2, #0
9000775a:	f000 8182 	beq.w	90007a62 <BSP_I2C4_Init+0x74e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000775e:	eb09 0189 	add.w	r1, r9, r9, lsl #2
90007762:	f8df a360 	ldr.w	sl, [pc, #864]	@ 90007ac4 <BSP_I2C4_Init+0x7b0>
              I2c_valid_timing_nbr ++;
90007766:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000776a:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
9000776e:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007772:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007776:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007778:	f04f 030f 	mov.w	r3, #15
9000777c:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000777e:	f200 80ed 	bhi.w	9000795c <BSP_I2C4_Init+0x648>
90007782:	46aa      	mov	sl, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90007784:	e70c      	b.n	900075a0 <BSP_I2C4_Init+0x28c>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90007786:	9a06      	ldr	r2, [sp, #24]
90007788:	4661      	mov	r1, ip
9000778a:	f109 0914 	add.w	r9, r9, #20
9000778e:	3201      	adds	r2, #1
90007790:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
90007794:	e9dd 3c0c 	ldrd	r3, ip, [sp, #48]	@ 0x30
90007798:	4572      	cmp	r2, lr
9000779a:	9206      	str	r2, [sp, #24]
9000779c:	f040 8103 	bne.w	900079a6 <BSP_I2C4_Init+0x692>
        if (idx < I2C_VALID_TIMING_NBR)
900077a0:	9b01      	ldr	r3, [sp, #4]
900077a2:	2b7f      	cmp	r3, #127	@ 0x7f
900077a4:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
900077a8:	d817      	bhi.n	900077da <BSP_I2C4_Init+0x4c6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900077aa:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900077ae:	eb00 0283 	add.w	r2, r0, r3, lsl #2
900077b2:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900077b6:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
900077b8:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900077ba:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900077bc:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900077c0:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900077c4:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900077c8:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900077ca:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900077cc:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900077ce:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900077d2:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900077d4:	430b      	orrs	r3, r1
900077d6:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900077da:	4621      	mov	r1, r4
900077dc:	48b7      	ldr	r0, [pc, #732]	@ (90007abc <BSP_I2C4_Init+0x7a8>)
900077de:	f7ff fd79 	bl	900072d4 <MX_I2C4_Init>
900077e2:	2800      	cmp	r0, #0
900077e4:	f43f ad9f 	beq.w	90007326 <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
900077e8:	f06f 0007 	mvn.w	r0, #7
  return ret;
900077ec:	e59c      	b.n	90007328 <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
900077ee:	4611      	mov	r1, r2
900077f0:	9a04      	ldr	r2, [sp, #16]
900077f2:	45aa      	cmp	sl, r5
900077f4:	bf0c      	ite	eq
900077f6:	2200      	moveq	r2, #0
900077f8:	f002 0201 	andne.w	r2, r2, #1
900077fc:	2a00      	cmp	r2, #0
900077fe:	f43f af04 	beq.w	9000760a <BSP_I2C4_Init+0x2f6>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007802:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007806:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000780a:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000780c:	46b2      	mov	sl, r6
9000780e:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007812:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007816:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000781a:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000781c:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000781e:	f200 809d 	bhi.w	9000795c <BSP_I2C4_Init+0x648>
90007822:	4611      	mov	r1, r2
90007824:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007826:	9a07      	ldr	r2, [sp, #28]
90007828:	45aa      	cmp	sl, r5
9000782a:	bf0c      	ite	eq
9000782c:	2200      	moveq	r2, #0
9000782e:	f002 0201 	andne.w	r2, r2, #1
90007832:	2a00      	cmp	r2, #0
90007834:	f43f af04 	beq.w	90007640 <BSP_I2C4_Init+0x32c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007838:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000783c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007840:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007842:	46b2      	mov	sl, r6
90007844:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007848:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000784c:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007850:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007852:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007854:	f200 8082 	bhi.w	9000795c <BSP_I2C4_Init+0x648>
90007858:	4611      	mov	r1, r2
9000785a:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000785c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9000785e:	45aa      	cmp	sl, r5
90007860:	bf0c      	ite	eq
90007862:	2200      	moveq	r2, #0
90007864:	f002 0201 	andne.w	r2, r2, #1
90007868:	2a00      	cmp	r2, #0
9000786a:	f43f af04 	beq.w	90007676 <BSP_I2C4_Init+0x362>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000786e:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007872:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007876:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007878:	46b2      	mov	sl, r6
9000787a:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000787e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007882:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007886:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007888:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000788a:	d867      	bhi.n	9000795c <BSP_I2C4_Init+0x648>
9000788c:	4611      	mov	r1, r2
9000788e:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007890:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90007892:	45aa      	cmp	sl, r5
90007894:	bf0c      	ite	eq
90007896:	2200      	moveq	r2, #0
90007898:	f002 0201 	andne.w	r2, r2, #1
9000789c:	2a00      	cmp	r2, #0
9000789e:	f43f af05 	beq.w	900076ac <BSP_I2C4_Init+0x398>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900078a2:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900078a6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900078aa:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900078ac:	46b2      	mov	sl, r6
900078ae:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900078b2:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900078b6:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900078ba:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900078bc:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900078be:	d84d      	bhi.n	9000795c <BSP_I2C4_Init+0x648>
900078c0:	4611      	mov	r1, r2
900078c2:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900078c4:	45aa      	cmp	sl, r5
900078c6:	bf0c      	ite	eq
900078c8:	2200      	moveq	r2, #0
900078ca:	f00b 0201 	andne.w	r2, fp, #1
900078ce:	2a00      	cmp	r2, #0
900078d0:	f43f af07 	beq.w	900076e2 <BSP_I2C4_Init+0x3ce>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900078d4:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900078d8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900078dc:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900078de:	46b2      	mov	sl, r6
900078e0:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900078e4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900078e8:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900078ec:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900078ee:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900078f0:	d834      	bhi.n	9000795c <BSP_I2C4_Init+0x648>
900078f2:	4611      	mov	r1, r2
900078f4:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900078f6:	980e      	ldr	r0, [sp, #56]	@ 0x38
900078f8:	4555      	cmp	r5, sl
900078fa:	bf0c      	ite	eq
900078fc:	2000      	moveq	r0, #0
900078fe:	f000 0001 	andne.w	r0, r0, #1
90007902:	2800      	cmp	r0, #0
90007904:	f000 80af 	beq.w	90007a66 <BSP_I2C4_Init+0x752>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007908:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000790c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007910:	210c      	movs	r1, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007912:	46b2      	mov	sl, r6
90007914:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007918:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000791c:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007920:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007922:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007924:	d81a      	bhi.n	9000795c <BSP_I2C4_Init+0x648>
90007926:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007928:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9000792a:	4555      	cmp	r5, sl
9000792c:	bf0c      	ite	eq
9000792e:	2200      	moveq	r2, #0
90007930:	f002 0201 	andne.w	r2, r2, #1
90007934:	2a00      	cmp	r2, #0
90007936:	f43f af09 	beq.w	9000774c <BSP_I2C4_Init+0x438>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000793a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000793e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007942:	46b2      	mov	sl, r6
90007944:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
90007948:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000794c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007950:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007952:	f04f 030e 	mov.w	r3, #14
90007956:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007958:	f67f af13 	bls.w	90007782 <BSP_I2C4_Init+0x46e>
9000795c:	4b58      	ldr	r3, [pc, #352]	@ (90007ac0 <BSP_I2C4_Init+0x7ac>)
9000795e:	4650      	mov	r0, sl
90007960:	9c01      	ldr	r4, [sp, #4]
              I2c_valid_timing_nbr ++;
90007962:	4649      	mov	r1, r9
90007964:	9a02      	ldr	r2, [sp, #8]
90007966:	f8c3 9000 	str.w	r9, [r3]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000796a:	2500      	movs	r5, #0
9000796c:	9f00      	ldr	r7, [sp, #0]
9000796e:	f240 2657 	movw	r6, #599	@ 0x257
90007972:	f240 4301 	movw	r3, #1025	@ 0x401
90007976:	9506      	str	r5, [sp, #24]
90007978:	f04f 35ff 	mov.w	r5, #4294967295
9000797c:	42be      	cmp	r6, r7
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000797e:	468e      	mov	lr, r1
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007980:	9501      	str	r5, [sp, #4]
90007982:	f102 0532 	add.w	r5, r2, #50	@ 0x32
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007986:	9408      	str	r4, [sp, #32]
90007988:	eba3 0302 	sub.w	r3, r3, r2
9000798c:	bf38      	it	cc
9000798e:	463e      	movcc	r6, r7
90007990:	f8df 9130 	ldr.w	r9, [pc, #304]	@ 90007ac4 <BSP_I2C4_Init+0x7b0>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007994:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
90007998:	f6a2 0c34 	subw	ip, r2, #2100	@ 0x834
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000799c:	f240 4a12 	movw	sl, #1042	@ 0x412
900079a0:	4639      	mov	r1, r7
900079a2:	462c      	mov	r4, r5
900079a4:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900079a6:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900079aa:	2500      	movs	r5, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900079ac:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900079b0:	1a1a      	subs	r2, r3, r0
900079b2:	1827      	adds	r7, r4, r0
900079b4:	ea4f 0842 	mov.w	r8, r2, lsl #1
900079b8:	eb0c 0200 	add.w	r2, ip, r0
900079bc:	e9cd 3c0c 	strd	r3, ip, [sp, #48]	@ 0x30
900079c0:	9207      	str	r2, [sp, #28]
900079c2:	468c      	mov	ip, r1
900079c4:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
900079c8:	e006      	b.n	900079d8 <BSP_I2C4_Init+0x6c4>
900079ca:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
900079ce:	4407      	add	r7, r0
900079d0:	eba8 0800 	sub.w	r8, r8, r0
900079d4:	f43f aed7 	beq.w	90007786 <BSP_I2C4_Init+0x472>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900079d8:	f240 5314 	movw	r3, #1300	@ 0x514
900079dc:	9500      	str	r5, [sp, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900079de:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900079e0:	429f      	cmp	r7, r3
900079e2:	d9f2      	bls.n	900079ca <BSP_I2C4_Init+0x6b6>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900079e4:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900079e8:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
900079ec:	d2ed      	bcs.n	900079ca <BSP_I2C4_Init+0x6b6>
900079ee:	f640 0e34 	movw	lr, #2100	@ 0x834
900079f2:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900079f4:	2200      	movs	r2, #0
900079f6:	ebae 0e03 	sub.w	lr, lr, r3
900079fa:	9b07      	ldr	r3, [sp, #28]
900079fc:	e9cd 5c02 	strd	r5, ip, [sp, #8]
90007a00:	e9cd 7804 	strd	r7, r8, [sp, #16]
90007a04:	443b      	add	r3, r7
90007a06:	f8dd c004 	ldr.w	ip, [sp, #4]
90007a0a:	f8dd 8018 	ldr.w	r8, [sp, #24]
90007a0e:	e005      	b.n	90007a1c <BSP_I2C4_Init+0x708>
90007a10:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
90007a14:	4403      	add	r3, r0
90007a16:	eba4 0400 	sub.w	r4, r4, r0
90007a1a:	d01a      	beq.n	90007a52 <BSP_I2C4_Init+0x73e>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007a1c:	eb0e 0103 	add.w	r1, lr, r3
90007a20:	4617      	mov	r7, r2
90007a22:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
90007a26:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007a28:	42b1      	cmp	r1, r6
90007a2a:	d9f1      	bls.n	90007a10 <BSP_I2C4_Init+0x6fc>
90007a2c:	4555      	cmp	r5, sl
90007a2e:	d8ef      	bhi.n	90007a10 <BSP_I2C4_Init+0x6fc>
            if (error < 0)
90007a30:	ea33 0123 	bics.w	r1, r3, r3, asr #32
90007a34:	bf28      	it	cs
90007a36:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90007a38:	458b      	cmp	fp, r1
90007a3a:	d9e9      	bls.n	90007a10 <BSP_I2C4_Init+0x6fc>
              I2c_valid_timing[count].sclh = sclh;
90007a3c:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007a3e:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              I2c_valid_timing[count].scll = scll;
90007a42:	9900      	ldr	r1, [sp, #0]
              I2c_valid_timing[count].sclh = sclh;
90007a44:	46c4      	mov	ip, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007a46:	4403      	add	r3, r0
90007a48:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
90007a4c:	e9c9 7103 	strd	r7, r1, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007a50:	d1e4      	bne.n	90007a1c <BSP_I2C4_Init+0x708>
90007a52:	f8cd c004 	str.w	ip, [sp, #4]
90007a56:	9d02      	ldr	r5, [sp, #8]
90007a58:	f8dd 8014 	ldr.w	r8, [sp, #20]
90007a5c:	e9dd c703 	ldrd	ip, r7, [sp, #12]
90007a60:	e7b3      	b.n	900079ca <BSP_I2C4_Init+0x6b6>
90007a62:	4602      	mov	r2, r0
90007a64:	e59c      	b.n	900075a0 <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
90007a66:	4608      	mov	r0, r1
90007a68:	e655      	b.n	90007716 <BSP_I2C4_Init+0x402>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007a6a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007a6e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007a72:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007a74:	46b2      	mov	sl, r6
90007a76:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007a7a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007a7e:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007a82:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007a84:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007a86:	f63f af69 	bhi.w	9000795c <BSP_I2C4_Init+0x648>
90007a8a:	46aa      	mov	sl, r5
90007a8c:	e6b0      	b.n	900077f0 <BSP_I2C4_Init+0x4dc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90007a8e:	3501      	adds	r5, #1
90007a90:	9b00      	ldr	r3, [sp, #0]
90007a92:	2d10      	cmp	r5, #16
90007a94:	441f      	add	r7, r3
90007a96:	f47f acc0 	bne.w	9000741a <BSP_I2C4_Init+0x106>
90007a9a:	4693      	mov	fp, r2
90007a9c:	9c01      	ldr	r4, [sp, #4]
90007a9e:	9911      	ldr	r1, [sp, #68]	@ 0x44
90007aa0:	9a02      	ldr	r2, [sp, #8]
90007aa2:	f1bb 0f00 	cmp.w	fp, #0
90007aa6:	d003      	beq.n	90007ab0 <BSP_I2C4_Init+0x79c>
90007aa8:	4b05      	ldr	r3, [pc, #20]	@ (90007ac0 <BSP_I2C4_Init+0x7ac>)
90007aaa:	4649      	mov	r1, r9
90007aac:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90007ab0:	2900      	cmp	r1, #0
90007ab2:	f43f ae92 	beq.w	900077da <BSP_I2C4_Init+0x4c6>
90007ab6:	4803      	ldr	r0, [pc, #12]	@ (90007ac4 <BSP_I2C4_Init+0x7b0>)
90007ab8:	e757      	b.n	9000796a <BSP_I2C4_Init+0x656>
90007aba:	bf00      	nop
90007abc:	240093d8 	.word	0x240093d8
90007ac0:	2400942c 	.word	0x2400942c
90007ac4:	24009430 	.word	0x24009430

90007ac8 <BSP_I2C4_WriteReg>:
{
90007ac8:	b530      	push	{r4, r5, lr}
90007aca:	4614      	mov	r4, r2
90007acc:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90007ace:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
90007ad2:	460a      	mov	r2, r1
90007ad4:	9301      	str	r3, [sp, #4]
90007ad6:	4601      	mov	r1, r0
90007ad8:	2301      	movs	r3, #1
90007ada:	4809      	ldr	r0, [pc, #36]	@ (90007b00 <BSP_I2C4_WriteReg+0x38>)
90007adc:	9502      	str	r5, [sp, #8]
90007ade:	9400      	str	r4, [sp, #0]
90007ae0:	f001 fab8 	bl	90009054 <HAL_I2C_Mem_Write>
90007ae4:	b908      	cbnz	r0, 90007aea <BSP_I2C4_WriteReg+0x22>
}
90007ae6:	b005      	add	sp, #20
90007ae8:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90007aea:	4805      	ldr	r0, [pc, #20]	@ (90007b00 <BSP_I2C4_WriteReg+0x38>)
90007aec:	f001 fcb4 	bl	90009458 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90007af0:	2804      	cmp	r0, #4
90007af2:	bf14      	ite	ne
90007af4:	f06f 0003 	mvnne.w	r0, #3
90007af8:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90007afc:	e7f3      	b.n	90007ae6 <BSP_I2C4_WriteReg+0x1e>
90007afe:	bf00      	nop
90007b00:	240093d8 	.word	0x240093d8

90007b04 <BSP_I2C4_ReadReg>:
{
90007b04:	b530      	push	{r4, r5, lr}
90007b06:	4614      	mov	r4, r2
90007b08:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90007b0a:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
90007b0e:	460a      	mov	r2, r1
90007b10:	9301      	str	r3, [sp, #4]
90007b12:	4601      	mov	r1, r0
90007b14:	2301      	movs	r3, #1
90007b16:	4809      	ldr	r0, [pc, #36]	@ (90007b3c <BSP_I2C4_ReadReg+0x38>)
90007b18:	9502      	str	r5, [sp, #8]
90007b1a:	9400      	str	r4, [sp, #0]
90007b1c:	f001 fb98 	bl	90009250 <HAL_I2C_Mem_Read>
90007b20:	b908      	cbnz	r0, 90007b26 <BSP_I2C4_ReadReg+0x22>
}
90007b22:	b005      	add	sp, #20
90007b24:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90007b26:	4805      	ldr	r0, [pc, #20]	@ (90007b3c <BSP_I2C4_ReadReg+0x38>)
90007b28:	f001 fc96 	bl	90009458 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90007b2c:	2804      	cmp	r0, #4
90007b2e:	bf14      	ite	ne
90007b30:	f06f 0003 	mvnne.w	r0, #3
90007b34:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90007b38:	e7f3      	b.n	90007b22 <BSP_I2C4_ReadReg+0x1e>
90007b3a:	bf00      	nop
90007b3c:	240093d8 	.word	0x240093d8

90007b40 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90007b40:	f000 baa0 	b.w	90008084 <HAL_GetTick>

90007b44 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90007b44:	b970      	cbnz	r0, 90007b64 <BSP_SDRAM_DeInit+0x20>
{
90007b46:	b510      	push	{r4, lr}
90007b48:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
90007b4a:	4808      	ldr	r0, [pc, #32]	@ (90007b6c <BSP_SDRAM_DeInit+0x28>)
90007b4c:	f005 fafa 	bl	9000d144 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90007b50:	207a      	movs	r0, #122	@ 0x7a
90007b52:	f000 faff 	bl	90008154 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007b56:	4b06      	ldr	r3, [pc, #24]	@ (90007b70 <BSP_SDRAM_DeInit+0x2c>)
90007b58:	4806      	ldr	r0, [pc, #24]	@ (90007b74 <BSP_SDRAM_DeInit+0x30>)
90007b5a:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90007b5c:	f003 fac0 	bl	9000b0e0 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90007b60:	4620      	mov	r0, r4
}
90007b62:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007b64:	f06f 0001 	mvn.w	r0, #1
}
90007b68:	4770      	bx	lr
90007b6a:	bf00      	nop
90007b6c:	24009f2c 	.word	0x24009f2c
90007b70:	52000040 	.word	0x52000040
90007b74:	24009e34 	.word	0x24009e34

90007b78 <MX_SDRAM_BANK2_Init>:
{
90007b78:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
90007b7a:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007b7c:	2200      	movs	r2, #0
{
90007b7e:	b089      	sub	sp, #36	@ 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007b80:	4c13      	ldr	r4, [pc, #76]	@ (90007bd0 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007b82:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90007b84:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90007b86:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
90007b88:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90007b8a:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
90007b8c:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
90007b8e:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007b90:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  sdram_timing.LoadToActiveDelay    = 2;
90007b94:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
90007b96:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007b98:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
90007b9a:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007b9c:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007b9e:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90007ba2:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007ba4:	f44f 6500 	mov.w	r5, #2048	@ 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007ba8:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90007baa:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007bac:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
90007bb0:	2204      	movs	r2, #4
90007bb2:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
90007bb6:	2202      	movs	r2, #2
90007bb8:	2302      	movs	r3, #2
90007bba:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007bbe:	4b05      	ldr	r3, [pc, #20]	@ (90007bd4 <MX_SDRAM_BANK2_Init+0x5c>)
90007bc0:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90007bc2:	f005 fa95 	bl	9000d0f0 <HAL_SDRAM_Init>
}
90007bc6:	3800      	subs	r0, #0
90007bc8:	bf18      	it	ne
90007bca:	2001      	movne	r0, #1
90007bcc:	b009      	add	sp, #36	@ 0x24
90007bce:	bd30      	pop	{r4, r5, pc}
90007bd0:	24009f2c 	.word	0x24009f2c
90007bd4:	52004140 	.word	0x52004140

90007bd8 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90007bd8:	2800      	cmp	r0, #0
90007bda:	f040 80cd 	bne.w	90007d78 <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
90007bde:	4b69      	ldr	r3, [pc, #420]	@ (90007d84 <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90007be0:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
90007be2:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007be6:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
90007bea:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
90007bec:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
{
90007bf0:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
90007bf2:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007bf6:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90007bf8:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
90007bfa:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90007bfc:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007c00:	4c61      	ldr	r4, [pc, #388]	@ (90007d88 <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007c02:	4e62      	ldr	r6, [pc, #392]	@ (90007d8c <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90007c04:	9200      	str	r2, [sp, #0]
90007c06:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
90007c08:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007c0c:	430a      	orrs	r2, r1
90007c0e:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90007c12:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007c16:	400a      	ands	r2, r1
90007c18:	9201      	str	r2, [sp, #4]
90007c1a:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90007c1c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007c20:	f042 0208 	orr.w	r2, r2, #8
90007c24:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007c28:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007c2c:	f002 0208 	and.w	r2, r2, #8
90007c30:	9202      	str	r2, [sp, #8]
90007c32:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90007c34:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007c38:	f042 0210 	orr.w	r2, r2, #16
90007c3c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007c40:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007c44:	f002 0210 	and.w	r2, r2, #16
90007c48:	9203      	str	r2, [sp, #12]
90007c4a:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90007c4c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007c50:	f042 0220 	orr.w	r2, r2, #32
90007c54:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007c58:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007c5c:	f002 0220 	and.w	r2, r2, #32
90007c60:	9204      	str	r2, [sp, #16]
90007c62:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90007c64:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007c68:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90007c6c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007c70:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007c74:	f002 0240 	and.w	r2, r2, #64	@ 0x40
90007c78:	9205      	str	r2, [sp, #20]
90007c7a:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007c7c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007c80:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90007c84:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90007c88:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007c8a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90007c8e:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007c90:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007c94:	483e      	ldr	r0, [pc, #248]	@ (90007d90 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90007c96:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007c98:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007c9a:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007c9e:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007ca0:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007ca2:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90007ca4:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007ca8:	f000 fc6c 	bl	90008584 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007cac:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007cb0:	a907      	add	r1, sp, #28
90007cb2:	4838      	ldr	r0, [pc, #224]	@ (90007d94 <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007cb4:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007cb6:	f000 fc65 	bl	90008584 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90007cba:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90007cbe:	a907      	add	r1, sp, #28
90007cc0:	4835      	ldr	r0, [pc, #212]	@ (90007d98 <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90007cc2:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90007cc4:	f000 fc5e 	bl	90008584 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007cc8:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90007ccc:	a907      	add	r1, sp, #28
90007cce:	4833      	ldr	r0, [pc, #204]	@ (90007d9c <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007cd0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90007cd2:	f000 fc57 	bl	90008584 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90007cd6:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007cd8:	a907      	add	r1, sp, #28
90007cda:	4831      	ldr	r0, [pc, #196]	@ (90007da0 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90007cdc:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007cde:	f000 fc51 	bl	90008584 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90007ce2:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007ce4:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90007ce8:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90007cec:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90007cee:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90007cf0:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007cf2:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90007cf4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90007cf8:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90007cfa:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007cfc:	4a29      	ldr	r2, [pc, #164]	@ (90007da4 <BSP_SDRAM_Init+0x1cc>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007cfe:	6334      	str	r4, [r6, #48]	@ 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007d00:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007d02:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90007d04:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90007d08:	f640 0308 	movw	r3, #2056	@ 0x808
90007d0c:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90007d0e:	2320      	movs	r3, #32
90007d10:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007d12:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90007d16:	e9c4 550b 	strd	r5, r5, [r4, #44]	@ 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007d1a:	6263      	str	r3, [r4, #36]	@ 0x24
  mdma_handle.Init.SourceBlockAddressOffset = 0;
90007d1c:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  HAL_MDMA_DeInit(&mdma_handle);
90007d20:	f003 f9de 	bl	9000b0e0 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90007d24:	4620      	mov	r0, r4
90007d26:	f003 f961 	bl	9000afec <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90007d2a:	462a      	mov	r2, r5
90007d2c:	210f      	movs	r1, #15
90007d2e:	207a      	movs	r0, #122	@ 0x7a
90007d30:	f000 f9c6 	bl	900080c0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90007d34:	207a      	movs	r0, #122	@ 0x7a
90007d36:	f000 f9ff 	bl	90008138 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90007d3a:	2210      	movs	r2, #16
90007d3c:	2104      	movs	r1, #4
90007d3e:	4630      	mov	r0, r6
90007d40:	f7ff ff1a 	bl	90007b78 <MX_SDRAM_BANK2_Init>
90007d44:	4603      	mov	r3, r0
90007d46:	b9d0      	cbnz	r0, 90007d7e <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007d48:	4917      	ldr	r1, [pc, #92]	@ (90007da8 <BSP_SDRAM_Init+0x1d0>)
90007d4a:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007d4c:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007d4e:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007d50:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007d52:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
90007d56:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007d58:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007d5c:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007d60:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007d64:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007d68:	f7ff fa30 	bl	900071cc <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90007d6c:	2800      	cmp	r0, #0
90007d6e:	bf18      	it	ne
90007d70:	f06f 0004 	mvnne.w	r0, #4
}
90007d74:	b00d      	add	sp, #52	@ 0x34
90007d76:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007d78:	f06f 0001 	mvn.w	r0, #1
}
90007d7c:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90007d7e:	f04f 30ff 	mov.w	r0, #4294967295
90007d82:	e7f7      	b.n	90007d74 <BSP_SDRAM_Init+0x19c>
90007d84:	58024400 	.word	0x58024400
90007d88:	24009ea0 	.word	0x24009ea0
90007d8c:	24009f2c 	.word	0x24009f2c
90007d90:	58020c00 	.word	0x58020c00
90007d94:	58021000 	.word	0x58021000
90007d98:	58021400 	.word	0x58021400
90007d9c:	58021800 	.word	0x58021800
90007da0:	58021c00 	.word	0x58021c00
90007da4:	52000040 	.word	0x52000040
90007da8:	24009f0c 	.word	0x24009f0c

90007dac <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90007dac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007db0:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
90007db2:	2800      	cmp	r0, #0
90007db4:	d16b      	bne.n	90007e8e <BSP_TS_Init+0xe2>
90007db6:	680b      	ldr	r3, [r1, #0]
90007db8:	460d      	mov	r5, r1
90007dba:	1e5a      	subs	r2, r3, #1
90007dbc:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
90007dc0:	d265      	bcs.n	90007e8e <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90007dc2:	684a      	ldr	r2, [r1, #4]
90007dc4:	1e51      	subs	r1, r2, #1
90007dc6:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
90007dca:	d260      	bcs.n	90007e8e <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90007dcc:	4293      	cmp	r3, r2
90007dce:	bf28      	it	cs
90007dd0:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90007dd2:	68ea      	ldr	r2, [r5, #12]
90007dd4:	429a      	cmp	r2, r3
90007dd6:	d85a      	bhi.n	90007e8e <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90007dd8:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90007dda:	4b31      	ldr	r3, [pc, #196]	@ (90007ea0 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007ddc:	4c31      	ldr	r4, [pc, #196]	@ (90007ea4 <BSP_TS_Init+0xf8>)
90007dde:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90007de0:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90007de4:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007de6:	4a30      	ldr	r2, [pc, #192]	@ (90007ea8 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007de8:	4b30      	ldr	r3, [pc, #192]	@ (90007eac <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007dea:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007dec:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007dee:	4a30      	ldr	r2, [pc, #192]	@ (90007eb0 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90007df0:	4b30      	ldr	r3, [pc, #192]	@ (90007eb4 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90007df2:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007df4:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007df6:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90007df8:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007dfa:	f7ff f939 	bl	90007070 <FT5336_RegisterBusIO>
90007dfe:	2800      	cmp	r0, #0
90007e00:	d14b      	bne.n	90007e9a <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90007e02:	a901      	add	r1, sp, #4
90007e04:	4620      	mov	r0, r4
90007e06:	f7ff f829 	bl	90006e5c <FT5336_ReadID>
90007e0a:	2800      	cmp	r0, #0
90007e0c:	d145      	bne.n	90007e9a <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90007e0e:	9b01      	ldr	r3, [sp, #4]
90007e10:	2b51      	cmp	r3, #81	@ 0x51
90007e12:	d142      	bne.n	90007e9a <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007e14:	4b28      	ldr	r3, [pc, #160]	@ (90007eb8 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007e16:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
90007e18:	4f28      	ldr	r7, [pc, #160]	@ (90007ebc <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007e1a:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 90007ec4 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90007e1e:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007e20:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007e24:	681b      	ldr	r3, [r3, #0]
90007e26:	4798      	blx	r3
90007e28:	4606      	mov	r6, r0
90007e2a:	2800      	cmp	r0, #0
90007e2c:	d135      	bne.n	90007e9a <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007e2e:	4c24      	ldr	r4, [pc, #144]	@ (90007ec0 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007e30:	a902      	add	r1, sp, #8
90007e32:	6838      	ldr	r0, [r7, #0]
90007e34:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007e38:	e9d5 7200 	ldrd	r7, r2, [r5]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007e3c:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007e3e:	e9c4 7200 	strd	r7, r2, [r4]
90007e42:	68aa      	ldr	r2, [r5, #8]
90007e44:	60a2      	str	r2, [r4, #8]
90007e46:	68ea      	ldr	r2, [r5, #12]
90007e48:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007e4a:	4798      	blx	r3
90007e4c:	2800      	cmp	r0, #0
90007e4e:	db18      	blt.n	90007e82 <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90007e50:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90007e54:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007e58:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007e5a:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007e5e:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007e60:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007e62:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007e64:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007e66:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007e6a:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007e6e:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007e72:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007e76:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007e78:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
90007e7a:	4630      	mov	r0, r6
90007e7c:	b008      	add	sp, #32
90007e7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90007e82:	f06f 0604 	mvn.w	r6, #4
}
90007e86:	4630      	mov	r0, r6
90007e88:	b008      	add	sp, #32
90007e8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90007e8e:	f06f 0601 	mvn.w	r6, #1
}
90007e92:	4630      	mov	r0, r6
90007e94:	b008      	add	sp, #32
90007e96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90007e9a:	f04f 36ff 	mov.w	r6, #4294967295
90007e9e:	e7ec      	b.n	90007e7a <BSP_TS_Init+0xce>
90007ea0:	90007315 	.word	0x90007315
90007ea4:	24009f60 	.word	0x24009f60
90007ea8:	90007281 	.word	0x90007281
90007eac:	90007b05 	.word	0x90007b05
90007eb0:	90007ac9 	.word	0x90007ac9
90007eb4:	90007b41 	.word	0x90007b41
90007eb8:	24000064 	.word	0x24000064
90007ebc:	24009fc8 	.word	0x24009fc8
90007ec0:	24009f88 	.word	0x24009f88
90007ec4:	24009fcc 	.word	0x24009fcc

90007ec8 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90007ec8:	2800      	cmp	r0, #0
90007eca:	d154      	bne.n	90007f76 <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007ecc:	4b2b      	ldr	r3, [pc, #172]	@ (90007f7c <BSP_TS_GetState+0xb4>)
90007ece:	4a2c      	ldr	r2, [pc, #176]	@ (90007f80 <BSP_TS_GetState+0xb8>)
90007ed0:	681b      	ldr	r3, [r3, #0]
90007ed2:	6810      	ldr	r0, [r2, #0]
90007ed4:	691b      	ldr	r3, [r3, #16]
{
90007ed6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007eda:	b084      	sub	sp, #16
90007edc:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007ede:	a901      	add	r1, sp, #4
90007ee0:	4798      	blx	r3
90007ee2:	2800      	cmp	r0, #0
90007ee4:	db3f      	blt.n	90007f66 <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007ee6:	4b27      	ldr	r3, [pc, #156]	@ (90007f84 <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
90007ee8:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007eea:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90007eec:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
90007eee:	b930      	cbnz	r0, 90007efe <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
90007ef0:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007ef2:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
90007ef6:	2000      	movs	r0, #0
}
90007ef8:	b004      	add	sp, #16
90007efa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007efe:	689f      	ldr	r7, [r3, #8]
90007f00:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
90007f02:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007f06:	d433      	bmi.n	90007f70 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90007f08:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
90007f0a:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007f0c:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007f10:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007f14:	d003      	beq.n	90007f1e <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007f16:	f10e 32ff 	add.w	r2, lr, #4294967295
90007f1a:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007f1e:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90007f22:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007f24:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007f26:	bf48      	it	mi
90007f28:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007f2c:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007f30:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90007f32:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007f34:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007f38:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007f3c:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007f40:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007f42:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007f44:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007f46:	bf8c      	ite	hi
90007f48:	1b90      	subhi	r0, r2, r6
90007f4a:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90007f4c:	42a9      	cmp	r1, r5
90007f4e:	bf8c      	ite	hi
90007f50:	1b4f      	subhi	r7, r1, r5
90007f52:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007f54:	42b8      	cmp	r0, r7
90007f56:	bf38      	it	cc
90007f58:	4638      	movcc	r0, r7
90007f5a:	68df      	ldr	r7, [r3, #12]
90007f5c:	4287      	cmp	r7, r0
90007f5e:	d2c8      	bcs.n	90007ef2 <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90007f60:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90007f62:	62d9      	str	r1, [r3, #44]	@ 0x2c
90007f64:	e7c7      	b.n	90007ef6 <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
90007f66:	f06f 0004 	mvn.w	r0, #4
}
90007f6a:	b004      	add	sp, #16
90007f6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
90007f70:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90007f72:	4642      	mov	r2, r8
90007f74:	e7ca      	b.n	90007f0c <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
90007f76:	f06f 0001 	mvn.w	r0, #1
}
90007f7a:	4770      	bx	lr
90007f7c:	24009fcc 	.word	0x24009fcc
90007f80:	24009fc8 	.word	0x24009fc8
90007f84:	24009f88 	.word	0x24009f88

90007f88 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90007f88:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007f8a:	4c19      	ldr	r4, [pc, #100]	@ (90007ff0 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90007f8c:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90007f8e:	4b19      	ldr	r3, [pc, #100]	@ (90007ff4 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007f90:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90007f94:	4818      	ldr	r0, [pc, #96]	@ (90007ff8 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007f96:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
90007f9a:	f8c4 1088 	str.w	r1, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
90007f9e:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007fa0:	4c16      	ldr	r4, [pc, #88]	@ (90007ffc <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
90007fa2:	f041 0101 	orr.w	r1, r1, #1
90007fa6:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
90007fa8:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90007faa:	6819      	ldr	r1, [r3, #0]
90007fac:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007fae:	4914      	ldr	r1, [pc, #80]	@ (90008000 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
90007fb0:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
90007fb2:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90007fb4:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90007fb6:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90007fb8:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
90007fba:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
90007fbc:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
90007fbe:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
90007fc0:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
90007fc2:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
90007fc4:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
90007fc6:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
90007fc8:	6818      	ldr	r0, [r3, #0]
90007fca:	f420 2080 	bic.w	r0, r0, #262144	@ 0x40000
90007fce:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
90007fd0:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007fd2:	6823      	ldr	r3, [r4, #0]
90007fd4:	4019      	ands	r1, r3
90007fd6:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
90007fda:	d203      	bcs.n	90007fe4 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90007fdc:	4b09      	ldr	r3, [pc, #36]	@ (90008004 <SystemInit+0x7c>)
90007fde:	2201      	movs	r2, #1
90007fe0:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007fe4:	4a08      	ldr	r2, [pc, #32]	@ (90008008 <SystemInit+0x80>)
90007fe6:	4b02      	ldr	r3, [pc, #8]	@ (90007ff0 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90007fe8:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007fec:	609a      	str	r2, [r3, #8]
}
90007fee:	4770      	bx	lr
90007ff0:	e000ed00 	.word	0xe000ed00
90007ff4:	58024400 	.word	0x58024400
90007ff8:	eaf6ed7f 	.word	0xeaf6ed7f
90007ffc:	5c001000 	.word	0x5c001000
90008000:	ffff0000 	.word	0xffff0000
90008004:	51008000 	.word	0x51008000
90008008:	90000000 	.word	0x90000000

9000800c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
9000800c:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000800e:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008010:	4c12      	ldr	r4, [pc, #72]	@ (9000805c <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90008012:	f000 f843 	bl	9000809c <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008016:	f003 fdb9 	bl	9000bb8c <HAL_RCC_GetSysClockFreq>
9000801a:	4b11      	ldr	r3, [pc, #68]	@ (90008060 <HAL_Init+0x54>)
9000801c:	4911      	ldr	r1, [pc, #68]	@ (90008064 <HAL_Init+0x58>)
9000801e:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008020:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008022:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008026:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000802a:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000802c:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000802e:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90008032:	490d      	ldr	r1, [pc, #52]	@ (90008068 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008034:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008038:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000803a:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
9000803e:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90008040:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008042:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90008044:	f7fc f8e8 	bl	90004218 <HAL_InitTick>
90008048:	b110      	cbz	r0, 90008050 <HAL_Init+0x44>
  {
    return HAL_ERROR;
9000804a:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
9000804c:	4620      	mov	r0, r4
9000804e:	bd10      	pop	{r4, pc}
90008050:	4604      	mov	r4, r0
  HAL_MspInit();
90008052:	f7fb fe9f 	bl	90003d94 <HAL_MspInit>
}
90008056:	4620      	mov	r0, r4
90008058:	bd10      	pop	{r4, pc}
9000805a:	bf00      	nop
9000805c:	24000094 	.word	0x24000094
90008060:	58024400 	.word	0x58024400
90008064:	9002d480 	.word	0x9002d480
90008068:	24000098 	.word	0x24000098

9000806c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
9000806c:	4a03      	ldr	r2, [pc, #12]	@ (9000807c <HAL_IncTick+0x10>)
9000806e:	4b04      	ldr	r3, [pc, #16]	@ (90008080 <HAL_IncTick+0x14>)
90008070:	6811      	ldr	r1, [r2, #0]
90008072:	781b      	ldrb	r3, [r3, #0]
90008074:	440b      	add	r3, r1
90008076:	6013      	str	r3, [r2, #0]
}
90008078:	4770      	bx	lr
9000807a:	bf00      	nop
9000807c:	24009fd0 	.word	0x24009fd0
90008080:	2400009c 	.word	0x2400009c

90008084 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90008084:	4b01      	ldr	r3, [pc, #4]	@ (9000808c <HAL_GetTick+0x8>)
90008086:	6818      	ldr	r0, [r3, #0]
}
90008088:	4770      	bx	lr
9000808a:	bf00      	nop
9000808c:	24009fd0 	.word	0x24009fd0

90008090 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90008090:	4b01      	ldr	r3, [pc, #4]	@ (90008098 <HAL_GetREVID+0x8>)
90008092:	6818      	ldr	r0, [r3, #0]
}
90008094:	0c00      	lsrs	r0, r0, #16
90008096:	4770      	bx	lr
90008098:	5c001000 	.word	0x5c001000

9000809c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
9000809c:	4906      	ldr	r1, [pc, #24]	@ (900080b8 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
9000809e:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900080a2:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
900080a4:	4b05      	ldr	r3, [pc, #20]	@ (900080bc <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900080a6:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900080a8:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
900080ac:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
900080b0:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
900080b2:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
900080b4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
900080b6:	4770      	bx	lr
900080b8:	e000ed00 	.word	0xe000ed00
900080bc:	05fa0000 	.word	0x05fa0000

900080c0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
900080c0:	4b1a      	ldr	r3, [pc, #104]	@ (9000812c <HAL_NVIC_SetPriority+0x6c>)
900080c2:	68db      	ldr	r3, [r3, #12]
900080c4:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
900080c8:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900080ca:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900080ce:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900080d2:	f1be 0f04 	cmp.w	lr, #4
900080d6:	bf28      	it	cs
900080d8:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900080dc:	f1bc 0f06 	cmp.w	ip, #6
900080e0:	d91a      	bls.n	90008118 <HAL_NVIC_SetPriority+0x58>
900080e2:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
900080e6:	f04f 33ff 	mov.w	r3, #4294967295
900080ea:	fa03 f30c 	lsl.w	r3, r3, ip
900080ee:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
900080f2:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
900080f6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
900080f8:	fa03 f30e 	lsl.w	r3, r3, lr
900080fc:	ea21 0303 	bic.w	r3, r1, r3
90008100:	fa03 f30c 	lsl.w	r3, r3, ip
90008104:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90008108:	ea4f 1303 	mov.w	r3, r3, lsl #4
9000810c:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
9000810e:	db06      	blt.n	9000811e <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90008110:	4a07      	ldr	r2, [pc, #28]	@ (90008130 <HAL_NVIC_SetPriority+0x70>)
90008112:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90008114:	f85d fb04 	ldr.w	pc, [sp], #4
90008118:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000811a:	4694      	mov	ip, r2
9000811c:	e7e9      	b.n	900080f2 <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000811e:	f000 000f 	and.w	r0, r0, #15
90008122:	4a04      	ldr	r2, [pc, #16]	@ (90008134 <HAL_NVIC_SetPriority+0x74>)
90008124:	5413      	strb	r3, [r2, r0]
90008126:	f85d fb04 	ldr.w	pc, [sp], #4
9000812a:	bf00      	nop
9000812c:	e000ed00 	.word	0xe000ed00
90008130:	e000e400 	.word	0xe000e400
90008134:	e000ed14 	.word	0xe000ed14

90008138 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90008138:	2800      	cmp	r0, #0
9000813a:	db07      	blt.n	9000814c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000813c:	2301      	movs	r3, #1
9000813e:	f000 011f 	and.w	r1, r0, #31
90008142:	4a03      	ldr	r2, [pc, #12]	@ (90008150 <HAL_NVIC_EnableIRQ+0x18>)
90008144:	0940      	lsrs	r0, r0, #5
90008146:	408b      	lsls	r3, r1
90008148:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
9000814c:	4770      	bx	lr
9000814e:	bf00      	nop
90008150:	e000e100 	.word	0xe000e100

90008154 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90008154:	2800      	cmp	r0, #0
90008156:	db0c      	blt.n	90008172 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90008158:	0943      	lsrs	r3, r0, #5
9000815a:	2201      	movs	r2, #1
9000815c:	f000 001f 	and.w	r0, r0, #31
90008160:	4904      	ldr	r1, [pc, #16]	@ (90008174 <HAL_NVIC_DisableIRQ+0x20>)
90008162:	3320      	adds	r3, #32
90008164:	4082      	lsls	r2, r0
90008166:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
9000816a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000816e:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90008172:	4770      	bx	lr
90008174:	e000e100 	.word	0xe000e100

90008178 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90008178:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000817c:	4b04      	ldr	r3, [pc, #16]	@ (90008190 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
9000817e:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90008180:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90008182:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
90008186:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
90008188:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
9000818c:	4770      	bx	lr
9000818e:	bf00      	nop
90008190:	e000ed00 	.word	0xe000ed00

90008194 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90008194:	4b06      	ldr	r3, [pc, #24]	@ (900081b0 <HAL_MPU_Enable+0x1c>)
90008196:	f040 0001 	orr.w	r0, r0, #1
9000819a:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
9000819e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
900081a0:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
900081a4:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
900081a6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900081aa:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
900081ae:	4770      	bx	lr
900081b0:	e000ed00 	.word	0xe000ed00

900081b4 <HAL_MPU_ConfigRegion>:
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
900081b4:	4a16      	ldr	r2, [pc, #88]	@ (90008210 <HAL_MPU_ConfigRegion+0x5c>)
900081b6:	7843      	ldrb	r3, [r0, #1]
900081b8:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
900081bc:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
900081c0:	f023 0301 	bic.w	r3, r3, #1
900081c4:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
900081c8:	6843      	ldr	r3, [r0, #4]
900081ca:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900081ce:	7ac3      	ldrb	r3, [r0, #11]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900081d0:	f890 c00c 	ldrb.w	ip, [r0, #12]
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900081d4:	061b      	lsls	r3, r3, #24
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
900081d6:	7801      	ldrb	r1, [r0, #0]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900081d8:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
900081dc:	f890 c00a 	ldrb.w	ip, [r0, #10]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900081e0:	430b      	orrs	r3, r1
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
900081e2:	7b41      	ldrb	r1, [r0, #13]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900081e4:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
900081e8:	f890 c00e 	ldrb.w	ip, [r0, #14]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900081ec:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
900081f0:	7bc1      	ldrb	r1, [r0, #15]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900081f2:	ea43 434c 	orr.w	r3, r3, ip, lsl #17
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
900081f6:	f890 c009 	ldrb.w	ip, [r0, #9]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900081fa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900081fe:	7a01      	ldrb	r1, [r0, #8]
90008200:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90008204:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90008208:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
}
9000820c:	4770      	bx	lr
9000820e:	bf00      	nop
90008210:	e000ed00 	.word	0xe000ed00

90008214 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90008214:	2800      	cmp	r0, #0
90008216:	d036      	beq.n	90008286 <HAL_CRC_Init+0x72>
{
90008218:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
9000821a:	7f43      	ldrb	r3, [r0, #29]
9000821c:	4604      	mov	r4, r0
9000821e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008222:	b363      	cbz	r3, 9000827e <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90008224:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90008226:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
90008228:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000822a:	b9f3      	cbnz	r3, 9000826a <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
9000822c:	6823      	ldr	r3, [r4, #0]
9000822e:	4a17      	ldr	r2, [pc, #92]	@ (9000828c <HAL_CRC_Init+0x78>)
90008230:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90008232:	689a      	ldr	r2, [r3, #8]
90008234:	f022 0218 	bic.w	r2, r2, #24
90008238:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
9000823a:	7962      	ldrb	r2, [r4, #5]
9000823c:	b18a      	cbz	r2, 90008262 <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
9000823e:	6922      	ldr	r2, [r4, #16]
90008240:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008242:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008244:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008248:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9000824c:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
9000824e:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008250:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008252:	689a      	ldr	r2, [r3, #8]
90008254:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90008258:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
9000825a:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000825c:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
9000825e:	7761      	strb	r1, [r4, #29]
}
90008260:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90008262:	f04f 32ff 	mov.w	r2, #4294967295
90008266:	611a      	str	r2, [r3, #16]
90008268:	e7eb      	b.n	90008242 <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000826a:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
9000826e:	4620      	mov	r0, r4
90008270:	f000 f80e 	bl	90008290 <HAL_CRCEx_Polynomial_Set>
90008274:	b908      	cbnz	r0, 9000827a <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90008276:	6823      	ldr	r3, [r4, #0]
90008278:	e7df      	b.n	9000823a <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000827a:	2001      	movs	r0, #1
}
9000827c:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
9000827e:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90008280:	f7fb fda2 	bl	90003dc8 <HAL_CRC_MspInit>
90008284:	e7ce      	b.n	90008224 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
90008286:	2001      	movs	r0, #1
}
90008288:	4770      	bx	lr
9000828a:	bf00      	nop
9000828c:	04c11db7 	.word	0x04c11db7

90008290 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90008290:	07cb      	lsls	r3, r1, #31
90008292:	d51a      	bpl.n	900082ca <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
90008294:	231f      	movs	r3, #31
{
90008296:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90008298:	3b01      	subs	r3, #1
9000829a:	1c5c      	adds	r4, r3, #1
9000829c:	fa21 fc03 	lsr.w	ip, r1, r3
900082a0:	d015      	beq.n	900082ce <HAL_CRCEx_Polynomial_Set+0x3e>
900082a2:	f01c 0f01 	tst.w	ip, #1
900082a6:	d0f7      	beq.n	90008298 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
900082a8:	2a18      	cmp	r2, #24
900082aa:	d811      	bhi.n	900082d0 <HAL_CRCEx_Polynomial_Set+0x40>
900082ac:	e8df f002 	tbb	[pc, r2]
900082b0:	10101016 	.word	0x10101016
900082b4:	10101010 	.word	0x10101010
900082b8:	10101024 	.word	0x10101024
900082bc:	10101010 	.word	0x10101010
900082c0:	10101021 	.word	0x10101021
900082c4:	10101010 	.word	0x10101010
900082c8:	14          	.byte	0x14
900082c9:	00          	.byte	0x00
900082ca:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
900082cc:	4770      	bx	lr
    switch (PolyLength)
900082ce:	b12a      	cbz	r2, 900082dc <HAL_CRCEx_Polynomial_Set+0x4c>
900082d0:	2001      	movs	r0, #1
}
900082d2:	f85d 4b04 	ldr.w	r4, [sp], #4
900082d6:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
900082d8:	2b06      	cmp	r3, #6
900082da:	d8f9      	bhi.n	900082d0 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
900082dc:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900082de:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
900082e0:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900082e2:	68a3      	ldr	r3, [r4, #8]
900082e4:	f023 0318 	bic.w	r3, r3, #24
900082e8:	4313      	orrs	r3, r2
900082ea:	60a3      	str	r3, [r4, #8]
}
900082ec:	f85d 4b04 	ldr.w	r4, [sp], #4
900082f0:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
900082f2:	2b07      	cmp	r3, #7
900082f4:	d9f2      	bls.n	900082dc <HAL_CRCEx_Polynomial_Set+0x4c>
900082f6:	e7eb      	b.n	900082d0 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
900082f8:	2b0f      	cmp	r3, #15
900082fa:	d9ef      	bls.n	900082dc <HAL_CRCEx_Polynomial_Set+0x4c>
900082fc:	e7e8      	b.n	900082d0 <HAL_CRCEx_Polynomial_Set+0x40>
900082fe:	bf00      	nop

90008300 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90008300:	2800      	cmp	r0, #0
90008302:	d035      	beq.n	90008370 <HAL_DMA2D_Init+0x70>
{
90008304:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
90008306:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
9000830a:	4604      	mov	r4, r0
9000830c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008310:	b34b      	cbz	r3, 90008366 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008312:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008314:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008316:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008318:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000831c:	69e1      	ldr	r1, [r4, #28]
9000831e:	681d      	ldr	r5, [r3, #0]
90008320:	4814      	ldr	r0, [pc, #80]	@ (90008374 <HAL_DMA2D_Init+0x74>)
90008322:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008324:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90008326:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008328:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000832a:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000832c:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000832e:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008330:	4302      	orrs	r2, r0
90008332:	6b59      	ldr	r1, [r3, #52]	@ 0x34
90008334:	4810      	ldr	r0, [pc, #64]	@ (90008378 <HAL_DMA2D_Init+0x78>)
90008336:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008338:	4910      	ldr	r1, [pc, #64]	@ (9000837c <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000833a:	4302      	orrs	r2, r0
9000833c:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000833e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
90008340:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008342:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008346:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008348:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000834a:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000834c:	6b59      	ldr	r1, [r3, #52]	@ 0x34
9000834e:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90008352:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008354:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
90008358:	430a      	orrs	r2, r1
9000835a:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000835c:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000835e:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90008360:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
90008364:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
90008366:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
9000836a:	f7fb fd45 	bl	90003df8 <HAL_DMA2D_MspInit>
9000836e:	e7d0      	b.n	90008312 <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90008370:	2001      	movs	r0, #1
}
90008372:	4770      	bx	lr
90008374:	fff8ffbf 	.word	0xfff8ffbf
90008378:	fffffef8 	.word	0xfffffef8
9000837c:	ffff0000 	.word	0xffff0000

90008380 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
90008380:	4770      	bx	lr
90008382:	bf00      	nop

90008384 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
90008384:	4770      	bx	lr
90008386:	bf00      	nop

90008388 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90008388:	6803      	ldr	r3, [r0, #0]
{
9000838a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000838c:	685d      	ldr	r5, [r3, #4]
{
9000838e:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90008390:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90008392:	07ea      	lsls	r2, r5, #31
90008394:	d501      	bpl.n	9000839a <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
90008396:	05f1      	lsls	r1, r6, #23
90008398:	d456      	bmi.n	90008448 <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
9000839a:	06aa      	lsls	r2, r5, #26
9000839c:	d501      	bpl.n	900083a2 <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
9000839e:	04b3      	lsls	r3, r6, #18
900083a0:	d43b      	bmi.n	9000841a <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
900083a2:	0728      	lsls	r0, r5, #28
900083a4:	d501      	bpl.n	900083aa <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
900083a6:	0531      	lsls	r1, r6, #20
900083a8:	d421      	bmi.n	900083ee <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
900083aa:	076a      	lsls	r2, r5, #29
900083ac:	d501      	bpl.n	900083b2 <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
900083ae:	0573      	lsls	r3, r6, #21
900083b0:	d472      	bmi.n	90008498 <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
900083b2:	07a8      	lsls	r0, r5, #30
900083b4:	d501      	bpl.n	900083ba <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
900083b6:	05b1      	lsls	r1, r6, #22
900083b8:	d404      	bmi.n	900083c4 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
900083ba:	06ea      	lsls	r2, r5, #27
900083bc:	d501      	bpl.n	900083c2 <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
900083be:	04f3      	lsls	r3, r6, #19
900083c0:	d457      	bmi.n	90008472 <HAL_DMA2D_IRQHandler+0xea>
}
900083c2:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
900083c4:	6823      	ldr	r3, [r4, #0]
900083c6:	681a      	ldr	r2, [r3, #0]
900083c8:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
900083cc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
900083ce:	2202      	movs	r2, #2
900083d0:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
900083d2:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900083d4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900083d6:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
900083d8:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
900083da:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900083de:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
900083e2:	6a23      	ldr	r3, [r4, #32]
900083e4:	2b00      	cmp	r3, #0
900083e6:	d0e8      	beq.n	900083ba <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
900083e8:	4620      	mov	r0, r4
900083ea:	4798      	blx	r3
900083ec:	e7e5      	b.n	900083ba <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
900083ee:	6823      	ldr	r3, [r4, #0]
900083f0:	681a      	ldr	r2, [r3, #0]
900083f2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
900083f6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
900083f8:	2208      	movs	r2, #8
900083fa:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900083fc:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
900083fe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90008400:	4313      	orrs	r3, r2
90008402:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008404:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90008408:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000840a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
9000840c:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008410:	2b00      	cmp	r3, #0
90008412:	d0ca      	beq.n	900083aa <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90008414:	4620      	mov	r0, r4
90008416:	4798      	blx	r3
90008418:	e7c7      	b.n	900083aa <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
9000841a:	6823      	ldr	r3, [r4, #0]
9000841c:	681a      	ldr	r2, [r3, #0]
9000841e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
90008422:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90008424:	2220      	movs	r2, #32
90008426:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008428:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
9000842a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9000842c:	f043 0302 	orr.w	r3, r3, #2
90008430:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008432:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90008436:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90008438:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
9000843a:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000843e:	2b00      	cmp	r3, #0
90008440:	d0af      	beq.n	900083a2 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90008442:	4620      	mov	r0, r4
90008444:	4798      	blx	r3
90008446:	e7ac      	b.n	900083a2 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90008448:	681a      	ldr	r2, [r3, #0]
9000844a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000844e:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90008450:	6e42      	ldr	r2, [r0, #100]	@ 0x64
90008452:	f042 0201 	orr.w	r2, r2, #1
90008456:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90008458:	2201      	movs	r2, #1
9000845a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000845c:	2304      	movs	r3, #4
9000845e:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90008462:	2300      	movs	r3, #0
90008464:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008468:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9000846a:	2b00      	cmp	r3, #0
9000846c:	d095      	beq.n	9000839a <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
9000846e:	4798      	blx	r3
90008470:	e793      	b.n	9000839a <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90008472:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008474:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008476:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90008478:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000847a:	681a      	ldr	r2, [r3, #0]
9000847c:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
90008480:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008482:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008484:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008486:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90008488:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000848c:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000848e:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008492:	f7ff ff77 	bl	90008384 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90008496:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008498:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000849a:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000849c:	681a      	ldr	r2, [r3, #0]
9000849e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
900084a2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
900084a4:	2204      	movs	r2, #4
900084a6:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
900084a8:	f7ff ff6a 	bl	90008380 <HAL_DMA2D_LineEventCallback>
900084ac:	e781      	b.n	900083b2 <HAL_DMA2D_IRQHandler+0x2a>
900084ae:	bf00      	nop

900084b0 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
900084b0:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
900084b4:	2a01      	cmp	r2, #1
900084b6:	d05f      	beq.n	90008578 <HAL_DMA2D_ConfigLayer+0xc8>
900084b8:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900084ba:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900084be:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900084c0:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
900084c4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
900084c8:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
900084ca:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900084cc:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
900084d0:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900084d4:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900084d6:	6b04      	ldr	r4, [r0, #48]	@ 0x30
900084d8:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900084da:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
900084dc:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900084de:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900084e2:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900084e6:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900084e8:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900084ea:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900084ee:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900084f2:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900084f4:	d923      	bls.n	9000853e <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
900084f6:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
900084fa:	b971      	cbnz	r1, 9000851a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900084fc:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900084fe:	491f      	ldr	r1, [pc, #124]	@ (9000857c <HAL_DMA2D_ConfigLayer+0xcc>)
90008500:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008502:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008504:	4311      	orrs	r1, r2
90008506:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008508:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
9000850a:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000850c:	2101      	movs	r1, #1

  return HAL_OK;
9000850e:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90008510:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
90008514:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
90008518:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000851a:	2d0b      	cmp	r5, #11
9000851c:	d12a      	bne.n	90008574 <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
9000851e:	6c00      	ldr	r0, [r0, #64]	@ 0x40
90008520:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
90008524:	4816      	ldr	r0, [pc, #88]	@ (90008580 <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008526:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000852a:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000852c:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008530:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008532:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008536:	430a      	orrs	r2, r1
90008538:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000853a:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000853c:	e7e5      	b.n	9000850a <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
9000853e:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
90008542:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90008544:	b959      	cbnz	r1, 9000855e <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008546:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90008548:	490c      	ldr	r1, [pc, #48]	@ (9000857c <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000854a:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000854c:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000854e:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008550:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008552:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008556:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008558:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000855a:	62a0      	str	r0, [r4, #40]	@ 0x28
9000855c:	e7d5      	b.n	9000850a <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000855e:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008560:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008564:	4905      	ldr	r1, [pc, #20]	@ (9000857c <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008566:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008568:	4029      	ands	r1, r5
9000856a:	4311      	orrs	r1, r2
9000856c:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000856e:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008570:	6226      	str	r6, [r4, #32]
90008572:	e7ca      	b.n	9000850a <HAL_DMA2D_ConfigLayer+0x5a>
90008574:	4801      	ldr	r0, [pc, #4]	@ (9000857c <HAL_DMA2D_ConfigLayer+0xcc>)
90008576:	e7d6      	b.n	90008526 <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
90008578:	2002      	movs	r0, #2
}
9000857a:	4770      	bx	lr
9000857c:	00ccfff0 	.word	0x00ccfff0
90008580:	00c0fff0 	.word	0x00c0fff0

90008584 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
90008584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008588:	680c      	ldr	r4, [r1, #0]
{
9000858a:	b085      	sub	sp, #20
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000858c:	2c00      	cmp	r4, #0
9000858e:	f000 80a5 	beq.w	900086dc <HAL_GPIO_Init+0x158>
  uint32_t position = 0x00U;
90008592:	2300      	movs	r3, #0
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90008594:	f04f 0b01 	mov.w	fp, #1
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90008598:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000859c:	9100      	str	r1, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000859e:	fa0b fc03 	lsl.w	ip, fp, r3
    if (iocurrent != 0x00U)
900085a2:	ea1c 0a04 	ands.w	sl, ip, r4
900085a6:	f000 8094 	beq.w	900086d2 <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900085aa:	9900      	ldr	r1, [sp, #0]
900085ac:	005f      	lsls	r7, r3, #1
900085ae:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900085b0:	2103      	movs	r1, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900085b2:	f005 0203 	and.w	r2, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900085b6:	fa01 f607 	lsl.w	r6, r1, r7
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900085ba:	f102 38ff 	add.w	r8, r2, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900085be:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900085c0:	f1b8 0f01 	cmp.w	r8, #1
900085c4:	f240 808d 	bls.w	900086e2 <HAL_GPIO_Init+0x15e>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
900085c8:	2a03      	cmp	r2, #3
900085ca:	f040 80cb 	bne.w	90008764 <HAL_GPIO_Init+0x1e0>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900085ce:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
900085d0:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900085d2:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
900085d6:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900085da:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
900085de:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900085e0:	d077      	beq.n	900086d2 <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900085e2:	4e7f      	ldr	r6, [pc, #508]	@ (900087e0 <HAL_GPIO_Init+0x25c>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900085e4:	f003 0703 	and.w	r7, r3, #3
900085e8:	210f      	movs	r1, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900085ea:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900085ee:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900085f0:	f042 0202 	orr.w	r2, r2, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900085f4:	fa01 fc07 	lsl.w	ip, r1, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900085f8:	497a      	ldr	r1, [pc, #488]	@ (900087e4 <HAL_GPIO_Init+0x260>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900085fa:	f8c6 20f4 	str.w	r2, [r6, #244]	@ 0xf4
900085fe:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
90008602:	f023 0603 	bic.w	r6, r3, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008606:	4288      	cmp	r0, r1
90008608:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000860c:	f002 0202 	and.w	r2, r2, #2
90008610:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
90008614:	9203      	str	r2, [sp, #12]
90008616:	9a03      	ldr	r2, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
90008618:	68b2      	ldr	r2, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000861a:	ea22 020c 	bic.w	r2, r2, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000861e:	d031      	beq.n	90008684 <HAL_GPIO_Init+0x100>
90008620:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
90008624:	4288      	cmp	r0, r1
90008626:	f000 80b0 	beq.w	9000878a <HAL_GPIO_Init+0x206>
9000862a:	496f      	ldr	r1, [pc, #444]	@ (900087e8 <HAL_GPIO_Init+0x264>)
9000862c:	4288      	cmp	r0, r1
9000862e:	f000 80b2 	beq.w	90008796 <HAL_GPIO_Init+0x212>
90008632:	f8df c1b8 	ldr.w	ip, [pc, #440]	@ 900087ec <HAL_GPIO_Init+0x268>
90008636:	4560      	cmp	r0, ip
90008638:	f000 80a1 	beq.w	9000877e <HAL_GPIO_Init+0x1fa>
9000863c:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 900087f0 <HAL_GPIO_Init+0x26c>
90008640:	4560      	cmp	r0, ip
90008642:	f000 80b4 	beq.w	900087ae <HAL_GPIO_Init+0x22a>
90008646:	f8df c1ac 	ldr.w	ip, [pc, #428]	@ 900087f4 <HAL_GPIO_Init+0x270>
9000864a:	4560      	cmp	r0, ip
9000864c:	f000 80b5 	beq.w	900087ba <HAL_GPIO_Init+0x236>
90008650:	f8df c1a4 	ldr.w	ip, [pc, #420]	@ 900087f8 <HAL_GPIO_Init+0x274>
90008654:	4560      	cmp	r0, ip
90008656:	f000 80a4 	beq.w	900087a2 <HAL_GPIO_Init+0x21e>
9000865a:	f8df c1a0 	ldr.w	ip, [pc, #416]	@ 900087fc <HAL_GPIO_Init+0x278>
9000865e:	4560      	cmp	r0, ip
90008660:	f000 80b1 	beq.w	900087c6 <HAL_GPIO_Init+0x242>
90008664:	f8df c198 	ldr.w	ip, [pc, #408]	@ 90008800 <HAL_GPIO_Init+0x27c>
90008668:	4560      	cmp	r0, ip
9000866a:	f000 80b2 	beq.w	900087d2 <HAL_GPIO_Init+0x24e>
9000866e:	f8df c194 	ldr.w	ip, [pc, #404]	@ 90008804 <HAL_GPIO_Init+0x280>
90008672:	4560      	cmp	r0, ip
90008674:	bf0c      	ite	eq
90008676:	f04f 0c09 	moveq.w	ip, #9
9000867a:	f04f 0c0a 	movne.w	ip, #10
9000867e:	fa0c f707 	lsl.w	r7, ip, r7
90008682:	433a      	orrs	r2, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
90008684:	60b2      	str	r2, [r6, #8]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90008686:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
90008688:	f8de 2000 	ldr.w	r2, [lr]
        temp &= ~(iocurrent);
9000868c:	ea6f 060a 	mvn.w	r6, sl
        {
          temp |= iocurrent;
90008690:	bf4c      	ite	mi
90008692:	ea4a 0202 	orrmi.w	r2, sl, r2
        temp &= ~(iocurrent);
90008696:	4032      	andpl	r2, r6
        }
        EXTI->RTSR1 = temp;

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
90008698:	02a9      	lsls	r1, r5, #10
        EXTI->RTSR1 = temp;
9000869a:	f8ce 2000 	str.w	r2, [lr]
        temp = EXTI->FTSR1;
9000869e:	f8de 2004 	ldr.w	r2, [lr, #4]
        temp &= ~(iocurrent);
900086a2:	bf54      	ite	pl
900086a4:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
900086a6:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI->FTSR1 = temp;

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
900086aa:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
900086ac:	f8ce 2004 	str.w	r2, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
900086b0:	f8de 2084 	ldr.w	r2, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
900086b4:	bf54      	ite	pl
900086b6:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
900086b8:	ea4a 0202 	orrmi.w	r2, sl, r2
        EXTI_CurrentCPU->EMR1 = temp;

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
900086bc:	03e9      	lsls	r1, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
900086be:	f8ce 2084 	str.w	r2, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
900086c2:	f8de 2080 	ldr.w	r2, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
900086c6:	bf54      	ite	pl
900086c8:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
900086ca:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI_CurrentCPU->IMR1 = temp;
900086ce:	f8ce 2080 	str.w	r2, [lr, #128]	@ 0x80
      }
    }

    position++;
900086d2:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900086d4:	fa34 f203 	lsrs.w	r2, r4, r3
900086d8:	f47f af61 	bne.w	9000859e <HAL_GPIO_Init+0x1a>
  }
}
900086dc:	b005      	add	sp, #20
900086de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
900086e2:	9900      	ldr	r1, [sp, #0]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900086e4:	2a02      	cmp	r2, #2
        temp = GPIOx->OSPEEDR;
900086e6:	f8d0 9008 	ldr.w	r9, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
900086ea:	68c9      	ldr	r1, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900086ec:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
900086f0:	fa01 f807 	lsl.w	r8, r1, r7
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900086f4:	9900      	ldr	r1, [sp, #0]
        temp |= (GPIO_Init->Speed << (position * 2U));
900086f6:	ea48 0809 	orr.w	r8, r8, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900086fa:	6889      	ldr	r1, [r1, #8]
        GPIOx->OSPEEDR = temp;
900086fc:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008700:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
90008704:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008708:	fa08 f803 	lsl.w	r8, r8, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
9000870c:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008710:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
90008714:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008718:	fa01 fc07 	lsl.w	ip, r1, r7
      temp = GPIOx->PUPDR;
9000871c:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008720:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008724:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90008728:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000872c:	f47f af4f 	bne.w	900085ce <HAL_GPIO_Init+0x4a>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008730:	f003 0c07 	and.w	ip, r3, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008734:	9900      	ldr	r1, [sp, #0]
        temp = GPIOx->AFR[position >> 3U];
90008736:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000873a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000873e:	6909      	ldr	r1, [r1, #16]
90008740:	eb00 0888 	add.w	r8, r0, r8, lsl #2
90008744:	fa01 f10c 	lsl.w	r1, r1, ip
        temp = GPIOx->AFR[position >> 3U];
90008748:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000874c:	9101      	str	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000874e:	210f      	movs	r1, #15
90008750:	fa01 fc0c 	lsl.w	ip, r1, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008754:	9901      	ldr	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008756:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000875a:	ea41 0c09 	orr.w	ip, r1, r9
        GPIOx->AFR[position >> 3U] = temp;
9000875e:	f8c8 c020 	str.w	ip, [r8, #32]
90008762:	e734      	b.n	900085ce <HAL_GPIO_Init+0x4a>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008764:	9900      	ldr	r1, [sp, #0]
      temp = GPIOx->PUPDR;
90008766:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000876a:	6889      	ldr	r1, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000876c:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008770:	fa01 fc07 	lsl.w	ip, r1, r7
90008774:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90008778:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000877c:	e727      	b.n	900085ce <HAL_GPIO_Init+0x4a>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000877e:	f04f 0c03 	mov.w	ip, #3
90008782:	fa0c f707 	lsl.w	r7, ip, r7
90008786:	433a      	orrs	r2, r7
90008788:	e77c      	b.n	90008684 <HAL_GPIO_Init+0x100>
9000878a:	f04f 0c01 	mov.w	ip, #1
9000878e:	fa0c f707 	lsl.w	r7, ip, r7
90008792:	433a      	orrs	r2, r7
90008794:	e776      	b.n	90008684 <HAL_GPIO_Init+0x100>
90008796:	f04f 0c02 	mov.w	ip, #2
9000879a:	fa0c f707 	lsl.w	r7, ip, r7
9000879e:	433a      	orrs	r2, r7
900087a0:	e770      	b.n	90008684 <HAL_GPIO_Init+0x100>
900087a2:	f04f 0c06 	mov.w	ip, #6
900087a6:	fa0c f707 	lsl.w	r7, ip, r7
900087aa:	433a      	orrs	r2, r7
900087ac:	e76a      	b.n	90008684 <HAL_GPIO_Init+0x100>
900087ae:	f04f 0c04 	mov.w	ip, #4
900087b2:	fa0c f707 	lsl.w	r7, ip, r7
900087b6:	433a      	orrs	r2, r7
900087b8:	e764      	b.n	90008684 <HAL_GPIO_Init+0x100>
900087ba:	f04f 0c05 	mov.w	ip, #5
900087be:	fa0c f707 	lsl.w	r7, ip, r7
900087c2:	433a      	orrs	r2, r7
900087c4:	e75e      	b.n	90008684 <HAL_GPIO_Init+0x100>
900087c6:	f04f 0c07 	mov.w	ip, #7
900087ca:	fa0c f707 	lsl.w	r7, ip, r7
900087ce:	433a      	orrs	r2, r7
900087d0:	e758      	b.n	90008684 <HAL_GPIO_Init+0x100>
900087d2:	f04f 0c08 	mov.w	ip, #8
900087d6:	fa0c f707 	lsl.w	r7, ip, r7
900087da:	433a      	orrs	r2, r7
900087dc:	e752      	b.n	90008684 <HAL_GPIO_Init+0x100>
900087de:	bf00      	nop
900087e0:	58024400 	.word	0x58024400
900087e4:	58020000 	.word	0x58020000
900087e8:	58020800 	.word	0x58020800
900087ec:	58020c00 	.word	0x58020c00
900087f0:	58021000 	.word	0x58021000
900087f4:	58021400 	.word	0x58021400
900087f8:	58021800 	.word	0x58021800
900087fc:	58021c00 	.word	0x58021c00
90008800:	58022000 	.word	0x58022000
90008804:	58022400 	.word	0x58022400

90008808 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
90008808:	2900      	cmp	r1, #0
9000880a:	f000 80ac 	beq.w	90008966 <HAL_GPIO_DeInit+0x15e>
  uint32_t position = 0x00U;
9000880e:	2300      	movs	r3, #0
{
90008810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = GPIO_Pin & (1UL << position) ;
90008814:	2601      	movs	r6, #1
{
90008816:	b083      	sub	sp, #12
90008818:	f8df a168 	ldr.w	sl, [pc, #360]	@ 90008984 <HAL_GPIO_DeInit+0x17c>
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000881c:	f04f 080f 	mov.w	r8, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008820:	f04f 0903 	mov.w	r9, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
90008824:	fa06 f203 	lsl.w	r2, r6, r3
    if (iocurrent != 0x00U)
90008828:	ea12 0c01 	ands.w	ip, r2, r1
9000882c:	d073      	beq.n	90008916 <HAL_GPIO_DeInit+0x10e>
      tmp = SYSCFG->EXTICR[position >> 2U];
9000882e:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008832:	f003 0403 	and.w	r4, r3, #3
90008836:	4455      	add	r5, sl
90008838:	00a4      	lsls	r4, r4, #2
      tmp = SYSCFG->EXTICR[position >> 2U];
9000883a:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000883c:	fa08 fe04 	lsl.w	lr, r8, r4
90008840:	ea0e 0707 	and.w	r7, lr, r7
90008844:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90008846:	4f4b      	ldr	r7, [pc, #300]	@ (90008974 <HAL_GPIO_DeInit+0x16c>)
90008848:	42b8      	cmp	r0, r7
9000884a:	d027      	beq.n	9000889c <HAL_GPIO_DeInit+0x94>
9000884c:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
90008850:	42b8      	cmp	r0, r7
90008852:	d067      	beq.n	90008924 <HAL_GPIO_DeInit+0x11c>
90008854:	4f48      	ldr	r7, [pc, #288]	@ (90008978 <HAL_GPIO_DeInit+0x170>)
90008856:	42b8      	cmp	r0, r7
90008858:	d067      	beq.n	9000892a <HAL_GPIO_DeInit+0x122>
9000885a:	4f48      	ldr	r7, [pc, #288]	@ (9000897c <HAL_GPIO_DeInit+0x174>)
9000885c:	42b8      	cmp	r0, r7
9000885e:	d06e      	beq.n	9000893e <HAL_GPIO_DeInit+0x136>
90008860:	4f47      	ldr	r7, [pc, #284]	@ (90008980 <HAL_GPIO_DeInit+0x178>)
90008862:	42b8      	cmp	r0, r7
90008864:	d070      	beq.n	90008948 <HAL_GPIO_DeInit+0x140>
90008866:	f8df b120 	ldr.w	fp, [pc, #288]	@ 90008988 <HAL_GPIO_DeInit+0x180>
9000886a:	4558      	cmp	r0, fp
9000886c:	d062      	beq.n	90008934 <HAL_GPIO_DeInit+0x12c>
9000886e:	f8df b11c 	ldr.w	fp, [pc, #284]	@ 9000898c <HAL_GPIO_DeInit+0x184>
90008872:	4558      	cmp	r0, fp
90008874:	d072      	beq.n	9000895c <HAL_GPIO_DeInit+0x154>
90008876:	f8df b118 	ldr.w	fp, [pc, #280]	@ 90008990 <HAL_GPIO_DeInit+0x188>
9000887a:	4558      	cmp	r0, fp
9000887c:	d074      	beq.n	90008968 <HAL_GPIO_DeInit+0x160>
9000887e:	f8df b114 	ldr.w	fp, [pc, #276]	@ 90008994 <HAL_GPIO_DeInit+0x18c>
90008882:	4558      	cmp	r0, fp
90008884:	d065      	beq.n	90008952 <HAL_GPIO_DeInit+0x14a>
90008886:	f8df b110 	ldr.w	fp, [pc, #272]	@ 90008998 <HAL_GPIO_DeInit+0x190>
9000888a:	4558      	cmp	r0, fp
9000888c:	bf14      	ite	ne
9000888e:	f04f 0b0a 	movne.w	fp, #10
90008892:	f04f 0b09 	moveq.w	fp, #9
90008896:	fa0b f404 	lsl.w	r4, fp, r4
9000889a:	e000      	b.n	9000889e <HAL_GPIO_DeInit+0x96>
9000889c:	2400      	movs	r4, #0
9000889e:	9f01      	ldr	r7, [sp, #4]
900088a0:	42a7      	cmp	r7, r4
900088a2:	d119      	bne.n	900088d8 <HAL_GPIO_DeInit+0xd0>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900088a4:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
900088a8:	f8d4 7080 	ldr.w	r7, [r4, #128]	@ 0x80
900088ac:	ea27 070c 	bic.w	r7, r7, ip
900088b0:	f8c4 7080 	str.w	r7, [r4, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
900088b4:	f8d4 7084 	ldr.w	r7, [r4, #132]	@ 0x84
900088b8:	ea27 070c 	bic.w	r7, r7, ip
900088bc:	f8c4 7084 	str.w	r7, [r4, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
900088c0:	6867      	ldr	r7, [r4, #4]
900088c2:	ea27 070c 	bic.w	r7, r7, ip
900088c6:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
900088c8:	6827      	ldr	r7, [r4, #0]
900088ca:	ea27 070c 	bic.w	r7, r7, ip
900088ce:	6027      	str	r7, [r4, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
900088d0:	68ac      	ldr	r4, [r5, #8]
900088d2:	ea24 040e 	bic.w	r4, r4, lr
900088d6:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900088d8:	005d      	lsls	r5, r3, #1
900088da:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900088dc:	08df      	lsrs	r7, r3, #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900088de:	fa09 f505 	lsl.w	r5, r9, r5
900088e2:	eb00 0787 	add.w	r7, r0, r7, lsl #2
900088e6:	432c      	orrs	r4, r5
900088e8:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900088ea:	f003 0407 	and.w	r4, r3, #7
900088ee:	f8d7 c020 	ldr.w	ip, [r7, #32]
900088f2:	00a4      	lsls	r4, r4, #2
900088f4:	fa08 f404 	lsl.w	r4, r8, r4
900088f8:	ea2c 0404 	bic.w	r4, ip, r4
900088fc:	623c      	str	r4, [r7, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900088fe:	68c4      	ldr	r4, [r0, #12]
90008900:	ea24 0405 	bic.w	r4, r4, r5
90008904:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
90008906:	6844      	ldr	r4, [r0, #4]
90008908:	ea24 0202 	bic.w	r2, r4, r2
9000890c:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000890e:	6882      	ldr	r2, [r0, #8]
90008910:	ea22 0205 	bic.w	r2, r2, r5
90008914:	6082      	str	r2, [r0, #8]
    }

    position++;
90008916:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
90008918:	fa31 f203 	lsrs.w	r2, r1, r3
9000891c:	d182      	bne.n	90008824 <HAL_GPIO_DeInit+0x1c>
  }
}
9000891e:	b003      	add	sp, #12
90008920:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90008924:	fa06 f404 	lsl.w	r4, r6, r4
90008928:	e7b9      	b.n	9000889e <HAL_GPIO_DeInit+0x96>
9000892a:	f04f 0b02 	mov.w	fp, #2
9000892e:	fa0b f404 	lsl.w	r4, fp, r4
90008932:	e7b4      	b.n	9000889e <HAL_GPIO_DeInit+0x96>
90008934:	f04f 0b05 	mov.w	fp, #5
90008938:	fa0b f404 	lsl.w	r4, fp, r4
9000893c:	e7af      	b.n	9000889e <HAL_GPIO_DeInit+0x96>
9000893e:	f04f 0b03 	mov.w	fp, #3
90008942:	fa0b f404 	lsl.w	r4, fp, r4
90008946:	e7aa      	b.n	9000889e <HAL_GPIO_DeInit+0x96>
90008948:	f04f 0b04 	mov.w	fp, #4
9000894c:	fa0b f404 	lsl.w	r4, fp, r4
90008950:	e7a5      	b.n	9000889e <HAL_GPIO_DeInit+0x96>
90008952:	f04f 0b08 	mov.w	fp, #8
90008956:	fa0b f404 	lsl.w	r4, fp, r4
9000895a:	e7a0      	b.n	9000889e <HAL_GPIO_DeInit+0x96>
9000895c:	f04f 0b06 	mov.w	fp, #6
90008960:	fa0b f404 	lsl.w	r4, fp, r4
90008964:	e79b      	b.n	9000889e <HAL_GPIO_DeInit+0x96>
90008966:	4770      	bx	lr
90008968:	f04f 0b07 	mov.w	fp, #7
9000896c:	fa0b f404 	lsl.w	r4, fp, r4
90008970:	e795      	b.n	9000889e <HAL_GPIO_DeInit+0x96>
90008972:	bf00      	nop
90008974:	58020000 	.word	0x58020000
90008978:	58020800 	.word	0x58020800
9000897c:	58020c00 	.word	0x58020c00
90008980:	58021000 	.word	0x58021000
90008984:	58000400 	.word	0x58000400
90008988:	58021400 	.word	0x58021400
9000898c:	58021800 	.word	0x58021800
90008990:	58021c00 	.word	0x58021c00
90008994:	58022000 	.word	0x58022000
90008998:	58022400 	.word	0x58022400

9000899c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
9000899c:	6903      	ldr	r3, [r0, #16]
9000899e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
900089a0:	bf14      	ite	ne
900089a2:	2001      	movne	r0, #1
900089a4:	2000      	moveq	r0, #0
900089a6:	4770      	bx	lr

900089a8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
900089a8:	b902      	cbnz	r2, 900089ac <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
900089aa:	0409      	lsls	r1, r1, #16
900089ac:	6181      	str	r1, [r0, #24]
  }
}
900089ae:	4770      	bx	lr

900089b0 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
900089b0:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
900089b2:	ea01 0203 	and.w	r2, r1, r3
900089b6:	ea21 0103 	bic.w	r1, r1, r3
900089ba:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
900089be:	6181      	str	r1, [r0, #24]
}
900089c0:	4770      	bx	lr
900089c2:	bf00      	nop

900089c4 <I2C_WaitOnFlagUntilTimeout.constprop.0>:
  * @param  Status The actual Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
900089c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
                                                    uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900089c8:	6803      	ldr	r3, [r0, #0]
900089ca:	699a      	ldr	r2, [r3, #24]
900089cc:	0414      	lsls	r4, r2, #16
900089ce:	f140 8088 	bpl.w	90008ae2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11e>
900089d2:	4604      	mov	r4, r0
900089d4:	4688      	mov	r8, r1
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900089d6:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
900089da:	699e      	ldr	r6, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
900089dc:	f016 0610 	ands.w	r6, r6, #16
900089e0:	f000 8082 	beq.w	90008ae8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x124>
  uint32_t error_code = 0;
900089e4:	2600      	movs	r6, #0
  uint32_t tickstart = Tickstart;
900089e6:	4645      	mov	r5, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900089e8:	f8c3 901c 	str.w	r9, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
900089ec:	4637      	mov	r7, r6

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900089ee:	699a      	ldr	r2, [r3, #24]
900089f0:	0692      	lsls	r2, r2, #26
900089f2:	d427      	bmi.n	90008a44 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x80>
900089f4:	bb4f      	cbnz	r7, 90008a4a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x86>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900089f6:	f7ff fb45 	bl	90008084 <HAL_GetTick>
900089fa:	1b40      	subs	r0, r0, r5
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900089fc:	6823      	ldr	r3, [r4, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900089fe:	2819      	cmp	r0, #25
90008a00:	d9f5      	bls.n	900089ee <I2C_WaitOnFlagUntilTimeout.constprop.0+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008a02:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008a04:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42

          /* In case of I2C still busy, try to regenerate a STOP manually */
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008a08:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008a0a:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008a0c:	0409      	lsls	r1, r1, #16
90008a0e:	d50b      	bpl.n	90008a28 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
              (tmp1 != I2C_CR2_STOP) && \
90008a10:	0440      	lsls	r0, r0, #17
90008a12:	d409      	bmi.n	90008a28 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
90008a14:	2a20      	cmp	r2, #32
90008a16:	d007      	beq.n	90008a28 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
              (tmp2 != HAL_I2C_MODE_SLAVE))
          {
            /* Generate Stop */
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008a18:	685a      	ldr	r2, [r3, #4]
90008a1a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008a1e:	605a      	str	r2, [r3, #4]

            /* Update Tick with new reference */
            tickstart = HAL_GetTick();
90008a20:	f7ff fb30 	bl	90008084 <HAL_GetTick>
          }

          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008a24:	6823      	ldr	r3, [r4, #0]
            tickstart = HAL_GetTick();
90008a26:	4605      	mov	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008a28:	699a      	ldr	r2, [r3, #24]
90008a2a:	0691      	lsls	r1, r2, #26
90008a2c:	d4df      	bmi.n	900089ee <I2C_WaitOnFlagUntilTimeout.constprop.0+0x2a>
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008a2e:	f7ff fb29 	bl	90008084 <HAL_GetTick>
90008a32:	1b40      	subs	r0, r0, r5
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008a34:	6823      	ldr	r3, [r4, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008a36:	2819      	cmp	r0, #25
90008a38:	d9f6      	bls.n	90008a28 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008a3a:	699a      	ldr	r2, [r3, #24]
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008a3c:	2620      	movs	r6, #32

              status = HAL_ERROR;
90008a3e:	2701      	movs	r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008a40:	0692      	lsls	r2, r2, #26
90008a42:	d5d7      	bpl.n	900089f4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x30>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
90008a44:	b90f      	cbnz	r7, 90008a4a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x86>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008a46:	2220      	movs	r2, #32
90008a48:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
90008a4a:	f046 0604 	orr.w	r6, r6, #4

    status = HAL_ERROR;
90008a4e:	2501      	movs	r5, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90008a50:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008a52:	05d7      	lsls	r7, r2, #23
90008a54:	d531      	bpl.n	90008aba <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf6>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008a56:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008a5a:	0550      	lsls	r0, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008a5c:	f046 0601 	orr.w	r6, r6, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008a60:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008a62:	d504      	bpl.n	90008a6e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xaa>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008a64:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008a68:	f046 0608 	orr.w	r6, r6, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008a6c:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008a6e:	0592      	lsls	r2, r2, #22
90008a70:	d504      	bpl.n	90008a7c <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb8>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008a72:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008a76:	f046 0602 	orr.w	r6, r6, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008a7a:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008a7c:	699a      	ldr	r2, [r3, #24]
90008a7e:	0795      	lsls	r5, r2, #30
90008a80:	d501      	bpl.n	90008a86 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xc2>
    hi2c->Instance->TXDR = 0x00U;
90008a82:	2200      	movs	r2, #0
90008a84:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008a86:	699a      	ldr	r2, [r3, #24]
90008a88:	07d0      	lsls	r0, r2, #31
90008a8a:	d403      	bmi.n	90008a94 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd0>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008a8c:	699a      	ldr	r2, [r3, #24]
90008a8e:	f042 0201 	orr.w	r2, r2, #1
90008a92:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90008a94:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
90008a96:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008a98:	4d19      	ldr	r5, [pc, #100]	@ (90008b00 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008a9a:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008a9c:	402a      	ands	r2, r5
90008a9e:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008aa0:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90008aa2:	4333      	orrs	r3, r6
90008aa4:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008aa6:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008aaa:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90008aae:	2300      	movs	r3, #0
      return HAL_ERROR;
90008ab0:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008ab2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
90008ab6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008aba:	0551      	lsls	r1, r2, #21
90008abc:	d4d2      	bmi.n	90008a64 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa0>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008abe:	0597      	lsls	r7, r2, #22
90008ac0:	d4d7      	bmi.n	90008a72 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xae>
  if (status != HAL_OK)
90008ac2:	2d00      	cmp	r5, #0
90008ac4:	d1da      	bne.n	90008a7c <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008ac6:	f7ff fadd 	bl	90008084 <HAL_GetTick>
90008aca:	eba0 0008 	sub.w	r0, r0, r8
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008ace:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008ad0:	2819      	cmp	r0, #25
90008ad2:	d902      	bls.n	90008ada <I2C_WaitOnFlagUntilTimeout.constprop.0+0x116>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008ad4:	699a      	ldr	r2, [r3, #24]
90008ad6:	0411      	lsls	r1, r2, #16
90008ad8:	d408      	bmi.n	90008aec <I2C_WaitOnFlagUntilTimeout.constprop.0+0x128>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008ada:	699a      	ldr	r2, [r3, #24]
90008adc:	0412      	lsls	r2, r2, #16
90008ade:	f53f af7c 	bmi.w	900089da <I2C_WaitOnFlagUntilTimeout.constprop.0+0x16>
  return HAL_OK;
90008ae2:	2000      	movs	r0, #0
}
90008ae4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  HAL_StatusTypeDef status = HAL_OK;
90008ae8:	4635      	mov	r5, r6
90008aea:	e7b1      	b.n	90008a50 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x8c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008aec:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008aee:	2220      	movs	r2, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008af0:	4313      	orrs	r3, r2
90008af2:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008af4:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008af8:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
          return HAL_ERROR;
90008afc:	e7d7      	b.n	90008aae <I2C_WaitOnFlagUntilTimeout.constprop.0+0xea>
90008afe:	bf00      	nop
90008b00:	fe00e800 	.word	0xfe00e800

90008b04 <I2C_WaitOnTXISFlagUntilTimeout>:
{
90008b04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90008b08:	6803      	ldr	r3, [r0, #0]
{
90008b0a:	4680      	mov	r8, r0
90008b0c:	460d      	mov	r5, r1
90008b0e:	4692      	mov	sl, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008b10:	2710      	movs	r7, #16
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90008b12:	699c      	ldr	r4, [r3, #24]
90008b14:	f014 0402 	ands.w	r4, r4, #2
90008b18:	f040 80a5 	bne.w	90008c66 <I2C_WaitOnTXISFlagUntilTimeout+0x162>
  uint32_t itflag   = hi2c->Instance->ISR;
90008b1c:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008b1e:	f012 0c10 	ands.w	ip, r2, #16
90008b22:	d078      	beq.n	90008c16 <I2C_WaitOnTXISFlagUntilTimeout+0x112>
  uint32_t tickstart = Tickstart;
90008b24:	46d1      	mov	r9, sl
  HAL_StatusTypeDef status = HAL_OK;
90008b26:	4626      	mov	r6, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008b28:	61df      	str	r7, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008b2a:	1c68      	adds	r0, r5, #1
90008b2c:	d001      	beq.n	90008b32 <I2C_WaitOnTXISFlagUntilTimeout+0x2e>
90008b2e:	e041      	b.n	90008bb4 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
90008b30:	b92e      	cbnz	r6, 90008b3e <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
90008b32:	699a      	ldr	r2, [r3, #24]
90008b34:	0691      	lsls	r1, r2, #26
90008b36:	d5fb      	bpl.n	90008b30 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
    if (status == HAL_OK)
90008b38:	b90e      	cbnz	r6, 90008b3e <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008b3a:	2220      	movs	r2, #32
90008b3c:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
90008b3e:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
90008b40:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90008b44:	2101      	movs	r1, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008b46:	05d0      	lsls	r0, r2, #23
90008b48:	d569      	bpl.n	90008c1e <I2C_WaitOnTXISFlagUntilTimeout+0x11a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008b4a:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008b4e:	0557      	lsls	r7, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008b50:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008b54:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008b56:	d504      	bpl.n	90008b62 <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008b58:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008b5c:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008b60:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008b62:	0595      	lsls	r5, r2, #22
90008b64:	d504      	bpl.n	90008b70 <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008b66:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008b6a:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008b6e:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008b70:	699a      	ldr	r2, [r3, #24]
90008b72:	0790      	lsls	r0, r2, #30
90008b74:	d501      	bpl.n	90008b7a <I2C_WaitOnTXISFlagUntilTimeout+0x76>
    hi2c->Instance->TXDR = 0x00U;
90008b76:	2200      	movs	r2, #0
90008b78:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008b7a:	699a      	ldr	r2, [r3, #24]
90008b7c:	07d1      	lsls	r1, r2, #31
90008b7e:	d403      	bmi.n	90008b88 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008b80:	699a      	ldr	r2, [r3, #24]
90008b82:	f042 0201 	orr.w	r2, r2, #1
90008b86:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008b88:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008b8a:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008b8c:	4c37      	ldr	r4, [pc, #220]	@ (90008c6c <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008b8e:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008b90:	4022      	ands	r2, r4
90008b92:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008b94:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
90008b98:	ea43 030c 	orr.w	r3, r3, ip
90008b9c:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008ba0:	f888 0041 	strb.w	r0, [r8, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008ba4:	f888 1042 	strb.w	r1, [r8, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90008ba8:	2300      	movs	r3, #0
      return HAL_ERROR;
90008baa:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008bac:	f888 3040 	strb.w	r3, [r8, #64]	@ 0x40
}
90008bb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008bb4:	699a      	ldr	r2, [r3, #24]
90008bb6:	0692      	lsls	r2, r2, #26
90008bb8:	d4be      	bmi.n	90008b38 <I2C_WaitOnTXISFlagUntilTimeout+0x34>
90008bba:	2e00      	cmp	r6, #0
90008bbc:	d1bf      	bne.n	90008b3e <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008bbe:	f7ff fa61 	bl	90008084 <HAL_GetTick>
90008bc2:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008bc6:	f8d8 3000 	ldr.w	r3, [r8]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008bca:	4285      	cmp	r5, r0
90008bcc:	d301      	bcc.n	90008bd2 <I2C_WaitOnTXISFlagUntilTimeout+0xce>
90008bce:	2d00      	cmp	r5, #0
90008bd0:	d1f0      	bne.n	90008bb4 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008bd2:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008bd4:	f898 2042 	ldrb.w	r2, [r8, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008bd8:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008bda:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008bdc:	0409      	lsls	r1, r1, #16
90008bde:	d50c      	bpl.n	90008bfa <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              (tmp1 != I2C_CR2_STOP) && \
90008be0:	0441      	lsls	r1, r0, #17
90008be2:	d40a      	bmi.n	90008bfa <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
90008be4:	2a20      	cmp	r2, #32
90008be6:	d008      	beq.n	90008bfa <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008be8:	685a      	ldr	r2, [r3, #4]
90008bea:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008bee:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008bf0:	f7ff fa48 	bl	90008084 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008bf4:	f8d8 3000 	ldr.w	r3, [r8]
            tickstart = HAL_GetTick();
90008bf8:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008bfa:	699a      	ldr	r2, [r3, #24]
90008bfc:	0692      	lsls	r2, r2, #26
90008bfe:	d494      	bmi.n	90008b2a <I2C_WaitOnTXISFlagUntilTimeout+0x26>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008c00:	f7ff fa40 	bl	90008084 <HAL_GetTick>
90008c04:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008c08:	f8d8 3000 	ldr.w	r3, [r8]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008c0c:	2819      	cmp	r0, #25
90008c0e:	d9f4      	bls.n	90008bfa <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008c10:	2420      	movs	r4, #32
              status = HAL_ERROR;
90008c12:	2601      	movs	r6, #1
90008c14:	e789      	b.n	90008b2a <I2C_WaitOnTXISFlagUntilTimeout+0x26>
  itflag = hi2c->Instance->ISR;
90008c16:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
90008c18:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008c1a:	05d0      	lsls	r0, r2, #23
90008c1c:	d495      	bmi.n	90008b4a <I2C_WaitOnTXISFlagUntilTimeout+0x46>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008c1e:	0556      	lsls	r6, r2, #21
90008c20:	d49a      	bmi.n	90008b58 <I2C_WaitOnTXISFlagUntilTimeout+0x54>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008c22:	0594      	lsls	r4, r2, #22
90008c24:	d49f      	bmi.n	90008b66 <I2C_WaitOnTXISFlagUntilTimeout+0x62>
  if (status != HAL_OK)
90008c26:	2900      	cmp	r1, #0
90008c28:	d1a2      	bne.n	90008b70 <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    if (Timeout != HAL_MAX_DELAY)
90008c2a:	1c6a      	adds	r2, r5, #1
90008c2c:	f43f af71 	beq.w	90008b12 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008c30:	f7ff fa28 	bl	90008084 <HAL_GetTick>
90008c34:	eba0 030a 	sub.w	r3, r0, sl
90008c38:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90008c3a:	f8d8 3000 	ldr.w	r3, [r8]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008c3e:	d802      	bhi.n	90008c46 <I2C_WaitOnTXISFlagUntilTimeout+0x142>
90008c40:	2d00      	cmp	r5, #0
90008c42:	f47f af65 	bne.w	90008b10 <I2C_WaitOnTXISFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90008c46:	699a      	ldr	r2, [r3, #24]
90008c48:	f012 0202 	ands.w	r2, r2, #2
90008c4c:	f47f af60 	bne.w	90008b10 <I2C_WaitOnTXISFlagUntilTimeout+0xc>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008c50:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008c54:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008c56:	430b      	orrs	r3, r1
90008c58:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008c5c:	f888 1041 	strb.w	r1, [r8, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008c60:	f888 2042 	strb.w	r2, [r8, #66]	@ 0x42
          return HAL_ERROR;
90008c64:	e7a0      	b.n	90008ba8 <I2C_WaitOnTXISFlagUntilTimeout+0xa4>
  return HAL_OK;
90008c66:	2000      	movs	r0, #0
}
90008c68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90008c6c:	fe00e800 	.word	0xfe00e800

90008c70 <I2C_WaitOnFlagUntilTimeout>:
{
90008c70:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008c74:	461c      	mov	r4, r3
90008c76:	4683      	mov	fp, r0
90008c78:	460e      	mov	r6, r1
90008c7a:	4615      	mov	r5, r2
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008c7c:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008c7e:	f04f 0810 	mov.w	r8, #16
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008c82:	699a      	ldr	r2, [r3, #24]
90008c84:	ea36 0202 	bics.w	r2, r6, r2
90008c88:	bf0c      	ite	eq
90008c8a:	2201      	moveq	r2, #1
90008c8c:	2200      	movne	r2, #0
90008c8e:	42aa      	cmp	r2, r5
90008c90:	f040 80af 	bne.w	90008df2 <I2C_WaitOnFlagUntilTimeout+0x182>
  uint32_t itflag   = hi2c->Instance->ISR;
90008c94:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008c96:	f012 0c10 	ands.w	ip, r2, #16
90008c9a:	d07d      	beq.n	90008d98 <I2C_WaitOnFlagUntilTimeout+0x128>
  uint32_t error_code = 0;
90008c9c:	f04f 0900 	mov.w	r9, #0
  uint32_t tickstart = Tickstart;
90008ca0:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008ca4:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90008ca8:	464f      	mov	r7, r9
90008caa:	1c60      	adds	r0, r4, #1
90008cac:	d001      	beq.n	90008cb2 <I2C_WaitOnFlagUntilTimeout+0x42>
90008cae:	e041      	b.n	90008d34 <I2C_WaitOnFlagUntilTimeout+0xc4>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008cb0:	b92f      	cbnz	r7, 90008cbe <I2C_WaitOnFlagUntilTimeout+0x4e>
90008cb2:	699a      	ldr	r2, [r3, #24]
90008cb4:	0691      	lsls	r1, r2, #26
90008cb6:	d5fb      	bpl.n	90008cb0 <I2C_WaitOnFlagUntilTimeout+0x40>
    if (status == HAL_OK)
90008cb8:	b90f      	cbnz	r7, 90008cbe <I2C_WaitOnFlagUntilTimeout+0x4e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008cba:	2220      	movs	r2, #32
90008cbc:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
90008cbe:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
90008cc0:	f049 0c04 	orr.w	ip, r9, #4
    status = HAL_ERROR;
90008cc4:	2101      	movs	r1, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008cc6:	05d7      	lsls	r7, r2, #23
90008cc8:	d56a      	bpl.n	90008da0 <I2C_WaitOnFlagUntilTimeout+0x130>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008cca:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008cce:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008cd0:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008cd4:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008cd6:	d504      	bpl.n	90008ce2 <I2C_WaitOnFlagUntilTimeout+0x72>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008cd8:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008cdc:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008ce0:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008ce2:	0592      	lsls	r2, r2, #22
90008ce4:	d504      	bpl.n	90008cf0 <I2C_WaitOnFlagUntilTimeout+0x80>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008ce6:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008cea:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008cee:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008cf0:	699a      	ldr	r2, [r3, #24]
90008cf2:	0790      	lsls	r0, r2, #30
90008cf4:	d501      	bpl.n	90008cfa <I2C_WaitOnFlagUntilTimeout+0x8a>
    hi2c->Instance->TXDR = 0x00U;
90008cf6:	2200      	movs	r2, #0
90008cf8:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008cfa:	699a      	ldr	r2, [r3, #24]
90008cfc:	07d1      	lsls	r1, r2, #31
90008cfe:	d403      	bmi.n	90008d08 <I2C_WaitOnFlagUntilTimeout+0x98>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008d00:	699a      	ldr	r2, [r3, #24]
90008d02:	f042 0201 	orr.w	r2, r2, #1
90008d06:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008d08:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008d0a:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008d0c:	4c3a      	ldr	r4, [pc, #232]	@ (90008df8 <I2C_WaitOnFlagUntilTimeout+0x188>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008d0e:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008d10:	4022      	ands	r2, r4
90008d12:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008d14:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
90008d18:	ea43 030c 	orr.w	r3, r3, ip
90008d1c:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008d20:	f88b 0041 	strb.w	r0, [fp, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008d24:	f88b 1042 	strb.w	r1, [fp, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90008d28:	2300      	movs	r3, #0
      return HAL_ERROR;
90008d2a:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008d2c:	f88b 3040 	strb.w	r3, [fp, #64]	@ 0x40
}
90008d30:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008d34:	699a      	ldr	r2, [r3, #24]
90008d36:	0692      	lsls	r2, r2, #26
90008d38:	d4be      	bmi.n	90008cb8 <I2C_WaitOnFlagUntilTimeout+0x48>
90008d3a:	2f00      	cmp	r7, #0
90008d3c:	d1bf      	bne.n	90008cbe <I2C_WaitOnFlagUntilTimeout+0x4e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008d3e:	f7ff f9a1 	bl	90008084 <HAL_GetTick>
90008d42:	eba0 000a 	sub.w	r0, r0, sl
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008d46:	f8db 3000 	ldr.w	r3, [fp]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008d4a:	4284      	cmp	r4, r0
90008d4c:	d301      	bcc.n	90008d52 <I2C_WaitOnFlagUntilTimeout+0xe2>
90008d4e:	2c00      	cmp	r4, #0
90008d50:	d1f0      	bne.n	90008d34 <I2C_WaitOnFlagUntilTimeout+0xc4>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008d52:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
90008d54:	f89b 2042 	ldrb.w	r2, [fp, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008d58:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
90008d5a:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008d5c:	0400      	lsls	r0, r0, #16
90008d5e:	d50c      	bpl.n	90008d7a <I2C_WaitOnFlagUntilTimeout+0x10a>
              (tmp1 != I2C_CR2_STOP) && \
90008d60:	0449      	lsls	r1, r1, #17
90008d62:	d40a      	bmi.n	90008d7a <I2C_WaitOnFlagUntilTimeout+0x10a>
90008d64:	2a20      	cmp	r2, #32
90008d66:	d008      	beq.n	90008d7a <I2C_WaitOnFlagUntilTimeout+0x10a>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008d68:	685a      	ldr	r2, [r3, #4]
90008d6a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008d6e:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008d70:	f7ff f988 	bl	90008084 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008d74:	f8db 3000 	ldr.w	r3, [fp]
            tickstart = HAL_GetTick();
90008d78:	4682      	mov	sl, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008d7a:	699a      	ldr	r2, [r3, #24]
90008d7c:	0692      	lsls	r2, r2, #26
90008d7e:	d494      	bmi.n	90008caa <I2C_WaitOnFlagUntilTimeout+0x3a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008d80:	f7ff f980 	bl	90008084 <HAL_GetTick>
90008d84:	eba0 000a 	sub.w	r0, r0, sl
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008d88:	f8db 3000 	ldr.w	r3, [fp]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008d8c:	2819      	cmp	r0, #25
90008d8e:	d9f4      	bls.n	90008d7a <I2C_WaitOnFlagUntilTimeout+0x10a>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008d90:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
90008d94:	2701      	movs	r7, #1
90008d96:	e788      	b.n	90008caa <I2C_WaitOnFlagUntilTimeout+0x3a>
  itflag = hi2c->Instance->ISR;
90008d98:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
90008d9a:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008d9c:	05d7      	lsls	r7, r2, #23
90008d9e:	d494      	bmi.n	90008cca <I2C_WaitOnFlagUntilTimeout+0x5a>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008da0:	0550      	lsls	r0, r2, #21
90008da2:	d499      	bmi.n	90008cd8 <I2C_WaitOnFlagUntilTimeout+0x68>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008da4:	0597      	lsls	r7, r2, #22
90008da6:	d49e      	bmi.n	90008ce6 <I2C_WaitOnFlagUntilTimeout+0x76>
  if (status != HAL_OK)
90008da8:	2900      	cmp	r1, #0
90008daa:	d1a1      	bne.n	90008cf0 <I2C_WaitOnFlagUntilTimeout+0x80>
    if (Timeout != HAL_MAX_DELAY)
90008dac:	1c62      	adds	r2, r4, #1
90008dae:	f43f af68 	beq.w	90008c82 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008db2:	f7ff f967 	bl	90008084 <HAL_GetTick>
90008db6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90008db8:	1ac3      	subs	r3, r0, r3
90008dba:	42a3      	cmp	r3, r4
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008dbc:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008dc0:	d802      	bhi.n	90008dc8 <I2C_WaitOnFlagUntilTimeout+0x158>
90008dc2:	2c00      	cmp	r4, #0
90008dc4:	f47f af5d 	bne.w	90008c82 <I2C_WaitOnFlagUntilTimeout+0x12>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008dc8:	699a      	ldr	r2, [r3, #24]
90008dca:	ea36 0202 	bics.w	r2, r6, r2
90008dce:	bf0c      	ite	eq
90008dd0:	2201      	moveq	r2, #1
90008dd2:	2200      	movne	r2, #0
90008dd4:	42aa      	cmp	r2, r5
90008dd6:	f47f af54 	bne.w	90008c82 <I2C_WaitOnFlagUntilTimeout+0x12>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008dda:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008dde:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008de0:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008de2:	430b      	orrs	r3, r1
90008de4:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008de8:	f88b 1041 	strb.w	r1, [fp, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008dec:	f88b 2042 	strb.w	r2, [fp, #66]	@ 0x42
          return HAL_ERROR;
90008df0:	e79a      	b.n	90008d28 <I2C_WaitOnFlagUntilTimeout+0xb8>
  return HAL_OK;
90008df2:	2000      	movs	r0, #0
}
90008df4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008df8:	fe00e800 	.word	0xfe00e800

90008dfc <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008dfc:	6803      	ldr	r3, [r0, #0]
{
90008dfe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008e02:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008e04:	699a      	ldr	r2, [r3, #24]
90008e06:	0694      	lsls	r4, r2, #26
90008e08:	f100 8092 	bmi.w	90008f30 <I2C_WaitOnSTOPFlagUntilTimeout+0x134>
90008e0c:	4605      	mov	r5, r0
90008e0e:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008e10:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90008e14:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008e16:	f012 0c10 	ands.w	ip, r2, #16
90008e1a:	f000 808c 	beq.w	90008f36 <I2C_WaitOnSTOPFlagUntilTimeout+0x13a>
  uint32_t error_code = 0;
90008e1e:	2400      	movs	r4, #0
  uint32_t tickstart = Tickstart;
90008e20:	46b9      	mov	r9, r7
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008e22:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90008e26:	46a2      	mov	sl, r4
90008e28:	1c70      	adds	r0, r6, #1
90008e2a:	d003      	beq.n	90008e34 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
90008e2c:	e043      	b.n	90008eb6 <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008e2e:	f1ba 0f00 	cmp.w	sl, #0
90008e32:	d107      	bne.n	90008e44 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
90008e34:	699a      	ldr	r2, [r3, #24]
90008e36:	0691      	lsls	r1, r2, #26
90008e38:	d5f9      	bpl.n	90008e2e <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
    if (status == HAL_OK)
90008e3a:	f1ba 0f00 	cmp.w	sl, #0
90008e3e:	d101      	bne.n	90008e44 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008e40:	2220      	movs	r2, #32
90008e42:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90008e44:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90008e48:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90008e4a:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008e4c:	05d0      	lsls	r0, r2, #23
90008e4e:	d55a      	bpl.n	90008f06 <I2C_WaitOnSTOPFlagUntilTimeout+0x10a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008e50:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008e54:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008e56:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008e5a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008e5c:	d504      	bpl.n	90008e68 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008e5e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008e62:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008e66:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008e68:	0596      	lsls	r6, r2, #22
90008e6a:	d504      	bpl.n	90008e76 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008e6c:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008e70:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008e74:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008e76:	699a      	ldr	r2, [r3, #24]
90008e78:	0790      	lsls	r0, r2, #30
90008e7a:	d501      	bpl.n	90008e80 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
90008e7c:	2200      	movs	r2, #0
90008e7e:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008e80:	699a      	ldr	r2, [r3, #24]
90008e82:	07d1      	lsls	r1, r2, #31
90008e84:	d403      	bmi.n	90008e8e <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008e86:	699a      	ldr	r2, [r3, #24]
90008e88:	f042 0201 	orr.w	r2, r2, #1
90008e8c:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008e8e:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008e90:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008e92:	4c33      	ldr	r4, [pc, #204]	@ (90008f60 <I2C_WaitOnSTOPFlagUntilTimeout+0x164>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008e94:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008e96:	4022      	ands	r2, r4
90008e98:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008e9a:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90008e9c:	ea43 030c 	orr.w	r3, r3, ip
90008ea0:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008ea2:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008ea6:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
90008eaa:	2300      	movs	r3, #0
      return HAL_ERROR;
90008eac:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
90008eae:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90008eb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008eb6:	699a      	ldr	r2, [r3, #24]
90008eb8:	0692      	lsls	r2, r2, #26
90008eba:	d4be      	bmi.n	90008e3a <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
90008ebc:	f1ba 0f00 	cmp.w	sl, #0
90008ec0:	d1c0      	bne.n	90008e44 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008ec2:	f7ff f8df 	bl	90008084 <HAL_GetTick>
90008ec6:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008eca:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008ecc:	4286      	cmp	r6, r0
90008ece:	d301      	bcc.n	90008ed4 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
90008ed0:	2e00      	cmp	r6, #0
90008ed2:	d1f0      	bne.n	90008eb6 <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008ed4:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008ed6:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008eda:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008edc:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008ede:	0409      	lsls	r1, r1, #16
90008ee0:	d503      	bpl.n	90008eea <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              (tmp1 != I2C_CR2_STOP) && \
90008ee2:	0441      	lsls	r1, r0, #17
90008ee4:	d401      	bmi.n	90008eea <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90008ee6:	2a20      	cmp	r2, #32
90008ee8:	d130      	bne.n	90008f4c <I2C_WaitOnSTOPFlagUntilTimeout+0x150>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008eea:	699a      	ldr	r2, [r3, #24]
90008eec:	0692      	lsls	r2, r2, #26
90008eee:	d49b      	bmi.n	90008e28 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008ef0:	f7ff f8c8 	bl	90008084 <HAL_GetTick>
90008ef4:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008ef8:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008efa:	2819      	cmp	r0, #25
90008efc:	d9f5      	bls.n	90008eea <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008efe:	2420      	movs	r4, #32
              status = HAL_ERROR;
90008f00:	f04f 0a01 	mov.w	sl, #1
90008f04:	e790      	b.n	90008e28 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008f06:	0550      	lsls	r0, r2, #21
90008f08:	d4a9      	bmi.n	90008e5e <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008f0a:	0594      	lsls	r4, r2, #22
90008f0c:	d4ae      	bmi.n	90008e6c <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
90008f0e:	2900      	cmp	r1, #0
90008f10:	d1b1      	bne.n	90008e76 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008f12:	f7ff f8b7 	bl	90008084 <HAL_GetTick>
90008f16:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008f18:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008f1a:	42b0      	cmp	r0, r6
90008f1c:	d800      	bhi.n	90008f20 <I2C_WaitOnSTOPFlagUntilTimeout+0x124>
90008f1e:	b91e      	cbnz	r6, 90008f28 <I2C_WaitOnSTOPFlagUntilTimeout+0x12c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008f20:	699a      	ldr	r2, [r3, #24]
90008f22:	f012 0220 	ands.w	r2, r2, #32
90008f26:	d008      	beq.n	90008f3a <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008f28:	699a      	ldr	r2, [r3, #24]
90008f2a:	0692      	lsls	r2, r2, #26
90008f2c:	f57f af72 	bpl.w	90008e14 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
90008f30:	2000      	movs	r0, #0
}
90008f32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90008f36:	4661      	mov	r1, ip
90008f38:	e787      	b.n	90008e4a <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008f3a:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90008f3c:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008f3e:	430b      	orrs	r3, r1
90008f40:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90008f42:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
90008f46:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
90008f4a:	e7ae      	b.n	90008eaa <I2C_WaitOnSTOPFlagUntilTimeout+0xae>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008f4c:	685a      	ldr	r2, [r3, #4]
90008f4e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008f52:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008f54:	f7ff f896 	bl	90008084 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008f58:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90008f5a:	4681      	mov	r9, r0
90008f5c:	e7c5      	b.n	90008eea <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90008f5e:	bf00      	nop
90008f60:	fe00e800 	.word	0xfe00e800

90008f64 <HAL_I2C_MspInit>:
}
90008f64:	4770      	bx	lr
90008f66:	bf00      	nop

90008f68 <HAL_I2C_Init>:
  if (hi2c == NULL)
90008f68:	2800      	cmp	r0, #0
90008f6a:	d053      	beq.n	90009014 <HAL_I2C_Init+0xac>
{
90008f6c:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
90008f6e:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
90008f72:	4604      	mov	r4, r0
90008f74:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008f78:	2b00      	cmp	r3, #0
90008f7a:	d046      	beq.n	9000900a <HAL_I2C_Init+0xa2>
  __HAL_I2C_DISABLE(hi2c);
90008f7c:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008f7e:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008f80:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008f82:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
90008f86:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008f88:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008f8c:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90008f8e:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008f92:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90008f94:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008f96:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008f98:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008f9a:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008f9c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
90008fa0:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008fa2:	d009      	beq.n	90008fb8 <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008fa4:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008fa8:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008faa:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008fac:	d107      	bne.n	90008fbe <HAL_I2C_Init+0x56>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008fae:	685a      	ldr	r2, [r3, #4]
90008fb0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
90008fb4:	605a      	str	r2, [r3, #4]
90008fb6:	e006      	b.n	90008fc6 <HAL_I2C_Init+0x5e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008fb8:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
90008fbc:	6099      	str	r1, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008fbe:	685a      	ldr	r2, [r3, #4]
90008fc0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90008fc4:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008fc6:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
90008fc8:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008fcc:	4912      	ldr	r1, [pc, #72]	@ (90009018 <HAL_I2C_Init+0xb0>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008fce:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008fd0:	4301      	orrs	r1, r0
90008fd2:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90008fd4:	68d9      	ldr	r1, [r3, #12]
90008fd6:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
90008fda:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
90008fdc:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008fe0:	4302      	orrs	r2, r0
90008fe2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008fe6:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008fea:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008fec:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008fee:	4301      	orrs	r1, r0
  return HAL_OK;
90008ff0:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008ff2:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90008ff4:	6819      	ldr	r1, [r3, #0]
90008ff6:	f041 0101 	orr.w	r1, r1, #1
90008ffa:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008ffc:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90008ffe:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90009002:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90009004:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
90009008:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
9000900a:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
9000900e:	f7ff ffa9 	bl	90008f64 <HAL_I2C_MspInit>
90009012:	e7b3      	b.n	90008f7c <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90009014:	2001      	movs	r0, #1
}
90009016:	4770      	bx	lr
90009018:	02008000 	.word	0x02008000

9000901c <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
9000901c:	4770      	bx	lr
9000901e:	bf00      	nop

90009020 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
90009020:	b1b0      	cbz	r0, 90009050 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
90009022:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009024:	2324      	movs	r3, #36	@ 0x24
{
90009026:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
90009028:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
9000902c:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
9000902e:	6813      	ldr	r3, [r2, #0]
90009030:	f023 0301 	bic.w	r3, r3, #1
90009034:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
90009036:	f7ff fff1 	bl	9000901c <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000903a:	2300      	movs	r3, #0
9000903c:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
9000903e:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90009040:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
90009044:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
90009048:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000904a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
9000904e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90009050:	2001      	movs	r0, #1
}
90009052:	4770      	bx	lr

90009054 <HAL_I2C_Mem_Write>:
{
90009054:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009058:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
9000905a:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
9000905e:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
90009060:	2820      	cmp	r0, #32
{
90009062:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
90009066:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
90009068:	d11e      	bne.n	900090a8 <HAL_I2C_Mem_Write+0x54>
    if ((pData == NULL) || (Size == 0U))
9000906a:	4698      	mov	r8, r3
9000906c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9000906e:	b1bb      	cbz	r3, 900090a0 <HAL_I2C_Mem_Write+0x4c>
90009070:	f1ba 0f00 	cmp.w	sl, #0
90009074:	d014      	beq.n	900090a0 <HAL_I2C_Mem_Write+0x4c>
    __HAL_LOCK(hi2c);
90009076:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
9000907a:	2b01      	cmp	r3, #1
9000907c:	d014      	beq.n	900090a8 <HAL_I2C_Mem_Write+0x54>
9000907e:	2301      	movs	r3, #1
90009080:	460d      	mov	r5, r1
90009082:	4691      	mov	r9, r2
90009084:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
90009088:	f7fe fffc 	bl	90008084 <HAL_GetTick>
9000908c:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
9000908e:	4620      	mov	r0, r4
90009090:	4631      	mov	r1, r6
90009092:	f7ff fc97 	bl	900089c4 <I2C_WaitOnFlagUntilTimeout.constprop.0>
90009096:	b158      	cbz	r0, 900090b0 <HAL_I2C_Mem_Write+0x5c>
      return  HAL_ERROR;
90009098:	2001      	movs	r0, #1
}
9000909a:	b003      	add	sp, #12
9000909c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900090a0:	f44f 7300 	mov.w	r3, #512	@ 0x200
900090a4:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
900090a6:	e7f7      	b.n	90009098 <HAL_I2C_Mem_Write+0x44>
    __HAL_LOCK(hi2c);
900090a8:	2002      	movs	r0, #2
}
900090aa:	b003      	add	sp, #12
900090ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
900090b0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
900090b2:	f3c5 0b09 	ubfx	fp, r5, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
900090b6:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr  = pData;
900090b8:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900090ba:	2321      	movs	r3, #33	@ 0x21
  MODIFY_REG(hi2c->Instance->CR2, \
900090bc:	4a5f      	ldr	r2, [pc, #380]	@ (9000923c <HAL_I2C_Mem_Write+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900090be:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900090c2:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
900090c4:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900090c6:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900090ca:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900090cc:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
900090ce:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900090d2:	684b      	ldr	r3, [r1, #4]
900090d4:	4013      	ands	r3, r2
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900090d6:	fa5f f288 	uxtb.w	r2, r8
  MODIFY_REG(hi2c->Instance->CR2, \
900090da:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900090de:	4a58      	ldr	r2, [pc, #352]	@ (90009240 <HAL_I2C_Mem_Write+0x1ec>)
900090e0:	ea43 030b 	orr.w	r3, r3, fp
900090e4:	431a      	orrs	r2, r3
900090e6:	604a      	str	r2, [r1, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900090e8:	4632      	mov	r2, r6
900090ea:	4639      	mov	r1, r7
900090ec:	f7ff fd0a 	bl	90008b04 <I2C_WaitOnTXISFlagUntilTimeout>
900090f0:	2800      	cmp	r0, #0
900090f2:	d176      	bne.n	900091e2 <HAL_I2C_Mem_Write+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900090f4:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900090f8:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900090fa:	d169      	bne.n	900091d0 <HAL_I2C_Mem_Write+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900090fc:	fa5f f289 	uxtb.w	r2, r9
90009100:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
90009102:	463b      	mov	r3, r7
90009104:	2200      	movs	r2, #0
90009106:	2180      	movs	r1, #128	@ 0x80
90009108:	4620      	mov	r0, r4
9000910a:	9600      	str	r6, [sp, #0]
9000910c:	f7ff fdb0 	bl	90008c70 <I2C_WaitOnFlagUntilTimeout>
90009110:	2800      	cmp	r0, #0
90009112:	d166      	bne.n	900091e2 <HAL_I2C_Mem_Write+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009114:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009116:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009118:	b29b      	uxth	r3, r3
9000911a:	2bff      	cmp	r3, #255	@ 0xff
9000911c:	d965      	bls.n	900091ea <HAL_I2C_Mem_Write+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
9000911e:	6853      	ldr	r3, [r2, #4]
90009120:	4948      	ldr	r1, [pc, #288]	@ (90009244 <HAL_I2C_Mem_Write+0x1f0>)
90009122:	400b      	ands	r3, r1
90009124:	4948      	ldr	r1, [pc, #288]	@ (90009248 <HAL_I2C_Mem_Write+0x1f4>)
90009126:	ea43 030b 	orr.w	r3, r3, fp
9000912a:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000912c:	23ff      	movs	r3, #255	@ 0xff
9000912e:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009130:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
90009132:	e003      	b.n	9000913c <HAL_I2C_Mem_Write+0xe8>
    } while (hi2c->XferCount > 0U);
90009134:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90009136:	b29b      	uxth	r3, r3
90009138:	2b00      	cmp	r3, #0
9000913a:	d069      	beq.n	90009210 <HAL_I2C_Mem_Write+0x1bc>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000913c:	4632      	mov	r2, r6
9000913e:	4639      	mov	r1, r7
90009140:	4620      	mov	r0, r4
90009142:	f7ff fcdf 	bl	90008b04 <I2C_WaitOnTXISFlagUntilTimeout>
90009146:	4602      	mov	r2, r0
90009148:	2800      	cmp	r0, #0
9000914a:	d1a5      	bne.n	90009098 <HAL_I2C_Mem_Write+0x44>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000914c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000914e:	6825      	ldr	r5, [r4, #0]
90009150:	f810 1b01 	ldrb.w	r1, [r0], #1
      hi2c->XferSize--;
90009154:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90009156:	62a9      	str	r1, [r5, #40]	@ 0x28
      hi2c->XferCount--;
90009158:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
9000915c:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
9000915e:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90009160:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
90009164:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90009166:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
9000916a:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
9000916c:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009170:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
90009172:	b289      	uxth	r1, r1
90009174:	2b00      	cmp	r3, #0
90009176:	d1dd      	bne.n	90009134 <HAL_I2C_Mem_Write+0xe0>
90009178:	2900      	cmp	r1, #0
9000917a:	d0db      	beq.n	90009134 <HAL_I2C_Mem_Write+0xe0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
9000917c:	463b      	mov	r3, r7
9000917e:	2180      	movs	r1, #128	@ 0x80
90009180:	4620      	mov	r0, r4
90009182:	9600      	str	r6, [sp, #0]
90009184:	f7ff fd74 	bl	90008c70 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009188:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
9000918c:	2800      	cmp	r0, #0
9000918e:	d183      	bne.n	90009098 <HAL_I2C_Mem_Write+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009190:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009192:	f8df e0b0 	ldr.w	lr, [pc, #176]	@ 90009244 <HAL_I2C_Mem_Write+0x1f0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009196:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009198:	492b      	ldr	r1, [pc, #172]	@ (90009248 <HAL_I2C_Mem_Write+0x1f4>)
9000919a:	4670      	mov	r0, lr
9000919c:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000919e:	4563      	cmp	r3, ip
900091a0:	d909      	bls.n	900091b6 <HAL_I2C_Mem_Write+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
900091a2:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
900091a4:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900091a8:	ea03 030e 	and.w	r3, r3, lr
900091ac:	ea43 030b 	orr.w	r3, r3, fp
900091b0:	4319      	orrs	r1, r3
900091b2:	6051      	str	r1, [r2, #4]
}
900091b4:	e7be      	b.n	90009134 <HAL_I2C_Mem_Write+0xe0>
          hi2c->XferSize = hi2c->XferCount;
900091b6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900091b8:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
900091ba:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900091bc:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
900091be:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900091c0:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900091c2:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
900091c6:	430b      	orrs	r3, r1
900091c8:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
900091cc:	6053      	str	r3, [r2, #4]
}
900091ce:	e7b1      	b.n	90009134 <HAL_I2C_Mem_Write+0xe0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900091d0:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900091d4:	4639      	mov	r1, r7
900091d6:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900091d8:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900091da:	4632      	mov	r2, r6
900091dc:	f7ff fc92 	bl	90008b04 <I2C_WaitOnTXISFlagUntilTimeout>
900091e0:	b188      	cbz	r0, 90009206 <HAL_I2C_Mem_Write+0x1b2>
      __HAL_UNLOCK(hi2c);
900091e2:	2300      	movs	r3, #0
900091e4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
900091e8:	e756      	b.n	90009098 <HAL_I2C_Mem_Write+0x44>
      hi2c->XferSize = hi2c->XferCount;
900091ea:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900091ec:	4815      	ldr	r0, [pc, #84]	@ (90009244 <HAL_I2C_Mem_Write+0x1f0>)
      hi2c->XferSize = hi2c->XferCount;
900091ee:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900091f0:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
900091f2:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900091f4:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900091f6:	4001      	ands	r1, r0
900091f8:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
900091fc:	430b      	orrs	r3, r1
900091fe:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90009202:	6053      	str	r3, [r2, #4]
}
90009204:	e79a      	b.n	9000913c <HAL_I2C_Mem_Write+0xe8>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009206:	fa5f f289 	uxtb.w	r2, r9
9000920a:	6823      	ldr	r3, [r4, #0]
9000920c:	629a      	str	r2, [r3, #40]	@ 0x28
9000920e:	e778      	b.n	90009102 <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90009210:	4632      	mov	r2, r6
90009212:	4639      	mov	r1, r7
90009214:	4620      	mov	r0, r4
90009216:	f7ff fdf1 	bl	90008dfc <I2C_WaitOnSTOPFlagUntilTimeout>
9000921a:	2800      	cmp	r0, #0
9000921c:	f47f af3c 	bne.w	90009098 <HAL_I2C_Mem_Write+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009220:	6823      	ldr	r3, [r4, #0]
90009222:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90009224:	4d09      	ldr	r5, [pc, #36]	@ (9000924c <HAL_I2C_Mem_Write+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009226:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90009228:	685a      	ldr	r2, [r3, #4]
9000922a:	402a      	ands	r2, r5
9000922c:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000922e:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009232:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90009236:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
9000923a:	e72e      	b.n	9000909a <HAL_I2C_Mem_Write+0x46>
9000923c:	fc009800 	.word	0xfc009800
90009240:	01002000 	.word	0x01002000
90009244:	fc009c00 	.word	0xfc009c00
90009248:	01ff0000 	.word	0x01ff0000
9000924c:	fe00e800 	.word	0xfe00e800

90009250 <HAL_I2C_Mem_Read>:
{
90009250:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90009254:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
90009256:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
9000925a:	b082      	sub	sp, #8
  if (hi2c->State == HAL_I2C_STATE_READY)
9000925c:	2820      	cmp	r0, #32
{
9000925e:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90009262:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
90009264:	d11e      	bne.n	900092a4 <HAL_I2C_Mem_Read+0x54>
    if ((pData == NULL) || (Size == 0U))
90009266:	4698      	mov	r8, r3
90009268:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9000926a:	b1bb      	cbz	r3, 9000929c <HAL_I2C_Mem_Read+0x4c>
9000926c:	f1ba 0f00 	cmp.w	sl, #0
90009270:	d014      	beq.n	9000929c <HAL_I2C_Mem_Read+0x4c>
    __HAL_LOCK(hi2c);
90009272:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
90009276:	2b01      	cmp	r3, #1
90009278:	d014      	beq.n	900092a4 <HAL_I2C_Mem_Read+0x54>
9000927a:	2301      	movs	r3, #1
9000927c:	460d      	mov	r5, r1
9000927e:	4691      	mov	r9, r2
90009280:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
90009284:	f7fe fefe 	bl	90008084 <HAL_GetTick>
90009288:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
9000928a:	4620      	mov	r0, r4
9000928c:	4631      	mov	r1, r6
9000928e:	f7ff fb99 	bl	900089c4 <I2C_WaitOnFlagUntilTimeout.constprop.0>
90009292:	b158      	cbz	r0, 900092ac <HAL_I2C_Mem_Read+0x5c>
      return  HAL_ERROR;
90009294:	2001      	movs	r0, #1
}
90009296:	b002      	add	sp, #8
90009298:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000929c:	f44f 7300 	mov.w	r3, #512	@ 0x200
900092a0:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
900092a2:	e7f7      	b.n	90009294 <HAL_I2C_Mem_Read+0x44>
    __HAL_LOCK(hi2c);
900092a4:	2002      	movs	r0, #2
}
900092a6:	b002      	add	sp, #8
900092a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
900092ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
900092ae:	f3c5 0509 	ubfx	r5, r5, #0, #10
  MODIFY_REG(hi2c->Instance->CR2, \
900092b2:	6822      	ldr	r2, [r4, #0]
    hi2c->pBuffPtr  = pData;
900092b4:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
900092b6:	2322      	movs	r3, #34	@ 0x22
  MODIFY_REG(hi2c->Instance->CR2, \
900092b8:	495f      	ldr	r1, [pc, #380]	@ (90009438 <HAL_I2C_Mem_Read+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
900092ba:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900092be:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
900092c0:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900092c2:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900092c6:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900092c8:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
900092ca:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900092ce:	6853      	ldr	r3, [r2, #4]
900092d0:	400b      	ands	r3, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900092d2:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
900092d6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900092da:	4639      	mov	r1, r7
  MODIFY_REG(hi2c->Instance->CR2, \
900092dc:	432b      	orrs	r3, r5
900092de:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
900092e2:	6053      	str	r3, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900092e4:	4632      	mov	r2, r6
900092e6:	f7ff fc0d 	bl	90008b04 <I2C_WaitOnTXISFlagUntilTimeout>
900092ea:	2800      	cmp	r0, #0
900092ec:	d177      	bne.n	900093de <HAL_I2C_Mem_Read+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900092ee:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900092f2:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900092f4:	d16a      	bne.n	900093cc <HAL_I2C_Mem_Read+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900092f6:	fa5f f289 	uxtb.w	r2, r9
900092fa:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
900092fc:	463b      	mov	r3, r7
900092fe:	2200      	movs	r2, #0
90009300:	2140      	movs	r1, #64	@ 0x40
90009302:	4620      	mov	r0, r4
90009304:	9600      	str	r6, [sp, #0]
90009306:	f7ff fcb3 	bl	90008c70 <I2C_WaitOnFlagUntilTimeout>
9000930a:	2800      	cmp	r0, #0
9000930c:	d167      	bne.n	900093de <HAL_I2C_Mem_Read+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000930e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009310:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009312:	b29b      	uxth	r3, r3
90009314:	2bff      	cmp	r3, #255	@ 0xff
90009316:	d966      	bls.n	900093e6 <HAL_I2C_Mem_Read+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
90009318:	6853      	ldr	r3, [r2, #4]
9000931a:	4947      	ldr	r1, [pc, #284]	@ (90009438 <HAL_I2C_Mem_Read+0x1e8>)
9000931c:	400b      	ands	r3, r1
9000931e:	4947      	ldr	r1, [pc, #284]	@ (9000943c <HAL_I2C_Mem_Read+0x1ec>)
90009320:	432b      	orrs	r3, r5
90009322:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90009324:	23ff      	movs	r3, #255	@ 0xff
90009326:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009328:	6051      	str	r1, [r2, #4]
}
9000932a:	e003      	b.n	90009334 <HAL_I2C_Mem_Read+0xe4>
    } while (hi2c->XferCount > 0U);
9000932c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
9000932e:	b29b      	uxth	r3, r3
90009330:	2b00      	cmp	r3, #0
90009332:	d06b      	beq.n	9000940c <HAL_I2C_Mem_Read+0x1bc>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
90009334:	463b      	mov	r3, r7
90009336:	2200      	movs	r2, #0
90009338:	2104      	movs	r1, #4
9000933a:	4620      	mov	r0, r4
9000933c:	9600      	str	r6, [sp, #0]
9000933e:	f7ff fc97 	bl	90008c70 <I2C_WaitOnFlagUntilTimeout>
90009342:	2800      	cmp	r0, #0
90009344:	d1a6      	bne.n	90009294 <HAL_I2C_Mem_Read+0x44>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90009346:	6821      	ldr	r1, [r4, #0]
90009348:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000934a:	6a49      	ldr	r1, [r1, #36]	@ 0x24
9000934c:	7019      	strb	r1, [r3, #0]
      hi2c->XferCount--;
9000934e:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90009352:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
90009354:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90009356:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
9000935a:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
9000935c:	3101      	adds	r1, #1
      hi2c->XferCount--;
9000935e:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
90009362:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
90009364:	6261      	str	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90009366:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000936a:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
9000936c:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000936e:	b289      	uxth	r1, r1
90009370:	2b00      	cmp	r3, #0
90009372:	d1db      	bne.n	9000932c <HAL_I2C_Mem_Read+0xdc>
90009374:	2900      	cmp	r1, #0
90009376:	d0d9      	beq.n	9000932c <HAL_I2C_Mem_Read+0xdc>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90009378:	4602      	mov	r2, r0
9000937a:	463b      	mov	r3, r7
9000937c:	2180      	movs	r1, #128	@ 0x80
9000937e:	4620      	mov	r0, r4
90009380:	9600      	str	r6, [sp, #0]
90009382:	f7ff fc75 	bl	90008c70 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009386:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
9000938a:	2800      	cmp	r0, #0
9000938c:	d182      	bne.n	90009294 <HAL_I2C_Mem_Read+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000938e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009390:	f8df e0b8 	ldr.w	lr, [pc, #184]	@ 9000944c <HAL_I2C_Mem_Read+0x1fc>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009394:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009396:	492a      	ldr	r1, [pc, #168]	@ (90009440 <HAL_I2C_Mem_Read+0x1f0>)
90009398:	4670      	mov	r0, lr
9000939a:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000939c:	4563      	cmp	r3, ip
9000939e:	d908      	bls.n	900093b2 <HAL_I2C_Mem_Read+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
900093a0:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
900093a2:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900093a6:	ea03 030e 	and.w	r3, r3, lr
900093aa:	432b      	orrs	r3, r5
900093ac:	4319      	orrs	r1, r3
900093ae:	6051      	str	r1, [r2, #4]
}
900093b0:	e7bc      	b.n	9000932c <HAL_I2C_Mem_Read+0xdc>
          hi2c->XferSize = hi2c->XferCount;
900093b2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900093b4:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
900093b6:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900093b8:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
900093ba:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900093bc:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900093be:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
900093c2:	430b      	orrs	r3, r1
900093c4:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
900093c8:	6053      	str	r3, [r2, #4]
}
900093ca:	e7af      	b.n	9000932c <HAL_I2C_Mem_Read+0xdc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900093cc:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900093d0:	4639      	mov	r1, r7
900093d2:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900093d4:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900093d6:	4632      	mov	r2, r6
900093d8:	f7ff fb94 	bl	90008b04 <I2C_WaitOnTXISFlagUntilTimeout>
900093dc:	b188      	cbz	r0, 90009402 <HAL_I2C_Mem_Read+0x1b2>
      __HAL_UNLOCK(hi2c);
900093de:	2300      	movs	r3, #0
900093e0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
900093e4:	e756      	b.n	90009294 <HAL_I2C_Mem_Read+0x44>
      hi2c->XferSize = hi2c->XferCount;
900093e6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900093e8:	4813      	ldr	r0, [pc, #76]	@ (90009438 <HAL_I2C_Mem_Read+0x1e8>)
      hi2c->XferSize = hi2c->XferCount;
900093ea:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900093ec:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
900093ee:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900093f0:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900093f2:	4001      	ands	r1, r0
900093f4:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
900093f8:	430b      	orrs	r3, r1
900093fa:	4912      	ldr	r1, [pc, #72]	@ (90009444 <HAL_I2C_Mem_Read+0x1f4>)
900093fc:	4319      	orrs	r1, r3
900093fe:	6051      	str	r1, [r2, #4]
}
90009400:	e798      	b.n	90009334 <HAL_I2C_Mem_Read+0xe4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009402:	fa5f f289 	uxtb.w	r2, r9
90009406:	6823      	ldr	r3, [r4, #0]
90009408:	629a      	str	r2, [r3, #40]	@ 0x28
9000940a:	e777      	b.n	900092fc <HAL_I2C_Mem_Read+0xac>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000940c:	4632      	mov	r2, r6
9000940e:	4639      	mov	r1, r7
90009410:	4620      	mov	r0, r4
90009412:	f7ff fcf3 	bl	90008dfc <I2C_WaitOnSTOPFlagUntilTimeout>
90009416:	2800      	cmp	r0, #0
90009418:	f47f af3c 	bne.w	90009294 <HAL_I2C_Mem_Read+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000941c:	6823      	ldr	r3, [r4, #0]
9000941e:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90009420:	4d09      	ldr	r5, [pc, #36]	@ (90009448 <HAL_I2C_Mem_Read+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009422:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90009424:	685a      	ldr	r2, [r3, #4]
90009426:	402a      	ands	r2, r5
90009428:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000942a:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
9000942e:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90009432:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90009436:	e72e      	b.n	90009296 <HAL_I2C_Mem_Read+0x46>
90009438:	fc009800 	.word	0xfc009800
9000943c:	01ff2400 	.word	0x01ff2400
90009440:	01ff0000 	.word	0x01ff0000
90009444:	02002400 	.word	0x02002400
90009448:	fe00e800 	.word	0xfe00e800
9000944c:	fc009c00 	.word	0xfc009c00

90009450 <HAL_I2C_GetState>:
  return hi2c->State;
90009450:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
90009454:	4770      	bx	lr
90009456:	bf00      	nop

90009458 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90009458:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
9000945a:	4770      	bx	lr

9000945c <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000945c:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90009460:	2a20      	cmp	r2, #32
90009462:	d123      	bne.n	900094ac <HAL_I2CEx_ConfigAnalogFilter+0x50>
90009464:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009468:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
9000946c:	4603      	mov	r3, r0
9000946e:	2a01      	cmp	r2, #1
90009470:	d01c      	beq.n	900094ac <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009472:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90009474:	2024      	movs	r0, #36	@ 0x24
{
90009476:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
90009478:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000947c:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
90009480:	6810      	ldr	r0, [r2, #0]
90009482:	f020 0001 	bic.w	r0, r0, #1
90009486:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90009488:	6810      	ldr	r0, [r2, #0]
9000948a:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
9000948e:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90009490:	6810      	ldr	r0, [r2, #0]
90009492:	4301      	orrs	r1, r0

    return HAL_OK;
90009494:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90009496:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009498:	6811      	ldr	r1, [r2, #0]
9000949a:	f041 0101 	orr.w	r1, r1, #1
9000949e:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
900094a0:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900094a4:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
900094a8:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
900094ac:	2002      	movs	r0, #2
}
900094ae:	4770      	bx	lr

900094b0 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
900094b0:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
900094b4:	2a20      	cmp	r2, #32
900094b6:	d122      	bne.n	900094fe <HAL_I2CEx_ConfigDigitalFilter+0x4e>
900094b8:	4603      	mov	r3, r0
{
900094ba:	b500      	push	{lr}
900094bc:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
900094c0:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
900094c4:	2a01      	cmp	r2, #1
900094c6:	d01c      	beq.n	90009502 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
900094c8:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
900094ca:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
900094cc:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
900094d0:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
900094d4:	6810      	ldr	r0, [r2, #0]
900094d6:	f020 0001 	bic.w	r0, r0, #1
900094da:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
900094dc:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
900094de:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
900094e2:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
900094e6:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
900094e8:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
900094ea:	6811      	ldr	r1, [r2, #0]
900094ec:	f041 0101 	orr.w	r1, r1, #1
900094f0:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
900094f2:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900094f6:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
900094fa:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
900094fe:	2002      	movs	r0, #2
}
90009500:	4770      	bx	lr
    __HAL_LOCK(hi2c);
90009502:	2002      	movs	r0, #2
}
90009504:	f85d fb04 	ldr.w	pc, [sp], #4

90009508 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90009508:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000950c:	4699      	mov	r9, r3
9000950e:	4680      	mov	r8, r0
90009510:	460d      	mov	r5, r1
90009512:	4614      	mov	r4, r2

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90009514:	7803      	ldrb	r3, [r0, #0]
90009516:	2601      	movs	r6, #1
  p = 0;
90009518:	2700      	movs	r7, #0
9000951a:	e005      	b.n	90009528 <JPEG_Bits_To_SizeCodes+0x20>
    i = (uint32_t)Bits[l];
9000951c:	f818 3f01 	ldrb.w	r3, [r8, #1]!
    if ((p + i) > 256UL)
90009520:	19da      	adds	r2, r3, r7
90009522:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
90009526:	d83a      	bhi.n	9000959e <JPEG_Bits_To_SizeCodes+0x96>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
90009528:	19e8      	adds	r0, r5, r7
9000952a:	461a      	mov	r2, r3
9000952c:	4631      	mov	r1, r6
    while (i != 0UL)
9000952e:	b113      	cbz	r3, 90009536 <JPEG_Bits_To_SizeCodes+0x2e>
      p++;
90009530:	441f      	add	r7, r3
      Huffsize[p] = (uint8_t) l + 1U;
90009532:	f020 fdad 	bl	9002a090 <memset>
  for (l = 0; l < 16UL; l++)
90009536:	2e10      	cmp	r6, #16
    if ((p + i) > 256UL)
90009538:	f106 0601 	add.w	r6, r6, #1
  for (l = 0; l < 16UL; l++)
9000953c:	d1ee      	bne.n	9000951c <JPEG_Bits_To_SizeCodes+0x14>
      i--;
    }
  }
  Huffsize[p] = 0;
9000953e:	2300      	movs	r3, #0
90009540:	55eb      	strb	r3, [r5, r7]
  *LastK = p;
90009542:	f8c9 7000 	str.w	r7, [r9]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90009546:	7829      	ldrb	r1, [r5, #0]
90009548:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
9000954a:	b329      	cbz	r1, 90009598 <JPEG_Bits_To_SizeCodes+0x90>
  code = 0;
9000954c:	4699      	mov	r9, r3
9000954e:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009552:	2701      	movs	r7, #1
  p = 0;
90009554:	461e      	mov	r6, r3
    while (((uint32_t) Huffsize[p]) == si)
90009556:	4291      	cmp	r1, r2
90009558:	d124      	bne.n	900095a4 <JPEG_Bits_To_SizeCodes+0x9c>
9000955a:	eb06 0008 	add.w	r0, r6, r8
9000955e:	eb05 0c06 	add.w	ip, r5, r6
90009562:	464b      	mov	r3, r9
90009564:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
90009568:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
9000956c:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
9000956e:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
90009572:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90009574:	4596      	cmp	lr, r2
90009576:	d0f7      	beq.n	90009568 <JPEG_Bits_To_SizeCodes+0x60>
90009578:	3601      	adds	r6, #1
9000957a:	eba6 0609 	sub.w	r6, r6, r9
      p++;
9000957e:	440e      	add	r6, r1
    if(si > 31UL)
90009580:	2a1f      	cmp	r2, #31
90009582:	d80c      	bhi.n	9000959e <JPEG_Bits_To_SizeCodes+0x96>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009584:	fa07 f102 	lsl.w	r1, r7, r2
90009588:	4299      	cmp	r1, r3
9000958a:	d908      	bls.n	9000959e <JPEG_Bits_To_SizeCodes+0x96>
  while (Huffsize[p] != 0U)
9000958c:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
9000958e:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
90009592:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
90009594:	2900      	cmp	r1, #0
90009596:	d1de      	bne.n	90009556 <JPEG_Bits_To_SizeCodes+0x4e>
  }
  /* Return function status */
  return HAL_OK;
90009598:	2000      	movs	r0, #0
}
9000959a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      return HAL_ERROR;
9000959e:	2001      	movs	r0, #1
}
900095a0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    while (((uint32_t) Huffsize[p]) == si)
900095a4:	464b      	mov	r3, r9
900095a6:	e7eb      	b.n	90009580 <JPEG_Bits_To_SizeCodes+0x78>

900095a8 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
900095a8:	b5f0      	push	{r4, r5, r6, r7, lr}
900095aa:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
900095ae:	460d      	mov	r5, r1
900095b0:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
900095b2:	ab01      	add	r3, sp, #4
900095b4:	aa43      	add	r2, sp, #268	@ 0x10c
900095b6:	a902      	add	r1, sp, #8
900095b8:	f7ff ffa6 	bl	90009508 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
900095bc:	b9d0      	cbnz	r0, 900095f4 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
900095be:	9f01      	ldr	r7, [sp, #4]
900095c0:	b1c7      	cbz	r7, 900095f4 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
900095c2:	370f      	adds	r7, #15
900095c4:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
900095c8:	a902      	add	r1, sp, #8
900095ca:	f104 0c0f 	add.w	ip, r4, #15
900095ce:	4427      	add	r7, r4
900095d0:	e009      	b.n	900095e6 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900095d2:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
900095d6:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900095d8:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900095dc:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900095e0:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900095e2:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
900095e4:	d006      	beq.n	900095f4 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
900095e6:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
900095ea:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900095ec:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
900095f0:	d9ef      	bls.n	900095d2 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
900095f2:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
900095f4:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
900095f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900095fa:	bf00      	nop

900095fc <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
900095fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009600:	6804      	ldr	r4, [r0, #0]
{
90009602:	b093      	sub	sp, #76	@ 0x4c
90009604:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009606:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
9000960a:	429a      	cmp	r2, r3
9000960c:	f000 809d 	beq.w	9000974a <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90009610:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
90009614:	429a      	cmp	r2, r3
90009616:	d003      	beq.n	90009620 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90009618:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000961a:	b013      	add	sp, #76	@ 0x4c
9000961c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90009620:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
90009624:	a903      	add	r1, sp, #12
90009626:	f7ff ffbf 	bl	900095a8 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
9000962a:	2800      	cmp	r0, #0
9000962c:	d1f5      	bne.n	9000961a <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
9000962e:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009632:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009636:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
9000963a:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000963c:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90009640:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009642:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
90009646:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000964a:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
9000964e:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009652:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
90009656:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009658:	f89d 9015 	ldrb.w	r9, [sp, #21]
9000965c:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009660:	f89d c014 	ldrb.w	ip, [sp, #20]
90009664:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009668:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000966c:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009670:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009674:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009676:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000967a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
9000967e:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
90009682:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009686:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000968a:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000968e:	f89d 7011 	ldrb.w	r7, [sp, #17]
90009692:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009696:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90009698:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000969c:	f89d 2010 	ldrb.w	r2, [sp, #16]
900096a0:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096a4:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
900096a6:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096aa:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096ac:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
900096b0:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096b4:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096b8:	f89d 600f 	ldrb.w	r6, [sp, #15]
900096bc:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096c0:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096c4:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096c6:	9b01      	ldr	r3, [sp, #4]
900096c8:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096cc:	f89d 500d 	ldrb.w	r5, [sp, #13]
900096d0:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096d4:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
900096d8:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096dc:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
900096de:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096e2:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096e6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900096ea:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096ee:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096f2:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900096f6:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
900096fa:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
900096fe:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
90009702:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009706:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
9000970a:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000970c:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
90009710:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
90009712:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
90009716:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000971a:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
9000971e:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009720:	f89d 2020 	ldrb.w	r2, [sp, #32]
90009724:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
90009726:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
9000972a:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000972e:	f89d 301c 	ldrb.w	r3, [sp, #28]
90009732:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009734:	f89d 3018 	ldrb.w	r3, [sp, #24]
90009738:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
9000973c:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90009740:	f844 3c18 	str.w	r3, [r4, #-24]
}
90009744:	b013      	add	sp, #76	@ 0x4c
90009746:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000974a:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
9000974e:	e769      	b.n	90009624 <JPEG_Set_HuffDC_Mem+0x28>

90009750 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
90009750:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90009754:	6804      	ldr	r4, [r0, #0]
{
90009756:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
9000975a:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000975c:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
90009760:	429a      	cmp	r2, r3
90009762:	d041      	beq.n	900097e8 <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
90009764:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
90009768:	429a      	cmp	r2, r3
9000976a:	d004      	beq.n	90009776 <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
9000976c:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000976e:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
90009772:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90009776:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000977a:	4628      	mov	r0, r5
9000977c:	466b      	mov	r3, sp
9000977e:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
90009782:	a901      	add	r1, sp, #4
90009784:	f7ff fec0 	bl	90009508 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009788:	2800      	cmp	r0, #0
9000978a:	d1f0      	bne.n	9000976e <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
9000978c:	9b00      	ldr	r3, [sp, #0]
9000978e:	b373      	cbz	r3, 900097ee <JPEG_Set_HuffAC_Mem+0x9e>
90009790:	330f      	adds	r3, #15
90009792:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
90009796:	af01      	add	r7, sp, #4
90009798:	f105 020f 	add.w	r2, r5, #15
9000979c:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900097a0:	ae42      	add	r6, sp, #264	@ 0x108
900097a2:	e011      	b.n	900097c8 <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
900097a4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
900097a8:	2ba1      	cmp	r3, #161	@ 0xa1
900097aa:	d8df      	bhi.n	9000976c <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900097ac:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900097b0:	eb06 0883 	add.w	r8, r6, r3, lsl #2
900097b4:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
900097b8:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900097ba:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900097be:	46b1      	mov	r9, r6
900097c0:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900097c4:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
900097c6:	d014      	beq.n	900097f2 <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
900097c8:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
900097cc:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
900097ce:	2900      	cmp	r1, #0
900097d0:	d0ec      	beq.n	900097ac <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
900097d2:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
900097d4:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
900097d8:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
900097da:	eb05 0585 	add.w	r5, r5, r5, lsl #2
900097de:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
900097e2:	d1df      	bne.n	900097a4 <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
900097e4:	23a1      	movs	r3, #161	@ 0xa1
900097e6:	e7e1      	b.n	900097ac <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
900097e8:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
900097ec:	e7c5      	b.n	9000977a <JPEG_Set_HuffAC_Mem+0x2a>
900097ee:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
900097f2:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
900097f6:	4a1a      	ldr	r2, [pc, #104]	@ (90009860 <JPEG_Set_HuffAC_Mem+0x110>)
900097f8:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
900097fc:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
900097fe:	6023      	str	r3, [r4, #0]
90009800:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
90009804:	6063      	str	r3, [r4, #4]
90009806:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
9000980a:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
9000980c:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
90009810:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
90009812:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
90009816:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
9000981a:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
9000981c:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
90009820:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
90009822:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
90009826:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009828:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000982c:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009830:	0212      	lsls	r2, r2, #8
90009832:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009836:	021b      	lsls	r3, r3, #8
90009838:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000983c:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
90009840:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009842:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009846:	433a      	orrs	r2, r7
    while (i > 1UL)
90009848:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000984a:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000984e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90009852:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
90009856:	d1e7      	bne.n	90009828 <JPEG_Set_HuffAC_Mem+0xd8>
}
90009858:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
9000985c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009860:	0fd10fd0 	.word	0x0fd10fd0

90009864 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90009864:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90009866:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90009868:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
9000986c:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000986e:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90009870:	f002 0203 	and.w	r2, r2, #3
90009874:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90009876:	685a      	ldr	r2, [r3, #4]
90009878:	bf0c      	ite	eq
9000987a:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000987e:	f022 0208 	bicne.w	r2, r2, #8
90009882:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009884:	681a      	ldr	r2, [r3, #0]
90009886:	f022 0201 	bic.w	r2, r2, #1
9000988a:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000988c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000988e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009892:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009894:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009896:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000989a:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000989c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000989e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900098a2:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
900098a4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900098a6:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900098aa:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
900098ac:	681a      	ldr	r2, [r3, #0]
900098ae:	f042 0201 	orr.w	r2, r2, #1
900098b2:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900098b4:	6d42      	ldr	r2, [r0, #84]	@ 0x54
900098b6:	f002 020c 	and.w	r2, r2, #12
900098ba:	2a08      	cmp	r2, #8
900098bc:	d00a      	beq.n	900098d4 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900098be:	6d42      	ldr	r2, [r0, #84]	@ 0x54
900098c0:	f002 020c 	and.w	r2, r2, #12
900098c4:	2a0c      	cmp	r2, #12
900098c6:	d000      	beq.n	900098ca <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
900098c8:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
900098ca:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900098cc:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900098d0:	631a      	str	r2, [r3, #48]	@ 0x30
}
900098d2:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
900098d4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900098d6:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
900098da:	631a      	str	r2, [r3, #48]	@ 0x30
900098dc:	4770      	bx	lr
900098de:	bf00      	nop

900098e0 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900098e0:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900098e2:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
900098e4:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900098e6:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
900098e8:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900098ea:	42aa      	cmp	r2, r5
900098ec:	d32a      	bcc.n	90009944 <JPEG_DMA_StartProcess+0x64>
900098ee:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
900098f0:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900098f2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
900098f4:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900098f6:	42b3      	cmp	r3, r6
900098f8:	d324      	bcc.n	90009944 <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
900098fa:	4f19      	ldr	r7, [pc, #100]	@ (90009960 <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
900098fc:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 9000996c <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90009900:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90009902:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90009906:	4917      	ldr	r1, [pc, #92]	@ (90009964 <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
90009908:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000990a:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000990c:	4916      	ldr	r1, [pc, #88]	@ (90009968 <JPEG_DMA_StartProcess+0x88>)
9000990e:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
90009910:	b1a5      	cbz	r5, 9000993c <JPEG_DMA_StartProcess+0x5c>
90009912:	b19e      	cbz	r6, 9000993c <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009914:	fbb2 f1f5 	udiv	r1, r2, r5
90009918:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000991c:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000991e:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009920:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009922:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009924:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
90009926:	fbb3 f2f6 	udiv	r2, r3, r6
9000992a:	fb06 3212 	mls	r2, r6, r2, r3
9000992e:	1a9b      	subs	r3, r3, r2
90009930:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009932:	9500      	str	r5, [sp, #0]
90009934:	69e2      	ldr	r2, [r4, #28]
90009936:	f001 fc23 	bl	9000b180 <HAL_MDMA_Start_IT>
9000993a:	b130      	cbz	r0, 9000994a <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000993c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000993e:	f043 0304 	orr.w	r3, r3, #4
90009942:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
90009944:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
90009946:	b003      	add	sp, #12
90009948:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000994a:	6822      	ldr	r2, [r4, #0]
9000994c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000994e:	69a1      	ldr	r1, [r4, #24]
90009950:	3240      	adds	r2, #64	@ 0x40
90009952:	9500      	str	r5, [sp, #0]
90009954:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009956:	f001 fc13 	bl	9000b180 <HAL_MDMA_Start_IT>
9000995a:	2800      	cmp	r0, #0
9000995c:	d0f3      	beq.n	90009946 <JPEG_DMA_StartProcess+0x66>
9000995e:	e7ed      	b.n	9000993c <JPEG_DMA_StartProcess+0x5c>
90009960:	90009f4d 	.word	0x90009f4d
90009964:	9000a1c1 	.word	0x9000a1c1
90009968:	9000a241 	.word	0x9000a241
9000996c:	90009f79 	.word	0x90009f79

90009970 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90009970:	6803      	ldr	r3, [r0, #0]
90009972:	685a      	ldr	r2, [r3, #4]
90009974:	f002 0203 	and.w	r2, r2, #3
90009978:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000997a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000997e:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90009980:	d018      	beq.n	900099b4 <HAL_JPEG_GetInfo.part.0+0x44>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
90009982:	685a      	ldr	r2, [r3, #4]
90009984:	f012 0203 	ands.w	r2, r2, #3
90009988:	d10b      	bne.n	900099a2 <HAL_JPEG_GetInfo.part.0+0x32>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000998a:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000998c:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009990:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009992:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009994:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009996:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000999a:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000999e:	2100      	movs	r1, #0
900099a0:	e02f      	b.n	90009a02 <HAL_JPEG_GetInfo.part.0+0x92>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
900099a2:	685a      	ldr	r2, [r3, #4]
900099a4:	f002 0203 	and.w	r2, r2, #3
900099a8:	2a03      	cmp	r2, #3
900099aa:	f000 8097 	beq.w	90009adc <HAL_JPEG_GetInfo.part.0+0x16c>
    return HAL_ERROR;
900099ae:	2001      	movs	r0, #1
}
900099b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900099b4:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900099b6:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
900099b8:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900099bc:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
900099be:	68d9      	ldr	r1, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900099c0:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
900099c4:	0c09      	lsrs	r1, r1, #16
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
900099c6:	691a      	ldr	r2, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
900099c8:	695c      	ldr	r4, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
900099ca:	f8c9 100c 	str.w	r1, [r9, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
900099ce:	0916      	lsrs	r6, r2, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
900099d0:	6999      	ldr	r1, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
900099d2:	f014 0ff0 	tst.w	r4, #240	@ 0xf0
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
900099d6:	f3c2 1203 	ubfx	r2, r2, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
900099da:	ea4f 1714 	mov.w	r7, r4, lsr #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
900099de:	ea4f 1111 	mov.w	r1, r1, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
900099e2:	d105      	bne.n	900099f0 <HAL_JPEG_GetInfo.part.0+0x80>
900099e4:	2a01      	cmp	r2, #1
900099e6:	d103      	bne.n	900099f0 <HAL_JPEG_GetInfo.part.0+0x80>
900099e8:	070d      	lsls	r5, r1, #28
900099ea:	d1d8      	bne.n	9000999e <HAL_JPEG_GetInfo.part.0+0x2e>
900099ec:	2102      	movs	r1, #2
900099ee:	e008      	b.n	90009a02 <HAL_JPEG_GetInfo.part.0+0x92>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
900099f0:	433e      	orrs	r6, r7
900099f2:	0734      	lsls	r4, r6, #28
900099f4:	d0d3      	beq.n	9000999e <HAL_JPEG_GetInfo.part.0+0x2e>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
900099f6:	430f      	orrs	r7, r1
900099f8:	0739      	lsls	r1, r7, #28
900099fa:	d1d0      	bne.n	9000999e <HAL_JPEG_GetInfo.part.0+0x2e>
900099fc:	2a03      	cmp	r2, #3
900099fe:	d1ce      	bne.n	9000999e <HAL_JPEG_GetInfo.part.0+0x2e>
90009a00:	2101      	movs	r1, #1
90009a02:	4a42      	ldr	r2, [pc, #264]	@ (90009b0c <HAL_JPEG_GetInfo.part.0+0x19c>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
90009a04:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
90009a08:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
90009a0c:	2600      	movs	r6, #0
90009a0e:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009a12:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
90009a16:	f241 3188 	movw	r1, #5000	@ 0x1388
90009a1a:	e033      	b.n	90009a84 <HAL_JPEG_GetInfo.part.0+0x114>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009a1c:	f892 8001 	ldrb.w	r8, [r2, #1]
90009a20:	fb0e f707 	mul.w	r7, lr, r7
90009a24:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009a26:	f815 8008 	ldrb.w	r8, [r5, r8]
90009a2a:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009a2e:	2f64      	cmp	r7, #100	@ 0x64
90009a30:	d958      	bls.n	90009ae4 <HAL_JPEG_GetInfo.part.0+0x174>
          quality += 5000UL / scale;
90009a32:	fbb1 f7f7 	udiv	r7, r1, r7
90009a36:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009a38:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
90009a3c:	2f01      	cmp	r7, #1
90009a3e:	d03d      	beq.n	90009abc <HAL_JPEG_GetInfo.part.0+0x14c>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009a40:	f892 8002 	ldrb.w	r8, [r2, #2]
90009a44:	fb0e f707 	mul.w	r7, lr, r7
90009a48:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009a4a:	f815 8008 	ldrb.w	r8, [r5, r8]
90009a4e:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009a52:	2f64      	cmp	r7, #100	@ 0x64
90009a54:	d955      	bls.n	90009b02 <HAL_JPEG_GetInfo.part.0+0x192>
          quality += 5000UL / scale;
90009a56:	fbb1 f7f7 	udiv	r7, r1, r7
90009a5a:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009a5c:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
90009a5e:	2b01      	cmp	r3, #1
90009a60:	d030      	beq.n	90009ac4 <HAL_JPEG_GetInfo.part.0+0x154>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009a62:	78d7      	ldrb	r7, [r2, #3]
90009a64:	fb0e f303 	mul.w	r3, lr, r3
90009a68:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009a6a:	5def      	ldrb	r7, [r5, r7]
90009a6c:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
90009a70:	2b64      	cmp	r3, #100	@ 0x64
90009a72:	d93c      	bls.n	90009aee <HAL_JPEG_GetInfo.part.0+0x17e>
          quality += 5000UL / scale;
90009a74:	fbb1 f3f3 	udiv	r3, r1, r3
90009a78:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009a7a:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
90009a7c:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009a80:	4294      	cmp	r4, r2
90009a82:	d025      	beq.n	90009ad0 <HAL_JPEG_GetInfo.part.0+0x160>
    quantRow = *tableAddress;
90009a84:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009a88:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
90009a8a:	2f01      	cmp	r7, #1
90009a8c:	d028      	beq.n	90009ae0 <HAL_JPEG_GetInfo.part.0+0x170>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009a8e:	f892 8000 	ldrb.w	r8, [r2]
90009a92:	fb0e f707 	mul.w	r7, lr, r7
90009a96:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009a98:	f815 8008 	ldrb.w	r8, [r5, r8]
90009a9c:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009aa0:	2f64      	cmp	r7, #100	@ 0x64
90009aa2:	d929      	bls.n	90009af8 <HAL_JPEG_GetInfo.part.0+0x188>
          quality += 5000UL / scale;
90009aa4:	fbb1 f7f7 	udiv	r7, r1, r7
90009aa8:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009aaa:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
90009aae:	2f01      	cmp	r7, #1
90009ab0:	d1b4      	bne.n	90009a1c <HAL_JPEG_GetInfo.part.0+0xac>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009ab2:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
90009ab6:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90009ab8:	2f01      	cmp	r7, #1
90009aba:	d1c1      	bne.n	90009a40 <HAL_JPEG_GetInfo.part.0+0xd0>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009abc:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
90009abe:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90009ac0:	2b01      	cmp	r3, #1
90009ac2:	d1ce      	bne.n	90009a62 <HAL_JPEG_GetInfo.part.0+0xf2>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009ac4:	3204      	adds	r2, #4
        quality += 100UL;
90009ac6:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
90009ac8:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009acc:	4294      	cmp	r4, r2
90009ace:	d1d9      	bne.n	90009a84 <HAL_JPEG_GetInfo.part.0+0x114>
  }

  return (quality / 64UL);
90009ad0:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
90009ad2:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
90009ad4:	f8c9 6010 	str.w	r6, [r9, #16]
}
90009ad8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009adc:	2130      	movs	r1, #48	@ 0x30
90009ade:	e76a      	b.n	900099b6 <HAL_JPEG_GetInfo.part.0+0x46>
        quality += 100UL;
90009ae0:	3664      	adds	r6, #100	@ 0x64
90009ae2:	e7e2      	b.n	90009aaa <HAL_JPEG_GetInfo.part.0+0x13a>
          quality += (200UL - scale) / 2UL;
90009ae4:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90009ae8:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009aec:	e7a4      	b.n	90009a38 <HAL_JPEG_GetInfo.part.0+0xc8>
90009aee:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
90009af2:	eb06 0653 	add.w	r6, r6, r3, lsr #1
90009af6:	e7c0      	b.n	90009a7a <HAL_JPEG_GetInfo.part.0+0x10a>
90009af8:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90009afc:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009b00:	e7d3      	b.n	90009aaa <HAL_JPEG_GetInfo.part.0+0x13a>
90009b02:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90009b06:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009b0a:	e7a7      	b.n	90009a5c <HAL_JPEG_GetInfo.part.0+0xec>
90009b0c:	9002d510 	.word	0x9002d510

90009b10 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
90009b10:	2800      	cmp	r0, #0
90009b12:	f000 8107 	beq.w	90009d24 <HAL_JPEG_Init+0x214>
{
90009b16:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
90009b18:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
90009b1c:	4605      	mov	r5, r0
90009b1e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90009b22:	2b00      	cmp	r3, #0
90009b24:	f000 80f9 	beq.w	90009d1a <HAL_JPEG_Init+0x20a>
  __HAL_JPEG_ENABLE(hjpeg);
90009b28:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90009b2a:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
90009b2c:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90009b2e:	497e      	ldr	r1, [pc, #504]	@ (90009d28 <HAL_JPEG_Init+0x218>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90009b30:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
90009b34:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009b36:	f042 0201 	orr.w	r2, r2, #1
90009b3a:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009b3c:	6822      	ldr	r2, [r4, #0]
90009b3e:	f022 0201 	bic.w	r2, r2, #1
90009b42:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009b44:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009b46:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009b4a:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009b4c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009b4e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009b52:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009b54:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009b56:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90009b5a:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009b5c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90009b5e:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009b62:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009b64:	4a71      	ldr	r2, [pc, #452]	@ (90009d2c <HAL_JPEG_Init+0x21c>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90009b66:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009b68:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
90009b6a:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009b6c:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009b70:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
90009b74:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
90009b78:	4b6d      	ldr	r3, [pc, #436]	@ (90009d30 <HAL_JPEG_Init+0x220>)
90009b7a:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
90009b7e:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009b82:	496c      	ldr	r1, [pc, #432]	@ (90009d34 <HAL_JPEG_Init+0x224>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009b84:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009b88:	4b6b      	ldr	r3, [pc, #428]	@ (90009d38 <HAL_JPEG_Init+0x228>)
90009b8a:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
90009b8e:	4a6b      	ldr	r2, [pc, #428]	@ (90009d3c <HAL_JPEG_Init+0x22c>)
90009b90:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009b94:	4b6a      	ldr	r3, [pc, #424]	@ (90009d40 <HAL_JPEG_Init+0x230>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009b96:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009b9a:	496a      	ldr	r1, [pc, #424]	@ (90009d44 <HAL_JPEG_Init+0x234>)
90009b9c:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
90009ba0:	4a69      	ldr	r2, [pc, #420]	@ (90009d48 <HAL_JPEG_Init+0x238>)
90009ba2:	4b6a      	ldr	r3, [pc, #424]	@ (90009d4c <HAL_JPEG_Init+0x23c>)
90009ba4:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
90009ba8:	f8c4 2380 	str.w	r2, [r4, #896]	@ 0x380
90009bac:	f8c4 337c 	str.w	r3, [r4, #892]	@ 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009bb0:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
  value = *address & 0xFFFF0000U;
90009bb4:	f8d4 142c 	ldr.w	r1, [r4, #1068]	@ 0x42c
90009bb8:	4a65      	ldr	r2, [pc, #404]	@ (90009d50 <HAL_JPEG_Init+0x240>)
90009bba:	400a      	ands	r2, r1
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
90009bbc:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009bc0:	4313      	orrs	r3, r2
  *address = value;
90009bc2:	4a64      	ldr	r2, [pc, #400]	@ (90009d54 <HAL_JPEG_Init+0x244>)
90009bc4:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
90009bc8:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009bcc:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
90009bd0:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009bd2:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009bd6:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
90009bd8:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90009bdc:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
90009be0:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009be2:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90009be6:	ea43 030c 	orr.w	r3, r3, ip
90009bea:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009bee:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90009bf2:	d1eb      	bne.n	90009bcc <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
90009bf4:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009bf8:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
90009bfc:	4954      	ldr	r1, [pc, #336]	@ (90009d50 <HAL_JPEG_Init+0x240>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009bfe:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
90009c00:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
90009c02:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
90009c06:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
90009c0a:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90009c0e:	400b      	ands	r3, r1
  *address = value;
90009c10:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009c14:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
90009c18:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
90009c1c:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90009c20:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
90009c24:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90009c28:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
90009c2a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90009c2e:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
90009c32:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90009c36:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90009c38:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009c3a:	4b47      	ldr	r3, [pc, #284]	@ (90009d58 <HAL_JPEG_Init+0x248>)
  *address = value;
90009c3c:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90009c40:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009c44:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
90009c48:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
90009c4c:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
90009c50:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90009c54:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
90009c56:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
90009c5a:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
90009c5e:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
90009c62:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009c64:	493d      	ldr	r1, [pc, #244]	@ (90009d5c <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90009c66:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009c68:	4b3d      	ldr	r3, [pc, #244]	@ (90009d60 <HAL_JPEG_Init+0x250>)
  *address = value;
90009c6a:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009c6e:	4a3d      	ldr	r2, [pc, #244]	@ (90009d64 <HAL_JPEG_Init+0x254>)
90009c70:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
90009c74:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009c78:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
90009c7c:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
90009c80:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009c84:	4a38      	ldr	r2, [pc, #224]	@ (90009d68 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
90009c86:	b29b      	uxth	r3, r3
90009c88:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009c8c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90009c90:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009c94:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
90009c98:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009c9a:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009c9e:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
90009ca0:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009ca4:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
90009ca8:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009caa:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
90009cae:	ea43 030c 	orr.w	r3, r3, ip
90009cb2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009cb6:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90009cba:	d1eb      	bne.n	90009c94 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
90009cbc:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
90009cc0:	4924      	ldr	r1, [pc, #144]	@ (90009d54 <HAL_JPEG_Init+0x244>)
90009cc2:	4628      	mov	r0, r5
90009cc4:	f7ff fd44 	bl	90009750 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009cc8:	b118      	cbz	r0, 90009cd2 <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009cca:	2301      	movs	r3, #1
    return HAL_ERROR;
90009ccc:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009cce:	652b      	str	r3, [r5, #80]	@ 0x50
}
90009cd0:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
90009cd2:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
90009cd6:	4924      	ldr	r1, [pc, #144]	@ (90009d68 <HAL_JPEG_Init+0x258>)
90009cd8:	4628      	mov	r0, r5
90009cda:	f7ff fd39 	bl	90009750 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009cde:	2800      	cmp	r0, #0
90009ce0:	d1f3      	bne.n	90009cca <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
90009ce2:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
90009ce6:	4921      	ldr	r1, [pc, #132]	@ (90009d6c <HAL_JPEG_Init+0x25c>)
90009ce8:	4628      	mov	r0, r5
90009cea:	f7ff fc87 	bl	900095fc <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
90009cee:	2800      	cmp	r0, #0
90009cf0:	d1eb      	bne.n	90009cca <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
90009cf2:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
90009cf6:	491e      	ldr	r1, [pc, #120]	@ (90009d70 <HAL_JPEG_Init+0x260>)
90009cf8:	4628      	mov	r0, r5
90009cfa:	f7ff fc7f 	bl	900095fc <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
90009cfe:	2800      	cmp	r0, #0
90009d00:	d1e3      	bne.n	90009cca <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90009d02:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
90009d04:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90009d06:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90009d0a:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
90009d0c:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
90009d0e:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
90009d10:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
90009d14:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
90009d16:	6568      	str	r0, [r5, #84]	@ 0x54
}
90009d18:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
90009d1a:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
90009d1e:	f7fa f88f 	bl	90003e40 <HAL_JPEG_MspInit>
90009d22:	e701      	b.n	90009b28 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
90009d24:	2001      	movs	r0, #1
}
90009d26:	4770      	bx	lr
90009d28:	9002d4d0 	.word	0x9002d4d0
90009d2c:	9002d490 	.word	0x9002d490
90009d30:	01050100 	.word	0x01050100
90009d34:	0b0a0908 	.word	0x0b0a0908
90009d38:	07060504 	.word	0x07060504
90009d3c:	03020100 	.word	0x03020100
90009d40:	7d010000 	.word	0x7d010000
90009d44:	04040505 	.word	0x04040505
90009d48:	03040203 	.word	0x03040203
90009d4c:	03010200 	.word	0x03010200
90009d50:	ffff0000 	.word	0xffff0000
90009d54:	9002d604 	.word	0x9002d604
90009d58:	09080706 	.word	0x09080706
90009d5c:	01000404 	.word	0x01000404
90009d60:	04040201 	.word	0x04040201
90009d64:	05070403 	.word	0x05070403
90009d68:	9002d550 	.word	0x9002d550
90009d6c:	9002d6d4 	.word	0x9002d6d4
90009d70:	9002d6b8 	.word	0x9002d6b8

90009d74 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009d74:	2b00      	cmp	r3, #0
90009d76:	bf18      	it	ne
90009d78:	2900      	cmpne	r1, #0
90009d7a:	d036      	beq.n	90009dea <HAL_JPEG_Decode_DMA+0x76>
{
90009d7c:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009d7e:	fab0 f580 	clz	r5, r0
90009d82:	4604      	mov	r4, r0
90009d84:	096d      	lsrs	r5, r5, #5
90009d86:	b370      	cbz	r0, 90009de6 <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
90009d88:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
90009d8c:	f1bc 0f01 	cmp.w	ip, #1
90009d90:	d022      	beq.n	90009dd8 <HAL_JPEG_Decode_DMA+0x64>
90009d92:	f04f 0c01 	mov.w	ip, #1
90009d96:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90009d9a:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
90009d9e:	f1bc 0f01 	cmp.w	ip, #1
90009da2:	d117      	bne.n	90009dd4 <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
90009da4:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
90009da6:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
90009daa:	9b04      	ldr	r3, [sp, #16]
90009dac:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
90009dae:	2304      	movs	r3, #4
90009db0:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
90009db4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009db6:	f023 030f 	bic.w	r3, r3, #15
90009dba:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
90009dbc:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009dbe:	f043 030e 	orr.w	r3, r3, #14
90009dc2:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
90009dc4:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
90009dc6:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
90009dc8:	f7ff fd4c 	bl	90009864 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
90009dcc:	f7ff fd88 	bl	900098e0 <JPEG_DMA_StartProcess>
90009dd0:	b920      	cbnz	r0, 90009ddc <HAL_JPEG_Decode_DMA+0x68>
}
90009dd2:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
90009dd4:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
90009dd8:	2002      	movs	r0, #2
}
90009dda:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009ddc:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
90009dde:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009de2:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90009de6:	2001      	movs	r0, #1
}
90009de8:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90009dea:	2001      	movs	r0, #1
}
90009dec:	4770      	bx	lr
90009dee:	bf00      	nop

90009df0 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009df0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009df2:	f003 030c 	and.w	r3, r3, #12
90009df6:	2b0c      	cmp	r3, #12
90009df8:	d01a      	beq.n	90009e30 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009dfa:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009dfc:	f003 030c 	and.w	r3, r3, #12
90009e00:	2b08      	cmp	r3, #8
90009e02:	d001      	beq.n	90009e08 <HAL_JPEG_Pause+0x18>
}
90009e04:	2000      	movs	r0, #0
90009e06:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009e08:	07ca      	lsls	r2, r1, #31
90009e0a:	d41f      	bmi.n	90009e4c <HAL_JPEG_Pause+0x5c>
90009e0c:	f04f 3cff 	mov.w	ip, #4294967295
90009e10:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009e14:	078b      	lsls	r3, r1, #30
90009e16:	d504      	bpl.n	90009e22 <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90009e18:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009e1a:	4694      	mov	ip, r2
90009e1c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90009e20:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009e22:	6802      	ldr	r2, [r0, #0]
}
90009e24:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009e26:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009e28:	ea03 030c 	and.w	r3, r3, ip
90009e2c:	6313      	str	r3, [r2, #48]	@ 0x30
}
90009e2e:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009e30:	07cb      	lsls	r3, r1, #31
90009e32:	d503      	bpl.n	90009e3c <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009e34:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009e36:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90009e3a:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009e3c:	0789      	lsls	r1, r1, #30
90009e3e:	d5e1      	bpl.n	90009e04 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90009e40:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009e42:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90009e46:	6543      	str	r3, [r0, #84]	@ 0x54
}
90009e48:	2000      	movs	r0, #0
90009e4a:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009e4c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009e4e:	f06f 0c06 	mvn.w	ip, #6
90009e52:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
90009e56:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90009e5a:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90009e5c:	e7da      	b.n	90009e14 <HAL_JPEG_Pause+0x24>
90009e5e:	bf00      	nop

90009e60 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
90009e60:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
90009e62:	6282      	str	r2, [r0, #40]	@ 0x28
}
90009e64:	4770      	bx	lr
90009e66:	bf00      	nop

90009e68 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
90009e68:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
90009e6a:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
90009e6c:	4770      	bx	lr
90009e6e:	bf00      	nop

90009e70 <HAL_JPEG_Abort>:
{
90009e70:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
90009e72:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
90009e74:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90009e76:	6d41      	ldr	r1, [r0, #84]	@ 0x54
90009e78:	4a32      	ldr	r2, [pc, #200]	@ (90009f44 <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009e7a:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90009e7e:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009e80:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90009e82:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009e84:	d043      	beq.n	90009f0e <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009e86:	6822      	ldr	r2, [r4, #0]
90009e88:	6813      	ldr	r3, [r2, #0]
90009e8a:	f023 0301 	bic.w	r3, r3, #1
90009e8e:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
90009e90:	f7fe f8f8 	bl	90008084 <HAL_GetTick>
90009e94:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90009e96:	e005      	b.n	90009ea4 <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
90009e98:	f7fe f8f4 	bl	90008084 <HAL_GetTick>
90009e9c:	1b40      	subs	r0, r0, r5
90009e9e:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
90009ea2:	d82b      	bhi.n	90009efc <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90009ea4:	6823      	ldr	r3, [r4, #0]
90009ea6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009ea8:	0612      	lsls	r2, r2, #24
90009eaa:	d4f5      	bmi.n	90009e98 <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009eac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
90009eae:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009eb0:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009eb4:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009eb6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009eb8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009ebc:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009ebe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009ec0:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90009ec4:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009ec6:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009ec8:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009ecc:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
90009ece:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
90009ed0:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
90009ed2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009ed4:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
90009ed8:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
90009eda:	6d20      	ldr	r0, [r4, #80]	@ 0x50
90009edc:	b138      	cbz	r0, 90009eee <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90009ede:	2306      	movs	r3, #6
    return HAL_ERROR;
90009ee0:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90009ee2:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90009ee6:	2300      	movs	r3, #0
90009ee8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90009eec:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
90009eee:	2301      	movs	r3, #1
90009ef0:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
90009ef4:	2300      	movs	r3, #0
90009ef6:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90009efa:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90009efc:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009efe:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009f00:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90009f02:	f042 0208 	orr.w	r2, r2, #8
90009f06:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009f08:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
90009f0c:	e7ce      	b.n	90009eac <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
90009f0e:	6b40      	ldr	r0, [r0, #52]	@ 0x34
90009f10:	f001 f9a8 	bl	9000b264 <HAL_MDMA_Abort>
90009f14:	b118      	cbz	r0, 90009f1e <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90009f16:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90009f18:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90009f1a:	2b40      	cmp	r3, #64	@ 0x40
90009f1c:	d00d      	beq.n	90009f3a <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
90009f1e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009f20:	f001 f9a0 	bl	9000b264 <HAL_MDMA_Abort>
90009f24:	2800      	cmp	r0, #0
90009f26:	d0ae      	beq.n	90009e86 <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90009f28:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90009f2a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90009f2c:	2b40      	cmp	r3, #64	@ 0x40
90009f2e:	d1aa      	bne.n	90009e86 <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009f30:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009f32:	f043 0304 	orr.w	r3, r3, #4
90009f36:	6523      	str	r3, [r4, #80]	@ 0x50
90009f38:	e7a5      	b.n	90009e86 <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009f3a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009f3c:	f043 0304 	orr.w	r3, r3, #4
90009f40:	6523      	str	r3, [r4, #80]	@ 0x50
90009f42:	e7ec      	b.n	90009f1e <HAL_JPEG_Abort+0xae>
90009f44:	ffff7ff0 	.word	0xffff7ff0

90009f48 <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
90009f48:	4770      	bx	lr
90009f4a:	bf00      	nop

90009f4c <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009f4c:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
90009f4e:	2101      	movs	r1, #1
{
90009f50:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009f52:	6803      	ldr	r3, [r0, #0]
90009f54:	681a      	ldr	r2, [r3, #0]
90009f56:	f022 0201 	bic.w	r2, r2, #1
90009f5a:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009f5c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009f5e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009f62:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90009f64:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009f68:	6d03      	ldr	r3, [r0, #80]	@ 0x50
90009f6a:	f043 0304 	orr.w	r3, r3, #4
90009f6e:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
90009f70:	f7f8 f8c0 	bl	900020f4 <HAL_JPEG_ErrorCallback>
}
90009f74:	bd08      	pop	{r3, pc}
90009f76:	bf00      	nop

90009f78 <JPEG_MDMAInCpltCallback>:
{
90009f78:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009f7a:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009f7c:	f248 010c 	movw	r1, #32780	@ 0x800c
{
90009f80:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009f82:	6822      	ldr	r2, [r4, #0]
90009f84:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009f86:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
90009f8a:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009f8c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009f8e:	400b      	ands	r3, r1
90009f90:	2b0c      	cmp	r3, #12
90009f92:	d001      	beq.n	90009f98 <JPEG_MDMAInCpltCallback+0x20>
}
90009f94:	b003      	add	sp, #12
90009f96:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009f98:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009f9a:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009f9c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009f9e:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009fa0:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009fa2:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009fa6:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009fa8:	1a9b      	subs	r3, r3, r2
90009faa:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009fac:	6a21      	ldr	r1, [r4, #32]
90009fae:	f7f7 ffd5 	bl	90001f5c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
90009fb2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009fb4:	42ab      	cmp	r3, r5
90009fb6:	d311      	bcc.n	90009fdc <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
90009fb8:	b305      	cbz	r5, 90009ffc <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009fba:	fbb3 f2f5 	udiv	r2, r3, r5
90009fbe:	fb05 3212 	mls	r2, r5, r2, r3
90009fc2:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009fc4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009fc6:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009fc8:	04d1      	lsls	r1, r2, #19
90009fca:	d400      	bmi.n	90009fce <JPEG_MDMAInCpltCallback+0x56>
90009fcc:	b963      	cbnz	r3, 90009fe8 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009fce:	6822      	ldr	r2, [r4, #0]
90009fd0:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009fd2:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
90009fd6:	6313      	str	r3, [r2, #48]	@ 0x30
}
90009fd8:	b003      	add	sp, #12
90009fda:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
90009fdc:	b1cb      	cbz	r3, 9000a012 <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
90009fde:	0798      	lsls	r0, r3, #30
90009fe0:	d119      	bne.n	9000a016 <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009fe2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009fe4:	04d2      	lsls	r2, r2, #19
90009fe6:	d4f2      	bmi.n	90009fce <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009fe8:	6822      	ldr	r2, [r4, #0]
90009fea:	2501      	movs	r5, #1
90009fec:	69a1      	ldr	r1, [r4, #24]
90009fee:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009ff0:	3240      	adds	r2, #64	@ 0x40
90009ff2:	9500      	str	r5, [sp, #0]
90009ff4:	f001 f8c4 	bl	9000b180 <HAL_MDMA_Start_IT>
90009ff8:	2800      	cmp	r0, #0
90009ffa:	d0e8      	beq.n	90009fce <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009ffc:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90009ffe:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000a000:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a002:	f043 0304 	orr.w	r3, r3, #4
9000a006:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a008:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000a00c:	f7f8 f872 	bl	900020f4 <HAL_JPEG_ErrorCallback>
        return;
9000a010:	e7c0      	b.n	90009f94 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000a012:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a014:	e7db      	b.n	90009fce <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000a016:	f023 0303 	bic.w	r3, r3, #3
9000a01a:	3304      	adds	r3, #4
9000a01c:	e7d2      	b.n	90009fc4 <JPEG_MDMAInCpltCallback+0x4c>
9000a01e:	bf00      	nop

9000a020 <JPEG_DMA_PollResidualData>:
{
9000a020:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a022:	6802      	ldr	r2, [r0, #0]
9000a024:	2610      	movs	r6, #16
{
9000a026:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a028:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000a02a:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000a02e:	d11d      	bne.n	9000a06c <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a030:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000a032:	06df      	lsls	r7, r3, #27
9000a034:	d51a      	bpl.n	9000a06c <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000a036:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000a038:	69e7      	ldr	r7, [r4, #28]
9000a03a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000a03c:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000a03e:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000a040:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000a042:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000a044:	6a67      	ldr	r7, [r4, #36]	@ 0x24
9000a046:	69e2      	ldr	r2, [r4, #28]
9000a048:	443a      	add	r2, r7
9000a04a:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000a04c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a04e:	69e2      	ldr	r2, [r4, #28]
9000a050:	4402      	add	r2, r0
9000a052:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000a054:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a056:	69e2      	ldr	r2, [r4, #28]
9000a058:	440a      	add	r2, r1
9000a05a:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000a05c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a05e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
9000a060:	3304      	adds	r3, #4
9000a062:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a064:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a066:	4293      	cmp	r3, r2
9000a068:	d021      	beq.n	9000a0ae <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a06a:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000a06c:	3e01      	subs	r6, #1
9000a06e:	d1db      	bne.n	9000a028 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000a070:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a072:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000a074:	06d8      	lsls	r0, r3, #27
9000a076:	d501      	bpl.n	9000a07c <JPEG_DMA_PollResidualData+0x5c>
9000a078:	048b      	lsls	r3, r1, #18
9000a07a:	d417      	bmi.n	9000a0ac <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a07c:	6813      	ldr	r3, [r2, #0]
9000a07e:	f023 0301 	bic.w	r3, r3, #1
9000a082:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000a084:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a086:	b9eb      	cbnz	r3, 9000a0c4 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000a088:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000a08a:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a08c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a08e:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a090:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a094:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a098:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a09c:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a09e:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a0a0:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a0a2:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a0a6:	d00a      	beq.n	9000a0be <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a0a8:	f7ff ff4e 	bl	90009f48 <HAL_JPEG_EncodeCpltCallback>
}
9000a0ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a0ae:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a0b0:	4620      	mov	r0, r4
9000a0b2:	69e1      	ldr	r1, [r4, #28]
9000a0b4:	f7f7 ff72 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000a0b8:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000a0ba:	6265      	str	r5, [r4, #36]	@ 0x24
9000a0bc:	e7d6      	b.n	9000a06c <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a0be:	f7f8 f81b 	bl	900020f8 <HAL_JPEG_DecodeCpltCallback>
}
9000a0c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a0c4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a0c6:	4620      	mov	r0, r4
9000a0c8:	69e1      	ldr	r1, [r4, #28]
9000a0ca:	f7f7 ff67 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a0ce:	2300      	movs	r3, #0
9000a0d0:	6263      	str	r3, [r4, #36]	@ 0x24
9000a0d2:	e7d9      	b.n	9000a088 <JPEG_DMA_PollResidualData+0x68>

9000a0d4 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000a0d4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a0d6:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
9000a0da:	d06f      	beq.n	9000a1bc <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a0dc:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a0de:	f003 030c 	and.w	r3, r3, #12
9000a0e2:	2b0c      	cmp	r3, #12
{
9000a0e4:	b530      	push	{r4, r5, lr}
9000a0e6:	4604      	mov	r4, r0
9000a0e8:	b083      	sub	sp, #12
9000a0ea:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a0ec:	d007      	beq.n	9000a0fe <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a0ee:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a0f0:	f003 030c 	and.w	r3, r3, #12
9000a0f4:	2b08      	cmp	r3, #8
9000a0f6:	d035      	beq.n	9000a164 <HAL_JPEG_Resume+0x90>
  return HAL_OK;
9000a0f8:	2000      	movs	r0, #0
}
9000a0fa:	b003      	add	sp, #12
9000a0fc:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a0fe:	07c8      	lsls	r0, r1, #31
9000a100:	d415      	bmi.n	9000a12e <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a102:	07a9      	lsls	r1, r5, #30
9000a104:	d5f8      	bpl.n	9000a0f8 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a106:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a108:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000a10c:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000a10e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a110:	041a      	lsls	r2, r3, #16
9000a112:	d44f      	bmi.n	9000a1b4 <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a114:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000a116:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
9000a118:	2a00      	cmp	r2, #0
9000a11a:	d13a      	bne.n	9000a192 <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a11c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a11e:	2206      	movs	r2, #6
    return HAL_ERROR;
9000a120:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a122:	f043 0304 	orr.w	r3, r3, #4
9000a126:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a128:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
9000a12c:	e7e5      	b.n	9000a0fa <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a12e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a130:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a132:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a136:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a138:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
9000a13a:	2a00      	cmp	r2, #0
9000a13c:	d0ee      	beq.n	9000a11c <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000a13e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a140:	fbb3 f1f2 	udiv	r1, r3, r2
9000a144:	fb02 3211 	mls	r2, r2, r1, r3
9000a148:	1a9b      	subs	r3, r3, r2
9000a14a:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
9000a14c:	2b00      	cmp	r3, #0
9000a14e:	d0d8      	beq.n	9000a102 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a150:	6822      	ldr	r2, [r4, #0]
9000a152:	2101      	movs	r1, #1
9000a154:	3240      	adds	r2, #64	@ 0x40
9000a156:	9100      	str	r1, [sp, #0]
9000a158:	69a1      	ldr	r1, [r4, #24]
9000a15a:	f001 f811 	bl	9000b180 <HAL_MDMA_Start_IT>
9000a15e:	2800      	cmp	r0, #0
9000a160:	d0cf      	beq.n	9000a102 <HAL_JPEG_Resume+0x2e>
9000a162:	e7db      	b.n	9000a11c <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a164:	f011 0101 	ands.w	r1, r1, #1
9000a168:	d011      	beq.n	9000a18e <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a16a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a16c:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000a16e:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a170:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000a174:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a176:	07ab      	lsls	r3, r5, #30
9000a178:	d504      	bpl.n	9000a184 <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a17a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000a17c:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a17e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000a182:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000a184:	6822      	ldr	r2, [r4, #0]
9000a186:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a188:	430b      	orrs	r3, r1
9000a18a:	6313      	str	r3, [r2, #48]	@ 0x30
9000a18c:	e7b4      	b.n	9000a0f8 <HAL_JPEG_Resume+0x24>
9000a18e:	2228      	movs	r2, #40	@ 0x28
9000a190:	e7f1      	b.n	9000a176 <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a192:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a194:	fbb3 f1f2 	udiv	r1, r3, r2
9000a198:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a19c:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a19e:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a1a0:	2201      	movs	r2, #1
9000a1a2:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a1a4:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a1a6:	9200      	str	r2, [sp, #0]
9000a1a8:	69e2      	ldr	r2, [r4, #28]
9000a1aa:	f000 ffe9 	bl	9000b180 <HAL_MDMA_Start_IT>
9000a1ae:	2800      	cmp	r0, #0
9000a1b0:	d0a2      	beq.n	9000a0f8 <HAL_JPEG_Resume+0x24>
9000a1b2:	e7b3      	b.n	9000a11c <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000a1b4:	4620      	mov	r0, r4
9000a1b6:	f7ff ff33 	bl	9000a020 <JPEG_DMA_PollResidualData>
9000a1ba:	e79d      	b.n	9000a0f8 <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
9000a1bc:	2001      	movs	r0, #1
}
9000a1be:	4770      	bx	lr

9000a1c0 <JPEG_MDMAOutCpltCallback>:
{
9000a1c0:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a1c2:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000a1c4:	f248 010c 	movw	r1, #32780	@ 0x800c
{
9000a1c8:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a1ca:	6823      	ldr	r3, [r4, #0]
9000a1cc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a1ce:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a1d2:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000a1d4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a1d6:	400a      	ands	r2, r1
9000a1d8:	2a0c      	cmp	r2, #12
9000a1da:	d001      	beq.n	9000a1e0 <JPEG_MDMAOutCpltCallback+0x20>
}
9000a1dc:	b003      	add	sp, #12
9000a1de:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000a1e0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a1e2:	0692      	lsls	r2, r2, #26
9000a1e4:	d505      	bpl.n	9000a1f2 <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a1e6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a1e8:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a1ec:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000a1ee:	b003      	add	sp, #12
9000a1f0:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a1f2:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a1f4:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a1f6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a1f8:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a1fa:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a1fc:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000a200:	1a9b      	subs	r3, r3, r2
9000a202:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a204:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a206:	f7f7 fec9 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a20a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a20c:	049b      	lsls	r3, r3, #18
9000a20e:	d501      	bpl.n	9000a214 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a210:	6823      	ldr	r3, [r4, #0]
9000a212:	e7e8      	b.n	9000a1e6 <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a214:	6821      	ldr	r1, [r4, #0]
9000a216:	2501      	movs	r5, #1
9000a218:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a21a:	69e2      	ldr	r2, [r4, #28]
9000a21c:	3144      	adds	r1, #68	@ 0x44
9000a21e:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000a220:	9500      	str	r5, [sp, #0]
9000a222:	f000 ffad 	bl	9000b180 <HAL_MDMA_Start_IT>
9000a226:	2800      	cmp	r0, #0
9000a228:	d0f2      	beq.n	9000a210 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a22a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a22c:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000a22e:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a230:	f043 0304 	orr.w	r3, r3, #4
9000a234:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a236:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000a23a:	f7f7 ff5b 	bl	900020f4 <HAL_JPEG_ErrorCallback>
          return;
9000a23e:	e7cd      	b.n	9000a1dc <JPEG_MDMAOutCpltCallback+0x1c>

9000a240 <JPEG_MDMAOutAbortCallback>:
{
9000a240:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a242:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000a244:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a246:	041a      	lsls	r2, r3, #16
9000a248:	d400      	bmi.n	9000a24c <JPEG_MDMAOutAbortCallback+0xc>
}
9000a24a:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a24c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000a24e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a250:	681b      	ldr	r3, [r3, #0]
9000a252:	695b      	ldr	r3, [r3, #20]
9000a254:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000a258:	1ad3      	subs	r3, r2, r3
9000a25a:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a25c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a25e:	429a      	cmp	r2, r3
9000a260:	d025      	beq.n	9000a2ae <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000a262:	6822      	ldr	r2, [r4, #0]
9000a264:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000a266:	f015 0510 	ands.w	r5, r5, #16
9000a26a:	d118      	bne.n	9000a29e <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000a26c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a26e:	bb4b      	cbnz	r3, 9000a2c4 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a270:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000a272:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a274:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a276:	f023 0301 	bic.w	r3, r3, #1
9000a27a:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000a27c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a27e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a280:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a284:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a288:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a28c:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a28e:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a290:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a292:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a296:	d012      	beq.n	9000a2be <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a298:	f7ff fe56 	bl	90009f48 <HAL_JPEG_EncodeCpltCallback>
}
9000a29c:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a29e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a2a0:	049b      	lsls	r3, r3, #18
9000a2a2:	d4d2      	bmi.n	9000a24a <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000a2a4:	4620      	mov	r0, r4
}
9000a2a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000a2aa:	f7ff beb9 	b.w	9000a020 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a2ae:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a2b0:	4620      	mov	r0, r4
9000a2b2:	69e1      	ldr	r1, [r4, #28]
9000a2b4:	f7f7 fe72 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000a2b8:	2300      	movs	r3, #0
9000a2ba:	6263      	str	r3, [r4, #36]	@ 0x24
9000a2bc:	e7d1      	b.n	9000a262 <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a2be:	f7f7 ff1b 	bl	900020f8 <HAL_JPEG_DecodeCpltCallback>
}
9000a2c2:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a2c4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a2c6:	4620      	mov	r0, r4
9000a2c8:	69e1      	ldr	r1, [r4, #28]
9000a2ca:	f7f7 fe67 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a2ce:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a2d0:	6265      	str	r5, [r4, #36]	@ 0x24
9000a2d2:	e7cd      	b.n	9000a270 <JPEG_MDMAOutAbortCallback+0x30>

9000a2d4 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a2d4:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a2d6:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a2d8:	f002 0203 	and.w	r2, r2, #3
9000a2dc:	2a02      	cmp	r2, #2
{
9000a2de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000a2e2:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a2e4:	d01e      	beq.n	9000a324 <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000a2e6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a2e8:	04d7      	lsls	r7, r2, #19
9000a2ea:	d407      	bmi.n	9000a2fc <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000a2ec:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a2ee:	0796      	lsls	r6, r2, #30
9000a2f0:	f100 811b 	bmi.w	9000a52a <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000a2f4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a2f6:	0750      	lsls	r0, r2, #29
9000a2f8:	f100 81cc 	bmi.w	9000a694 <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a2fc:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000a2fe:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000a302:	d107      	bne.n	9000a314 <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000a304:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
9000a306:	f016 0608 	ands.w	r6, r6, #8
9000a30a:	d14a      	bne.n	9000a3a2 <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a30c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a30e:	06d2      	lsls	r2, r2, #27
9000a310:	f100 81fe 	bmi.w	9000a710 <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a314:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a316:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000a31a:	2a20      	cmp	r2, #32
9000a31c:	d019      	beq.n	9000a352 <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
9000a31e:	2000      	movs	r0, #0
}
9000a320:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a324:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a326:	0652      	lsls	r2, r2, #25
9000a328:	d5dd      	bpl.n	9000a2e6 <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000a32a:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000a32c:	4629      	mov	r1, r5
9000a32e:	f7ff fb1f 	bl	90009970 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000a332:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a334:	4629      	mov	r1, r5
9000a336:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000a338:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a33a:	f7f7 fde1 	bl	90001f00 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000a33e:	6823      	ldr	r3, [r4, #0]
9000a340:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a342:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000a346:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000a348:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a34a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000a34e:	639a      	str	r2, [r3, #56]	@ 0x38
9000a350:	e7c9      	b.n	9000a2e6 <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a352:	681a      	ldr	r2, [r3, #0]
9000a354:	f022 0201 	bic.w	r2, r2, #1
9000a358:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a35a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a35c:	f002 020c 	and.w	r2, r2, #12
9000a360:	2a08      	cmp	r2, #8
9000a362:	f000 8201 	beq.w	9000a768 <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a366:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a368:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a36c:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000a36e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a370:	2b00      	cmp	r3, #0
9000a372:	f040 81fe 	bne.w	9000a772 <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
9000a376:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000a378:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a37a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a37c:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a37e:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a382:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a386:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a38a:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a38c:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a38e:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a390:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a394:	f000 81e5 	beq.w	9000a762 <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a398:	f7ff fdd6 	bl	90009f48 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000a39c:	2001      	movs	r0, #1
}
9000a39e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000a3a2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a3a4:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000a3a6:	3220      	adds	r2, #32
9000a3a8:	4296      	cmp	r6, r2
9000a3aa:	f0c0 8200 	bcc.w	9000a7ae <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
9000a3ae:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a3b0:	69e1      	ldr	r1, [r4, #28]
9000a3b2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a3b4:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a3b6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3b8:	69e2      	ldr	r2, [r4, #28]
9000a3ba:	440a      	add	r2, r1
9000a3bc:	0a19      	lsrs	r1, r3, #8
9000a3be:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a3c0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3c2:	69e2      	ldr	r2, [r4, #28]
9000a3c4:	440a      	add	r2, r1
9000a3c6:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a3c8:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a3ca:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a3cc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3ce:	69e2      	ldr	r2, [r4, #28]
9000a3d0:	440a      	add	r2, r1
9000a3d2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a3d4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a3d6:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a3d8:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a3da:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a3dc:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a3de:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a3e0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a3e2:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a3e4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3e6:	69e2      	ldr	r2, [r4, #28]
9000a3e8:	440a      	add	r2, r1
9000a3ea:	0a19      	lsrs	r1, r3, #8
9000a3ec:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a3ee:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3f0:	69e2      	ldr	r2, [r4, #28]
9000a3f2:	440a      	add	r2, r1
9000a3f4:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a3f6:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a3f8:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a3fa:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3fc:	69e2      	ldr	r2, [r4, #28]
9000a3fe:	440a      	add	r2, r1
9000a400:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a402:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a404:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a406:	3304      	adds	r3, #4
9000a408:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a40a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a40c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a40e:	69e1      	ldr	r1, [r4, #28]
9000a410:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a412:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a414:	69e2      	ldr	r2, [r4, #28]
9000a416:	440a      	add	r2, r1
9000a418:	0a19      	lsrs	r1, r3, #8
9000a41a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a41c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a41e:	69e2      	ldr	r2, [r4, #28]
9000a420:	440a      	add	r2, r1
9000a422:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a424:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a426:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a428:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a42a:	69e2      	ldr	r2, [r4, #28]
9000a42c:	440a      	add	r2, r1
9000a42e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a430:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a432:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a434:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a436:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a438:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a43a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a43c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a43e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a440:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a442:	69e2      	ldr	r2, [r4, #28]
9000a444:	440a      	add	r2, r1
9000a446:	0a19      	lsrs	r1, r3, #8
9000a448:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a44a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a44c:	69e2      	ldr	r2, [r4, #28]
9000a44e:	440a      	add	r2, r1
9000a450:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a452:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a454:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a456:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a458:	69e2      	ldr	r2, [r4, #28]
9000a45a:	440a      	add	r2, r1
9000a45c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a45e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a460:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a462:	3304      	adds	r3, #4
9000a464:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a466:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a468:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a46a:	69e1      	ldr	r1, [r4, #28]
9000a46c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a46e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a470:	69e2      	ldr	r2, [r4, #28]
9000a472:	440a      	add	r2, r1
9000a474:	0a19      	lsrs	r1, r3, #8
9000a476:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a478:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a47a:	69e2      	ldr	r2, [r4, #28]
9000a47c:	440a      	add	r2, r1
9000a47e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a480:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a482:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a484:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a486:	69e2      	ldr	r2, [r4, #28]
9000a488:	440a      	add	r2, r1
9000a48a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a48c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a48e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a490:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a492:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a494:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a496:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a498:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a49a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a49c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a49e:	69e2      	ldr	r2, [r4, #28]
9000a4a0:	440a      	add	r2, r1
9000a4a2:	0a19      	lsrs	r1, r3, #8
9000a4a4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a4a6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a4a8:	69e2      	ldr	r2, [r4, #28]
9000a4aa:	440a      	add	r2, r1
9000a4ac:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a4ae:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a4b0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a4b2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a4b4:	69e2      	ldr	r2, [r4, #28]
9000a4b6:	440a      	add	r2, r1
9000a4b8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a4ba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a4bc:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a4be:	3304      	adds	r3, #4
9000a4c0:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a4c2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a4c4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a4c6:	69e1      	ldr	r1, [r4, #28]
9000a4c8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a4ca:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a4cc:	69e2      	ldr	r2, [r4, #28]
9000a4ce:	440a      	add	r2, r1
9000a4d0:	0a19      	lsrs	r1, r3, #8
9000a4d2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a4d4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a4d6:	69e2      	ldr	r2, [r4, #28]
9000a4d8:	440a      	add	r2, r1
9000a4da:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a4dc:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a4de:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a4e0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a4e2:	69e2      	ldr	r2, [r4, #28]
9000a4e4:	440a      	add	r2, r1
9000a4e6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a4e8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a4ea:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a4ec:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a4ee:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a4f0:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a4f2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a4f4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a4f6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a4f8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a4fa:	69e2      	ldr	r2, [r4, #28]
9000a4fc:	440a      	add	r2, r1
9000a4fe:	0a19      	lsrs	r1, r3, #8
9000a500:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a502:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a504:	69e2      	ldr	r2, [r4, #28]
9000a506:	440a      	add	r2, r1
9000a508:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a50a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a50c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a50e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a510:	69e2      	ldr	r2, [r4, #28]
9000a512:	440a      	add	r2, r1
9000a514:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a516:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a518:	3304      	adds	r3, #4
9000a51a:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a51c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a51e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a520:	429a      	cmp	r2, r3
9000a522:	f000 8258 	beq.w	9000a9d6 <JPEG_Process+0x702>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a526:	6823      	ldr	r3, [r4, #0]
9000a528:	e6f4      	b.n	9000a314 <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000a52a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a52c:	2a00      	cmp	r2, #0
9000a52e:	f000 8128 	beq.w	9000a782 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a532:	6a21      	ldr	r1, [r4, #32]
9000a534:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a536:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a538:	f240 81b9 	bls.w	9000a8ae <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a53c:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a53e:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000a540:	04cd      	lsls	r5, r1, #19
9000a542:	f53f aedb 	bmi.w	9000a2fc <JPEG_Process+0x28>
9000a546:	2a00      	cmp	r2, #0
9000a548:	f43f aed8 	beq.w	9000a2fc <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000a54c:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000a54e:	ea4f 0092 	mov.w	r0, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000a552:	f200 8248 	bhi.w	9000a9e6 <JPEG_Process+0x712>
      if (nb_words > 0UL)
9000a556:	2a03      	cmp	r2, #3
9000a558:	f240 82c0 	bls.w	9000aadc <JPEG_Process+0x808>
          input_count = hjpeg->JpegInCount;
9000a55c:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a55e:	2801      	cmp	r0, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a560:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a562:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a566:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a568:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a56a:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a56c:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a570:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a572:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a576:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a57a:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a57e:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a580:	6a21      	ldr	r1, [r4, #32]
9000a582:	f101 0104 	add.w	r1, r1, #4
9000a586:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a588:	f43f aeb8 	beq.w	9000a2fc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a58c:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a58e:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a590:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a594:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a596:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a598:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a59a:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a59e:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a5a0:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a5a4:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a5a8:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a5ac:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a5ae:	6a21      	ldr	r1, [r4, #32]
9000a5b0:	f101 0104 	add.w	r1, r1, #4
9000a5b4:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a5b6:	f43f aea1 	beq.w	9000a2fc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a5ba:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a5bc:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a5be:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a5c2:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a5c4:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a5c6:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a5c8:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a5cc:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a5ce:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a5d2:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a5d6:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a5da:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a5dc:	6a21      	ldr	r1, [r4, #32]
9000a5de:	f101 0104 	add.w	r1, r1, #4
9000a5e2:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a5e4:	f43f ae8a 	beq.w	9000a2fc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a5e8:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a5ea:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a5ec:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a5f0:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a5f2:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a5f4:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a5f6:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a5fa:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a5fc:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a600:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a604:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a608:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a60a:	6a21      	ldr	r1, [r4, #32]
9000a60c:	f101 0104 	add.w	r1, r1, #4
9000a610:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a612:	f43f ae73 	beq.w	9000a2fc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a616:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a618:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a61a:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a61e:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a620:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a622:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a624:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a628:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a62a:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a62e:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a632:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a636:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a638:	6a21      	ldr	r1, [r4, #32]
9000a63a:	f101 0104 	add.w	r1, r1, #4
9000a63e:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a640:	f43f ae5c 	beq.w	9000a2fc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a644:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a646:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a648:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a64c:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a64e:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a650:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a652:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a656:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a658:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a65c:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a660:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a664:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a666:	6a21      	ldr	r1, [r4, #32]
9000a668:	f101 0104 	add.w	r1, r1, #4
9000a66c:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a66e:	f47f ae45 	bne.w	9000a2fc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a672:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a674:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a676:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a678:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a67a:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a67c:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a67e:	7849      	ldrb	r1, [r1, #1]
9000a680:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000a684:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a686:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a68a:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a68c:	6a22      	ldr	r2, [r4, #32]
9000a68e:	3204      	adds	r2, #4
9000a690:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000a692:	e633      	b.n	9000a2fc <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000a694:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a696:	2a00      	cmp	r2, #0
9000a698:	d073      	beq.n	9000a782 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a69a:	6a21      	ldr	r1, [r4, #32]
9000a69c:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a69e:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a6a0:	f200 8182 	bhi.w	9000a9a8 <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000a6a4:	428a      	cmp	r2, r1
9000a6a6:	f040 8104 	bne.w	9000a8b2 <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a6aa:	6a21      	ldr	r1, [r4, #32]
9000a6ac:	4620      	mov	r0, r4
9000a6ae:	f7f7 fc55 	bl	90001f5c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000a6b2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a6b4:	2a04      	cmp	r2, #4
9000a6b6:	d902      	bls.n	9000a6be <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000a6b8:	f022 0203 	bic.w	r2, r2, #3
9000a6bc:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000a6be:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a6c0:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000a6c2:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a6c4:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000a6c6:	04c9      	lsls	r1, r1, #19
9000a6c8:	f53f ae18 	bmi.w	9000a2fc <JPEG_Process+0x28>
9000a6cc:	2a00      	cmp	r2, #0
9000a6ce:	f43f ae15 	beq.w	9000a2fc <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000a6d2:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a6d4:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
9000a6d6:	f040 8177 	bne.w	9000a9c8 <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a6da:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a6dc:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000a6de:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a6e0:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
9000a6e2:	f105 0501 	add.w	r5, r5, #1
9000a6e6:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a6e8:	d010      	beq.n	9000a70c <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a6ea:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a6ec:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a6ee:	5d45      	ldrb	r5, [r0, r5]
9000a6f0:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
9000a6f4:	6a25      	ldr	r5, [r4, #32]
9000a6f6:	f105 0501 	add.w	r5, r5, #1
9000a6fa:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a6fc:	d106      	bne.n	9000a70c <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a6fe:	6a22      	ldr	r2, [r4, #32]
9000a700:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
9000a702:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a704:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000a708:	3201      	adds	r2, #1
9000a70a:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000a70c:	6419      	str	r1, [r3, #64]	@ 0x40
9000a70e:	e5f5      	b.n	9000a2fc <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000a710:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a712:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000a714:	3204      	adds	r2, #4
9000a716:	4295      	cmp	r5, r2
9000a718:	f0c0 80cd 	bcc.w	9000a8b6 <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
9000a71c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a71e:	69e1      	ldr	r1, [r4, #28]
9000a720:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a722:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a724:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a726:	69e2      	ldr	r2, [r4, #28]
9000a728:	440a      	add	r2, r1
9000a72a:	0a19      	lsrs	r1, r3, #8
9000a72c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a72e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a730:	69e2      	ldr	r2, [r4, #28]
9000a732:	440a      	add	r2, r1
9000a734:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a736:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a738:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a73a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a73c:	69e2      	ldr	r2, [r4, #28]
9000a73e:	440a      	add	r2, r1
9000a740:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a742:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a744:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
9000a746:	3304      	adds	r3, #4
9000a748:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a74a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a74c:	429a      	cmp	r2, r3
9000a74e:	f47f aeea 	bne.w	9000a526 <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a752:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a754:	4620      	mov	r0, r4
9000a756:	69e1      	ldr	r1, [r4, #28]
9000a758:	f7f7 fc20 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a75c:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a75e:	6266      	str	r6, [r4, #36]	@ 0x24
9000a760:	e5d8      	b.n	9000a314 <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a762:	f7f7 fcc9 	bl	900020f8 <HAL_JPEG_DecodeCpltCallback>
9000a766:	e619      	b.n	9000a39c <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a768:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a76a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a76e:	631a      	str	r2, [r3, #48]	@ 0x30
9000a770:	e5f9      	b.n	9000a366 <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a772:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a774:	4620      	mov	r0, r4
9000a776:	69e1      	ldr	r1, [r4, #28]
9000a778:	f7f7 fc10 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a77c:	2300      	movs	r3, #0
9000a77e:	6263      	str	r3, [r4, #36]	@ 0x24
9000a780:	e5f9      	b.n	9000a376 <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a782:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a784:	f002 020c 	and.w	r2, r2, #12
9000a788:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a78a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a78c:	f000 811e 	beq.w	9000a9cc <JPEG_Process+0x6f8>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a790:	f002 020c 	and.w	r2, r2, #12
9000a794:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a796:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a798:	f47f adb0 	bne.w	9000a2fc <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a79c:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000a7a0:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a7a2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a7a4:	f022 0206 	bic.w	r2, r2, #6
9000a7a8:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a7aa:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a7ac:	e5a6      	b.n	9000a2fc <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a7ae:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a7b0:	4296      	cmp	r6, r2
9000a7b2:	f67f adaf 	bls.w	9000a314 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a7b6:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a7b8:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000a7ba:	0880      	lsrs	r0, r0, #2
9000a7bc:	d020      	beq.n	9000a800 <JPEG_Process+0x52c>
9000a7be:	4629      	mov	r1, r5
9000a7c0:	e000      	b.n	9000a7c4 <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
9000a7c2:	6823      	ldr	r3, [r4, #0]
9000a7c4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000a7c6:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a7c8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a7ca:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a7cc:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a7ce:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a7d0:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a7d2:	69e2      	ldr	r2, [r4, #28]
9000a7d4:	4432      	add	r2, r6
9000a7d6:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000a7da:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a7dc:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a7de:	69e2      	ldr	r2, [r4, #28]
9000a7e0:	4432      	add	r2, r6
9000a7e2:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a7e6:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a7ea:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a7ec:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a7ee:	69e2      	ldr	r2, [r4, #28]
9000a7f0:	4432      	add	r2, r6
9000a7f2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a7f4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a7f6:	f103 0304 	add.w	r3, r3, #4
9000a7fa:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000a7fc:	d1e1      	bne.n	9000a7c2 <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a7fe:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000a800:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a802:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a804:	429e      	cmp	r6, r3
9000a806:	f000 8161 	beq.w	9000aacc <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a80a:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a80e:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a810:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000a814:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000a816:	d00e      	beq.n	9000a836 <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a818:	f005 0303 	and.w	r3, r5, #3
9000a81c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a81e:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a820:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a822:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a824:	fa27 f303 	lsr.w	r3, r7, r3
9000a828:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a82a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a82c:	69e1      	ldr	r1, [r4, #28]
9000a82e:	f103 0301 	add.w	r3, r3, #1
9000a832:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a834:	d1f0      	bne.n	9000a818 <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
9000a836:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a83a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a83c:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000a83e:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a842:	f7f7 fbab 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a846:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a848:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
9000a84a:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a84c:	f63f ae6b 	bhi.w	9000a526 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a850:	ea4f 02c6 	mov.w	r2, r6, lsl #3
9000a854:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a856:	69e0      	ldr	r0, [r4, #28]
9000a858:	fa27 f502 	lsr.w	r5, r7, r2
9000a85c:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000a85e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a860:	f101 0101 	add.w	r1, r1, #1
9000a864:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a866:	f43f ae5e 	beq.w	9000a526 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a86a:	f102 0108 	add.w	r1, r2, #8
9000a86e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a870:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a872:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a874:	fa27 f101 	lsr.w	r1, r7, r1
9000a878:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000a87a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a87c:	f101 0101 	add.w	r1, r1, #1
9000a880:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a882:	f43f ae50 	beq.w	9000a526 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a886:	3210      	adds	r2, #16
9000a888:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a88a:	69e0      	ldr	r0, [r4, #28]
9000a88c:	fa27 f202 	lsr.w	r2, r7, r2
9000a890:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000a892:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a894:	3201      	adds	r2, #1
9000a896:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a898:	2e00      	cmp	r6, #0
9000a89a:	f47f ae44 	bne.w	9000a526 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a89e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a8a0:	0e3f      	lsrs	r7, r7, #24
9000a8a2:	69e2      	ldr	r2, [r4, #28]
9000a8a4:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000a8a6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a8a8:	3301      	adds	r3, #1
9000a8aa:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a8ac:	e63b      	b.n	9000a526 <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000a8ae:	428a      	cmp	r2, r1
9000a8b0:	d07c      	beq.n	9000a9ac <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a8b2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a8b4:	e522      	b.n	9000a2fc <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a8b6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a8b8:	4295      	cmp	r5, r2
9000a8ba:	f67f ad2b 	bls.w	9000a314 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a8be:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a8c0:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000a8c2:	0880      	lsrs	r0, r0, #2
9000a8c4:	d020      	beq.n	9000a908 <JPEG_Process+0x634>
9000a8c6:	4631      	mov	r1, r6
9000a8c8:	e000      	b.n	9000a8cc <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
9000a8ca:	6823      	ldr	r3, [r4, #0]
9000a8cc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000a8ce:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a8d0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a8d2:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a8d4:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a8d6:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a8d8:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a8da:	69e2      	ldr	r2, [r4, #28]
9000a8dc:	442a      	add	r2, r5
9000a8de:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000a8e2:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a8e4:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a8e6:	69e2      	ldr	r2, [r4, #28]
9000a8e8:	442a      	add	r2, r5
9000a8ea:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a8ee:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a8f2:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a8f4:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a8f6:	69e2      	ldr	r2, [r4, #28]
9000a8f8:	442a      	add	r2, r5
9000a8fa:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a8fc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a8fe:	f103 0304 	add.w	r3, r3, #4
9000a902:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000a904:	d1e1      	bne.n	9000a8ca <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a906:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000a908:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a90a:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a90c:	429d      	cmp	r5, r3
9000a90e:	f000 80dd 	beq.w	9000aacc <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a912:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a916:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a918:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000a91c:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000a91e:	d00e      	beq.n	9000a93e <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a920:	f006 0303 	and.w	r3, r6, #3
9000a924:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a926:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a928:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a92a:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a92c:	fa27 f303 	lsr.w	r3, r7, r3
9000a930:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a932:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a934:	69e1      	ldr	r1, [r4, #28]
9000a936:	f103 0301 	add.w	r3, r3, #1
9000a93a:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a93c:	d1f0      	bne.n	9000a920 <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
9000a93e:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a942:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a944:	4620      	mov	r0, r4
9000a946:	f7f7 fb29 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
9000a94a:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
9000a94e:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a950:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
9000a952:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a954:	f63f ade7 	bhi.w	9000a526 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a958:	ea4f 02c3 	mov.w	r2, r3, lsl #3
9000a95c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a95e:	69e0      	ldr	r0, [r4, #28]
9000a960:	fa27 f502 	lsr.w	r5, r7, r2
9000a964:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000a966:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a968:	f101 0101 	add.w	r1, r1, #1
9000a96c:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a96e:	f43f adda 	beq.w	9000a526 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a972:	f102 0108 	add.w	r1, r2, #8
9000a976:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a978:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a97a:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a97c:	fa27 f101 	lsr.w	r1, r7, r1
9000a980:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000a982:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a984:	f101 0101 	add.w	r1, r1, #1
9000a988:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a98a:	f43f adcc 	beq.w	9000a526 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a98e:	3210      	adds	r2, #16
9000a990:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a992:	69e0      	ldr	r0, [r4, #28]
9000a994:	fa27 f202 	lsr.w	r2, r7, r2
9000a998:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000a99a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a99c:	3201      	adds	r2, #1
9000a99e:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a9a0:	2b00      	cmp	r3, #0
9000a9a2:	f43f af7c 	beq.w	9000a89e <JPEG_Process+0x5ca>
9000a9a6:	e5be      	b.n	9000a526 <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a9a8:	1a52      	subs	r2, r2, r1
9000a9aa:	e68b      	b.n	9000a6c4 <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a9ac:	6a21      	ldr	r1, [r4, #32]
9000a9ae:	4620      	mov	r0, r4
9000a9b0:	f7f7 fad4 	bl	90001f5c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000a9b4:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a9b6:	2a04      	cmp	r2, #4
9000a9b8:	d902      	bls.n	9000a9c0 <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000a9ba:	f022 0203 	bic.w	r2, r2, #3
9000a9be:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000a9c0:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a9c2:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000a9c4:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000a9c6:	e5ba      	b.n	9000a53e <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
9000a9c8:	6a22      	ldr	r2, [r4, #32]
9000a9ca:	e653      	b.n	9000a674 <JPEG_Process+0x3a0>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a9cc:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000a9d0:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a9d2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a9d4:	e492      	b.n	9000a2fc <JPEG_Process+0x28>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a9d6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a9d8:	4620      	mov	r0, r4
9000a9da:	69e1      	ldr	r1, [r4, #28]
9000a9dc:	f7f7 fade 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a9e0:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a9e2:	6265      	str	r5, [r4, #36]	@ 0x24
9000a9e4:	e496      	b.n	9000a314 <JPEG_Process+0x40>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a9e6:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000a9e8:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a9ea:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a9ec:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a9ee:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a9f0:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a9f2:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a9f4:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a9f6:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a9fa:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a9fc:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aa00:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000aa02:	6a21      	ldr	r1, [r4, #32]
9000aa04:	3104      	adds	r1, #4
9000aa06:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000aa08:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa0a:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aa0c:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa0e:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa10:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa12:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000aa14:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa16:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000aa1a:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa1c:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aa20:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000aa22:	6a21      	ldr	r1, [r4, #32]
9000aa24:	3104      	adds	r1, #4
9000aa26:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000aa28:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa2a:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aa2c:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa2e:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa30:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa32:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000aa34:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa36:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000aa3a:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa3c:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aa40:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000aa42:	6a21      	ldr	r1, [r4, #32]
9000aa44:	3104      	adds	r1, #4
9000aa46:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000aa48:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa4a:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aa4c:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa4e:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa50:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa52:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000aa54:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa56:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000aa5a:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa5c:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aa60:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000aa62:	6a21      	ldr	r1, [r4, #32]
9000aa64:	3104      	adds	r1, #4
9000aa66:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000aa68:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa6a:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aa6c:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa6e:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa70:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa72:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000aa74:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa76:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000aa7a:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa7c:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aa80:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000aa82:	6a21      	ldr	r1, [r4, #32]
9000aa84:	3104      	adds	r1, #4
9000aa86:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000aa88:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa8a:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aa8c:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa8e:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa90:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa92:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000aa94:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aa96:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000aa9a:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aa9c:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aaa0:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000aaa2:	6a21      	ldr	r1, [r4, #32]
9000aaa4:	3104      	adds	r1, #4
9000aaa6:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000aaa8:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aaaa:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aaac:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aaae:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aab0:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aab2:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000aab4:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000aab6:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000aaba:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000aabc:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aac0:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000aac2:	6a21      	ldr	r1, [r4, #32]
9000aac4:	3104      	adds	r1, #4
9000aac6:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000aac8:	6a20      	ldr	r0, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000aaca:	e5d3      	b.n	9000a674 <JPEG_Process+0x3a0>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aacc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aace:	4620      	mov	r0, r4
9000aad0:	f7f7 fa64 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000aad4:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000aad6:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000aad8:	6262      	str	r2, [r4, #36]	@ 0x24
9000aada:	e41b      	b.n	9000a314 <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000aadc:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000aade:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000aae0:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000aae2:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000aae4:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000aae8:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000aaea:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000aaec:	f43f ae0e 	beq.w	9000a70c <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000aaf0:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000aaf2:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000aaf4:	5c28      	ldrb	r0, [r5, r0]
9000aaf6:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000aafa:	6a20      	ldr	r0, [r4, #32]
9000aafc:	f100 0001 	add.w	r0, r0, #1
9000ab00:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000ab02:	f47f ae03 	bne.w	9000a70c <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ab06:	6a22      	ldr	r2, [r4, #32]
9000ab08:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000ab0a:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ab0c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000ab10:	3201      	adds	r2, #1
9000ab12:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000ab14:	e5fa      	b.n	9000a70c <JPEG_Process+0x438>
9000ab16:	bf00      	nop

9000ab18 <HAL_JPEG_IRQHandler>:
{
9000ab18:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
9000ab1a:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
9000ab1e:	3b03      	subs	r3, #3
9000ab20:	2b01      	cmp	r3, #1
9000ab22:	d900      	bls.n	9000ab26 <HAL_JPEG_IRQHandler+0xe>
}
9000ab24:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000ab26:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000ab28:	4604      	mov	r4, r0
9000ab2a:	f003 030c 	and.w	r3, r3, #12
9000ab2e:	2b08      	cmp	r3, #8
9000ab30:	d050      	beq.n	9000abd4 <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000ab32:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000ab34:	f003 030c 	and.w	r3, r3, #12
9000ab38:	2b0c      	cmp	r3, #12
9000ab3a:	d1f3      	bne.n	9000ab24 <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab3c:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000ab3e:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ab40:	f002 0203 	and.w	r2, r2, #3
9000ab44:	2a02      	cmp	r2, #2
9000ab46:	d049      	beq.n	9000abdc <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000ab48:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ab4a:	0692      	lsls	r2, r2, #26
9000ab4c:	d5ea      	bpl.n	9000ab24 <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000ab4e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000ab50:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000ab52:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
9000ab56:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000ab58:	681a      	ldr	r2, [r3, #0]
9000ab5a:	f022 0201 	bic.w	r2, r2, #1
9000ab5e:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000ab60:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000ab62:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000ab66:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000ab68:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000ab6a:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000ab6e:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000ab70:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000ab74:	2b02      	cmp	r3, #2
9000ab76:	d054      	beq.n	9000ac22 <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000ab78:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000ab7a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000ab7e:	2b02      	cmp	r3, #2
9000ab80:	d043      	beq.n	9000ac0a <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000ab82:	6803      	ldr	r3, [r0, #0]
9000ab84:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000ab86:	695b      	ldr	r3, [r3, #20]
9000ab88:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000ab8c:	1ad3      	subs	r3, r2, r3
9000ab8e:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000ab90:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000ab92:	429a      	cmp	r2, r3
9000ab94:	d048      	beq.n	9000ac28 <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000ab96:	6822      	ldr	r2, [r4, #0]
9000ab98:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000ab9a:	f015 0510 	ands.w	r5, r5, #16
9000ab9e:	d138      	bne.n	9000ac12 <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
9000aba0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aba2:	2b00      	cmp	r3, #0
9000aba4:	d14b      	bne.n	9000ac3e <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000aba6:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000aba8:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000abaa:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000abac:	f023 0301 	bic.w	r3, r3, #1
9000abb0:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000abb2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000abb4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000abb6:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000abba:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000abbe:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000abc2:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000abc4:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000abc6:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000abc8:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000abcc:	d034      	beq.n	9000ac38 <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000abce:	f7ff f9bb 	bl	90009f48 <HAL_JPEG_EncodeCpltCallback>
}
9000abd2:	bd38      	pop	{r3, r4, r5, pc}
9000abd4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000abd8:	f7ff bb7c 	b.w	9000a2d4 <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000abdc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000abde:	0651      	lsls	r1, r2, #25
9000abe0:	d5b2      	bpl.n	9000ab48 <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000abe2:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000abe4:	4629      	mov	r1, r5
9000abe6:	f7fe fec3 	bl	90009970 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000abea:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000abec:	4629      	mov	r1, r5
9000abee:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000abf0:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000abf2:	f7f7 f985 	bl	90001f00 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000abf6:	6823      	ldr	r3, [r4, #0]
9000abf8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000abfa:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000abfe:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000ac00:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000ac02:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000ac06:	639a      	str	r2, [r3, #56]	@ 0x38
9000ac08:	e79e      	b.n	9000ab48 <HAL_JPEG_IRQHandler+0x30>
}
9000ac0a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000ac0e:	f000 bb63 	b.w	9000b2d8 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000ac12:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000ac14:	049b      	lsls	r3, r3, #18
9000ac16:	d485      	bmi.n	9000ab24 <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
9000ac18:	4620      	mov	r0, r4
}
9000ac1a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000ac1e:	f7ff b9ff 	b.w	9000a020 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000ac22:	f000 fb59 	bl	9000b2d8 <HAL_MDMA_Abort_IT>
9000ac26:	e7a7      	b.n	9000ab78 <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ac28:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ac2a:	4620      	mov	r0, r4
9000ac2c:	69e1      	ldr	r1, [r4, #28]
9000ac2e:	f7f7 f9b5 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000ac32:	2300      	movs	r3, #0
9000ac34:	6263      	str	r3, [r4, #36]	@ 0x24
9000ac36:	e7ae      	b.n	9000ab96 <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000ac38:	f7f7 fa5e 	bl	900020f8 <HAL_JPEG_DecodeCpltCallback>
}
9000ac3c:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ac3e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ac40:	4620      	mov	r0, r4
9000ac42:	69e1      	ldr	r1, [r4, #28]
9000ac44:	f7f7 f9aa 	bl	90001f9c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000ac48:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000ac4a:	6265      	str	r5, [r4, #36]	@ 0x24
9000ac4c:	e7ab      	b.n	9000aba6 <HAL_JPEG_IRQHandler+0x8e>
9000ac4e:	bf00      	nop

9000ac50 <HAL_JPEG_GetState>:
  return hjpeg->State;
9000ac50:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
9000ac54:	4770      	bx	lr
9000ac56:	bf00      	nop

9000ac58 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000ac58:	2800      	cmp	r0, #0
9000ac5a:	d067      	beq.n	9000ad2c <HAL_LTDC_Init+0xd4>
{
9000ac5c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000ac5e:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
9000ac62:	4604      	mov	r4, r0
9000ac64:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000ac68:	2b00      	cmp	r3, #0
9000ac6a:	d05a      	beq.n	9000ad22 <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ac6c:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ac6e:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ac70:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ac74:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ac78:	4302      	orrs	r2, r0
9000ac7a:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000ac7c:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ac7e:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000ac80:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000ac82:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000ac86:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000ac88:	4929      	ldr	r1, [pc, #164]	@ (9000ad30 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000ac8a:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ac8c:	6998      	ldr	r0, [r3, #24]
9000ac8e:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000ac90:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ac92:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000ac94:	689a      	ldr	r2, [r3, #8]
9000ac96:	400a      	ands	r2, r1
9000ac98:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000ac9a:	689a      	ldr	r2, [r3, #8]
9000ac9c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000aca0:	69a0      	ldr	r0, [r4, #24]
9000aca2:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000aca4:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000aca6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000aca8:	68da      	ldr	r2, [r3, #12]
9000acaa:	400a      	ands	r2, r1
9000acac:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000acae:	68da      	ldr	r2, [r3, #12]
9000acb0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000acb4:	6a20      	ldr	r0, [r4, #32]
9000acb6:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000acb8:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000acba:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000acbc:	691a      	ldr	r2, [r3, #16]
9000acbe:	400a      	ands	r2, r1
9000acc0:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000acc2:	691a      	ldr	r2, [r3, #16]
9000acc4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000acc8:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000acca:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000accc:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000acce:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000acd0:	695a      	ldr	r2, [r3, #20]
9000acd2:	400a      	ands	r2, r1
9000acd4:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000acd6:	695a      	ldr	r2, [r3, #20]
9000acd8:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9000acda:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000acde:	430a      	orrs	r2, r1
9000ace0:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000ace2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000ace4:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000ace8:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000acec:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000acf0:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000acf2:	6add      	ldr	r5, [r3, #44]	@ 0x2c
9000acf4:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
9000acf8:	432a      	orrs	r2, r5
9000acfa:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000acfe:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000ad00:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000ad04:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000ad06:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ad08:	f042 0206 	orr.w	r2, r2, #6
9000ad0c:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000ad0e:	699a      	ldr	r2, [r3, #24]
9000ad10:	f042 0201 	orr.w	r2, r2, #1
9000ad14:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000ad16:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000ad18:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000ad1c:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
9000ad20:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000ad22:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
9000ad26:	f7f9 f917 	bl	90003f58 <HAL_LTDC_MspInit>
9000ad2a:	e79f      	b.n	9000ac6c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000ad2c:	2001      	movs	r0, #1
}
9000ad2e:	4770      	bx	lr
9000ad30:	f000f800 	.word	0xf000f800

9000ad34 <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
9000ad34:	4770      	bx	lr
9000ad36:	bf00      	nop

9000ad38 <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
9000ad38:	4770      	bx	lr
9000ad3a:	bf00      	nop

9000ad3c <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000ad3c:	6803      	ldr	r3, [r0, #0]
{
9000ad3e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000ad40:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
9000ad42:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000ad44:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000ad46:	076a      	lsls	r2, r5, #29
9000ad48:	d501      	bpl.n	9000ad4e <HAL_LTDC_IRQHandler+0x12>
9000ad4a:	0771      	lsls	r1, r6, #29
9000ad4c:	d41d      	bmi.n	9000ad8a <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000ad4e:	07aa      	lsls	r2, r5, #30
9000ad50:	d501      	bpl.n	9000ad56 <HAL_LTDC_IRQHandler+0x1a>
9000ad52:	07b3      	lsls	r3, r6, #30
9000ad54:	d42d      	bmi.n	9000adb2 <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000ad56:	07e8      	lsls	r0, r5, #31
9000ad58:	d501      	bpl.n	9000ad5e <HAL_LTDC_IRQHandler+0x22>
9000ad5a:	07f1      	lsls	r1, r6, #31
9000ad5c:	d440      	bmi.n	9000ade0 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000ad5e:	072a      	lsls	r2, r5, #28
9000ad60:	d501      	bpl.n	9000ad66 <HAL_LTDC_IRQHandler+0x2a>
9000ad62:	0733      	lsls	r3, r6, #28
9000ad64:	d400      	bmi.n	9000ad68 <HAL_LTDC_IRQHandler+0x2c>
}
9000ad66:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000ad68:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000ad6a:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000ad6c:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000ad6e:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000ad70:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ad72:	f022 0208 	bic.w	r2, r2, #8
9000ad76:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000ad78:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000ad7a:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000ad7c:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000ad80:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000ad84:	f7ff ffd8 	bl	9000ad38 <HAL_LTDC_ReloadEventCallback>
}
9000ad88:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000ad8a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ad8c:	f022 0204 	bic.w	r2, r2, #4
9000ad90:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000ad92:	2204      	movs	r2, #4
9000ad94:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000ad96:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
9000ad9a:	f043 0301 	orr.w	r3, r3, #1
9000ad9e:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000ada2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000ada4:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000ada8:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000adac:	f7ff ffc2 	bl	9000ad34 <HAL_LTDC_ErrorCallback>
9000adb0:	e7cd      	b.n	9000ad4e <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000adb2:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000adb4:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000adb6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000adb8:	f022 0202 	bic.w	r2, r2, #2
9000adbc:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000adbe:	2202      	movs	r2, #2
9000adc0:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000adc2:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000adc4:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
9000adc8:	f043 0302 	orr.w	r3, r3, #2
9000adcc:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000add0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000add2:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000add6:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000adda:	f7ff ffab 	bl	9000ad34 <HAL_LTDC_ErrorCallback>
9000adde:	e7ba      	b.n	9000ad56 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000ade0:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000ade2:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000ade4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ade6:	f022 0201 	bic.w	r2, r2, #1
9000adea:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000adec:	2201      	movs	r2, #1
9000adee:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
9000adf0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000adf2:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000adf6:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000adfa:	f7f8 fc2d 	bl	90003658 <HAL_LTDC_LineEventCallback>
9000adfe:	e7ae      	b.n	9000ad5e <HAL_LTDC_IRQHandler+0x22>

9000ae00 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000ae00:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
9000ae04:	2b01      	cmp	r3, #1
9000ae06:	f000 80c6 	beq.w	9000af96 <HAL_LTDC_ConfigLayer+0x196>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ae0a:	2302      	movs	r3, #2
{
9000ae0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000ae10:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000ae14:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ae18:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
{
9000ae1c:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000ae1e:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000ae22:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000ae24:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000ae28:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000ae2a:	f102 0684 	add.w	r6, r2, #132	@ 0x84
9000ae2e:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000ae30:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000ae34:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000ae36:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000ae3a:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000ae3e:	f8df a164 	ldr.w	sl, [pc, #356]	@ 9000afa4 <HAL_LTDC_ConfigLayer+0x1a4>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000ae42:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000ae46:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
9000ae4a:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000ae4c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000ae4e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000ae52:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000ae54:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000ae56:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000ae5a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000ae5c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000ae60:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000ae62:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000ae64:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000ae68:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000ae6a:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000ae6c:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000ae70:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000ae74:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ae76:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000ae78:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000ae7c:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000ae80:	440b      	add	r3, r1
9000ae82:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000ae86:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ae8a:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000ae8e:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ae92:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000ae96:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ae9a:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000ae9c:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000aea0:	68ab      	ldr	r3, [r5, #8]
9000aea2:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000aea6:	3301      	adds	r3, #1
9000aea8:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000aeac:	4403      	add	r3, r0
9000aeae:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000aeb2:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000aeb4:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000aeb8:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000aebc:	f023 0307 	bic.w	r3, r3, #7
9000aec0:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000aec4:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000aec8:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000aecc:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000aece:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000aed2:	f895 4031 	ldrb.w	r4, [r5, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000aed6:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000aeda:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
9000aede:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000aee2:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000aee6:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000aeea:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000aeee:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000aef2:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
9000aef6:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000aefa:	696b      	ldr	r3, [r5, #20]
9000aefc:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000af00:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000af04:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000af06:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000af0a:	6a28      	ldr	r0, [r5, #32]
9000af0c:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000af0e:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000af12:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000af16:	f8dc 3028 	ldr.w	r3, [ip, #40]	@ 0x28
9000af1a:	2300      	movs	r3, #0
9000af1c:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000af20:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000af22:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000af26:	b3a1      	cbz	r1, 9000af92 <HAL_LTDC_ConfigLayer+0x192>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000af28:	2901      	cmp	r1, #1
9000af2a:	d036      	beq.n	9000af9a <HAL_LTDC_ConfigLayer+0x19a>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
9000af2c:	1e8b      	subs	r3, r1, #2
9000af2e:	2907      	cmp	r1, #7
9000af30:	bf18      	it	ne
9000af32:	2b02      	cmpne	r3, #2
9000af34:	bf94      	ite	ls
9000af36:	2301      	movls	r3, #1
9000af38:	2300      	movhi	r3, #0
9000af3a:	3301      	adds	r3, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000af3c:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000af3e:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000af40:	fb03 f707 	mul.w	r7, r3, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000af44:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000af48:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000af4a:	3707      	adds	r7, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000af4c:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000af50:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
9000af54:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
9000af58:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000af5c:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000af60:	4b0f      	ldr	r3, [pc, #60]	@ (9000afa0 <HAL_LTDC_ConfigLayer+0x1a0>)
9000af62:	f8dc 1030 	ldr.w	r1, [ip, #48]	@ 0x30
9000af66:	400b      	ands	r3, r1
9000af68:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000af6c:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000af70:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000af72:	f859 3006 	ldr.w	r3, [r9, r6]
9000af76:	4313      	orrs	r3, r2
9000af78:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000af7c:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000af7e:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
9000af82:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000af84:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
9000af88:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
9000af8c:	b003      	add	sp, #12
9000af8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    tmp = 4U;
9000af92:	2304      	movs	r3, #4
9000af94:	e7d2      	b.n	9000af3c <HAL_LTDC_ConfigLayer+0x13c>
  __HAL_LOCK(hltdc);
9000af96:	2002      	movs	r0, #2
}
9000af98:	4770      	bx	lr
    tmp = 3U;
9000af9a:	2303      	movs	r3, #3
9000af9c:	e7ce      	b.n	9000af3c <HAL_LTDC_ConfigLayer+0x13c>
9000af9e:	bf00      	nop
9000afa0:	fffff800 	.word	0xfffff800
9000afa4:	fffff8f8 	.word	0xfffff8f8

9000afa8 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000afa8:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
9000afac:	2a01      	cmp	r2, #1
9000afae:	d019      	beq.n	9000afe4 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000afb0:	6802      	ldr	r2, [r0, #0]
9000afb2:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000afb4:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000afb6:	f04f 0c00 	mov.w	ip, #0
{
9000afba:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000afbc:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000afc0:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000afc2:	4c09      	ldr	r4, [pc, #36]	@ (9000afe8 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000afc4:	f020 0001 	bic.w	r0, r0, #1
9000afc8:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000afca:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000afcc:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000afce:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000afd0:	4301      	orrs	r1, r0
9000afd2:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000afd4:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
9000afd8:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000afda:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000afde:	f85d 4b04 	ldr.w	r4, [sp], #4
9000afe2:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000afe4:	2002      	movs	r0, #2
}
9000afe6:	4770      	bx	lr
9000afe8:	50001000 	.word	0x50001000

9000afec <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000afec:	b538      	push	{r3, r4, r5, lr}
9000afee:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000aff0:	f7fd f848 	bl	90008084 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000aff4:	2c00      	cmp	r4, #0
9000aff6:	d058      	beq.n	9000b0aa <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000aff8:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000affa:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000affc:	2100      	movs	r1, #0
9000affe:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000b000:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000b004:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000b008:	68da      	ldr	r2, [r3, #12]
9000b00a:	f022 0201 	bic.w	r2, r2, #1
9000b00e:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b010:	e005      	b.n	9000b01e <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000b012:	f7fd f837 	bl	90008084 <HAL_GetTick>
9000b016:	1b43      	subs	r3, r0, r5
9000b018:	2b05      	cmp	r3, #5
9000b01a:	d841      	bhi.n	9000b0a0 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b01c:	6823      	ldr	r3, [r4, #0]
9000b01e:	68da      	ldr	r2, [r3, #12]
9000b020:	07d2      	lsls	r2, r2, #31
9000b022:	d4f6      	bmi.n	9000b012 <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b024:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000b028:	69e0      	ldr	r0, [r4, #28]
9000b02a:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b02c:	68e1      	ldr	r1, [r4, #12]
9000b02e:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b030:	4302      	orrs	r2, r0
9000b032:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b034:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000b036:	4302      	orrs	r2, r0
9000b038:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000b03a:	4302      	orrs	r2, r0
9000b03c:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000b03e:	4302      	orrs	r2, r0
9000b040:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000b042:	4302      	orrs	r2, r0
9000b044:	68a0      	ldr	r0, [r4, #8]
9000b046:	4302      	orrs	r2, r0
9000b048:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000b04a:	3801      	subs	r0, #1
9000b04c:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b050:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000b052:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b054:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000b058:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b05a:	d103      	bne.n	9000b064 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000b05c:	691a      	ldr	r2, [r3, #16]
9000b05e:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000b062:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000b064:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000b066:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000b068:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000b06a:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000b06c:	db1f      	blt.n	9000b0ae <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000b06e:	b292      	uxth	r2, r2
9000b070:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000b072:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000b074:	2a00      	cmp	r2, #0
9000b076:	db24      	blt.n	9000b0c2 <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b078:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b07a:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b07e:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000b082:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b084:	d029      	beq.n	9000b0da <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000b086:	b2c0      	uxtb	r0, r0
9000b088:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000b08a:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000b08c:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000b08e:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000b090:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b092:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000b094:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000b096:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000b09a:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000b09e:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000b0a0:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b0a2:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000b0a4:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b0a6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000b0aa:	2001      	movs	r0, #1
}
9000b0ac:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b0ae:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000b0b0:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b0b2:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000b0b6:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000b0b8:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000b0ba:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000b0bc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000b0be:	2a00      	cmp	r2, #0
9000b0c0:	dada      	bge.n	9000b078 <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000b0c2:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000b0c4:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b0c6:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000b0ca:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000b0ce:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000b0d0:	6a19      	ldr	r1, [r3, #32]
9000b0d2:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000b0d6:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000b0d8:	d1d5      	bne.n	9000b086 <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000b0da:	2200      	movs	r2, #0
9000b0dc:	629a      	str	r2, [r3, #40]	@ 0x28
9000b0de:	e7d4      	b.n	9000b08a <HAL_MDMA_Init+0x9e>

9000b0e0 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000b0e0:	b1f8      	cbz	r0, 9000b122 <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000b0e2:	6802      	ldr	r2, [r0, #0]
9000b0e4:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000b0e6:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000b0e8:	68d0      	ldr	r0, [r2, #12]
{
9000b0ea:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000b0ec:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000b0f0:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000b0f2:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000b0f4:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000b0f6:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000b0f8:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000b0fa:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000b0fc:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000b0fe:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000b100:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000b102:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000b104:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000b106:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000b108:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000b10a:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b10c:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000b10e:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000b112:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000b116:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000b11a:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000b11c:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000b120:	4770      	bx	lr
    return HAL_ERROR;
9000b122:	2001      	movs	r0, #1
}
9000b124:	4770      	bx	lr
9000b126:	bf00      	nop

9000b128 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000b128:	b308      	cbz	r0, 9000b16e <HAL_MDMA_ConfigPostRequestMask+0x46>
9000b12a:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000b12c:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000b130:	2801      	cmp	r0, #1
9000b132:	d01e      	beq.n	9000b172 <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000b134:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000b136:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b13a:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000b13e:	45f4      	cmp	ip, lr
9000b140:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000b144:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b148:	d004      	beq.n	9000b154 <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000b14a:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000b14c:	2200      	movs	r2, #0
9000b14e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000b152:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000b154:	681c      	ldr	r4, [r3, #0]
9000b156:	6925      	ldr	r5, [r4, #16]
9000b158:	006d      	lsls	r5, r5, #1
9000b15a:	d4f7      	bmi.n	9000b14c <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000b15c:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000b15e:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b160:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000b162:	b941      	cbnz	r1, 9000b176 <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b164:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000b168:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000b16a:	2000      	movs	r0, #0
9000b16c:	e7ee      	b.n	9000b14c <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000b16e:	2001      	movs	r0, #1
9000b170:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000b172:	2002      	movs	r0, #2
}
9000b174:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000b176:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000b17a:	6122      	str	r2, [r4, #16]
9000b17c:	e7f5      	b.n	9000b16a <HAL_MDMA_ConfigPostRequestMask+0x42>
9000b17e:	bf00      	nop

9000b180 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000b180:	2800      	cmp	r0, #0
9000b182:	d06b      	beq.n	9000b25c <HAL_MDMA_Start_IT+0xdc>
{
9000b184:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000b186:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000b18a:	2c01      	cmp	r4, #1
9000b18c:	d009      	beq.n	9000b1a2 <HAL_MDMA_Start_IT+0x22>
9000b18e:	2401      	movs	r4, #1
9000b190:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b194:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000b198:	2c01      	cmp	r4, #1
9000b19a:	d005      	beq.n	9000b1a8 <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000b19c:	2300      	movs	r3, #0
9000b19e:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000b1a2:	2002      	movs	r0, #2
}
9000b1a4:	bc70      	pop	{r4, r5, r6}
9000b1a6:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000b1a8:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b1aa:	9e03      	ldr	r6, [sp, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000b1ac:	4d2c      	ldr	r5, [pc, #176]	@ (9000b260 <HAL_MDMA_Start_IT+0xe0>)
9000b1ae:	f3c3 0310 	ubfx	r3, r3, #0, #17
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000b1b2:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b1b6:	2400      	movs	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b1b8:	f106 3cff 	add.w	ip, r6, #4294967295
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000b1bc:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b1c0:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000b1c2:	6804      	ldr	r4, [r0, #0]
9000b1c4:	68e6      	ldr	r6, [r4, #12]
9000b1c6:	f026 0601 	bic.w	r6, r6, #1
9000b1ca:	60e6      	str	r6, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000b1cc:	6966      	ldr	r6, [r4, #20]
9000b1ce:	ea05 0506 	and.w	r5, r5, r6
9000b1d2:	ea45 0503 	orr.w	r5, r5, r3
9000b1d6:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b1d8:	6963      	ldr	r3, [r4, #20]
9000b1da:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000b1de:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000b1e2:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000b1e4:	f04f 031f 	mov.w	r3, #31
9000b1e8:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000b1ea:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000b1ec:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000b1ee:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b1f0:	bf0c      	ite	eq
9000b1f2:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000b1f6:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000b1fa:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000b1fe:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000b200:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000b202:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b204:	bf0c      	ite	eq
9000b206:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000b20a:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000b20e:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000b210:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000b212:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000b214:	68e3      	ldr	r3, [r4, #12]
9000b216:	f043 0306 	orr.w	r3, r3, #6
9000b21a:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000b21c:	b11a      	cbz	r2, 9000b226 <HAL_MDMA_Start_IT+0xa6>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000b21e:	68e3      	ldr	r3, [r4, #12]
9000b220:	f043 0310 	orr.w	r3, r3, #16
9000b224:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b226:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000b228:	b11b      	cbz	r3, 9000b232 <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000b22a:	68e3      	ldr	r3, [r4, #12]
9000b22c:	f043 0308 	orr.w	r3, r3, #8
9000b230:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000b232:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000b234:	b11b      	cbz	r3, 9000b23e <HAL_MDMA_Start_IT+0xbe>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000b236:	68e3      	ldr	r3, [r4, #12]
9000b238:	f043 0320 	orr.w	r3, r3, #32
9000b23c:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000b23e:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b240:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000b242:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b246:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000b24a:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b24c:	d103      	bne.n	9000b256 <HAL_MDMA_Start_IT+0xd6>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000b24e:	68e3      	ldr	r3, [r4, #12]
9000b250:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000b254:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000b256:	2000      	movs	r0, #0
}
9000b258:	bc70      	pop	{r4, r5, r6}
9000b25a:	4770      	bx	lr
    return HAL_ERROR;
9000b25c:	2001      	movs	r0, #1
}
9000b25e:	4770      	bx	lr
9000b260:	fffe0000 	.word	0xfffe0000

9000b264 <HAL_MDMA_Abort>:
{
9000b264:	b538      	push	{r3, r4, r5, lr}
9000b266:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
9000b268:	f7fc ff0c 	bl	90008084 <HAL_GetTick>
  if(hmdma == NULL)
9000b26c:	b334      	cbz	r4, 9000b2bc <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000b26e:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
9000b272:	2b02      	cmp	r3, #2
9000b274:	d11d      	bne.n	9000b2b2 <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000b276:	6822      	ldr	r2, [r4, #0]
9000b278:	4605      	mov	r5, r0
9000b27a:	68d3      	ldr	r3, [r2, #12]
9000b27c:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
9000b280:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
9000b282:	68d3      	ldr	r3, [r2, #12]
9000b284:	f023 0301 	bic.w	r3, r3, #1
9000b288:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b28a:	e005      	b.n	9000b298 <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000b28c:	f7fc fefa 	bl	90008084 <HAL_GetTick>
9000b290:	1b43      	subs	r3, r0, r5
9000b292:	2b05      	cmp	r3, #5
9000b294:	d814      	bhi.n	9000b2c0 <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b296:	6822      	ldr	r2, [r4, #0]
9000b298:	68d3      	ldr	r3, [r2, #12]
9000b29a:	f013 0301 	ands.w	r3, r3, #1
9000b29e:	d1f5      	bne.n	9000b28c <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000b2a0:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
9000b2a2:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000b2a4:	6050      	str	r0, [r2, #4]
  return HAL_OK;
9000b2a6:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
9000b2a8:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
9000b2ac:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000b2b0:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b2b2:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000b2b4:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b2b6:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000b2b8:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000b2bc:	2001      	movs	r0, #1
}
9000b2be:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b2c0:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000b2c2:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000b2c4:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b2c6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000b2ca:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b2ce:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000b2d0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000b2d4:	e7f2      	b.n	9000b2bc <HAL_MDMA_Abort+0x58>
9000b2d6:	bf00      	nop

9000b2d8 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000b2d8:	4603      	mov	r3, r0
9000b2da:	b128      	cbz	r0, 9000b2e8 <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000b2dc:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000b2e0:	2a02      	cmp	r2, #2
9000b2e2:	d003      	beq.n	9000b2ec <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b2e4:	2280      	movs	r2, #128	@ 0x80
9000b2e6:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000b2e8:	2001      	movs	r0, #1
9000b2ea:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000b2ec:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b2ee:	2104      	movs	r1, #4
  return HAL_OK;
9000b2f0:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b2f2:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000b2f6:	68d3      	ldr	r3, [r2, #12]
9000b2f8:	f023 0301 	bic.w	r3, r3, #1
9000b2fc:	60d3      	str	r3, [r2, #12]
}
9000b2fe:	4770      	bx	lr

9000b300 <HAL_MDMA_IRQHandler>:
{
9000b300:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000b302:	2300      	movs	r3, #0
{
9000b304:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b306:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000b30a:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000b30c:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b30e:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000b310:	4b57      	ldr	r3, [pc, #348]	@ (9000b470 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b312:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b314:	4a57      	ldr	r2, [pc, #348]	@ (9000b474 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000b316:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b318:	6823      	ldr	r3, [r4, #0]
9000b31a:	441a      	add	r2, r3
9000b31c:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000b320:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b324:	4202      	tst	r2, r0
9000b326:	f000 80a0 	beq.w	9000b46a <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000b32a:	681a      	ldr	r2, [r3, #0]
9000b32c:	07d1      	lsls	r1, r2, #31
9000b32e:	d529      	bpl.n	9000b384 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000b330:	68da      	ldr	r2, [r3, #12]
9000b332:	0792      	lsls	r2, r2, #30
9000b334:	d526      	bpl.n	9000b384 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000b336:	68da      	ldr	r2, [r3, #12]
9000b338:	f022 0202 	bic.w	r2, r2, #2
9000b33c:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000b33e:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000b340:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000b342:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000b344:	bf54      	ite	pl
9000b346:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000b34a:	f041 0102 	orrmi.w	r1, r1, #2
9000b34e:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000b350:	0591      	lsls	r1, r2, #22
9000b352:	d503      	bpl.n	9000b35c <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000b354:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b356:	f041 0104 	orr.w	r1, r1, #4
9000b35a:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000b35c:	05d0      	lsls	r0, r2, #23
9000b35e:	d503      	bpl.n	9000b368 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000b360:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b362:	f041 0108 	orr.w	r1, r1, #8
9000b366:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000b368:	0551      	lsls	r1, r2, #21
9000b36a:	d503      	bpl.n	9000b374 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000b36c:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b36e:	f041 0110 	orr.w	r1, r1, #16
9000b372:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000b374:	0510      	lsls	r0, r2, #20
9000b376:	d503      	bpl.n	9000b380 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000b378:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000b37a:	f042 0220 	orr.w	r2, r2, #32
9000b37e:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000b380:	2201      	movs	r2, #1
9000b382:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000b384:	681a      	ldr	r2, [r3, #0]
9000b386:	06d1      	lsls	r1, r2, #27
9000b388:	d509      	bpl.n	9000b39e <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000b38a:	68da      	ldr	r2, [r3, #12]
9000b38c:	0692      	lsls	r2, r2, #26
9000b38e:	d506      	bpl.n	9000b39e <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000b390:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000b392:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000b394:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000b396:	b112      	cbz	r2, 9000b39e <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000b398:	4620      	mov	r0, r4
9000b39a:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000b39c:	6823      	ldr	r3, [r4, #0]
9000b39e:	681a      	ldr	r2, [r3, #0]
9000b3a0:	0710      	lsls	r0, r2, #28
9000b3a2:	d509      	bpl.n	9000b3b8 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000b3a4:	68da      	ldr	r2, [r3, #12]
9000b3a6:	06d1      	lsls	r1, r2, #27
9000b3a8:	d506      	bpl.n	9000b3b8 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000b3aa:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000b3ac:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000b3ae:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000b3b0:	b112      	cbz	r2, 9000b3b8 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000b3b2:	4620      	mov	r0, r4
9000b3b4:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000b3b6:	6823      	ldr	r3, [r4, #0]
9000b3b8:	681a      	ldr	r2, [r3, #0]
9000b3ba:	0752      	lsls	r2, r2, #29
9000b3bc:	d509      	bpl.n	9000b3d2 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000b3be:	68da      	ldr	r2, [r3, #12]
9000b3c0:	0710      	lsls	r0, r2, #28
9000b3c2:	d506      	bpl.n	9000b3d2 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000b3c4:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b3c6:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000b3c8:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b3ca:	b112      	cbz	r2, 9000b3d2 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000b3cc:	4620      	mov	r0, r4
9000b3ce:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000b3d0:	6823      	ldr	r3, [r4, #0]
9000b3d2:	681a      	ldr	r2, [r3, #0]
9000b3d4:	0791      	lsls	r1, r2, #30
9000b3d6:	d516      	bpl.n	9000b406 <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000b3d8:	68da      	ldr	r2, [r3, #12]
9000b3da:	0752      	lsls	r2, r2, #29
9000b3dc:	d513      	bpl.n	9000b406 <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000b3de:	68da      	ldr	r2, [r3, #12]
9000b3e0:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000b3e4:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000b3e6:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000b3ea:	2a04      	cmp	r2, #4
9000b3ec:	d034      	beq.n	9000b458 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000b3ee:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000b3f0:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000b3f2:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000b3f4:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000b3f6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000b3f8:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000b3fc:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000b400:	b10b      	cbz	r3, 9000b406 <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000b402:	4620      	mov	r0, r4
9000b404:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000b406:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000b408:	2b00      	cmp	r3, #0
9000b40a:	d02e      	beq.n	9000b46a <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000b40c:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b40e:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000b410:	4b19      	ldr	r3, [pc, #100]	@ (9000b478 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b412:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000b416:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000b41a:	68cb      	ldr	r3, [r1, #12]
9000b41c:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000b420:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000b422:	60cb      	str	r3, [r1, #12]
9000b424:	e002      	b.n	9000b42c <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000b426:	68cb      	ldr	r3, [r1, #12]
9000b428:	07d8      	lsls	r0, r3, #31
9000b42a:	d504      	bpl.n	9000b436 <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000b42c:	9b01      	ldr	r3, [sp, #4]
9000b42e:	3301      	adds	r3, #1
9000b430:	4293      	cmp	r3, r2
9000b432:	9301      	str	r3, [sp, #4]
9000b434:	d9f7      	bls.n	9000b426 <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000b436:	2300      	movs	r3, #0
9000b438:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b43c:	68cb      	ldr	r3, [r1, #12]
9000b43e:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b440:	bf4c      	ite	mi
9000b442:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000b444:	2301      	movpl	r3, #1
9000b446:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000b44a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000b44c:	b16b      	cbz	r3, 9000b46a <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000b44e:	4620      	mov	r0, r4
}
9000b450:	b003      	add	sp, #12
9000b452:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000b456:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000b458:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000b45a:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000b45c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000b45e:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000b462:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000b466:	2b00      	cmp	r3, #0
9000b468:	d1f1      	bne.n	9000b44e <HAL_MDMA_IRQHandler+0x14e>
}
9000b46a:	b003      	add	sp, #12
9000b46c:	bd30      	pop	{r4, r5, pc}
9000b46e:	bf00      	nop
9000b470:	24000098 	.word	0x24000098
9000b474:	adffffc0 	.word	0xadffffc0
9000b478:	1b4e81b5 	.word	0x1b4e81b5

9000b47c <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000b47c:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000b47e:	4c10      	ldr	r4, [pc, #64]	@ (9000b4c0 <HAL_PWREx_ConfigSupply+0x44>)
9000b480:	68e3      	ldr	r3, [r4, #12]
9000b482:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000b486:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000b488:	d105      	bne.n	9000b496 <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000b48a:	f003 0307 	and.w	r3, r3, #7
9000b48e:	1a18      	subs	r0, r3, r0
9000b490:	bf18      	it	ne
9000b492:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000b494:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000b496:	f023 0307 	bic.w	r3, r3, #7
9000b49a:	4303      	orrs	r3, r0
9000b49c:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000b49e:	f7fc fdf1 	bl	90008084 <HAL_GetTick>
9000b4a2:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000b4a4:	e005      	b.n	9000b4b2 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000b4a6:	f7fc fded 	bl	90008084 <HAL_GetTick>
9000b4aa:	1b40      	subs	r0, r0, r5
9000b4ac:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000b4b0:	d804      	bhi.n	9000b4bc <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000b4b2:	6863      	ldr	r3, [r4, #4]
9000b4b4:	049b      	lsls	r3, r3, #18
9000b4b6:	d5f6      	bpl.n	9000b4a6 <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000b4b8:	2000      	movs	r0, #0
}
9000b4ba:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000b4bc:	2001      	movs	r0, #1
}
9000b4be:	bd38      	pop	{r3, r4, r5, pc}
9000b4c0:	58024800 	.word	0x58024800

9000b4c4 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b4c4:	4b33      	ldr	r3, [pc, #204]	@ (9000b594 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000b4c6:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b4c8:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b4ca:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b4cc:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000b4ce:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b4d2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b4d4:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000b4d8:	d036      	beq.n	9000b548 <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b4da:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b4de:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b4e2:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b4e6:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b4ea:	fb05 f202 	mul.w	r2, r5, r2
9000b4ee:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b4f0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000b4f4:	ee06 2a90 	vmov	s13, r2
9000b4f8:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000b4fc:	d002      	beq.n	9000b504 <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000b4fe:	2902      	cmp	r1, #2
9000b500:	d042      	beq.n	9000b588 <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000b502:	b319      	cbz	r1, 9000b54c <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b504:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000b598 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000b508:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000b50c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000b50e:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000b512:	ee07 3a90 	vmov	s15, r3
9000b516:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000b51a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b51e:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000b522:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000b526:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000b52a:	4b1a      	ldr	r3, [pc, #104]	@ (9000b594 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000b52c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000b52e:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000b532:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000b534:	ee07 3a10 	vmov	s14, r3
9000b538:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000b53c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000b540:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000b544:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000b548:	bc30      	pop	{r4, r5}
9000b54a:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b54c:	681a      	ldr	r2, [r3, #0]
9000b54e:	0692      	lsls	r2, r2, #26
9000b550:	d51d      	bpl.n	9000b58e <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b552:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b554:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b558:	4a10      	ldr	r2, [pc, #64]	@ (9000b59c <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b55a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b55c:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b560:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b564:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b566:	ee07 3a90 	vmov	s15, r3
9000b56a:	ee06 2a10 	vmov	s12, r2
9000b56e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b572:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000b576:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000b57a:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000b57e:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000b582:	ee67 7a87 	vmul.f32	s15, s15, s14
9000b586:	e7d0      	b.n	9000b52a <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b588:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000b5a0 <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000b58c:	e7bc      	b.n	9000b508 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b58e:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000b5a4 <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000b592:	e7b9      	b.n	9000b508 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000b594:	58024400 	.word	0x58024400
9000b598:	4a742400 	.word	0x4a742400
9000b59c:	03d09000 	.word	0x03d09000
9000b5a0:	4bbebc20 	.word	0x4bbebc20
9000b5a4:	4c742400 	.word	0x4c742400

9000b5a8 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000b5a8:	2800      	cmp	r0, #0
9000b5aa:	f000 82e9 	beq.w	9000bb80 <HAL_RCC_OscConfig+0x5d8>
{
9000b5ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000b5b0:	6803      	ldr	r3, [r0, #0]
9000b5b2:	4604      	mov	r4, r0
9000b5b4:	07d9      	lsls	r1, r3, #31
9000b5b6:	d52e      	bpl.n	9000b616 <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b5b8:	4997      	ldr	r1, [pc, #604]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
9000b5ba:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000b5bc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b5be:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000b5c2:	2a10      	cmp	r2, #16
9000b5c4:	f000 80ee 	beq.w	9000b7a4 <HAL_RCC_OscConfig+0x1fc>
9000b5c8:	2a18      	cmp	r2, #24
9000b5ca:	f000 80e6 	beq.w	9000b79a <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b5ce:	6863      	ldr	r3, [r4, #4]
9000b5d0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000b5d4:	f000 8111 	beq.w	9000b7fa <HAL_RCC_OscConfig+0x252>
9000b5d8:	2b00      	cmp	r3, #0
9000b5da:	f000 8167 	beq.w	9000b8ac <HAL_RCC_OscConfig+0x304>
9000b5de:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000b5e2:	4b8d      	ldr	r3, [pc, #564]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
9000b5e4:	681a      	ldr	r2, [r3, #0]
9000b5e6:	f000 828a 	beq.w	9000bafe <HAL_RCC_OscConfig+0x556>
9000b5ea:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000b5ee:	601a      	str	r2, [r3, #0]
9000b5f0:	681a      	ldr	r2, [r3, #0]
9000b5f2:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000b5f6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000b5f8:	f7fc fd44 	bl	90008084 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b5fc:	4e86      	ldr	r6, [pc, #536]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000b5fe:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b600:	e005      	b.n	9000b60e <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000b602:	f7fc fd3f 	bl	90008084 <HAL_GetTick>
9000b606:	1b40      	subs	r0, r0, r5
9000b608:	2864      	cmp	r0, #100	@ 0x64
9000b60a:	f200 814d 	bhi.w	9000b8a8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b60e:	6833      	ldr	r3, [r6, #0]
9000b610:	039b      	lsls	r3, r3, #14
9000b612:	d5f6      	bpl.n	9000b602 <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000b614:	6823      	ldr	r3, [r4, #0]
9000b616:	079d      	lsls	r5, r3, #30
9000b618:	d470      	bmi.n	9000b6fc <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b61a:	06d9      	lsls	r1, r3, #27
9000b61c:	d533      	bpl.n	9000b686 <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b61e:	4a7e      	ldr	r2, [pc, #504]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
9000b620:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000b622:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b624:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000b628:	2b08      	cmp	r3, #8
9000b62a:	f000 80cb 	beq.w	9000b7c4 <HAL_RCC_OscConfig+0x21c>
9000b62e:	2b18      	cmp	r3, #24
9000b630:	f000 80c3 	beq.w	9000b7ba <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000b634:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000b636:	4d78      	ldr	r5, [pc, #480]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000b638:	2b00      	cmp	r3, #0
9000b63a:	f000 816f 	beq.w	9000b91c <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000b63e:	682b      	ldr	r3, [r5, #0]
9000b640:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000b644:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b646:	f7fc fd1d 	bl	90008084 <HAL_GetTick>
9000b64a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000b64c:	e005      	b.n	9000b65a <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000b64e:	f7fc fd19 	bl	90008084 <HAL_GetTick>
9000b652:	1b80      	subs	r0, r0, r6
9000b654:	2802      	cmp	r0, #2
9000b656:	f200 8127 	bhi.w	9000b8a8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000b65a:	682b      	ldr	r3, [r5, #0]
9000b65c:	05db      	lsls	r3, r3, #23
9000b65e:	d5f6      	bpl.n	9000b64e <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b660:	f7fc fd16 	bl	90008090 <HAL_GetREVID>
9000b664:	f241 0303 	movw	r3, #4099	@ 0x1003
9000b668:	4298      	cmp	r0, r3
9000b66a:	f200 8269 	bhi.w	9000bb40 <HAL_RCC_OscConfig+0x598>
9000b66e:	6a22      	ldr	r2, [r4, #32]
9000b670:	686b      	ldr	r3, [r5, #4]
9000b672:	2a20      	cmp	r2, #32
9000b674:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000b678:	bf0c      	ite	eq
9000b67a:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000b67e:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000b682:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b684:	6823      	ldr	r3, [r4, #0]
9000b686:	071d      	lsls	r5, r3, #28
9000b688:	d516      	bpl.n	9000b6b8 <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000b68a:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000b68c:	4d62      	ldr	r5, [pc, #392]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000b68e:	2b00      	cmp	r3, #0
9000b690:	f000 8122 	beq.w	9000b8d8 <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000b694:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000b696:	f043 0301 	orr.w	r3, r3, #1
9000b69a:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000b69c:	f7fc fcf2 	bl	90008084 <HAL_GetTick>
9000b6a0:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000b6a2:	e005      	b.n	9000b6b0 <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000b6a4:	f7fc fcee 	bl	90008084 <HAL_GetTick>
9000b6a8:	1b80      	subs	r0, r0, r6
9000b6aa:	2802      	cmp	r0, #2
9000b6ac:	f200 80fc 	bhi.w	9000b8a8 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000b6b0:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000b6b2:	0798      	lsls	r0, r3, #30
9000b6b4:	d5f6      	bpl.n	9000b6a4 <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000b6b6:	6823      	ldr	r3, [r4, #0]
9000b6b8:	069a      	lsls	r2, r3, #26
9000b6ba:	d516      	bpl.n	9000b6ea <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000b6bc:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000b6be:	4d56      	ldr	r5, [pc, #344]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000b6c0:	2b00      	cmp	r3, #0
9000b6c2:	f000 811a 	beq.w	9000b8fa <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000b6c6:	682b      	ldr	r3, [r5, #0]
9000b6c8:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000b6cc:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000b6ce:	f7fc fcd9 	bl	90008084 <HAL_GetTick>
9000b6d2:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000b6d4:	e005      	b.n	9000b6e2 <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000b6d6:	f7fc fcd5 	bl	90008084 <HAL_GetTick>
9000b6da:	1b80      	subs	r0, r0, r6
9000b6dc:	2802      	cmp	r0, #2
9000b6de:	f200 80e3 	bhi.w	9000b8a8 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000b6e2:	682b      	ldr	r3, [r5, #0]
9000b6e4:	049f      	lsls	r7, r3, #18
9000b6e6:	d5f6      	bpl.n	9000b6d6 <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000b6e8:	6823      	ldr	r3, [r4, #0]
9000b6ea:	0759      	lsls	r1, r3, #29
9000b6ec:	f100 808b 	bmi.w	9000b806 <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000b6f0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000b6f2:	2b00      	cmp	r3, #0
9000b6f4:	f040 80bf 	bne.w	9000b876 <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000b6f8:	2000      	movs	r0, #0
}
9000b6fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b6fc:	4a46      	ldr	r2, [pc, #280]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
9000b6fe:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000b700:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b702:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000b706:	d12d      	bne.n	9000b764 <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000b708:	4b43      	ldr	r3, [pc, #268]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000b70a:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000b70c:	681b      	ldr	r3, [r3, #0]
9000b70e:	0759      	lsls	r1, r3, #29
9000b710:	d501      	bpl.n	9000b716 <HAL_RCC_OscConfig+0x16e>
9000b712:	2a00      	cmp	r2, #0
9000b714:	d04f      	beq.n	9000b7b6 <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b716:	4d40      	ldr	r5, [pc, #256]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
9000b718:	682b      	ldr	r3, [r5, #0]
9000b71a:	f023 0319 	bic.w	r3, r3, #25
9000b71e:	4313      	orrs	r3, r2
9000b720:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b722:	f7fc fcaf 	bl	90008084 <HAL_GetTick>
9000b726:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b728:	e005      	b.n	9000b736 <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b72a:	f7fc fcab 	bl	90008084 <HAL_GetTick>
9000b72e:	1b80      	subs	r0, r0, r6
9000b730:	2802      	cmp	r0, #2
9000b732:	f200 80b9 	bhi.w	9000b8a8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b736:	682b      	ldr	r3, [r5, #0]
9000b738:	075b      	lsls	r3, r3, #29
9000b73a:	d5f6      	bpl.n	9000b72a <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000b73c:	f7fc fca8 	bl	90008090 <HAL_GetREVID>
9000b740:	f241 0303 	movw	r3, #4099	@ 0x1003
9000b744:	4298      	cmp	r0, r3
9000b746:	f200 8110 	bhi.w	9000b96a <HAL_RCC_OscConfig+0x3c2>
9000b74a:	6922      	ldr	r2, [r4, #16]
9000b74c:	686b      	ldr	r3, [r5, #4]
9000b74e:	2a40      	cmp	r2, #64	@ 0x40
9000b750:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000b754:	bf0c      	ite	eq
9000b756:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000b75a:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000b75e:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b760:	6823      	ldr	r3, [r4, #0]
9000b762:	e75a      	b.n	9000b61a <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b764:	2b18      	cmp	r3, #24
9000b766:	f000 80fc 	beq.w	9000b962 <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b76a:	4d2b      	ldr	r5, [pc, #172]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000b76c:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b76e:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000b770:	2a00      	cmp	r2, #0
9000b772:	f000 80e5 	beq.w	9000b940 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b776:	f023 0319 	bic.w	r3, r3, #25
9000b77a:	4313      	orrs	r3, r2
9000b77c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b77e:	f7fc fc81 	bl	90008084 <HAL_GetTick>
9000b782:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b784:	e005      	b.n	9000b792 <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b786:	f7fc fc7d 	bl	90008084 <HAL_GetTick>
9000b78a:	1b80      	subs	r0, r0, r6
9000b78c:	2802      	cmp	r0, #2
9000b78e:	f200 808b 	bhi.w	9000b8a8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b792:	682b      	ldr	r3, [r5, #0]
9000b794:	075f      	lsls	r7, r3, #29
9000b796:	d5f6      	bpl.n	9000b786 <HAL_RCC_OscConfig+0x1de>
9000b798:	e7d0      	b.n	9000b73c <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000b79a:	f001 0103 	and.w	r1, r1, #3
9000b79e:	2902      	cmp	r1, #2
9000b7a0:	f47f af15 	bne.w	9000b5ce <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000b7a4:	4a1c      	ldr	r2, [pc, #112]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
9000b7a6:	6812      	ldr	r2, [r2, #0]
9000b7a8:	0392      	lsls	r2, r2, #14
9000b7aa:	f57f af34 	bpl.w	9000b616 <HAL_RCC_OscConfig+0x6e>
9000b7ae:	6862      	ldr	r2, [r4, #4]
9000b7b0:	2a00      	cmp	r2, #0
9000b7b2:	f47f af30 	bne.w	9000b616 <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000b7b6:	2001      	movs	r0, #1
}
9000b7b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000b7ba:	f002 0203 	and.w	r2, r2, #3
9000b7be:	2a01      	cmp	r2, #1
9000b7c0:	f47f af38 	bne.w	9000b634 <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000b7c4:	4b14      	ldr	r3, [pc, #80]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
9000b7c6:	681b      	ldr	r3, [r3, #0]
9000b7c8:	05da      	lsls	r2, r3, #23
9000b7ca:	d502      	bpl.n	9000b7d2 <HAL_RCC_OscConfig+0x22a>
9000b7cc:	69e3      	ldr	r3, [r4, #28]
9000b7ce:	2b80      	cmp	r3, #128	@ 0x80
9000b7d0:	d1f1      	bne.n	9000b7b6 <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b7d2:	f7fc fc5d 	bl	90008090 <HAL_GetREVID>
9000b7d6:	f241 0303 	movw	r3, #4099	@ 0x1003
9000b7da:	4298      	cmp	r0, r3
9000b7dc:	f200 80ce 	bhi.w	9000b97c <HAL_RCC_OscConfig+0x3d4>
9000b7e0:	6a22      	ldr	r2, [r4, #32]
9000b7e2:	2a20      	cmp	r2, #32
9000b7e4:	f000 81bb 	beq.w	9000bb5e <HAL_RCC_OscConfig+0x5b6>
9000b7e8:	490b      	ldr	r1, [pc, #44]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
9000b7ea:	684b      	ldr	r3, [r1, #4]
9000b7ec:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000b7f0:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000b7f4:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b7f6:	6823      	ldr	r3, [r4, #0]
9000b7f8:	e745      	b.n	9000b686 <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b7fa:	4a07      	ldr	r2, [pc, #28]	@ (9000b818 <HAL_RCC_OscConfig+0x270>)
9000b7fc:	6813      	ldr	r3, [r2, #0]
9000b7fe:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000b802:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000b804:	e6f8      	b.n	9000b5f8 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000b806:	4d05      	ldr	r5, [pc, #20]	@ (9000b81c <HAL_RCC_OscConfig+0x274>)
9000b808:	682b      	ldr	r3, [r5, #0]
9000b80a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000b80e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000b810:	f7fc fc38 	bl	90008084 <HAL_GetTick>
9000b814:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000b816:	e008      	b.n	9000b82a <HAL_RCC_OscConfig+0x282>
9000b818:	58024400 	.word	0x58024400
9000b81c:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000b820:	f7fc fc30 	bl	90008084 <HAL_GetTick>
9000b824:	1b80      	subs	r0, r0, r6
9000b826:	2864      	cmp	r0, #100	@ 0x64
9000b828:	d83e      	bhi.n	9000b8a8 <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000b82a:	682b      	ldr	r3, [r5, #0]
9000b82c:	05da      	lsls	r2, r3, #23
9000b82e:	d5f7      	bpl.n	9000b820 <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b830:	68a3      	ldr	r3, [r4, #8]
9000b832:	2b01      	cmp	r3, #1
9000b834:	f000 818d 	beq.w	9000bb52 <HAL_RCC_OscConfig+0x5aa>
9000b838:	2b00      	cmp	r3, #0
9000b83a:	f000 8168 	beq.w	9000bb0e <HAL_RCC_OscConfig+0x566>
9000b83e:	2b05      	cmp	r3, #5
9000b840:	4b85      	ldr	r3, [pc, #532]	@ (9000ba58 <HAL_RCC_OscConfig+0x4b0>)
9000b842:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000b844:	f000 8194 	beq.w	9000bb70 <HAL_RCC_OscConfig+0x5c8>
9000b848:	f022 0201 	bic.w	r2, r2, #1
9000b84c:	671a      	str	r2, [r3, #112]	@ 0x70
9000b84e:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000b850:	f022 0204 	bic.w	r2, r2, #4
9000b854:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000b856:	f7fc fc15 	bl	90008084 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b85a:	4e7f      	ldr	r6, [pc, #508]	@ (9000ba58 <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b85c:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000b860:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b862:	e004      	b.n	9000b86e <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b864:	f7fc fc0e 	bl	90008084 <HAL_GetTick>
9000b868:	1b40      	subs	r0, r0, r5
9000b86a:	42b8      	cmp	r0, r7
9000b86c:	d81c      	bhi.n	9000b8a8 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b86e:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000b870:	079b      	lsls	r3, r3, #30
9000b872:	d5f7      	bpl.n	9000b864 <HAL_RCC_OscConfig+0x2bc>
9000b874:	e73c      	b.n	9000b6f0 <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000b876:	4d78      	ldr	r5, [pc, #480]	@ (9000ba58 <HAL_RCC_OscConfig+0x4b0>)
9000b878:	692a      	ldr	r2, [r5, #16]
9000b87a:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000b87e:	2a18      	cmp	r2, #24
9000b880:	f000 80f0 	beq.w	9000ba64 <HAL_RCC_OscConfig+0x4bc>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000b884:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000b886:	682b      	ldr	r3, [r5, #0]
9000b888:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000b88c:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000b88e:	d07f      	beq.n	9000b990 <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000b890:	f7fc fbf8 	bl	90008084 <HAL_GetTick>
9000b894:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b896:	682b      	ldr	r3, [r5, #0]
9000b898:	019b      	lsls	r3, r3, #6
9000b89a:	f57f af2d 	bpl.w	9000b6f8 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b89e:	f7fc fbf1 	bl	90008084 <HAL_GetTick>
9000b8a2:	1b00      	subs	r0, r0, r4
9000b8a4:	2802      	cmp	r0, #2
9000b8a6:	d9f6      	bls.n	9000b896 <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000b8a8:	2003      	movs	r0, #3
}
9000b8aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b8ac:	4d6a      	ldr	r5, [pc, #424]	@ (9000ba58 <HAL_RCC_OscConfig+0x4b0>)
9000b8ae:	682b      	ldr	r3, [r5, #0]
9000b8b0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000b8b4:	602b      	str	r3, [r5, #0]
9000b8b6:	682b      	ldr	r3, [r5, #0]
9000b8b8:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000b8bc:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b8be:	f7fc fbe1 	bl	90008084 <HAL_GetTick>
9000b8c2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000b8c4:	e004      	b.n	9000b8d0 <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000b8c6:	f7fc fbdd 	bl	90008084 <HAL_GetTick>
9000b8ca:	1b80      	subs	r0, r0, r6
9000b8cc:	2864      	cmp	r0, #100	@ 0x64
9000b8ce:	d8eb      	bhi.n	9000b8a8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000b8d0:	682b      	ldr	r3, [r5, #0]
9000b8d2:	039f      	lsls	r7, r3, #14
9000b8d4:	d4f7      	bmi.n	9000b8c6 <HAL_RCC_OscConfig+0x31e>
9000b8d6:	e69d      	b.n	9000b614 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000b8d8:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000b8da:	f023 0301 	bic.w	r3, r3, #1
9000b8de:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000b8e0:	f7fc fbd0 	bl	90008084 <HAL_GetTick>
9000b8e4:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000b8e6:	e004      	b.n	9000b8f2 <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000b8e8:	f7fc fbcc 	bl	90008084 <HAL_GetTick>
9000b8ec:	1b80      	subs	r0, r0, r6
9000b8ee:	2802      	cmp	r0, #2
9000b8f0:	d8da      	bhi.n	9000b8a8 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000b8f2:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000b8f4:	0799      	lsls	r1, r3, #30
9000b8f6:	d4f7      	bmi.n	9000b8e8 <HAL_RCC_OscConfig+0x340>
9000b8f8:	e6dd      	b.n	9000b6b6 <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000b8fa:	682b      	ldr	r3, [r5, #0]
9000b8fc:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000b900:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000b902:	f7fc fbbf 	bl	90008084 <HAL_GetTick>
9000b906:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000b908:	e004      	b.n	9000b914 <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000b90a:	f7fc fbbb 	bl	90008084 <HAL_GetTick>
9000b90e:	1b80      	subs	r0, r0, r6
9000b910:	2802      	cmp	r0, #2
9000b912:	d8c9      	bhi.n	9000b8a8 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000b914:	682b      	ldr	r3, [r5, #0]
9000b916:	0498      	lsls	r0, r3, #18
9000b918:	d4f7      	bmi.n	9000b90a <HAL_RCC_OscConfig+0x362>
9000b91a:	e6e5      	b.n	9000b6e8 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000b91c:	682b      	ldr	r3, [r5, #0]
9000b91e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000b922:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b924:	f7fc fbae 	bl	90008084 <HAL_GetTick>
9000b928:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000b92a:	e004      	b.n	9000b936 <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000b92c:	f7fc fbaa 	bl	90008084 <HAL_GetTick>
9000b930:	1b80      	subs	r0, r0, r6
9000b932:	2802      	cmp	r0, #2
9000b934:	d8b8      	bhi.n	9000b8a8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000b936:	682b      	ldr	r3, [r5, #0]
9000b938:	05df      	lsls	r7, r3, #23
9000b93a:	d4f7      	bmi.n	9000b92c <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b93c:	6823      	ldr	r3, [r4, #0]
9000b93e:	e6a2      	b.n	9000b686 <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000b940:	f023 0301 	bic.w	r3, r3, #1
9000b944:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b946:	f7fc fb9d 	bl	90008084 <HAL_GetTick>
9000b94a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000b94c:	e004      	b.n	9000b958 <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b94e:	f7fc fb99 	bl	90008084 <HAL_GetTick>
9000b952:	1b80      	subs	r0, r0, r6
9000b954:	2802      	cmp	r0, #2
9000b956:	d8a7      	bhi.n	9000b8a8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000b958:	682b      	ldr	r3, [r5, #0]
9000b95a:	0758      	lsls	r0, r3, #29
9000b95c:	d4f7      	bmi.n	9000b94e <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b95e:	6823      	ldr	r3, [r4, #0]
9000b960:	e65b      	b.n	9000b61a <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b962:	0790      	lsls	r0, r2, #30
9000b964:	f47f af01 	bne.w	9000b76a <HAL_RCC_OscConfig+0x1c2>
9000b968:	e6ce      	b.n	9000b708 <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000b96a:	686b      	ldr	r3, [r5, #4]
9000b96c:	6922      	ldr	r2, [r4, #16]
9000b96e:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000b972:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000b976:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b978:	6823      	ldr	r3, [r4, #0]
9000b97a:	e64e      	b.n	9000b61a <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b97c:	4a36      	ldr	r2, [pc, #216]	@ (9000ba58 <HAL_RCC_OscConfig+0x4b0>)
9000b97e:	6a21      	ldr	r1, [r4, #32]
9000b980:	68d3      	ldr	r3, [r2, #12]
9000b982:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000b986:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000b98a:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b98c:	6823      	ldr	r3, [r4, #0]
9000b98e:	e67a      	b.n	9000b686 <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000b990:	f7fc fb78 	bl	90008084 <HAL_GetTick>
9000b994:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b996:	e004      	b.n	9000b9a2 <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b998:	f7fc fb74 	bl	90008084 <HAL_GetTick>
9000b99c:	1b80      	subs	r0, r0, r6
9000b99e:	2802      	cmp	r0, #2
9000b9a0:	d882      	bhi.n	9000b8a8 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b9a2:	682b      	ldr	r3, [r5, #0]
9000b9a4:	0199      	lsls	r1, r3, #6
9000b9a6:	d4f7      	bmi.n	9000b998 <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000b9a8:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000b9aa:	4b2c      	ldr	r3, [pc, #176]	@ (9000ba5c <HAL_RCC_OscConfig+0x4b4>)
9000b9ac:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000b9ae:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b9b0:	492b      	ldr	r1, [pc, #172]	@ (9000ba60 <HAL_RCC_OscConfig+0x4b8>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b9b2:	4e29      	ldr	r6, [pc, #164]	@ (9000ba58 <HAL_RCC_OscConfig+0x4b0>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000b9b4:	4313      	orrs	r3, r2
9000b9b6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b9b8:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000b9bc:	62ab      	str	r3, [r5, #40]	@ 0x28
9000b9be:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000b9c2:	3b01      	subs	r3, #1
9000b9c4:	3a01      	subs	r2, #1
9000b9c6:	025b      	lsls	r3, r3, #9
9000b9c8:	0412      	lsls	r2, r2, #16
9000b9ca:	b29b      	uxth	r3, r3
9000b9cc:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b9d0:	4313      	orrs	r3, r2
9000b9d2:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000b9d4:	3a01      	subs	r2, #1
9000b9d6:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b9da:	4313      	orrs	r3, r2
9000b9dc:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000b9de:	3a01      	subs	r2, #1
9000b9e0:	0612      	lsls	r2, r2, #24
9000b9e2:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b9e6:	4313      	orrs	r3, r2
9000b9e8:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000b9ea:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b9ec:	f023 0301 	bic.w	r3, r3, #1
9000b9f0:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b9f2:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
9000b9f4:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
9000b9f6:	4011      	ands	r1, r2
9000b9f8:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000b9fc:	6369      	str	r1, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000b9fe:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ba00:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000ba02:	f023 030c 	bic.w	r3, r3, #12
9000ba06:	4313      	orrs	r3, r2
9000ba08:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000ba0a:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ba0c:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000ba0e:	f023 0302 	bic.w	r3, r3, #2
9000ba12:	4313      	orrs	r3, r2
9000ba14:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000ba16:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ba18:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000ba1c:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ba1e:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ba20:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000ba24:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000ba26:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ba28:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000ba2c:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000ba2e:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ba30:	f043 0301 	orr.w	r3, r3, #1
9000ba34:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000ba36:	682b      	ldr	r3, [r5, #0]
9000ba38:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000ba3c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ba3e:	f7fc fb21 	bl	90008084 <HAL_GetTick>
9000ba42:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000ba44:	6833      	ldr	r3, [r6, #0]
9000ba46:	019a      	lsls	r2, r3, #6
9000ba48:	f53f ae56 	bmi.w	9000b6f8 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000ba4c:	f7fc fb1a 	bl	90008084 <HAL_GetTick>
9000ba50:	1b00      	subs	r0, r0, r4
9000ba52:	2802      	cmp	r0, #2
9000ba54:	d9f6      	bls.n	9000ba44 <HAL_RCC_OscConfig+0x49c>
9000ba56:	e727      	b.n	9000b8a8 <HAL_RCC_OscConfig+0x300>
9000ba58:	58024400 	.word	0x58024400
9000ba5c:	fffffc0c 	.word	0xfffffc0c
9000ba60:	ffff0007 	.word	0xffff0007
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000ba64:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000ba66:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000ba68:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000ba6a:	f43f aea4 	beq.w	9000b7b6 <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000ba6e:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000ba72:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000ba74:	428b      	cmp	r3, r1
9000ba76:	f47f ae9e 	bne.w	9000b7b6 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000ba7a:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000ba7e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000ba80:	429a      	cmp	r2, r3
9000ba82:	f47f ae98 	bne.w	9000b7b6 <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000ba86:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000ba88:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000ba8c:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000ba8e:	429a      	cmp	r2, r3
9000ba90:	f47f ae91 	bne.w	9000b7b6 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000ba94:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000ba96:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000ba9a:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000ba9c:	429a      	cmp	r2, r3
9000ba9e:	f47f ae8a 	bne.w	9000b7b6 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000baa2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000baa4:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000baa8:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000baaa:	429a      	cmp	r2, r3
9000baac:	f47f ae83 	bne.w	9000b7b6 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000bab0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000bab2:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000bab6:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000bab8:	4298      	cmp	r0, r3
9000baba:	f47f ae7c 	bne.w	9000b7b6 <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000babe:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000bac0:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000bac2:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000bac6:	429a      	cmp	r2, r3
9000bac8:	f43f ae16 	beq.w	9000b6f8 <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000bacc:	4a2d      	ldr	r2, [pc, #180]	@ (9000bb84 <HAL_RCC_OscConfig+0x5dc>)
9000bace:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000bad0:	f023 0301 	bic.w	r3, r3, #1
9000bad4:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000bad6:	f7fc fad5 	bl	90008084 <HAL_GetTick>
9000bada:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000badc:	f7fc fad2 	bl	90008084 <HAL_GetTick>
9000bae0:	42a8      	cmp	r0, r5
9000bae2:	d0fb      	beq.n	9000badc <HAL_RCC_OscConfig+0x534>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000bae4:	4a27      	ldr	r2, [pc, #156]	@ (9000bb84 <HAL_RCC_OscConfig+0x5dc>)
9000bae6:	4b28      	ldr	r3, [pc, #160]	@ (9000bb88 <HAL_RCC_OscConfig+0x5e0>)
9000bae8:	6b50      	ldr	r0, [r2, #52]	@ 0x34
9000baea:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000baec:	4003      	ands	r3, r0
9000baee:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000baf2:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000baf4:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000baf6:	f043 0301 	orr.w	r3, r3, #1
9000bafa:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000bafc:	e5fc      	b.n	9000b6f8 <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000bafe:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000bb02:	601a      	str	r2, [r3, #0]
9000bb04:	681a      	ldr	r2, [r3, #0]
9000bb06:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000bb0a:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000bb0c:	e574      	b.n	9000b5f8 <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000bb0e:	4d1d      	ldr	r5, [pc, #116]	@ (9000bb84 <HAL_RCC_OscConfig+0x5dc>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000bb10:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000bb14:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000bb16:	f023 0301 	bic.w	r3, r3, #1
9000bb1a:	672b      	str	r3, [r5, #112]	@ 0x70
9000bb1c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000bb1e:	f023 0304 	bic.w	r3, r3, #4
9000bb22:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000bb24:	f7fc faae 	bl	90008084 <HAL_GetTick>
9000bb28:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000bb2a:	e005      	b.n	9000bb38 <HAL_RCC_OscConfig+0x590>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000bb2c:	f7fc faaa 	bl	90008084 <HAL_GetTick>
9000bb30:	1b80      	subs	r0, r0, r6
9000bb32:	42b8      	cmp	r0, r7
9000bb34:	f63f aeb8 	bhi.w	9000b8a8 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000bb38:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000bb3a:	0798      	lsls	r0, r3, #30
9000bb3c:	d4f6      	bmi.n	9000bb2c <HAL_RCC_OscConfig+0x584>
9000bb3e:	e5d7      	b.n	9000b6f0 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000bb40:	68eb      	ldr	r3, [r5, #12]
9000bb42:	6a22      	ldr	r2, [r4, #32]
9000bb44:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000bb48:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000bb4c:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000bb4e:	6823      	ldr	r3, [r4, #0]
9000bb50:	e599      	b.n	9000b686 <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000bb52:	4a0c      	ldr	r2, [pc, #48]	@ (9000bb84 <HAL_RCC_OscConfig+0x5dc>)
9000bb54:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000bb56:	f043 0301 	orr.w	r3, r3, #1
9000bb5a:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000bb5c:	e67b      	b.n	9000b856 <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000bb5e:	4a09      	ldr	r2, [pc, #36]	@ (9000bb84 <HAL_RCC_OscConfig+0x5dc>)
9000bb60:	6853      	ldr	r3, [r2, #4]
9000bb62:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000bb66:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000bb6a:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000bb6c:	6823      	ldr	r3, [r4, #0]
9000bb6e:	e58a      	b.n	9000b686 <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000bb70:	f042 0204 	orr.w	r2, r2, #4
9000bb74:	671a      	str	r2, [r3, #112]	@ 0x70
9000bb76:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000bb78:	f042 0201 	orr.w	r2, r2, #1
9000bb7c:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000bb7e:	e66a      	b.n	9000b856 <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000bb80:	2001      	movs	r0, #1
}
9000bb82:	4770      	bx	lr
9000bb84:	58024400 	.word	0x58024400
9000bb88:	ffff0007 	.word	0xffff0007

9000bb8c <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bb8c:	4a3f      	ldr	r2, [pc, #252]	@ (9000bc8c <HAL_RCC_GetSysClockFreq+0x100>)
9000bb8e:	6913      	ldr	r3, [r2, #16]
9000bb90:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000bb94:	2b10      	cmp	r3, #16
9000bb96:	d004      	beq.n	9000bba2 <HAL_RCC_GetSysClockFreq+0x16>
9000bb98:	2b18      	cmp	r3, #24
9000bb9a:	d00d      	beq.n	9000bbb8 <HAL_RCC_GetSysClockFreq+0x2c>
9000bb9c:	b11b      	cbz	r3, 9000bba6 <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000bb9e:	483c      	ldr	r0, [pc, #240]	@ (9000bc90 <HAL_RCC_GetSysClockFreq+0x104>)
9000bba0:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bba2:	483c      	ldr	r0, [pc, #240]	@ (9000bc94 <HAL_RCC_GetSysClockFreq+0x108>)
9000bba4:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000bba6:	6813      	ldr	r3, [r2, #0]
9000bba8:	0699      	lsls	r1, r3, #26
9000bbaa:	d548      	bpl.n	9000bc3e <HAL_RCC_GetSysClockFreq+0xb2>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bbac:	6813      	ldr	r3, [r2, #0]
9000bbae:	483a      	ldr	r0, [pc, #232]	@ (9000bc98 <HAL_RCC_GetSysClockFreq+0x10c>)
9000bbb0:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000bbb4:	40d8      	lsrs	r0, r3
9000bbb6:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bbb8:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000bbba:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000bbbc:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000bbbe:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000bbc0:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bbc4:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000bbc6:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000bbca:	d036      	beq.n	9000bc3a <HAL_RCC_GetSysClockFreq+0xae>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bbcc:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000bbd0:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000bbd4:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bbd8:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000bbdc:	fb05 f303 	mul.w	r3, r5, r3
9000bbe0:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bbe2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000bbe6:	ee06 3a90 	vmov	s13, r3
9000bbea:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000bbee:	d002      	beq.n	9000bbf6 <HAL_RCC_GetSysClockFreq+0x6a>
9000bbf0:	2902      	cmp	r1, #2
9000bbf2:	d026      	beq.n	9000bc42 <HAL_RCC_GetSysClockFreq+0xb6>
9000bbf4:	b341      	cbz	r1, 9000bc48 <HAL_RCC_GetSysClockFreq+0xbc>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bbf6:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 9000bc9c <HAL_RCC_GetSysClockFreq+0x110>
9000bbfa:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000bbfe:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000bc00:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000bc04:	ee07 3a10 	vmov	s14, r3
9000bc08:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000bc0c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000bc10:	ee37 7a26 	vadd.f32	s14, s14, s13
9000bc14:	ee37 7a25 	vadd.f32	s14, s14, s11
9000bc18:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000bc1c:	4b1b      	ldr	r3, [pc, #108]	@ (9000bc8c <HAL_RCC_GetSysClockFreq+0x100>)
9000bc1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000bc20:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000bc24:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000bc26:	ee07 3a90 	vmov	s15, r3
9000bc2a:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000bc2e:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000bc32:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000bc36:	ee17 0a90 	vmov	r0, s15
}
9000bc3a:	bc30      	pop	{r4, r5}
9000bc3c:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000bc3e:	4816      	ldr	r0, [pc, #88]	@ (9000bc98 <HAL_RCC_GetSysClockFreq+0x10c>)
}
9000bc40:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bc42:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 9000bca0 <HAL_RCC_GetSysClockFreq+0x114>
9000bc46:	e7d8      	b.n	9000bbfa <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000bc48:	6813      	ldr	r3, [r2, #0]
9000bc4a:	069b      	lsls	r3, r3, #26
9000bc4c:	d51a      	bpl.n	9000bc84 <HAL_RCC_GetSysClockFreq+0xf8>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bc4e:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bc50:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000bc54:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bc56:	4910      	ldr	r1, [pc, #64]	@ (9000bc98 <HAL_RCC_GetSysClockFreq+0x10c>)
9000bc58:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bc5c:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bc60:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bc62:	ee07 3a10 	vmov	s14, r3
9000bc66:	ee06 1a10 	vmov	s12, r1
9000bc6a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000bc6e:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000bc72:	ee77 6a26 	vadd.f32	s13, s14, s13
9000bc76:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000bc7a:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000bc7e:	ee27 7a27 	vmul.f32	s14, s14, s15
9000bc82:	e7cb      	b.n	9000bc1c <HAL_RCC_GetSysClockFreq+0x90>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000bc84:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000bca4 <HAL_RCC_GetSysClockFreq+0x118>
9000bc88:	e7b7      	b.n	9000bbfa <HAL_RCC_GetSysClockFreq+0x6e>
9000bc8a:	bf00      	nop
9000bc8c:	58024400 	.word	0x58024400
9000bc90:	003d0900 	.word	0x003d0900
9000bc94:	017d7840 	.word	0x017d7840
9000bc98:	03d09000 	.word	0x03d09000
9000bc9c:	4a742400 	.word	0x4a742400
9000bca0:	4bbebc20 	.word	0x4bbebc20
9000bca4:	4c742400 	.word	0x4c742400

9000bca8 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000bca8:	2800      	cmp	r0, #0
9000bcaa:	f000 810e 	beq.w	9000beca <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000bcae:	4a8d      	ldr	r2, [pc, #564]	@ (9000bee4 <HAL_RCC_ClockConfig+0x23c>)
9000bcb0:	6813      	ldr	r3, [r2, #0]
9000bcb2:	f003 030f 	and.w	r3, r3, #15
9000bcb6:	428b      	cmp	r3, r1
{
9000bcb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000bcbc:	4604      	mov	r4, r0
9000bcbe:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000bcc0:	d20c      	bcs.n	9000bcdc <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000bcc2:	6813      	ldr	r3, [r2, #0]
9000bcc4:	f023 030f 	bic.w	r3, r3, #15
9000bcc8:	430b      	orrs	r3, r1
9000bcca:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000bccc:	6813      	ldr	r3, [r2, #0]
9000bcce:	f003 030f 	and.w	r3, r3, #15
9000bcd2:	428b      	cmp	r3, r1
9000bcd4:	d002      	beq.n	9000bcdc <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000bcd6:	2001      	movs	r0, #1
}
9000bcd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000bcdc:	6823      	ldr	r3, [r4, #0]
9000bcde:	0758      	lsls	r0, r3, #29
9000bce0:	d50b      	bpl.n	9000bcfa <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000bce2:	4981      	ldr	r1, [pc, #516]	@ (9000bee8 <HAL_RCC_ClockConfig+0x240>)
9000bce4:	6920      	ldr	r0, [r4, #16]
9000bce6:	698a      	ldr	r2, [r1, #24]
9000bce8:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000bcec:	4290      	cmp	r0, r2
9000bcee:	d904      	bls.n	9000bcfa <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000bcf0:	698a      	ldr	r2, [r1, #24]
9000bcf2:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000bcf6:	4302      	orrs	r2, r0
9000bcf8:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000bcfa:	0719      	lsls	r1, r3, #28
9000bcfc:	d50b      	bpl.n	9000bd16 <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000bcfe:	497a      	ldr	r1, [pc, #488]	@ (9000bee8 <HAL_RCC_ClockConfig+0x240>)
9000bd00:	6960      	ldr	r0, [r4, #20]
9000bd02:	69ca      	ldr	r2, [r1, #28]
9000bd04:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000bd08:	4290      	cmp	r0, r2
9000bd0a:	d904      	bls.n	9000bd16 <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000bd0c:	69ca      	ldr	r2, [r1, #28]
9000bd0e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000bd12:	4302      	orrs	r2, r0
9000bd14:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000bd16:	06da      	lsls	r2, r3, #27
9000bd18:	d50b      	bpl.n	9000bd32 <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000bd1a:	4973      	ldr	r1, [pc, #460]	@ (9000bee8 <HAL_RCC_ClockConfig+0x240>)
9000bd1c:	69a0      	ldr	r0, [r4, #24]
9000bd1e:	69ca      	ldr	r2, [r1, #28]
9000bd20:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000bd24:	4290      	cmp	r0, r2
9000bd26:	d904      	bls.n	9000bd32 <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000bd28:	69ca      	ldr	r2, [r1, #28]
9000bd2a:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000bd2e:	4302      	orrs	r2, r0
9000bd30:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000bd32:	069f      	lsls	r7, r3, #26
9000bd34:	d50b      	bpl.n	9000bd4e <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000bd36:	496c      	ldr	r1, [pc, #432]	@ (9000bee8 <HAL_RCC_ClockConfig+0x240>)
9000bd38:	69e0      	ldr	r0, [r4, #28]
9000bd3a:	6a0a      	ldr	r2, [r1, #32]
9000bd3c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000bd40:	4290      	cmp	r0, r2
9000bd42:	d904      	bls.n	9000bd4e <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000bd44:	6a0a      	ldr	r2, [r1, #32]
9000bd46:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000bd4a:	4302      	orrs	r2, r0
9000bd4c:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000bd4e:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000bd50:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000bd54:	f140 80ab 	bpl.w	9000beae <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000bd58:	4e63      	ldr	r6, [pc, #396]	@ (9000bee8 <HAL_RCC_ClockConfig+0x240>)
9000bd5a:	68e0      	ldr	r0, [r4, #12]
9000bd5c:	69b1      	ldr	r1, [r6, #24]
9000bd5e:	f001 010f 	and.w	r1, r1, #15
9000bd62:	4288      	cmp	r0, r1
9000bd64:	d904      	bls.n	9000bd70 <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000bd66:	69b1      	ldr	r1, [r6, #24]
9000bd68:	f021 010f 	bic.w	r1, r1, #15
9000bd6c:	4301      	orrs	r1, r0
9000bd6e:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000bd70:	2a00      	cmp	r2, #0
9000bd72:	d030      	beq.n	9000bdd6 <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000bd74:	4a5c      	ldr	r2, [pc, #368]	@ (9000bee8 <HAL_RCC_ClockConfig+0x240>)
9000bd76:	68a1      	ldr	r1, [r4, #8]
9000bd78:	6993      	ldr	r3, [r2, #24]
9000bd7a:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000bd7e:	430b      	orrs	r3, r1
9000bd80:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000bd82:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000bd84:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000bd86:	2902      	cmp	r1, #2
9000bd88:	f000 80a1 	beq.w	9000bece <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000bd8c:	2903      	cmp	r1, #3
9000bd8e:	f000 8098 	beq.w	9000bec2 <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000bd92:	2901      	cmp	r1, #1
9000bd94:	f000 80a1 	beq.w	9000beda <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000bd98:	075f      	lsls	r7, r3, #29
9000bd9a:	d59c      	bpl.n	9000bcd6 <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000bd9c:	4e52      	ldr	r6, [pc, #328]	@ (9000bee8 <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000bd9e:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000bda2:	6933      	ldr	r3, [r6, #16]
9000bda4:	f023 0307 	bic.w	r3, r3, #7
9000bda8:	430b      	orrs	r3, r1
9000bdaa:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000bdac:	f7fc f96a 	bl	90008084 <HAL_GetTick>
9000bdb0:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000bdb2:	e005      	b.n	9000bdc0 <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000bdb4:	f7fc f966 	bl	90008084 <HAL_GetTick>
9000bdb8:	1bc0      	subs	r0, r0, r7
9000bdba:	4540      	cmp	r0, r8
9000bdbc:	f200 808b 	bhi.w	9000bed6 <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000bdc0:	6933      	ldr	r3, [r6, #16]
9000bdc2:	6862      	ldr	r2, [r4, #4]
9000bdc4:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000bdc8:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000bdcc:	d1f2      	bne.n	9000bdb4 <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000bdce:	6823      	ldr	r3, [r4, #0]
9000bdd0:	079e      	lsls	r6, r3, #30
9000bdd2:	d506      	bpl.n	9000bde2 <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000bdd4:	68e0      	ldr	r0, [r4, #12]
9000bdd6:	4944      	ldr	r1, [pc, #272]	@ (9000bee8 <HAL_RCC_ClockConfig+0x240>)
9000bdd8:	698a      	ldr	r2, [r1, #24]
9000bdda:	f002 020f 	and.w	r2, r2, #15
9000bdde:	4282      	cmp	r2, r0
9000bde0:	d869      	bhi.n	9000beb6 <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000bde2:	4940      	ldr	r1, [pc, #256]	@ (9000bee4 <HAL_RCC_ClockConfig+0x23c>)
9000bde4:	680a      	ldr	r2, [r1, #0]
9000bde6:	f002 020f 	and.w	r2, r2, #15
9000bdea:	42aa      	cmp	r2, r5
9000bdec:	d90a      	bls.n	9000be04 <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000bdee:	680a      	ldr	r2, [r1, #0]
9000bdf0:	f022 020f 	bic.w	r2, r2, #15
9000bdf4:	432a      	orrs	r2, r5
9000bdf6:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000bdf8:	680a      	ldr	r2, [r1, #0]
9000bdfa:	f002 020f 	and.w	r2, r2, #15
9000bdfe:	42aa      	cmp	r2, r5
9000be00:	f47f af69 	bne.w	9000bcd6 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000be04:	0758      	lsls	r0, r3, #29
9000be06:	d50b      	bpl.n	9000be20 <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000be08:	4937      	ldr	r1, [pc, #220]	@ (9000bee8 <HAL_RCC_ClockConfig+0x240>)
9000be0a:	6920      	ldr	r0, [r4, #16]
9000be0c:	698a      	ldr	r2, [r1, #24]
9000be0e:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000be12:	4290      	cmp	r0, r2
9000be14:	d204      	bcs.n	9000be20 <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000be16:	698a      	ldr	r2, [r1, #24]
9000be18:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000be1c:	4302      	orrs	r2, r0
9000be1e:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000be20:	0719      	lsls	r1, r3, #28
9000be22:	d50b      	bpl.n	9000be3c <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000be24:	4930      	ldr	r1, [pc, #192]	@ (9000bee8 <HAL_RCC_ClockConfig+0x240>)
9000be26:	6960      	ldr	r0, [r4, #20]
9000be28:	69ca      	ldr	r2, [r1, #28]
9000be2a:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000be2e:	4290      	cmp	r0, r2
9000be30:	d204      	bcs.n	9000be3c <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000be32:	69ca      	ldr	r2, [r1, #28]
9000be34:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000be38:	4302      	orrs	r2, r0
9000be3a:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000be3c:	06da      	lsls	r2, r3, #27
9000be3e:	d50b      	bpl.n	9000be58 <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000be40:	4929      	ldr	r1, [pc, #164]	@ (9000bee8 <HAL_RCC_ClockConfig+0x240>)
9000be42:	69a0      	ldr	r0, [r4, #24]
9000be44:	69ca      	ldr	r2, [r1, #28]
9000be46:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000be4a:	4290      	cmp	r0, r2
9000be4c:	d204      	bcs.n	9000be58 <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000be4e:	69ca      	ldr	r2, [r1, #28]
9000be50:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000be54:	4302      	orrs	r2, r0
9000be56:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000be58:	069b      	lsls	r3, r3, #26
9000be5a:	d50b      	bpl.n	9000be74 <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000be5c:	4a22      	ldr	r2, [pc, #136]	@ (9000bee8 <HAL_RCC_ClockConfig+0x240>)
9000be5e:	69e1      	ldr	r1, [r4, #28]
9000be60:	6a13      	ldr	r3, [r2, #32]
9000be62:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000be66:	4299      	cmp	r1, r3
9000be68:	d204      	bcs.n	9000be74 <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000be6a:	6a13      	ldr	r3, [r2, #32]
9000be6c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000be70:	430b      	orrs	r3, r1
9000be72:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000be74:	f7ff fe8a 	bl	9000bb8c <HAL_RCC_GetSysClockFreq>
9000be78:	4a1b      	ldr	r2, [pc, #108]	@ (9000bee8 <HAL_RCC_ClockConfig+0x240>)
9000be7a:	4603      	mov	r3, r0
9000be7c:	481b      	ldr	r0, [pc, #108]	@ (9000beec <HAL_RCC_ClockConfig+0x244>)
9000be7e:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000be80:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000be82:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000be86:	4d1a      	ldr	r5, [pc, #104]	@ (9000bef0 <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000be88:	f002 020f 	and.w	r2, r2, #15
9000be8c:	4c19      	ldr	r4, [pc, #100]	@ (9000bef4 <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000be8e:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000be90:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000be92:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000be96:	4818      	ldr	r0, [pc, #96]	@ (9000bef8 <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000be98:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000be9c:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000be9e:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000bea0:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bea2:	40d3      	lsrs	r3, r2
9000bea4:	6023      	str	r3, [r4, #0]
}
9000bea6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000beaa:	f7f8 b9b5 	b.w	90004218 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000beae:	2a00      	cmp	r2, #0
9000beb0:	f47f af60 	bne.w	9000bd74 <HAL_RCC_ClockConfig+0xcc>
9000beb4:	e795      	b.n	9000bde2 <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000beb6:	698a      	ldr	r2, [r1, #24]
9000beb8:	f022 020f 	bic.w	r2, r2, #15
9000bebc:	4302      	orrs	r2, r0
9000bebe:	618a      	str	r2, [r1, #24]
9000bec0:	e78f      	b.n	9000bde2 <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000bec2:	019a      	lsls	r2, r3, #6
9000bec4:	f53f af6a 	bmi.w	9000bd9c <HAL_RCC_ClockConfig+0xf4>
9000bec8:	e705      	b.n	9000bcd6 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000beca:	2001      	movs	r0, #1
}
9000becc:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000bece:	0398      	lsls	r0, r3, #14
9000bed0:	f53f af64 	bmi.w	9000bd9c <HAL_RCC_ClockConfig+0xf4>
9000bed4:	e6ff      	b.n	9000bcd6 <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000bed6:	2003      	movs	r0, #3
9000bed8:	e6fe      	b.n	9000bcd8 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000beda:	05db      	lsls	r3, r3, #23
9000bedc:	f53f af5e 	bmi.w	9000bd9c <HAL_RCC_ClockConfig+0xf4>
9000bee0:	e6f9      	b.n	9000bcd6 <HAL_RCC_ClockConfig+0x2e>
9000bee2:	bf00      	nop
9000bee4:	52002000 	.word	0x52002000
9000bee8:	58024400 	.word	0x58024400
9000beec:	9002d480 	.word	0x9002d480
9000bef0:	24000098 	.word	0x24000098
9000bef4:	24000094 	.word	0x24000094
9000bef8:	240000a0 	.word	0x240000a0

9000befc <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000befc:	4a1c      	ldr	r2, [pc, #112]	@ (9000bf70 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000befe:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bf00:	6913      	ldr	r3, [r2, #16]
9000bf02:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000bf06:	2b10      	cmp	r3, #16
9000bf08:	d020      	beq.n	9000bf4c <HAL_RCC_GetPCLK1Freq+0x50>
9000bf0a:	2b18      	cmp	r3, #24
9000bf0c:	d029      	beq.n	9000bf62 <HAL_RCC_GetPCLK1Freq+0x66>
9000bf0e:	b1fb      	cbz	r3, 9000bf50 <HAL_RCC_GetPCLK1Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000bf10:	4b18      	ldr	r3, [pc, #96]	@ (9000bf74 <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bf12:	4a17      	ldr	r2, [pc, #92]	@ (9000bf70 <HAL_RCC_GetPCLK1Freq+0x74>)
9000bf14:	4918      	ldr	r1, [pc, #96]	@ (9000bf78 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000bf16:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000bf18:	4d18      	ldr	r5, [pc, #96]	@ (9000bf7c <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bf1a:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bf1e:	4c18      	ldr	r4, [pc, #96]	@ (9000bf80 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bf20:	5c08      	ldrb	r0, [r1, r0]
9000bf22:	f000 001f 	and.w	r0, r0, #31
9000bf26:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bf28:	6990      	ldr	r0, [r2, #24]
9000bf2a:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000bf2e:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bf30:	5c08      	ldrb	r0, [r1, r0]
9000bf32:	f000 001f 	and.w	r0, r0, #31
9000bf36:	40c3      	lsrs	r3, r0
9000bf38:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000bf3a:	69d2      	ldr	r2, [r2, #28]
9000bf3c:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000bf40:	5c88      	ldrb	r0, [r1, r2]
9000bf42:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000bf46:	fa23 f000 	lsr.w	r0, r3, r0
9000bf4a:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bf4c:	4b0d      	ldr	r3, [pc, #52]	@ (9000bf84 <HAL_RCC_GetPCLK1Freq+0x88>)
9000bf4e:	e7e0      	b.n	9000bf12 <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000bf50:	6813      	ldr	r3, [r2, #0]
9000bf52:	069b      	lsls	r3, r3, #26
9000bf54:	d509      	bpl.n	9000bf6a <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bf56:	6812      	ldr	r2, [r2, #0]
9000bf58:	4b0b      	ldr	r3, [pc, #44]	@ (9000bf88 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000bf5a:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000bf5e:	40d3      	lsrs	r3, r2
9000bf60:	e7d7      	b.n	9000bf12 <HAL_RCC_GetPCLK1Freq+0x16>
9000bf62:	f7ff faaf 	bl	9000b4c4 <HAL_RCC_GetSysClockFreq.part.0>
9000bf66:	4603      	mov	r3, r0
9000bf68:	e7d3      	b.n	9000bf12 <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000bf6a:	4b07      	ldr	r3, [pc, #28]	@ (9000bf88 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000bf6c:	e7d1      	b.n	9000bf12 <HAL_RCC_GetPCLK1Freq+0x16>
9000bf6e:	bf00      	nop
9000bf70:	58024400 	.word	0x58024400
9000bf74:	003d0900 	.word	0x003d0900
9000bf78:	9002d480 	.word	0x9002d480
9000bf7c:	24000098 	.word	0x24000098
9000bf80:	24000094 	.word	0x24000094
9000bf84:	017d7840 	.word	0x017d7840
9000bf88:	03d09000 	.word	0x03d09000

9000bf8c <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bf8c:	4a1c      	ldr	r2, [pc, #112]	@ (9000c000 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000bf8e:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bf90:	6913      	ldr	r3, [r2, #16]
9000bf92:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000bf96:	2b10      	cmp	r3, #16
9000bf98:	d020      	beq.n	9000bfdc <HAL_RCC_GetPCLK2Freq+0x50>
9000bf9a:	2b18      	cmp	r3, #24
9000bf9c:	d029      	beq.n	9000bff2 <HAL_RCC_GetPCLK2Freq+0x66>
9000bf9e:	b1fb      	cbz	r3, 9000bfe0 <HAL_RCC_GetPCLK2Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000bfa0:	4b18      	ldr	r3, [pc, #96]	@ (9000c004 <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bfa2:	4a17      	ldr	r2, [pc, #92]	@ (9000c000 <HAL_RCC_GetPCLK2Freq+0x74>)
9000bfa4:	4918      	ldr	r1, [pc, #96]	@ (9000c008 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000bfa6:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000bfa8:	4d18      	ldr	r5, [pc, #96]	@ (9000c00c <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bfaa:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bfae:	4c18      	ldr	r4, [pc, #96]	@ (9000c010 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000bfb0:	5c08      	ldrb	r0, [r1, r0]
9000bfb2:	f000 001f 	and.w	r0, r0, #31
9000bfb6:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bfb8:	6990      	ldr	r0, [r2, #24]
9000bfba:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000bfbe:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000bfc0:	5c08      	ldrb	r0, [r1, r0]
9000bfc2:	f000 001f 	and.w	r0, r0, #31
9000bfc6:	40c3      	lsrs	r3, r0
9000bfc8:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000bfca:	69d2      	ldr	r2, [r2, #28]
9000bfcc:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000bfd0:	5c88      	ldrb	r0, [r1, r2]
9000bfd2:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000bfd6:	fa23 f000 	lsr.w	r0, r3, r0
9000bfda:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000bfdc:	4b0d      	ldr	r3, [pc, #52]	@ (9000c014 <HAL_RCC_GetPCLK2Freq+0x88>)
9000bfde:	e7e0      	b.n	9000bfa2 <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000bfe0:	6813      	ldr	r3, [r2, #0]
9000bfe2:	069b      	lsls	r3, r3, #26
9000bfe4:	d509      	bpl.n	9000bffa <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000bfe6:	6812      	ldr	r2, [r2, #0]
9000bfe8:	4b0b      	ldr	r3, [pc, #44]	@ (9000c018 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000bfea:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000bfee:	40d3      	lsrs	r3, r2
9000bff0:	e7d7      	b.n	9000bfa2 <HAL_RCC_GetPCLK2Freq+0x16>
9000bff2:	f7ff fa67 	bl	9000b4c4 <HAL_RCC_GetSysClockFreq.part.0>
9000bff6:	4603      	mov	r3, r0
9000bff8:	e7d3      	b.n	9000bfa2 <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000bffa:	4b07      	ldr	r3, [pc, #28]	@ (9000c018 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000bffc:	e7d1      	b.n	9000bfa2 <HAL_RCC_GetPCLK2Freq+0x16>
9000bffe:	bf00      	nop
9000c000:	58024400 	.word	0x58024400
9000c004:	003d0900 	.word	0x003d0900
9000c008:	9002d480 	.word	0x9002d480
9000c00c:	24000098 	.word	0x24000098
9000c010:	24000094 	.word	0x24000094
9000c014:	017d7840 	.word	0x017d7840
9000c018:	03d09000 	.word	0x03d09000

9000c01c <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c01c:	4b13      	ldr	r3, [pc, #76]	@ (9000c06c <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000c01e:	223f      	movs	r2, #63	@ 0x3f
9000c020:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000c022:	691a      	ldr	r2, [r3, #16]
9000c024:	f002 0207 	and.w	r2, r2, #7
9000c028:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000c02a:	699a      	ldr	r2, [r3, #24]
9000c02c:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000c030:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000c032:	699a      	ldr	r2, [r3, #24]
9000c034:	f002 020f 	and.w	r2, r2, #15
9000c038:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000c03a:	699a      	ldr	r2, [r3, #24]
9000c03c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c040:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000c042:	69da      	ldr	r2, [r3, #28]
9000c044:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000c048:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000c04a:	69da      	ldr	r2, [r3, #28]
9000c04c:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000c050:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c052:	6a1b      	ldr	r3, [r3, #32]
{
9000c054:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c056:	f003 0370 	and.w	r3, r3, #112	@ 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c05a:	4c05      	ldr	r4, [pc, #20]	@ (9000c070 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000c05c:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c05e:	6823      	ldr	r3, [r4, #0]
}
9000c060:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000c064:	f003 030f 	and.w	r3, r3, #15
9000c068:	600b      	str	r3, [r1, #0]
}
9000c06a:	4770      	bx	lr
9000c06c:	58024400 	.word	0x58024400
9000c070:	52002000 	.word	0x52002000

9000c074 <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000c074:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000c076:	4c36      	ldr	r4, [pc, #216]	@ (9000c150 <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000c078:	4606      	mov	r6, r0
9000c07a:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000c07c:	6823      	ldr	r3, [r4, #0]
9000c07e:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000c082:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c084:	f7fb fffe 	bl	90008084 <HAL_GetTick>
9000c088:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000c08a:	e004      	b.n	9000c096 <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000c08c:	f7fb fffa 	bl	90008084 <HAL_GetTick>
9000c090:	1b40      	subs	r0, r0, r5
9000c092:	2802      	cmp	r0, #2
9000c094:	d856      	bhi.n	9000c144 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000c096:	6823      	ldr	r3, [r4, #0]
9000c098:	011a      	lsls	r2, r3, #4
9000c09a:	d4f7      	bmi.n	9000c08c <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000c09c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000c09e:	6832      	ldr	r2, [r6, #0]
9000c0a0:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000c0a4:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000c0a8:	62a3      	str	r3, [r4, #40]	@ 0x28
9000c0aa:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000c0ae:	3b01      	subs	r3, #1
9000c0b0:	3a01      	subs	r2, #1
9000c0b2:	025b      	lsls	r3, r3, #9
9000c0b4:	0412      	lsls	r2, r2, #16
9000c0b6:	b29b      	uxth	r3, r3
9000c0b8:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000c0bc:	4313      	orrs	r3, r2
9000c0be:	6872      	ldr	r2, [r6, #4]
9000c0c0:	3a01      	subs	r2, #1
9000c0c2:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c0c6:	4313      	orrs	r3, r2
9000c0c8:	6932      	ldr	r2, [r6, #16]
9000c0ca:	3a01      	subs	r2, #1
9000c0cc:	0612      	lsls	r2, r2, #24
9000c0ce:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000c0d2:	4313      	orrs	r3, r2
9000c0d4:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000c0d6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c0d8:	6972      	ldr	r2, [r6, #20]
9000c0da:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000c0de:	4313      	orrs	r3, r2
9000c0e0:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000c0e2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000c0e4:	69b3      	ldr	r3, [r6, #24]
9000c0e6:	f022 0220 	bic.w	r2, r2, #32
9000c0ea:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000c0ec:	4b19      	ldr	r3, [pc, #100]	@ (9000c154 <RCCEx_PLL2_Config.part.0+0xe0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000c0ee:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000c0f0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000c0f2:	f022 0210 	bic.w	r2, r2, #16
9000c0f6:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000c0f8:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
9000c0fa:	69f2      	ldr	r2, [r6, #28]
9000c0fc:	400b      	ands	r3, r1
9000c0fe:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000c102:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000c104:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c106:	f043 0310 	orr.w	r3, r3, #16
9000c10a:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000c10c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000c10e:	b1df      	cbz	r7, 9000c148 <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000c110:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000c112:	bf0c      	ite	eq
9000c114:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000c118:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000c11c:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000c11e:	4c0c      	ldr	r4, [pc, #48]	@ (9000c150 <RCCEx_PLL2_Config.part.0+0xdc>)
9000c120:	6823      	ldr	r3, [r4, #0]
9000c122:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000c126:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c128:	f7fb ffac 	bl	90008084 <HAL_GetTick>
9000c12c:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000c12e:	e004      	b.n	9000c13a <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000c130:	f7fb ffa8 	bl	90008084 <HAL_GetTick>
9000c134:	1b40      	subs	r0, r0, r5
9000c136:	2802      	cmp	r0, #2
9000c138:	d804      	bhi.n	9000c144 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000c13a:	6823      	ldr	r3, [r4, #0]
9000c13c:	011b      	lsls	r3, r3, #4
9000c13e:	d5f7      	bpl.n	9000c130 <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000c140:	2000      	movs	r0, #0
}
9000c142:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000c144:	2003      	movs	r0, #3
}
9000c146:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000c148:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000c14c:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000c14e:	e7e6      	b.n	9000c11e <RCCEx_PLL2_Config.part.0+0xaa>
9000c150:	58024400 	.word	0x58024400
9000c154:	ffff0007 	.word	0xffff0007

9000c158 <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000c158:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000c15a:	4c36      	ldr	r4, [pc, #216]	@ (9000c234 <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000c15c:	4606      	mov	r6, r0
9000c15e:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000c160:	6823      	ldr	r3, [r4, #0]
9000c162:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000c166:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c168:	f7fb ff8c 	bl	90008084 <HAL_GetTick>
9000c16c:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000c16e:	e004      	b.n	9000c17a <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000c170:	f7fb ff88 	bl	90008084 <HAL_GetTick>
9000c174:	1b40      	subs	r0, r0, r5
9000c176:	2802      	cmp	r0, #2
9000c178:	d856      	bhi.n	9000c228 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000c17a:	6823      	ldr	r3, [r4, #0]
9000c17c:	009a      	lsls	r2, r3, #2
9000c17e:	d4f7      	bmi.n	9000c170 <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000c180:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000c182:	6832      	ldr	r2, [r6, #0]
9000c184:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000c188:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000c18c:	62a3      	str	r3, [r4, #40]	@ 0x28
9000c18e:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000c192:	3b01      	subs	r3, #1
9000c194:	3a01      	subs	r2, #1
9000c196:	025b      	lsls	r3, r3, #9
9000c198:	0412      	lsls	r2, r2, #16
9000c19a:	b29b      	uxth	r3, r3
9000c19c:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000c1a0:	4313      	orrs	r3, r2
9000c1a2:	6872      	ldr	r2, [r6, #4]
9000c1a4:	3a01      	subs	r2, #1
9000c1a6:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c1aa:	4313      	orrs	r3, r2
9000c1ac:	6932      	ldr	r2, [r6, #16]
9000c1ae:	3a01      	subs	r2, #1
9000c1b0:	0612      	lsls	r2, r2, #24
9000c1b2:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000c1b6:	4313      	orrs	r3, r2
9000c1b8:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000c1ba:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c1bc:	6972      	ldr	r2, [r6, #20]
9000c1be:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000c1c2:	4313      	orrs	r3, r2
9000c1c4:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000c1c6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000c1c8:	69b3      	ldr	r3, [r6, #24]
9000c1ca:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
9000c1ce:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000c1d0:	4b19      	ldr	r3, [pc, #100]	@ (9000c238 <RCCEx_PLL3_Config.part.0+0xe0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000c1d2:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000c1d4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000c1d6:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000c1da:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000c1dc:	6c61      	ldr	r1, [r4, #68]	@ 0x44
9000c1de:	69f2      	ldr	r2, [r6, #28]
9000c1e0:	400b      	ands	r3, r1
9000c1e2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000c1e6:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000c1e8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000c1ea:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000c1ee:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000c1f0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000c1f2:	b1df      	cbz	r7, 9000c22c <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000c1f4:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000c1f6:	bf0c      	ite	eq
9000c1f8:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000c1fc:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000c200:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000c202:	4c0c      	ldr	r4, [pc, #48]	@ (9000c234 <RCCEx_PLL3_Config.part.0+0xdc>)
9000c204:	6823      	ldr	r3, [r4, #0]
9000c206:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000c20a:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000c20c:	f7fb ff3a 	bl	90008084 <HAL_GetTick>
9000c210:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000c212:	e004      	b.n	9000c21e <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000c214:	f7fb ff36 	bl	90008084 <HAL_GetTick>
9000c218:	1b40      	subs	r0, r0, r5
9000c21a:	2802      	cmp	r0, #2
9000c21c:	d804      	bhi.n	9000c228 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000c21e:	6823      	ldr	r3, [r4, #0]
9000c220:	009b      	lsls	r3, r3, #2
9000c222:	d5f7      	bpl.n	9000c214 <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000c224:	2000      	movs	r0, #0
}
9000c226:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000c228:	2003      	movs	r0, #3
}
9000c22a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000c22c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000c230:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000c232:	e7e6      	b.n	9000c202 <RCCEx_PLL3_Config.part.0+0xaa>
9000c234:	58024400 	.word	0x58024400
9000c238:	ffff0007 	.word	0xffff0007

9000c23c <HAL_RCCEx_PeriphCLKConfig>:
{
9000c23c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000c240:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000c244:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000c246:	011d      	lsls	r5, r3, #4
9000c248:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000c24c:	d525      	bpl.n	9000c29a <HAL_RCCEx_PeriphCLKConfig+0x5e>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000c24e:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000c250:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000c254:	f000 8660 	beq.w	9000cf18 <HAL_RCCEx_PeriphCLKConfig+0xcdc>
9000c258:	d814      	bhi.n	9000c284 <HAL_RCCEx_PeriphCLKConfig+0x48>
9000c25a:	2900      	cmp	r1, #0
9000c25c:	f000 86fa 	beq.w	9000d054 <HAL_RCCEx_PeriphCLKConfig+0xe18>
9000c260:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000c264:	f040 8466 	bne.w	9000cb34 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c268:	49ad      	ldr	r1, [pc, #692]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c26a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c26c:	f001 0103 	and.w	r1, r1, #3
9000c270:	2903      	cmp	r1, #3
9000c272:	f000 845f 	beq.w	9000cb34 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000c276:	2102      	movs	r1, #2
9000c278:	3008      	adds	r0, #8
9000c27a:	f7ff fefb 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000c27e:	4606      	mov	r6, r0
        break;
9000c280:	f000 be56 	b.w	9000cf30 <HAL_RCCEx_PeriphCLKConfig+0xcf4>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000c284:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000c288:	f040 8454 	bne.w	9000cb34 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000c28c:	4da4      	ldr	r5, [pc, #656]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000c28e:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000c290:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000c292:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000c296:	4301      	orrs	r1, r0
9000c298:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000c29a:	05d8      	lsls	r0, r3, #23
9000c29c:	d50a      	bpl.n	9000c2b4 <HAL_RCCEx_PeriphCLKConfig+0x78>
    switch (PeriphClkInit->Sai1ClockSelection)
9000c29e:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000c2a0:	2904      	cmp	r1, #4
9000c2a2:	d806      	bhi.n	9000c2b2 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000c2a4:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c2a8:	064c04a8 	.word	0x064c04a8
9000c2ac:	04ad0661 	.word	0x04ad0661
9000c2b0:	04ad      	.short	0x04ad
9000c2b2:	2601      	movs	r6, #1
9000c2b4:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c2b6:	0599      	lsls	r1, r3, #22
9000c2b8:	d524      	bpl.n	9000c304 <HAL_RCCEx_PeriphCLKConfig+0xc8>
    switch (PeriphClkInit->Sai23ClockSelection)
9000c2ba:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000c2bc:	2980      	cmp	r1, #128	@ 0x80
9000c2be:	f000 8664 	beq.w	9000cf8a <HAL_RCCEx_PeriphCLKConfig+0xd4e>
9000c2c2:	f200 8122 	bhi.w	9000c50a <HAL_RCCEx_PeriphCLKConfig+0x2ce>
9000c2c6:	2900      	cmp	r1, #0
9000c2c8:	f000 84ac 	beq.w	9000cc24 <HAL_RCCEx_PeriphCLKConfig+0x9e8>
9000c2cc:	2940      	cmp	r1, #64	@ 0x40
9000c2ce:	f040 8123 	bne.w	9000c518 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c2d2:	4993      	ldr	r1, [pc, #588]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c2d4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c2d6:	f001 0103 	and.w	r1, r1, #3
9000c2da:	2903      	cmp	r1, #3
9000c2dc:	f000 811c 	beq.w	9000c518 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000c2e0:	2100      	movs	r1, #0
9000c2e2:	f104 0008 	add.w	r0, r4, #8
9000c2e6:	f7ff fec5 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000c2ea:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c2ec:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c2f0:	2d00      	cmp	r5, #0
9000c2f2:	f040 851b 	bne.w	9000cd2c <HAL_RCCEx_PeriphCLKConfig+0xaf0>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000c2f6:	4f8a      	ldr	r7, [pc, #552]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c2f8:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000c2fa:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c2fc:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000c300:	4301      	orrs	r1, r0
9000c302:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c304:	055f      	lsls	r7, r3, #21
9000c306:	d528      	bpl.n	9000c35a <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4AClockSelection)
9000c308:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000c30c:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000c310:	f000 864f 	beq.w	9000cfb2 <HAL_RCCEx_PeriphCLKConfig+0xd76>
9000c314:	f200 8106 	bhi.w	9000c524 <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000c318:	2900      	cmp	r1, #0
9000c31a:	f000 8463 	beq.w	9000cbe4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000c31e:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000c322:	f040 8107 	bne.w	9000c534 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c326:	497e      	ldr	r1, [pc, #504]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c328:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c32a:	f001 0103 	and.w	r1, r1, #3
9000c32e:	2903      	cmp	r1, #3
9000c330:	f000 8100 	beq.w	9000c534 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000c334:	2100      	movs	r1, #0
9000c336:	f104 0008 	add.w	r0, r4, #8
9000c33a:	f7ff fe9b 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000c33e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c340:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c344:	2d00      	cmp	r5, #0
9000c346:	f040 84f4 	bne.w	9000cd32 <HAL_RCCEx_PeriphCLKConfig+0xaf6>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000c34a:	4f75      	ldr	r7, [pc, #468]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c34c:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000c350:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c352:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000c356:	4301      	orrs	r1, r0
9000c358:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c35a:	0518      	lsls	r0, r3, #20
9000c35c:	d528      	bpl.n	9000c3b0 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->Sai4BClockSelection)
9000c35e:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000c362:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000c366:	f000 85ac 	beq.w	9000cec2 <HAL_RCCEx_PeriphCLKConfig+0xc86>
9000c36a:	f200 80e6 	bhi.w	9000c53a <HAL_RCCEx_PeriphCLKConfig+0x2fe>
9000c36e:	2900      	cmp	r1, #0
9000c370:	f000 8425 	beq.w	9000cbbe <HAL_RCCEx_PeriphCLKConfig+0x982>
9000c374:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000c378:	f040 80e7 	bne.w	9000c54a <HAL_RCCEx_PeriphCLKConfig+0x30e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c37c:	4968      	ldr	r1, [pc, #416]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c37e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c380:	f001 0103 	and.w	r1, r1, #3
9000c384:	2903      	cmp	r1, #3
9000c386:	f000 80e0 	beq.w	9000c54a <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000c38a:	2100      	movs	r1, #0
9000c38c:	f104 0008 	add.w	r0, r4, #8
9000c390:	f7ff fe70 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000c394:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000c396:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c39a:	2d00      	cmp	r5, #0
9000c39c:	f040 84cc 	bne.w	9000cd38 <HAL_RCCEx_PeriphCLKConfig+0xafc>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000c3a0:	4f5f      	ldr	r7, [pc, #380]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c3a2:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000c3a6:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c3a8:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000c3ac:	4301      	orrs	r1, r0
9000c3ae:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000c3b0:	0199      	lsls	r1, r3, #6
9000c3b2:	d518      	bpl.n	9000c3e6 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->QspiClockSelection)
9000c3b4:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000c3b6:	2920      	cmp	r1, #32
9000c3b8:	f000 84ff 	beq.w	9000cdba <HAL_RCCEx_PeriphCLKConfig+0xb7e>
9000c3bc:	f200 80c8 	bhi.w	9000c550 <HAL_RCCEx_PeriphCLKConfig+0x314>
9000c3c0:	b139      	cbz	r1, 9000c3d2 <HAL_RCCEx_PeriphCLKConfig+0x196>
9000c3c2:	2910      	cmp	r1, #16
9000c3c4:	f040 80c7 	bne.w	9000c556 <HAL_RCCEx_PeriphCLKConfig+0x31a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c3c8:	4855      	ldr	r0, [pc, #340]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c3ca:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c3cc:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c3d0:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c3d2:	2d00      	cmp	r5, #0
9000c3d4:	f040 849f 	bne.w	9000cd16 <HAL_RCCEx_PeriphCLKConfig+0xada>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000c3d8:	4f51      	ldr	r7, [pc, #324]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c3da:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000c3dc:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000c3de:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000c3e2:	4301      	orrs	r1, r0
9000c3e4:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000c3e6:	04df      	lsls	r7, r3, #19
9000c3e8:	d526      	bpl.n	9000c438 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi123ClockSelection)
9000c3ea:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000c3ec:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000c3f0:	f000 857b 	beq.w	9000ceea <HAL_RCCEx_PeriphCLKConfig+0xcae>
9000c3f4:	f200 80b2 	bhi.w	9000c55c <HAL_RCCEx_PeriphCLKConfig+0x320>
9000c3f8:	2900      	cmp	r1, #0
9000c3fa:	f000 83ea 	beq.w	9000cbd2 <HAL_RCCEx_PeriphCLKConfig+0x996>
9000c3fe:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000c402:	f040 80b3 	bne.w	9000c56c <HAL_RCCEx_PeriphCLKConfig+0x330>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c406:	4946      	ldr	r1, [pc, #280]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c408:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c40a:	f001 0103 	and.w	r1, r1, #3
9000c40e:	2903      	cmp	r1, #3
9000c410:	f000 80ac 	beq.w	9000c56c <HAL_RCCEx_PeriphCLKConfig+0x330>
9000c414:	2100      	movs	r1, #0
9000c416:	f104 0008 	add.w	r0, r4, #8
9000c41a:	f7ff fe2b 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000c41e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000c420:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c424:	2d00      	cmp	r5, #0
9000c426:	f040 848a 	bne.w	9000cd3e <HAL_RCCEx_PeriphCLKConfig+0xb02>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000c42a:	4f3d      	ldr	r7, [pc, #244]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c42c:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000c42e:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c430:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000c434:	4301      	orrs	r1, r0
9000c436:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000c438:	0498      	lsls	r0, r3, #18
9000c43a:	d524      	bpl.n	9000c486 <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi45ClockSelection)
9000c43c:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000c43e:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000c442:	f000 8516 	beq.w	9000ce72 <HAL_RCCEx_PeriphCLKConfig+0xc36>
9000c446:	f200 8094 	bhi.w	9000c572 <HAL_RCCEx_PeriphCLKConfig+0x336>
9000c44a:	b191      	cbz	r1, 9000c472 <HAL_RCCEx_PeriphCLKConfig+0x236>
9000c44c:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000c450:	f040 8099 	bne.w	9000c586 <HAL_RCCEx_PeriphCLKConfig+0x34a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c454:	4932      	ldr	r1, [pc, #200]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c456:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c458:	f001 0103 	and.w	r1, r1, #3
9000c45c:	2903      	cmp	r1, #3
9000c45e:	f000 8092 	beq.w	9000c586 <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000c462:	2101      	movs	r1, #1
9000c464:	f104 0008 	add.w	r0, r4, #8
9000c468:	f7ff fe04 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000c46c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c46e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c472:	2d00      	cmp	r5, #0
9000c474:	f040 8476 	bne.w	9000cd64 <HAL_RCCEx_PeriphCLKConfig+0xb28>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000c478:	4f29      	ldr	r7, [pc, #164]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c47a:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000c47c:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c47e:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000c482:	4301      	orrs	r1, r0
9000c484:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c486:	0459      	lsls	r1, r3, #17
9000c488:	d523      	bpl.n	9000c4d2 <HAL_RCCEx_PeriphCLKConfig+0x296>
    switch (PeriphClkInit->Spi6ClockSelection)
9000c48a:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000c48e:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000c492:	f000 8502 	beq.w	9000ce9a <HAL_RCCEx_PeriphCLKConfig+0xc5e>
9000c496:	d879      	bhi.n	9000c58c <HAL_RCCEx_PeriphCLKConfig+0x350>
9000c498:	b181      	cbz	r1, 9000c4bc <HAL_RCCEx_PeriphCLKConfig+0x280>
9000c49a:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000c49e:	d17d      	bne.n	9000c59c <HAL_RCCEx_PeriphCLKConfig+0x360>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c4a0:	491f      	ldr	r1, [pc, #124]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c4a2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c4a4:	f001 0103 	and.w	r1, r1, #3
9000c4a8:	2903      	cmp	r1, #3
9000c4aa:	d077      	beq.n	9000c59c <HAL_RCCEx_PeriphCLKConfig+0x360>
9000c4ac:	2101      	movs	r1, #1
9000c4ae:	f104 0008 	add.w	r0, r4, #8
9000c4b2:	f7ff fddf 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000c4b6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c4b8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c4bc:	2d00      	cmp	r5, #0
9000c4be:	f040 8454 	bne.w	9000cd6a <HAL_RCCEx_PeriphCLKConfig+0xb2e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000c4c2:	4f17      	ldr	r7, [pc, #92]	@ (9000c520 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000c4c4:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000c4c8:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c4ca:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000c4ce:	4301      	orrs	r1, r0
9000c4d0:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c4d2:	041f      	lsls	r7, r3, #16
9000c4d4:	d50d      	bpl.n	9000c4f2 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
    switch (PeriphClkInit->FdcanClockSelection)
9000c4d6:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000c4d8:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000c4dc:	f000 82e2 	beq.w	9000caa4 <HAL_RCCEx_PeriphCLKConfig+0x868>
9000c4e0:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000c4e4:	f000 83f0 	beq.w	9000ccc8 <HAL_RCCEx_PeriphCLKConfig+0xa8c>
9000c4e8:	2900      	cmp	r1, #0
9000c4ea:	f000 82e0 	beq.w	9000caae <HAL_RCCEx_PeriphCLKConfig+0x872>
9000c4ee:	2601      	movs	r6, #1
9000c4f0:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000c4f2:	01d8      	lsls	r0, r3, #7
9000c4f4:	d55e      	bpl.n	9000c5b4 <HAL_RCCEx_PeriphCLKConfig+0x378>
    switch (PeriphClkInit->FmcClockSelection)
9000c4f6:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000c4f8:	2903      	cmp	r1, #3
9000c4fa:	f200 85cd 	bhi.w	9000d098 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000c4fe:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c502:	0055      	.short	0x0055
9000c504:	04930050 	.word	0x04930050
9000c508:	0055      	.short	0x0055
    switch (PeriphClkInit->Sai23ClockSelection)
9000c50a:	29c0      	cmp	r1, #192	@ 0xc0
9000c50c:	f43f aef0 	beq.w	9000c2f0 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000c510:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000c514:	f43f aeec 	beq.w	9000c2f0 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000c518:	2601      	movs	r6, #1
9000c51a:	4635      	mov	r5, r6
9000c51c:	e6f2      	b.n	9000c304 <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000c51e:	bf00      	nop
9000c520:	58024400 	.word	0x58024400
    switch (PeriphClkInit->Sai4AClockSelection)
9000c524:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000c528:	f43f af0c 	beq.w	9000c344 <HAL_RCCEx_PeriphCLKConfig+0x108>
9000c52c:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000c530:	f43f af08 	beq.w	9000c344 <HAL_RCCEx_PeriphCLKConfig+0x108>
9000c534:	2601      	movs	r6, #1
9000c536:	4635      	mov	r5, r6
9000c538:	e70f      	b.n	9000c35a <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4BClockSelection)
9000c53a:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000c53e:	f43f af2c 	beq.w	9000c39a <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000c542:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000c546:	f43f af28 	beq.w	9000c39a <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000c54a:	2601      	movs	r6, #1
9000c54c:	4635      	mov	r5, r6
9000c54e:	e72f      	b.n	9000c3b0 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->QspiClockSelection)
9000c550:	2930      	cmp	r1, #48	@ 0x30
9000c552:	f43f af3e 	beq.w	9000c3d2 <HAL_RCCEx_PeriphCLKConfig+0x196>
9000c556:	2601      	movs	r6, #1
9000c558:	4635      	mov	r5, r6
9000c55a:	e744      	b.n	9000c3e6 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000c55c:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000c560:	f43f af60 	beq.w	9000c424 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000c564:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000c568:	f43f af5c 	beq.w	9000c424 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000c56c:	2601      	movs	r6, #1
9000c56e:	4635      	mov	r5, r6
9000c570:	e762      	b.n	9000c438 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi45ClockSelection)
9000c572:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000c576:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000c57a:	f43f af7a 	beq.w	9000c472 <HAL_RCCEx_PeriphCLKConfig+0x236>
9000c57e:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000c582:	f43f af76 	beq.w	9000c472 <HAL_RCCEx_PeriphCLKConfig+0x236>
9000c586:	2601      	movs	r6, #1
9000c588:	4635      	mov	r5, r6
9000c58a:	e77c      	b.n	9000c486 <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000c58c:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000c590:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000c594:	d092      	beq.n	9000c4bc <HAL_RCCEx_PeriphCLKConfig+0x280>
9000c596:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000c59a:	d08f      	beq.n	9000c4bc <HAL_RCCEx_PeriphCLKConfig+0x280>
9000c59c:	2601      	movs	r6, #1
9000c59e:	4635      	mov	r5, r6
9000c5a0:	e797      	b.n	9000c4d2 <HAL_RCCEx_PeriphCLKConfig+0x296>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c5a2:	4837      	ldr	r0, [pc, #220]	@ (9000c680 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000c5a4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c5a6:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c5aa:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c5ac:	2d00      	cmp	r5, #0
9000c5ae:	f000 83b5 	beq.w	9000cd1c <HAL_RCCEx_PeriphCLKConfig+0xae0>
9000c5b2:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000c5b4:	0259      	lsls	r1, r3, #9
9000c5b6:	f100 82c0 	bmi.w	9000cb3a <HAL_RCCEx_PeriphCLKConfig+0x8fe>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c5ba:	07df      	lsls	r7, r3, #31
9000c5bc:	d52f      	bpl.n	9000c61e <HAL_RCCEx_PeriphCLKConfig+0x3e2>
    switch (PeriphClkInit->Usart16ClockSelection)
9000c5be:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000c5c0:	2928      	cmp	r1, #40	@ 0x28
9000c5c2:	d82a      	bhi.n	9000c61a <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000c5c4:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c5c8:	002902ab 	.word	0x002902ab
9000c5cc:	00290029 	.word	0x00290029
9000c5d0:	00290029 	.word	0x00290029
9000c5d4:	00290029 	.word	0x00290029
9000c5d8:	0029029c 	.word	0x0029029c
9000c5dc:	00290029 	.word	0x00290029
9000c5e0:	00290029 	.word	0x00290029
9000c5e4:	00290029 	.word	0x00290029
9000c5e8:	0029052d 	.word	0x0029052d
9000c5ec:	00290029 	.word	0x00290029
9000c5f0:	00290029 	.word	0x00290029
9000c5f4:	00290029 	.word	0x00290029
9000c5f8:	002902ab 	.word	0x002902ab
9000c5fc:	00290029 	.word	0x00290029
9000c600:	00290029 	.word	0x00290029
9000c604:	00290029 	.word	0x00290029
9000c608:	002902ab 	.word	0x002902ab
9000c60c:	00290029 	.word	0x00290029
9000c610:	00290029 	.word	0x00290029
9000c614:	00290029 	.word	0x00290029
9000c618:	02ab      	.short	0x02ab
9000c61a:	2601      	movs	r6, #1
9000c61c:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c61e:	0798      	lsls	r0, r3, #30
9000c620:	d51e      	bpl.n	9000c660 <HAL_RCCEx_PeriphCLKConfig+0x424>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000c622:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000c624:	2905      	cmp	r1, #5
9000c626:	f200 851c 	bhi.w	9000d062 <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000c62a:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c62e:	0015      	.short	0x0015
9000c630:	04e80006 	.word	0x04e80006
9000c634:	00150015 	.word	0x00150015
9000c638:	0015      	.short	0x0015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c63a:	4911      	ldr	r1, [pc, #68]	@ (9000c680 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000c63c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c63e:	f001 0103 	and.w	r1, r1, #3
9000c642:	2903      	cmp	r1, #3
9000c644:	f000 850d 	beq.w	9000d062 <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000c648:	2101      	movs	r1, #1
9000c64a:	f104 0008 	add.w	r0, r4, #8
9000c64e:	f7ff fd11 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000c652:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000c654:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c658:	2d00      	cmp	r5, #0
9000c65a:	f000 837b 	beq.w	9000cd54 <HAL_RCCEx_PeriphCLKConfig+0xb18>
9000c65e:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000c660:	0759      	lsls	r1, r3, #29
9000c662:	d522      	bpl.n	9000c6aa <HAL_RCCEx_PeriphCLKConfig+0x46e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000c664:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000c668:	2905      	cmp	r1, #5
9000c66a:	f200 84fe 	bhi.w	9000d06a <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000c66e:	e8df f011 	tbh	[pc, r1, lsl #1]
9000c672:	0018      	.short	0x0018
9000c674:	04b40009 	.word	0x04b40009
9000c678:	00180018 	.word	0x00180018
9000c67c:	0018      	.short	0x0018
9000c67e:	bf00      	nop
9000c680:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c684:	49b0      	ldr	r1, [pc, #704]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c686:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c688:	f001 0103 	and.w	r1, r1, #3
9000c68c:	2903      	cmp	r1, #3
9000c68e:	f000 84ec 	beq.w	9000d06a <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000c692:	2101      	movs	r1, #1
9000c694:	f104 0008 	add.w	r0, r4, #8
9000c698:	f7ff fcec 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000c69c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c69e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c6a2:	2d00      	cmp	r5, #0
9000c6a4:	f000 8364 	beq.w	9000cd70 <HAL_RCCEx_PeriphCLKConfig+0xb34>
9000c6a8:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c6aa:	069f      	lsls	r7, r3, #26
9000c6ac:	d526      	bpl.n	9000c6fc <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000c6ae:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000c6b2:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000c6b6:	f000 836e 	beq.w	9000cd96 <HAL_RCCEx_PeriphCLKConfig+0xb5a>
9000c6ba:	f200 8194 	bhi.w	9000c9e6 <HAL_RCCEx_PeriphCLKConfig+0x7aa>
9000c6be:	b191      	cbz	r1, 9000c6e6 <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000c6c0:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000c6c4:	f040 8199 	bne.w	9000c9fa <HAL_RCCEx_PeriphCLKConfig+0x7be>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c6c8:	499f      	ldr	r1, [pc, #636]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c6ca:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c6cc:	f001 0103 	and.w	r1, r1, #3
9000c6d0:	2903      	cmp	r1, #3
9000c6d2:	f000 8192 	beq.w	9000c9fa <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000c6d6:	2100      	movs	r1, #0
9000c6d8:	f104 0008 	add.w	r0, r4, #8
9000c6dc:	f7ff fcca 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000c6e0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c6e2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c6e6:	2d00      	cmp	r5, #0
9000c6e8:	f040 834b 	bne.w	9000cd82 <HAL_RCCEx_PeriphCLKConfig+0xb46>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000c6ec:	4f96      	ldr	r7, [pc, #600]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c6ee:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000c6f2:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000c6f4:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000c6f8:	4301      	orrs	r1, r0
9000c6fa:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c6fc:	0658      	lsls	r0, r3, #25
9000c6fe:	d526      	bpl.n	9000c74e <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000c700:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000c704:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000c708:	f000 83a1 	beq.w	9000ce4e <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000c70c:	f200 8178 	bhi.w	9000ca00 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
9000c710:	b191      	cbz	r1, 9000c738 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000c712:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000c716:	f040 817d 	bne.w	9000ca14 <HAL_RCCEx_PeriphCLKConfig+0x7d8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c71a:	498b      	ldr	r1, [pc, #556]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c71c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c71e:	f001 0103 	and.w	r1, r1, #3
9000c722:	2903      	cmp	r1, #3
9000c724:	f000 8176 	beq.w	9000ca14 <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000c728:	2100      	movs	r1, #0
9000c72a:	f104 0008 	add.w	r0, r4, #8
9000c72e:	f7ff fca1 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000c732:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c734:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c738:	2d00      	cmp	r5, #0
9000c73a:	f040 8328 	bne.w	9000cd8e <HAL_RCCEx_PeriphCLKConfig+0xb52>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000c73e:	4f82      	ldr	r7, [pc, #520]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c740:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000c744:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c746:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000c74a:	4301      	orrs	r1, r0
9000c74c:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c74e:	0619      	lsls	r1, r3, #24
9000c750:	d526      	bpl.n	9000c7a0 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000c752:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000c756:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000c75a:	f000 8353 	beq.w	9000ce04 <HAL_RCCEx_PeriphCLKConfig+0xbc8>
9000c75e:	f200 815c 	bhi.w	9000ca1a <HAL_RCCEx_PeriphCLKConfig+0x7de>
9000c762:	b191      	cbz	r1, 9000c78a <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000c764:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000c768:	f040 8161 	bne.w	9000ca2e <HAL_RCCEx_PeriphCLKConfig+0x7f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c76c:	4976      	ldr	r1, [pc, #472]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c76e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c770:	f001 0103 	and.w	r1, r1, #3
9000c774:	2903      	cmp	r1, #3
9000c776:	f000 815a 	beq.w	9000ca2e <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000c77a:	2100      	movs	r1, #0
9000c77c:	f104 0008 	add.w	r0, r4, #8
9000c780:	f7ff fc78 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000c784:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c786:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c78a:	2d00      	cmp	r5, #0
9000c78c:	f040 82fb 	bne.w	9000cd86 <HAL_RCCEx_PeriphCLKConfig+0xb4a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000c790:	4f6d      	ldr	r7, [pc, #436]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c792:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000c796:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c798:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000c79c:	4301      	orrs	r1, r0
9000c79e:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c7a0:	071f      	lsls	r7, r3, #28
9000c7a2:	d50b      	bpl.n	9000c7bc <HAL_RCCEx_PeriphCLKConfig+0x580>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000c7a4:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000c7a8:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000c7ac:	f000 8250 	beq.w	9000cc50 <HAL_RCCEx_PeriphCLKConfig+0xa14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c7b0:	4f65      	ldr	r7, [pc, #404]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c7b2:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000c7b4:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000c7b8:	4301      	orrs	r1, r0
9000c7ba:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c7bc:	06d8      	lsls	r0, r3, #27
9000c7be:	d50b      	bpl.n	9000c7d8 <HAL_RCCEx_PeriphCLKConfig+0x59c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000c7c0:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000c7c4:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000c7c8:	f000 8257 	beq.w	9000cc7a <HAL_RCCEx_PeriphCLKConfig+0xa3e>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c7cc:	4f5e      	ldr	r7, [pc, #376]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c7ce:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c7d0:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000c7d4:	4301      	orrs	r1, r0
9000c7d6:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c7d8:	0319      	lsls	r1, r3, #12
9000c7da:	d50e      	bpl.n	9000c7fa <HAL_RCCEx_PeriphCLKConfig+0x5be>
    switch (PeriphClkInit->AdcClockSelection)
9000c7dc:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000c7e0:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000c7e4:	f000 816e 	beq.w	9000cac4 <HAL_RCCEx_PeriphCLKConfig+0x888>
9000c7e8:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000c7ec:	f000 8179 	beq.w	9000cae2 <HAL_RCCEx_PeriphCLKConfig+0x8a6>
9000c7f0:	2900      	cmp	r1, #0
9000c7f2:	f000 827a 	beq.w	9000ccea <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000c7f6:	2601      	movs	r6, #1
9000c7f8:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c7fa:	035f      	lsls	r7, r3, #13
9000c7fc:	d50f      	bpl.n	9000c81e <HAL_RCCEx_PeriphCLKConfig+0x5e2>
    switch (PeriphClkInit->UsbClockSelection)
9000c7fe:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000c802:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000c806:	f000 82eb 	beq.w	9000cde0 <HAL_RCCEx_PeriphCLKConfig+0xba4>
9000c80a:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000c80e:	f000 813d 	beq.w	9000ca8c <HAL_RCCEx_PeriphCLKConfig+0x850>
9000c812:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000c816:	f000 8134 	beq.w	9000ca82 <HAL_RCCEx_PeriphCLKConfig+0x846>
9000c81a:	2601      	movs	r6, #1
9000c81c:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000c81e:	03d8      	lsls	r0, r3, #15
9000c820:	d520      	bpl.n	9000c864 <HAL_RCCEx_PeriphCLKConfig+0x628>
    switch (PeriphClkInit->SdmmcClockSelection)
9000c822:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000c824:	2900      	cmp	r1, #0
9000c826:	f000 8245 	beq.w	9000ccb4 <HAL_RCCEx_PeriphCLKConfig+0xa78>
9000c82a:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000c82e:	f040 8125 	bne.w	9000ca7c <HAL_RCCEx_PeriphCLKConfig+0x840>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c832:	4945      	ldr	r1, [pc, #276]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c834:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c836:	f001 0103 	and.w	r1, r1, #3
9000c83a:	2903      	cmp	r1, #3
9000c83c:	f000 811e 	beq.w	9000ca7c <HAL_RCCEx_PeriphCLKConfig+0x840>
9000c840:	2102      	movs	r1, #2
9000c842:	f104 0008 	add.w	r0, r4, #8
9000c846:	f7ff fc15 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000c84a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000c84c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c850:	2d00      	cmp	r5, #0
9000c852:	f040 8237 	bne.w	9000ccc4 <HAL_RCCEx_PeriphCLKConfig+0xa88>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000c856:	4f3c      	ldr	r7, [pc, #240]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c858:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000c85a:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000c85c:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000c860:	4301      	orrs	r1, r0
9000c862:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000c864:	0099      	lsls	r1, r3, #2
9000c866:	d50e      	bpl.n	9000c886 <HAL_RCCEx_PeriphCLKConfig+0x64a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c868:	4937      	ldr	r1, [pc, #220]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c86a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c86c:	f001 0103 	and.w	r1, r1, #3
9000c870:	2903      	cmp	r1, #3
9000c872:	d007      	beq.n	9000c884 <HAL_RCCEx_PeriphCLKConfig+0x648>
9000c874:	2102      	movs	r1, #2
9000c876:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c87a:	f7ff fc6d 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000c87e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c882:	b100      	cbz	r0, 9000c886 <HAL_RCCEx_PeriphCLKConfig+0x64a>
      status = HAL_ERROR;
9000c884:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000c886:	039f      	lsls	r7, r3, #14
9000c888:	f140 80e0 	bpl.w	9000ca4c <HAL_RCCEx_PeriphCLKConfig+0x810>
    switch (PeriphClkInit->RngClockSelection)
9000c88c:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000c890:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000c894:	f000 8205 	beq.w	9000cca2 <HAL_RCCEx_PeriphCLKConfig+0xa66>
9000c898:	f240 80cc 	bls.w	9000ca34 <HAL_RCCEx_PeriphCLKConfig+0x7f8>
9000c89c:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000c8a0:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000c8a4:	f000 80c9 	beq.w	9000ca3a <HAL_RCCEx_PeriphCLKConfig+0x7fe>
9000c8a8:	2501      	movs	r5, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000c8aa:	02d8      	lsls	r0, r3, #11
9000c8ac:	d506      	bpl.n	9000c8bc <HAL_RCCEx_PeriphCLKConfig+0x680>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000c8ae:	4826      	ldr	r0, [pc, #152]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c8b0:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000c8b2:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000c8b4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000c8b8:	4331      	orrs	r1, r6
9000c8ba:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000c8bc:	00d9      	lsls	r1, r3, #3
9000c8be:	d507      	bpl.n	9000c8d0 <HAL_RCCEx_PeriphCLKConfig+0x694>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000c8c0:	4821      	ldr	r0, [pc, #132]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c8c2:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000c8c6:	6901      	ldr	r1, [r0, #16]
9000c8c8:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000c8cc:	4331      	orrs	r1, r6
9000c8ce:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000c8d0:	029f      	lsls	r7, r3, #10
9000c8d2:	d506      	bpl.n	9000c8e2 <HAL_RCCEx_PeriphCLKConfig+0x6a6>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000c8d4:	481c      	ldr	r0, [pc, #112]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c8d6:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000c8d8:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000c8da:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000c8de:	4331      	orrs	r1, r6
9000c8e0:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000c8e2:	005e      	lsls	r6, r3, #1
9000c8e4:	d509      	bpl.n	9000c8fa <HAL_RCCEx_PeriphCLKConfig+0x6be>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000c8e6:	4918      	ldr	r1, [pc, #96]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c8e8:	6908      	ldr	r0, [r1, #16]
9000c8ea:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000c8ee:	6108      	str	r0, [r1, #16]
9000c8f0:	6908      	ldr	r0, [r1, #16]
9000c8f2:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000c8f6:	4330      	orrs	r0, r6
9000c8f8:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000c8fa:	2b00      	cmp	r3, #0
9000c8fc:	da06      	bge.n	9000c90c <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000c8fe:	4812      	ldr	r0, [pc, #72]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c900:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000c902:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000c904:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000c908:	4331      	orrs	r1, r6
9000c90a:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000c90c:	0218      	lsls	r0, r3, #8
9000c90e:	d507      	bpl.n	9000c920 <HAL_RCCEx_PeriphCLKConfig+0x6e4>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000c910:	490d      	ldr	r1, [pc, #52]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c912:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000c916:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000c918:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000c91c:	4303      	orrs	r3, r0
9000c91e:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000c920:	07d1      	lsls	r1, r2, #31
9000c922:	d513      	bpl.n	9000c94c <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c924:	4b08      	ldr	r3, [pc, #32]	@ (9000c948 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c926:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c928:	f003 0303 	and.w	r3, r3, #3
9000c92c:	2b03      	cmp	r3, #3
9000c92e:	f000 818d 	beq.w	9000cc4c <HAL_RCCEx_PeriphCLKConfig+0xa10>
9000c932:	2100      	movs	r1, #0
9000c934:	f104 0008 	add.w	r0, r4, #8
9000c938:	f7ff fb9c 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c93c:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c93e:	2800      	cmp	r0, #0
9000c940:	f040 8204 	bne.w	9000cd4c <HAL_RCCEx_PeriphCLKConfig+0xb10>
9000c944:	e002      	b.n	9000c94c <HAL_RCCEx_PeriphCLKConfig+0x710>
9000c946:	bf00      	nop
9000c948:	58024400 	.word	0x58024400
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c94c:	0793      	lsls	r3, r2, #30
9000c94e:	d50f      	bpl.n	9000c970 <HAL_RCCEx_PeriphCLKConfig+0x734>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c950:	4bb2      	ldr	r3, [pc, #712]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c952:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c954:	f003 0303 	and.w	r3, r3, #3
9000c958:	2b03      	cmp	r3, #3
9000c95a:	f000 816c 	beq.w	9000cc36 <HAL_RCCEx_PeriphCLKConfig+0x9fa>
9000c95e:	2101      	movs	r1, #1
9000c960:	f104 0008 	add.w	r0, r4, #8
9000c964:	f7ff fb86 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c968:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c96a:	2800      	cmp	r0, #0
9000c96c:	f040 81f0 	bne.w	9000cd50 <HAL_RCCEx_PeriphCLKConfig+0xb14>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c970:	0757      	lsls	r7, r2, #29
9000c972:	d50f      	bpl.n	9000c994 <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c974:	4ba9      	ldr	r3, [pc, #676]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c976:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c978:	f003 0303 	and.w	r3, r3, #3
9000c97c:	2b03      	cmp	r3, #3
9000c97e:	f000 815c 	beq.w	9000cc3a <HAL_RCCEx_PeriphCLKConfig+0x9fe>
9000c982:	2102      	movs	r1, #2
9000c984:	f104 0008 	add.w	r0, r4, #8
9000c988:	f7ff fb74 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c98c:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c98e:	2800      	cmp	r0, #0
9000c990:	f040 81d8 	bne.w	9000cd44 <HAL_RCCEx_PeriphCLKConfig+0xb08>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c994:	0716      	lsls	r6, r2, #28
9000c996:	d50f      	bpl.n	9000c9b8 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c998:	4ba0      	ldr	r3, [pc, #640]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c99a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c99c:	f003 0303 	and.w	r3, r3, #3
9000c9a0:	2b03      	cmp	r3, #3
9000c9a2:	f000 814c 	beq.w	9000cc3e <HAL_RCCEx_PeriphCLKConfig+0xa02>
9000c9a6:	2100      	movs	r1, #0
9000c9a8:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c9ac:	f7ff fbd4 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c9b0:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c9b2:	2800      	cmp	r0, #0
9000c9b4:	f040 81c8 	bne.w	9000cd48 <HAL_RCCEx_PeriphCLKConfig+0xb0c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c9b8:	06d0      	lsls	r0, r2, #27
9000c9ba:	d54a      	bpl.n	9000ca52 <HAL_RCCEx_PeriphCLKConfig+0x816>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c9bc:	4b97      	ldr	r3, [pc, #604]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c9be:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c9c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c9c4:	f003 0303 	and.w	r3, r3, #3
9000c9c8:	2b03      	cmp	r3, #3
9000c9ca:	f000 813a 	beq.w	9000cc42 <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000c9ce:	2101      	movs	r1, #1
9000c9d0:	4630      	mov	r0, r6
9000c9d2:	f7ff fbc1 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000c9d6:	2800      	cmp	r0, #0
9000c9d8:	d03a      	beq.n	9000ca50 <HAL_RCCEx_PeriphCLKConfig+0x814>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c9da:	6863      	ldr	r3, [r4, #4]
9000c9dc:	069a      	lsls	r2, r3, #26
9000c9de:	f140 808c 	bpl.w	9000cafa <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000c9e2:	4605      	mov	r5, r0
9000c9e4:	e039      	b.n	9000ca5a <HAL_RCCEx_PeriphCLKConfig+0x81e>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000c9e6:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000c9ea:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000c9ee:	f43f ae7a 	beq.w	9000c6e6 <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000c9f2:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000c9f6:	f43f ae76 	beq.w	9000c6e6 <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000c9fa:	2601      	movs	r6, #1
9000c9fc:	4635      	mov	r5, r6
9000c9fe:	e67d      	b.n	9000c6fc <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000ca00:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000ca04:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000ca08:	f43f ae96 	beq.w	9000c738 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000ca0c:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000ca10:	f43f ae92 	beq.w	9000c738 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000ca14:	2601      	movs	r6, #1
9000ca16:	4635      	mov	r5, r6
9000ca18:	e699      	b.n	9000c74e <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000ca1a:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000ca1e:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000ca22:	f43f aeb2 	beq.w	9000c78a <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000ca26:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000ca2a:	f43f aeae 	beq.w	9000c78a <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000ca2e:	2601      	movs	r6, #1
9000ca30:	4635      	mov	r5, r6
9000ca32:	e6b5      	b.n	9000c7a0 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->RngClockSelection)
9000ca34:	2900      	cmp	r1, #0
9000ca36:	f47f af37 	bne.w	9000c8a8 <HAL_RCCEx_PeriphCLKConfig+0x66c>
    if (ret == HAL_OK)
9000ca3a:	2d00      	cmp	r5, #0
9000ca3c:	f47f af35 	bne.w	9000c8aa <HAL_RCCEx_PeriphCLKConfig+0x66e>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000ca40:	4d76      	ldr	r5, [pc, #472]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000ca42:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000ca44:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000ca48:	4301      	orrs	r1, r0
9000ca4a:	6569      	str	r1, [r5, #84]	@ 0x54
      status = HAL_ERROR;
9000ca4c:	4635      	mov	r5, r6
9000ca4e:	e72c      	b.n	9000c8aa <HAL_RCCEx_PeriphCLKConfig+0x66e>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000ca50:	6862      	ldr	r2, [r4, #4]
9000ca52:	0693      	lsls	r3, r2, #26
9000ca54:	d50d      	bpl.n	9000ca72 <HAL_RCCEx_PeriphCLKConfig+0x836>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000ca56:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ca5a:	4b70      	ldr	r3, [pc, #448]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000ca5c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ca5e:	f003 0303 	and.w	r3, r3, #3
9000ca62:	2b03      	cmp	r3, #3
9000ca64:	d049      	beq.n	9000cafa <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000ca66:	2102      	movs	r1, #2
9000ca68:	4630      	mov	r0, r6
9000ca6a:	f7ff fb75 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000ca6e:	2800      	cmp	r0, #0
9000ca70:	d143      	bne.n	9000cafa <HAL_RCCEx_PeriphCLKConfig+0x8be>
  if (status == HAL_OK)
9000ca72:	1e28      	subs	r0, r5, #0
9000ca74:	bf18      	it	ne
9000ca76:	2001      	movne	r0, #1
}
9000ca78:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000ca7c:	2601      	movs	r6, #1
9000ca7e:	4635      	mov	r5, r6
9000ca80:	e6f0      	b.n	9000c864 <HAL_RCCEx_PeriphCLKConfig+0x628>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ca82:	4866      	ldr	r0, [pc, #408]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000ca84:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000ca86:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000ca8a:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000ca8c:	2d00      	cmp	r5, #0
9000ca8e:	f040 8140 	bne.w	9000cd12 <HAL_RCCEx_PeriphCLKConfig+0xad6>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000ca92:	4f62      	ldr	r7, [pc, #392]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000ca94:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000ca98:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000ca9a:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000ca9e:	4301      	orrs	r1, r0
9000caa0:	6579      	str	r1, [r7, #84]	@ 0x54
9000caa2:	e6bc      	b.n	9000c81e <HAL_RCCEx_PeriphCLKConfig+0x5e2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000caa4:	485d      	ldr	r0, [pc, #372]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000caa6:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000caa8:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000caac:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000caae:	2d00      	cmp	r5, #0
9000cab0:	f040 812c 	bne.w	9000cd0c <HAL_RCCEx_PeriphCLKConfig+0xad0>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000cab4:	4f59      	ldr	r7, [pc, #356]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cab6:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000cab8:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000caba:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000cabe:	4301      	orrs	r1, r0
9000cac0:	6539      	str	r1, [r7, #80]	@ 0x50
9000cac2:	e516      	b.n	9000c4f2 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cac4:	4955      	ldr	r1, [pc, #340]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cac6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cac8:	f001 0103 	and.w	r1, r1, #3
9000cacc:	2903      	cmp	r1, #3
9000cace:	f43f ae92 	beq.w	9000c7f6 <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000cad2:	2102      	movs	r1, #2
9000cad4:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cad8:	f7ff fb3e 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000cadc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000cade:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cae2:	2d00      	cmp	r5, #0
9000cae4:	f040 8151 	bne.w	9000cd8a <HAL_RCCEx_PeriphCLKConfig+0xb4e>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000cae8:	4f4c      	ldr	r7, [pc, #304]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000caea:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000caee:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000caf0:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000caf4:	4301      	orrs	r1, r0
9000caf6:	65b9      	str	r1, [r7, #88]	@ 0x58
9000caf8:	e67f      	b.n	9000c7fa <HAL_RCCEx_PeriphCLKConfig+0x5be>
  return HAL_ERROR;
9000cafa:	2001      	movs	r0, #1
}
9000cafc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cb00:	4946      	ldr	r1, [pc, #280]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cb02:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cb04:	f001 0103 	and.w	r1, r1, #3
9000cb08:	2903      	cmp	r1, #3
9000cb0a:	f43f ad86 	beq.w	9000c61a <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000cb0e:	2101      	movs	r1, #1
9000cb10:	f104 0008 	add.w	r0, r4, #8
9000cb14:	f7ff faae 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000cb18:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000cb1a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cb1e:	2d00      	cmp	r5, #0
9000cb20:	f040 8137 	bne.w	9000cd92 <HAL_RCCEx_PeriphCLKConfig+0xb56>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000cb24:	4f3d      	ldr	r7, [pc, #244]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cb26:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000cb28:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000cb2a:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000cb2e:	4301      	orrs	r1, r0
9000cb30:	6579      	str	r1, [r7, #84]	@ 0x54
9000cb32:	e574      	b.n	9000c61e <HAL_RCCEx_PeriphCLKConfig+0x3e2>
9000cb34:	2601      	movs	r6, #1
9000cb36:	f7ff bbb0 	b.w	9000c29a <HAL_RCCEx_PeriphCLKConfig+0x5e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000cb3a:	4f39      	ldr	r7, [pc, #228]	@ (9000cc20 <HAL_RCCEx_PeriphCLKConfig+0x9e4>)
9000cb3c:	683b      	ldr	r3, [r7, #0]
9000cb3e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000cb42:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000cb44:	f7fb fa9e 	bl	90008084 <HAL_GetTick>
9000cb48:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000cb4a:	e006      	b.n	9000cb5a <HAL_RCCEx_PeriphCLKConfig+0x91e>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000cb4c:	f7fb fa9a 	bl	90008084 <HAL_GetTick>
9000cb50:	eba0 0008 	sub.w	r0, r0, r8
9000cb54:	2864      	cmp	r0, #100	@ 0x64
9000cb56:	f200 8277 	bhi.w	9000d048 <HAL_RCCEx_PeriphCLKConfig+0xe0c>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000cb5a:	683b      	ldr	r3, [r7, #0]
9000cb5c:	05da      	lsls	r2, r3, #23
9000cb5e:	d5f5      	bpl.n	9000cb4c <HAL_RCCEx_PeriphCLKConfig+0x910>
    if (ret == HAL_OK)
9000cb60:	2d00      	cmp	r5, #0
9000cb62:	f040 8272 	bne.w	9000d04a <HAL_RCCEx_PeriphCLKConfig+0xe0e>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000cb66:	4a2d      	ldr	r2, [pc, #180]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cb68:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000cb6c:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000cb6e:	4059      	eors	r1, r3
9000cb70:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000cb74:	d00b      	beq.n	9000cb8e <HAL_RCCEx_PeriphCLKConfig+0x952>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000cb76:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000cb78:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000cb7a:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000cb7e:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000cb82:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000cb84:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000cb86:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000cb8a:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000cb8c:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000cb8e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000cb92:	f000 8285 	beq.w	9000d0a0 <HAL_RCCEx_PeriphCLKConfig+0xe64>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000cb96:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000cb9a:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000cb9e:	f000 8293 	beq.w	9000d0c8 <HAL_RCCEx_PeriphCLKConfig+0xe8c>
9000cba2:	491e      	ldr	r1, [pc, #120]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cba4:	690a      	ldr	r2, [r1, #16]
9000cba6:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000cbaa:	610a      	str	r2, [r1, #16]
9000cbac:	481b      	ldr	r0, [pc, #108]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cbae:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000cbb2:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000cbb4:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000cbb6:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000cbba:	6701      	str	r1, [r0, #112]	@ 0x70
9000cbbc:	e4fd      	b.n	9000c5ba <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cbbe:	4817      	ldr	r0, [pc, #92]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cbc0:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cbc2:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cbc6:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cbc8:	2d00      	cmp	r5, #0
9000cbca:	f040 80b5 	bne.w	9000cd38 <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000cbce:	f7ff bbe7 	b.w	9000c3a0 <HAL_RCCEx_PeriphCLKConfig+0x164>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cbd2:	4812      	ldr	r0, [pc, #72]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cbd4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cbd6:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cbda:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cbdc:	2d00      	cmp	r5, #0
9000cbde:	f040 80ae 	bne.w	9000cd3e <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000cbe2:	e422      	b.n	9000c42a <HAL_RCCEx_PeriphCLKConfig+0x1ee>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cbe4:	480d      	ldr	r0, [pc, #52]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cbe6:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cbe8:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cbec:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cbee:	2d00      	cmp	r5, #0
9000cbf0:	f040 809f 	bne.w	9000cd32 <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000cbf4:	f7ff bba9 	b.w	9000c34a <HAL_RCCEx_PeriphCLKConfig+0x10e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cbf8:	4808      	ldr	r0, [pc, #32]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cbfa:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cbfc:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cc00:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000cc02:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000cc04:	2d00      	cmp	r5, #0
9000cc06:	f040 81ad 	bne.w	9000cf64 <HAL_RCCEx_PeriphCLKConfig+0xd28>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000cc0a:	4f04      	ldr	r7, [pc, #16]	@ (9000cc1c <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000cc0c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000cc0e:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000cc10:	f021 0107 	bic.w	r1, r1, #7
9000cc14:	4301      	orrs	r1, r0
9000cc16:	6539      	str	r1, [r7, #80]	@ 0x50
9000cc18:	f7ff bb4d 	b.w	9000c2b6 <HAL_RCCEx_PeriphCLKConfig+0x7a>
9000cc1c:	58024400 	.word	0x58024400
9000cc20:	58024800 	.word	0x58024800
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cc24:	48bb      	ldr	r0, [pc, #748]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000cc26:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000cc28:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000cc2c:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000cc2e:	2d00      	cmp	r5, #0
9000cc30:	d17c      	bne.n	9000cd2c <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000cc32:	f7ff bb60 	b.w	9000c2f6 <HAL_RCCEx_PeriphCLKConfig+0xba>
    return HAL_ERROR;
9000cc36:	2501      	movs	r5, #1
9000cc38:	e69a      	b.n	9000c970 <HAL_RCCEx_PeriphCLKConfig+0x734>
9000cc3a:	2501      	movs	r5, #1
9000cc3c:	e6aa      	b.n	9000c994 <HAL_RCCEx_PeriphCLKConfig+0x758>
    return HAL_ERROR;
9000cc3e:	2501      	movs	r5, #1
9000cc40:	e6ba      	b.n	9000c9b8 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000cc42:	0691      	lsls	r1, r2, #26
9000cc44:	f57f af59 	bpl.w	9000cafa <HAL_RCCEx_PeriphCLKConfig+0x8be>
    return HAL_ERROR;
9000cc48:	2501      	movs	r5, #1
9000cc4a:	e706      	b.n	9000ca5a <HAL_RCCEx_PeriphCLKConfig+0x81e>
    return HAL_ERROR;
9000cc4c:	2501      	movs	r5, #1
9000cc4e:	e67d      	b.n	9000c94c <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cc50:	49b0      	ldr	r1, [pc, #704]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000cc52:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cc54:	f001 0103 	and.w	r1, r1, #3
9000cc58:	2903      	cmp	r1, #3
9000cc5a:	f000 820a 	beq.w	9000d072 <HAL_RCCEx_PeriphCLKConfig+0xe36>
9000cc5e:	2102      	movs	r1, #2
9000cc60:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cc64:	f7ff fa78 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000cc68:	2800      	cmp	r0, #0
9000cc6a:	f000 820f 	beq.w	9000d08c <HAL_RCCEx_PeriphCLKConfig+0xe50>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000cc6e:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000cc72:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000cc74:	e9d4 3200 	ldrd	r3, r2, [r4]
9000cc78:	e59a      	b.n	9000c7b0 <HAL_RCCEx_PeriphCLKConfig+0x574>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cc7a:	49a6      	ldr	r1, [pc, #664]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000cc7c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cc7e:	f001 0103 	and.w	r1, r1, #3
9000cc82:	2903      	cmp	r1, #3
9000cc84:	f000 81f8 	beq.w	9000d078 <HAL_RCCEx_PeriphCLKConfig+0xe3c>
9000cc88:	2102      	movs	r1, #2
9000cc8a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cc8e:	f7ff fa63 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000cc92:	2800      	cmp	r0, #0
9000cc94:	f040 81f3 	bne.w	9000d07e <HAL_RCCEx_PeriphCLKConfig+0xe42>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000cc98:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000cc9c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000cca0:	e594      	b.n	9000c7cc <HAL_RCCEx_PeriphCLKConfig+0x590>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cca2:	4f9c      	ldr	r7, [pc, #624]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000cca4:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000cca6:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000ccaa:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000ccac:	2d00      	cmp	r5, #0
9000ccae:	f47f adfc 	bne.w	9000c8aa <HAL_RCCEx_PeriphCLKConfig+0x66e>
9000ccb2:	e6c5      	b.n	9000ca40 <HAL_RCCEx_PeriphCLKConfig+0x804>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ccb4:	4897      	ldr	r0, [pc, #604]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ccb6:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000ccb8:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000ccbc:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000ccbe:	2d00      	cmp	r5, #0
9000ccc0:	f43f adc9 	beq.w	9000c856 <HAL_RCCEx_PeriphCLKConfig+0x61a>
9000ccc4:	462e      	mov	r6, r5
9000ccc6:	e5cd      	b.n	9000c864 <HAL_RCCEx_PeriphCLKConfig+0x628>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ccc8:	4992      	ldr	r1, [pc, #584]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ccca:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cccc:	f001 0103 	and.w	r1, r1, #3
9000ccd0:	2903      	cmp	r1, #3
9000ccd2:	f43f ac0c 	beq.w	9000c4ee <HAL_RCCEx_PeriphCLKConfig+0x2b2>
9000ccd6:	2101      	movs	r1, #1
9000ccd8:	f104 0008 	add.w	r0, r4, #8
9000ccdc:	f7ff f9ca 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000cce0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000cce2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cce6:	b98d      	cbnz	r5, 9000cd0c <HAL_RCCEx_PeriphCLKConfig+0xad0>
9000cce8:	e6e4      	b.n	9000cab4 <HAL_RCCEx_PeriphCLKConfig+0x878>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ccea:	488a      	ldr	r0, [pc, #552]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ccec:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000ccee:	f000 0003 	and.w	r0, r0, #3
9000ccf2:	2803      	cmp	r0, #3
9000ccf4:	f43f ad7f 	beq.w	9000c7f6 <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000ccf8:	f104 0008 	add.w	r0, r4, #8
9000ccfc:	f7ff f9ba 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000cd00:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000cd02:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cd06:	2d00      	cmp	r5, #0
9000cd08:	d13f      	bne.n	9000cd8a <HAL_RCCEx_PeriphCLKConfig+0xb4e>
9000cd0a:	e6ed      	b.n	9000cae8 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
9000cd0c:	462e      	mov	r6, r5
9000cd0e:	f7ff bbf0 	b.w	9000c4f2 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000cd12:	462e      	mov	r6, r5
9000cd14:	e583      	b.n	9000c81e <HAL_RCCEx_PeriphCLKConfig+0x5e2>
9000cd16:	462e      	mov	r6, r5
9000cd18:	f7ff bb65 	b.w	9000c3e6 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000cd1c:	4f7d      	ldr	r7, [pc, #500]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000cd1e:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000cd20:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000cd22:	f021 0103 	bic.w	r1, r1, #3
9000cd26:	4301      	orrs	r1, r0
9000cd28:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000cd2a:	e443      	b.n	9000c5b4 <HAL_RCCEx_PeriphCLKConfig+0x378>
9000cd2c:	462e      	mov	r6, r5
9000cd2e:	f7ff bae9 	b.w	9000c304 <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000cd32:	462e      	mov	r6, r5
9000cd34:	f7ff bb11 	b.w	9000c35a <HAL_RCCEx_PeriphCLKConfig+0x11e>
9000cd38:	462e      	mov	r6, r5
9000cd3a:	f7ff bb39 	b.w	9000c3b0 <HAL_RCCEx_PeriphCLKConfig+0x174>
9000cd3e:	462e      	mov	r6, r5
9000cd40:	f7ff bb7a 	b.w	9000c438 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000cd44:	4605      	mov	r5, r0
9000cd46:	e625      	b.n	9000c994 <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000cd48:	4605      	mov	r5, r0
9000cd4a:	e635      	b.n	9000c9b8 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000cd4c:	4605      	mov	r5, r0
9000cd4e:	e5fd      	b.n	9000c94c <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000cd50:	4605      	mov	r5, r0
9000cd52:	e60d      	b.n	9000c970 <HAL_RCCEx_PeriphCLKConfig+0x734>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000cd54:	4f6f      	ldr	r7, [pc, #444]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000cd56:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000cd58:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000cd5a:	f021 0107 	bic.w	r1, r1, #7
9000cd5e:	4301      	orrs	r1, r0
9000cd60:	6579      	str	r1, [r7, #84]	@ 0x54
9000cd62:	e47d      	b.n	9000c660 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000cd64:	462e      	mov	r6, r5
9000cd66:	f7ff bb8e 	b.w	9000c486 <HAL_RCCEx_PeriphCLKConfig+0x24a>
9000cd6a:	462e      	mov	r6, r5
9000cd6c:	f7ff bbb1 	b.w	9000c4d2 <HAL_RCCEx_PeriphCLKConfig+0x296>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000cd70:	4f68      	ldr	r7, [pc, #416]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000cd72:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000cd76:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000cd78:	f021 0107 	bic.w	r1, r1, #7
9000cd7c:	4301      	orrs	r1, r0
9000cd7e:	65b9      	str	r1, [r7, #88]	@ 0x58
9000cd80:	e493      	b.n	9000c6aa <HAL_RCCEx_PeriphCLKConfig+0x46e>
9000cd82:	462e      	mov	r6, r5
9000cd84:	e4ba      	b.n	9000c6fc <HAL_RCCEx_PeriphCLKConfig+0x4c0>
9000cd86:	462e      	mov	r6, r5
9000cd88:	e50a      	b.n	9000c7a0 <HAL_RCCEx_PeriphCLKConfig+0x564>
9000cd8a:	462e      	mov	r6, r5
9000cd8c:	e535      	b.n	9000c7fa <HAL_RCCEx_PeriphCLKConfig+0x5be>
9000cd8e:	462e      	mov	r6, r5
9000cd90:	e4dd      	b.n	9000c74e <HAL_RCCEx_PeriphCLKConfig+0x512>
9000cd92:	462e      	mov	r6, r5
9000cd94:	e443      	b.n	9000c61e <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cd96:	495f      	ldr	r1, [pc, #380]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000cd98:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cd9a:	f001 0103 	and.w	r1, r1, #3
9000cd9e:	2903      	cmp	r1, #3
9000cda0:	f43f ae2b 	beq.w	9000c9fa <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000cda4:	2102      	movs	r1, #2
9000cda6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cdaa:	f7ff f9d5 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000cdae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000cdb0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cdb4:	2d00      	cmp	r5, #0
9000cdb6:	d1e4      	bne.n	9000cd82 <HAL_RCCEx_PeriphCLKConfig+0xb46>
9000cdb8:	e498      	b.n	9000c6ec <HAL_RCCEx_PeriphCLKConfig+0x4b0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cdba:	4956      	ldr	r1, [pc, #344]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000cdbc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cdbe:	f001 0103 	and.w	r1, r1, #3
9000cdc2:	2903      	cmp	r1, #3
9000cdc4:	f43f abc7 	beq.w	9000c556 <HAL_RCCEx_PeriphCLKConfig+0x31a>
9000cdc8:	2102      	movs	r1, #2
9000cdca:	f104 0008 	add.w	r0, r4, #8
9000cdce:	f7ff f951 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000cdd2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000cdd4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cdd8:	2d00      	cmp	r5, #0
9000cdda:	d19c      	bne.n	9000cd16 <HAL_RCCEx_PeriphCLKConfig+0xada>
9000cddc:	f7ff bafc 	b.w	9000c3d8 <HAL_RCCEx_PeriphCLKConfig+0x19c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cde0:	494c      	ldr	r1, [pc, #304]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000cde2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cde4:	f001 0103 	and.w	r1, r1, #3
9000cde8:	2903      	cmp	r1, #3
9000cdea:	f43f ad16 	beq.w	9000c81a <HAL_RCCEx_PeriphCLKConfig+0x5de>
9000cdee:	2101      	movs	r1, #1
9000cdf0:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cdf4:	f7ff f9b0 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000cdf8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000cdfa:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cdfe:	2d00      	cmp	r5, #0
9000ce00:	d187      	bne.n	9000cd12 <HAL_RCCEx_PeriphCLKConfig+0xad6>
9000ce02:	e646      	b.n	9000ca92 <HAL_RCCEx_PeriphCLKConfig+0x856>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce04:	4943      	ldr	r1, [pc, #268]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ce06:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ce08:	f001 0103 	and.w	r1, r1, #3
9000ce0c:	2903      	cmp	r1, #3
9000ce0e:	f43f ae0e 	beq.w	9000ca2e <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000ce12:	2102      	movs	r1, #2
9000ce14:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ce18:	f7ff f99e 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000ce1c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000ce1e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ce22:	2d00      	cmp	r5, #0
9000ce24:	d1af      	bne.n	9000cd86 <HAL_RCCEx_PeriphCLKConfig+0xb4a>
9000ce26:	e4b3      	b.n	9000c790 <HAL_RCCEx_PeriphCLKConfig+0x554>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce28:	493a      	ldr	r1, [pc, #232]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ce2a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ce2c:	f001 0103 	and.w	r1, r1, #3
9000ce30:	2903      	cmp	r1, #3
9000ce32:	f000 8131 	beq.w	9000d098 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000ce36:	2102      	movs	r1, #2
9000ce38:	f104 0008 	add.w	r0, r4, #8
9000ce3c:	f7ff f91a 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000ce40:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000ce42:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ce46:	2d00      	cmp	r5, #0
9000ce48:	f47f abb3 	bne.w	9000c5b2 <HAL_RCCEx_PeriphCLKConfig+0x376>
9000ce4c:	e766      	b.n	9000cd1c <HAL_RCCEx_PeriphCLKConfig+0xae0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce4e:	4931      	ldr	r1, [pc, #196]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ce50:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ce52:	f001 0103 	and.w	r1, r1, #3
9000ce56:	2903      	cmp	r1, #3
9000ce58:	f43f addc 	beq.w	9000ca14 <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000ce5c:	2102      	movs	r1, #2
9000ce5e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ce62:	f7ff f979 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000ce66:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000ce68:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ce6c:	2d00      	cmp	r5, #0
9000ce6e:	d18e      	bne.n	9000cd8e <HAL_RCCEx_PeriphCLKConfig+0xb52>
9000ce70:	e465      	b.n	9000c73e <HAL_RCCEx_PeriphCLKConfig+0x502>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce72:	4928      	ldr	r1, [pc, #160]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ce74:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ce76:	f001 0103 	and.w	r1, r1, #3
9000ce7a:	2903      	cmp	r1, #3
9000ce7c:	f43f ab83 	beq.w	9000c586 <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000ce80:	2101      	movs	r1, #1
9000ce82:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ce86:	f7ff f967 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000ce8a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000ce8c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ce90:	2d00      	cmp	r5, #0
9000ce92:	f47f af67 	bne.w	9000cd64 <HAL_RCCEx_PeriphCLKConfig+0xb28>
9000ce96:	f7ff baef 	b.w	9000c478 <HAL_RCCEx_PeriphCLKConfig+0x23c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce9a:	491e      	ldr	r1, [pc, #120]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ce9c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ce9e:	f001 0103 	and.w	r1, r1, #3
9000cea2:	2903      	cmp	r1, #3
9000cea4:	f43f ab7a 	beq.w	9000c59c <HAL_RCCEx_PeriphCLKConfig+0x360>
9000cea8:	2101      	movs	r1, #1
9000ceaa:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ceae:	f7ff f953 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000ceb2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000ceb4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ceb8:	2d00      	cmp	r5, #0
9000ceba:	f47f af56 	bne.w	9000cd6a <HAL_RCCEx_PeriphCLKConfig+0xb2e>
9000cebe:	f7ff bb00 	b.w	9000c4c2 <HAL_RCCEx_PeriphCLKConfig+0x286>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cec2:	4914      	ldr	r1, [pc, #80]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000cec4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cec6:	f001 0103 	and.w	r1, r1, #3
9000ceca:	2903      	cmp	r1, #3
9000cecc:	f43f ab3d 	beq.w	9000c54a <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000ced0:	2100      	movs	r1, #0
9000ced2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000ced6:	f7ff f93f 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000ceda:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000cedc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cee0:	2d00      	cmp	r5, #0
9000cee2:	f47f af29 	bne.w	9000cd38 <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000cee6:	f7ff ba5b 	b.w	9000c3a0 <HAL_RCCEx_PeriphCLKConfig+0x164>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ceea:	490a      	ldr	r1, [pc, #40]	@ (9000cf14 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000ceec:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ceee:	f001 0103 	and.w	r1, r1, #3
9000cef2:	2903      	cmp	r1, #3
9000cef4:	f43f ab3a 	beq.w	9000c56c <HAL_RCCEx_PeriphCLKConfig+0x330>
9000cef8:	2100      	movs	r1, #0
9000cefa:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cefe:	f7ff f92b 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000cf02:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000cf04:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cf08:	2d00      	cmp	r5, #0
9000cf0a:	f47f af18 	bne.w	9000cd3e <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000cf0e:	f7ff ba8c 	b.w	9000c42a <HAL_RCCEx_PeriphCLKConfig+0x1ee>
9000cf12:	bf00      	nop
9000cf14:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cf18:	4973      	ldr	r1, [pc, #460]	@ (9000d0e8 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000cf1a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cf1c:	f001 0103 	and.w	r1, r1, #3
9000cf20:	2903      	cmp	r1, #3
9000cf22:	f43f ae07 	beq.w	9000cb34 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000cf26:	2102      	movs	r1, #2
9000cf28:	3028      	adds	r0, #40	@ 0x28
9000cf2a:	f7ff f915 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000cf2e:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000cf30:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cf34:	2e00      	cmp	r6, #0
9000cf36:	f47f a9b0 	bne.w	9000c29a <HAL_RCCEx_PeriphCLKConfig+0x5e>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000cf3a:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000cf3c:	f7ff b9a6 	b.w	9000c28c <HAL_RCCEx_PeriphCLKConfig+0x50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cf40:	4969      	ldr	r1, [pc, #420]	@ (9000d0e8 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000cf42:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cf44:	f001 0103 	and.w	r1, r1, #3
9000cf48:	2903      	cmp	r1, #3
9000cf4a:	f43f a9b2 	beq.w	9000c2b2 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000cf4e:	2100      	movs	r1, #0
9000cf50:	f104 0008 	add.w	r0, r4, #8
9000cf54:	f7ff f88e 	bl	9000c074 <RCCEx_PLL2_Config.part.0>
9000cf58:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000cf5a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cf5e:	2d00      	cmp	r5, #0
9000cf60:	f43f ae53 	beq.w	9000cc0a <HAL_RCCEx_PeriphCLKConfig+0x9ce>
9000cf64:	462e      	mov	r6, r5
9000cf66:	f7ff b9a6 	b.w	9000c2b6 <HAL_RCCEx_PeriphCLKConfig+0x7a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cf6a:	495f      	ldr	r1, [pc, #380]	@ (9000d0e8 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000cf6c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cf6e:	f001 0103 	and.w	r1, r1, #3
9000cf72:	2903      	cmp	r1, #3
9000cf74:	f43f a99d 	beq.w	9000c2b2 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000cf78:	2100      	movs	r1, #0
9000cf7a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cf7e:	f7ff f8eb 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000cf82:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000cf84:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000cf88:	e63c      	b.n	9000cc04 <HAL_RCCEx_PeriphCLKConfig+0x9c8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cf8a:	4957      	ldr	r1, [pc, #348]	@ (9000d0e8 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000cf8c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cf8e:	f001 0103 	and.w	r1, r1, #3
9000cf92:	2903      	cmp	r1, #3
9000cf94:	f43f aac0 	beq.w	9000c518 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000cf98:	2100      	movs	r1, #0
9000cf9a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cf9e:	f7ff f8db 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000cfa2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000cfa4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cfa8:	2d00      	cmp	r5, #0
9000cfaa:	f47f aebf 	bne.w	9000cd2c <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000cfae:	f7ff b9a2 	b.w	9000c2f6 <HAL_RCCEx_PeriphCLKConfig+0xba>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cfb2:	494d      	ldr	r1, [pc, #308]	@ (9000d0e8 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000cfb4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cfb6:	f001 0103 	and.w	r1, r1, #3
9000cfba:	2903      	cmp	r1, #3
9000cfbc:	f43f aaba 	beq.w	9000c534 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000cfc0:	2100      	movs	r1, #0
9000cfc2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cfc6:	f7ff f8c7 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000cfca:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000cfcc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cfd0:	2d00      	cmp	r5, #0
9000cfd2:	f47f aeae 	bne.w	9000cd32 <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000cfd6:	f7ff b9b8 	b.w	9000c34a <HAL_RCCEx_PeriphCLKConfig+0x10e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cfda:	4943      	ldr	r1, [pc, #268]	@ (9000d0e8 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000cfdc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000cfde:	f001 0103 	and.w	r1, r1, #3
9000cfe2:	2903      	cmp	r1, #3
9000cfe4:	d041      	beq.n	9000d06a <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000cfe6:	2101      	movs	r1, #1
9000cfe8:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000cfec:	f7ff f8b4 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000cff0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000cff2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cff6:	2d00      	cmp	r5, #0
9000cff8:	f47f ab56 	bne.w	9000c6a8 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000cffc:	e6b8      	b.n	9000cd70 <HAL_RCCEx_PeriphCLKConfig+0xb34>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cffe:	493a      	ldr	r1, [pc, #232]	@ (9000d0e8 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d000:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d002:	f001 0103 	and.w	r1, r1, #3
9000d006:	2903      	cmp	r1, #3
9000d008:	d02b      	beq.n	9000d062 <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000d00a:	2101      	movs	r1, #1
9000d00c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d010:	f7ff f8a2 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000d014:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d016:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d01a:	2d00      	cmp	r5, #0
9000d01c:	f47f ab1f 	bne.w	9000c65e <HAL_RCCEx_PeriphCLKConfig+0x422>
9000d020:	e698      	b.n	9000cd54 <HAL_RCCEx_PeriphCLKConfig+0xb18>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d022:	4931      	ldr	r1, [pc, #196]	@ (9000d0e8 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d024:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d026:	f001 0103 	and.w	r1, r1, #3
9000d02a:	2903      	cmp	r1, #3
9000d02c:	f43f aaf5 	beq.w	9000c61a <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000d030:	2101      	movs	r1, #1
9000d032:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000d036:	f7ff f88f 	bl	9000c158 <RCCEx_PLL3_Config.part.0>
9000d03a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d03c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d040:	2d00      	cmp	r5, #0
9000d042:	f47f aea6 	bne.w	9000cd92 <HAL_RCCEx_PeriphCLKConfig+0xb56>
9000d046:	e56d      	b.n	9000cb24 <HAL_RCCEx_PeriphCLKConfig+0x8e8>
        ret = HAL_TIMEOUT;
9000d048:	2503      	movs	r5, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d04a:	462e      	mov	r6, r5
9000d04c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d050:	f7ff bab3 	b.w	9000c5ba <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d054:	4d24      	ldr	r5, [pc, #144]	@ (9000d0e8 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d056:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000d058:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000d05c:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d05e:	f7ff b915 	b.w	9000c28c <HAL_RCCEx_PeriphCLKConfig+0x50>
9000d062:	2601      	movs	r6, #1
9000d064:	4635      	mov	r5, r6
9000d066:	f7ff bafb 	b.w	9000c660 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000d06a:	2601      	movs	r6, #1
9000d06c:	4635      	mov	r5, r6
9000d06e:	f7ff bb1c 	b.w	9000c6aa <HAL_RCCEx_PeriphCLKConfig+0x46e>
        status = HAL_ERROR;
9000d072:	2601      	movs	r6, #1
9000d074:	f7ff bb9c 	b.w	9000c7b0 <HAL_RCCEx_PeriphCLKConfig+0x574>
        status = HAL_ERROR;
9000d078:	2601      	movs	r6, #1
9000d07a:	f7ff bba7 	b.w	9000c7cc <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d07e:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000d082:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d084:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d088:	f7ff bba0 	b.w	9000c7cc <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d08c:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d090:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d094:	f7ff bb8c 	b.w	9000c7b0 <HAL_RCCEx_PeriphCLKConfig+0x574>
9000d098:	2601      	movs	r6, #1
9000d09a:	4635      	mov	r5, r6
9000d09c:	f7ff ba8a 	b.w	9000c5b4 <HAL_RCCEx_PeriphCLKConfig+0x378>
        tickstart = HAL_GetTick();
9000d0a0:	f7fa fff0 	bl	90008084 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d0a4:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 9000d0e8 <HAL_RCCEx_PeriphCLKConfig+0xeac>
        tickstart = HAL_GetTick();
9000d0a8:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d0aa:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d0ae:	e004      	b.n	9000d0ba <HAL_RCCEx_PeriphCLKConfig+0xe7e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000d0b0:	f7fa ffe8 	bl	90008084 <HAL_GetTick>
9000d0b4:	1bc0      	subs	r0, r0, r7
9000d0b6:	4548      	cmp	r0, r9
9000d0b8:	d810      	bhi.n	9000d0dc <HAL_RCCEx_PeriphCLKConfig+0xea0>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000d0ba:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000d0be:	079b      	lsls	r3, r3, #30
9000d0c0:	d5f6      	bpl.n	9000d0b0 <HAL_RCCEx_PeriphCLKConfig+0xe74>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d0c2:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000d0c6:	e566      	b.n	9000cb96 <HAL_RCCEx_PeriphCLKConfig+0x95a>
9000d0c8:	4807      	ldr	r0, [pc, #28]	@ (9000d0e8 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000d0ca:	4a08      	ldr	r2, [pc, #32]	@ (9000d0ec <HAL_RCCEx_PeriphCLKConfig+0xeb0>)
9000d0cc:	6901      	ldr	r1, [r0, #16]
9000d0ce:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000d0d2:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000d0d6:	430a      	orrs	r2, r1
9000d0d8:	6102      	str	r2, [r0, #16]
9000d0da:	e567      	b.n	9000cbac <HAL_RCCEx_PeriphCLKConfig+0x970>
        status = ret;
9000d0dc:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d0de:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d0e2:	4635      	mov	r5, r6
9000d0e4:	f7ff ba69 	b.w	9000c5ba <HAL_RCCEx_PeriphCLKConfig+0x37e>
9000d0e8:	58024400 	.word	0x58024400
9000d0ec:	00ffffcf 	.word	0x00ffffcf

9000d0f0 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000d0f0:	b318      	cbz	r0, 9000d13a <HAL_SDRAM_Init+0x4a>
{
9000d0f2:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000d0f4:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000d0f8:	4604      	mov	r4, r0
9000d0fa:	460d      	mov	r5, r1
9000d0fc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000d100:	b1b3      	cbz	r3, 9000d130 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000d102:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d104:	2302      	movs	r3, #2
9000d106:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000d10a:	f851 0b04 	ldr.w	r0, [r1], #4
9000d10e:	f000 fa13 	bl	9000d538 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000d112:	6862      	ldr	r2, [r4, #4]
9000d114:	4629      	mov	r1, r5
9000d116:	6820      	ldr	r0, [r4, #0]
9000d118:	f000 fa46 	bl	9000d5a8 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000d11c:	4a08      	ldr	r2, [pc, #32]	@ (9000d140 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000d11e:	2101      	movs	r1, #1

  return HAL_OK;
9000d120:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000d122:	6813      	ldr	r3, [r2, #0]
9000d124:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000d128:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000d12a:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000d12e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000d130:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000d134:	f7f6 ffbe 	bl	900040b4 <HAL_SDRAM_MspInit>
9000d138:	e7e3      	b.n	9000d102 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000d13a:	2001      	movs	r0, #1
}
9000d13c:	4770      	bx	lr
9000d13e:	bf00      	nop
9000d140:	52004000 	.word	0x52004000

9000d144 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000d144:	b510      	push	{r4, lr}
9000d146:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000d148:	f7f7 f830 	bl	900041ac <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000d14c:	e9d4 0100 	ldrd	r0, r1, [r4]
9000d150:	f000 fa68 	bl	9000d624 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000d154:	2000      	movs	r0, #0
9000d156:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000d15a:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000d15e:	bd10      	pop	{r4, pc}

9000d160 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000d160:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000d162:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000d166:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000d168:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000d16a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000d16c:	d004      	beq.n	9000d178 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000d16e:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000d172:	2c01      	cmp	r4, #1
9000d174:	d001      	beq.n	9000d17a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000d176:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000d178:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d17a:	2302      	movs	r3, #2
9000d17c:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000d17e:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d180:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000d184:	f000 fa62 	bl	9000d64c <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000d188:	6833      	ldr	r3, [r6, #0]
9000d18a:	2b02      	cmp	r3, #2
9000d18c:	d003      	beq.n	9000d196 <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000d18e:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000d192:	2000      	movs	r0, #0
}
9000d194:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000d196:	2305      	movs	r3, #5
9000d198:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000d19c:	e7f9      	b.n	9000d192 <HAL_SDRAM_SendCommand+0x32>
9000d19e:	bf00      	nop

9000d1a0 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000d1a0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000d1a2:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000d1a6:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000d1a8:	2b02      	cmp	r3, #2
9000d1aa:	b2d8      	uxtb	r0, r3
9000d1ac:	d005      	beq.n	9000d1ba <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000d1ae:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000d1b2:	2b01      	cmp	r3, #1
9000d1b4:	b2dd      	uxtb	r5, r3
9000d1b6:	d001      	beq.n	9000d1bc <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000d1b8:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000d1ba:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d1bc:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000d1be:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000d1c0:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000d1c4:	f000 fa5a 	bl	9000d67c <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000d1c8:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000d1ca:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000d1ce:	bd38      	pop	{r3, r4, r5, pc}

9000d1d0 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000d1d0:	4770      	bx	lr
9000d1d2:	bf00      	nop

9000d1d4 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000d1d4:	2800      	cmp	r0, #0
9000d1d6:	f000 8094 	beq.w	9000d302 <HAL_TIM_Base_Init+0x12e>
{
9000d1da:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000d1dc:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000d1e0:	4604      	mov	r4, r0
9000d1e2:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000d1e6:	2b00      	cmp	r3, #0
9000d1e8:	d07b      	beq.n	9000d2e2 <HAL_TIM_Base_Init+0x10e>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000d1ea:	6823      	ldr	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000d1ec:	2202      	movs	r2, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d1ee:	4946      	ldr	r1, [pc, #280]	@ (9000d308 <HAL_TIM_Base_Init+0x134>)
9000d1f0:	4846      	ldr	r0, [pc, #280]	@ (9000d30c <HAL_TIM_Base_Init+0x138>)
9000d1f2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000d1f6:	eba3 0101 	sub.w	r1, r3, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000d1fa:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d1fe:	eba3 0e00 	sub.w	lr, r3, r0
  tmpcr1 = TIMx->CR1;
9000d202:	681a      	ldr	r2, [r3, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d204:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d208:	69a7      	ldr	r7, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d20a:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000d20e:	6865      	ldr	r5, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d210:	ea4f 1151 	mov.w	r1, r1, lsr #5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d214:	68e6      	ldr	r6, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000d216:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000d21a:	d020      	beq.n	9000d25e <HAL_TIM_Base_Init+0x8a>
9000d21c:	b9f9      	cbnz	r1, 9000d25e <HAL_TIM_Base_Init+0x8a>
9000d21e:	f8df c0fc 	ldr.w	ip, [pc, #252]	@ 9000d31c <HAL_TIM_Base_Init+0x148>
9000d222:	4563      	cmp	r3, ip
9000d224:	d01b      	beq.n	9000d25e <HAL_TIM_Base_Init+0x8a>
9000d226:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000d22a:	4563      	cmp	r3, ip
9000d22c:	d017      	beq.n	9000d25e <HAL_TIM_Base_Init+0x8a>
9000d22e:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000d232:	4563      	cmp	r3, ip
9000d234:	d013      	beq.n	9000d25e <HAL_TIM_Base_Init+0x8a>
9000d236:	f1be 0f00 	cmp.w	lr, #0
9000d23a:	d110      	bne.n	9000d25e <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d23c:	4834      	ldr	r0, [pc, #208]	@ (9000d310 <HAL_TIM_Base_Init+0x13c>)
9000d23e:	4935      	ldr	r1, [pc, #212]	@ (9000d314 <HAL_TIM_Base_Init+0x140>)
9000d240:	428b      	cmp	r3, r1
9000d242:	bf18      	it	ne
9000d244:	4283      	cmpne	r3, r0
9000d246:	d051      	beq.n	9000d2ec <HAL_TIM_Base_Init+0x118>
9000d248:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000d24c:	428b      	cmp	r3, r1
9000d24e:	d04d      	beq.n	9000d2ec <HAL_TIM_Base_Init+0x118>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d250:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000d254:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000d256:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d258:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d25a:	629d      	str	r5, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d25c:	e01d      	b.n	9000d29a <HAL_TIM_Base_Init+0xc6>
    tmpcr1 |= Structure->CounterMode;
9000d25e:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000d260:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000d264:	4302      	orrs	r2, r0
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d266:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000d268:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d26c:	4302      	orrs	r2, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d26e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000d272:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000d274:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d276:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d278:	629d      	str	r5, [r3, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d27a:	b961      	cbnz	r1, 9000d296 <HAL_TIM_Base_Init+0xc2>
9000d27c:	f1be 0f00 	cmp.w	lr, #0
9000d280:	d109      	bne.n	9000d296 <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d282:	4925      	ldr	r1, [pc, #148]	@ (9000d318 <HAL_TIM_Base_Init+0x144>)
9000d284:	4a22      	ldr	r2, [pc, #136]	@ (9000d310 <HAL_TIM_Base_Init+0x13c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d286:	4293      	cmp	r3, r2
9000d288:	bf18      	it	ne
9000d28a:	428b      	cmpne	r3, r1
9000d28c:	d003      	beq.n	9000d296 <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000d28e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d292:	4293      	cmp	r3, r2
9000d294:	d101      	bne.n	9000d29a <HAL_TIM_Base_Init+0xc6>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000d296:	6962      	ldr	r2, [r4, #20]
9000d298:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000d29a:	2201      	movs	r2, #1
9000d29c:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
9000d29e:	691a      	ldr	r2, [r3, #16]
9000d2a0:	07d2      	lsls	r2, r2, #31
9000d2a2:	d503      	bpl.n	9000d2ac <HAL_TIM_Base_Init+0xd8>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
9000d2a4:	691a      	ldr	r2, [r3, #16]
9000d2a6:	f022 0201 	bic.w	r2, r2, #1
9000d2aa:	611a      	str	r2, [r3, #16]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000d2ac:	2301      	movs	r3, #1
  return HAL_OK;
9000d2ae:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000d2b0:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000d2b4:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
9000d2b8:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
9000d2bc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
9000d2c0:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
9000d2c4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9000d2c8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000d2cc:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000d2d0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000d2d4:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
9000d2d8:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000d2dc:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
9000d2e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    htim->Lock = HAL_UNLOCKED;
9000d2e2:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000d2e6:	f7ff ff73 	bl	9000d1d0 <HAL_TIM_Base_MspInit>
9000d2ea:	e77e      	b.n	9000d1ea <HAL_TIM_Base_Init+0x16>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d2ec:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000d2ee:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000d2f2:	430a      	orrs	r2, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000d2f4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000d2f8:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000d2fa:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000d2fc:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000d2fe:	629d      	str	r5, [r3, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000d300:	e7bf      	b.n	9000d282 <HAL_TIM_Base_Init+0xae>
    return HAL_ERROR;
9000d302:	2001      	movs	r0, #1
}
9000d304:	4770      	bx	lr
9000d306:	bf00      	nop
9000d308:	40010000 	.word	0x40010000
9000d30c:	40010400 	.word	0x40010400
9000d310:	40014000 	.word	0x40014000
9000d314:	40014400 	.word	0x40014400
9000d318:	40014800 	.word	0x40014800
9000d31c:	40000400 	.word	0x40000400

9000d320 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000d320:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000d324:	2b01      	cmp	r3, #1
9000d326:	d13d      	bne.n	9000d3a4 <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d328:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000d32a:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d32c:	4b1e      	ldr	r3, [pc, #120]	@ (9000d3a8 <HAL_TIM_Base_Start_IT+0x88>)
9000d32e:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000d332:	bf18      	it	ne
9000d334:	429a      	cmpne	r2, r3
{
9000d336:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d338:	bf0c      	ite	eq
9000d33a:	2301      	moveq	r3, #1
9000d33c:	2300      	movne	r3, #0
9000d33e:	4d1b      	ldr	r5, [pc, #108]	@ (9000d3ac <HAL_TIM_Base_Start_IT+0x8c>)
9000d340:	4c1b      	ldr	r4, [pc, #108]	@ (9000d3b0 <HAL_TIM_Base_Start_IT+0x90>)
9000d342:	42aa      	cmp	r2, r5
9000d344:	bf08      	it	eq
9000d346:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000d34a:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d34e:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d350:	42a2      	cmp	r2, r4
9000d352:	bf08      	it	eq
9000d354:	f043 0301 	orreq.w	r3, r3, #1
9000d358:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d35c:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d360:	4814      	ldr	r0, [pc, #80]	@ (9000d3b4 <HAL_TIM_Base_Start_IT+0x94>)
9000d362:	42a2      	cmp	r2, r4
9000d364:	bf08      	it	eq
9000d366:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000d36a:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000d36c:	4282      	cmp	r2, r0
9000d36e:	bf08      	it	eq
9000d370:	f043 0301 	orreq.w	r3, r3, #1
9000d374:	4910      	ldr	r1, [pc, #64]	@ (9000d3b8 <HAL_TIM_Base_Start_IT+0x98>)
9000d376:	428a      	cmp	r2, r1
9000d378:	bf08      	it	eq
9000d37a:	f043 0301 	orreq.w	r3, r3, #1
9000d37e:	b913      	cbnz	r3, 9000d386 <HAL_TIM_Base_Start_IT+0x66>
9000d380:	4b0e      	ldr	r3, [pc, #56]	@ (9000d3bc <HAL_TIM_Base_Start_IT+0x9c>)
9000d382:	429a      	cmp	r2, r3
9000d384:	d107      	bne.n	9000d396 <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000d386:	6891      	ldr	r1, [r2, #8]
9000d388:	4b0d      	ldr	r3, [pc, #52]	@ (9000d3c0 <HAL_TIM_Base_Start_IT+0xa0>)
9000d38a:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000d38c:	2b06      	cmp	r3, #6
9000d38e:	d006      	beq.n	9000d39e <HAL_TIM_Base_Start_IT+0x7e>
9000d390:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000d394:	d003      	beq.n	9000d39e <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000d396:	6813      	ldr	r3, [r2, #0]
9000d398:	f043 0301 	orr.w	r3, r3, #1
9000d39c:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000d39e:	2000      	movs	r0, #0
}
9000d3a0:	bc30      	pop	{r4, r5}
9000d3a2:	4770      	bx	lr
    return HAL_ERROR;
9000d3a4:	2001      	movs	r0, #1
}
9000d3a6:	4770      	bx	lr
9000d3a8:	40010000 	.word	0x40010000
9000d3ac:	40000400 	.word	0x40000400
9000d3b0:	40000800 	.word	0x40000800
9000d3b4:	40010400 	.word	0x40010400
9000d3b8:	40001800 	.word	0x40001800
9000d3bc:	40014000 	.word	0x40014000
9000d3c0:	00010007 	.word	0x00010007

9000d3c4 <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000d3c4:	4770      	bx	lr
9000d3c6:	bf00      	nop

9000d3c8 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000d3c8:	4770      	bx	lr
9000d3ca:	bf00      	nop

9000d3cc <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000d3cc:	4770      	bx	lr
9000d3ce:	bf00      	nop

9000d3d0 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000d3d0:	4770      	bx	lr
9000d3d2:	bf00      	nop

9000d3d4 <HAL_TIM_IRQHandler>:
{
9000d3d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t itsource = htim->Instance->DIER;
9000d3d6:	6803      	ldr	r3, [r0, #0]
{
9000d3d8:	4605      	mov	r5, r0
  uint32_t itsource = htim->Instance->DIER;
9000d3da:	68de      	ldr	r6, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
9000d3dc:	691c      	ldr	r4, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
9000d3de:	07a1      	lsls	r1, r4, #30
9000d3e0:	d501      	bpl.n	9000d3e6 <HAL_TIM_IRQHandler+0x12>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
9000d3e2:	07b2      	lsls	r2, r6, #30
9000d3e4:	d457      	bmi.n	9000d496 <HAL_TIM_IRQHandler+0xc2>
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
9000d3e6:	0767      	lsls	r7, r4, #29
9000d3e8:	d501      	bpl.n	9000d3ee <HAL_TIM_IRQHandler+0x1a>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
9000d3ea:	0770      	lsls	r0, r6, #29
9000d3ec:	d440      	bmi.n	9000d470 <HAL_TIM_IRQHandler+0x9c>
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
9000d3ee:	0721      	lsls	r1, r4, #28
9000d3f0:	d501      	bpl.n	9000d3f6 <HAL_TIM_IRQHandler+0x22>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
9000d3f2:	0732      	lsls	r2, r6, #28
9000d3f4:	d42a      	bmi.n	9000d44c <HAL_TIM_IRQHandler+0x78>
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
9000d3f6:	06e7      	lsls	r7, r4, #27
9000d3f8:	d501      	bpl.n	9000d3fe <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
9000d3fa:	06f0      	lsls	r0, r6, #27
9000d3fc:	d413      	bmi.n	9000d426 <HAL_TIM_IRQHandler+0x52>
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
9000d3fe:	07e1      	lsls	r1, r4, #31
9000d400:	d501      	bpl.n	9000d406 <HAL_TIM_IRQHandler+0x32>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
9000d402:	07f2      	lsls	r2, r6, #31
9000d404:	d465      	bmi.n	9000d4d2 <HAL_TIM_IRQHandler+0xfe>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000d406:	f414 5f02 	tst.w	r4, #8320	@ 0x2080
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000d40a:	f404 7780 	and.w	r7, r4, #256	@ 0x100
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000d40e:	d052      	beq.n	9000d4b6 <HAL_TIM_IRQHandler+0xe2>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000d410:	0633      	lsls	r3, r6, #24
9000d412:	d466      	bmi.n	9000d4e2 <HAL_TIM_IRQHandler+0x10e>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
9000d414:	0660      	lsls	r0, r4, #25
9000d416:	d501      	bpl.n	9000d41c <HAL_TIM_IRQHandler+0x48>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
9000d418:	0671      	lsls	r1, r6, #25
9000d41a:	d473      	bmi.n	9000d504 <HAL_TIM_IRQHandler+0x130>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
9000d41c:	06a2      	lsls	r2, r4, #26
9000d41e:	d501      	bpl.n	9000d424 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
9000d420:	06b3      	lsls	r3, r6, #26
9000d422:	d44d      	bmi.n	9000d4c0 <HAL_TIM_IRQHandler+0xec>
}
9000d424:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000d426:	682b      	ldr	r3, [r5, #0]
9000d428:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
9000d42c:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000d42e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000d430:	2208      	movs	r2, #8
9000d432:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000d434:	69db      	ldr	r3, [r3, #28]
9000d436:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000d43a:	d174      	bne.n	9000d526 <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d43c:	f7ff ffc2 	bl	9000d3c4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d440:	4628      	mov	r0, r5
9000d442:	f7ff ffc3 	bl	9000d3cc <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d446:	2300      	movs	r3, #0
9000d448:	772b      	strb	r3, [r5, #28]
9000d44a:	e7d8      	b.n	9000d3fe <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000d44c:	682b      	ldr	r3, [r5, #0]
9000d44e:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000d452:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000d454:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000d456:	2204      	movs	r2, #4
9000d458:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000d45a:	69db      	ldr	r3, [r3, #28]
9000d45c:	079b      	lsls	r3, r3, #30
9000d45e:	d15f      	bne.n	9000d520 <HAL_TIM_IRQHandler+0x14c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d460:	f7ff ffb0 	bl	9000d3c4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d464:	4628      	mov	r0, r5
9000d466:	f7ff ffb1 	bl	9000d3cc <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d46a:	2300      	movs	r3, #0
9000d46c:	772b      	strb	r3, [r5, #28]
9000d46e:	e7c2      	b.n	9000d3f6 <HAL_TIM_IRQHandler+0x22>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000d470:	682b      	ldr	r3, [r5, #0]
9000d472:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000d476:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000d478:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000d47a:	2202      	movs	r2, #2
9000d47c:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000d47e:	699b      	ldr	r3, [r3, #24]
9000d480:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000d484:	d149      	bne.n	9000d51a <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000d486:	f7ff ff9d 	bl	9000d3c4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d48a:	4628      	mov	r0, r5
9000d48c:	f7ff ff9e 	bl	9000d3cc <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d490:	2300      	movs	r3, #0
9000d492:	772b      	strb	r3, [r5, #28]
9000d494:	e7ab      	b.n	9000d3ee <HAL_TIM_IRQHandler+0x1a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
9000d496:	f06f 0202 	mvn.w	r2, #2
9000d49a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000d49c:	2201      	movs	r2, #1
9000d49e:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000d4a0:	699b      	ldr	r3, [r3, #24]
9000d4a2:	079b      	lsls	r3, r3, #30
9000d4a4:	d136      	bne.n	9000d514 <HAL_TIM_IRQHandler+0x140>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000d4a6:	f7ff ff8d 	bl	9000d3c4 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000d4aa:	4628      	mov	r0, r5
9000d4ac:	f7ff ff8e 	bl	9000d3cc <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000d4b0:	2300      	movs	r3, #0
9000d4b2:	772b      	strb	r3, [r5, #28]
9000d4b4:	e797      	b.n	9000d3e6 <HAL_TIM_IRQHandler+0x12>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000d4b6:	2f00      	cmp	r7, #0
9000d4b8:	d0ac      	beq.n	9000d414 <HAL_TIM_IRQHandler+0x40>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000d4ba:	0637      	lsls	r7, r6, #24
9000d4bc:	d41a      	bmi.n	9000d4f4 <HAL_TIM_IRQHandler+0x120>
9000d4be:	e7a9      	b.n	9000d414 <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000d4c0:	682b      	ldr	r3, [r5, #0]
9000d4c2:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000d4c6:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000d4c8:	611a      	str	r2, [r3, #16]
}
9000d4ca:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
      HAL_TIMEx_CommutCallback(htim);
9000d4ce:	f000 b82d 	b.w	9000d52c <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000d4d2:	682b      	ldr	r3, [r5, #0]
9000d4d4:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000d4d8:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000d4da:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000d4dc:	f7f6 fc4e 	bl	90003d7c <HAL_TIM_PeriodElapsedCallback>
9000d4e0:	e791      	b.n	9000d406 <HAL_TIM_IRQHandler+0x32>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000d4e2:	682b      	ldr	r3, [r5, #0]
9000d4e4:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
      HAL_TIMEx_BreakCallback(htim);
9000d4e8:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000d4ea:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000d4ec:	f000 f820 	bl	9000d530 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000d4f0:	2f00      	cmp	r7, #0
9000d4f2:	d08f      	beq.n	9000d414 <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000d4f4:	682b      	ldr	r3, [r5, #0]
9000d4f6:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000d4fa:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000d4fc:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000d4fe:	f000 f819 	bl	9000d534 <HAL_TIMEx_Break2Callback>
9000d502:	e787      	b.n	9000d414 <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000d504:	682b      	ldr	r3, [r5, #0]
9000d506:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000d50a:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000d50c:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000d50e:	f7ff ff5f 	bl	9000d3d0 <HAL_TIM_TriggerCallback>
9000d512:	e783      	b.n	9000d41c <HAL_TIM_IRQHandler+0x48>
          HAL_TIM_IC_CaptureCallback(htim);
9000d514:	f7ff ff58 	bl	9000d3c8 <HAL_TIM_IC_CaptureCallback>
9000d518:	e7ca      	b.n	9000d4b0 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000d51a:	f7ff ff55 	bl	9000d3c8 <HAL_TIM_IC_CaptureCallback>
9000d51e:	e7b7      	b.n	9000d490 <HAL_TIM_IRQHandler+0xbc>
        HAL_TIM_IC_CaptureCallback(htim);
9000d520:	f7ff ff52 	bl	9000d3c8 <HAL_TIM_IC_CaptureCallback>
9000d524:	e7a1      	b.n	9000d46a <HAL_TIM_IRQHandler+0x96>
        HAL_TIM_IC_CaptureCallback(htim);
9000d526:	f7ff ff4f 	bl	9000d3c8 <HAL_TIM_IC_CaptureCallback>
9000d52a:	e78c      	b.n	9000d446 <HAL_TIM_IRQHandler+0x72>

9000d52c <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000d52c:	4770      	bx	lr
9000d52e:	bf00      	nop

9000d530 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000d530:	4770      	bx	lr
9000d532:	bf00      	nop

9000d534 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000d534:	4770      	bx	lr
9000d536:	bf00      	nop

9000d538 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
9000d538:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d53c:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000d540:	e9d1 8200 	ldrd	r8, r2, [r1]
9000d544:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000d546:	ea43 030e 	orr.w	r3, r3, lr
9000d54a:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000d54e:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000d552:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000d554:	f1b8 0f00 	cmp.w	r8, #0
9000d558:	d10f      	bne.n	9000d57a <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d55a:	433b      	orrs	r3, r7
9000d55c:	4313      	orrs	r3, r2
9000d55e:	4a11      	ldr	r2, [pc, #68]	@ (9000d5a4 <FMC_SDRAM_Init+0x6c>)
9000d560:	ea43 030c 	orr.w	r3, r3, ip
9000d564:	4333      	orrs	r3, r6
9000d566:	432b      	orrs	r3, r5
9000d568:	4323      	orrs	r3, r4
9000d56a:	430b      	orrs	r3, r1
9000d56c:	6801      	ldr	r1, [r0, #0]
9000d56e:	400a      	ands	r2, r1
9000d570:	4313      	orrs	r3, r2
9000d572:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000d574:	2000      	movs	r0, #0
9000d576:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000d57a:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d57e:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000d580:	4332      	orrs	r2, r6
9000d582:	432a      	orrs	r2, r5
9000d584:	4322      	orrs	r2, r4
9000d586:	4c07      	ldr	r4, [pc, #28]	@ (9000d5a4 <FMC_SDRAM_Init+0x6c>)
9000d588:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d58a:	6801      	ldr	r1, [r0, #0]
9000d58c:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000d590:	430b      	orrs	r3, r1
9000d592:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000d594:	6843      	ldr	r3, [r0, #4]
9000d596:	401c      	ands	r4, r3
9000d598:	4322      	orrs	r2, r4
9000d59a:	6042      	str	r2, [r0, #4]
}
9000d59c:	2000      	movs	r0, #0
9000d59e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000d5a2:	bf00      	nop
9000d5a4:	ffff8000 	.word	0xffff8000

9000d5a8 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000d5a8:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d5aa:	68cc      	ldr	r4, [r1, #12]
9000d5ac:	694b      	ldr	r3, [r1, #20]
9000d5ae:	3c01      	subs	r4, #1
9000d5b0:	688d      	ldr	r5, [r1, #8]
9000d5b2:	698f      	ldr	r7, [r1, #24]
9000d5b4:	3b01      	subs	r3, #1
9000d5b6:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000d5ba:	684c      	ldr	r4, [r1, #4]
9000d5bc:	680e      	ldr	r6, [r1, #0]
9000d5be:	3d01      	subs	r5, #1
9000d5c0:	3c01      	subs	r4, #1
9000d5c2:	051b      	lsls	r3, r3, #20
9000d5c4:	022d      	lsls	r5, r5, #8
9000d5c6:	3e01      	subs	r6, #1
9000d5c8:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000d5cc:	690c      	ldr	r4, [r1, #16]
9000d5ce:	1e79      	subs	r1, r7, #1
9000d5d0:	3c01      	subs	r4, #1
9000d5d2:	0609      	lsls	r1, r1, #24
9000d5d4:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000d5d6:	b972      	cbnz	r2, 9000d5f6 <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d5d8:	ea4e 0303 	orr.w	r3, lr, r3
9000d5dc:	6882      	ldr	r2, [r0, #8]
9000d5de:	4333      	orrs	r3, r6
9000d5e0:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000d5e4:	ea43 030c 	orr.w	r3, r3, ip
9000d5e8:	432b      	orrs	r3, r5
9000d5ea:	4323      	orrs	r3, r4
9000d5ec:	430b      	orrs	r3, r1
9000d5ee:	4313      	orrs	r3, r2
9000d5f0:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000d5f2:	2000      	movs	r0, #0
9000d5f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d5f6:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000d5fa:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d5fe:	4a08      	ldr	r2, [pc, #32]	@ (9000d620 <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000d600:	4333      	orrs	r3, r6
9000d602:	4323      	orrs	r3, r4
9000d604:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d606:	6881      	ldr	r1, [r0, #8]
9000d608:	400a      	ands	r2, r1
9000d60a:	ea42 020e 	orr.w	r2, r2, lr
9000d60e:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000d610:	68c2      	ldr	r2, [r0, #12]
9000d612:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000d616:	4313      	orrs	r3, r2
9000d618:	60c3      	str	r3, [r0, #12]
}
9000d61a:	2000      	movs	r0, #0
9000d61c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000d61e:	bf00      	nop
9000d620:	ff0f0fff 	.word	0xff0f0fff

9000d624 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000d624:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000d626:	2200      	movs	r2, #0
{
9000d628:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000d62a:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000d62e:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000d632:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000d636:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000d63a:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000d63c:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000d640:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000d642:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000d644:	619a      	str	r2, [r3, #24]
}
9000d646:	bc30      	pop	{r4, r5}
9000d648:	4770      	bx	lr
9000d64a:	bf00      	nop

9000d64c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000d64c:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000d64e:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000d652:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000d654:	6900      	ldr	r0, [r0, #16]
9000d656:	4323      	orrs	r3, r4
9000d658:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000d65c:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000d660:	4c05      	ldr	r4, [pc, #20]	@ (9000d678 <FMC_SDRAM_SendCommand+0x2c>)
9000d662:	3901      	subs	r1, #1
9000d664:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000d666:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000d668:	4323      	orrs	r3, r4
}
9000d66a:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000d66e:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000d672:	6113      	str	r3, [r2, #16]
}
9000d674:	4770      	bx	lr
9000d676:	bf00      	nop
9000d678:	ffc00000 	.word	0xffc00000

9000d67c <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000d67c:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000d67e:	4b05      	ldr	r3, [pc, #20]	@ (9000d694 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000d680:	2000      	movs	r0, #0
{
9000d682:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000d684:	6954      	ldr	r4, [r2, #20]
9000d686:	4023      	ands	r3, r4
}
9000d688:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000d68c:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000d690:	6153      	str	r3, [r2, #20]
}
9000d692:	4770      	bx	lr
9000d694:	ffffc001 	.word	0xffffc001

9000d698 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000d698:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000d69a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d69e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000d6a0:	f002 fb4a 	bl	9000fd38 <xTaskGetSchedulerState>
9000d6a4:	2801      	cmp	r0, #1
9000d6a6:	d100      	bne.n	9000d6aa <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000d6a8:	bd08      	pop	{r3, pc}
9000d6aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000d6ae:	f000 bc31 	b.w	9000df14 <xPortSysTickHandler>
9000d6b2:	bf00      	nop

9000d6b4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000d6b4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000d6b8:	b92b      	cbnz	r3, 9000d6c6 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000d6ba:	4b06      	ldr	r3, [pc, #24]	@ (9000d6d4 <osKernelInitialize+0x20>)
9000d6bc:	6818      	ldr	r0, [r3, #0]
9000d6be:	b928      	cbnz	r0, 9000d6cc <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000d6c0:	2201      	movs	r2, #1
9000d6c2:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000d6c4:	4770      	bx	lr
    stat = osErrorISR;
9000d6c6:	f06f 0005 	mvn.w	r0, #5
9000d6ca:	4770      	bx	lr
    } else {
      stat = osError;
9000d6cc:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000d6d0:	4770      	bx	lr
9000d6d2:	bf00      	nop
9000d6d4:	2400a694 	.word	0x2400a694

9000d6d8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000d6d8:	b510      	push	{r4, lr}
9000d6da:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000d6de:	b974      	cbnz	r4, 9000d6fe <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000d6e0:	4b08      	ldr	r3, [pc, #32]	@ (9000d704 <osKernelStart+0x2c>)
9000d6e2:	681a      	ldr	r2, [r3, #0]
9000d6e4:	2a01      	cmp	r2, #1
9000d6e6:	d107      	bne.n	9000d6f8 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000d6e8:	4907      	ldr	r1, [pc, #28]	@ (9000d708 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000d6ea:	2202      	movs	r2, #2
9000d6ec:	77cc      	strb	r4, [r1, #31]
9000d6ee:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000d6f0:	f002 f8c0 	bl	9000f874 <vTaskStartScheduler>
      stat = osOK;
9000d6f4:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000d6f6:	bd10      	pop	{r4, pc}
      stat = osError;
9000d6f8:	f04f 30ff 	mov.w	r0, #4294967295
}
9000d6fc:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000d6fe:	f06f 0005 	mvn.w	r0, #5
}
9000d702:	bd10      	pop	{r4, pc}
9000d704:	2400a694 	.word	0x2400a694
9000d708:	e000ed00 	.word	0xe000ed00

9000d70c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000d70c:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000d70e:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000d710:	b087      	sub	sp, #28
  hTask = NULL;
9000d712:	9505      	str	r5, [sp, #20]
9000d714:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000d718:	b300      	cbz	r0, 9000d75c <osThreadNew+0x50>
9000d71a:	b9fb      	cbnz	r3, 9000d75c <osThreadNew+0x50>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000d71c:	4614      	mov	r4, r2
9000d71e:	b302      	cbz	r2, 9000d762 <osThreadNew+0x56>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000d720:	6996      	ldr	r6, [r2, #24]
9000d722:	b9c6      	cbnz	r6, 9000d756 <osThreadNew+0x4a>
9000d724:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000d726:	6863      	ldr	r3, [r4, #4]
9000d728:	07db      	lsls	r3, r3, #31
9000d72a:	d417      	bmi.n	9000d75c <osThreadNew+0x50>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000d72c:	6963      	ldr	r3, [r4, #20]
9000d72e:	b32b      	cbz	r3, 9000d77c <osThreadNew+0x70>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000d730:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000d732:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000d734:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000d738:	68e7      	ldr	r7, [r4, #12]
9000d73a:	b30d      	cbz	r5, 9000d780 <osThreadNew+0x74>
9000d73c:	2f5f      	cmp	r7, #95	@ 0x5f
9000d73e:	d90d      	bls.n	9000d75c <osThreadNew+0x50>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000d740:	6924      	ldr	r4, [r4, #16]
9000d742:	b15b      	cbz	r3, 9000d75c <osThreadNew+0x50>
9000d744:	b154      	cbz	r4, 9000d75c <osThreadNew+0x50>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000d746:	460b      	mov	r3, r1
9000d748:	9600      	str	r6, [sp, #0]
9000d74a:	4661      	mov	r1, ip
9000d74c:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000d750:	f001 fefe 	bl	9000f550 <xTaskCreateStatic>
9000d754:	e003      	b.n	9000d75e <osThreadNew+0x52>
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000d756:	1e72      	subs	r2, r6, #1
9000d758:	2a37      	cmp	r2, #55	@ 0x37
9000d75a:	d9e4      	bls.n	9000d726 <osThreadNew+0x1a>
        return (NULL);
9000d75c:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000d75e:	b007      	add	sp, #28
9000d760:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000d762:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000d764:	2618      	movs	r6, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000d766:	460b      	mov	r3, r1
9000d768:	4621      	mov	r1, r4
9000d76a:	ac05      	add	r4, sp, #20
9000d76c:	9600      	str	r6, [sp, #0]
9000d76e:	9401      	str	r4, [sp, #4]
9000d770:	f001 ff98 	bl	9000f6a4 <xTaskCreate>
9000d774:	2801      	cmp	r0, #1
9000d776:	d1f1      	bne.n	9000d75c <osThreadNew+0x50>
  return ((osThreadId_t)hTask);
9000d778:	9805      	ldr	r0, [sp, #20]
9000d77a:	e7f0      	b.n	9000d75e <osThreadNew+0x52>
    stack = configMINIMAL_STACK_SIZE;
9000d77c:	2280      	movs	r2, #128	@ 0x80
9000d77e:	e7d8      	b.n	9000d732 <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000d780:	2f00      	cmp	r7, #0
9000d782:	d1eb      	bne.n	9000d75c <osThreadNew+0x50>
9000d784:	6923      	ldr	r3, [r4, #16]
9000d786:	2b00      	cmp	r3, #0
9000d788:	d1e8      	bne.n	9000d75c <osThreadNew+0x50>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000d78a:	b292      	uxth	r2, r2
9000d78c:	4664      	mov	r4, ip
9000d78e:	e7ea      	b.n	9000d766 <osThreadNew+0x5a>

9000d790 <osDelay>:
9000d790:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000d794:	b93a      	cbnz	r2, 9000d7a6 <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000d796:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000d798:	b908      	cbnz	r0, 9000d79e <osDelay+0xe>
    stat = osOK;
9000d79a:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000d79c:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000d79e:	f002 f813 	bl	9000f7c8 <vTaskDelay>
    stat = osOK;
9000d7a2:	2000      	movs	r0, #0
}
9000d7a4:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000d7a6:	f06f 0005 	mvn.w	r0, #5
}
9000d7aa:	4770      	bx	lr

9000d7ac <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000d7ac:	b5f0      	push	{r4, r5, r6, r7, lr}
9000d7ae:	b083      	sub	sp, #12
9000d7b0:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000d7b4:	b98e      	cbnz	r6, 9000d7da <osSemaphoreNew+0x2e>
9000d7b6:	4605      	mov	r5, r0
9000d7b8:	b178      	cbz	r0, 9000d7da <osSemaphoreNew+0x2e>
9000d7ba:	4288      	cmp	r0, r1
9000d7bc:	460f      	mov	r7, r1
9000d7be:	d30c      	bcc.n	9000d7da <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000d7c0:	4614      	mov	r4, r2
9000d7c2:	b172      	cbz	r2, 9000d7e2 <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000d7c4:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000d7c8:	b14a      	cbz	r2, 9000d7de <osSemaphoreNew+0x32>
9000d7ca:	2b4f      	cmp	r3, #79	@ 0x4f
9000d7cc:	d905      	bls.n	9000d7da <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000d7ce:	2801      	cmp	r0, #1
9000d7d0:	d02f      	beq.n	9000d832 <osSemaphoreNew+0x86>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000d7d2:	f000 fd7d 	bl	9000e2d0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000d7d6:	4605      	mov	r5, r0
9000d7d8:	b968      	cbnz	r0, 9000d7f6 <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000d7da:	2500      	movs	r5, #0
9000d7dc:	e010      	b.n	9000d800 <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000d7de:	2b00      	cmp	r3, #0
9000d7e0:	d1fb      	bne.n	9000d7da <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000d7e2:	2d01      	cmp	r5, #1
9000d7e4:	d00f      	beq.n	9000d806 <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000d7e6:	4628      	mov	r0, r5
9000d7e8:	4639      	mov	r1, r7
9000d7ea:	f000 fdd1 	bl	9000e390 <xQueueCreateCountingSemaphore>
9000d7ee:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000d7f0:	2d00      	cmp	r5, #0
9000d7f2:	d0f2      	beq.n	9000d7da <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000d7f4:	b104      	cbz	r4, 9000d7f8 <osSemaphoreNew+0x4c>
          name = attr->name;
9000d7f6:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000d7f8:	4621      	mov	r1, r4
9000d7fa:	4628      	mov	r0, r5
9000d7fc:	f001 fc02 	bl	9000f004 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000d800:	4628      	mov	r0, r5
9000d802:	b003      	add	sp, #12
9000d804:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000d806:	4628      	mov	r0, r5
9000d808:	2203      	movs	r2, #3
9000d80a:	2100      	movs	r1, #0
9000d80c:	f000 fd1e 	bl	9000e24c <xQueueGenericCreate>
9000d810:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000d812:	2d00      	cmp	r5, #0
9000d814:	d0e1      	beq.n	9000d7da <osSemaphoreNew+0x2e>
9000d816:	2f00      	cmp	r7, #0
9000d818:	d0ea      	beq.n	9000d7f0 <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d81a:	2300      	movs	r3, #0
9000d81c:	4628      	mov	r0, r5
9000d81e:	461a      	mov	r2, r3
9000d820:	4619      	mov	r1, r3
9000d822:	f000 fdfb 	bl	9000e41c <xQueueGenericSend>
9000d826:	2801      	cmp	r0, #1
9000d828:	d0e4      	beq.n	9000d7f4 <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000d82a:	4628      	mov	r0, r5
9000d82c:	f001 fba4 	bl	9000ef78 <vQueueDelete>
      if (hSemaphore != NULL) {
9000d830:	e7d3      	b.n	9000d7da <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000d832:	4613      	mov	r3, r2
9000d834:	2203      	movs	r2, #3
9000d836:	4631      	mov	r1, r6
9000d838:	9200      	str	r2, [sp, #0]
9000d83a:	4632      	mov	r2, r6
9000d83c:	f000 fc9a 	bl	9000e174 <xQueueGenericCreateStatic>
9000d840:	4605      	mov	r5, r0
9000d842:	e7e6      	b.n	9000d812 <osSemaphoreNew+0x66>

9000d844 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000d844:	b360      	cbz	r0, 9000d8a0 <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000d846:	b510      	push	{r4, lr}
9000d848:	460c      	mov	r4, r1
9000d84a:	b082      	sub	sp, #8
9000d84c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000d850:	b1b3      	cbz	r3, 9000d880 <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000d852:	bb11      	cbnz	r1, 9000d89a <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000d854:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d856:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000d858:	f001 fb30 	bl	9000eebc <xQueueReceiveFromISR>
9000d85c:	2801      	cmp	r0, #1
9000d85e:	d118      	bne.n	9000d892 <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d860:	9b01      	ldr	r3, [sp, #4]
9000d862:	b913      	cbnz	r3, 9000d86a <osSemaphoreAcquire+0x26>
  stat = osOK;
9000d864:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d866:	b002      	add	sp, #8
9000d868:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000d86a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d86e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d872:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d876:	f3bf 8f4f 	dsb	sy
9000d87a:	f3bf 8f6f 	isb	sy
9000d87e:	e7f1      	b.n	9000d864 <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000d880:	f001 f990 	bl	9000eba4 <xQueueSemaphoreTake>
9000d884:	2801      	cmp	r0, #1
9000d886:	d0ed      	beq.n	9000d864 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000d888:	b11c      	cbz	r4, 9000d892 <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000d88a:	f06f 0001 	mvn.w	r0, #1
}
9000d88e:	b002      	add	sp, #8
9000d890:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000d892:	f06f 0002 	mvn.w	r0, #2
}
9000d896:	b002      	add	sp, #8
9000d898:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000d89a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000d89e:	e7e2      	b.n	9000d866 <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000d8a0:	f06f 0003 	mvn.w	r0, #3
}
9000d8a4:	4770      	bx	lr
9000d8a6:	bf00      	nop

9000d8a8 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000d8a8:	b328      	cbz	r0, 9000d8f6 <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000d8aa:	b500      	push	{lr}
9000d8ac:	b083      	sub	sp, #12
9000d8ae:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000d8b2:	b19b      	cbz	r3, 9000d8dc <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000d8b4:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000d8b6:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000d8b8:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000d8ba:	f000 ff97 	bl	9000e7ec <xQueueGiveFromISR>
9000d8be:	2801      	cmp	r0, #1
9000d8c0:	d116      	bne.n	9000d8f0 <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000d8c2:	9b01      	ldr	r3, [sp, #4]
9000d8c4:	b183      	cbz	r3, 9000d8e8 <osSemaphoreRelease+0x40>
9000d8c6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d8ca:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d8ce:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d8d2:	f3bf 8f4f 	dsb	sy
9000d8d6:	f3bf 8f6f 	isb	sy
9000d8da:	e005      	b.n	9000d8e8 <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d8dc:	461a      	mov	r2, r3
9000d8de:	4619      	mov	r1, r3
9000d8e0:	f000 fd9c 	bl	9000e41c <xQueueGenericSend>
9000d8e4:	2801      	cmp	r0, #1
9000d8e6:	d103      	bne.n	9000d8f0 <osSemaphoreRelease+0x48>
  stat = osOK;
9000d8e8:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000d8ea:	b003      	add	sp, #12
9000d8ec:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000d8f0:	f06f 0002 	mvn.w	r0, #2
9000d8f4:	e7f9      	b.n	9000d8ea <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000d8f6:	f06f 0003 	mvn.w	r0, #3
}
9000d8fa:	4770      	bx	lr

9000d8fc <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000d8fc:	b5f0      	push	{r4, r5, r6, r7, lr}
9000d8fe:	b083      	sub	sp, #12
9000d900:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000d904:	b987      	cbnz	r7, 9000d928 <osMessageQueueNew+0x2c>
9000d906:	4605      	mov	r5, r0
9000d908:	b170      	cbz	r0, 9000d928 <osMessageQueueNew+0x2c>
9000d90a:	b169      	cbz	r1, 9000d928 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000d90c:	4614      	mov	r4, r2
9000d90e:	b17a      	cbz	r2, 9000d930 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000d910:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000d914:	b1c3      	cbz	r3, 9000d948 <osMessageQueueNew+0x4c>
9000d916:	2a4f      	cmp	r2, #79	@ 0x4f
9000d918:	d906      	bls.n	9000d928 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000d91a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000d91c:	b122      	cbz	r2, 9000d928 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000d91e:	fb01 f505 	mul.w	r5, r1, r5
9000d922:	6966      	ldr	r6, [r4, #20]
9000d924:	42ae      	cmp	r6, r5
9000d926:	d21e      	bcs.n	9000d966 <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000d928:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000d92a:	4628      	mov	r0, r5
9000d92c:	b003      	add	sp, #12
9000d92e:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000d930:	f000 fc8c 	bl	9000e24c <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d934:	4605      	mov	r5, r0
9000d936:	2800      	cmp	r0, #0
9000d938:	d0f6      	beq.n	9000d928 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000d93a:	4628      	mov	r0, r5
9000d93c:	4621      	mov	r1, r4
9000d93e:	f001 fb61 	bl	9000f004 <vQueueAddToRegistry>
}
9000d942:	4628      	mov	r0, r5
9000d944:	b003      	add	sp, #12
9000d946:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000d948:	2a00      	cmp	r2, #0
9000d94a:	d1ed      	bne.n	9000d928 <osMessageQueueNew+0x2c>
9000d94c:	6923      	ldr	r3, [r4, #16]
9000d94e:	2b00      	cmp	r3, #0
9000d950:	d1ea      	bne.n	9000d928 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000d952:	6962      	ldr	r2, [r4, #20]
9000d954:	2a00      	cmp	r2, #0
9000d956:	d1e7      	bne.n	9000d928 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000d958:	f000 fc78 	bl	9000e24c <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d95c:	4605      	mov	r5, r0
9000d95e:	2800      	cmp	r0, #0
9000d960:	d0e2      	beq.n	9000d928 <osMessageQueueNew+0x2c>
        name = attr->name;
9000d962:	6824      	ldr	r4, [r4, #0]
9000d964:	e7e9      	b.n	9000d93a <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000d966:	9700      	str	r7, [sp, #0]
9000d968:	f000 fc04 	bl	9000e174 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000d96c:	4605      	mov	r5, r0
9000d96e:	2800      	cmp	r0, #0
9000d970:	d1f7      	bne.n	9000d962 <osMessageQueueNew+0x66>
9000d972:	e7d9      	b.n	9000d928 <osMessageQueueNew+0x2c>

9000d974 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000d974:	b560      	push	{r5, r6, lr}
9000d976:	461e      	mov	r6, r3
9000d978:	b083      	sub	sp, #12
9000d97a:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d97e:	fab0 f580 	clz	r5, r0
9000d982:	fab1 f381 	clz	r3, r1
9000d986:	096d      	lsrs	r5, r5, #5
9000d988:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000d98a:	b1da      	cbz	r2, 9000d9c4 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d98c:	2e00      	cmp	r6, #0
9000d98e:	bf18      	it	ne
9000d990:	f043 0301 	orrne.w	r3, r3, #1
9000d994:	bb33      	cbnz	r3, 9000d9e4 <osMessageQueuePut+0x70>
9000d996:	bb2d      	cbnz	r5, 9000d9e4 <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d998:	462b      	mov	r3, r5
9000d99a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d99c:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d99e:	f000 febf 	bl	9000e720 <xQueueGenericSendFromISR>
9000d9a2:	2801      	cmp	r0, #1
9000d9a4:	d11a      	bne.n	9000d9dc <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d9a6:	9b01      	ldr	r3, [sp, #4]
9000d9a8:	b14b      	cbz	r3, 9000d9be <osMessageQueuePut+0x4a>
9000d9aa:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d9ae:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d9b2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d9b6:	f3bf 8f4f 	dsb	sy
9000d9ba:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d9be:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d9c0:	b003      	add	sp, #12
9000d9c2:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d9c4:	b975      	cbnz	r5, 9000d9e4 <osMessageQueuePut+0x70>
9000d9c6:	b96b      	cbnz	r3, 9000d9e4 <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d9c8:	4632      	mov	r2, r6
9000d9ca:	f000 fd27 	bl	9000e41c <xQueueGenericSend>
9000d9ce:	2801      	cmp	r0, #1
9000d9d0:	d0f5      	beq.n	9000d9be <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000d9d2:	b11e      	cbz	r6, 9000d9dc <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000d9d4:	f06f 0001 	mvn.w	r0, #1
}
9000d9d8:	b003      	add	sp, #12
9000d9da:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000d9dc:	f06f 0002 	mvn.w	r0, #2
}
9000d9e0:	b003      	add	sp, #12
9000d9e2:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000d9e4:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000d9e8:	e7ea      	b.n	9000d9c0 <osMessageQueuePut+0x4c>
9000d9ea:	bf00      	nop

9000d9ec <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000d9ec:	b570      	push	{r4, r5, r6, lr}
9000d9ee:	461e      	mov	r6, r3
9000d9f0:	b082      	sub	sp, #8
9000d9f2:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d9f6:	fab0 f580 	clz	r5, r0
9000d9fa:	fab1 f481 	clz	r4, r1
9000d9fe:	096d      	lsrs	r5, r5, #5
9000da00:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000da02:	b1d3      	cbz	r3, 9000da3a <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000da04:	2e00      	cmp	r6, #0
9000da06:	bf18      	it	ne
9000da08:	f044 0401 	orrne.w	r4, r4, #1
9000da0c:	bb2c      	cbnz	r4, 9000da5a <osMessageQueueGet+0x6e>
9000da0e:	bb25      	cbnz	r5, 9000da5a <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000da10:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000da12:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000da14:	f001 fa52 	bl	9000eebc <xQueueReceiveFromISR>
9000da18:	2801      	cmp	r0, #1
9000da1a:	d11a      	bne.n	9000da52 <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000da1c:	9b01      	ldr	r3, [sp, #4]
9000da1e:	b14b      	cbz	r3, 9000da34 <osMessageQueueGet+0x48>
9000da20:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000da24:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000da28:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000da2c:	f3bf 8f4f 	dsb	sy
9000da30:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000da34:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000da36:	b002      	add	sp, #8
9000da38:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000da3a:	b975      	cbnz	r5, 9000da5a <osMessageQueueGet+0x6e>
9000da3c:	b96c      	cbnz	r4, 9000da5a <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000da3e:	4632      	mov	r2, r6
9000da40:	f000 ff2a 	bl	9000e898 <xQueueReceive>
9000da44:	2801      	cmp	r0, #1
9000da46:	d0f5      	beq.n	9000da34 <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000da48:	b11e      	cbz	r6, 9000da52 <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000da4a:	f06f 0001 	mvn.w	r0, #1
}
9000da4e:	b002      	add	sp, #8
9000da50:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000da52:	f06f 0002 	mvn.w	r0, #2
}
9000da56:	b002      	add	sp, #8
9000da58:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000da5a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000da5e:	e7ea      	b.n	9000da36 <osMessageQueueGet+0x4a>

9000da60 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000da60:	4b04      	ldr	r3, [pc, #16]	@ (9000da74 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000da62:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000da64:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000da66:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000da68:	4c03      	ldr	r4, [pc, #12]	@ (9000da78 <vApplicationGetIdleTaskMemory+0x18>)
9000da6a:	600c      	str	r4, [r1, #0]
}
9000da6c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000da70:	6013      	str	r3, [r2, #0]
}
9000da72:	4770      	bx	lr
9000da74:	2400a634 	.word	0x2400a634
9000da78:	2400a434 	.word	0x2400a434

9000da7c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000da7c:	4b05      	ldr	r3, [pc, #20]	@ (9000da94 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000da7e:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000da80:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000da82:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000da86:	4c04      	ldr	r4, [pc, #16]	@ (9000da98 <vApplicationGetTimerTaskMemory+0x1c>)
9000da88:	600c      	str	r4, [r1, #0]
}
9000da8a:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000da8e:	6013      	str	r3, [r2, #0]
}
9000da90:	4770      	bx	lr
9000da92:	bf00      	nop
9000da94:	2400a3d4 	.word	0x2400a3d4
9000da98:	24009fd4 	.word	0x24009fd4

9000da9c <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000da9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000daa0:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000daa2:	f001 ff83 	bl	9000f9ac <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000daa6:	4a53      	ldr	r2, [pc, #332]	@ (9000dbf4 <pvPortMalloc+0x158>)
9000daa8:	6815      	ldr	r5, [r2, #0]
9000daaa:	2d00      	cmp	r5, #0
9000daac:	d035      	beq.n	9000db1a <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000daae:	4b52      	ldr	r3, [pc, #328]	@ (9000dbf8 <pvPortMalloc+0x15c>)
9000dab0:	681e      	ldr	r6, [r3, #0]
9000dab2:	4234      	tst	r4, r6
9000dab4:	d12b      	bne.n	9000db0e <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000dab6:	b354      	cbz	r4, 9000db0e <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000dab8:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000dabc:	0764      	lsls	r4, r4, #29
9000dabe:	d002      	beq.n	9000dac6 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000dac0:	f020 0007 	bic.w	r0, r0, #7
9000dac4:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000dac6:	b310      	cbz	r0, 9000db0e <pvPortMalloc+0x72>
9000dac8:	f8df e140 	ldr.w	lr, [pc, #320]	@ 9000dc0c <pvPortMalloc+0x170>
9000dacc:	f8de c000 	ldr.w	ip, [lr]
9000dad0:	4584      	cmp	ip, r0
9000dad2:	d31c      	bcc.n	9000db0e <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000dad4:	4c49      	ldr	r4, [pc, #292]	@ (9000dbfc <pvPortMalloc+0x160>)
9000dad6:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000dad8:	e003      	b.n	9000dae2 <pvPortMalloc+0x46>
9000dada:	681a      	ldr	r2, [r3, #0]
9000dadc:	b122      	cbz	r2, 9000dae8 <pvPortMalloc+0x4c>
9000dade:	461c      	mov	r4, r3
9000dae0:	4613      	mov	r3, r2
9000dae2:	6859      	ldr	r1, [r3, #4]
9000dae4:	4281      	cmp	r1, r0
9000dae6:	d3f8      	bcc.n	9000dada <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000dae8:	42ab      	cmp	r3, r5
9000daea:	d010      	beq.n	9000db0e <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000daec:	681a      	ldr	r2, [r3, #0]
9000daee:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000daf0:	1a0a      	subs	r2, r1, r0
9000daf2:	2a10      	cmp	r2, #16
9000daf4:	d947      	bls.n	9000db86 <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000daf6:	181c      	adds	r4, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000daf8:	0761      	lsls	r1, r4, #29
9000dafa:	d02d      	beq.n	9000db58 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000dafc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000db00:	f383 8811 	msr	BASEPRI, r3
9000db04:	f3bf 8f6f 	isb	sy
9000db08:	f3bf 8f4f 	dsb	sy
9000db0c:	e7fe      	b.n	9000db0c <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000db0e:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000db10:	f001 ff54 	bl	9000f9bc <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000db14:	4620      	mov	r0, r4
9000db16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000db1a:	4b39      	ldr	r3, [pc, #228]	@ (9000dc00 <pvPortMalloc+0x164>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000db1c:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000db20:	4e36      	ldr	r6, [pc, #216]	@ (9000dbfc <pvPortMalloc+0x160>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000db22:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000db24:	4d37      	ldr	r5, [pc, #220]	@ (9000dc04 <pvPortMalloc+0x168>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000db26:	bf18      	it	ne
9000db28:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000db2a:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000db2e:	bf18      	it	ne
9000db30:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000db34:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000db36:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000db38:	6033      	str	r3, [r6, #0]
9000db3a:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000db3c:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000db3e:	1aeb      	subs	r3, r5, r3
}
9000db40:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000db42:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000db46:	4a30      	ldr	r2, [pc, #192]	@ (9000dc08 <pvPortMalloc+0x16c>)
9000db48:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000db4a:	4a30      	ldr	r2, [pc, #192]	@ (9000dc0c <pvPortMalloc+0x170>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000db4c:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000db50:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000db52:	4b29      	ldr	r3, [pc, #164]	@ (9000dbf8 <pvPortMalloc+0x15c>)
9000db54:	6018      	str	r0, [r3, #0]
}
9000db56:	e7ac      	b.n	9000dab2 <pvPortMalloc+0x16>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000db58:	6062      	str	r2, [r4, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000db5a:	4a28      	ldr	r2, [pc, #160]	@ (9000dbfc <pvPortMalloc+0x160>)
						pxBlock->xBlockSize = xWantedSize;
9000db5c:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000db5e:	4617      	mov	r7, r2
9000db60:	6812      	ldr	r2, [r2, #0]
9000db62:	4294      	cmp	r4, r2
9000db64:	d8fb      	bhi.n	9000db5e <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000db66:	6879      	ldr	r1, [r7, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000db68:	f8d4 8004 	ldr.w	r8, [r4, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000db6c:	eb07 0901 	add.w	r9, r7, r1
9000db70:	454c      	cmp	r4, r9
9000db72:	d028      	beq.n	9000dbc6 <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000db74:	eb04 0108 	add.w	r1, r4, r8
9000db78:	428a      	cmp	r2, r1
9000db7a:	d02e      	beq.n	9000dbda <pvPortMalloc+0x13e>
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
		}
	}
	else
	{
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000db7c:	4601      	mov	r1, r0
9000db7e:	6022      	str	r2, [r4, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000db80:	42a7      	cmp	r7, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000db82:	bf18      	it	ne
9000db84:	603c      	strne	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000db86:	4820      	ldr	r0, [pc, #128]	@ (9000dc08 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000db88:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->pxNextFreeBlock = NULL;
9000db8c:	2500      	movs	r5, #0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000db8e:	4331      	orrs	r1, r6
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000db90:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000db92:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000db96:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000db98:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000db9c:	6059      	str	r1, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000db9e:	bf38      	it	cc
9000dba0:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000dba2:	481b      	ldr	r0, [pc, #108]	@ (9000dc10 <pvPortMalloc+0x174>)
					pxBlock->pxNextFreeBlock = NULL;
9000dba4:	601d      	str	r5, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000dba6:	6802      	ldr	r2, [r0, #0]
9000dba8:	3201      	adds	r2, #1
9000dbaa:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000dbac:	f001 ff06 	bl	9000f9bc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000dbb0:	0763      	lsls	r3, r4, #29
9000dbb2:	d0af      	beq.n	9000db14 <pvPortMalloc+0x78>
9000dbb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dbb8:	f383 8811 	msr	BASEPRI, r3
9000dbbc:	f3bf 8f6f 	isb	sy
9000dbc0:	f3bf 8f4f 	dsb	sy
9000dbc4:	e7fe      	b.n	9000dbc4 <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000dbc6:	4488      	add	r8, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000dbc8:	eb07 0108 	add.w	r1, r7, r8
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000dbcc:	f8c7 8004 	str.w	r8, [r7, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000dbd0:	428a      	cmp	r2, r1
9000dbd2:	d001      	beq.n	9000dbd8 <pvPortMalloc+0x13c>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000dbd4:	6859      	ldr	r1, [r3, #4]
9000dbd6:	e7d6      	b.n	9000db86 <pvPortMalloc+0xea>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000dbd8:	463c      	mov	r4, r7
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000dbda:	42aa      	cmp	r2, r5
9000dbdc:	d006      	beq.n	9000dbec <pvPortMalloc+0x150>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000dbde:	6851      	ldr	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000dbe0:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000dbe2:	4441      	add	r1, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000dbe4:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000dbe6:	6061      	str	r1, [r4, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000dbe8:	6859      	ldr	r1, [r3, #4]
9000dbea:	e7c9      	b.n	9000db80 <pvPortMalloc+0xe4>
9000dbec:	6859      	ldr	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000dbee:	6022      	str	r2, [r4, #0]
9000dbf0:	e7c6      	b.n	9000db80 <pvPortMalloc+0xe4>
9000dbf2:	bf00      	nop
9000dbf4:	2400a6ac 	.word	0x2400a6ac
9000dbf8:	2400a698 	.word	0x2400a698
9000dbfc:	2400a6b0 	.word	0x2400a6b0
9000dc00:	2400a6b8 	.word	0x2400a6b8
9000dc04:	24022d50 	.word	0x24022d50
9000dc08:	2400a6a4 	.word	0x2400a6a4
9000dc0c:	2400a6a8 	.word	0x2400a6a8
9000dc10:	2400a6a0 	.word	0x2400a6a0

9000dc14 <vPortFree>:
	if( pv != NULL )
9000dc14:	b1d0      	cbz	r0, 9000dc4c <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000dc16:	4a2d      	ldr	r2, [pc, #180]	@ (9000dccc <vPortFree+0xb8>)
9000dc18:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000dc1c:	6812      	ldr	r2, [r2, #0]
9000dc1e:	4213      	tst	r3, r2
9000dc20:	d00b      	beq.n	9000dc3a <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000dc22:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000dc26:	b191      	cbz	r1, 9000dc4e <vPortFree+0x3a>
9000dc28:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dc2c:	f383 8811 	msr	BASEPRI, r3
9000dc30:	f3bf 8f6f 	isb	sy
9000dc34:	f3bf 8f4f 	dsb	sy
9000dc38:	e7fe      	b.n	9000dc38 <vPortFree+0x24>
9000dc3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dc3e:	f383 8811 	msr	BASEPRI, r3
9000dc42:	f3bf 8f6f 	isb	sy
9000dc46:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000dc4a:	e7fe      	b.n	9000dc4a <vPortFree+0x36>
9000dc4c:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000dc4e:	ea23 0302 	bic.w	r3, r3, r2
{
9000dc52:	b530      	push	{r4, r5, lr}
9000dc54:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000dc56:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000dc5a:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000dc5e:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000dc60:	f001 fea4 	bl	9000f9ac <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000dc64:	4a1a      	ldr	r2, [pc, #104]	@ (9000dcd0 <vPortFree+0xbc>)
9000dc66:	9801      	ldr	r0, [sp, #4]
9000dc68:	6813      	ldr	r3, [r2, #0]
9000dc6a:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000dc6e:	440b      	add	r3, r1
9000dc70:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000dc72:	4b18      	ldr	r3, [pc, #96]	@ (9000dcd4 <vPortFree+0xc0>)
9000dc74:	461a      	mov	r2, r3
9000dc76:	681b      	ldr	r3, [r3, #0]
9000dc78:	429c      	cmp	r4, r3
9000dc7a:	d8fb      	bhi.n	9000dc74 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000dc7c:	6855      	ldr	r5, [r2, #4]
9000dc7e:	eb02 0e05 	add.w	lr, r2, r5
9000dc82:	4574      	cmp	r4, lr
9000dc84:	d011      	beq.n	9000dcaa <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000dc86:	eb04 0c01 	add.w	ip, r4, r1
9000dc8a:	4563      	cmp	r3, ip
9000dc8c:	d013      	beq.n	9000dcb6 <vPortFree+0xa2>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000dc8e:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000dc92:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000dc94:	bf18      	it	ne
9000dc96:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000dc98:	4a0f      	ldr	r2, [pc, #60]	@ (9000dcd8 <vPortFree+0xc4>)
9000dc9a:	6813      	ldr	r3, [r2, #0]
9000dc9c:	3301      	adds	r3, #1
9000dc9e:	6013      	str	r3, [r2, #0]
}
9000dca0:	b003      	add	sp, #12
9000dca2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000dca6:	f001 be89 	b.w	9000f9bc <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000dcaa:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000dcac:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000dcae:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000dcb0:	4283      	cmp	r3, r0
9000dcb2:	d1f1      	bne.n	9000dc98 <vPortFree+0x84>
9000dcb4:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000dcb6:	4809      	ldr	r0, [pc, #36]	@ (9000dcdc <vPortFree+0xc8>)
9000dcb8:	6800      	ldr	r0, [r0, #0]
9000dcba:	4283      	cmp	r3, r0
9000dcbc:	d003      	beq.n	9000dcc6 <vPortFree+0xb2>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000dcbe:	e9d3 0500 	ldrd	r0, r5, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000dcc2:	4429      	add	r1, r5
9000dcc4:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000dcc6:	6020      	str	r0, [r4, #0]
9000dcc8:	e7e3      	b.n	9000dc92 <vPortFree+0x7e>
9000dcca:	bf00      	nop
9000dccc:	2400a698 	.word	0x2400a698
9000dcd0:	2400a6a8 	.word	0x2400a6a8
9000dcd4:	2400a6b0 	.word	0x2400a6b0
9000dcd8:	2400a69c 	.word	0x2400a69c
9000dcdc:	2400a6ac 	.word	0x2400a6ac

9000dce0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000dce0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000dce4:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000dce8:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000dcea:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000dcec:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000dcee:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000dcf0:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000dcf4:	4770      	bx	lr
9000dcf6:	bf00      	nop

9000dcf8 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000dcf8:	2300      	movs	r3, #0
9000dcfa:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000dcfc:	4770      	bx	lr
9000dcfe:	bf00      	nop

9000dd00 <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000dd00:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000dd02:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000dd04:	3301      	adds	r3, #1
{
9000dd06:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000dd08:	6894      	ldr	r4, [r2, #8]
9000dd0a:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000dd0e:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000dd10:	6091      	str	r1, [r2, #8]
}
9000dd12:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000dd16:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000dd18:	6003      	str	r3, [r0, #0]
}
9000dd1a:	4770      	bx	lr

9000dd1c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000dd1c:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000dd1e:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000dd20:	1c6b      	adds	r3, r5, #1
9000dd22:	d010      	beq.n	9000dd46 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000dd24:	f100 0308 	add.w	r3, r0, #8
9000dd28:	461c      	mov	r4, r3
9000dd2a:	685b      	ldr	r3, [r3, #4]
9000dd2c:	681a      	ldr	r2, [r3, #0]
9000dd2e:	42aa      	cmp	r2, r5
9000dd30:	d9fa      	bls.n	9000dd28 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000dd32:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000dd34:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000dd36:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000dd38:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000dd3a:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000dd3c:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000dd3e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000dd40:	6002      	str	r2, [r0, #0]
}
9000dd42:	bc30      	pop	{r4, r5}
9000dd44:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000dd46:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000dd48:	6863      	ldr	r3, [r4, #4]
9000dd4a:	e7f2      	b.n	9000dd32 <vListInsert+0x16>

9000dd4c <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000dd4c:	6903      	ldr	r3, [r0, #16]
{
9000dd4e:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000dd50:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000dd52:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000dd56:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000dd58:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000dd5c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000dd5e:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000dd60:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000dd64:	bf08      	it	eq
9000dd66:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000dd68:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000dd6a:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000dd6c:	3a01      	subs	r2, #1
9000dd6e:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000dd70:	6818      	ldr	r0, [r3, #0]
}
9000dd72:	4770      	bx	lr

9000dd74 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000dd74:	4808      	ldr	r0, [pc, #32]	@ (9000dd98 <prvPortStartFirstTask+0x24>)
9000dd76:	6800      	ldr	r0, [r0, #0]
9000dd78:	6800      	ldr	r0, [r0, #0]
9000dd7a:	f380 8808 	msr	MSP, r0
9000dd7e:	f04f 0000 	mov.w	r0, #0
9000dd82:	f380 8814 	msr	CONTROL, r0
9000dd86:	b662      	cpsie	i
9000dd88:	b661      	cpsie	f
9000dd8a:	f3bf 8f4f 	dsb	sy
9000dd8e:	f3bf 8f6f 	isb	sy
9000dd92:	df00      	svc	0
9000dd94:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000dd96:	0000      	.short	0x0000
9000dd98:	e000ed08 	.word	0xe000ed08

9000dd9c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000dd9c:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000ddac <vPortEnableVFP+0x10>
9000dda0:	6801      	ldr	r1, [r0, #0]
9000dda2:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000dda6:	6001      	str	r1, [r0, #0]
9000dda8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000ddaa:	0000      	.short	0x0000
9000ddac:	e000ed88 	.word	0xe000ed88

9000ddb0 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000ddb0:	4b0e      	ldr	r3, [pc, #56]	@ (9000ddec <prvTaskExitError+0x3c>)
{
9000ddb2:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000ddb4:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000ddb6:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000ddb8:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000ddba:	3301      	adds	r3, #1
9000ddbc:	d008      	beq.n	9000ddd0 <prvTaskExitError+0x20>
9000ddbe:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ddc2:	f383 8811 	msr	BASEPRI, r3
9000ddc6:	f3bf 8f6f 	isb	sy
9000ddca:	f3bf 8f4f 	dsb	sy
9000ddce:	e7fe      	b.n	9000ddce <prvTaskExitError+0x1e>
9000ddd0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ddd4:	f383 8811 	msr	BASEPRI, r3
9000ddd8:	f3bf 8f6f 	isb	sy
9000dddc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000dde0:	9b01      	ldr	r3, [sp, #4]
9000dde2:	2b00      	cmp	r3, #0
9000dde4:	d0fc      	beq.n	9000dde0 <prvTaskExitError+0x30>
}
9000dde6:	b002      	add	sp, #8
9000dde8:	4770      	bx	lr
9000ddea:	bf00      	nop
9000ddec:	240000a4 	.word	0x240000a4

9000ddf0 <pxPortInitialiseStack>:
{
9000ddf0:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000ddf2:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000ddf6:	4809      	ldr	r0, [pc, #36]	@ (9000de1c <pxPortInitialiseStack+0x2c>)
{
9000ddf8:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000ddfa:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000ddfe:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000de02:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000de06:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000de0a:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000de0e:	f06f 0102 	mvn.w	r1, #2
}
9000de12:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000de16:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000de1a:	4770      	bx	lr
9000de1c:	9000ddb1 	.word	0x9000ddb1

9000de20 <SVC_Handler>:
	__asm volatile (
9000de20:	4b07      	ldr	r3, [pc, #28]	@ (9000de40 <pxCurrentTCBConst2>)
9000de22:	6819      	ldr	r1, [r3, #0]
9000de24:	6808      	ldr	r0, [r1, #0]
9000de26:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000de2a:	f380 8809 	msr	PSP, r0
9000de2e:	f3bf 8f6f 	isb	sy
9000de32:	f04f 0000 	mov.w	r0, #0
9000de36:	f380 8811 	msr	BASEPRI, r0
9000de3a:	4770      	bx	lr
9000de3c:	f3af 8000 	nop.w

9000de40 <pxCurrentTCBConst2>:
9000de40:	24023298 	.word	0x24023298

9000de44 <vPortEnterCritical>:
9000de44:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000de48:	f383 8811 	msr	BASEPRI, r3
9000de4c:	f3bf 8f6f 	isb	sy
9000de50:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000de54:	4a0b      	ldr	r2, [pc, #44]	@ (9000de84 <vPortEnterCritical+0x40>)
9000de56:	6813      	ldr	r3, [r2, #0]
9000de58:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000de5a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000de5c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000de5e:	d000      	beq.n	9000de62 <vPortEnterCritical+0x1e>
}
9000de60:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000de62:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000de66:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000de6a:	b2db      	uxtb	r3, r3
9000de6c:	2b00      	cmp	r3, #0
9000de6e:	d0f7      	beq.n	9000de60 <vPortEnterCritical+0x1c>
9000de70:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000de74:	f383 8811 	msr	BASEPRI, r3
9000de78:	f3bf 8f6f 	isb	sy
9000de7c:	f3bf 8f4f 	dsb	sy
9000de80:	e7fe      	b.n	9000de80 <vPortEnterCritical+0x3c>
9000de82:	bf00      	nop
9000de84:	240000a4 	.word	0x240000a4

9000de88 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000de88:	4a08      	ldr	r2, [pc, #32]	@ (9000deac <vPortExitCritical+0x24>)
9000de8a:	6813      	ldr	r3, [r2, #0]
9000de8c:	b943      	cbnz	r3, 9000dea0 <vPortExitCritical+0x18>
9000de8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000de92:	f383 8811 	msr	BASEPRI, r3
9000de96:	f3bf 8f6f 	isb	sy
9000de9a:	f3bf 8f4f 	dsb	sy
9000de9e:	e7fe      	b.n	9000de9e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000dea0:	3b01      	subs	r3, #1
9000dea2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000dea4:	b90b      	cbnz	r3, 9000deaa <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000dea6:	f383 8811 	msr	BASEPRI, r3
}
9000deaa:	4770      	bx	lr
9000deac:	240000a4 	.word	0x240000a4

9000deb0 <PendSV_Handler>:
	__asm volatile
9000deb0:	f3ef 8009 	mrs	r0, PSP
9000deb4:	f3bf 8f6f 	isb	sy
9000deb8:	4b15      	ldr	r3, [pc, #84]	@ (9000df10 <pxCurrentTCBConst>)
9000deba:	681a      	ldr	r2, [r3, #0]
9000debc:	f01e 0f10 	tst.w	lr, #16
9000dec0:	bf08      	it	eq
9000dec2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000dec6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000deca:	6010      	str	r0, [r2, #0]
9000decc:	e92d 0009 	stmdb	sp!, {r0, r3}
9000ded0:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000ded4:	f380 8811 	msr	BASEPRI, r0
9000ded8:	f3bf 8f4f 	dsb	sy
9000dedc:	f3bf 8f6f 	isb	sy
9000dee0:	f001 fda8 	bl	9000fa34 <vTaskSwitchContext>
9000dee4:	f04f 0000 	mov.w	r0, #0
9000dee8:	f380 8811 	msr	BASEPRI, r0
9000deec:	bc09      	pop	{r0, r3}
9000deee:	6819      	ldr	r1, [r3, #0]
9000def0:	6808      	ldr	r0, [r1, #0]
9000def2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000def6:	f01e 0f10 	tst.w	lr, #16
9000defa:	bf08      	it	eq
9000defc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000df00:	f380 8809 	msr	PSP, r0
9000df04:	f3bf 8f6f 	isb	sy
9000df08:	4770      	bx	lr
9000df0a:	bf00      	nop
9000df0c:	f3af 8000 	nop.w

9000df10 <pxCurrentTCBConst>:
9000df10:	24023298 	.word	0x24023298

9000df14 <xPortSysTickHandler>:
{
9000df14:	b508      	push	{r3, lr}
	__asm volatile
9000df16:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000df1a:	f383 8811 	msr	BASEPRI, r3
9000df1e:	f3bf 8f6f 	isb	sy
9000df22:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000df26:	f001 fd5f 	bl	9000f9e8 <xTaskIncrementTick>
9000df2a:	b128      	cbz	r0, 9000df38 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000df2c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000df30:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000df34:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000df38:	2300      	movs	r3, #0
9000df3a:	f383 8811 	msr	BASEPRI, r3
}
9000df3e:	bd08      	pop	{r3, pc}

9000df40 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000df40:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000df44:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000df46:	4806      	ldr	r0, [pc, #24]	@ (9000df60 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000df48:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000df4a:	4906      	ldr	r1, [pc, #24]	@ (9000df64 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000df4c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000df4e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000df50:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000df52:	fba1 1303 	umull	r1, r3, r1, r3
9000df56:	099b      	lsrs	r3, r3, #6
9000df58:	3b01      	subs	r3, #1
9000df5a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000df5c:	6110      	str	r0, [r2, #16]
}
9000df5e:	4770      	bx	lr
9000df60:	24000098 	.word	0x24000098
9000df64:	10624dd3 	.word	0x10624dd3

9000df68 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000df68:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000df6c:	4a48      	ldr	r2, [pc, #288]	@ (9000e090 <xPortStartScheduler+0x128>)
9000df6e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
9000df72:	4291      	cmp	r1, r2
9000df74:	d041      	beq.n	9000dffa <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000df76:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9000df7a:	4b46      	ldr	r3, [pc, #280]	@ (9000e094 <xPortStartScheduler+0x12c>)
9000df7c:	429a      	cmp	r2, r3
9000df7e:	d033      	beq.n	9000dfe8 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000df80:	4b45      	ldr	r3, [pc, #276]	@ (9000e098 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000df82:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000df86:	4845      	ldr	r0, [pc, #276]	@ (9000e09c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000df88:	4945      	ldr	r1, [pc, #276]	@ (9000e0a0 <xPortStartScheduler+0x138>)
{
9000df8a:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000df8c:	781a      	ldrb	r2, [r3, #0]
{
9000df8e:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000df90:	b2d2      	uxtb	r2, r2
9000df92:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000df94:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000df96:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000df9a:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000df9c:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000df9e:	b2db      	uxtb	r3, r3
9000dfa0:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000dfa4:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000dfa8:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000dfac:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000dfb0:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000dfb2:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000dfb4:	d50f      	bpl.n	9000dfd6 <xPortStartScheduler+0x6e>
9000dfb6:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000dfb8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000dfbc:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000dfbe:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000dfc0:	005b      	lsls	r3, r3, #1
9000dfc2:	b2db      	uxtb	r3, r3
9000dfc4:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000dfc8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000dfcc:	061b      	lsls	r3, r3, #24
9000dfce:	d4f3      	bmi.n	9000dfb8 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000dfd0:	2903      	cmp	r1, #3
9000dfd2:	d01b      	beq.n	9000e00c <xPortStartScheduler+0xa4>
9000dfd4:	6001      	str	r1, [r0, #0]
	__asm volatile
9000dfd6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dfda:	f383 8811 	msr	BASEPRI, r3
9000dfde:	f3bf 8f6f 	isb	sy
9000dfe2:	f3bf 8f4f 	dsb	sy
9000dfe6:	e7fe      	b.n	9000dfe6 <xPortStartScheduler+0x7e>
9000dfe8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dfec:	f383 8811 	msr	BASEPRI, r3
9000dff0:	f3bf 8f6f 	isb	sy
9000dff4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000dff8:	e7fe      	b.n	9000dff8 <xPortStartScheduler+0x90>
9000dffa:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dffe:	f383 8811 	msr	BASEPRI, r3
9000e002:	f3bf 8f6f 	isb	sy
9000e006:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000e00a:	e7fe      	b.n	9000e00a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e00c:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000e00e:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000e012:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e016:	4a20      	ldr	r2, [pc, #128]	@ (9000e098 <xPortStartScheduler+0x130>)
9000e018:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000e01a:	4e22      	ldr	r6, [pc, #136]	@ (9000e0a4 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000e01c:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
9000e01e:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000e020:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000e022:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000e026:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
9000e02a:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000e02e:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000e032:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
9000e036:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
9000e03a:	f7ff ff81 	bl	9000df40 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000e03e:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
9000e040:	f7ff feac 	bl	9000dd9c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000e044:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
9000e048:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
9000e04c:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
9000e050:	f7ff fe90 	bl	9000dd74 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000e054:	f001 fcee 	bl	9000fa34 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000e058:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000e05a:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000e05c:	3301      	adds	r3, #1
9000e05e:	d008      	beq.n	9000e072 <xPortStartScheduler+0x10a>
9000e060:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e064:	f383 8811 	msr	BASEPRI, r3
9000e068:	f3bf 8f6f 	isb	sy
9000e06c:	f3bf 8f4f 	dsb	sy
9000e070:	e7fe      	b.n	9000e070 <xPortStartScheduler+0x108>
9000e072:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e076:	f383 8811 	msr	BASEPRI, r3
9000e07a:	f3bf 8f6f 	isb	sy
9000e07e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000e082:	9b03      	ldr	r3, [sp, #12]
9000e084:	2b00      	cmp	r3, #0
9000e086:	d0fc      	beq.n	9000e082 <xPortStartScheduler+0x11a>
}
9000e088:	2000      	movs	r0, #0
9000e08a:	b004      	add	sp, #16
9000e08c:	bd70      	pop	{r4, r5, r6, pc}
9000e08e:	bf00      	nop
9000e090:	410fc271 	.word	0x410fc271
9000e094:	410fc270 	.word	0x410fc270
9000e098:	e000e400 	.word	0xe000e400
9000e09c:	24022d58 	.word	0x24022d58
9000e0a0:	24022d5c 	.word	0x24022d5c
9000e0a4:	240000a4 	.word	0x240000a4

9000e0a8 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000e0a8:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000e0ac:	2b0f      	cmp	r3, #15
9000e0ae:	d90e      	bls.n	9000e0ce <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000e0b0:	4911      	ldr	r1, [pc, #68]	@ (9000e0f8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000e0b2:	4a12      	ldr	r2, [pc, #72]	@ (9000e0fc <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000e0b4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000e0b6:	7812      	ldrb	r2, [r2, #0]
9000e0b8:	429a      	cmp	r2, r3
9000e0ba:	d908      	bls.n	9000e0ce <vPortValidateInterruptPriority+0x26>
9000e0bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e0c0:	f383 8811 	msr	BASEPRI, r3
9000e0c4:	f3bf 8f6f 	isb	sy
9000e0c8:	f3bf 8f4f 	dsb	sy
9000e0cc:	e7fe      	b.n	9000e0cc <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000e0ce:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e0d2:	4a0b      	ldr	r2, [pc, #44]	@ (9000e100 <vPortValidateInterruptPriority+0x58>)
9000e0d4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
9000e0d8:	6812      	ldr	r2, [r2, #0]
9000e0da:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9000e0de:	4293      	cmp	r3, r2
9000e0e0:	d908      	bls.n	9000e0f4 <vPortValidateInterruptPriority+0x4c>
9000e0e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e0e6:	f383 8811 	msr	BASEPRI, r3
9000e0ea:	f3bf 8f6f 	isb	sy
9000e0ee:	f3bf 8f4f 	dsb	sy
9000e0f2:	e7fe      	b.n	9000e0f2 <vPortValidateInterruptPriority+0x4a>
	}
9000e0f4:	4770      	bx	lr
9000e0f6:	bf00      	nop
9000e0f8:	e000e3f0 	.word	0xe000e3f0
9000e0fc:	24022d5c 	.word	0x24022d5c
9000e100:	24022d58 	.word	0x24022d58

9000e104 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000e104:	b570      	push	{r4, r5, r6, lr}
9000e106:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000e108:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
9000e10a:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e10c:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000e10e:	b92a      	cbnz	r2, 9000e11c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e110:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e112:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e114:	b34e      	cbz	r6, 9000e16a <prvCopyDataToQueue+0x66>
BaseType_t xReturn = pdFALSE;
9000e116:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e118:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
9000e11a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000e11c:	b97e      	cbnz	r6, 9000e13e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e11e:	6840      	ldr	r0, [r0, #4]
9000e120:	f01c f897 	bl	9002a252 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e124:	6863      	ldr	r3, [r4, #4]
9000e126:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e128:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e12a:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e12c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e12e:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000e130:	bf24      	itt	cs
9000e132:	6823      	ldrcs	r3, [r4, #0]
9000e134:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e136:	3501      	adds	r5, #1
BaseType_t xReturn = pdFALSE;
9000e138:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e13a:	63a5      	str	r5, [r4, #56]	@ 0x38
}
9000e13c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000e13e:	68c0      	ldr	r0, [r0, #12]
9000e140:	f01c f887 	bl	9002a252 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000e144:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000e146:	68e3      	ldr	r3, [r4, #12]
9000e148:	4251      	negs	r1, r2
9000e14a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e14c:	6822      	ldr	r2, [r4, #0]
9000e14e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000e150:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000e152:	d202      	bcs.n	9000e15a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000e154:	68a3      	ldr	r3, [r4, #8]
9000e156:	440b      	add	r3, r1
9000e158:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000e15a:	2e02      	cmp	r6, #2
9000e15c:	d1eb      	bne.n	9000e136 <prvCopyDataToQueue+0x32>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e15e:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
9000e160:	f04f 0000 	mov.w	r0, #0
9000e164:	bf38      	it	cc
9000e166:	2501      	movcc	r5, #1
9000e168:	e7d6      	b.n	9000e118 <prvCopyDataToQueue+0x14>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000e16a:	6880      	ldr	r0, [r0, #8]
9000e16c:	f001 fe34 	bl	9000fdd8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000e170:	60a6      	str	r6, [r4, #8]
9000e172:	e7d1      	b.n	9000e118 <prvCopyDataToQueue+0x14>

9000e174 <xQueueGenericCreateStatic>:
	{
9000e174:	b530      	push	{r4, r5, lr}
9000e176:	b083      	sub	sp, #12
9000e178:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000e17c:	b940      	cbnz	r0, 9000e190 <xQueueGenericCreateStatic+0x1c>
9000e17e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e182:	f383 8811 	msr	BASEPRI, r3
9000e186:	f3bf 8f6f 	isb	sy
9000e18a:	f3bf 8f4f 	dsb	sy
9000e18e:	e7fe      	b.n	9000e18e <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000e190:	461c      	mov	r4, r3
9000e192:	b153      	cbz	r3, 9000e1aa <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000e194:	b30a      	cbz	r2, 9000e1da <xQueueGenericCreateStatic+0x66>
9000e196:	b989      	cbnz	r1, 9000e1bc <xQueueGenericCreateStatic+0x48>
9000e198:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e19c:	f383 8811 	msr	BASEPRI, r3
9000e1a0:	f3bf 8f6f 	isb	sy
9000e1a4:	f3bf 8f4f 	dsb	sy
9000e1a8:	e7fe      	b.n	9000e1a8 <xQueueGenericCreateStatic+0x34>
9000e1aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e1ae:	f383 8811 	msr	BASEPRI, r3
9000e1b2:	f3bf 8f6f 	isb	sy
9000e1b6:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000e1ba:	e7fe      	b.n	9000e1ba <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000e1bc:	b16a      	cbz	r2, 9000e1da <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000e1be:	2350      	movs	r3, #80	@ 0x50
9000e1c0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000e1c2:	9b01      	ldr	r3, [sp, #4]
9000e1c4:	2b50      	cmp	r3, #80	@ 0x50
9000e1c6:	d013      	beq.n	9000e1f0 <xQueueGenericCreateStatic+0x7c>
9000e1c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e1cc:	f383 8811 	msr	BASEPRI, r3
9000e1d0:	f3bf 8f6f 	isb	sy
9000e1d4:	f3bf 8f4f 	dsb	sy
9000e1d8:	e7fe      	b.n	9000e1d8 <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000e1da:	2900      	cmp	r1, #0
9000e1dc:	d0ef      	beq.n	9000e1be <xQueueGenericCreateStatic+0x4a>
9000e1de:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e1e2:	f383 8811 	msr	BASEPRI, r3
9000e1e6:	f3bf 8f6f 	isb	sy
9000e1ea:	f3bf 8f4f 	dsb	sy
9000e1ee:	e7fe      	b.n	9000e1ee <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000e1f0:	2900      	cmp	r1, #0
9000e1f2:	bf08      	it	eq
9000e1f4:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000e1f6:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e1f8:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
9000e1fa:	63e0      	str	r0, [r4, #60]	@ 0x3c
9000e1fc:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000e1fe:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e200:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
9000e204:	f7ff fe1e 	bl	9000de44 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e208:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e20a:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e20e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e210:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000e214:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e218:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e21a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e21c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e21e:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e220:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000e222:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e224:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e226:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000e228:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e22c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e230:	f7ff fd56 	bl	9000dce0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e234:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e238:	f7ff fd52 	bl	9000dce0 <vListInitialise>
	taskEXIT_CRITICAL();
9000e23c:	f7ff fe24 	bl	9000de88 <vPortExitCritical>
	}
9000e240:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000e242:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
9000e246:	b003      	add	sp, #12
9000e248:	bd30      	pop	{r4, r5, pc}
9000e24a:	bf00      	nop

9000e24c <xQueueGenericCreate>:
	{
9000e24c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000e24e:	b940      	cbnz	r0, 9000e262 <xQueueGenericCreate+0x16>
9000e250:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e254:	f383 8811 	msr	BASEPRI, r3
9000e258:	f3bf 8f6f 	isb	sy
9000e25c:	f3bf 8f4f 	dsb	sy
9000e260:	e7fe      	b.n	9000e260 <xQueueGenericCreate+0x14>
9000e262:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000e264:	fb01 f000 	mul.w	r0, r1, r0
9000e268:	460e      	mov	r6, r1
9000e26a:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000e26c:	3050      	adds	r0, #80	@ 0x50
9000e26e:	f7ff fc15 	bl	9000da9c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000e272:	4604      	mov	r4, r0
9000e274:	b340      	cbz	r0, 9000e2c8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000e276:	2300      	movs	r3, #0
9000e278:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000e27c:	b336      	cbz	r6, 9000e2cc <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e27e:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000e282:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000e284:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
9000e288:	f7ff fddc 	bl	9000de44 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e28c:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e28e:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e292:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e294:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000e298:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e29c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e29e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e2a0:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e2a2:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e2a4:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000e2a6:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e2a8:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e2aa:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000e2ac:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e2b0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e2b4:	f7ff fd14 	bl	9000dce0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e2b8:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e2bc:	f7ff fd10 	bl	9000dce0 <vListInitialise>
	taskEXIT_CRITICAL();
9000e2c0:	f7ff fde2 	bl	9000de88 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000e2c4:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
9000e2c8:	4620      	mov	r0, r4
9000e2ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000e2cc:	4603      	mov	r3, r0
9000e2ce:	e7d8      	b.n	9000e282 <xQueueGenericCreate+0x36>

9000e2d0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000e2d0:	b940      	cbnz	r0, 9000e2e4 <xQueueCreateCountingSemaphoreStatic+0x14>
9000e2d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e2d6:	f383 8811 	msr	BASEPRI, r3
9000e2da:	f3bf 8f6f 	isb	sy
9000e2de:	f3bf 8f4f 	dsb	sy
9000e2e2:	e7fe      	b.n	9000e2e2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000e2e4:	4288      	cmp	r0, r1
9000e2e6:	d208      	bcs.n	9000e2fa <xQueueCreateCountingSemaphoreStatic+0x2a>
9000e2e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e2ec:	f383 8811 	msr	BASEPRI, r3
9000e2f0:	f3bf 8f6f 	isb	sy
9000e2f4:	f3bf 8f4f 	dsb	sy
9000e2f8:	e7fe      	b.n	9000e2f8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000e2fa:	b530      	push	{r4, r5, lr}
9000e2fc:	4614      	mov	r4, r2
9000e2fe:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000e300:	2a00      	cmp	r2, #0
9000e302:	d03b      	beq.n	9000e37c <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000e304:	2350      	movs	r3, #80	@ 0x50
9000e306:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000e308:	9b03      	ldr	r3, [sp, #12]
9000e30a:	2b50      	cmp	r3, #80	@ 0x50
9000e30c:	d008      	beq.n	9000e320 <xQueueCreateCountingSemaphoreStatic+0x50>
9000e30e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e312:	f383 8811 	msr	BASEPRI, r3
9000e316:	f3bf 8f6f 	isb	sy
9000e31a:	f3bf 8f4f 	dsb	sy
9000e31e:	e7fe      	b.n	9000e31e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000e320:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e322:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000e324:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000e326:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e328:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000e32c:	6415      	str	r5, [r2, #64]	@ 0x40
9000e32e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000e330:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000e332:	f7ff fd87 	bl	9000de44 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e336:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e338:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e33a:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e33c:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
9000e340:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e344:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e346:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e348:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e34a:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000e34c:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e34e:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e352:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000e354:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e358:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e35c:	f7ff fcc0 	bl	9000dce0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e360:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e364:	f7ff fcbc 	bl	9000dce0 <vListInitialise>
	taskEXIT_CRITICAL();
9000e368:	f7ff fd8e 	bl	9000de88 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000e36c:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000e36e:	9901      	ldr	r1, [sp, #4]
	}
9000e370:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000e372:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000e376:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
9000e378:	b005      	add	sp, #20
9000e37a:	bd30      	pop	{r4, r5, pc}
9000e37c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e380:	f383 8811 	msr	BASEPRI, r3
9000e384:	f3bf 8f6f 	isb	sy
9000e388:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000e38c:	e7fe      	b.n	9000e38c <xQueueCreateCountingSemaphoreStatic+0xbc>
9000e38e:	bf00      	nop

9000e390 <xQueueCreateCountingSemaphore>:
	{
9000e390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000e392:	b940      	cbnz	r0, 9000e3a6 <xQueueCreateCountingSemaphore+0x16>
9000e394:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e398:	f383 8811 	msr	BASEPRI, r3
9000e39c:	f3bf 8f6f 	isb	sy
9000e3a0:	f3bf 8f4f 	dsb	sy
9000e3a4:	e7fe      	b.n	9000e3a4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000e3a6:	4288      	cmp	r0, r1
9000e3a8:	4604      	mov	r4, r0
9000e3aa:	460e      	mov	r6, r1
9000e3ac:	d208      	bcs.n	9000e3c0 <xQueueCreateCountingSemaphore+0x30>
9000e3ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e3b2:	f383 8811 	msr	BASEPRI, r3
9000e3b6:	f3bf 8f6f 	isb	sy
9000e3ba:	f3bf 8f4f 	dsb	sy
9000e3be:	e7fe      	b.n	9000e3be <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000e3c0:	2050      	movs	r0, #80	@ 0x50
9000e3c2:	f7ff fb6b 	bl	9000da9c <pvPortMalloc>
		if( pxNewQueue != NULL )
9000e3c6:	4605      	mov	r5, r0
9000e3c8:	b330      	cbz	r0, 9000e418 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000e3ca:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000e3cc:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000e3ce:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000e3d0:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000e3d4:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
9000e3d6:	f7ff fd35 	bl	9000de44 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e3da:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e3dc:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e3de:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e3e2:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e3e4:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
9000e3e8:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e3ec:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e3ee:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e3f0:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e3f2:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000e3f4:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e3f6:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000e3f8:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e3fc:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e400:	f7ff fc6e 	bl	9000dce0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e404:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000e408:	f7ff fc6a 	bl	9000dce0 <vListInitialise>
	taskEXIT_CRITICAL();
9000e40c:	f7ff fd3c 	bl	9000de88 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000e410:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000e412:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000e414:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
9000e418:	4628      	mov	r0, r5
9000e41a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000e41c <xQueueGenericSend>:
{
9000e41c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000e420:	b084      	sub	sp, #16
9000e422:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000e424:	2800      	cmp	r0, #0
9000e426:	f000 8103 	beq.w	9000e630 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e42a:	4688      	mov	r8, r1
9000e42c:	4604      	mov	r4, r0
9000e42e:	461f      	mov	r7, r3
9000e430:	2900      	cmp	r1, #0
9000e432:	f000 8097 	beq.w	9000e564 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000e436:	2f02      	cmp	r7, #2
9000e438:	d10b      	bne.n	9000e452 <xQueueGenericSend+0x36>
9000e43a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e43c:	2b01      	cmp	r3, #1
9000e43e:	d008      	beq.n	9000e452 <xQueueGenericSend+0x36>
9000e440:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e444:	f383 8811 	msr	BASEPRI, r3
9000e448:	f3bf 8f6f 	isb	sy
9000e44c:	f3bf 8f4f 	dsb	sy
9000e450:	e7fe      	b.n	9000e450 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e452:	f001 fc71 	bl	9000fd38 <xTaskGetSchedulerState>
9000e456:	2800      	cmp	r0, #0
9000e458:	f000 80f3 	beq.w	9000e642 <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e45c:	f1a7 0902 	sub.w	r9, r7, #2
9000e460:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e462:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e466:	fab9 f989 	clz	r9, r9
9000e46a:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000e46e:	f7ff fce9 	bl	9000de44 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e472:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000e474:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e476:	429a      	cmp	r2, r3
9000e478:	f0c0 80f0 	bcc.w	9000e65c <xQueueGenericSend+0x240>
9000e47c:	f1b9 0f00 	cmp.w	r9, #0
9000e480:	f040 80ec 	bne.w	9000e65c <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e484:	9b01      	ldr	r3, [sp, #4]
9000e486:	2b00      	cmp	r3, #0
9000e488:	f000 8101 	beq.w	9000e68e <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000e48c:	2d00      	cmp	r5, #0
9000e48e:	f000 80cb 	beq.w	9000e628 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000e492:	f7ff fcf9 	bl	9000de88 <vPortExitCritical>
		vTaskSuspendAll();
9000e496:	f001 fa89 	bl	9000f9ac <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e49a:	f7ff fcd3 	bl	9000de44 <vPortEnterCritical>
9000e49e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e4a2:	2bff      	cmp	r3, #255	@ 0xff
9000e4a4:	d102      	bne.n	9000e4ac <xQueueGenericSend+0x90>
9000e4a6:	2300      	movs	r3, #0
9000e4a8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000e4ac:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e4b0:	2bff      	cmp	r3, #255	@ 0xff
9000e4b2:	d102      	bne.n	9000e4ba <xQueueGenericSend+0x9e>
9000e4b4:	2300      	movs	r3, #0
9000e4b6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000e4ba:	f7ff fce5 	bl	9000de88 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e4be:	a901      	add	r1, sp, #4
9000e4c0:	a802      	add	r0, sp, #8
9000e4c2:	f001 fbf1 	bl	9000fca8 <xTaskCheckForTimeOut>
9000e4c6:	2800      	cmp	r0, #0
9000e4c8:	f040 80e5 	bne.w	9000e696 <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000e4cc:	f7ff fcba 	bl	9000de44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000e4d0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000e4d2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e4d4:	429a      	cmp	r2, r3
9000e4d6:	d052      	beq.n	9000e57e <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000e4d8:	f7ff fcd6 	bl	9000de88 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e4dc:	f7ff fcb2 	bl	9000de44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e4e0:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
9000e4e4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e4e6:	2d00      	cmp	r5, #0
9000e4e8:	dc04      	bgt.n	9000e4f4 <xQueueGenericSend+0xd8>
9000e4ea:	e011      	b.n	9000e510 <xQueueGenericSend+0xf4>
			--cTxLock;
9000e4ec:	1e6a      	subs	r2, r5, #1
9000e4ee:	b2d3      	uxtb	r3, r2
9000e4f0:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e4f2:	b16b      	cbz	r3, 9000e510 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e4f4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e4f6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e4f8:	b153      	cbz	r3, 9000e510 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e4fa:	f001 fb83 	bl	9000fc04 <xTaskRemoveFromEventList>
9000e4fe:	2800      	cmp	r0, #0
9000e500:	d0f4      	beq.n	9000e4ec <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000e502:	f001 fc13 	bl	9000fd2c <vTaskMissedYield>
			--cTxLock;
9000e506:	1e6a      	subs	r2, r5, #1
9000e508:	b2d3      	uxtb	r3, r2
9000e50a:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e50c:	2b00      	cmp	r3, #0
9000e50e:	d1f1      	bne.n	9000e4f4 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000e510:	23ff      	movs	r3, #255	@ 0xff
9000e512:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e516:	f7ff fcb7 	bl	9000de88 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e51a:	f7ff fc93 	bl	9000de44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e51e:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9000e522:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e524:	2d00      	cmp	r5, #0
9000e526:	dd14      	ble.n	9000e552 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e528:	f104 0a10 	add.w	sl, r4, #16
9000e52c:	e003      	b.n	9000e536 <xQueueGenericSend+0x11a>
				--cRxLock;
9000e52e:	1e6a      	subs	r2, r5, #1
9000e530:	b2d3      	uxtb	r3, r2
9000e532:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e534:	b16b      	cbz	r3, 9000e552 <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e536:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e538:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e53a:	b153      	cbz	r3, 9000e552 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e53c:	f001 fb62 	bl	9000fc04 <xTaskRemoveFromEventList>
9000e540:	2800      	cmp	r0, #0
9000e542:	d0f4      	beq.n	9000e52e <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000e544:	f001 fbf2 	bl	9000fd2c <vTaskMissedYield>
				--cRxLock;
9000e548:	1e6a      	subs	r2, r5, #1
9000e54a:	b2d3      	uxtb	r3, r2
9000e54c:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e54e:	2b00      	cmp	r3, #0
9000e550:	d1f1      	bne.n	9000e536 <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000e552:	23ff      	movs	r3, #255	@ 0xff
9000e554:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e558:	f7ff fc96 	bl	9000de88 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e55c:	f001 fa2e 	bl	9000f9bc <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e560:	2501      	movs	r5, #1
9000e562:	e784      	b.n	9000e46e <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e564:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e566:	2b00      	cmp	r3, #0
9000e568:	f43f af65 	beq.w	9000e436 <xQueueGenericSend+0x1a>
9000e56c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e570:	f383 8811 	msr	BASEPRI, r3
9000e574:	f3bf 8f6f 	isb	sy
9000e578:	f3bf 8f4f 	dsb	sy
9000e57c:	e7fe      	b.n	9000e57c <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000e57e:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000e582:	f7ff fc81 	bl	9000de88 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000e586:	9901      	ldr	r1, [sp, #4]
9000e588:	4650      	mov	r0, sl
9000e58a:	f001 faad 	bl	9000fae8 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e58e:	f7ff fc59 	bl	9000de44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e592:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e596:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e598:	2d00      	cmp	r5, #0
9000e59a:	dc04      	bgt.n	9000e5a6 <xQueueGenericSend+0x18a>
9000e59c:	e011      	b.n	9000e5c2 <xQueueGenericSend+0x1a6>
			--cTxLock;
9000e59e:	1e6b      	subs	r3, r5, #1
9000e5a0:	b2da      	uxtb	r2, r3
9000e5a2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e5a4:	b16a      	cbz	r2, 9000e5c2 <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e5a6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e5a8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e5aa:	b153      	cbz	r3, 9000e5c2 <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e5ac:	f001 fb2a 	bl	9000fc04 <xTaskRemoveFromEventList>
9000e5b0:	2800      	cmp	r0, #0
9000e5b2:	d0f4      	beq.n	9000e59e <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000e5b4:	f001 fbba 	bl	9000fd2c <vTaskMissedYield>
			--cTxLock;
9000e5b8:	1e6b      	subs	r3, r5, #1
9000e5ba:	b2da      	uxtb	r2, r3
9000e5bc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e5be:	2a00      	cmp	r2, #0
9000e5c0:	d1f1      	bne.n	9000e5a6 <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000e5c2:	23ff      	movs	r3, #255	@ 0xff
9000e5c4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e5c8:	f7ff fc5e 	bl	9000de88 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e5cc:	f7ff fc3a 	bl	9000de44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e5d0:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e5d4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e5d6:	2d00      	cmp	r5, #0
9000e5d8:	dc04      	bgt.n	9000e5e4 <xQueueGenericSend+0x1c8>
9000e5da:	e011      	b.n	9000e600 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000e5dc:	1e6b      	subs	r3, r5, #1
9000e5de:	b2da      	uxtb	r2, r3
9000e5e0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e5e2:	b16a      	cbz	r2, 9000e600 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e5e4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e5e6:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e5e8:	b153      	cbz	r3, 9000e600 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e5ea:	f001 fb0b 	bl	9000fc04 <xTaskRemoveFromEventList>
9000e5ee:	2800      	cmp	r0, #0
9000e5f0:	d0f4      	beq.n	9000e5dc <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000e5f2:	f001 fb9b 	bl	9000fd2c <vTaskMissedYield>
				--cRxLock;
9000e5f6:	1e6b      	subs	r3, r5, #1
9000e5f8:	b2da      	uxtb	r2, r3
9000e5fa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e5fc:	2a00      	cmp	r2, #0
9000e5fe:	d1f1      	bne.n	9000e5e4 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000e600:	23ff      	movs	r3, #255	@ 0xff
9000e602:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e606:	f7ff fc3f 	bl	9000de88 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e60a:	f001 f9d7 	bl	9000f9bc <xTaskResumeAll>
9000e60e:	2800      	cmp	r0, #0
9000e610:	d1a6      	bne.n	9000e560 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000e612:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e616:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e61a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e61e:	f3bf 8f4f 	dsb	sy
9000e622:	f3bf 8f6f 	isb	sy
9000e626:	e79b      	b.n	9000e560 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e628:	a802      	add	r0, sp, #8
9000e62a:	f001 fb31 	bl	9000fc90 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000e62e:	e730      	b.n	9000e492 <xQueueGenericSend+0x76>
9000e630:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e634:	f383 8811 	msr	BASEPRI, r3
9000e638:	f3bf 8f6f 	isb	sy
9000e63c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e640:	e7fe      	b.n	9000e640 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e642:	9b01      	ldr	r3, [sp, #4]
9000e644:	2b00      	cmp	r3, #0
9000e646:	f43f af09 	beq.w	9000e45c <xQueueGenericSend+0x40>
9000e64a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e64e:	f383 8811 	msr	BASEPRI, r3
9000e652:	f3bf 8f6f 	isb	sy
9000e656:	f3bf 8f4f 	dsb	sy
9000e65a:	e7fe      	b.n	9000e65a <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e65c:	463a      	mov	r2, r7
9000e65e:	4641      	mov	r1, r8
9000e660:	4620      	mov	r0, r4
9000e662:	f7ff fd4f 	bl	9000e104 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e666:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000e668:	2b00      	cmp	r3, #0
9000e66a:	d151      	bne.n	9000e710 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
9000e66c:	b148      	cbz	r0, 9000e682 <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000e66e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e672:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e676:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e67a:	f3bf 8f4f 	dsb	sy
9000e67e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000e682:	f7ff fc01 	bl	9000de88 <vPortExitCritical>
				return pdPASS;
9000e686:	2001      	movs	r0, #1
}
9000e688:	b004      	add	sp, #16
9000e68a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000e68e:	f7ff fbfb 	bl	9000de88 <vPortExitCritical>
					return errQUEUE_FULL;
9000e692:	2000      	movs	r0, #0
9000e694:	e7f8      	b.n	9000e688 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000e696:	f7ff fbd5 	bl	9000de44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e69a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e69e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e6a0:	2d00      	cmp	r5, #0
9000e6a2:	dd10      	ble.n	9000e6c6 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e6a4:	f104 0624 	add.w	r6, r4, #36	@ 0x24
9000e6a8:	e003      	b.n	9000e6b2 <xQueueGenericSend+0x296>
			--cTxLock;
9000e6aa:	1e6b      	subs	r3, r5, #1
9000e6ac:	b2da      	uxtb	r2, r3
9000e6ae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e6b0:	b14a      	cbz	r2, 9000e6c6 <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e6b2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e6b4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e6b6:	b133      	cbz	r3, 9000e6c6 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e6b8:	f001 faa4 	bl	9000fc04 <xTaskRemoveFromEventList>
9000e6bc:	2800      	cmp	r0, #0
9000e6be:	d0f4      	beq.n	9000e6aa <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000e6c0:	f001 fb34 	bl	9000fd2c <vTaskMissedYield>
9000e6c4:	e7f1      	b.n	9000e6aa <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e6c6:	23ff      	movs	r3, #255	@ 0xff
9000e6c8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e6cc:	f7ff fbdc 	bl	9000de88 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e6d0:	f7ff fbb8 	bl	9000de44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e6d4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e6d8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e6da:	2d00      	cmp	r5, #0
9000e6dc:	dd10      	ble.n	9000e700 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6de:	f104 0610 	add.w	r6, r4, #16
9000e6e2:	e003      	b.n	9000e6ec <xQueueGenericSend+0x2d0>
				--cRxLock;
9000e6e4:	1e6b      	subs	r3, r5, #1
9000e6e6:	b2da      	uxtb	r2, r3
9000e6e8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e6ea:	b14a      	cbz	r2, 9000e700 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e6ec:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6ee:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e6f0:	b133      	cbz	r3, 9000e700 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6f2:	f001 fa87 	bl	9000fc04 <xTaskRemoveFromEventList>
9000e6f6:	2800      	cmp	r0, #0
9000e6f8:	d0f4      	beq.n	9000e6e4 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000e6fa:	f001 fb17 	bl	9000fd2c <vTaskMissedYield>
9000e6fe:	e7f1      	b.n	9000e6e4 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000e700:	23ff      	movs	r3, #255	@ 0xff
9000e702:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e706:	f7ff fbbf 	bl	9000de88 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e70a:	f001 f957 	bl	9000f9bc <xTaskResumeAll>
			return errQUEUE_FULL;
9000e70e:	e7c0      	b.n	9000e692 <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e710:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e714:	f001 fa76 	bl	9000fc04 <xTaskRemoveFromEventList>
9000e718:	2800      	cmp	r0, #0
9000e71a:	d0b2      	beq.n	9000e682 <xQueueGenericSend+0x266>
9000e71c:	e7a7      	b.n	9000e66e <xQueueGenericSend+0x252>
9000e71e:	bf00      	nop

9000e720 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000e720:	2800      	cmp	r0, #0
9000e722:	d04b      	beq.n	9000e7bc <xQueueGenericSendFromISR+0x9c>
{
9000e724:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e728:	460e      	mov	r6, r1
9000e72a:	4604      	mov	r4, r0
9000e72c:	4617      	mov	r7, r2
9000e72e:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e730:	b339      	cbz	r1, 9000e782 <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000e732:	2d02      	cmp	r5, #2
9000e734:	d10b      	bne.n	9000e74e <xQueueGenericSendFromISR+0x2e>
9000e736:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e738:	2b01      	cmp	r3, #1
9000e73a:	d008      	beq.n	9000e74e <xQueueGenericSendFromISR+0x2e>
9000e73c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e740:	f383 8811 	msr	BASEPRI, r3
9000e744:	f3bf 8f6f 	isb	sy
9000e748:	f3bf 8f4f 	dsb	sy
9000e74c:	e7fe      	b.n	9000e74c <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e74e:	f7ff fcab 	bl	9000e0a8 <vPortValidateInterruptPriority>
	__asm volatile
9000e752:	f3ef 8811 	mrs	r8, BASEPRI
9000e756:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e75a:	f383 8811 	msr	BASEPRI, r3
9000e75e:	f3bf 8f6f 	isb	sy
9000e762:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e766:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000e768:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e76a:	429a      	cmp	r2, r3
9000e76c:	d315      	bcc.n	9000e79a <xQueueGenericSendFromISR+0x7a>
9000e76e:	f1a5 0002 	sub.w	r0, r5, #2
9000e772:	fab0 f080 	clz	r0, r0
9000e776:	0940      	lsrs	r0, r0, #5
9000e778:	b978      	cbnz	r0, 9000e79a <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000e77a:	f388 8811 	msr	BASEPRI, r8
}
9000e77e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e782:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e784:	2b00      	cmp	r3, #0
9000e786:	d0d4      	beq.n	9000e732 <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000e788:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e78c:	f383 8811 	msr	BASEPRI, r3
9000e790:	f3bf 8f6f 	isb	sy
9000e794:	f3bf 8f4f 	dsb	sy
9000e798:	e7fe      	b.n	9000e798 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e79a:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000e79c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e7a0:	4631      	mov	r1, r6
9000e7a2:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000e7a4:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e7a6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e7a8:	f7ff fcac 	bl	9000e104 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000e7ac:	1c6b      	adds	r3, r5, #1
9000e7ae:	d00e      	beq.n	9000e7ce <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e7b0:	1c6b      	adds	r3, r5, #1
9000e7b2:	b25b      	sxtb	r3, r3
9000e7b4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000e7b8:	2001      	movs	r0, #1
9000e7ba:	e7de      	b.n	9000e77a <xQueueGenericSendFromISR+0x5a>
9000e7bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e7c0:	f383 8811 	msr	BASEPRI, r3
9000e7c4:	f3bf 8f6f 	isb	sy
9000e7c8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e7cc:	e7fe      	b.n	9000e7cc <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e7ce:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000e7d0:	2b00      	cmp	r3, #0
9000e7d2:	d0f1      	beq.n	9000e7b8 <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e7d4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e7d8:	f001 fa14 	bl	9000fc04 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e7dc:	2800      	cmp	r0, #0
9000e7de:	d0eb      	beq.n	9000e7b8 <xQueueGenericSendFromISR+0x98>
9000e7e0:	2f00      	cmp	r7, #0
9000e7e2:	d0e9      	beq.n	9000e7b8 <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e7e4:	2301      	movs	r3, #1
9000e7e6:	603b      	str	r3, [r7, #0]
9000e7e8:	e7e6      	b.n	9000e7b8 <xQueueGenericSendFromISR+0x98>
9000e7ea:	bf00      	nop

9000e7ec <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000e7ec:	b360      	cbz	r0, 9000e848 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e7ee:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
9000e7f0:	b570      	push	{r4, r5, r6, lr}
9000e7f2:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000e7f4:	b143      	cbz	r3, 9000e808 <xQueueGiveFromISR+0x1c>
9000e7f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e7fa:	f383 8811 	msr	BASEPRI, r3
9000e7fe:	f3bf 8f6f 	isb	sy
9000e802:	f3bf 8f4f 	dsb	sy
9000e806:	e7fe      	b.n	9000e806 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e808:	6803      	ldr	r3, [r0, #0]
9000e80a:	460d      	mov	r5, r1
9000e80c:	b32b      	cbz	r3, 9000e85a <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e80e:	f7ff fc4b 	bl	9000e0a8 <vPortValidateInterruptPriority>
	__asm volatile
9000e812:	f3ef 8611 	mrs	r6, BASEPRI
9000e816:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e81a:	f383 8811 	msr	BASEPRI, r3
9000e81e:	f3bf 8f6f 	isb	sy
9000e822:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e826:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000e828:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000e82a:	429a      	cmp	r2, r3
9000e82c:	d921      	bls.n	9000e872 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000e82e:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e832:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000e834:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e836:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000e838:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000e83a:	d01e      	beq.n	9000e87a <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e83c:	3301      	adds	r3, #1
9000e83e:	b25b      	sxtb	r3, r3
9000e840:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000e844:	2001      	movs	r0, #1
9000e846:	e015      	b.n	9000e874 <xQueueGiveFromISR+0x88>
	__asm volatile
9000e848:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e84c:	f383 8811 	msr	BASEPRI, r3
9000e850:	f3bf 8f6f 	isb	sy
9000e854:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e858:	e7fe      	b.n	9000e858 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e85a:	6883      	ldr	r3, [r0, #8]
9000e85c:	2b00      	cmp	r3, #0
9000e85e:	d0d6      	beq.n	9000e80e <xQueueGiveFromISR+0x22>
9000e860:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e864:	f383 8811 	msr	BASEPRI, r3
9000e868:	f3bf 8f6f 	isb	sy
9000e86c:	f3bf 8f4f 	dsb	sy
9000e870:	e7fe      	b.n	9000e870 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000e872:	2000      	movs	r0, #0
	__asm volatile
9000e874:	f386 8811 	msr	BASEPRI, r6
}
9000e878:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e87a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000e87c:	2b00      	cmp	r3, #0
9000e87e:	d0e1      	beq.n	9000e844 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e880:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e884:	f001 f9be 	bl	9000fc04 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e888:	2d00      	cmp	r5, #0
9000e88a:	d0db      	beq.n	9000e844 <xQueueGiveFromISR+0x58>
9000e88c:	2800      	cmp	r0, #0
9000e88e:	d0d9      	beq.n	9000e844 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e890:	2301      	movs	r3, #1
9000e892:	602b      	str	r3, [r5, #0]
9000e894:	e7d6      	b.n	9000e844 <xQueueGiveFromISR+0x58>
9000e896:	bf00      	nop

9000e898 <xQueueReceive>:
{
9000e898:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000e89c:	b085      	sub	sp, #20
9000e89e:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e8a0:	2800      	cmp	r0, #0
9000e8a2:	f000 8164 	beq.w	9000eb6e <xQueueReceive+0x2d6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e8a6:	460f      	mov	r7, r1
9000e8a8:	4604      	mov	r4, r0
9000e8aa:	2900      	cmp	r1, #0
9000e8ac:	f000 8097 	beq.w	9000e9de <xQueueReceive+0x146>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e8b0:	f001 fa42 	bl	9000fd38 <xTaskGetSchedulerState>
9000e8b4:	2800      	cmp	r0, #0
9000e8b6:	f000 809f 	beq.w	9000e9f8 <xQueueReceive+0x160>
		taskENTER_CRITICAL();
9000e8ba:	f7ff fac3 	bl	9000de44 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e8be:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e8c0:	2d00      	cmp	r5, #0
9000e8c2:	d175      	bne.n	9000e9b0 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e8c4:	9b01      	ldr	r3, [sp, #4]
9000e8c6:	2b00      	cmp	r3, #0
9000e8c8:	f000 80f4 	beq.w	9000eab4 <xQueueReceive+0x21c>
		prvLockQueue( pxQueue );
9000e8cc:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e8ce:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e8d2:	a802      	add	r0, sp, #8
9000e8d4:	f001 f9dc 	bl	9000fc90 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000e8d8:	f7ff fad6 	bl	9000de88 <vPortExitCritical>
		vTaskSuspendAll();
9000e8dc:	f001 f866 	bl	9000f9ac <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e8e0:	f7ff fab0 	bl	9000de44 <vPortEnterCritical>
9000e8e4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e8e8:	2bff      	cmp	r3, #255	@ 0xff
9000e8ea:	d101      	bne.n	9000e8f0 <xQueueReceive+0x58>
9000e8ec:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000e8f0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e8f4:	2bff      	cmp	r3, #255	@ 0xff
9000e8f6:	d101      	bne.n	9000e8fc <xQueueReceive+0x64>
9000e8f8:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000e8fc:	f7ff fac4 	bl	9000de88 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e900:	a901      	add	r1, sp, #4
9000e902:	a802      	add	r0, sp, #8
9000e904:	f001 f9d0 	bl	9000fca8 <xTaskCheckForTimeOut>
9000e908:	2800      	cmp	r0, #0
9000e90a:	f040 8082 	bne.w	9000ea12 <xQueueReceive+0x17a>
	taskENTER_CRITICAL();
9000e90e:	f7ff fa99 	bl	9000de44 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e912:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e914:	2b00      	cmp	r3, #0
9000e916:	f000 80d3 	beq.w	9000eac0 <xQueueReceive+0x228>
	taskEXIT_CRITICAL();
9000e91a:	f7ff fab5 	bl	9000de88 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e91e:	f7ff fa91 	bl	9000de44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e922:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e926:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e928:	2d00      	cmp	r5, #0
9000e92a:	dd14      	ble.n	9000e956 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e92c:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000e930:	e003      	b.n	9000e93a <xQueueReceive+0xa2>
			--cTxLock;
9000e932:	1e6b      	subs	r3, r5, #1
9000e934:	b2da      	uxtb	r2, r3
9000e936:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e938:	b16a      	cbz	r2, 9000e956 <xQueueReceive+0xbe>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e93a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e93c:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e93e:	b153      	cbz	r3, 9000e956 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e940:	f001 f960 	bl	9000fc04 <xTaskRemoveFromEventList>
9000e944:	2800      	cmp	r0, #0
9000e946:	d0f4      	beq.n	9000e932 <xQueueReceive+0x9a>
						vTaskMissedYield();
9000e948:	f001 f9f0 	bl	9000fd2c <vTaskMissedYield>
			--cTxLock;
9000e94c:	1e6b      	subs	r3, r5, #1
9000e94e:	b2da      	uxtb	r2, r3
9000e950:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e952:	2a00      	cmp	r2, #0
9000e954:	d1f1      	bne.n	9000e93a <xQueueReceive+0xa2>
		pxQueue->cTxLock = queueUNLOCKED;
9000e956:	23ff      	movs	r3, #255	@ 0xff
9000e958:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e95c:	f7ff fa94 	bl	9000de88 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e960:	f7ff fa70 	bl	9000de44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e964:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e968:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e96a:	2d00      	cmp	r5, #0
9000e96c:	dd14      	ble.n	9000e998 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e96e:	f104 0910 	add.w	r9, r4, #16
9000e972:	e003      	b.n	9000e97c <xQueueReceive+0xe4>
				--cRxLock;
9000e974:	1e6b      	subs	r3, r5, #1
9000e976:	b2da      	uxtb	r2, r3
9000e978:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e97a:	b16a      	cbz	r2, 9000e998 <xQueueReceive+0x100>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e97c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e97e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e980:	b153      	cbz	r3, 9000e998 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e982:	f001 f93f 	bl	9000fc04 <xTaskRemoveFromEventList>
9000e986:	2800      	cmp	r0, #0
9000e988:	d0f4      	beq.n	9000e974 <xQueueReceive+0xdc>
					vTaskMissedYield();
9000e98a:	f001 f9cf 	bl	9000fd2c <vTaskMissedYield>
				--cRxLock;
9000e98e:	1e6b      	subs	r3, r5, #1
9000e990:	b2da      	uxtb	r2, r3
9000e992:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e994:	2a00      	cmp	r2, #0
9000e996:	d1f1      	bne.n	9000e97c <xQueueReceive+0xe4>
		pxQueue->cRxLock = queueUNLOCKED;
9000e998:	23ff      	movs	r3, #255	@ 0xff
9000e99a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e99e:	f7ff fa73 	bl	9000de88 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e9a2:	f001 f80b 	bl	9000f9bc <xTaskResumeAll>
		taskENTER_CRITICAL();
9000e9a6:	f7ff fa4d 	bl	9000de44 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e9aa:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e9ac:	2d00      	cmp	r5, #0
9000e9ae:	d07d      	beq.n	9000eaac <xQueueReceive+0x214>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e9b0:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000e9b2:	b152      	cbz	r2, 9000e9ca <xQueueReceive+0x132>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e9b4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e9b6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e9b8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e9ba:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e9bc:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e9be:	d301      	bcc.n	9000e9c4 <xQueueReceive+0x12c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e9c0:	6821      	ldr	r1, [r4, #0]
9000e9c2:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e9c4:	4638      	mov	r0, r7
9000e9c6:	f01b fc44 	bl	9002a252 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e9ca:	3d01      	subs	r5, #1
9000e9cc:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e9ce:	6923      	ldr	r3, [r4, #16]
9000e9d0:	2b00      	cmp	r3, #0
9000e9d2:	f040 80d5 	bne.w	9000eb80 <xQueueReceive+0x2e8>
				taskEXIT_CRITICAL();
9000e9d6:	f7ff fa57 	bl	9000de88 <vPortExitCritical>
				return pdPASS;
9000e9da:	2001      	movs	r0, #1
9000e9dc:	e06d      	b.n	9000eaba <xQueueReceive+0x222>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e9de:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e9e0:	2b00      	cmp	r3, #0
9000e9e2:	f43f af65 	beq.w	9000e8b0 <xQueueReceive+0x18>
	__asm volatile
9000e9e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e9ea:	f383 8811 	msr	BASEPRI, r3
9000e9ee:	f3bf 8f6f 	isb	sy
9000e9f2:	f3bf 8f4f 	dsb	sy
9000e9f6:	e7fe      	b.n	9000e9f6 <xQueueReceive+0x15e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e9f8:	9b01      	ldr	r3, [sp, #4]
9000e9fa:	2b00      	cmp	r3, #0
9000e9fc:	f43f af5d 	beq.w	9000e8ba <xQueueReceive+0x22>
9000ea00:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ea04:	f383 8811 	msr	BASEPRI, r3
9000ea08:	f3bf 8f6f 	isb	sy
9000ea0c:	f3bf 8f4f 	dsb	sy
9000ea10:	e7fe      	b.n	9000ea10 <xQueueReceive+0x178>
	taskENTER_CRITICAL();
9000ea12:	f7ff fa17 	bl	9000de44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ea16:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000ea1a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ea1c:	2d00      	cmp	r5, #0
9000ea1e:	dc04      	bgt.n	9000ea2a <xQueueReceive+0x192>
9000ea20:	e011      	b.n	9000ea46 <xQueueReceive+0x1ae>
			--cTxLock;
9000ea22:	1e6b      	subs	r3, r5, #1
9000ea24:	b2da      	uxtb	r2, r3
9000ea26:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ea28:	b16a      	cbz	r2, 9000ea46 <xQueueReceive+0x1ae>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ea2a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ea2c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ea2e:	b153      	cbz	r3, 9000ea46 <xQueueReceive+0x1ae>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ea30:	f001 f8e8 	bl	9000fc04 <xTaskRemoveFromEventList>
9000ea34:	2800      	cmp	r0, #0
9000ea36:	d0f4      	beq.n	9000ea22 <xQueueReceive+0x18a>
						vTaskMissedYield();
9000ea38:	f001 f978 	bl	9000fd2c <vTaskMissedYield>
			--cTxLock;
9000ea3c:	1e6b      	subs	r3, r5, #1
9000ea3e:	b2da      	uxtb	r2, r3
9000ea40:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ea42:	2a00      	cmp	r2, #0
9000ea44:	d1f1      	bne.n	9000ea2a <xQueueReceive+0x192>
		pxQueue->cTxLock = queueUNLOCKED;
9000ea46:	23ff      	movs	r3, #255	@ 0xff
9000ea48:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000ea4c:	f7ff fa1c 	bl	9000de88 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ea50:	f7ff f9f8 	bl	9000de44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ea54:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000ea58:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ea5a:	2d00      	cmp	r5, #0
9000ea5c:	dd14      	ble.n	9000ea88 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ea5e:	f104 0910 	add.w	r9, r4, #16
9000ea62:	e003      	b.n	9000ea6c <xQueueReceive+0x1d4>
				--cRxLock;
9000ea64:	1e6b      	subs	r3, r5, #1
9000ea66:	b2da      	uxtb	r2, r3
9000ea68:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ea6a:	b16a      	cbz	r2, 9000ea88 <xQueueReceive+0x1f0>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ea6c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ea6e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ea70:	b153      	cbz	r3, 9000ea88 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ea72:	f001 f8c7 	bl	9000fc04 <xTaskRemoveFromEventList>
9000ea76:	2800      	cmp	r0, #0
9000ea78:	d0f4      	beq.n	9000ea64 <xQueueReceive+0x1cc>
					vTaskMissedYield();
9000ea7a:	f001 f957 	bl	9000fd2c <vTaskMissedYield>
				--cRxLock;
9000ea7e:	1e6b      	subs	r3, r5, #1
9000ea80:	b2da      	uxtb	r2, r3
9000ea82:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ea84:	2a00      	cmp	r2, #0
9000ea86:	d1f1      	bne.n	9000ea6c <xQueueReceive+0x1d4>
		pxQueue->cRxLock = queueUNLOCKED;
9000ea88:	23ff      	movs	r3, #255	@ 0xff
9000ea8a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000ea8e:	f7ff f9fb 	bl	9000de88 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000ea92:	f000 ff93 	bl	9000f9bc <xTaskResumeAll>
	taskENTER_CRITICAL();
9000ea96:	f7ff f9d5 	bl	9000de44 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000ea9a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000ea9c:	b153      	cbz	r3, 9000eab4 <xQueueReceive+0x21c>
	taskEXIT_CRITICAL();
9000ea9e:	f7ff f9f3 	bl	9000de88 <vPortExitCritical>
		taskENTER_CRITICAL();
9000eaa2:	f7ff f9cf 	bl	9000de44 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000eaa6:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000eaa8:	2d00      	cmp	r5, #0
9000eaaa:	d181      	bne.n	9000e9b0 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
9000eaac:	9b01      	ldr	r3, [sp, #4]
9000eaae:	2b00      	cmp	r3, #0
9000eab0:	f47f af12 	bne.w	9000e8d8 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000eab4:	f7ff f9e8 	bl	9000de88 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000eab8:	2000      	movs	r0, #0
}
9000eaba:	b005      	add	sp, #20
9000eabc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000eac0:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
9000eac4:	f7ff f9e0 	bl	9000de88 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000eac8:	9901      	ldr	r1, [sp, #4]
9000eaca:	4648      	mov	r0, r9
9000eacc:	f001 f80c 	bl	9000fae8 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000ead0:	f7ff f9b8 	bl	9000de44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ead4:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000ead8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eada:	2d00      	cmp	r5, #0
9000eadc:	dc04      	bgt.n	9000eae8 <xQueueReceive+0x250>
9000eade:	e011      	b.n	9000eb04 <xQueueReceive+0x26c>
			--cTxLock;
9000eae0:	1e6b      	subs	r3, r5, #1
9000eae2:	b2da      	uxtb	r2, r3
9000eae4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eae6:	b16a      	cbz	r2, 9000eb04 <xQueueReceive+0x26c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eae8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eaea:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eaec:	b153      	cbz	r3, 9000eb04 <xQueueReceive+0x26c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eaee:	f001 f889 	bl	9000fc04 <xTaskRemoveFromEventList>
9000eaf2:	2800      	cmp	r0, #0
9000eaf4:	d0f4      	beq.n	9000eae0 <xQueueReceive+0x248>
						vTaskMissedYield();
9000eaf6:	f001 f919 	bl	9000fd2c <vTaskMissedYield>
			--cTxLock;
9000eafa:	1e6b      	subs	r3, r5, #1
9000eafc:	b2da      	uxtb	r2, r3
9000eafe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eb00:	2a00      	cmp	r2, #0
9000eb02:	d1f1      	bne.n	9000eae8 <xQueueReceive+0x250>
		pxQueue->cTxLock = queueUNLOCKED;
9000eb04:	23ff      	movs	r3, #255	@ 0xff
9000eb06:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000eb0a:	f7ff f9bd 	bl	9000de88 <vPortExitCritical>
	taskENTER_CRITICAL();
9000eb0e:	f7ff f999 	bl	9000de44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000eb12:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000eb16:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eb18:	2d00      	cmp	r5, #0
9000eb1a:	dd14      	ble.n	9000eb46 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eb1c:	f104 0910 	add.w	r9, r4, #16
9000eb20:	e003      	b.n	9000eb2a <xQueueReceive+0x292>
				--cRxLock;
9000eb22:	1e6b      	subs	r3, r5, #1
9000eb24:	b2da      	uxtb	r2, r3
9000eb26:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eb28:	b16a      	cbz	r2, 9000eb46 <xQueueReceive+0x2ae>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000eb2a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eb2c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000eb2e:	b153      	cbz	r3, 9000eb46 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eb30:	f001 f868 	bl	9000fc04 <xTaskRemoveFromEventList>
9000eb34:	2800      	cmp	r0, #0
9000eb36:	d0f4      	beq.n	9000eb22 <xQueueReceive+0x28a>
					vTaskMissedYield();
9000eb38:	f001 f8f8 	bl	9000fd2c <vTaskMissedYield>
				--cRxLock;
9000eb3c:	1e6b      	subs	r3, r5, #1
9000eb3e:	b2da      	uxtb	r2, r3
9000eb40:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eb42:	2a00      	cmp	r2, #0
9000eb44:	d1f1      	bne.n	9000eb2a <xQueueReceive+0x292>
		pxQueue->cRxLock = queueUNLOCKED;
9000eb46:	23ff      	movs	r3, #255	@ 0xff
9000eb48:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000eb4c:	f7ff f99c 	bl	9000de88 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000eb50:	f000 ff34 	bl	9000f9bc <xTaskResumeAll>
9000eb54:	2800      	cmp	r0, #0
9000eb56:	d1a4      	bne.n	9000eaa2 <xQueueReceive+0x20a>
					portYIELD_WITHIN_API();
9000eb58:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000eb5c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000eb60:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000eb64:	f3bf 8f4f 	dsb	sy
9000eb68:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9000eb6c:	e799      	b.n	9000eaa2 <xQueueReceive+0x20a>
9000eb6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eb72:	f383 8811 	msr	BASEPRI, r3
9000eb76:	f3bf 8f6f 	isb	sy
9000eb7a:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000eb7e:	e7fe      	b.n	9000eb7e <xQueueReceive+0x2e6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eb80:	f104 0010 	add.w	r0, r4, #16
9000eb84:	f001 f83e 	bl	9000fc04 <xTaskRemoveFromEventList>
9000eb88:	2800      	cmp	r0, #0
9000eb8a:	f43f af24 	beq.w	9000e9d6 <xQueueReceive+0x13e>
						queueYIELD_IF_USING_PREEMPTION();
9000eb8e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000eb92:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000eb96:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000eb9a:	f3bf 8f4f 	dsb	sy
9000eb9e:	f3bf 8f6f 	isb	sy
9000eba2:	e718      	b.n	9000e9d6 <xQueueReceive+0x13e>

9000eba4 <xQueueSemaphoreTake>:
{
9000eba4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000eba8:	b084      	sub	sp, #16
9000ebaa:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000ebac:	2800      	cmp	r0, #0
9000ebae:	d05e      	beq.n	9000ec6e <xQueueSemaphoreTake+0xca>
	configASSERT( pxQueue->uxItemSize == 0 );
9000ebb0:	6c07      	ldr	r7, [r0, #64]	@ 0x40
9000ebb2:	4604      	mov	r4, r0
9000ebb4:	b147      	cbz	r7, 9000ebc8 <xQueueSemaphoreTake+0x24>
9000ebb6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ebba:	f383 8811 	msr	BASEPRI, r3
9000ebbe:	f3bf 8f6f 	isb	sy
9000ebc2:	f3bf 8f4f 	dsb	sy
9000ebc6:	e7fe      	b.n	9000ebc6 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000ebc8:	f001 f8b6 	bl	9000fd38 <xTaskGetSchedulerState>
9000ebcc:	4605      	mov	r5, r0
9000ebce:	2800      	cmp	r0, #0
9000ebd0:	d056      	beq.n	9000ec80 <xQueueSemaphoreTake+0xdc>
9000ebd2:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ebd4:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		taskENTER_CRITICAL();
9000ebd8:	f7ff f934 	bl	9000de44 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000ebdc:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000ebde:	2b00      	cmp	r3, #0
9000ebe0:	f040 814d 	bne.w	9000ee7e <xQueueSemaphoreTake+0x2da>
				if( xTicksToWait == ( TickType_t ) 0 )
9000ebe4:	9b01      	ldr	r3, [sp, #4]
9000ebe6:	2b00      	cmp	r3, #0
9000ebe8:	f000 813e 	beq.w	9000ee68 <xQueueSemaphoreTake+0x2c4>
				else if( xEntryTimeSet == pdFALSE )
9000ebec:	2d00      	cmp	r5, #0
9000ebee:	f000 80a3 	beq.w	9000ed38 <xQueueSemaphoreTake+0x194>
		taskEXIT_CRITICAL();
9000ebf2:	f7ff f949 	bl	9000de88 <vPortExitCritical>
		vTaskSuspendAll();
9000ebf6:	f000 fed9 	bl	9000f9ac <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000ebfa:	f7ff f923 	bl	9000de44 <vPortEnterCritical>
9000ebfe:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000ec02:	2bff      	cmp	r3, #255	@ 0xff
9000ec04:	d102      	bne.n	9000ec0c <xQueueSemaphoreTake+0x68>
9000ec06:	2300      	movs	r3, #0
9000ec08:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000ec0c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000ec10:	2bff      	cmp	r3, #255	@ 0xff
9000ec12:	d102      	bne.n	9000ec1a <xQueueSemaphoreTake+0x76>
9000ec14:	2300      	movs	r3, #0
9000ec16:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000ec1a:	f7ff f935 	bl	9000de88 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000ec1e:	a901      	add	r1, sp, #4
9000ec20:	a802      	add	r0, sp, #8
9000ec22:	f001 f841 	bl	9000fca8 <xTaskCheckForTimeOut>
9000ec26:	2800      	cmp	r0, #0
9000ec28:	d137      	bne.n	9000ec9a <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
9000ec2a:	f7ff f90b 	bl	9000de44 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000ec2e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000ec30:	2b00      	cmp	r3, #0
9000ec32:	f000 80ae 	beq.w	9000ed92 <xQueueSemaphoreTake+0x1ee>
	taskEXIT_CRITICAL();
9000ec36:	f7ff f927 	bl	9000de88 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ec3a:	f7ff f903 	bl	9000de44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ec3e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000ec42:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ec44:	2d00      	cmp	r5, #0
9000ec46:	dd7f      	ble.n	9000ed48 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ec48:	f104 0824 	add.w	r8, r4, #36	@ 0x24
9000ec4c:	e004      	b.n	9000ec58 <xQueueSemaphoreTake+0xb4>
			--cTxLock;
9000ec4e:	1e6b      	subs	r3, r5, #1
9000ec50:	b2da      	uxtb	r2, r3
9000ec52:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ec54:	2a00      	cmp	r2, #0
9000ec56:	d077      	beq.n	9000ed48 <xQueueSemaphoreTake+0x1a4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ec58:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ec5a:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ec5c:	2b00      	cmp	r3, #0
9000ec5e:	d073      	beq.n	9000ed48 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ec60:	f000 ffd0 	bl	9000fc04 <xTaskRemoveFromEventList>
9000ec64:	2800      	cmp	r0, #0
9000ec66:	d0f2      	beq.n	9000ec4e <xQueueSemaphoreTake+0xaa>
						vTaskMissedYield();
9000ec68:	f001 f860 	bl	9000fd2c <vTaskMissedYield>
9000ec6c:	e7ef      	b.n	9000ec4e <xQueueSemaphoreTake+0xaa>
9000ec6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ec72:	f383 8811 	msr	BASEPRI, r3
9000ec76:	f3bf 8f6f 	isb	sy
9000ec7a:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000ec7e:	e7fe      	b.n	9000ec7e <xQueueSemaphoreTake+0xda>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000ec80:	9b01      	ldr	r3, [sp, #4]
9000ec82:	2b00      	cmp	r3, #0
9000ec84:	f000 80d7 	beq.w	9000ee36 <xQueueSemaphoreTake+0x292>
9000ec88:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ec8c:	f383 8811 	msr	BASEPRI, r3
9000ec90:	f3bf 8f6f 	isb	sy
9000ec94:	f3bf 8f4f 	dsb	sy
9000ec98:	e7fe      	b.n	9000ec98 <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
9000ec9a:	f7ff f8d3 	bl	9000de44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ec9e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000eca2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eca4:	2d00      	cmp	r5, #0
9000eca6:	dc04      	bgt.n	9000ecb2 <xQueueSemaphoreTake+0x10e>
9000eca8:	e011      	b.n	9000ecce <xQueueSemaphoreTake+0x12a>
			--cTxLock;
9000ecaa:	1e6b      	subs	r3, r5, #1
9000ecac:	b2da      	uxtb	r2, r3
9000ecae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ecb0:	b16a      	cbz	r2, 9000ecce <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ecb2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ecb4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ecb6:	b153      	cbz	r3, 9000ecce <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ecb8:	f000 ffa4 	bl	9000fc04 <xTaskRemoveFromEventList>
9000ecbc:	2800      	cmp	r0, #0
9000ecbe:	d0f4      	beq.n	9000ecaa <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
9000ecc0:	f001 f834 	bl	9000fd2c <vTaskMissedYield>
			--cTxLock;
9000ecc4:	1e6b      	subs	r3, r5, #1
9000ecc6:	b2da      	uxtb	r2, r3
9000ecc8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ecca:	2a00      	cmp	r2, #0
9000eccc:	d1f1      	bne.n	9000ecb2 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
9000ecce:	23ff      	movs	r3, #255	@ 0xff
9000ecd0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000ecd4:	f7ff f8d8 	bl	9000de88 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ecd8:	f7ff f8b4 	bl	9000de44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ecdc:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000ece0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ece2:	2d00      	cmp	r5, #0
9000ece4:	dd14      	ble.n	9000ed10 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ece6:	f104 0810 	add.w	r8, r4, #16
9000ecea:	e003      	b.n	9000ecf4 <xQueueSemaphoreTake+0x150>
				--cRxLock;
9000ecec:	1e6b      	subs	r3, r5, #1
9000ecee:	b2da      	uxtb	r2, r3
9000ecf0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ecf2:	b16a      	cbz	r2, 9000ed10 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ecf4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ecf6:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ecf8:	b153      	cbz	r3, 9000ed10 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ecfa:	f000 ff83 	bl	9000fc04 <xTaskRemoveFromEventList>
9000ecfe:	2800      	cmp	r0, #0
9000ed00:	d0f4      	beq.n	9000ecec <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
9000ed02:	f001 f813 	bl	9000fd2c <vTaskMissedYield>
				--cRxLock;
9000ed06:	1e6b      	subs	r3, r5, #1
9000ed08:	b2da      	uxtb	r2, r3
9000ed0a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ed0c:	2a00      	cmp	r2, #0
9000ed0e:	d1f1      	bne.n	9000ecf4 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
9000ed10:	23ff      	movs	r3, #255	@ 0xff
9000ed12:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000ed16:	f7ff f8b7 	bl	9000de88 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000ed1a:	f000 fe4f 	bl	9000f9bc <xTaskResumeAll>
	taskENTER_CRITICAL();
9000ed1e:	f7ff f891 	bl	9000de44 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000ed22:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000ed24:	b963      	cbnz	r3, 9000ed40 <xQueueSemaphoreTake+0x19c>
	taskEXIT_CRITICAL();
9000ed26:	f7ff f8af 	bl	9000de88 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000ed2a:	2f00      	cmp	r7, #0
9000ed2c:	f040 8085 	bne.w	9000ee3a <xQueueSemaphoreTake+0x296>
					return errQUEUE_EMPTY;
9000ed30:	2000      	movs	r0, #0
}
9000ed32:	b004      	add	sp, #16
9000ed34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
					vTaskInternalSetTimeOutState( &xTimeOut );
9000ed38:	a802      	add	r0, sp, #8
9000ed3a:	f000 ffa9 	bl	9000fc90 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000ed3e:	e758      	b.n	9000ebf2 <xQueueSemaphoreTake+0x4e>
	taskEXIT_CRITICAL();
9000ed40:	f7ff f8a2 	bl	9000de88 <vPortExitCritical>
	return xReturn;
9000ed44:	2501      	movs	r5, #1
9000ed46:	e747      	b.n	9000ebd8 <xQueueSemaphoreTake+0x34>
		pxQueue->cTxLock = queueUNLOCKED;
9000ed48:	23ff      	movs	r3, #255	@ 0xff
9000ed4a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000ed4e:	f7ff f89b 	bl	9000de88 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ed52:	f7ff f877 	bl	9000de44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ed56:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000ed5a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ed5c:	2d00      	cmp	r5, #0
9000ed5e:	dd10      	ble.n	9000ed82 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ed60:	f104 0810 	add.w	r8, r4, #16
9000ed64:	e003      	b.n	9000ed6e <xQueueSemaphoreTake+0x1ca>
				--cRxLock;
9000ed66:	1e6b      	subs	r3, r5, #1
9000ed68:	b2da      	uxtb	r2, r3
9000ed6a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ed6c:	b14a      	cbz	r2, 9000ed82 <xQueueSemaphoreTake+0x1de>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ed6e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ed70:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ed72:	b133      	cbz	r3, 9000ed82 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ed74:	f000 ff46 	bl	9000fc04 <xTaskRemoveFromEventList>
9000ed78:	2800      	cmp	r0, #0
9000ed7a:	d0f4      	beq.n	9000ed66 <xQueueSemaphoreTake+0x1c2>
					vTaskMissedYield();
9000ed7c:	f000 ffd6 	bl	9000fd2c <vTaskMissedYield>
9000ed80:	e7f1      	b.n	9000ed66 <xQueueSemaphoreTake+0x1c2>
		pxQueue->cRxLock = queueUNLOCKED;
9000ed82:	23ff      	movs	r3, #255	@ 0xff
9000ed84:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000ed88:	f7ff f87e 	bl	9000de88 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000ed8c:	f000 fe16 	bl	9000f9bc <xTaskResumeAll>
9000ed90:	e7d8      	b.n	9000ed44 <xQueueSemaphoreTake+0x1a0>
	taskEXIT_CRITICAL();
9000ed92:	f7ff f879 	bl	9000de88 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000ed96:	6823      	ldr	r3, [r4, #0]
9000ed98:	2b00      	cmp	r3, #0
9000ed9a:	d05c      	beq.n	9000ee56 <xQueueSemaphoreTake+0x2b2>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000ed9c:	f104 0824 	add.w	r8, r4, #36	@ 0x24
9000eda0:	9901      	ldr	r1, [sp, #4]
9000eda2:	4640      	mov	r0, r8
9000eda4:	f000 fea0 	bl	9000fae8 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000eda8:	f7ff f84c 	bl	9000de44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000edac:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000edb0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000edb2:	2d00      	cmp	r5, #0
9000edb4:	dc04      	bgt.n	9000edc0 <xQueueSemaphoreTake+0x21c>
9000edb6:	e00d      	b.n	9000edd4 <xQueueSemaphoreTake+0x230>
			--cTxLock;
9000edb8:	1e6b      	subs	r3, r5, #1
9000edba:	b2da      	uxtb	r2, r3
9000edbc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000edbe:	b14a      	cbz	r2, 9000edd4 <xQueueSemaphoreTake+0x230>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000edc0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000edc2:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000edc4:	b133      	cbz	r3, 9000edd4 <xQueueSemaphoreTake+0x230>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000edc6:	f000 ff1d 	bl	9000fc04 <xTaskRemoveFromEventList>
9000edca:	2800      	cmp	r0, #0
9000edcc:	d0f4      	beq.n	9000edb8 <xQueueSemaphoreTake+0x214>
						vTaskMissedYield();
9000edce:	f000 ffad 	bl	9000fd2c <vTaskMissedYield>
9000edd2:	e7f1      	b.n	9000edb8 <xQueueSemaphoreTake+0x214>
		pxQueue->cTxLock = queueUNLOCKED;
9000edd4:	23ff      	movs	r3, #255	@ 0xff
9000edd6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000edda:	f7ff f855 	bl	9000de88 <vPortExitCritical>
	taskENTER_CRITICAL();
9000edde:	f7ff f831 	bl	9000de44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ede2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000ede6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ede8:	2d00      	cmp	r5, #0
9000edea:	dd10      	ble.n	9000ee0e <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000edec:	f104 0810 	add.w	r8, r4, #16
9000edf0:	e003      	b.n	9000edfa <xQueueSemaphoreTake+0x256>
				--cRxLock;
9000edf2:	1e6b      	subs	r3, r5, #1
9000edf4:	b2da      	uxtb	r2, r3
9000edf6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000edf8:	b14a      	cbz	r2, 9000ee0e <xQueueSemaphoreTake+0x26a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000edfa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000edfc:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000edfe:	b133      	cbz	r3, 9000ee0e <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ee00:	f000 ff00 	bl	9000fc04 <xTaskRemoveFromEventList>
9000ee04:	2800      	cmp	r0, #0
9000ee06:	d0f4      	beq.n	9000edf2 <xQueueSemaphoreTake+0x24e>
					vTaskMissedYield();
9000ee08:	f000 ff90 	bl	9000fd2c <vTaskMissedYield>
9000ee0c:	e7f1      	b.n	9000edf2 <xQueueSemaphoreTake+0x24e>
		pxQueue->cRxLock = queueUNLOCKED;
9000ee0e:	23ff      	movs	r3, #255	@ 0xff
9000ee10:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000ee14:	f7ff f838 	bl	9000de88 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000ee18:	f000 fdd0 	bl	9000f9bc <xTaskResumeAll>
9000ee1c:	2800      	cmp	r0, #0
9000ee1e:	d191      	bne.n	9000ed44 <xQueueSemaphoreTake+0x1a0>
					portYIELD_WITHIN_API();
9000ee20:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ee24:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ee28:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ee2c:	f3bf 8f4f 	dsb	sy
9000ee30:	f3bf 8f6f 	isb	sy
9000ee34:	e786      	b.n	9000ed44 <xQueueSemaphoreTake+0x1a0>
9000ee36:	462f      	mov	r7, r5
9000ee38:	e6cc      	b.n	9000ebd4 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9000ee3a:	f7ff f803 	bl	9000de44 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000ee3e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000ee40:	b119      	cbz	r1, 9000ee4a <xQueueSemaphoreTake+0x2a6>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000ee42:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000ee44:	6819      	ldr	r1, [r3, #0]
9000ee46:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000ee4a:	68a0      	ldr	r0, [r4, #8]
9000ee4c:	f001 f808 	bl	9000fe60 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000ee50:	f7ff f81a 	bl	9000de88 <vPortExitCritical>
9000ee54:	e76c      	b.n	9000ed30 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
9000ee56:	f7fe fff5 	bl	9000de44 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000ee5a:	68a0      	ldr	r0, [r4, #8]
9000ee5c:	f000 ff7c 	bl	9000fd58 <xTaskPriorityInherit>
9000ee60:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000ee62:	f7ff f811 	bl	9000de88 <vPortExitCritical>
9000ee66:	e799      	b.n	9000ed9c <xQueueSemaphoreTake+0x1f8>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000ee68:	2f00      	cmp	r7, #0
9000ee6a:	d0f1      	beq.n	9000ee50 <xQueueSemaphoreTake+0x2ac>
9000ee6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ee70:	f383 8811 	msr	BASEPRI, r3
9000ee74:	f3bf 8f6f 	isb	sy
9000ee78:	f3bf 8f4f 	dsb	sy
9000ee7c:	e7fe      	b.n	9000ee7c <xQueueSemaphoreTake+0x2d8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000ee7e:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000ee80:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000ee82:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000ee84:	b12a      	cbz	r2, 9000ee92 <xQueueSemaphoreTake+0x2ee>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ee86:	6923      	ldr	r3, [r4, #16]
9000ee88:	b93b      	cbnz	r3, 9000ee9a <xQueueSemaphoreTake+0x2f6>
				taskEXIT_CRITICAL();
9000ee8a:	f7fe fffd 	bl	9000de88 <vPortExitCritical>
				return pdPASS;
9000ee8e:	2001      	movs	r0, #1
9000ee90:	e74f      	b.n	9000ed32 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000ee92:	f001 f835 	bl	9000ff00 <pvTaskIncrementMutexHeldCount>
9000ee96:	60a0      	str	r0, [r4, #8]
9000ee98:	e7f5      	b.n	9000ee86 <xQueueSemaphoreTake+0x2e2>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ee9a:	f104 0010 	add.w	r0, r4, #16
9000ee9e:	f000 feb1 	bl	9000fc04 <xTaskRemoveFromEventList>
9000eea2:	2800      	cmp	r0, #0
9000eea4:	d0f1      	beq.n	9000ee8a <xQueueSemaphoreTake+0x2e6>
						queueYIELD_IF_USING_PREEMPTION();
9000eea6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000eeaa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000eeae:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000eeb2:	f3bf 8f4f 	dsb	sy
9000eeb6:	f3bf 8f6f 	isb	sy
9000eeba:	e7e6      	b.n	9000ee8a <xQueueSemaphoreTake+0x2e6>

9000eebc <xQueueReceiveFromISR>:
{
9000eebc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000eec0:	b310      	cbz	r0, 9000ef08 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000eec2:	460f      	mov	r7, r1
9000eec4:	4604      	mov	r4, r0
9000eec6:	4616      	mov	r6, r2
9000eec8:	b191      	cbz	r1, 9000eef0 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000eeca:	f7ff f8ed 	bl	9000e0a8 <vPortValidateInterruptPriority>
	__asm volatile
9000eece:	f3ef 8911 	mrs	r9, BASEPRI
9000eed2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eed6:	f383 8811 	msr	BASEPRI, r3
9000eeda:	f3bf 8f6f 	isb	sy
9000eede:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000eee2:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000eee4:	b9cd      	cbnz	r5, 9000ef1a <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000eee6:	4628      	mov	r0, r5
	__asm volatile
9000eee8:	f389 8811 	msr	BASEPRI, r9
}
9000eeec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000eef0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000eef2:	2b00      	cmp	r3, #0
9000eef4:	d0e9      	beq.n	9000eeca <xQueueReceiveFromISR+0xe>
	__asm volatile
9000eef6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eefa:	f383 8811 	msr	BASEPRI, r3
9000eefe:	f3bf 8f6f 	isb	sy
9000ef02:	f3bf 8f4f 	dsb	sy
9000ef06:	e7fe      	b.n	9000ef06 <xQueueReceiveFromISR+0x4a>
9000ef08:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ef0c:	f383 8811 	msr	BASEPRI, r3
9000ef10:	f3bf 8f6f 	isb	sy
9000ef14:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000ef18:	e7fe      	b.n	9000ef18 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000ef1a:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000ef1e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000ef20:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000ef24:	b142      	cbz	r2, 9000ef38 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ef26:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000ef28:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ef2a:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000ef2c:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ef2e:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000ef30:	d21c      	bcs.n	9000ef6c <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000ef32:	4638      	mov	r0, r7
9000ef34:	f01b f98d 	bl	9002a252 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000ef38:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000ef3a:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000ef3e:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
9000ef40:	d006      	beq.n	9000ef50 <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000ef42:	f108 0301 	add.w	r3, r8, #1
9000ef46:	b25b      	sxtb	r3, r3
9000ef48:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
9000ef4c:	2001      	movs	r0, #1
9000ef4e:	e7cb      	b.n	9000eee8 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ef50:	6923      	ldr	r3, [r4, #16]
9000ef52:	2b00      	cmp	r3, #0
9000ef54:	d0fa      	beq.n	9000ef4c <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ef56:	f104 0010 	add.w	r0, r4, #16
9000ef5a:	f000 fe53 	bl	9000fc04 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000ef5e:	2e00      	cmp	r6, #0
9000ef60:	d0f4      	beq.n	9000ef4c <xQueueReceiveFromISR+0x90>
9000ef62:	2800      	cmp	r0, #0
9000ef64:	d0f2      	beq.n	9000ef4c <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000ef66:	2301      	movs	r3, #1
9000ef68:	6033      	str	r3, [r6, #0]
9000ef6a:	e7ef      	b.n	9000ef4c <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000ef6c:	6821      	ldr	r1, [r4, #0]
9000ef6e:	60e1      	str	r1, [r4, #12]
9000ef70:	e7df      	b.n	9000ef32 <xQueueReceiveFromISR+0x76>
9000ef72:	bf00      	nop
9000ef74:	0000      	movs	r0, r0
	...

9000ef78 <vQueueDelete>:
	configASSERT( pxQueue );
9000ef78:	b1e0      	cbz	r0, 9000efb4 <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000ef7a:	4b21      	ldr	r3, [pc, #132]	@ (9000f000 <vQueueDelete+0x88>)
9000ef7c:	685a      	ldr	r2, [r3, #4]
9000ef7e:	4290      	cmp	r0, r2
9000ef80:	d02b      	beq.n	9000efda <vQueueDelete+0x62>
9000ef82:	68da      	ldr	r2, [r3, #12]
9000ef84:	4290      	cmp	r0, r2
9000ef86:	d02a      	beq.n	9000efde <vQueueDelete+0x66>
9000ef88:	695a      	ldr	r2, [r3, #20]
9000ef8a:	4290      	cmp	r0, r2
9000ef8c:	d029      	beq.n	9000efe2 <vQueueDelete+0x6a>
9000ef8e:	69da      	ldr	r2, [r3, #28]
9000ef90:	4290      	cmp	r0, r2
9000ef92:	d028      	beq.n	9000efe6 <vQueueDelete+0x6e>
9000ef94:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000ef96:	4290      	cmp	r0, r2
9000ef98:	d027      	beq.n	9000efea <vQueueDelete+0x72>
9000ef9a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000ef9c:	4290      	cmp	r0, r2
9000ef9e:	d014      	beq.n	9000efca <vQueueDelete+0x52>
9000efa0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000efa2:	4290      	cmp	r0, r2
9000efa4:	d023      	beq.n	9000efee <vQueueDelete+0x76>
9000efa6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000efa8:	4290      	cmp	r0, r2
9000efaa:	d022      	beq.n	9000eff2 <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000efac:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
9000efb0:	b14b      	cbz	r3, 9000efc6 <vQueueDelete+0x4e>
}
9000efb2:	4770      	bx	lr
9000efb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000efb8:	f383 8811 	msr	BASEPRI, r3
9000efbc:	f3bf 8f6f 	isb	sy
9000efc0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000efc4:	e7fe      	b.n	9000efc4 <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000efc6:	f7fe be25 	b.w	9000dc14 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000efca:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000efcc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000efd0:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 9000eff8 <vQueueDelete+0x80>
9000efd4:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000efd8:	e7e8      	b.n	9000efac <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000efda:	2200      	movs	r2, #0
9000efdc:	e7f6      	b.n	9000efcc <vQueueDelete+0x54>
9000efde:	2201      	movs	r2, #1
9000efe0:	e7f4      	b.n	9000efcc <vQueueDelete+0x54>
9000efe2:	2202      	movs	r2, #2
9000efe4:	e7f2      	b.n	9000efcc <vQueueDelete+0x54>
9000efe6:	2203      	movs	r2, #3
9000efe8:	e7f0      	b.n	9000efcc <vQueueDelete+0x54>
9000efea:	2204      	movs	r2, #4
9000efec:	e7ee      	b.n	9000efcc <vQueueDelete+0x54>
9000efee:	2206      	movs	r2, #6
9000eff0:	e7ec      	b.n	9000efcc <vQueueDelete+0x54>
9000eff2:	2207      	movs	r2, #7
9000eff4:	e7ea      	b.n	9000efcc <vQueueDelete+0x54>
9000eff6:	bf00      	nop
	...
9000f000:	24022d60 	.word	0x24022d60

9000f004 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000f004:	4b12      	ldr	r3, [pc, #72]	@ (9000f050 <vQueueAddToRegistry+0x4c>)
9000f006:	681a      	ldr	r2, [r3, #0]
9000f008:	b17a      	cbz	r2, 9000f02a <vQueueAddToRegistry+0x26>
9000f00a:	689a      	ldr	r2, [r3, #8]
9000f00c:	b162      	cbz	r2, 9000f028 <vQueueAddToRegistry+0x24>
9000f00e:	691a      	ldr	r2, [r3, #16]
9000f010:	b192      	cbz	r2, 9000f038 <vQueueAddToRegistry+0x34>
9000f012:	699a      	ldr	r2, [r3, #24]
9000f014:	b192      	cbz	r2, 9000f03c <vQueueAddToRegistry+0x38>
9000f016:	6a1a      	ldr	r2, [r3, #32]
9000f018:	b192      	cbz	r2, 9000f040 <vQueueAddToRegistry+0x3c>
9000f01a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000f01c:	b192      	cbz	r2, 9000f044 <vQueueAddToRegistry+0x40>
9000f01e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000f020:	b192      	cbz	r2, 9000f048 <vQueueAddToRegistry+0x44>
9000f022:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000f024:	b192      	cbz	r2, 9000f04c <vQueueAddToRegistry+0x48>
	}
9000f026:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f028:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000f02a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000f02e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000f032:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000f036:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000f038:	2202      	movs	r2, #2
9000f03a:	e7f6      	b.n	9000f02a <vQueueAddToRegistry+0x26>
9000f03c:	2203      	movs	r2, #3
9000f03e:	e7f4      	b.n	9000f02a <vQueueAddToRegistry+0x26>
9000f040:	2204      	movs	r2, #4
9000f042:	e7f2      	b.n	9000f02a <vQueueAddToRegistry+0x26>
9000f044:	2205      	movs	r2, #5
9000f046:	e7f0      	b.n	9000f02a <vQueueAddToRegistry+0x26>
9000f048:	2206      	movs	r2, #6
9000f04a:	e7ee      	b.n	9000f02a <vQueueAddToRegistry+0x26>
9000f04c:	2207      	movs	r2, #7
9000f04e:	e7ec      	b.n	9000f02a <vQueueAddToRegistry+0x26>
9000f050:	24022d60 	.word	0x24022d60

9000f054 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000f054:	b570      	push	{r4, r5, r6, lr}
9000f056:	4605      	mov	r5, r0
9000f058:	460e      	mov	r6, r1
9000f05a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000f05c:	f7fe fef2 	bl	9000de44 <vPortEnterCritical>
9000f060:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000f064:	2bff      	cmp	r3, #255	@ 0xff
9000f066:	d102      	bne.n	9000f06e <vQueueWaitForMessageRestricted+0x1a>
9000f068:	2300      	movs	r3, #0
9000f06a:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
9000f06e:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000f072:	2bff      	cmp	r3, #255	@ 0xff
9000f074:	d102      	bne.n	9000f07c <vQueueWaitForMessageRestricted+0x28>
9000f076:	2300      	movs	r3, #0
9000f078:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
9000f07c:	f7fe ff04 	bl	9000de88 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000f080:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000f082:	2b00      	cmp	r3, #0
9000f084:	d043      	beq.n	9000f10e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000f086:	f7fe fedd 	bl	9000de44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f08a:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000f08e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f090:	2c00      	cmp	r4, #0
9000f092:	dd14      	ble.n	9000f0be <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f094:	f105 0624 	add.w	r6, r5, #36	@ 0x24
9000f098:	e003      	b.n	9000f0a2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000f09a:	1e63      	subs	r3, r4, #1
9000f09c:	b2da      	uxtb	r2, r3
9000f09e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f0a0:	b16a      	cbz	r2, 9000f0be <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f0a2:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f0a4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f0a6:	b153      	cbz	r3, 9000f0be <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f0a8:	f000 fdac 	bl	9000fc04 <xTaskRemoveFromEventList>
9000f0ac:	2800      	cmp	r0, #0
9000f0ae:	d0f4      	beq.n	9000f09a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000f0b0:	f000 fe3c 	bl	9000fd2c <vTaskMissedYield>
			--cTxLock;
9000f0b4:	1e63      	subs	r3, r4, #1
9000f0b6:	b2da      	uxtb	r2, r3
9000f0b8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f0ba:	2a00      	cmp	r2, #0
9000f0bc:	d1f1      	bne.n	9000f0a2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f0be:	23ff      	movs	r3, #255	@ 0xff
9000f0c0:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000f0c4:	f7fe fee0 	bl	9000de88 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f0c8:	f7fe febc 	bl	9000de44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f0cc:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000f0d0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f0d2:	2c00      	cmp	r4, #0
9000f0d4:	dd14      	ble.n	9000f100 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f0d6:	f105 0610 	add.w	r6, r5, #16
9000f0da:	e003      	b.n	9000f0e4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000f0dc:	1e63      	subs	r3, r4, #1
9000f0de:	b2da      	uxtb	r2, r3
9000f0e0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f0e2:	b16a      	cbz	r2, 9000f100 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f0e4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f0e6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f0e8:	b153      	cbz	r3, 9000f100 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f0ea:	f000 fd8b 	bl	9000fc04 <xTaskRemoveFromEventList>
9000f0ee:	2800      	cmp	r0, #0
9000f0f0:	d0f4      	beq.n	9000f0dc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000f0f2:	f000 fe1b 	bl	9000fd2c <vTaskMissedYield>
				--cRxLock;
9000f0f6:	1e63      	subs	r3, r4, #1
9000f0f8:	b2da      	uxtb	r2, r3
9000f0fa:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f0fc:	2a00      	cmp	r2, #0
9000f0fe:	d1f1      	bne.n	9000f0e4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000f100:	23ff      	movs	r3, #255	@ 0xff
9000f102:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000f106:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000f10a:	f7fe bebd 	b.w	9000de88 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000f10e:	4622      	mov	r2, r4
9000f110:	4631      	mov	r1, r6
9000f112:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000f116:	f000 fd2b 	bl	9000fb70 <vTaskPlaceOnEventListRestricted>
9000f11a:	e7b4      	b.n	9000f086 <vQueueWaitForMessageRestricted+0x32>

9000f11c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000f11c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000f120:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000f122:	f7fe fe8f 	bl	9000de44 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000f126:	4a34      	ldr	r2, [pc, #208]	@ (9000f1f8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
9000f128:	4e34      	ldr	r6, [pc, #208]	@ (9000f1fc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9000f12a:	6813      	ldr	r3, [r2, #0]
9000f12c:	3301      	adds	r3, #1
9000f12e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000f130:	6833      	ldr	r3, [r6, #0]
9000f132:	2b00      	cmp	r3, #0
9000f134:	d031      	beq.n	9000f19a <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000f136:	4c32      	ldr	r4, [pc, #200]	@ (9000f200 <prvAddNewTaskToReadyList+0xe4>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000f138:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
9000f13a:	6823      	ldr	r3, [r4, #0]
9000f13c:	b333      	cbz	r3, 9000f18c <prvAddNewTaskToReadyList+0x70>
9000f13e:	4f31      	ldr	r7, [pc, #196]	@ (9000f204 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000f140:	4a31      	ldr	r2, [pc, #196]	@ (9000f208 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000f142:	4932      	ldr	r1, [pc, #200]	@ (9000f20c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
9000f144:	6813      	ldr	r3, [r2, #0]
9000f146:	3301      	adds	r3, #1
9000f148:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000f14a:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000f14c:	680b      	ldr	r3, [r1, #0]
9000f14e:	4283      	cmp	r3, r0
9000f150:	d200      	bcs.n	9000f154 <prvAddNewTaskToReadyList+0x38>
9000f152:	6008      	str	r0, [r1, #0]
9000f154:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f158:	1d29      	adds	r1, r5, #4
9000f15a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000f15e:	f7fe fdcf 	bl	9000dd00 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000f162:	f7fe fe91 	bl	9000de88 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000f166:	6823      	ldr	r3, [r4, #0]
9000f168:	b173      	cbz	r3, 9000f188 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000f16a:	6832      	ldr	r2, [r6, #0]
9000f16c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000f16e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000f170:	429a      	cmp	r2, r3
9000f172:	d209      	bcs.n	9000f188 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000f174:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f178:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f17c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f180:	f3bf 8f4f 	dsb	sy
9000f184:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000f188:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000f18c:	6833      	ldr	r3, [r6, #0]
9000f18e:	4f1d      	ldr	r7, [pc, #116]	@ (9000f204 <prvAddNewTaskToReadyList+0xe8>)
9000f190:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f192:	4283      	cmp	r3, r0
9000f194:	d8d4      	bhi.n	9000f140 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000f196:	6035      	str	r5, [r6, #0]
9000f198:	e7d2      	b.n	9000f140 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000f19a:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000f19c:	6813      	ldr	r3, [r2, #0]
9000f19e:	2b01      	cmp	r3, #1
9000f1a0:	d003      	beq.n	9000f1aa <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000f1a2:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000f1a4:	4f17      	ldr	r7, [pc, #92]	@ (9000f204 <prvAddNewTaskToReadyList+0xe8>)
9000f1a6:	4c16      	ldr	r4, [pc, #88]	@ (9000f200 <prvAddNewTaskToReadyList+0xe4>)
9000f1a8:	e7ca      	b.n	9000f140 <prvAddNewTaskToReadyList+0x24>
9000f1aa:	4f16      	ldr	r7, [pc, #88]	@ (9000f204 <prvAddNewTaskToReadyList+0xe8>)
9000f1ac:	463c      	mov	r4, r7
9000f1ae:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000f1b2:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000f1b4:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000f1b6:	f7fe fd93 	bl	9000dce0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000f1ba:	45a0      	cmp	r8, r4
9000f1bc:	d1f9      	bne.n	9000f1b2 <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
9000f1be:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 9000f224 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000f1c2:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 9000f228 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
9000f1c6:	4648      	mov	r0, r9
9000f1c8:	4c0d      	ldr	r4, [pc, #52]	@ (9000f200 <prvAddNewTaskToReadyList+0xe4>)
9000f1ca:	f7fe fd89 	bl	9000dce0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000f1ce:	4640      	mov	r0, r8
9000f1d0:	f7fe fd86 	bl	9000dce0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000f1d4:	480e      	ldr	r0, [pc, #56]	@ (9000f210 <prvAddNewTaskToReadyList+0xf4>)
9000f1d6:	f7fe fd83 	bl	9000dce0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000f1da:	480e      	ldr	r0, [pc, #56]	@ (9000f214 <prvAddNewTaskToReadyList+0xf8>)
9000f1dc:	f7fe fd80 	bl	9000dce0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000f1e0:	480d      	ldr	r0, [pc, #52]	@ (9000f218 <prvAddNewTaskToReadyList+0xfc>)
9000f1e2:	f7fe fd7d 	bl	9000dce0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000f1e6:	4b0d      	ldr	r3, [pc, #52]	@ (9000f21c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000f1e8:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000f1ea:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000f1ee:	4b0c      	ldr	r3, [pc, #48]	@ (9000f220 <prvAddNewTaskToReadyList+0x104>)
9000f1f0:	f8c3 8000 	str.w	r8, [r3]
}
9000f1f4:	e7a4      	b.n	9000f140 <prvAddNewTaskToReadyList+0x24>
9000f1f6:	bf00      	nop
9000f1f8:	24022dc4 	.word	0x24022dc4
9000f1fc:	24023298 	.word	0x24023298
9000f200:	24022db8 	.word	0x24022db8
9000f204:	24022e38 	.word	0x24022e38
9000f208:	24022da8 	.word	0x24022da8
9000f20c:	24022dbc 	.word	0x24022dbc
9000f210:	24022df4 	.word	0x24022df4
9000f214:	24022de0 	.word	0x24022de0
9000f218:	24022dc8 	.word	0x24022dc8
9000f21c:	24022e0c 	.word	0x24022e0c
9000f220:	24022e08 	.word	0x24022e08
9000f224:	24022e24 	.word	0x24022e24
9000f228:	24022e10 	.word	0x24022e10

9000f22c <prvIdleTask>:
{
9000f22c:	b580      	push	{r7, lr}
9000f22e:	4c22      	ldr	r4, [pc, #136]	@ (9000f2b8 <prvIdleTask+0x8c>)
9000f230:	4e22      	ldr	r6, [pc, #136]	@ (9000f2bc <prvIdleTask+0x90>)
9000f232:	4d23      	ldr	r5, [pc, #140]	@ (9000f2c0 <prvIdleTask+0x94>)
9000f234:	4f23      	ldr	r7, [pc, #140]	@ (9000f2c4 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000f236:	6823      	ldr	r3, [r4, #0]
9000f238:	b353      	cbz	r3, 9000f290 <prvIdleTask+0x64>
		{
			taskENTER_CRITICAL();
9000f23a:	f7fe fe03 	bl	9000de44 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f23e:	68f3      	ldr	r3, [r6, #12]
9000f240:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000f244:	f108 0004 	add.w	r0, r8, #4
9000f248:	f7fe fd80 	bl	9000dd4c <uxListRemove>
				--uxCurrentNumberOfTasks;
9000f24c:	682b      	ldr	r3, [r5, #0]
9000f24e:	3b01      	subs	r3, #1
9000f250:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000f252:	6823      	ldr	r3, [r4, #0]
9000f254:	3b01      	subs	r3, #1
9000f256:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9000f258:	f7fe fe16 	bl	9000de88 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000f25c:	f898 305d 	ldrb.w	r3, [r8, #93]	@ 0x5d
9000f260:	b163      	cbz	r3, 9000f27c <prvIdleTask+0x50>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000f262:	2b01      	cmp	r3, #1
9000f264:	d024      	beq.n	9000f2b0 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000f266:	2b02      	cmp	r3, #2
9000f268:	d0e5      	beq.n	9000f236 <prvIdleTask+0xa>
9000f26a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f26e:	f383 8811 	msr	BASEPRI, r3
9000f272:	f3bf 8f6f 	isb	sy
9000f276:	f3bf 8f4f 	dsb	sy
9000f27a:	e7fe      	b.n	9000f27a <prvIdleTask+0x4e>
				vPortFree( pxTCB->pxStack );
9000f27c:	f8d8 0030 	ldr.w	r0, [r8, #48]	@ 0x30
9000f280:	f7fe fcc8 	bl	9000dc14 <vPortFree>
				vPortFree( pxTCB );
9000f284:	4640      	mov	r0, r8
9000f286:	f7fe fcc5 	bl	9000dc14 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000f28a:	6823      	ldr	r3, [r4, #0]
9000f28c:	2b00      	cmp	r3, #0
9000f28e:	d1d4      	bne.n	9000f23a <prvIdleTask+0xe>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000f290:	683b      	ldr	r3, [r7, #0]
9000f292:	2b01      	cmp	r3, #1
9000f294:	d909      	bls.n	9000f2aa <prvIdleTask+0x7e>
				taskYIELD();
9000f296:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f29a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f29e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f2a2:	f3bf 8f4f 	dsb	sy
9000f2a6:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000f2aa:	f7f4 fa25 	bl	900036f8 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000f2ae:	e7c2      	b.n	9000f236 <prvIdleTask+0xa>
				vPortFree( pxTCB );
9000f2b0:	4640      	mov	r0, r8
9000f2b2:	f7fe fcaf 	bl	9000dc14 <vPortFree>
9000f2b6:	e7be      	b.n	9000f236 <prvIdleTask+0xa>
9000f2b8:	24022ddc 	.word	0x24022ddc
9000f2bc:	24022de0 	.word	0x24022de0
9000f2c0:	24022dc4 	.word	0x24022dc4
9000f2c4:	24022e38 	.word	0x24022e38

9000f2c8 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000f2c8:	4b49      	ldr	r3, [pc, #292]	@ (9000f3f0 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
9000f2ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000f2ce:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000f2d0:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000f2d2:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000f2d4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000f2d6:	2e00      	cmp	r6, #0
9000f2d8:	d03e      	beq.n	9000f358 <xTaskIncrementTick.part.0+0x90>
9000f2da:	4b46      	ldr	r3, [pc, #280]	@ (9000f3f4 <xTaskIncrementTick.part.0+0x12c>)
9000f2dc:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
9000f2de:	681b      	ldr	r3, [r3, #0]
9000f2e0:	429e      	cmp	r6, r3
9000f2e2:	d346      	bcc.n	9000f372 <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f2e4:	4f44      	ldr	r7, [pc, #272]	@ (9000f3f8 <xTaskIncrementTick.part.0+0x130>)
9000f2e6:	683b      	ldr	r3, [r7, #0]
9000f2e8:	681d      	ldr	r5, [r3, #0]
9000f2ea:	2d00      	cmp	r5, #0
9000f2ec:	d077      	beq.n	9000f3de <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
9000f2ee:	2500      	movs	r5, #0
9000f2f0:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 9000f408 <xTaskIncrementTick.part.0+0x140>
9000f2f4:	f8df a114 	ldr.w	sl, [pc, #276]	@ 9000f40c <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
9000f2f8:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 9000f410 <xTaskIncrementTick.part.0+0x148>
9000f2fc:	e020      	b.n	9000f340 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000f2fe:	f7fe fd25 	bl	9000dd4c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000f302:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000f304:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000f308:	b10b      	cbz	r3, 9000f30e <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000f30a:	f7fe fd1f 	bl	9000dd4c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000f30e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000f310:	4659      	mov	r1, fp
9000f312:	f8d8 2000 	ldr.w	r2, [r8]
9000f316:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000f31a:	4293      	cmp	r3, r2
9000f31c:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000f320:	d901      	bls.n	9000f326 <xTaskIncrementTick.part.0+0x5e>
9000f322:	f8c8 3000 	str.w	r3, [r8]
9000f326:	f7fe fceb 	bl	9000dd00 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000f32a:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f32e:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000f330:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9000f332:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f334:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000f336:	4291      	cmp	r1, r2
9000f338:	bf28      	it	cs
9000f33a:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f33c:	2b00      	cmp	r3, #0
9000f33e:	d052      	beq.n	9000f3e6 <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f340:	683b      	ldr	r3, [r7, #0]
9000f342:	68db      	ldr	r3, [r3, #12]
9000f344:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000f346:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000f348:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
9000f34c:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000f34e:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
9000f350:	d2d5      	bcs.n	9000f2fe <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
9000f352:	9a01      	ldr	r2, [sp, #4]
9000f354:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000f356:	e011      	b.n	9000f37c <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
9000f358:	4b27      	ldr	r3, [pc, #156]	@ (9000f3f8 <xTaskIncrementTick.part.0+0x130>)
9000f35a:	681a      	ldr	r2, [r3, #0]
9000f35c:	6812      	ldr	r2, [r2, #0]
9000f35e:	b30a      	cbz	r2, 9000f3a4 <xTaskIncrementTick.part.0+0xdc>
9000f360:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f364:	f383 8811 	msr	BASEPRI, r3
9000f368:	f3bf 8f6f 	isb	sy
9000f36c:	f3bf 8f4f 	dsb	sy
9000f370:	e7fe      	b.n	9000f370 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
9000f372:	2500      	movs	r5, #0
9000f374:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 9000f408 <xTaskIncrementTick.part.0+0x140>
9000f378:	f8df a090 	ldr.w	sl, [pc, #144]	@ 9000f40c <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000f37c:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9000f380:	491e      	ldr	r1, [pc, #120]	@ (9000f3fc <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000f382:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f384:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000f388:	009b      	lsls	r3, r3, #2
9000f38a:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9000f38e:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9000f390:	2a02      	cmp	r2, #2
9000f392:	bf28      	it	cs
9000f394:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9000f396:	2b00      	cmp	r3, #0
}
9000f398:	bf0c      	ite	eq
9000f39a:	4628      	moveq	r0, r5
9000f39c:	2001      	movne	r0, #1
9000f39e:	b003      	add	sp, #12
9000f3a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9000f3a4:	4a16      	ldr	r2, [pc, #88]	@ (9000f400 <xTaskIncrementTick.part.0+0x138>)
9000f3a6:	6818      	ldr	r0, [r3, #0]
9000f3a8:	6811      	ldr	r1, [r2, #0]
9000f3aa:	6019      	str	r1, [r3, #0]
9000f3ac:	4915      	ldr	r1, [pc, #84]	@ (9000f404 <xTaskIncrementTick.part.0+0x13c>)
9000f3ae:	6010      	str	r0, [r2, #0]
9000f3b0:	680a      	ldr	r2, [r1, #0]
9000f3b2:	3201      	adds	r2, #1
9000f3b4:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f3b6:	681a      	ldr	r2, [r3, #0]
9000f3b8:	6812      	ldr	r2, [r2, #0]
9000f3ba:	b93a      	cbnz	r2, 9000f3cc <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000f3bc:	4b0d      	ldr	r3, [pc, #52]	@ (9000f3f4 <xTaskIncrementTick.part.0+0x12c>)
9000f3be:	461a      	mov	r2, r3
9000f3c0:	9301      	str	r3, [sp, #4]
9000f3c2:	f04f 33ff 	mov.w	r3, #4294967295
9000f3c6:	6013      	str	r3, [r2, #0]
9000f3c8:	4613      	mov	r3, r2
9000f3ca:	e788      	b.n	9000f2de <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f3cc:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000f3ce:	4a09      	ldr	r2, [pc, #36]	@ (9000f3f4 <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f3d0:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000f3d2:	9201      	str	r2, [sp, #4]
9000f3d4:	68db      	ldr	r3, [r3, #12]
9000f3d6:	685b      	ldr	r3, [r3, #4]
9000f3d8:	6013      	str	r3, [r2, #0]
9000f3da:	4613      	mov	r3, r2
	}
}
9000f3dc:	e77f      	b.n	9000f2de <xTaskIncrementTick.part.0+0x16>
9000f3de:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 9000f408 <xTaskIncrementTick.part.0+0x140>
9000f3e2:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000f40c <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f3e6:	f04f 33ff 	mov.w	r3, #4294967295
9000f3ea:	9a01      	ldr	r2, [sp, #4]
9000f3ec:	6013      	str	r3, [r2, #0]
					break;
9000f3ee:	e7c5      	b.n	9000f37c <xTaskIncrementTick.part.0+0xb4>
9000f3f0:	24022dc0 	.word	0x24022dc0
9000f3f4:	24022da4 	.word	0x24022da4
9000f3f8:	24022e0c 	.word	0x24022e0c
9000f3fc:	24022db0 	.word	0x24022db0
9000f400:	24022e08 	.word	0x24022e08
9000f404:	24022dac 	.word	0x24022dac
9000f408:	24022e38 	.word	0x24022e38
9000f40c:	24023298 	.word	0x24023298
9000f410:	24022dbc 	.word	0x24022dbc

9000f414 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
9000f414:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9000f418:	4d43      	ldr	r5, [pc, #268]	@ (9000f528 <xTaskResumeAll.part.0+0x114>)
	taskENTER_CRITICAL();
9000f41a:	f7fe fd13 	bl	9000de44 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000f41e:	682b      	ldr	r3, [r5, #0]
9000f420:	3b01      	subs	r3, #1
9000f422:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f424:	682b      	ldr	r3, [r5, #0]
9000f426:	2b00      	cmp	r3, #0
9000f428:	d168      	bne.n	9000f4fc <xTaskResumeAll.part.0+0xe8>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000f42a:	4b40      	ldr	r3, [pc, #256]	@ (9000f52c <xTaskResumeAll.part.0+0x118>)
9000f42c:	681b      	ldr	r3, [r3, #0]
9000f42e:	2b00      	cmp	r3, #0
9000f430:	d064      	beq.n	9000f4fc <xTaskResumeAll.part.0+0xe8>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000f432:	4e3f      	ldr	r6, [pc, #252]	@ (9000f530 <xTaskResumeAll.part.0+0x11c>)
9000f434:	6833      	ldr	r3, [r6, #0]
9000f436:	2b00      	cmp	r3, #0
9000f438:	d073      	beq.n	9000f522 <xTaskResumeAll.part.0+0x10e>
9000f43a:	4f3e      	ldr	r7, [pc, #248]	@ (9000f534 <xTaskResumeAll.part.0+0x120>)
9000f43c:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 9000f544 <xTaskResumeAll.part.0+0x130>
9000f440:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 9000f548 <xTaskResumeAll.part.0+0x134>
9000f444:	f8df a104 	ldr.w	sl, [pc, #260]	@ 9000f54c <xTaskResumeAll.part.0+0x138>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f448:	68f3      	ldr	r3, [r6, #12]
9000f44a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000f44e:	f10b 0404 	add.w	r4, fp, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000f452:	f10b 0018 	add.w	r0, fp, #24
9000f456:	f7fe fc79 	bl	9000dd4c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000f45a:	4620      	mov	r0, r4
9000f45c:	f7fe fc76 	bl	9000dd4c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000f460:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
9000f464:	4621      	mov	r1, r4
9000f466:	683c      	ldr	r4, [r7, #0]
9000f468:	eb02 0082 	add.w	r0, r2, r2, lsl #2
9000f46c:	42a2      	cmp	r2, r4
9000f46e:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000f472:	d900      	bls.n	9000f476 <xTaskResumeAll.part.0+0x62>
9000f474:	603a      	str	r2, [r7, #0]
9000f476:	f7fe fc43 	bl	9000dd00 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000f47a:	f8d8 1000 	ldr.w	r1, [r8]
9000f47e:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
9000f482:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
9000f484:	429a      	cmp	r2, r3
9000f486:	d33f      	bcc.n	9000f508 <xTaskResumeAll.part.0+0xf4>
						xYieldPending = pdTRUE;
9000f488:	2301      	movs	r3, #1
9000f48a:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000f48e:	6833      	ldr	r3, [r6, #0]
9000f490:	2b00      	cmp	r3, #0
9000f492:	d1d9      	bne.n	9000f448 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f494:	4b28      	ldr	r3, [pc, #160]	@ (9000f538 <xTaskResumeAll.part.0+0x124>)
9000f496:	681a      	ldr	r2, [r3, #0]
9000f498:	6812      	ldr	r2, [r2, #0]
9000f49a:	2a00      	cmp	r2, #0
9000f49c:	d03c      	beq.n	9000f518 <xTaskResumeAll.part.0+0x104>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f49e:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000f4a0:	4b26      	ldr	r3, [pc, #152]	@ (9000f53c <xTaskResumeAll.part.0+0x128>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f4a2:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000f4a4:	68d2      	ldr	r2, [r2, #12]
9000f4a6:	6852      	ldr	r2, [r2, #4]
9000f4a8:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000f4aa:	4e25      	ldr	r6, [pc, #148]	@ (9000f540 <xTaskResumeAll.part.0+0x12c>)
9000f4ac:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000f4ae:	b194      	cbz	r4, 9000f4d6 <xTaskResumeAll.part.0+0xc2>
								xYieldPending = pdTRUE;
9000f4b0:	2701      	movs	r7, #1
9000f4b2:	e006      	b.n	9000f4c2 <xTaskResumeAll.part.0+0xae>
9000f4b4:	f7ff ff08 	bl	9000f2c8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9000f4b8:	b108      	cbz	r0, 9000f4be <xTaskResumeAll.part.0+0xaa>
								xYieldPending = pdTRUE;
9000f4ba:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000f4be:	3c01      	subs	r4, #1
9000f4c0:	d008      	beq.n	9000f4d4 <xTaskResumeAll.part.0+0xc0>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f4c2:	682b      	ldr	r3, [r5, #0]
9000f4c4:	2b00      	cmp	r3, #0
9000f4c6:	d0f5      	beq.n	9000f4b4 <xTaskResumeAll.part.0+0xa0>
		++xPendedTicks;
9000f4c8:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000f4ca:	3c01      	subs	r4, #1
		++xPendedTicks;
9000f4cc:	f103 0301 	add.w	r3, r3, #1
9000f4d0:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000f4d2:	d1f6      	bne.n	9000f4c2 <xTaskResumeAll.part.0+0xae>
						xPendedTicks = 0;
9000f4d4:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9000f4d6:	f8da 3000 	ldr.w	r3, [sl]
9000f4da:	b17b      	cbz	r3, 9000f4fc <xTaskResumeAll.part.0+0xe8>
					taskYIELD_IF_USING_PREEMPTION();
9000f4dc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f4e0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f4e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f4e8:	f3bf 8f4f 	dsb	sy
9000f4ec:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000f4f0:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9000f4f2:	f7fe fcc9 	bl	9000de88 <vPortExitCritical>
}
9000f4f6:	4620      	mov	r0, r4
9000f4f8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
9000f4fc:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
9000f4fe:	f7fe fcc3 	bl	9000de88 <vPortExitCritical>
}
9000f502:	4620      	mov	r0, r4
9000f504:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000f508:	6833      	ldr	r3, [r6, #0]
9000f50a:	2b00      	cmp	r3, #0
9000f50c:	d19c      	bne.n	9000f448 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f50e:	4b0a      	ldr	r3, [pc, #40]	@ (9000f538 <xTaskResumeAll.part.0+0x124>)
9000f510:	681a      	ldr	r2, [r3, #0]
9000f512:	6812      	ldr	r2, [r2, #0]
9000f514:	2a00      	cmp	r2, #0
9000f516:	d1c2      	bne.n	9000f49e <xTaskResumeAll.part.0+0x8a>
		xNextTaskUnblockTime = portMAX_DELAY;
9000f518:	4b08      	ldr	r3, [pc, #32]	@ (9000f53c <xTaskResumeAll.part.0+0x128>)
9000f51a:	f04f 32ff 	mov.w	r2, #4294967295
9000f51e:	601a      	str	r2, [r3, #0]
9000f520:	e7c3      	b.n	9000f4aa <xTaskResumeAll.part.0+0x96>
9000f522:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000f54c <xTaskResumeAll.part.0+0x138>
9000f526:	e7c0      	b.n	9000f4aa <xTaskResumeAll.part.0+0x96>
9000f528:	24022da0 	.word	0x24022da0
9000f52c:	24022dc4 	.word	0x24022dc4
9000f530:	24022df4 	.word	0x24022df4
9000f534:	24022dbc 	.word	0x24022dbc
9000f538:	24022e0c 	.word	0x24022e0c
9000f53c:	24022da4 	.word	0x24022da4
9000f540:	24022db4 	.word	0x24022db4
9000f544:	24022e38 	.word	0x24022e38
9000f548:	24023298 	.word	0x24023298
9000f54c:	24022db0 	.word	0x24022db0

9000f550 <xTaskCreateStatic>:
	{
9000f550:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f554:	b083      	sub	sp, #12
9000f556:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
9000f558:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	@ 0x2c
9000f55c:	b1bb      	cbz	r3, 9000f58e <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
9000f55e:	b16c      	cbz	r4, 9000f57c <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
9000f560:	2360      	movs	r3, #96	@ 0x60
9000f562:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
9000f564:	9b01      	ldr	r3, [sp, #4]
9000f566:	2b60      	cmp	r3, #96	@ 0x60
9000f568:	d01a      	beq.n	9000f5a0 <xTaskCreateStatic+0x50>
9000f56a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f56e:	f383 8811 	msr	BASEPRI, r3
9000f572:	f3bf 8f6f 	isb	sy
9000f576:	f3bf 8f4f 	dsb	sy
9000f57a:	e7fe      	b.n	9000f57a <xTaskCreateStatic+0x2a>
9000f57c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f580:	f383 8811 	msr	BASEPRI, r3
9000f584:	f3bf 8f6f 	isb	sy
9000f588:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000f58c:	e7fe      	b.n	9000f58c <xTaskCreateStatic+0x3c>
9000f58e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f592:	f383 8811 	msr	BASEPRI, r3
9000f596:	f3bf 8f6f 	isb	sy
9000f59a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000f59e:	e7fe      	b.n	9000f59e <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f5a0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f5a2:	0096      	lsls	r6, r2, #2
9000f5a4:	4607      	mov	r7, r0
9000f5a6:	460d      	mov	r5, r1
9000f5a8:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f5aa:	6323      	str	r3, [r4, #48]	@ 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000f5ac:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f5ae:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f5b0:	4632      	mov	r2, r6
9000f5b2:	21a5      	movs	r1, #165	@ 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f5b4:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f5b8:	f01a fd6a 	bl	9002a090 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f5bc:	1f32      	subs	r2, r6, #4
9000f5be:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000f5c0:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f5c2:	f023 0607 	bic.w	r6, r3, #7
	if( pcName != NULL )
9000f5c6:	2d00      	cmp	r5, #0
9000f5c8:	d068      	beq.n	9000f69c <xTaskCreateStatic+0x14c>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f5ca:	782b      	ldrb	r3, [r5, #0]
9000f5cc:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000f5d0:	2b00      	cmp	r3, #0
9000f5d2:	d036      	beq.n	9000f642 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f5d4:	786b      	ldrb	r3, [r5, #1]
9000f5d6:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000f5da:	b393      	cbz	r3, 9000f642 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f5dc:	78ab      	ldrb	r3, [r5, #2]
9000f5de:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000f5e2:	b373      	cbz	r3, 9000f642 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f5e4:	78eb      	ldrb	r3, [r5, #3]
9000f5e6:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000f5ea:	b353      	cbz	r3, 9000f642 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f5ec:	792b      	ldrb	r3, [r5, #4]
9000f5ee:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000f5f2:	b333      	cbz	r3, 9000f642 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f5f4:	796b      	ldrb	r3, [r5, #5]
9000f5f6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000f5fa:	b313      	cbz	r3, 9000f642 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f5fc:	79ab      	ldrb	r3, [r5, #6]
9000f5fe:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000f602:	b1f3      	cbz	r3, 9000f642 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f604:	79eb      	ldrb	r3, [r5, #7]
9000f606:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000f60a:	b1d3      	cbz	r3, 9000f642 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f60c:	7a2b      	ldrb	r3, [r5, #8]
9000f60e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000f612:	b1b3      	cbz	r3, 9000f642 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f614:	7a6b      	ldrb	r3, [r5, #9]
9000f616:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000f61a:	b193      	cbz	r3, 9000f642 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f61c:	7aab      	ldrb	r3, [r5, #10]
9000f61e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000f622:	b173      	cbz	r3, 9000f642 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f624:	7aeb      	ldrb	r3, [r5, #11]
9000f626:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000f62a:	b153      	cbz	r3, 9000f642 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f62c:	7b2b      	ldrb	r3, [r5, #12]
9000f62e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000f632:	b133      	cbz	r3, 9000f642 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f634:	7b6b      	ldrb	r3, [r5, #13]
9000f636:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000f63a:	b113      	cbz	r3, 9000f642 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f63c:	7bab      	ldrb	r3, [r5, #14]
9000f63e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f642:	2300      	movs	r3, #0
9000f644:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f648:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
		pxNewTCB->uxMutexesHeld = 0;
9000f64a:	f04f 0900 	mov.w	r9, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f64e:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f650:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000f652:	f8c4 9050 	str.w	r9, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f656:	bf28      	it	cs
9000f658:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000f65a:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000f65c:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f65e:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f662:	f7fe fb49 	bl	9000dcf8 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f666:	f104 0018 	add.w	r0, r4, #24
9000f66a:	f7fe fb45 	bl	9000dcf8 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f66e:	4642      	mov	r2, r8
9000f670:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
9000f672:	f8c4 9058 	str.w	r9, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f676:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f678:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f67a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f67c:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f67e:	f8c4 9054 	str.w	r9, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f682:	f884 905c 	strb.w	r9, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f686:	f7fe fbb3 	bl	9000ddf0 <pxPortInitialiseStack>
9000f68a:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000f68c:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f68e:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f690:	f7ff fd44 	bl	9000f11c <prvAddNewTaskToReadyList>
	}
9000f694:	4620      	mov	r0, r4
9000f696:	b003      	add	sp, #12
9000f698:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000f69c:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000f6a0:	e7d2      	b.n	9000f648 <xTaskCreateStatic+0xf8>
9000f6a2:	bf00      	nop

9000f6a4 <xTaskCreate>:
	{
9000f6a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000f6a8:	0096      	lsls	r6, r2, #2
	{
9000f6aa:	4680      	mov	r8, r0
9000f6ac:	460d      	mov	r5, r1
9000f6ae:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000f6b0:	4630      	mov	r0, r6
9000f6b2:	f7fe f9f3 	bl	9000da9c <pvPortMalloc>
			if( pxStack != NULL )
9000f6b6:	2800      	cmp	r0, #0
9000f6b8:	d07f      	beq.n	9000f7ba <xTaskCreate+0x116>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000f6ba:	4607      	mov	r7, r0
9000f6bc:	2060      	movs	r0, #96	@ 0x60
9000f6be:	f7fe f9ed 	bl	9000da9c <pvPortMalloc>
				if( pxNewTCB != NULL )
9000f6c2:	4604      	mov	r4, r0
9000f6c4:	2800      	cmp	r0, #0
9000f6c6:	d075      	beq.n	9000f7b4 <xTaskCreate+0x110>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000f6c8:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9000f6ca:	6307      	str	r7, [r0, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f6cc:	4632      	mov	r2, r6
9000f6ce:	4638      	mov	r0, r7
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000f6d0:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f6d4:	21a5      	movs	r1, #165	@ 0xa5
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f6d6:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f6d8:	f01a fcda 	bl	9002a090 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f6dc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000f6de:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f6e0:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
9000f6e4:	2d00      	cmp	r5, #0
9000f6e6:	d06c      	beq.n	9000f7c2 <xTaskCreate+0x11e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f6e8:	782b      	ldrb	r3, [r5, #0]
9000f6ea:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000f6ee:	2b00      	cmp	r3, #0
9000f6f0:	d036      	beq.n	9000f760 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f6f2:	786b      	ldrb	r3, [r5, #1]
9000f6f4:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000f6f8:	b393      	cbz	r3, 9000f760 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f6fa:	78ab      	ldrb	r3, [r5, #2]
9000f6fc:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000f700:	b373      	cbz	r3, 9000f760 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f702:	78eb      	ldrb	r3, [r5, #3]
9000f704:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000f708:	b353      	cbz	r3, 9000f760 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f70a:	792b      	ldrb	r3, [r5, #4]
9000f70c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000f710:	b333      	cbz	r3, 9000f760 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f712:	796b      	ldrb	r3, [r5, #5]
9000f714:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000f718:	b313      	cbz	r3, 9000f760 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f71a:	79ab      	ldrb	r3, [r5, #6]
9000f71c:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000f720:	b1f3      	cbz	r3, 9000f760 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f722:	79eb      	ldrb	r3, [r5, #7]
9000f724:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000f728:	b1d3      	cbz	r3, 9000f760 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f72a:	7a2b      	ldrb	r3, [r5, #8]
9000f72c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000f730:	b1b3      	cbz	r3, 9000f760 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f732:	7a6b      	ldrb	r3, [r5, #9]
9000f734:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000f738:	b193      	cbz	r3, 9000f760 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f73a:	7aab      	ldrb	r3, [r5, #10]
9000f73c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000f740:	b173      	cbz	r3, 9000f760 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f742:	7aeb      	ldrb	r3, [r5, #11]
9000f744:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000f748:	b153      	cbz	r3, 9000f760 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f74a:	7b2b      	ldrb	r3, [r5, #12]
9000f74c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000f750:	b133      	cbz	r3, 9000f760 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f752:	7b6b      	ldrb	r3, [r5, #13]
9000f754:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000f758:	b113      	cbz	r3, 9000f760 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f75a:	7bab      	ldrb	r3, [r5, #14]
9000f75c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f760:	2300      	movs	r3, #0
9000f762:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f766:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000f768:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f76a:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f76c:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000f76e:	6527      	str	r7, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f770:	bf28      	it	cs
9000f772:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000f774:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000f776:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f778:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f77c:	f7fe fabc 	bl	9000dcf8 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f780:	f104 0018 	add.w	r0, r4, #24
9000f784:	f7fe fab8 	bl	9000dcf8 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
9000f788:	65a7      	str	r7, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f78a:	464a      	mov	r2, r9
9000f78c:	4641      	mov	r1, r8
9000f78e:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f790:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f792:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f794:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f796:	6567      	str	r7, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f798:	f884 705c 	strb.w	r7, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f79c:	f7fe fb28 	bl	9000ddf0 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
9000f7a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f7a2:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000f7a4:	b103      	cbz	r3, 9000f7a8 <xTaskCreate+0x104>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000f7a6:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f7a8:	4620      	mov	r0, r4
9000f7aa:	f7ff fcb7 	bl	9000f11c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000f7ae:	2001      	movs	r0, #1
	}
9000f7b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
9000f7b4:	4638      	mov	r0, r7
9000f7b6:	f7fe fa2d 	bl	9000dc14 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000f7ba:	f04f 30ff 	mov.w	r0, #4294967295
	}
9000f7be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000f7c2:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000f7c6:	e7ce      	b.n	9000f766 <xTaskCreate+0xc2>

9000f7c8 <vTaskDelay>:
	{
9000f7c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9000f7ca:	b950      	cbnz	r0, 9000f7e2 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9000f7cc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f7d0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f7d4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f7d8:	f3bf 8f4f 	dsb	sy
9000f7dc:	f3bf 8f6f 	isb	sy
	}
9000f7e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
9000f7e2:	4d1e      	ldr	r5, [pc, #120]	@ (9000f85c <vTaskDelay+0x94>)
9000f7e4:	682b      	ldr	r3, [r5, #0]
9000f7e6:	b143      	cbz	r3, 9000f7fa <vTaskDelay+0x32>
9000f7e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f7ec:	f383 8811 	msr	BASEPRI, r3
9000f7f0:	f3bf 8f6f 	isb	sy
9000f7f4:	f3bf 8f4f 	dsb	sy
9000f7f8:	e7fe      	b.n	9000f7f8 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9000f7fa:	682b      	ldr	r3, [r5, #0]
9000f7fc:	4604      	mov	r4, r0
9000f7fe:	3301      	adds	r3, #1
9000f800:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
9000f802:	4b17      	ldr	r3, [pc, #92]	@ (9000f860 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f804:	4e17      	ldr	r6, [pc, #92]	@ (9000f864 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
9000f806:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f808:	6830      	ldr	r0, [r6, #0]
9000f80a:	3004      	adds	r0, #4
9000f80c:	f7fe fa9e 	bl	9000dd4c <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f810:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f812:	6833      	ldr	r3, [r6, #0]
9000f814:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
9000f816:	d315      	bcc.n	9000f844 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f818:	4b13      	ldr	r3, [pc, #76]	@ (9000f868 <vTaskDelay+0xa0>)
9000f81a:	6818      	ldr	r0, [r3, #0]
9000f81c:	6831      	ldr	r1, [r6, #0]
9000f81e:	3104      	adds	r1, #4
9000f820:	f7fe fa7c 	bl	9000dd1c <vListInsert>
	configASSERT( uxSchedulerSuspended );
9000f824:	682b      	ldr	r3, [r5, #0]
9000f826:	b943      	cbnz	r3, 9000f83a <vTaskDelay+0x72>
9000f828:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f82c:	f383 8811 	msr	BASEPRI, r3
9000f830:	f3bf 8f6f 	isb	sy
9000f834:	f3bf 8f4f 	dsb	sy
9000f838:	e7fe      	b.n	9000f838 <vTaskDelay+0x70>
9000f83a:	f7ff fdeb 	bl	9000f414 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9000f83e:	2800      	cmp	r0, #0
9000f840:	d0c4      	beq.n	9000f7cc <vTaskDelay+0x4>
	}
9000f842:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f844:	4b09      	ldr	r3, [pc, #36]	@ (9000f86c <vTaskDelay+0xa4>)
9000f846:	6818      	ldr	r0, [r3, #0]
9000f848:	6831      	ldr	r1, [r6, #0]
9000f84a:	3104      	adds	r1, #4
9000f84c:	f7fe fa66 	bl	9000dd1c <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
9000f850:	4b07      	ldr	r3, [pc, #28]	@ (9000f870 <vTaskDelay+0xa8>)
9000f852:	681a      	ldr	r2, [r3, #0]
9000f854:	4294      	cmp	r4, r2
9000f856:	d2e5      	bcs.n	9000f824 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9000f858:	601c      	str	r4, [r3, #0]
9000f85a:	e7e3      	b.n	9000f824 <vTaskDelay+0x5c>
9000f85c:	24022da0 	.word	0x24022da0
9000f860:	24022dc0 	.word	0x24022dc0
9000f864:	24023298 	.word	0x24023298
9000f868:	24022e08 	.word	0x24022e08
9000f86c:	24022e0c 	.word	0x24022e0c
9000f870:	24022da4 	.word	0x24022da4

9000f874 <vTaskStartScheduler>:
{
9000f874:	b570      	push	{r4, r5, r6, lr}
9000f876:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9000f878:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f87a:	4668      	mov	r0, sp
9000f87c:	aa02      	add	r2, sp, #8
9000f87e:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
9000f880:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f884:	f7fe f8ec 	bl	9000da60 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9000f888:	9d00      	ldr	r5, [sp, #0]
9000f88a:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
9000f88e:	b1b8      	cbz	r0, 9000f8c0 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
9000f890:	b16d      	cbz	r5, 9000f8ae <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
9000f892:	2260      	movs	r2, #96	@ 0x60
9000f894:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
9000f896:	9a03      	ldr	r2, [sp, #12]
9000f898:	2a60      	cmp	r2, #96	@ 0x60
9000f89a:	d01a      	beq.n	9000f8d2 <vTaskStartScheduler+0x5e>
9000f89c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f8a0:	f383 8811 	msr	BASEPRI, r3
9000f8a4:	f3bf 8f6f 	isb	sy
9000f8a8:	f3bf 8f4f 	dsb	sy
9000f8ac:	e7fe      	b.n	9000f8ac <vTaskStartScheduler+0x38>
9000f8ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f8b2:	f383 8811 	msr	BASEPRI, r3
9000f8b6:	f3bf 8f6f 	isb	sy
9000f8ba:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000f8be:	e7fe      	b.n	9000f8be <vTaskStartScheduler+0x4a>
9000f8c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f8c4:	f383 8811 	msr	BASEPRI, r3
9000f8c8:	f3bf 8f6f 	isb	sy
9000f8cc:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000f8d0:	e7fe      	b.n	9000f8d0 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f8d2:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f8d4:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f8d6:	21a5      	movs	r1, #165	@ 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f8d8:	6328      	str	r0, [r5, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f8da:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f8dc:	f885 305d 	strb.w	r3, [r5, #93]	@ 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000f8e0:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f8e2:	f01a fbd5 	bl	9002a090 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f8e6:	1f33      	subs	r3, r6, #4
9000f8e8:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f8ea:	492a      	ldr	r1, [pc, #168]	@ (9000f994 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f8ec:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f8ee:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f8f0:	f885 4038 	strb.w	r4, [r5, #56]	@ 0x38
9000f8f4:	6369      	str	r1, [r5, #52]	@ 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f8f6:	f885 4043 	strb.w	r4, [r5, #67]	@ 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f8fa:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9000f8fe:	62ec      	str	r4, [r5, #44]	@ 0x2c
		pxNewTCB->uxMutexesHeld = 0;
9000f900:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f904:	f7fe f9f8 	bl	9000dcf8 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f908:	f105 0018 	add.w	r0, r5, #24
9000f90c:	f7fe f9f4 	bl	9000dcf8 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f910:	2338      	movs	r3, #56	@ 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f912:	4622      	mov	r2, r4
9000f914:	4920      	ldr	r1, [pc, #128]	@ (9000f998 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
9000f916:	65ac      	str	r4, [r5, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f918:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f91a:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f91c:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f91e:	626d      	str	r5, [r5, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f920:	656c      	str	r4, [r5, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f922:	f885 405c 	strb.w	r4, [r5, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f926:	f7fe fa63 	bl	9000ddf0 <pxPortInitialiseStack>
9000f92a:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000f92c:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f92e:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f930:	f7ff fbf4 	bl	9000f11c <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
9000f934:	f000 fc86 	bl	90010244 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
9000f938:	2801      	cmp	r0, #1
9000f93a:	d00c      	beq.n	9000f956 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f93c:	3001      	adds	r0, #1
9000f93e:	d001      	beq.n	9000f944 <vTaskStartScheduler+0xd0>
}
9000f940:	b004      	add	sp, #16
9000f942:	bd70      	pop	{r4, r5, r6, pc}
9000f944:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f948:	f383 8811 	msr	BASEPRI, r3
9000f94c:	f3bf 8f6f 	isb	sy
9000f950:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f954:	e7fe      	b.n	9000f954 <vTaskStartScheduler+0xe0>
9000f956:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f95a:	f383 8811 	msr	BASEPRI, r3
9000f95e:	f3bf 8f6f 	isb	sy
9000f962:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
9000f966:	4b0d      	ldr	r3, [pc, #52]	@ (9000f99c <vTaskStartScheduler+0x128>)
9000f968:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
9000f96c:	490c      	ldr	r1, [pc, #48]	@ (9000f9a0 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
9000f96e:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f970:	4b0c      	ldr	r3, [pc, #48]	@ (9000f9a4 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
9000f972:	4a0d      	ldr	r2, [pc, #52]	@ (9000f9a8 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
9000f974:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f976:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
9000f978:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9000f97a:	b143      	cbz	r3, 9000f98e <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
9000f97c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f97e:	b10b      	cbz	r3, 9000f984 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f980:	2000      	movs	r0, #0
9000f982:	4798      	blx	r3
}
9000f984:	b004      	add	sp, #16
9000f986:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
9000f98a:	f7fe baed 	b.w	9000df68 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
9000f98e:	6813      	ldr	r3, [r2, #0]
9000f990:	e7f4      	b.n	9000f97c <vTaskStartScheduler+0x108>
9000f992:	bf00      	nop
9000f994:	454c4449 	.word	0x454c4449
9000f998:	9000f22d 	.word	0x9000f22d
9000f99c:	24022da4 	.word	0x24022da4
9000f9a0:	24022db8 	.word	0x24022db8
9000f9a4:	24022dc0 	.word	0x24022dc0
9000f9a8:	24023298 	.word	0x24023298

9000f9ac <vTaskSuspendAll>:
	++uxSchedulerSuspended;
9000f9ac:	4a02      	ldr	r2, [pc, #8]	@ (9000f9b8 <vTaskSuspendAll+0xc>)
9000f9ae:	6813      	ldr	r3, [r2, #0]
9000f9b0:	3301      	adds	r3, #1
9000f9b2:	6013      	str	r3, [r2, #0]
}
9000f9b4:	4770      	bx	lr
9000f9b6:	bf00      	nop
9000f9b8:	24022da0 	.word	0x24022da0

9000f9bc <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
9000f9bc:	4b06      	ldr	r3, [pc, #24]	@ (9000f9d8 <xTaskResumeAll+0x1c>)
9000f9be:	681b      	ldr	r3, [r3, #0]
9000f9c0:	b943      	cbnz	r3, 9000f9d4 <xTaskResumeAll+0x18>
9000f9c2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f9c6:	f383 8811 	msr	BASEPRI, r3
9000f9ca:	f3bf 8f6f 	isb	sy
9000f9ce:	f3bf 8f4f 	dsb	sy
9000f9d2:	e7fe      	b.n	9000f9d2 <xTaskResumeAll+0x16>
9000f9d4:	f7ff bd1e 	b.w	9000f414 <xTaskResumeAll.part.0>
9000f9d8:	24022da0 	.word	0x24022da0

9000f9dc <xTaskGetTickCount>:
		xTicks = xTickCount;
9000f9dc:	4b01      	ldr	r3, [pc, #4]	@ (9000f9e4 <xTaskGetTickCount+0x8>)
9000f9de:	6818      	ldr	r0, [r3, #0]
}
9000f9e0:	4770      	bx	lr
9000f9e2:	bf00      	nop
9000f9e4:	24022dc0 	.word	0x24022dc0

9000f9e8 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f9e8:	4b05      	ldr	r3, [pc, #20]	@ (9000fa00 <xTaskIncrementTick+0x18>)
9000f9ea:	681b      	ldr	r3, [r3, #0]
9000f9ec:	b90b      	cbnz	r3, 9000f9f2 <xTaskIncrementTick+0xa>
9000f9ee:	f7ff bc6b 	b.w	9000f2c8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
9000f9f2:	4a04      	ldr	r2, [pc, #16]	@ (9000fa04 <xTaskIncrementTick+0x1c>)
}
9000f9f4:	2000      	movs	r0, #0
		++xPendedTicks;
9000f9f6:	6813      	ldr	r3, [r2, #0]
9000f9f8:	3301      	adds	r3, #1
9000f9fa:	6013      	str	r3, [r2, #0]
}
9000f9fc:	4770      	bx	lr
9000f9fe:	bf00      	nop
9000fa00:	24022da0 	.word	0x24022da0
9000fa04:	24022db4 	.word	0x24022db4

9000fa08 <vTaskSetApplicationTaskTag>:
	{
9000fa08:	b538      	push	{r3, r4, r5, lr}
9000fa0a:	460d      	mov	r5, r1
		if( xTask == NULL )
9000fa0c:	b138      	cbz	r0, 9000fa1e <vTaskSetApplicationTaskTag+0x16>
9000fa0e:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
9000fa10:	f7fe fa18 	bl	9000de44 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000fa14:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9000fa16:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000fa1a:	f7fe ba35 	b.w	9000de88 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
9000fa1e:	4b04      	ldr	r3, [pc, #16]	@ (9000fa30 <vTaskSetApplicationTaskTag+0x28>)
9000fa20:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
9000fa22:	f7fe fa0f 	bl	9000de44 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000fa26:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9000fa28:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000fa2c:	f7fe ba2c 	b.w	9000de88 <vPortExitCritical>
9000fa30:	24023298 	.word	0x24023298

9000fa34 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9000fa34:	4b27      	ldr	r3, [pc, #156]	@ (9000fad4 <vTaskSwitchContext+0xa0>)
9000fa36:	681b      	ldr	r3, [r3, #0]
9000fa38:	b11b      	cbz	r3, 9000fa42 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
9000fa3a:	4b27      	ldr	r3, [pc, #156]	@ (9000fad8 <vTaskSwitchContext+0xa4>)
9000fa3c:	2201      	movs	r2, #1
9000fa3e:	601a      	str	r2, [r3, #0]
9000fa40:	4770      	bx	lr
{
9000fa42:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
9000fa44:	4a24      	ldr	r2, [pc, #144]	@ (9000fad8 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
9000fa46:	4c25      	ldr	r4, [pc, #148]	@ (9000fadc <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
9000fa48:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9000fa4a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000fa4c:	2b00      	cmp	r3, #0
9000fa4e:	d036      	beq.n	9000fabe <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
9000fa50:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000fa52:	b10b      	cbz	r3, 9000fa58 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000fa54:	2001      	movs	r0, #1
9000fa56:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fa58:	4d21      	ldr	r5, [pc, #132]	@ (9000fae0 <vTaskSwitchContext+0xac>)
9000fa5a:	4922      	ldr	r1, [pc, #136]	@ (9000fae4 <vTaskSwitchContext+0xb0>)
9000fa5c:	682b      	ldr	r3, [r5, #0]
9000fa5e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000fa62:	0098      	lsls	r0, r3, #2
9000fa64:	0092      	lsls	r2, r2, #2
9000fa66:	588a      	ldr	r2, [r1, r2]
9000fa68:	b942      	cbnz	r2, 9000fa7c <vTaskSwitchContext+0x48>
9000fa6a:	b1fb      	cbz	r3, 9000faac <vTaskSwitchContext+0x78>
9000fa6c:	3b01      	subs	r3, #1
9000fa6e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000fa72:	0098      	lsls	r0, r3, #2
9000fa74:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9000fa78:	2a00      	cmp	r2, #0
9000fa7a:	d0f6      	beq.n	9000fa6a <vTaskSwitchContext+0x36>
9000fa7c:	4418      	add	r0, r3
9000fa7e:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
9000fa82:	f8dc 1004 	ldr.w	r1, [ip, #4]
9000fa86:	4662      	mov	r2, ip
9000fa88:	6849      	ldr	r1, [r1, #4]
9000fa8a:	3208      	adds	r2, #8
9000fa8c:	4291      	cmp	r1, r2
9000fa8e:	f8cc 1004 	str.w	r1, [ip, #4]
9000fa92:	d01b      	beq.n	9000facc <vTaskSwitchContext+0x98>
9000fa94:	68ca      	ldr	r2, [r1, #12]
9000fa96:	6022      	str	r2, [r4, #0]
9000fa98:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9000fa9a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000fa9c:	b1a3      	cbz	r3, 9000fac8 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
9000fa9e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000faa0:	b11b      	cbz	r3, 9000faaa <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000faa2:	2000      	movs	r0, #0
}
9000faa4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
9000faa8:	4718      	bx	r3
}
9000faaa:	bd70      	pop	{r4, r5, r6, pc}
9000faac:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fab0:	f383 8811 	msr	BASEPRI, r3
9000fab4:	f3bf 8f6f 	isb	sy
9000fab8:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fabc:	e7fe      	b.n	9000fabc <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
9000fabe:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
9000fac0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000fac2:	2b00      	cmp	r3, #0
9000fac4:	d1c6      	bne.n	9000fa54 <vTaskSwitchContext+0x20>
9000fac6:	e7c7      	b.n	9000fa58 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
9000fac8:	6823      	ldr	r3, [r4, #0]
9000faca:	e7e8      	b.n	9000fa9e <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000facc:	6849      	ldr	r1, [r1, #4]
9000face:	f8cc 1004 	str.w	r1, [ip, #4]
9000fad2:	e7df      	b.n	9000fa94 <vTaskSwitchContext+0x60>
9000fad4:	24022da0 	.word	0x24022da0
9000fad8:	24022db0 	.word	0x24022db0
9000fadc:	24023298 	.word	0x24023298
9000fae0:	24022dbc 	.word	0x24022dbc
9000fae4:	24022e38 	.word	0x24022e38

9000fae8 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
9000fae8:	b1f0      	cbz	r0, 9000fb28 <vTaskPlaceOnEventList+0x40>
{
9000faea:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000faec:	4d1a      	ldr	r5, [pc, #104]	@ (9000fb58 <vTaskPlaceOnEventList+0x70>)
9000faee:	460c      	mov	r4, r1
9000faf0:	6829      	ldr	r1, [r5, #0]
9000faf2:	3118      	adds	r1, #24
9000faf4:	f7fe f912 	bl	9000dd1c <vListInsert>
const TickType_t xConstTickCount = xTickCount;
9000faf8:	4b18      	ldr	r3, [pc, #96]	@ (9000fb5c <vTaskPlaceOnEventList+0x74>)
9000fafa:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000fafc:	6828      	ldr	r0, [r5, #0]
9000fafe:	3004      	adds	r0, #4
9000fb00:	f7fe f924 	bl	9000dd4c <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
9000fb04:	1c63      	adds	r3, r4, #1
9000fb06:	d020      	beq.n	9000fb4a <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000fb08:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000fb0a:	682b      	ldr	r3, [r5, #0]
9000fb0c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000fb0e:	d214      	bcs.n	9000fb3a <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000fb10:	4b13      	ldr	r3, [pc, #76]	@ (9000fb60 <vTaskPlaceOnEventList+0x78>)
9000fb12:	6818      	ldr	r0, [r3, #0]
9000fb14:	6829      	ldr	r1, [r5, #0]
9000fb16:	3104      	adds	r1, #4
9000fb18:	f7fe f900 	bl	9000dd1c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000fb1c:	4b11      	ldr	r3, [pc, #68]	@ (9000fb64 <vTaskPlaceOnEventList+0x7c>)
9000fb1e:	681a      	ldr	r2, [r3, #0]
9000fb20:	4294      	cmp	r4, r2
9000fb22:	d200      	bcs.n	9000fb26 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
9000fb24:	601c      	str	r4, [r3, #0]
}
9000fb26:	bd70      	pop	{r4, r5, r6, pc}
9000fb28:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fb2c:	f383 8811 	msr	BASEPRI, r3
9000fb30:	f3bf 8f6f 	isb	sy
9000fb34:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
9000fb38:	e7fe      	b.n	9000fb38 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000fb3a:	4b0b      	ldr	r3, [pc, #44]	@ (9000fb68 <vTaskPlaceOnEventList+0x80>)
9000fb3c:	6818      	ldr	r0, [r3, #0]
9000fb3e:	6829      	ldr	r1, [r5, #0]
}
9000fb40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000fb44:	3104      	adds	r1, #4
9000fb46:	f7fe b8e9 	b.w	9000dd1c <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000fb4a:	6829      	ldr	r1, [r5, #0]
9000fb4c:	4807      	ldr	r0, [pc, #28]	@ (9000fb6c <vTaskPlaceOnEventList+0x84>)
9000fb4e:	3104      	adds	r1, #4
}
9000fb50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000fb54:	f7fe b8d4 	b.w	9000dd00 <vListInsertEnd>
9000fb58:	24023298 	.word	0x24023298
9000fb5c:	24022dc0 	.word	0x24022dc0
9000fb60:	24022e0c 	.word	0x24022e0c
9000fb64:	24022da4 	.word	0x24022da4
9000fb68:	24022e08 	.word	0x24022e08
9000fb6c:	24022dc8 	.word	0x24022dc8

9000fb70 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
9000fb70:	b358      	cbz	r0, 9000fbca <vTaskPlaceOnEventListRestricted+0x5a>
	{
9000fb72:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000fb74:	4e1d      	ldr	r6, [pc, #116]	@ (9000fbec <vTaskPlaceOnEventListRestricted+0x7c>)
9000fb76:	460c      	mov	r4, r1
9000fb78:	4615      	mov	r5, r2
9000fb7a:	6831      	ldr	r1, [r6, #0]
9000fb7c:	3118      	adds	r1, #24
9000fb7e:	f7fe f8bf 	bl	9000dd00 <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
9000fb82:	b165      	cbz	r5, 9000fb9e <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
9000fb84:	4b1a      	ldr	r3, [pc, #104]	@ (9000fbf0 <vTaskPlaceOnEventListRestricted+0x80>)
9000fb86:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000fb88:	6830      	ldr	r0, [r6, #0]
9000fb8a:	3004      	adds	r0, #4
9000fb8c:	f7fe f8de 	bl	9000dd4c <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000fb90:	6831      	ldr	r1, [r6, #0]
9000fb92:	4818      	ldr	r0, [pc, #96]	@ (9000fbf4 <vTaskPlaceOnEventListRestricted+0x84>)
9000fb94:	3104      	adds	r1, #4
	}
9000fb96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000fb9a:	f7fe b8b1 	b.w	9000dd00 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9000fb9e:	4b14      	ldr	r3, [pc, #80]	@ (9000fbf0 <vTaskPlaceOnEventListRestricted+0x80>)
9000fba0:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000fba2:	6830      	ldr	r0, [r6, #0]
9000fba4:	3004      	adds	r0, #4
9000fba6:	f7fe f8d1 	bl	9000dd4c <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000fbaa:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000fbac:	6833      	ldr	r3, [r6, #0]
9000fbae:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000fbb0:	d214      	bcs.n	9000fbdc <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000fbb2:	4b11      	ldr	r3, [pc, #68]	@ (9000fbf8 <vTaskPlaceOnEventListRestricted+0x88>)
9000fbb4:	6818      	ldr	r0, [r3, #0]
9000fbb6:	6831      	ldr	r1, [r6, #0]
9000fbb8:	3104      	adds	r1, #4
9000fbba:	f7fe f8af 	bl	9000dd1c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000fbbe:	4b0f      	ldr	r3, [pc, #60]	@ (9000fbfc <vTaskPlaceOnEventListRestricted+0x8c>)
9000fbc0:	681a      	ldr	r2, [r3, #0]
9000fbc2:	4294      	cmp	r4, r2
9000fbc4:	d200      	bcs.n	9000fbc8 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
9000fbc6:	601c      	str	r4, [r3, #0]
	}
9000fbc8:	bd70      	pop	{r4, r5, r6, pc}
9000fbca:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fbce:	f383 8811 	msr	BASEPRI, r3
9000fbd2:	f3bf 8f6f 	isb	sy
9000fbd6:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9000fbda:	e7fe      	b.n	9000fbda <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000fbdc:	4b08      	ldr	r3, [pc, #32]	@ (9000fc00 <vTaskPlaceOnEventListRestricted+0x90>)
9000fbde:	6818      	ldr	r0, [r3, #0]
9000fbe0:	6831      	ldr	r1, [r6, #0]
	}
9000fbe2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000fbe6:	3104      	adds	r1, #4
9000fbe8:	f7fe b898 	b.w	9000dd1c <vListInsert>
9000fbec:	24023298 	.word	0x24023298
9000fbf0:	24022dc0 	.word	0x24022dc0
9000fbf4:	24022dc8 	.word	0x24022dc8
9000fbf8:	24022e0c 	.word	0x24022e0c
9000fbfc:	24022da4 	.word	0x24022da4
9000fc00:	24022e08 	.word	0x24022e08

9000fc04 <xTaskRemoveFromEventList>:
{
9000fc04:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fc06:	68c3      	ldr	r3, [r0, #12]
9000fc08:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
9000fc0a:	b34c      	cbz	r4, 9000fc60 <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9000fc0c:	f104 0518 	add.w	r5, r4, #24
9000fc10:	4628      	mov	r0, r5
9000fc12:	f7fe f89b 	bl	9000dd4c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000fc16:	4b18      	ldr	r3, [pc, #96]	@ (9000fc78 <xTaskRemoveFromEventList+0x74>)
9000fc18:	681b      	ldr	r3, [r3, #0]
9000fc1a:	b173      	cbz	r3, 9000fc3a <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9000fc1c:	4629      	mov	r1, r5
9000fc1e:	4817      	ldr	r0, [pc, #92]	@ (9000fc7c <xTaskRemoveFromEventList+0x78>)
9000fc20:	f7fe f86e 	bl	9000dd00 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
9000fc24:	4b16      	ldr	r3, [pc, #88]	@ (9000fc80 <xTaskRemoveFromEventList+0x7c>)
9000fc26:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000fc28:	681b      	ldr	r3, [r3, #0]
9000fc2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000fc2c:	429a      	cmp	r2, r3
9000fc2e:	d920      	bls.n	9000fc72 <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
9000fc30:	2301      	movs	r3, #1
9000fc32:	4a14      	ldr	r2, [pc, #80]	@ (9000fc84 <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
9000fc34:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
9000fc36:	6013      	str	r3, [r2, #0]
}
9000fc38:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9000fc3a:	1d25      	adds	r5, r4, #4
9000fc3c:	4628      	mov	r0, r5
9000fc3e:	f7fe f885 	bl	9000dd4c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9000fc42:	4b11      	ldr	r3, [pc, #68]	@ (9000fc88 <xTaskRemoveFromEventList+0x84>)
9000fc44:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000fc46:	681a      	ldr	r2, [r3, #0]
9000fc48:	4290      	cmp	r0, r2
9000fc4a:	d900      	bls.n	9000fc4e <xTaskRemoveFromEventList+0x4a>
9000fc4c:	6018      	str	r0, [r3, #0]
9000fc4e:	4b0f      	ldr	r3, [pc, #60]	@ (9000fc8c <xTaskRemoveFromEventList+0x88>)
9000fc50:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000fc54:	4629      	mov	r1, r5
9000fc56:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000fc5a:	f7fe f851 	bl	9000dd00 <vListInsertEnd>
9000fc5e:	e7e1      	b.n	9000fc24 <xTaskRemoveFromEventList+0x20>
9000fc60:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fc64:	f383 8811 	msr	BASEPRI, r3
9000fc68:	f3bf 8f6f 	isb	sy
9000fc6c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
9000fc70:	e7fe      	b.n	9000fc70 <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
9000fc72:	2000      	movs	r0, #0
}
9000fc74:	bd38      	pop	{r3, r4, r5, pc}
9000fc76:	bf00      	nop
9000fc78:	24022da0 	.word	0x24022da0
9000fc7c:	24022df4 	.word	0x24022df4
9000fc80:	24023298 	.word	0x24023298
9000fc84:	24022db0 	.word	0x24022db0
9000fc88:	24022dbc 	.word	0x24022dbc
9000fc8c:	24022e38 	.word	0x24022e38

9000fc90 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000fc90:	4a03      	ldr	r2, [pc, #12]	@ (9000fca0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9000fc92:	4b04      	ldr	r3, [pc, #16]	@ (9000fca4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000fc94:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000fc96:	681b      	ldr	r3, [r3, #0]
9000fc98:	e9c0 2300 	strd	r2, r3, [r0]
}
9000fc9c:	4770      	bx	lr
9000fc9e:	bf00      	nop
9000fca0:	24022dac 	.word	0x24022dac
9000fca4:	24022dc0 	.word	0x24022dc0

9000fca8 <xTaskCheckForTimeOut>:
{
9000fca8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
9000fcaa:	b308      	cbz	r0, 9000fcf0 <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
9000fcac:	460d      	mov	r5, r1
9000fcae:	b1b1      	cbz	r1, 9000fcde <xTaskCheckForTimeOut+0x36>
9000fcb0:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9000fcb2:	f7fe f8c7 	bl	9000de44 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
9000fcb6:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
9000fcb8:	4a1a      	ldr	r2, [pc, #104]	@ (9000fd24 <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
9000fcba:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
9000fcbc:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9000fcbe:	d02c      	beq.n	9000fd1a <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000fcc0:	f8df c064 	ldr.w	ip, [pc, #100]	@ 9000fd28 <xTaskCheckForTimeOut+0x80>
9000fcc4:	6826      	ldr	r6, [r4, #0]
9000fcc6:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000fcca:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000fccc:	42be      	cmp	r6, r7
9000fcce:	d018      	beq.n	9000fd02 <xTaskCheckForTimeOut+0x5a>
9000fcd0:	4288      	cmp	r0, r1
9000fcd2:	d816      	bhi.n	9000fd02 <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
9000fcd4:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9000fcd6:	f7fe f8d7 	bl	9000de88 <vPortExitCritical>
}
9000fcda:	4620      	mov	r0, r4
9000fcdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000fcde:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fce2:	f383 8811 	msr	BASEPRI, r3
9000fce6:	f3bf 8f6f 	isb	sy
9000fcea:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9000fcee:	e7fe      	b.n	9000fcee <xTaskCheckForTimeOut+0x46>
9000fcf0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fcf4:	f383 8811 	msr	BASEPRI, r3
9000fcf8:	f3bf 8f6f 	isb	sy
9000fcfc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9000fd00:	e7fe      	b.n	9000fd00 <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000fd02:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
9000fd06:	4573      	cmp	r3, lr
9000fd08:	d909      	bls.n	9000fd1e <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
9000fd0a:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000fd0c:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000fd10:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
9000fd12:	4403      	add	r3, r0
9000fd14:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000fd16:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
9000fd1a:	2400      	movs	r4, #0
9000fd1c:	e7db      	b.n	9000fcd6 <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
9000fd1e:	2300      	movs	r3, #0
9000fd20:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9000fd22:	e7d7      	b.n	9000fcd4 <xTaskCheckForTimeOut+0x2c>
9000fd24:	24022dc0 	.word	0x24022dc0
9000fd28:	24022dac 	.word	0x24022dac

9000fd2c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
9000fd2c:	4b01      	ldr	r3, [pc, #4]	@ (9000fd34 <vTaskMissedYield+0x8>)
9000fd2e:	2201      	movs	r2, #1
9000fd30:	601a      	str	r2, [r3, #0]
}
9000fd32:	4770      	bx	lr
9000fd34:	24022db0 	.word	0x24022db0

9000fd38 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
9000fd38:	4b05      	ldr	r3, [pc, #20]	@ (9000fd50 <xTaskGetSchedulerState+0x18>)
9000fd3a:	681b      	ldr	r3, [r3, #0]
9000fd3c:	b133      	cbz	r3, 9000fd4c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000fd3e:	4b05      	ldr	r3, [pc, #20]	@ (9000fd54 <xTaskGetSchedulerState+0x1c>)
9000fd40:	6818      	ldr	r0, [r3, #0]
9000fd42:	fab0 f080 	clz	r0, r0
9000fd46:	0940      	lsrs	r0, r0, #5
9000fd48:	0040      	lsls	r0, r0, #1
9000fd4a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9000fd4c:	2001      	movs	r0, #1
	}
9000fd4e:	4770      	bx	lr
9000fd50:	24022db8 	.word	0x24022db8
9000fd54:	24022da0 	.word	0x24022da0

9000fd58 <xTaskPriorityInherit>:
	{
9000fd58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
9000fd5a:	4604      	mov	r4, r0
9000fd5c:	b1c8      	cbz	r0, 9000fd92 <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9000fd5e:	4d1b      	ldr	r5, [pc, #108]	@ (9000fdcc <xTaskPriorityInherit+0x74>)
9000fd60:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9000fd62:	682a      	ldr	r2, [r5, #0]
9000fd64:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000fd66:	4293      	cmp	r3, r2
9000fd68:	d214      	bcs.n	9000fd94 <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000fd6a:	6982      	ldr	r2, [r0, #24]
9000fd6c:	2a00      	cmp	r2, #0
9000fd6e:	db04      	blt.n	9000fd7a <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fd70:	682a      	ldr	r2, [r5, #0]
9000fd72:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000fd74:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
9000fd78:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9000fd7a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000fd7e:	4e14      	ldr	r6, [pc, #80]	@ (9000fdd0 <xTaskPriorityInherit+0x78>)
9000fd80:	6962      	ldr	r2, [r4, #20]
9000fd82:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9000fd86:	429a      	cmp	r2, r3
9000fd88:	d00c      	beq.n	9000fda4 <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000fd8a:	682b      	ldr	r3, [r5, #0]
9000fd8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000fd8e:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
9000fd90:	2001      	movs	r0, #1
	}
9000fd92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
9000fd94:	682b      	ldr	r3, [r5, #0]
9000fd96:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
9000fd98:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000fd9a:	4298      	cmp	r0, r3
9000fd9c:	bf2c      	ite	cs
9000fd9e:	2000      	movcs	r0, #0
9000fda0:	2001      	movcc	r0, #1
	}
9000fda2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000fda4:	1d27      	adds	r7, r4, #4
9000fda6:	4638      	mov	r0, r7
9000fda8:	f7fd ffd0 	bl	9000dd4c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000fdac:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000fdae:	4b09      	ldr	r3, [pc, #36]	@ (9000fdd4 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000fdb0:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000fdb2:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000fdb4:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000fdb6:	4290      	cmp	r0, r2
9000fdb8:	d900      	bls.n	9000fdbc <xTaskPriorityInherit+0x64>
9000fdba:	6018      	str	r0, [r3, #0]
9000fdbc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000fdc0:	4639      	mov	r1, r7
9000fdc2:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9000fdc6:	f7fd ff9b 	bl	9000dd00 <vListInsertEnd>
9000fdca:	e7e1      	b.n	9000fd90 <xTaskPriorityInherit+0x38>
9000fdcc:	24023298 	.word	0x24023298
9000fdd0:	24022e38 	.word	0x24022e38
9000fdd4:	24022dbc 	.word	0x24022dbc

9000fdd8 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
9000fdd8:	b308      	cbz	r0, 9000fe1e <xTaskPriorityDisinherit+0x46>
	{
9000fdda:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9000fddc:	4b1d      	ldr	r3, [pc, #116]	@ (9000fe54 <xTaskPriorityDisinherit+0x7c>)
9000fdde:	681c      	ldr	r4, [r3, #0]
9000fde0:	4284      	cmp	r4, r0
9000fde2:	d008      	beq.n	9000fdf6 <xTaskPriorityDisinherit+0x1e>
9000fde4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fde8:	f383 8811 	msr	BASEPRI, r3
9000fdec:	f3bf 8f6f 	isb	sy
9000fdf0:	f3bf 8f4f 	dsb	sy
9000fdf4:	e7fe      	b.n	9000fdf4 <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
9000fdf6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000fdf8:	b143      	cbz	r3, 9000fe0c <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000fdfa:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
9000fdfc:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000fdfe:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
9000fe00:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9000fe02:	4291      	cmp	r1, r2
9000fe04:	d000      	beq.n	9000fe08 <xTaskPriorityDisinherit+0x30>
9000fe06:	b163      	cbz	r3, 9000fe22 <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
9000fe08:	2000      	movs	r0, #0
	}
9000fe0a:	bd38      	pop	{r3, r4, r5, pc}
9000fe0c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fe10:	f383 8811 	msr	BASEPRI, r3
9000fe14:	f3bf 8f6f 	isb	sy
9000fe18:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000fe1c:	e7fe      	b.n	9000fe1c <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
9000fe1e:	2000      	movs	r0, #0
	}
9000fe20:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000fe22:	1d25      	adds	r5, r4, #4
9000fe24:	4628      	mov	r0, r5
9000fe26:	f7fd ff91 	bl	9000dd4c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000fe2a:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
9000fe2c:	4b0a      	ldr	r3, [pc, #40]	@ (9000fe58 <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fe2e:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000fe32:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fe34:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9000fe36:	681a      	ldr	r2, [r3, #0]
9000fe38:	4290      	cmp	r0, r2
9000fe3a:	d900      	bls.n	9000fe3e <xTaskPriorityDisinherit+0x66>
9000fe3c:	6018      	str	r0, [r3, #0]
9000fe3e:	4b07      	ldr	r3, [pc, #28]	@ (9000fe5c <xTaskPriorityDisinherit+0x84>)
9000fe40:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000fe44:	4629      	mov	r1, r5
9000fe46:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000fe4a:	f7fd ff59 	bl	9000dd00 <vListInsertEnd>
					xReturn = pdTRUE;
9000fe4e:	2001      	movs	r0, #1
	}
9000fe50:	bd38      	pop	{r3, r4, r5, pc}
9000fe52:	bf00      	nop
9000fe54:	24023298 	.word	0x24023298
9000fe58:	24022dbc 	.word	0x24022dbc
9000fe5c:	24022e38 	.word	0x24022e38

9000fe60 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
9000fe60:	2800      	cmp	r0, #0
9000fe62:	d03c      	beq.n	9000fede <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
9000fe64:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
9000fe66:	b570      	push	{r4, r5, r6, lr}
9000fe68:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
9000fe6a:	b14b      	cbz	r3, 9000fe80 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9000fe6c:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
9000fe6e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000fe70:	4281      	cmp	r1, r0
9000fe72:	bf38      	it	cc
9000fe74:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
9000fe76:	2b01      	cmp	r3, #1
9000fe78:	d101      	bne.n	9000fe7e <vTaskPriorityDisinheritAfterTimeout+0x1e>
9000fe7a:	428a      	cmp	r2, r1
9000fe7c:	d109      	bne.n	9000fe92 <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
9000fe7e:	bd70      	pop	{r4, r5, r6, pc}
9000fe80:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fe84:	f383 8811 	msr	BASEPRI, r3
9000fe88:	f3bf 8f6f 	isb	sy
9000fe8c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000fe90:	e7fe      	b.n	9000fe90 <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
9000fe92:	4b18      	ldr	r3, [pc, #96]	@ (9000fef4 <vTaskPriorityDisinheritAfterTimeout+0x94>)
9000fe94:	681b      	ldr	r3, [r3, #0]
9000fe96:	42a3      	cmp	r3, r4
9000fe98:	d022      	beq.n	9000fee0 <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000fe9a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
9000fe9c:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000fe9e:	2b00      	cmp	r3, #0
9000fea0:	db02      	blt.n	9000fea8 <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fea2:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
9000fea6:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000fea8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9000feac:	4d12      	ldr	r5, [pc, #72]	@ (9000fef8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
9000feae:	6961      	ldr	r1, [r4, #20]
9000feb0:	eb05 0382 	add.w	r3, r5, r2, lsl #2
9000feb4:	4299      	cmp	r1, r3
9000feb6:	d1e2      	bne.n	9000fe7e <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000feb8:	1d26      	adds	r6, r4, #4
9000feba:	4630      	mov	r0, r6
9000febc:	f7fd ff46 	bl	9000dd4c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9000fec0:	4b0e      	ldr	r3, [pc, #56]	@ (9000fefc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
9000fec2:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000fec4:	681a      	ldr	r2, [r3, #0]
9000fec6:	4290      	cmp	r0, r2
9000fec8:	d900      	bls.n	9000fecc <vTaskPriorityDisinheritAfterTimeout+0x6c>
9000feca:	6018      	str	r0, [r3, #0]
9000fecc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000fed0:	4631      	mov	r1, r6
9000fed2:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9000fed6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
9000feda:	f7fd bf11 	b.w	9000dd00 <vListInsertEnd>
9000fede:	4770      	bx	lr
9000fee0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fee4:	f383 8811 	msr	BASEPRI, r3
9000fee8:	f3bf 8f6f 	isb	sy
9000feec:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
9000fef0:	e7fe      	b.n	9000fef0 <vTaskPriorityDisinheritAfterTimeout+0x90>
9000fef2:	bf00      	nop
9000fef4:	24023298 	.word	0x24023298
9000fef8:	24022e38 	.word	0x24022e38
9000fefc:	24022dbc 	.word	0x24022dbc

9000ff00 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
9000ff00:	4b04      	ldr	r3, [pc, #16]	@ (9000ff14 <pvTaskIncrementMutexHeldCount+0x14>)
9000ff02:	681a      	ldr	r2, [r3, #0]
9000ff04:	b11a      	cbz	r2, 9000ff0e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9000ff06:	6819      	ldr	r1, [r3, #0]
9000ff08:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
9000ff0a:	3201      	adds	r2, #1
9000ff0c:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
9000ff0e:	6818      	ldr	r0, [r3, #0]
	}
9000ff10:	4770      	bx	lr
9000ff12:	bf00      	nop
9000ff14:	24023298 	.word	0x24023298

9000ff18 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
9000ff18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ff1c:	4e21      	ldr	r6, [pc, #132]	@ (9000ffa4 <prvSwitchTimerLists+0x8c>)
9000ff1e:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000ff20:	e00d      	b.n	9000ff3e <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000ff22:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ff24:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000ff26:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000ff28:	1d25      	adds	r5, r4, #4
9000ff2a:	4628      	mov	r0, r5
9000ff2c:	f7fd ff0e 	bl	9000dd4c <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000ff30:	6a23      	ldr	r3, [r4, #32]
9000ff32:	4620      	mov	r0, r4
9000ff34:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000ff36:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
9000ff3a:	075b      	lsls	r3, r3, #29
9000ff3c:	d40a      	bmi.n	9000ff54 <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000ff3e:	6833      	ldr	r3, [r6, #0]
9000ff40:	681a      	ldr	r2, [r3, #0]
9000ff42:	2a00      	cmp	r2, #0
9000ff44:	d1ed      	bne.n	9000ff22 <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
9000ff46:	4a18      	ldr	r2, [pc, #96]	@ (9000ffa8 <prvSwitchTimerLists+0x90>)
9000ff48:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9000ff4a:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9000ff4c:	6031      	str	r1, [r6, #0]
}
9000ff4e:	b004      	add	sp, #16
9000ff50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000ff54:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000ff56:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
9000ff58:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 9000ffac <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000ff5c:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9000ff5e:	429f      	cmp	r7, r3
9000ff60:	d205      	bcs.n	9000ff6e <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000ff62:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
9000ff64:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000ff66:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000ff68:	f7fd fed8 	bl	9000dd1c <vListInsert>
9000ff6c:	e7e7      	b.n	9000ff3e <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
9000ff6e:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
9000ff72:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
9000ff74:	b16b      	cbz	r3, 9000ff92 <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000ff76:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
9000ff78:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000ff7c:	f7ff fedc 	bl	9000fd38 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000ff80:	462b      	mov	r3, r5
9000ff82:	462a      	mov	r2, r5
9000ff84:	4669      	mov	r1, sp
9000ff86:	f8d8 0000 	ldr.w	r0, [r8]
9000ff8a:	f7fe fa47 	bl	9000e41c <xQueueGenericSend>
				configASSERT( xResult );
9000ff8e:	2800      	cmp	r0, #0
9000ff90:	d1d5      	bne.n	9000ff3e <prvSwitchTimerLists+0x26>
9000ff92:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff96:	f383 8811 	msr	BASEPRI, r3
9000ff9a:	f3bf 8f6f 	isb	sy
9000ff9e:	f3bf 8f4f 	dsb	sy
9000ffa2:	e7fe      	b.n	9000ffa2 <prvSwitchTimerLists+0x8a>
9000ffa4:	2402339c 	.word	0x2402339c
9000ffa8:	24023398 	.word	0x24023398
9000ffac:	24023394 	.word	0x24023394

9000ffb0 <prvTimerTask>:
{
9000ffb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ffb4:	4e9f      	ldr	r6, [pc, #636]	@ (90010234 <prvTimerTask+0x284>)
9000ffb6:	b089      	sub	sp, #36	@ 0x24
9000ffb8:	4d9f      	ldr	r5, [pc, #636]	@ (90010238 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
9000ffba:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
9000ffbe:	4c9f      	ldr	r4, [pc, #636]	@ (9001023c <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9000ffc0:	6833      	ldr	r3, [r6, #0]
9000ffc2:	681f      	ldr	r7, [r3, #0]
9000ffc4:	2f00      	cmp	r7, #0
9000ffc6:	f000 80b2 	beq.w	9001012e <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000ffca:	68db      	ldr	r3, [r3, #12]
9000ffcc:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9000ffce:	f7ff fced 	bl	9000f9ac <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000ffd2:	f7ff fd03 	bl	9000f9dc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000ffd6:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000ffd8:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000ffda:	4298      	cmp	r0, r3
9000ffdc:	f0c0 80af 	bcc.w	9001013e <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000ffe0:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9000ffe2:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000ffe4:	f200 80d0 	bhi.w	90010188 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
9000ffe8:	f7ff fce8 	bl	9000f9bc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ffec:	6833      	ldr	r3, [r6, #0]
9000ffee:	68db      	ldr	r3, [r3, #12]
9000fff0:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000fff4:	f10b 0804 	add.w	r8, fp, #4
9000fff8:	4640      	mov	r0, r8
9000fffa:	f7fd fea7 	bl	9000dd4c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000fffe:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
90010002:	0758      	lsls	r0, r3, #29
90010004:	f100 80d0 	bmi.w	900101a8 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90010008:	f023 0301 	bic.w	r3, r3, #1
9001000c:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90010010:	f8db 3020 	ldr.w	r3, [fp, #32]
90010014:	4658      	mov	r0, fp
90010016:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
90010018:	2200      	movs	r2, #0
9001001a:	4669      	mov	r1, sp
9001001c:	6820      	ldr	r0, [r4, #0]
9001001e:	f7fe fc3b 	bl	9000e898 <xQueueReceive>
90010022:	2800      	cmp	r0, #0
90010024:	d0cc      	beq.n	9000ffc0 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90010026:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90010028:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9001002a:	2b00      	cmp	r3, #0
9001002c:	db77      	blt.n	9001011e <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
9001002e:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
90010030:	697b      	ldr	r3, [r7, #20]
90010032:	b113      	cbz	r3, 9001003a <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90010034:	1d38      	adds	r0, r7, #4
90010036:	f7fd fe89 	bl	9000dd4c <uxListRemove>
	xTimeNow = xTaskGetTickCount();
9001003a:	f7ff fccf 	bl	9000f9dc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9001003e:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010040:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
90010042:	4298      	cmp	r0, r3
90010044:	f0c0 8082 	bcc.w	9001014c <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
90010048:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
9001004a:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
9001004e:	2b09      	cmp	r3, #9
90010050:	d8e2      	bhi.n	90010018 <prvTimerTask+0x68>
90010052:	e8df f003 	tbb	[pc, r3]
90010056:	0505      	.short	0x0505
90010058:	5b3e5405 	.word	0x5b3e5405
9001005c:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010060:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90010064:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010066:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9001006a:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001006c:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90010070:	69ba      	ldr	r2, [r7, #24]
90010072:	1899      	adds	r1, r3, r2
90010074:	bf2c      	ite	cs
90010076:	2001      	movcs	r0, #1
90010078:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
9001007a:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9001007c:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9001007e:	f200 8085 	bhi.w	9001018c <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010082:	ebab 0303 	sub.w	r3, fp, r3
90010086:	429a      	cmp	r2, r3
90010088:	f200 80be 	bhi.w	90010208 <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9001008c:	6a3b      	ldr	r3, [r7, #32]
9001008e:	4638      	mov	r0, r7
90010090:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90010092:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90010096:	0759      	lsls	r1, r3, #29
90010098:	d5be      	bpl.n	90010018 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
9001009a:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9001009c:	9b01      	ldr	r3, [sp, #4]
9001009e:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
900100a0:	b171      	cbz	r1, 900100c0 <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
900100a2:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
900100a4:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
900100a8:	2700      	movs	r7, #0
900100aa:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
900100ac:	f7ff fe44 	bl	9000fd38 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
900100b0:	463b      	mov	r3, r7
900100b2:	463a      	mov	r2, r7
900100b4:	a904      	add	r1, sp, #16
900100b6:	6820      	ldr	r0, [r4, #0]
900100b8:	f7fe f9b0 	bl	9000e41c <xQueueGenericSend>
							configASSERT( xResult );
900100bc:	2800      	cmp	r0, #0
900100be:	d1ab      	bne.n	90010018 <prvTimerTask+0x68>
900100c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900100c4:	f383 8811 	msr	BASEPRI, r3
900100c8:	f3bf 8f6f 	isb	sy
900100cc:	f3bf 8f4f 	dsb	sy
900100d0:	e7fe      	b.n	900100d0 <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900100d2:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
900100d6:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900100d8:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
900100dc:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900100de:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
900100e2:	2b00      	cmp	r3, #0
900100e4:	f000 809c 	beq.w	90010220 <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
900100e8:	445b      	add	r3, fp
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900100ea:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900100ec:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
900100ee:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
900100f0:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
900100f2:	d855      	bhi.n	900101a0 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900100f4:	4b52      	ldr	r3, [pc, #328]	@ (90010240 <prvTimerTask+0x290>)
900100f6:	6818      	ldr	r0, [r3, #0]
900100f8:	f7fd fe10 	bl	9000dd1c <vListInsert>
900100fc:	e78c      	b.n	90010018 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900100fe:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90010102:	f023 0301 	bic.w	r3, r3, #1
90010106:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
9001010a:	e785      	b.n	90010018 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
9001010c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90010110:	079a      	lsls	r2, r3, #30
90010112:	d570      	bpl.n	900101f6 <prvTimerTask+0x246>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90010114:	f023 0301 	bic.w	r3, r3, #1
90010118:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
9001011c:	e77c      	b.n	90010018 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9001011e:	9b01      	ldr	r3, [sp, #4]
90010120:	9903      	ldr	r1, [sp, #12]
90010122:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
90010124:	9b00      	ldr	r3, [sp, #0]
90010126:	2b00      	cmp	r3, #0
90010128:	f6ff af76 	blt.w	90010018 <prvTimerTask+0x68>
9001012c:	e77f      	b.n	9001002e <prvTimerTask+0x7e>
	vTaskSuspendAll();
9001012e:	f7ff fc3d 	bl	9000f9ac <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90010132:	f7ff fc53 	bl	9000f9dc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010136:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010138:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9001013a:	4298      	cmp	r0, r3
9001013c:	d209      	bcs.n	90010152 <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9001013e:	f7ff feeb 	bl	9000ff18 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
90010142:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
90010146:	f7ff fc39 	bl	9000f9bc <xTaskResumeAll>
9001014a:	e765      	b.n	90010018 <prvTimerTask+0x68>
		prvSwitchTimerLists();
9001014c:	f7ff fee4 	bl	9000ff18 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
90010150:	e77a      	b.n	90010048 <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90010152:	4b3b      	ldr	r3, [pc, #236]	@ (90010240 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
90010154:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90010158:	681b      	ldr	r3, [r3, #0]
9001015a:	681a      	ldr	r2, [r3, #0]
9001015c:	fab2 f282 	clz	r2, r2
90010160:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
90010162:	eba7 010a 	sub.w	r1, r7, sl
90010166:	6820      	ldr	r0, [r4, #0]
90010168:	f7fe ff74 	bl	9000f054 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
9001016c:	f7ff fc26 	bl	9000f9bc <xTaskResumeAll>
90010170:	2800      	cmp	r0, #0
90010172:	f47f af51 	bne.w	90010018 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
90010176:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
9001017a:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
9001017e:	f3bf 8f4f 	dsb	sy
90010182:	f3bf 8f6f 	isb	sy
90010186:	e747      	b.n	90010018 <prvTimerTask+0x68>
90010188:	2200      	movs	r2, #0
9001018a:	e7ea      	b.n	90010162 <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
9001018c:	455b      	cmp	r3, fp
9001018e:	d902      	bls.n	90010196 <prvTimerTask+0x1e6>
90010190:	2800      	cmp	r0, #0
90010192:	f43f af7b 	beq.w	9001008c <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010196:	1d39      	adds	r1, r7, #4
90010198:	6830      	ldr	r0, [r6, #0]
9001019a:	f7fd fdbf 	bl	9000dd1c <vListInsert>
	return xProcessTimerNow;
9001019e:	e73b      	b.n	90010018 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900101a0:	6830      	ldr	r0, [r6, #0]
900101a2:	f7fd fdbb 	bl	9000dd1c <vListInsert>
900101a6:	e737      	b.n	90010018 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
900101a8:	f8db 0018 	ldr.w	r0, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900101ac:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
900101b0:	183b      	adds	r3, r7, r0
	if( xNextExpiryTime <= xTimeNow )
900101b2:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
900101b4:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
900101b8:	d321      	bcc.n	900101fe <prvTimerTask+0x24e>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900101ba:	ebaa 0a07 	sub.w	sl, sl, r7
900101be:	4550      	cmp	r0, sl
900101c0:	d828      	bhi.n	90010214 <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
900101c2:	6823      	ldr	r3, [r4, #0]
900101c4:	b173      	cbz	r3, 900101e4 <prvTimerTask+0x234>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
900101c6:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
900101ca:	2700      	movs	r7, #0
900101cc:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
900101ce:	f7ff fdb3 	bl	9000fd38 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
900101d2:	463b      	mov	r3, r7
900101d4:	463a      	mov	r2, r7
900101d6:	a904      	add	r1, sp, #16
900101d8:	6820      	ldr	r0, [r4, #0]
900101da:	f7fe f91f 	bl	9000e41c <xQueueGenericSend>
			configASSERT( xResult );
900101de:	2800      	cmp	r0, #0
900101e0:	f47f af16 	bne.w	90010010 <prvTimerTask+0x60>
900101e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900101e8:	f383 8811 	msr	BASEPRI, r3
900101ec:	f3bf 8f6f 	isb	sy
900101f0:	f3bf 8f4f 	dsb	sy
900101f4:	e7fe      	b.n	900101f4 <prvTimerTask+0x244>
							vPortFree( pxTimer );
900101f6:	4638      	mov	r0, r7
900101f8:	f7fd fd0c 	bl	9000dc14 <vPortFree>
900101fc:	e70c      	b.n	90010018 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900101fe:	4641      	mov	r1, r8
90010200:	6830      	ldr	r0, [r6, #0]
90010202:	f7fd fd8b 	bl	9000dd1c <vListInsert>
	return xProcessTimerNow;
90010206:	e703      	b.n	90010010 <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010208:	4b0d      	ldr	r3, [pc, #52]	@ (90010240 <prvTimerTask+0x290>)
9001020a:	1d39      	adds	r1, r7, #4
9001020c:	6818      	ldr	r0, [r3, #0]
9001020e:	f7fd fd85 	bl	9000dd1c <vListInsert>
	return xProcessTimerNow;
90010212:	e701      	b.n	90010018 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010214:	4b0a      	ldr	r3, [pc, #40]	@ (90010240 <prvTimerTask+0x290>)
90010216:	4641      	mov	r1, r8
90010218:	6818      	ldr	r0, [r3, #0]
9001021a:	f7fd fd7f 	bl	9000dd1c <vListInsert>
	return xProcessTimerNow;
9001021e:	e6f7      	b.n	90010010 <prvTimerTask+0x60>
90010220:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010224:	f383 8811 	msr	BASEPRI, r3
90010228:	f3bf 8f6f 	isb	sy
9001022c:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90010230:	e7fe      	b.n	90010230 <prvTimerTask+0x280>
90010232:	bf00      	nop
90010234:	2402339c 	.word	0x2402339c
90010238:	2402338c 	.word	0x2402338c
9001023c:	24023394 	.word	0x24023394
90010240:	24023398 	.word	0x24023398

90010244 <xTimerCreateTimerTask>:
{
90010244:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
90010246:	4c23      	ldr	r4, [pc, #140]	@ (900102d4 <xTimerCreateTimerTask+0x90>)
{
90010248:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
9001024a:	f7fd fdfb 	bl	9000de44 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9001024e:	6825      	ldr	r5, [r4, #0]
90010250:	b335      	cbz	r5, 900102a0 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
90010252:	f7fd fe19 	bl	9000de88 <vPortExitCritical>
	if( xTimerQueue != NULL )
90010256:	6823      	ldr	r3, [r4, #0]
90010258:	b1cb      	cbz	r3, 9001028e <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9001025a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9001025c:	aa07      	add	r2, sp, #28
9001025e:	a906      	add	r1, sp, #24
90010260:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90010262:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90010264:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90010268:	f7fd fc08 	bl	9000da7c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9001026c:	4623      	mov	r3, r4
9001026e:	9a07      	ldr	r2, [sp, #28]
90010270:	9500      	str	r5, [sp, #0]
90010272:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
90010276:	e9cd 1001 	strd	r1, r0, [sp, #4]
9001027a:	4917      	ldr	r1, [pc, #92]	@ (900102d8 <xTimerCreateTimerTask+0x94>)
9001027c:	4817      	ldr	r0, [pc, #92]	@ (900102dc <xTimerCreateTimerTask+0x98>)
9001027e:	f7ff f967 	bl	9000f550 <xTaskCreateStatic>
90010282:	4b17      	ldr	r3, [pc, #92]	@ (900102e0 <xTimerCreateTimerTask+0x9c>)
90010284:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
90010286:	b110      	cbz	r0, 9001028e <xTimerCreateTimerTask+0x4a>
}
90010288:	2001      	movs	r0, #1
9001028a:	b009      	add	sp, #36	@ 0x24
9001028c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001028e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010292:	f383 8811 	msr	BASEPRI, r3
90010296:	f3bf 8f6f 	isb	sy
9001029a:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9001029e:	e7fe      	b.n	9001029e <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
900102a0:	4f10      	ldr	r7, [pc, #64]	@ (900102e4 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
900102a2:	4e11      	ldr	r6, [pc, #68]	@ (900102e8 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
900102a4:	4638      	mov	r0, r7
900102a6:	f7fd fd1b 	bl	9000dce0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
900102aa:	4630      	mov	r0, r6
900102ac:	f7fd fd18 	bl	9000dce0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
900102b0:	4a0e      	ldr	r2, [pc, #56]	@ (900102ec <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
900102b2:	9500      	str	r5, [sp, #0]
900102b4:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
900102b6:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
900102b8:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
900102ba:	4a0d      	ldr	r2, [pc, #52]	@ (900102f0 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
900102bc:	4b0d      	ldr	r3, [pc, #52]	@ (900102f4 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
900102be:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
900102c0:	4a0d      	ldr	r2, [pc, #52]	@ (900102f8 <xTimerCreateTimerTask+0xb4>)
900102c2:	f7fd ff57 	bl	9000e174 <xQueueGenericCreateStatic>
900102c6:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
900102c8:	2800      	cmp	r0, #0
900102ca:	d0c2      	beq.n	90010252 <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
900102cc:	490b      	ldr	r1, [pc, #44]	@ (900102fc <xTimerCreateTimerTask+0xb8>)
900102ce:	f7fe fe99 	bl	9000f004 <vQueueAddToRegistry>
900102d2:	e7be      	b.n	90010252 <xTimerCreateTimerTask+0xe>
900102d4:	24023394 	.word	0x24023394
900102d8:	9002d6f8 	.word	0x9002d6f8
900102dc:	9000ffb1 	.word	0x9000ffb1
900102e0:	24023390 	.word	0x24023390
900102e4:	240233b4 	.word	0x240233b4
900102e8:	240233a0 	.word	0x240233a0
900102ec:	2402339c 	.word	0x2402339c
900102f0:	24023398 	.word	0x24023398
900102f4:	2402329c 	.word	0x2402329c
900102f8:	240232ec 	.word	0x240232ec
900102fc:	9002d6f0 	.word	0x9002d6f0

90010300 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
90010300:	8880      	ldrh	r0, [r0, #4]
90010302:	4770      	bx	lr

90010304 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
90010304:	b570      	push	{r4, r5, r6, lr}
90010306:	6803      	ldr	r3, [r0, #0]
90010308:	460c      	mov	r4, r1
9001030a:	2100      	movs	r1, #0
9001030c:	4605      	mov	r5, r0
9001030e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90010310:	4798      	blx	r3
90010312:	4606      	mov	r6, r0
90010314:	682b      	ldr	r3, [r5, #0]
90010316:	4628      	mov	r0, r5
90010318:	1ba4      	subs	r4, r4, r6
9001031a:	6a1b      	ldr	r3, [r3, #32]
9001031c:	b2a4      	uxth	r4, r4
9001031e:	4798      	blx	r3
90010320:	fbb4 f0f0 	udiv	r0, r4, r0
90010324:	bd70      	pop	{r4, r5, r6, pc}

90010326 <_ZN8touchgfx17AbstractPartition5clearEv>:
90010326:	2300      	movs	r3, #0
90010328:	8083      	strh	r3, [r0, #4]
9001032a:	4770      	bx	lr

9001032c <_ZN8touchgfx17AbstractPartition8allocateEt>:
9001032c:	b510      	push	{r4, lr}
9001032e:	6803      	ldr	r3, [r0, #0]
90010330:	4604      	mov	r4, r0
90010332:	8881      	ldrh	r1, [r0, #4]
90010334:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90010336:	4798      	blx	r3
90010338:	88a3      	ldrh	r3, [r4, #4]
9001033a:	3301      	adds	r3, #1
9001033c:	80a3      	strh	r3, [r4, #4]
9001033e:	bd10      	pop	{r4, pc}

90010340 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
90010340:	6803      	ldr	r3, [r0, #0]
90010342:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90010344:	4718      	bx	r3

90010346 <_ZN8touchgfx17AbstractPartitionD1Ev>:
90010346:	4770      	bx	lr

90010348 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90010348:	4a02      	ldr	r2, [pc, #8]	@ (90010354 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
9001034a:	6002      	str	r2, [r0, #0]
9001034c:	2200      	movs	r2, #0
9001034e:	8082      	strh	r2, [r0, #4]
90010350:	4770      	bx	lr
90010352:	bf00      	nop
90010354:	9002d708 	.word	0x9002d708

90010358 <_ZN8touchgfx9Container13getFirstChildEv>:
90010358:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9001035a:	4770      	bx	lr

9001035c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
9001035c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001035e:	2000      	movs	r0, #0
90010360:	b12b      	cbz	r3, 9001036e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90010362:	b920      	cbnz	r0, 9001036e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90010364:	1a5a      	subs	r2, r3, r1
90010366:	699b      	ldr	r3, [r3, #24]
90010368:	4250      	negs	r0, r2
9001036a:	4150      	adcs	r0, r2
9001036c:	e7f8      	b.n	90010360 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
9001036e:	4770      	bx	lr

90010370 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90010370:	2300      	movs	r3, #0
90010372:	6148      	str	r0, [r1, #20]
90010374:	618b      	str	r3, [r1, #24]
90010376:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010378:	b913      	cbnz	r3, 90010380 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
9001037a:	6281      	str	r1, [r0, #40]	@ 0x28
9001037c:	4770      	bx	lr
9001037e:	4613      	mov	r3, r2
90010380:	699a      	ldr	r2, [r3, #24]
90010382:	2a00      	cmp	r2, #0
90010384:	d1fb      	bne.n	9001037e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
90010386:	6199      	str	r1, [r3, #24]
90010388:	4770      	bx	lr

9001038a <_ZN8touchgfx9Container9removeAllEv>:
9001038a:	2200      	movs	r2, #0
9001038c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001038e:	b123      	cbz	r3, 9001039a <_ZN8touchgfx9Container9removeAllEv+0x10>
90010390:	6999      	ldr	r1, [r3, #24]
90010392:	6281      	str	r1, [r0, #40]	@ 0x28
90010394:	e9c3 2205 	strd	r2, r2, [r3, #20]
90010398:	e7f8      	b.n	9001038c <_ZN8touchgfx9Container9removeAllEv+0x2>
9001039a:	4770      	bx	lr

9001039c <_ZN8touchgfx9Container6unlinkEv>:
9001039c:	2300      	movs	r3, #0
9001039e:	6283      	str	r3, [r0, #40]	@ 0x28
900103a0:	4770      	bx	lr

900103a2 <_ZNK8touchgfx9Container12getSolidRectEv>:
900103a2:	2200      	movs	r2, #0
900103a4:	8002      	strh	r2, [r0, #0]
900103a6:	8042      	strh	r2, [r0, #2]
900103a8:	8082      	strh	r2, [r0, #4]
900103aa:	80c2      	strh	r2, [r0, #6]
900103ac:	4770      	bx	lr

900103ae <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
900103ae:	b570      	push	{r4, r5, r6, lr}
900103b0:	460d      	mov	r5, r1
900103b2:	4616      	mov	r6, r2
900103b4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900103b6:	b13c      	cbz	r4, 900103c8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
900103b8:	6823      	ldr	r3, [r4, #0]
900103ba:	4620      	mov	r0, r4
900103bc:	4632      	mov	r2, r6
900103be:	4629      	mov	r1, r5
900103c0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900103c2:	4798      	blx	r3
900103c4:	69a4      	ldr	r4, [r4, #24]
900103c6:	e7f6      	b.n	900103b6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
900103c8:	bd70      	pop	{r4, r5, r6, pc}

900103ca <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
900103ca:	b538      	push	{r3, r4, r5, lr}
900103cc:	460d      	mov	r5, r1
900103ce:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900103d0:	b134      	cbz	r4, 900103e0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
900103d2:	682b      	ldr	r3, [r5, #0]
900103d4:	4621      	mov	r1, r4
900103d6:	4628      	mov	r0, r5
900103d8:	689b      	ldr	r3, [r3, #8]
900103da:	4798      	blx	r3
900103dc:	69a4      	ldr	r4, [r4, #24]
900103de:	e7f7      	b.n	900103d0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
900103e0:	bd38      	pop	{r3, r4, r5, pc}

900103e2 <_ZN8touchgfx9ContainerD1Ev>:
900103e2:	4770      	bx	lr

900103e4 <_ZN8touchgfx9ContainerD0Ev>:
900103e4:	b510      	push	{r4, lr}
900103e6:	4604      	mov	r4, r0
900103e8:	212c      	movs	r1, #44	@ 0x2c
900103ea:	f019 f83f 	bl	9002946c <_ZdlPvj>
900103ee:	4620      	mov	r0, r4
900103f0:	bd10      	pop	{r4, pc}

900103f2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
900103f2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
900103f4:	b19b      	cbz	r3, 9001041e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
900103f6:	428b      	cmp	r3, r1
900103f8:	d109      	bne.n	9001040e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
900103fa:	699a      	ldr	r2, [r3, #24]
900103fc:	2100      	movs	r1, #0
900103fe:	6159      	str	r1, [r3, #20]
90010400:	6282      	str	r2, [r0, #40]	@ 0x28
90010402:	b902      	cbnz	r2, 90010406 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90010404:	4770      	bx	lr
90010406:	6199      	str	r1, [r3, #24]
90010408:	4770      	bx	lr
9001040a:	4613      	mov	r3, r2
9001040c:	b13a      	cbz	r2, 9001041e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9001040e:	699a      	ldr	r2, [r3, #24]
90010410:	428a      	cmp	r2, r1
90010412:	d1fa      	bne.n	9001040a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90010414:	698a      	ldr	r2, [r1, #24]
90010416:	619a      	str	r2, [r3, #24]
90010418:	2300      	movs	r3, #0
9001041a:	e9c1 3305 	strd	r3, r3, [r1, #20]
9001041e:	4770      	bx	lr

90010420 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
90010420:	b410      	push	{r4}
90010422:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90010424:	4604      	mov	r4, r0
90010426:	b92b      	cbnz	r3, 90010434 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90010428:	6803      	ldr	r3, [r0, #0]
9001042a:	4611      	mov	r1, r2
9001042c:	f85d 4b04 	ldr.w	r4, [sp], #4
90010430:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90010432:	4718      	bx	r3
90010434:	b941      	cbnz	r1, 90010448 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
90010436:	6193      	str	r3, [r2, #24]
90010438:	6282      	str	r2, [r0, #40]	@ 0x28
9001043a:	6154      	str	r4, [r2, #20]
9001043c:	f85d 4b04 	ldr.w	r4, [sp], #4
90010440:	4770      	bx	lr
90010442:	4603      	mov	r3, r0
90010444:	2800      	cmp	r0, #0
90010446:	d0f9      	beq.n	9001043c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90010448:	4299      	cmp	r1, r3
9001044a:	6998      	ldr	r0, [r3, #24]
9001044c:	d1f9      	bne.n	90010442 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
9001044e:	6190      	str	r0, [r2, #24]
90010450:	618a      	str	r2, [r1, #24]
90010452:	e7f2      	b.n	9001043a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90010454 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90010454:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010458:	461f      	mov	r7, r3
9001045a:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
9001045e:	460d      	mov	r5, r1
90010460:	4616      	mov	r6, r2
90010462:	b103      	cbz	r3, 90010466 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90010464:	6038      	str	r0, [r7, #0]
90010466:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010468:	b314      	cbz	r4, 900104b0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
9001046a:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9001046e:	b1eb      	cbz	r3, 900104ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010470:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90010474:	428d      	cmp	r5, r1
90010476:	db19      	blt.n	900104ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010478:	b289      	uxth	r1, r1
9001047a:	8923      	ldrh	r3, [r4, #8]
9001047c:	440b      	add	r3, r1
9001047e:	b21b      	sxth	r3, r3
90010480:	429d      	cmp	r5, r3
90010482:	da13      	bge.n	900104ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010484:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90010488:	4296      	cmp	r6, r2
9001048a:	db0f      	blt.n	900104ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9001048c:	b292      	uxth	r2, r2
9001048e:	8963      	ldrh	r3, [r4, #10]
90010490:	4413      	add	r3, r2
90010492:	b21b      	sxth	r3, r3
90010494:	429e      	cmp	r6, r3
90010496:	da09      	bge.n	900104ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90010498:	6823      	ldr	r3, [r4, #0]
9001049a:	1ab2      	subs	r2, r6, r2
9001049c:	1a69      	subs	r1, r5, r1
9001049e:	4620      	mov	r0, r4
900104a0:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
900104a4:	b212      	sxth	r2, r2
900104a6:	463b      	mov	r3, r7
900104a8:	b209      	sxth	r1, r1
900104aa:	47c0      	blx	r8
900104ac:	69a4      	ldr	r4, [r4, #24]
900104ae:	e7db      	b.n	90010468 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
900104b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900104b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
900104b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900104b8:	4c6d      	ldr	r4, [pc, #436]	@ (90010670 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
900104ba:	b0a1      	sub	sp, #132	@ 0x84
900104bc:	4606      	mov	r6, r0
900104be:	6824      	ldr	r4, [r4, #0]
900104c0:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
900104c2:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
900104c6:	2400      	movs	r4, #0
900104c8:	9303      	str	r3, [sp, #12]
900104ca:	802c      	strh	r4, [r5, #0]
900104cc:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
900104ce:	802c      	strh	r4, [r5, #0]
900104d0:	601c      	str	r4, [r3, #0]
900104d2:	e9cd 1201 	strd	r1, r2, [sp, #4]
900104d6:	f7ff ffbd 	bl	90010454 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900104da:	f1b9 0f03 	cmp.w	r9, #3
900104de:	f340 80c1 	ble.w	90010664 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
900104e2:	4631      	mov	r1, r6
900104e4:	a80c      	add	r0, sp, #48	@ 0x30
900104e6:	f007 fc71 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900104ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
900104ee:	9306      	str	r3, [sp, #24]
900104f0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
900104f4:	9307      	str	r3, [sp, #28]
900104f6:	9b03      	ldr	r3, [sp, #12]
900104f8:	f8d3 a000 	ldr.w	sl, [r3]
900104fc:	f1ba 0f00 	cmp.w	sl, #0
90010500:	f000 80b3 	beq.w	9001066a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90010504:	4651      	mov	r1, sl
90010506:	a810      	add	r0, sp, #64	@ 0x40
90010508:	f007 fc60 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001050c:	2002      	movs	r0, #2
9001050e:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
90010512:	9b01      	ldr	r3, [sp, #4]
90010514:	9a06      	ldr	r2, [sp, #24]
90010516:	fb91 f1f0 	sdiv	r1, r1, r0
9001051a:	189d      	adds	r5, r3, r2
9001051c:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
90010520:	9a07      	ldr	r2, [sp, #28]
90010522:	4419      	add	r1, r3
90010524:	9b02      	ldr	r3, [sp, #8]
90010526:	4413      	add	r3, r2
90010528:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
9001052c:	1a6d      	subs	r5, r5, r1
9001052e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
90010532:	fb92 f2f0 	sdiv	r2, r2, r0
90010536:	440a      	add	r2, r1
90010538:	1a9b      	subs	r3, r3, r2
9001053a:	435b      	muls	r3, r3
9001053c:	fb05 3505 	mla	r5, r5, r5, r3
90010540:	4f4c      	ldr	r7, [pc, #304]	@ (90010674 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90010542:	ac10      	add	r4, sp, #64	@ 0x40
90010544:	f1b9 0f0c 	cmp.w	r9, #12
90010548:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001054a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9001054c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001054e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010550:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010552:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010554:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90010558:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001055c:	f04f 0303 	mov.w	r3, #3
90010560:	bfd8      	it	le
90010562:	f109 32ff 	addle.w	r2, r9, #4294967295
90010566:	f04f 0400 	mov.w	r4, #0
9001056a:	f8cd 9000 	str.w	r9, [sp]
9001056e:	bfcc      	ite	gt
90010570:	4698      	movgt	r8, r3
90010572:	fb92 f8f3 	sdivle	r8, r2, r3
90010576:	1c63      	adds	r3, r4, #1
90010578:	aa10      	add	r2, sp, #64	@ 0x40
9001057a:	f004 0401 	and.w	r4, r4, #1
9001057e:	f04f 0b00 	mov.w	fp, #0
90010582:	9308      	str	r3, [sp, #32]
90010584:	9b00      	ldr	r3, [sp, #0]
90010586:	eb02 1444 	add.w	r4, r2, r4, lsl #5
9001058a:	fb93 f3f8 	sdiv	r3, r3, r8
9001058e:	3404      	adds	r4, #4
90010590:	b29b      	uxth	r3, r3
90010592:	9304      	str	r3, [sp, #16]
90010594:	9a04      	ldr	r2, [sp, #16]
90010596:	f854 3c04 	ldr.w	r3, [r4, #-4]
9001059a:	fb13 f302 	smulbb	r3, r3, r2
9001059e:	9a01      	ldr	r2, [sp, #4]
900105a0:	b29b      	uxth	r3, r3
900105a2:	1899      	adds	r1, r3, r2
900105a4:	9305      	str	r3, [sp, #20]
900105a6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900105aa:	b209      	sxth	r1, r1
900105ac:	4299      	cmp	r1, r3
900105ae:	db4d      	blt.n	9001064c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900105b0:	8932      	ldrh	r2, [r6, #8]
900105b2:	4413      	add	r3, r2
900105b4:	b21b      	sxth	r3, r3
900105b6:	4299      	cmp	r1, r3
900105b8:	da48      	bge.n	9001064c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900105ba:	9b04      	ldr	r3, [sp, #16]
900105bc:	6827      	ldr	r7, [r4, #0]
900105be:	fb17 f703 	smulbb	r7, r7, r3
900105c2:	9b02      	ldr	r3, [sp, #8]
900105c4:	b2bf      	uxth	r7, r7
900105c6:	18fa      	adds	r2, r7, r3
900105c8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900105cc:	b212      	sxth	r2, r2
900105ce:	429a      	cmp	r2, r3
900105d0:	db3c      	blt.n	9001064c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900105d2:	8970      	ldrh	r0, [r6, #10]
900105d4:	4403      	add	r3, r0
900105d6:	b21b      	sxth	r3, r3
900105d8:	429a      	cmp	r2, r3
900105da:	da37      	bge.n	9001064c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900105dc:	2300      	movs	r3, #0
900105de:	4630      	mov	r0, r6
900105e0:	930b      	str	r3, [sp, #44]	@ 0x2c
900105e2:	ab0b      	add	r3, sp, #44	@ 0x2c
900105e4:	f7ff ff36 	bl	90010454 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900105e8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900105ea:	b37a      	cbz	r2, 9001064c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900105ec:	4552      	cmp	r2, sl
900105ee:	d02d      	beq.n	9001064c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900105f0:	4611      	mov	r1, r2
900105f2:	a80e      	add	r0, sp, #56	@ 0x38
900105f4:	9209      	str	r2, [sp, #36]	@ 0x24
900105f6:	f007 fbe9 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900105fa:	f04f 0e02 	mov.w	lr, #2
900105fe:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
90010602:	9a06      	ldr	r2, [sp, #24]
90010604:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
90010608:	9b01      	ldr	r3, [sp, #4]
9001060a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
9001060e:	4413      	add	r3, r2
90010610:	9a07      	ldr	r2, [sp, #28]
90010612:	fb91 f1fe 	sdiv	r1, r1, lr
90010616:	fb9c fcfe 	sdiv	ip, ip, lr
9001061a:	4401      	add	r1, r0
9001061c:	1a58      	subs	r0, r3, r1
9001061e:	9b02      	ldr	r3, [sp, #8]
90010620:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
90010624:	4413      	add	r3, r2
90010626:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90010628:	448c      	add	ip, r1
9001062a:	eba3 030c 	sub.w	r3, r3, ip
9001062e:	435b      	muls	r3, r3
90010630:	fb00 3300 	mla	r3, r0, r0, r3
90010634:	42ab      	cmp	r3, r5
90010636:	d208      	bcs.n	9001064a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90010638:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001063a:	461d      	mov	r5, r3
9001063c:	9803      	ldr	r0, [sp, #12]
9001063e:	6001      	str	r1, [r0, #0]
90010640:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90010642:	9805      	ldr	r0, [sp, #20]
90010644:	8008      	strh	r0, [r1, #0]
90010646:	992b      	ldr	r1, [sp, #172]	@ 0xac
90010648:	800f      	strh	r7, [r1, #0]
9001064a:	4692      	mov	sl, r2
9001064c:	f10b 0b01 	add.w	fp, fp, #1
90010650:	3408      	adds	r4, #8
90010652:	f1bb 0f04 	cmp.w	fp, #4
90010656:	d19d      	bne.n	90010594 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90010658:	9b00      	ldr	r3, [sp, #0]
9001065a:	9c08      	ldr	r4, [sp, #32]
9001065c:	444b      	add	r3, r9
9001065e:	4544      	cmp	r4, r8
90010660:	9300      	str	r3, [sp, #0]
90010662:	d188      	bne.n	90010576 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90010664:	b021      	add	sp, #132	@ 0x84
90010666:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001066a:	f04f 35ff 	mov.w	r5, #4294967295
9001066e:	e767      	b.n	90010540 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90010670:	240233d4 	.word	0x240233d4
90010674:	9002abd8 	.word	0x9002abd8

90010678 <_ZN8touchgfx4RectaNERKS0_>:
90010678:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001067c:	f9b1 7000 	ldrsh.w	r7, [r1]
90010680:	888c      	ldrh	r4, [r1, #4]
90010682:	f9b0 9000 	ldrsh.w	r9, [r0]
90010686:	443c      	add	r4, r7
90010688:	b2a4      	uxth	r4, r4
9001068a:	fa0f f884 	sxth.w	r8, r4
9001068e:	45c1      	cmp	r9, r8
90010690:	da2f      	bge.n	900106f2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010692:	8882      	ldrh	r2, [r0, #4]
90010694:	444a      	add	r2, r9
90010696:	b292      	uxth	r2, r2
90010698:	fa0f fe82 	sxth.w	lr, r2
9001069c:	4577      	cmp	r7, lr
9001069e:	da28      	bge.n	900106f2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900106a0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
900106a4:	88cb      	ldrh	r3, [r1, #6]
900106a6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900106aa:	442b      	add	r3, r5
900106ac:	b21b      	sxth	r3, r3
900106ae:	429e      	cmp	r6, r3
900106b0:	da1f      	bge.n	900106f2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900106b2:	88c3      	ldrh	r3, [r0, #6]
900106b4:	4433      	add	r3, r6
900106b6:	b29b      	uxth	r3, r3
900106b8:	fa0f fc83 	sxth.w	ip, r3
900106bc:	4565      	cmp	r5, ip
900106be:	da18      	bge.n	900106f2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900106c0:	454f      	cmp	r7, r9
900106c2:	bfb8      	it	lt
900106c4:	464f      	movlt	r7, r9
900106c6:	42b5      	cmp	r5, r6
900106c8:	bfb8      	it	lt
900106ca:	4635      	movlt	r5, r6
900106cc:	45f0      	cmp	r8, lr
900106ce:	bfd8      	it	le
900106d0:	4622      	movle	r2, r4
900106d2:	1bd2      	subs	r2, r2, r7
900106d4:	8082      	strh	r2, [r0, #4]
900106d6:	884a      	ldrh	r2, [r1, #2]
900106d8:	88c9      	ldrh	r1, [r1, #6]
900106da:	8007      	strh	r7, [r0, #0]
900106dc:	440a      	add	r2, r1
900106de:	8045      	strh	r5, [r0, #2]
900106e0:	b292      	uxth	r2, r2
900106e2:	b211      	sxth	r1, r2
900106e4:	458c      	cmp	ip, r1
900106e6:	bfa8      	it	ge
900106e8:	4613      	movge	r3, r2
900106ea:	1b5b      	subs	r3, r3, r5
900106ec:	80c3      	strh	r3, [r0, #6]
900106ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900106f2:	2300      	movs	r3, #0
900106f4:	8003      	strh	r3, [r0, #0]
900106f6:	8043      	strh	r3, [r0, #2]
900106f8:	8083      	strh	r3, [r0, #4]
900106fa:	80c3      	strh	r3, [r0, #6]
900106fc:	e7f7      	b.n	900106ee <_ZN8touchgfx4RectaNERKS0_+0x76>

900106fe <_ZNK8touchgfx4Rect7isEmptyEv>:
900106fe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90010702:	2b00      	cmp	r3, #0
90010704:	dd06      	ble.n	90010714 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90010706:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
9001070a:	2800      	cmp	r0, #0
9001070c:	bfcc      	ite	gt
9001070e:	2000      	movgt	r0, #0
90010710:	2001      	movle	r0, #1
90010712:	4770      	bx	lr
90010714:	2001      	movs	r0, #1
90010716:	4770      	bx	lr

90010718 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90010718:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001071c:	2300      	movs	r3, #0
9001071e:	4604      	mov	r4, r0
90010720:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90010722:	8003      	strh	r3, [r0, #0]
90010724:	8043      	strh	r3, [r0, #2]
90010726:	8083      	strh	r3, [r0, #4]
90010728:	80c3      	strh	r3, [r0, #6]
9001072a:	2d00      	cmp	r5, #0
9001072c:	d040      	beq.n	900107b0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
9001072e:	1d28      	adds	r0, r5, #4
90010730:	f7ff ffe5 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
90010734:	b988      	cbnz	r0, 9001075a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010736:	4620      	mov	r0, r4
90010738:	f7ff ffe1 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
9001073c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90010740:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90010744:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90010748:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
9001074c:	b138      	cbz	r0, 9001075e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
9001074e:	8022      	strh	r2, [r4, #0]
90010750:	8063      	strh	r3, [r4, #2]
90010752:	f8a4 e004 	strh.w	lr, [r4, #4]
90010756:	f8a4 c006 	strh.w	ip, [r4, #6]
9001075a:	69ad      	ldr	r5, [r5, #24]
9001075c:	e7e5      	b.n	9001072a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
9001075e:	f9b4 0000 	ldrsh.w	r0, [r4]
90010762:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90010766:	4290      	cmp	r0, r2
90010768:	4607      	mov	r7, r0
9001076a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
9001076e:	460e      	mov	r6, r1
90010770:	bfa8      	it	ge
90010772:	4617      	movge	r7, r2
90010774:	4299      	cmp	r1, r3
90010776:	4472      	add	r2, lr
90010778:	f8b4 e006 	ldrh.w	lr, [r4, #6]
9001077c:	bfa8      	it	ge
9001077e:	461e      	movge	r6, r3
90010780:	4440      	add	r0, r8
90010782:	4471      	add	r1, lr
90010784:	4463      	add	r3, ip
90010786:	b200      	sxth	r0, r0
90010788:	8027      	strh	r7, [r4, #0]
9001078a:	b212      	sxth	r2, r2
9001078c:	8066      	strh	r6, [r4, #2]
9001078e:	b209      	sxth	r1, r1
90010790:	b21b      	sxth	r3, r3
90010792:	4290      	cmp	r0, r2
90010794:	bfac      	ite	ge
90010796:	ebc7 0200 	rsbge	r2, r7, r0
9001079a:	ebc7 0202 	rsblt	r2, r7, r2
9001079e:	4299      	cmp	r1, r3
900107a0:	bfac      	ite	ge
900107a2:	ebc6 0301 	rsbge	r3, r6, r1
900107a6:	ebc6 0303 	rsblt	r3, r6, r3
900107aa:	80a2      	strh	r2, [r4, #4]
900107ac:	80e3      	strh	r3, [r4, #6]
900107ae:	e7d4      	b.n	9001075a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
900107b0:	4620      	mov	r0, r4
900107b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900107b6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
900107b6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900107ba:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900107be:	b383      	cbz	r3, 90010822 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900107c0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900107c2:	b374      	cbz	r4, 90010822 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900107c4:	f9b1 5000 	ldrsh.w	r5, [r1]
900107c8:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
900107cc:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
900107d0:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
900107d4:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
900107d8:	b303      	cbz	r3, 9001081c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900107da:	4668      	mov	r0, sp
900107dc:	1d21      	adds	r1, r4, #4
900107de:	f8ad 5000 	strh.w	r5, [sp]
900107e2:	f8ad 6002 	strh.w	r6, [sp, #2]
900107e6:	f8ad 7004 	strh.w	r7, [sp, #4]
900107ea:	f8ad 8006 	strh.w	r8, [sp, #6]
900107ee:	f7ff ff43 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
900107f2:	4668      	mov	r0, sp
900107f4:	f7ff ff83 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
900107f8:	b980      	cbnz	r0, 9001081c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900107fa:	f8bd 3000 	ldrh.w	r3, [sp]
900107fe:	4669      	mov	r1, sp
90010800:	88a2      	ldrh	r2, [r4, #4]
90010802:	4620      	mov	r0, r4
90010804:	1a9b      	subs	r3, r3, r2
90010806:	88e2      	ldrh	r2, [r4, #6]
90010808:	f8ad 3000 	strh.w	r3, [sp]
9001080c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90010810:	1a9b      	subs	r3, r3, r2
90010812:	f8ad 3002 	strh.w	r3, [sp, #2]
90010816:	6823      	ldr	r3, [r4, #0]
90010818:	689b      	ldr	r3, [r3, #8]
9001081a:	4798      	blx	r3
9001081c:	69a4      	ldr	r4, [r4, #24]
9001081e:	2c00      	cmp	r4, #0
90010820:	d1d8      	bne.n	900107d4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90010822:	b002      	add	sp, #8
90010824:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010828 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90010828:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001082a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9001082e:	460d      	mov	r5, r1
90010830:	4616      	mov	r6, r2
90010832:	b323      	cbz	r3, 9001087e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010834:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010836:	b314      	cbz	r4, 9001087e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010838:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9001083c:	b1eb      	cbz	r3, 9001087a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001083e:	6828      	ldr	r0, [r5, #0]
90010840:	466b      	mov	r3, sp
90010842:	6869      	ldr	r1, [r5, #4]
90010844:	c303      	stmia	r3!, {r0, r1}
90010846:	4668      	mov	r0, sp
90010848:	1d21      	adds	r1, r4, #4
9001084a:	f7ff ff15 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
9001084e:	4668      	mov	r0, sp
90010850:	f7ff ff55 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
90010854:	b988      	cbnz	r0, 9001087a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90010856:	f8bd 3000 	ldrh.w	r3, [sp]
9001085a:	4669      	mov	r1, sp
9001085c:	88a2      	ldrh	r2, [r4, #4]
9001085e:	4620      	mov	r0, r4
90010860:	1a9b      	subs	r3, r3, r2
90010862:	88e2      	ldrh	r2, [r4, #6]
90010864:	f8ad 3000 	strh.w	r3, [sp]
90010868:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001086c:	1a9b      	subs	r3, r3, r2
9001086e:	4632      	mov	r2, r6
90010870:	f8ad 3002 	strh.w	r3, [sp, #2]
90010874:	6823      	ldr	r3, [r4, #0]
90010876:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90010878:	4798      	blx	r3
9001087a:	69a4      	ldr	r4, [r4, #24]
9001087c:	e7db      	b.n	90010836 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
9001087e:	b002      	add	sp, #8
90010880:	bd70      	pop	{r4, r5, r6, pc}

90010882 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90010882:	6803      	ldr	r3, [r0, #0]
90010884:	b513      	push	{r0, r1, r4, lr}
90010886:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
9001088a:	2300      	movs	r3, #0
9001088c:	e9cd 3300 	strd	r3, r3, [sp]
90010890:	466b      	mov	r3, sp
90010892:	47a0      	blx	r4
90010894:	b002      	add	sp, #8
90010896:	bd10      	pop	{r4, pc}

90010898 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90010898:	2301      	movs	r3, #1
9001089a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
9001089e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900108a2:	4770      	bx	lr

900108a4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
900108a4:	2301      	movs	r3, #1
900108a6:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
900108aa:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900108ae:	4770      	bx	lr

900108b0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
900108b0:	6843      	ldr	r3, [r0, #4]
900108b2:	2201      	movs	r2, #1
900108b4:	725a      	strb	r2, [r3, #9]
900108b6:	6840      	ldr	r0, [r0, #4]
900108b8:	6803      	ldr	r3, [r0, #0]
900108ba:	691b      	ldr	r3, [r3, #16]
900108bc:	4718      	bx	r3

900108be <_ZN8touchgfx3HAL8flushDMAEv>:
900108be:	6840      	ldr	r0, [r0, #4]
900108c0:	6803      	ldr	r3, [r0, #0]
900108c2:	689b      	ldr	r3, [r3, #8]
900108c4:	4718      	bx	r3

900108c6 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
900108c6:	b530      	push	{r4, r5, lr}
900108c8:	b08b      	sub	sp, #44	@ 0x2c
900108ca:	6804      	ldr	r4, [r0, #0]
900108cc:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
900108d0:	9509      	str	r5, [sp, #36]	@ 0x24
900108d2:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
900108d6:	9508      	str	r5, [sp, #32]
900108d8:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
900108dc:	9507      	str	r5, [sp, #28]
900108de:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
900108e2:	9506      	str	r5, [sp, #24]
900108e4:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
900108e8:	9505      	str	r5, [sp, #20]
900108ea:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
900108ee:	9504      	str	r5, [sp, #16]
900108f0:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
900108f4:	9503      	str	r5, [sp, #12]
900108f6:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
900108fa:	9502      	str	r5, [sp, #8]
900108fc:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
90010900:	e9cd 3500 	strd	r3, r5, [sp]
90010904:	4613      	mov	r3, r2
90010906:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
90010908:	2200      	movs	r2, #0
9001090a:	47a0      	blx	r4
9001090c:	b00b      	add	sp, #44	@ 0x2c
9001090e:	bd30      	pop	{r4, r5, pc}

90010910 <_ZN8touchgfx3HAL10beginFrameEv>:
90010910:	4b04      	ldr	r3, [pc, #16]	@ (90010924 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90010912:	781b      	ldrb	r3, [r3, #0]
90010914:	b123      	cbz	r3, 90010920 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90010916:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
9001091a:	f080 0001 	eor.w	r0, r0, #1
9001091e:	4770      	bx	lr
90010920:	2001      	movs	r0, #1
90010922:	4770      	bx	lr
90010924:	240233d2 	.word	0x240233d2

90010928 <_ZN8touchgfx3HAL8endFrameEv>:
90010928:	b510      	push	{r4, lr}
9001092a:	4604      	mov	r4, r0
9001092c:	6840      	ldr	r0, [r0, #4]
9001092e:	6803      	ldr	r3, [r0, #0]
90010930:	689b      	ldr	r3, [r3, #8]
90010932:	4798      	blx	r3
90010934:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
90010938:	b113      	cbz	r3, 90010940 <_ZN8touchgfx3HAL8endFrameEv+0x18>
9001093a:	2301      	movs	r3, #1
9001093c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90010940:	bd10      	pop	{r4, pc}

90010942 <_ZN8touchgfx3HAL10initializeEv>:
90010942:	b510      	push	{r4, lr}
90010944:	4604      	mov	r4, r0
90010946:	f7f1 fcc7 	bl	900022d8 <_ZN8touchgfx10OSWrappers10initializeEv>
9001094a:	f7f0 f945 	bl	90000bd8 <_ZN8touchgfx4GPIO4initEv>
9001094e:	6860      	ldr	r0, [r4, #4]
90010950:	6803      	ldr	r3, [r0, #0]
90010952:	68db      	ldr	r3, [r3, #12]
90010954:	4798      	blx	r3
90010956:	68e0      	ldr	r0, [r4, #12]
90010958:	6803      	ldr	r3, [r0, #0]
9001095a:	689b      	ldr	r3, [r3, #8]
9001095c:	4798      	blx	r3
9001095e:	6823      	ldr	r3, [r4, #0]
90010960:	4620      	mov	r0, r4
90010962:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90010964:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90010968:	4718      	bx	r3
	...

9001096c <_ZN8touchgfx3HAL4tickEv>:
9001096c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001096e:	6803      	ldr	r3, [r0, #0]
90010970:	4604      	mov	r4, r0
90010972:	4d5b      	ldr	r5, [pc, #364]	@ (90010ae0 <_ZN8touchgfx3HAL4tickEv+0x174>)
90010974:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
90010978:	4798      	blx	r3
9001097a:	2800      	cmp	r0, #0
9001097c:	f000 8095 	beq.w	90010aaa <_ZN8touchgfx3HAL4tickEv+0x13e>
90010980:	2001      	movs	r0, #1
90010982:	2600      	movs	r6, #0
90010984:	f7f0 f962 	bl	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90010988:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
9001098c:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
90010990:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90010994:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
90010998:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
9001099c:	b133      	cbz	r3, 900109ac <_ZN8touchgfx3HAL4tickEv+0x40>
9001099e:	6823      	ldr	r3, [r4, #0]
900109a0:	4620      	mov	r0, r4
900109a2:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
900109a6:	4798      	blx	r3
900109a8:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
900109ac:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
900109b0:	2601      	movs	r6, #1
900109b2:	6862      	ldr	r2, [r4, #4]
900109b4:	f083 0301 	eor.w	r3, r3, #1
900109b8:	702e      	strb	r6, [r5, #0]
900109ba:	7253      	strb	r3, [r2, #9]
900109bc:	f006 f8f2 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
900109c0:	6803      	ldr	r3, [r0, #0]
900109c2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900109c4:	4798      	blx	r3
900109c6:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
900109ca:	b90b      	cbnz	r3, 900109d0 <_ZN8touchgfx3HAL4tickEv+0x64>
900109cc:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
900109d0:	f006 f8e8 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
900109d4:	6803      	ldr	r3, [r0, #0]
900109d6:	695b      	ldr	r3, [r3, #20]
900109d8:	4798      	blx	r3
900109da:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
900109dc:	6803      	ldr	r3, [r0, #0]
900109de:	691b      	ldr	r3, [r3, #16]
900109e0:	4798      	blx	r3
900109e2:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
900109e6:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
900109ea:	3b01      	subs	r3, #1
900109ec:	b2db      	uxtb	r3, r3
900109ee:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
900109f2:	b10a      	cbz	r2, 900109f8 <_ZN8touchgfx3HAL4tickEv+0x8c>
900109f4:	2b00      	cmp	r3, #0
900109f6:	d1eb      	bne.n	900109d0 <_ZN8touchgfx3HAL4tickEv+0x64>
900109f8:	4a3a      	ldr	r2, [pc, #232]	@ (90010ae4 <_ZN8touchgfx3HAL4tickEv+0x178>)
900109fa:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
900109fe:	7813      	ldrb	r3, [r2, #0]
90010a00:	3301      	adds	r3, #1
90010a02:	b25b      	sxtb	r3, r3
90010a04:	4299      	cmp	r1, r3
90010a06:	7013      	strb	r3, [r2, #0]
90010a08:	dc10      	bgt.n	90010a2c <_ZN8touchgfx3HAL4tickEv+0xc0>
90010a0a:	2300      	movs	r3, #0
90010a0c:	68e0      	ldr	r0, [r4, #12]
90010a0e:	a902      	add	r1, sp, #8
90010a10:	7013      	strb	r3, [r2, #0]
90010a12:	aa03      	add	r2, sp, #12
90010a14:	6803      	ldr	r3, [r0, #0]
90010a16:	68db      	ldr	r3, [r3, #12]
90010a18:	4798      	blx	r3
90010a1a:	6823      	ldr	r3, [r4, #0]
90010a1c:	2800      	cmp	r0, #0
90010a1e:	d050      	beq.n	90010ac2 <_ZN8touchgfx3HAL4tickEv+0x156>
90010a20:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
90010a24:	4620      	mov	r0, r4
90010a26:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90010a2a:	4798      	blx	r3
90010a2c:	2300      	movs	r3, #0
90010a2e:	6960      	ldr	r0, [r4, #20]
90010a30:	f88d 3007 	strb.w	r3, [sp, #7]
90010a34:	b158      	cbz	r0, 90010a4e <_ZN8touchgfx3HAL4tickEv+0xe2>
90010a36:	6803      	ldr	r3, [r0, #0]
90010a38:	f10d 0107 	add.w	r1, sp, #7
90010a3c:	68db      	ldr	r3, [r3, #12]
90010a3e:	4798      	blx	r3
90010a40:	b128      	cbz	r0, 90010a4e <_ZN8touchgfx3HAL4tickEv+0xe2>
90010a42:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90010a44:	f89d 1007 	ldrb.w	r1, [sp, #7]
90010a48:	6803      	ldr	r3, [r0, #0]
90010a4a:	68db      	ldr	r3, [r3, #12]
90010a4c:	4798      	blx	r3
90010a4e:	f104 001c 	add.w	r0, r4, #28
90010a52:	f017 feef 	bl	90028834 <_ZN8touchgfx8Gestures4tickEv>
90010a56:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
90010a5a:	b30b      	cbz	r3, 90010aa0 <_ZN8touchgfx3HAL4tickEv+0x134>
90010a5c:	6920      	ldr	r0, [r4, #16]
90010a5e:	6803      	ldr	r3, [r0, #0]
90010a60:	691b      	ldr	r3, [r3, #16]
90010a62:	4798      	blx	r3
90010a64:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90010a66:	4606      	mov	r6, r0
90010a68:	b903      	cbnz	r3, 90010a6c <_ZN8touchgfx3HAL4tickEv+0x100>
90010a6a:	6760      	str	r0, [r4, #116]	@ 0x74
90010a6c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90010a6e:	4a1e      	ldr	r2, [pc, #120]	@ (90010ae8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
90010a70:	1af3      	subs	r3, r6, r3
90010a72:	4293      	cmp	r3, r2
90010a74:	d914      	bls.n	90010aa0 <_ZN8touchgfx3HAL4tickEv+0x134>
90010a76:	6920      	ldr	r0, [r4, #16]
90010a78:	6803      	ldr	r3, [r0, #0]
90010a7a:	699b      	ldr	r3, [r3, #24]
90010a7c:	4798      	blx	r3
90010a7e:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90010a80:	2264      	movs	r2, #100	@ 0x64
90010a82:	1af3      	subs	r3, r6, r3
90010a84:	fbb3 f3f2 	udiv	r3, r3, r2
90010a88:	fbb0 f0f3 	udiv	r0, r0, r3
90010a8c:	2800      	cmp	r0, #0
90010a8e:	dc1d      	bgt.n	90010acc <_ZN8touchgfx3HAL4tickEv+0x160>
90010a90:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
90010a94:	6920      	ldr	r0, [r4, #16]
90010a96:	2100      	movs	r1, #0
90010a98:	6803      	ldr	r3, [r0, #0]
90010a9a:	69db      	ldr	r3, [r3, #28]
90010a9c:	4798      	blx	r3
90010a9e:	6766      	str	r6, [r4, #116]	@ 0x74
90010aa0:	f006 f880 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
90010aa4:	6803      	ldr	r3, [r0, #0]
90010aa6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90010aa8:	4798      	blx	r3
90010aaa:	6823      	ldr	r3, [r4, #0]
90010aac:	4620      	mov	r0, r4
90010aae:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
90010ab2:	4798      	blx	r3
90010ab4:	2001      	movs	r0, #1
90010ab6:	f7f0 f8fd 	bl	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90010aba:	2300      	movs	r3, #0
90010abc:	702b      	strb	r3, [r5, #0]
90010abe:	b004      	add	sp, #16
90010ac0:	bd70      	pop	{r4, r5, r6, pc}
90010ac2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
90010ac6:	4620      	mov	r0, r4
90010ac8:	4798      	blx	r3
90010aca:	e7af      	b.n	90010a2c <_ZN8touchgfx3HAL4tickEv+0xc0>
90010acc:	2863      	cmp	r0, #99	@ 0x63
90010ace:	bfcb      	itete	gt
90010ad0:	2300      	movgt	r3, #0
90010ad2:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
90010ad6:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
90010ada:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
90010ade:	e7d9      	b.n	90010a94 <_ZN8touchgfx3HAL4tickEv+0x128>
90010ae0:	240233d8 	.word	0x240233d8
90010ae4:	240233d9 	.word	0x240233d9
90010ae8:	05f5e100 	.word	0x05f5e100

90010aec <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90010aec:	b510      	push	{r4, lr}
90010aee:	4604      	mov	r4, r0
90010af0:	f7f1 fc24 	bl	9000233c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90010af4:	2200      	movs	r2, #0
90010af6:	6863      	ldr	r3, [r4, #4]
90010af8:	729a      	strb	r2, [r3, #10]
90010afa:	bd10      	pop	{r4, pc}

90010afc <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90010afc:	65c1      	str	r1, [r0, #92]	@ 0x5c
90010afe:	301c      	adds	r0, #28
90010b00:	f017 be96 	b.w	90028830 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90010b04 <_ZN8touchgfx3HAL5touchEll>:
90010b04:	b530      	push	{r4, r5, lr}
90010b06:	b087      	sub	sp, #28
90010b08:	4604      	mov	r4, r0
90010b0a:	a804      	add	r0, sp, #16
90010b0c:	e9cd 1204 	strd	r1, r2, [sp, #16]
90010b10:	f005 fe2e 	bl	90016770 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90010b14:	9b04      	ldr	r3, [sp, #16]
90010b16:	a906      	add	r1, sp, #24
90010b18:	a803      	add	r0, sp, #12
90010b1a:	f8ad 300c 	strh.w	r3, [sp, #12]
90010b1e:	9b05      	ldr	r3, [sp, #20]
90010b20:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90010b24:	f005 fe76 	bl	90016814 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90010b28:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
90010b2c:	f104 001c 	add.w	r0, r4, #28
90010b30:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90010b34:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90010b38:	b189      	cbz	r1, 90010b5e <_ZN8touchgfx3HAL5touchEll+0x5a>
90010b3a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
90010b3e:	9300      	str	r3, [sp, #0]
90010b40:	4613      	mov	r3, r2
90010b42:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
90010b46:	462a      	mov	r2, r5
90010b48:	f017 fe82 	bl	90028850 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90010b4c:	b128      	cbz	r0, 90010b5a <_ZN8touchgfx3HAL5touchEll+0x56>
90010b4e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90010b52:	6623      	str	r3, [r4, #96]	@ 0x60
90010b54:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90010b58:	6663      	str	r3, [r4, #100]	@ 0x64
90010b5a:	b007      	add	sp, #28
90010b5c:	bd30      	pop	{r4, r5, pc}
90010b5e:	f017 feb7 	bl	900288d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90010b62:	2301      	movs	r3, #1
90010b64:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90010b68:	e7f1      	b.n	90010b4e <_ZN8touchgfx3HAL5touchEll+0x4a>

90010b6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
90010b6a:	b510      	push	{r4, lr}
90010b6c:	2b00      	cmp	r3, #0
90010b6e:	d046      	beq.n	90010bfe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010b70:	ea81 0002 	eor.w	r0, r1, r2
90010b74:	07c4      	lsls	r4, r0, #31
90010b76:	d508      	bpl.n	90010b8a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90010b78:	440b      	add	r3, r1
90010b7a:	3a01      	subs	r2, #1
90010b7c:	428b      	cmp	r3, r1
90010b7e:	d93e      	bls.n	90010bfe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010b80:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90010b84:	f801 0b01 	strb.w	r0, [r1], #1
90010b88:	e7f8      	b.n	90010b7c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
90010b8a:	07d0      	lsls	r0, r2, #31
90010b8c:	bf42      	ittt	mi
90010b8e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
90010b92:	f103 33ff 	addmi.w	r3, r3, #4294967295
90010b96:	f801 0b01 	strbmi.w	r0, [r1], #1
90010b9a:	2b01      	cmp	r3, #1
90010b9c:	d911      	bls.n	90010bc2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90010b9e:	ea81 0402 	eor.w	r4, r1, r2
90010ba2:	4610      	mov	r0, r2
90010ba4:	07a4      	lsls	r4, r4, #30
90010ba6:	d022      	beq.n	90010bee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90010ba8:	f023 0401 	bic.w	r4, r3, #1
90010bac:	440c      	add	r4, r1
90010bae:	428c      	cmp	r4, r1
90010bb0:	4602      	mov	r2, r0
90010bb2:	d904      	bls.n	90010bbe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90010bb4:	8812      	ldrh	r2, [r2, #0]
90010bb6:	3002      	adds	r0, #2
90010bb8:	f821 2b02 	strh.w	r2, [r1], #2
90010bbc:	e7f7      	b.n	90010bae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90010bbe:	f003 0301 	and.w	r3, r3, #1
90010bc2:	f023 0003 	bic.w	r0, r3, #3
90010bc6:	4408      	add	r0, r1
90010bc8:	4288      	cmp	r0, r1
90010bca:	4614      	mov	r4, r2
90010bcc:	d904      	bls.n	90010bd8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90010bce:	6824      	ldr	r4, [r4, #0]
90010bd0:	3204      	adds	r2, #4
90010bd2:	f841 4b04 	str.w	r4, [r1], #4
90010bd6:	e7f7      	b.n	90010bc8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90010bd8:	f003 0303 	and.w	r3, r3, #3
90010bdc:	3a01      	subs	r2, #1
90010bde:	440b      	add	r3, r1
90010be0:	428b      	cmp	r3, r1
90010be2:	d90c      	bls.n	90010bfe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010be4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90010be8:	f801 0b01 	strb.w	r0, [r1], #1
90010bec:	e7f8      	b.n	90010be0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
90010bee:	0790      	lsls	r0, r2, #30
90010bf0:	d0e7      	beq.n	90010bc2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90010bf2:	f832 0b02 	ldrh.w	r0, [r2], #2
90010bf6:	3b02      	subs	r3, #2
90010bf8:	f821 0b02 	strh.w	r0, [r1], #2
90010bfc:	e7e1      	b.n	90010bc2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90010bfe:	2001      	movs	r0, #1
90010c00:	bd10      	pop	{r4, pc}

90010c02 <_ZN8touchgfx3HAL7noTouchEv>:
90010c02:	b510      	push	{r4, lr}
90010c04:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
90010c08:	4604      	mov	r4, r0
90010c0a:	b153      	cbz	r3, 90010c22 <_ZN8touchgfx3HAL7noTouchEv+0x20>
90010c0c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
90010c10:	2101      	movs	r1, #1
90010c12:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
90010c16:	301c      	adds	r0, #28
90010c18:	f017 fe5a 	bl	900288d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90010c1c:	2300      	movs	r3, #0
90010c1e:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90010c22:	bd10      	pop	{r4, pc}

90010c24 <_ZN8touchgfx8Drawable5setXYEss>:
90010c24:	b570      	push	{r4, r5, r6, lr}
90010c26:	6803      	ldr	r3, [r0, #0]
90010c28:	4604      	mov	r4, r0
90010c2a:	4615      	mov	r5, r2
90010c2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90010c2e:	4798      	blx	r3
90010c30:	6823      	ldr	r3, [r4, #0]
90010c32:	4629      	mov	r1, r5
90010c34:	4620      	mov	r0, r4
90010c36:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010c38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010c3c:	4718      	bx	r3
	...

90010c40 <_ZN8touchgfx3HAL3lcdEv>:
90010c40:	4b04      	ldr	r3, [pc, #16]	@ (90010c54 <_ZN8touchgfx3HAL3lcdEv+0x14>)
90010c42:	681b      	ldr	r3, [r3, #0]
90010c44:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90010c48:	b10a      	cbz	r2, 90010c4e <_ZN8touchgfx3HAL3lcdEv+0xe>
90010c4a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90010c4c:	b900      	cbnz	r0, 90010c50 <_ZN8touchgfx3HAL3lcdEv+0x10>
90010c4e:	6898      	ldr	r0, [r3, #8]
90010c50:	4770      	bx	lr
90010c52:	bf00      	nop
90010c54:	240233d4 	.word	0x240233d4

90010c58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90010c58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010c5c:	b085      	sub	sp, #20
90010c5e:	4604      	mov	r4, r0
90010c60:	2000      	movs	r0, #0
90010c62:	4699      	mov	r9, r3
90010c64:	ad04      	add	r5, sp, #16
90010c66:	460f      	mov	r7, r1
90010c68:	4690      	mov	r8, r2
90010c6a:	f845 0d04 	str.w	r0, [r5, #-4]!
90010c6e:	69a0      	ldr	r0, [r4, #24]
90010c70:	6806      	ldr	r6, [r0, #0]
90010c72:	9501      	str	r5, [sp, #4]
90010c74:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
90010c78:	9500      	str	r5, [sp, #0]
90010c7a:	6835      	ldr	r5, [r6, #0]
90010c7c:	47a8      	blx	r5
90010c7e:	4d10      	ldr	r5, [pc, #64]	@ (90010cc0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90010c80:	4606      	mov	r6, r0
90010c82:	f8a5 9000 	strh.w	r9, [r5]
90010c86:	f7ff ffdb 	bl	90010c40 <_ZN8touchgfx3HAL3lcdEv>
90010c8a:	6803      	ldr	r3, [r0, #0]
90010c8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010c8e:	4798      	blx	r3
90010c90:	b128      	cbz	r0, 90010c9e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
90010c92:	2801      	cmp	r0, #1
90010c94:	d00b      	beq.n	90010cae <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
90010c96:	4630      	mov	r0, r6
90010c98:	b005      	add	sp, #20
90010c9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010c9e:	882b      	ldrh	r3, [r5, #0]
90010ca0:	fb08 7203 	mla	r2, r8, r3, r7
90010ca4:	9b03      	ldr	r3, [sp, #12]
90010ca6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90010caa:	63e3      	str	r3, [r4, #60]	@ 0x3c
90010cac:	e7f3      	b.n	90010c96 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90010cae:	882a      	ldrh	r2, [r5, #0]
90010cb0:	9b03      	ldr	r3, [sp, #12]
90010cb2:	fb08 7202 	mla	r2, r8, r2, r7
90010cb6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90010cba:	1a9a      	subs	r2, r3, r2
90010cbc:	63e2      	str	r2, [r4, #60]	@ 0x3c
90010cbe:	e7ea      	b.n	90010c96 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90010cc0:	240233ce 	.word	0x240233ce

90010cc4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90010cc4:	b5f0      	push	{r4, r5, r6, r7, lr}
90010cc6:	b08b      	sub	sp, #44	@ 0x2c
90010cc8:	4617      	mov	r7, r2
90010cca:	4604      	mov	r4, r0
90010ccc:	460e      	mov	r6, r1
90010cce:	461d      	mov	r5, r3
90010cd0:	f7ff ffb6 	bl	90010c40 <_ZN8touchgfx3HAL3lcdEv>
90010cd4:	6803      	ldr	r3, [r0, #0]
90010cd6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010cd8:	4798      	blx	r3
90010cda:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90010cde:	9007      	str	r0, [sp, #28]
90010ce0:	4631      	mov	r1, r6
90010ce2:	6822      	ldr	r2, [r4, #0]
90010ce4:	e9cd 0308 	strd	r0, r3, [sp, #32]
90010ce8:	4b0c      	ldr	r3, [pc, #48]	@ (90010d1c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90010cea:	4620      	mov	r0, r4
90010cec:	881b      	ldrh	r3, [r3, #0]
90010cee:	9306      	str	r3, [sp, #24]
90010cf0:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90010cf4:	9305      	str	r3, [sp, #20]
90010cf6:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
90010cfa:	9304      	str	r3, [sp, #16]
90010cfc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010d00:	9303      	str	r3, [sp, #12]
90010d02:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010d06:	9302      	str	r3, [sp, #8]
90010d08:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90010d0c:	e9cd 5300 	strd	r5, r3, [sp]
90010d10:	463b      	mov	r3, r7
90010d12:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
90010d14:	2200      	movs	r2, #0
90010d16:	47a8      	blx	r5
90010d18:	b00b      	add	sp, #44	@ 0x2c
90010d1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010d1c:	240233ce 	.word	0x240233ce

90010d20 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90010d20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010d24:	4698      	mov	r8, r3
90010d26:	6803      	ldr	r3, [r0, #0]
90010d28:	b08b      	sub	sp, #44	@ 0x2c
90010d2a:	4617      	mov	r7, r2
90010d2c:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
90010d2e:	460e      	mov	r6, r1
90010d30:	4b13      	ldr	r3, [pc, #76]	@ (90010d80 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
90010d32:	4604      	mov	r4, r0
90010d34:	f8b3 9000 	ldrh.w	r9, [r3]
90010d38:	f7ff ff82 	bl	90010c40 <_ZN8touchgfx3HAL3lcdEv>
90010d3c:	6803      	ldr	r3, [r0, #0]
90010d3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010d40:	4798      	blx	r3
90010d42:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90010d46:	2200      	movs	r2, #0
90010d48:	4631      	mov	r1, r6
90010d4a:	e9cd 0308 	strd	r0, r3, [sp, #32]
90010d4e:	2302      	movs	r3, #2
90010d50:	4620      	mov	r0, r4
90010d52:	e9cd 9306 	strd	r9, r3, [sp, #24]
90010d56:	2301      	movs	r3, #1
90010d58:	9305      	str	r3, [sp, #20]
90010d5a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90010d5e:	9304      	str	r3, [sp, #16]
90010d60:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90010d64:	9303      	str	r3, [sp, #12]
90010d66:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90010d6a:	9302      	str	r3, [sp, #8]
90010d6c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010d70:	e9cd 8300 	strd	r8, r3, [sp]
90010d74:	463b      	mov	r3, r7
90010d76:	47a8      	blx	r5
90010d78:	b00b      	add	sp, #44	@ 0x2c
90010d7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010d7e:	bf00      	nop
90010d80:	240233ce 	.word	0x240233ce

90010d84 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90010d84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010d88:	4698      	mov	r8, r3
90010d8a:	6803      	ldr	r3, [r0, #0]
90010d8c:	b087      	sub	sp, #28
90010d8e:	460e      	mov	r6, r1
90010d90:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
90010d92:	4617      	mov	r7, r2
90010d94:	4b0f      	ldr	r3, [pc, #60]	@ (90010dd4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90010d96:	4604      	mov	r4, r0
90010d98:	f8b3 9000 	ldrh.w	r9, [r3]
90010d9c:	f7ff ff50 	bl	90010c40 <_ZN8touchgfx3HAL3lcdEv>
90010da0:	6803      	ldr	r3, [r0, #0]
90010da2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010da4:	4798      	blx	r3
90010da6:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
90010daa:	463a      	mov	r2, r7
90010dac:	4631      	mov	r1, r6
90010dae:	f8cd 900c 	str.w	r9, [sp, #12]
90010db2:	e9cd 0304 	strd	r0, r3, [sp, #16]
90010db6:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90010dba:	4620      	mov	r0, r4
90010dbc:	9302      	str	r3, [sp, #8]
90010dbe:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
90010dc2:	9301      	str	r3, [sp, #4]
90010dc4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90010dc8:	9300      	str	r3, [sp, #0]
90010dca:	4643      	mov	r3, r8
90010dcc:	47a8      	blx	r5
90010dce:	b007      	add	sp, #28
90010dd0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010dd4:	240233ce 	.word	0x240233ce

90010dd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90010dd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010ddc:	4604      	mov	r4, r0
90010dde:	b08f      	sub	sp, #60	@ 0x3c
90010de0:	4610      	mov	r0, r2
90010de2:	460d      	mov	r5, r1
90010de4:	4691      	mov	r9, r2
90010de6:	461e      	mov	r6, r3
90010de8:	f009 fa56 	bl	9001a298 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90010dec:	2800      	cmp	r0, #0
90010dee:	f000 809d 	beq.w	90010f2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90010df2:	6823      	ldr	r3, [r4, #0]
90010df4:	4620      	mov	r0, r4
90010df6:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90010f90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90010dfa:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
90010dfe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90010e00:	4798      	blx	r3
90010e02:	6823      	ldr	r3, [r4, #0]
90010e04:	4620      	mov	r0, r4
90010e06:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 90010f94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90010e0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010e0c:	4798      	blx	r3
90010e0e:	f8bb 3000 	ldrh.w	r3, [fp]
90010e12:	4f5c      	ldr	r7, [pc, #368]	@ (90010f84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010e14:	9301      	str	r3, [sp, #4]
90010e16:	f8ba 3000 	ldrh.w	r3, [sl]
90010e1a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
90010e1e:	4640      	mov	r0, r8
90010e20:	9302      	str	r3, [sp, #8]
90010e22:	883b      	ldrh	r3, [r7, #0]
90010e24:	9303      	str	r3, [sp, #12]
90010e26:	4b58      	ldr	r3, [pc, #352]	@ (90010f88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010e28:	881a      	ldrh	r2, [r3, #0]
90010e2a:	9305      	str	r3, [sp, #20]
90010e2c:	9204      	str	r2, [sp, #16]
90010e2e:	f009 fac7 	bl	9001a3c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90010e32:	8038      	strh	r0, [r7, #0]
90010e34:	4640      	mov	r0, r8
90010e36:	f009 faf7 	bl	9001a428 <_ZNK8touchgfx6Bitmap9getHeightEv>
90010e3a:	9b05      	ldr	r3, [sp, #20]
90010e3c:	b280      	uxth	r0, r0
90010e3e:	8018      	strh	r0, [r3, #0]
90010e40:	4b52      	ldr	r3, [pc, #328]	@ (90010f8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
90010e42:	781b      	ldrb	r3, [r3, #0]
90010e44:	2b00      	cmp	r3, #0
90010e46:	d174      	bne.n	90010f32 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90010e48:	883b      	ldrh	r3, [r7, #0]
90010e4a:	f8aa 0000 	strh.w	r0, [sl]
90010e4e:	f8ab 3000 	strh.w	r3, [fp]
90010e52:	4648      	mov	r0, r9
90010e54:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
90010e58:	f009 fa1e 	bl	9001a298 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90010e5c:	2200      	movs	r2, #0
90010e5e:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
90010e62:	4611      	mov	r1, r2
90010e64:	4628      	mov	r0, r5
90010e66:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90010e6a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90010e6e:	f7ff fed9 	bl	90010c24 <_ZN8touchgfx8Drawable5setXYEss>
90010e72:	2301      	movs	r3, #1
90010e74:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
90010e78:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
90010e7c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90010e80:	2b00      	cmp	r3, #0
90010e82:	dd5c      	ble.n	90010f3e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90010e84:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90010e88:	2b00      	cmp	r3, #0
90010e8a:	dd58      	ble.n	90010f3e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90010e8c:	462a      	mov	r2, r5
90010e8e:	ab0a      	add	r3, sp, #40	@ 0x28
90010e90:	f852 0f04 	ldr.w	r0, [r2, #4]!
90010e94:	6851      	ldr	r1, [r2, #4]
90010e96:	c303      	stmia	r3!, {r0, r1}
90010e98:	4631      	mov	r1, r6
90010e9a:	a80a      	add	r0, sp, #40	@ 0x28
90010e9c:	f7ff fbec 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
90010ea0:	4b38      	ldr	r3, [pc, #224]	@ (90010f84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010ea2:	2100      	movs	r1, #0
90010ea4:	f9b3 2000 	ldrsh.w	r2, [r3]
90010ea8:	4b37      	ldr	r3, [pc, #220]	@ (90010f88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010eaa:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90010eae:	aa0a      	add	r2, sp, #40	@ 0x28
90010eb0:	f9b3 3000 	ldrsh.w	r3, [r3]
90010eb4:	910c      	str	r1, [sp, #48]	@ 0x30
90010eb6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90010eba:	ab08      	add	r3, sp, #32
90010ebc:	e892 0003 	ldmia.w	r2, {r0, r1}
90010ec0:	e883 0003 	stmia.w	r3, {r0, r1}
90010ec4:	4618      	mov	r0, r3
90010ec6:	a90c      	add	r1, sp, #48	@ 0x30
90010ec8:	f7ff fbd6 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
90010ecc:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90010ece:	2b00      	cmp	r3, #0
90010ed0:	d13c      	bne.n	90010f4c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90010ed2:	2000      	movs	r0, #0
90010ed4:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90010ed8:	2600      	movs	r6, #0
90010eda:	696b      	ldr	r3, [r5, #20]
90010edc:	a908      	add	r1, sp, #32
90010ede:	682a      	ldr	r2, [r5, #0]
90010ee0:	4628      	mov	r0, r5
90010ee2:	9305      	str	r3, [sp, #20]
90010ee4:	616e      	str	r6, [r5, #20]
90010ee6:	6892      	ldr	r2, [r2, #8]
90010ee8:	4790      	blx	r2
90010eea:	9b05      	ldr	r3, [sp, #20]
90010eec:	4652      	mov	r2, sl
90010eee:	4649      	mov	r1, r9
90010ef0:	616b      	str	r3, [r5, #20]
90010ef2:	4628      	mov	r0, r5
90010ef4:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90010ef8:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
90010efc:	f7ff fe92 	bl	90010c24 <_ZN8touchgfx8Drawable5setXYEss>
90010f00:	9a01      	ldr	r2, [sp, #4]
90010f02:	4b23      	ldr	r3, [pc, #140]	@ (90010f90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90010f04:	4620      	mov	r0, r4
90010f06:	801a      	strh	r2, [r3, #0]
90010f08:	9a02      	ldr	r2, [sp, #8]
90010f0a:	4b22      	ldr	r3, [pc, #136]	@ (90010f94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90010f0c:	801a      	strh	r2, [r3, #0]
90010f0e:	9a03      	ldr	r2, [sp, #12]
90010f10:	4b1c      	ldr	r3, [pc, #112]	@ (90010f84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010f12:	801a      	strh	r2, [r3, #0]
90010f14:	4b1c      	ldr	r3, [pc, #112]	@ (90010f88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010f16:	9a04      	ldr	r2, [sp, #16]
90010f18:	801a      	strh	r2, [r3, #0]
90010f1a:	6823      	ldr	r3, [r4, #0]
90010f1c:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
90010f20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90010f22:	4798      	blx	r3
90010f24:	6823      	ldr	r3, [r4, #0]
90010f26:	4620      	mov	r0, r4
90010f28:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010f2a:	4798      	blx	r3
90010f2c:	b00f      	add	sp, #60	@ 0x3c
90010f2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010f32:	883b      	ldrh	r3, [r7, #0]
90010f34:	f8ab 0000 	strh.w	r0, [fp]
90010f38:	f8aa 3000 	strh.w	r3, [sl]
90010f3c:	e789      	b.n	90010e52 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90010f3e:	462a      	mov	r2, r5
90010f40:	ab0a      	add	r3, sp, #40	@ 0x28
90010f42:	f852 0f04 	ldr.w	r0, [r2, #4]!
90010f46:	6851      	ldr	r1, [r2, #4]
90010f48:	c303      	stmia	r3!, {r0, r1}
90010f4a:	e7a9      	b.n	90010ea0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90010f4c:	a807      	add	r0, sp, #28
90010f4e:	f009 fbad 	bl	9001a6ac <_ZNK8touchgfx6Bitmap9getFormatEv>
90010f52:	4606      	mov	r6, r0
90010f54:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
90010f56:	6803      	ldr	r3, [r0, #0]
90010f58:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010f5a:	4798      	blx	r3
90010f5c:	4286      	cmp	r6, r0
90010f5e:	d1b8      	bne.n	90010ed2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90010f60:	f7ff fe6e 	bl	90010c40 <_ZN8touchgfx3HAL3lcdEv>
90010f64:	6803      	ldr	r3, [r0, #0]
90010f66:	4606      	mov	r6, r0
90010f68:	a807      	add	r0, sp, #28
90010f6a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010f6c:	9305      	str	r3, [sp, #20]
90010f6e:	f009 fb9d 	bl	9001a6ac <_ZNK8touchgfx6Bitmap9getFormatEv>
90010f72:	9b05      	ldr	r3, [sp, #20]
90010f74:	4601      	mov	r1, r0
90010f76:	4630      	mov	r0, r6
90010f78:	4798      	blx	r3
90010f7a:	f080 0001 	eor.w	r0, r0, #1
90010f7e:	b2c0      	uxtb	r0, r0
90010f80:	e7a8      	b.n	90010ed4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90010f82:	bf00      	nop
90010f84:	240233c8 	.word	0x240233c8
90010f88:	240233ca 	.word	0x240233ca
90010f8c:	240233cc 	.word	0x240233cc
90010f90:	240233ce 	.word	0x240233ce
90010f94:	240233d0 	.word	0x240233d0

90010f98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90010f98:	4b07      	ldr	r3, [pc, #28]	@ (90010fb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90010f9a:	b510      	push	{r4, lr}
90010f9c:	781b      	ldrb	r3, [r3, #0]
90010f9e:	4604      	mov	r4, r0
90010fa0:	b13b      	cbz	r3, 90010fb2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90010fa2:	6803      	ldr	r3, [r0, #0]
90010fa4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90010fa6:	4798      	blx	r3
90010fa8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90010faa:	4283      	cmp	r3, r0
90010fac:	d101      	bne.n	90010fb2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90010fae:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90010fb0:	bd10      	pop	{r4, pc}
90010fb2:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90010fb4:	e7fc      	b.n	90010fb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90010fb6:	bf00      	nop
90010fb8:	240233d2 	.word	0x240233d2

90010fbc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90010fbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010fc0:	461d      	mov	r5, r3
90010fc2:	b08a      	sub	sp, #40	@ 0x28
90010fc4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90010fc8:	4690      	mov	r8, r2
90010fca:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
90010fce:	2400      	movs	r4, #0
90010fd0:	4607      	mov	r7, r0
90010fd2:	fb06 8505 	mla	r5, r6, r5, r8
90010fd6:	9404      	str	r4, [sp, #16]
90010fd8:	f88d 4020 	strb.w	r4, [sp, #32]
90010fdc:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010fe0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90010fe4:	f8ad 3018 	strh.w	r3, [sp, #24]
90010fe8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010fec:	f8ad 301a 	strh.w	r3, [sp, #26]
90010ff0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010ff4:	f8ad 301c 	strh.w	r3, [sp, #28]
90010ff8:	f7ff ffce 	bl	90010f98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010ffc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90011000:	6878      	ldr	r0, [r7, #4]
90011002:	f8ad 601e 	strh.w	r6, [sp, #30]
90011006:	a901      	add	r1, sp, #4
90011008:	9505      	str	r5, [sp, #20]
9001100a:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
9001100e:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
90011012:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90011016:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
9001101a:	6803      	ldr	r3, [r0, #0]
9001101c:	685b      	ldr	r3, [r3, #4]
9001101e:	4798      	blx	r3
90011020:	b00a      	add	sp, #40	@ 0x28
90011022:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90011026 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90011026:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001102a:	b08b      	sub	sp, #44	@ 0x2c
9001102c:	2400      	movs	r4, #0
9001102e:	4691      	mov	r9, r2
90011030:	461d      	mov	r5, r3
90011032:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
90011036:	f44f 6300 	mov.w	r3, #2048	@ 0x800
9001103a:	4688      	mov	r8, r1
9001103c:	4607      	mov	r7, r0
9001103e:	9404      	str	r4, [sp, #16]
90011040:	fb06 9505 	mla	r5, r6, r5, r9
90011044:	e9cd 3401 	strd	r3, r4, [sp, #4]
90011048:	f7ff ffa6 	bl	90010f98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001104c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90011050:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90011054:	6878      	ldr	r0, [r7, #4]
90011056:	f8ad 3018 	strh.w	r3, [sp, #24]
9001105a:	a901      	add	r1, sp, #4
9001105c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90011060:	9505      	str	r5, [sp, #20]
90011062:	f8ad 301a 	strh.w	r3, [sp, #26]
90011066:	f8ad 401c 	strh.w	r4, [sp, #28]
9001106a:	f8ad 601e 	strh.w	r6, [sp, #30]
9001106e:	f8cd 8010 	str.w	r8, [sp, #16]
90011072:	f8ad 4020 	strh.w	r4, [sp, #32]
90011076:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
9001107a:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
9001107e:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90011082:	6803      	ldr	r3, [r0, #0]
90011084:	685b      	ldr	r3, [r3, #4]
90011086:	4798      	blx	r3
90011088:	b00b      	add	sp, #44	@ 0x2c
9001108a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90011090 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90011090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011094:	b08a      	sub	sp, #40	@ 0x28
90011096:	4698      	mov	r8, r3
90011098:	2300      	movs	r3, #0
9001109a:	4606      	mov	r6, r0
9001109c:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
900110a0:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
900110a4:	2d0b      	cmp	r5, #11
900110a6:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
900110aa:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
900110ae:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
900110b2:	9304      	str	r3, [sp, #16]
900110b4:	d137      	bne.n	90011126 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
900110b6:	2380      	movs	r3, #128	@ 0x80
900110b8:	f88d 0020 	strb.w	r0, [sp, #32]
900110bc:	4630      	mov	r0, r6
900110be:	9203      	str	r2, [sp, #12]
900110c0:	e9cd 3101 	strd	r3, r1, [sp, #4]
900110c4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900110c8:	f8ad 3018 	strh.w	r3, [sp, #24]
900110cc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900110d0:	f8ad 301a 	strh.w	r3, [sp, #26]
900110d4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
900110d8:	f8ad 301c 	strh.w	r3, [sp, #28]
900110dc:	f7ff ff5c 	bl	90010f98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900110e0:	2c0b      	cmp	r4, #11
900110e2:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
900110e6:	f8ad 701e 	strh.w	r7, [sp, #30]
900110ea:	bf94      	ite	ls
900110ec:	4b19      	ldrls	r3, [pc, #100]	@ (90011154 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
900110ee:	2100      	movhi	r1, #0
900110f0:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
900110f4:	bf98      	it	ls
900110f6:	5d19      	ldrbls	r1, [r3, r4]
900110f8:	fb02 8307 	mla	r3, r2, r7, r8
900110fc:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90011100:	10c9      	asrs	r1, r1, #3
90011102:	fb01 0003 	mla	r0, r1, r3, r0
90011106:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
9001110a:	a901      	add	r1, sp, #4
9001110c:	9005      	str	r0, [sp, #20]
9001110e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90011112:	2300      	movs	r3, #0
90011114:	6870      	ldr	r0, [r6, #4]
90011116:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
9001111a:	6803      	ldr	r3, [r0, #0]
9001111c:	685b      	ldr	r3, [r3, #4]
9001111e:	4798      	blx	r3
90011120:	b00a      	add	sp, #40	@ 0x28
90011122:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011126:	2d02      	cmp	r5, #2
90011128:	d109      	bne.n	9001113e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
9001112a:	28ff      	cmp	r0, #255	@ 0xff
9001112c:	d105      	bne.n	9001113a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
9001112e:	f1bc 0f00 	cmp.w	ip, #0
90011132:	bf14      	ite	ne
90011134:	2340      	movne	r3, #64	@ 0x40
90011136:	2320      	moveq	r3, #32
90011138:	e7be      	b.n	900110b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001113a:	2340      	movs	r3, #64	@ 0x40
9001113c:	e7bc      	b.n	900110b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001113e:	28ff      	cmp	r0, #255	@ 0xff
90011140:	d105      	bne.n	9001114e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90011142:	f1bc 0f00 	cmp.w	ip, #0
90011146:	bf14      	ite	ne
90011148:	2304      	movne	r3, #4
9001114a:	2301      	moveq	r3, #1
9001114c:	e7b4      	b.n	900110b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001114e:	2304      	movs	r3, #4
90011150:	e7b2      	b.n	900110b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011152:	bf00      	nop
90011154:	9002d7c4 	.word	0x9002d7c4

90011158 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90011158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001115c:	b08b      	sub	sp, #44	@ 0x2c
9001115e:	461d      	mov	r5, r3
90011160:	2400      	movs	r4, #0
90011162:	4688      	mov	r8, r1
90011164:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
90011168:	4693      	mov	fp, r2
9001116a:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
9001116e:	4607      	mov	r7, r0
90011170:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90011174:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
90011178:	9404      	str	r4, [sp, #16]
9001117a:	bf14      	ite	ne
9001117c:	2308      	movne	r3, #8
9001117e:	2302      	moveq	r3, #2
90011180:	fb05 b50a 	mla	r5, r5, sl, fp
90011184:	e9cd 3401 	strd	r3, r4, [sp, #4]
90011188:	f7ff ff06 	bl	90010f98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001118c:	2e0b      	cmp	r6, #11
9001118e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90011192:	a901      	add	r1, sp, #4
90011194:	bf98      	it	ls
90011196:	4b13      	ldrls	r3, [pc, #76]	@ (900111e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90011198:	f8ad a01e 	strh.w	sl, [sp, #30]
9001119c:	bf98      	it	ls
9001119e:	5d9c      	ldrbls	r4, [r3, r6]
900111a0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
900111a4:	10e4      	asrs	r4, r4, #3
900111a6:	f8cd 8010 	str.w	r8, [sp, #16]
900111aa:	f8ad 3018 	strh.w	r3, [sp, #24]
900111ae:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
900111b2:	fb04 0405 	mla	r4, r4, r5, r0
900111b6:	6878      	ldr	r0, [r7, #4]
900111b8:	f8ad 301a 	strh.w	r3, [sp, #26]
900111bc:	2300      	movs	r3, #0
900111be:	9405      	str	r4, [sp, #20]
900111c0:	f8ad 301c 	strh.w	r3, [sp, #28]
900111c4:	f88d 9020 	strb.w	r9, [sp, #32]
900111c8:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
900111cc:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
900111d0:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
900111d4:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
900111d8:	6803      	ldr	r3, [r0, #0]
900111da:	685b      	ldr	r3, [r3, #4]
900111dc:	4798      	blx	r3
900111de:	b00b      	add	sp, #44	@ 0x2c
900111e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900111e4:	9002d7c4 	.word	0x9002d7c4

900111e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
900111e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900111ec:	461e      	mov	r6, r3
900111ee:	4b0a      	ldr	r3, [pc, #40]	@ (90011218 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
900111f0:	460f      	mov	r7, r1
900111f2:	4690      	mov	r8, r2
900111f4:	881d      	ldrh	r5, [r3, #0]
900111f6:	f7ff fd23 	bl	90010c40 <_ZN8touchgfx3HAL3lcdEv>
900111fa:	6803      	ldr	r3, [r0, #0]
900111fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900111fe:	4798      	blx	r3
90011200:	280b      	cmp	r0, #11
90011202:	bf96      	itet	ls
90011204:	4b05      	ldrls	r3, [pc, #20]	@ (9001121c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90011206:	2400      	movhi	r4, #0
90011208:	5c1c      	ldrbls	r4, [r3, r0]
9001120a:	fb08 7005 	mla	r0, r8, r5, r7
9001120e:	10e4      	asrs	r4, r4, #3
90011210:	fb04 6000 	mla	r0, r4, r0, r6
90011214:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011218:	240233ce 	.word	0x240233ce
9001121c:	9002d7c4 	.word	0x9002d7c4

90011220 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90011220:	b5f0      	push	{r4, r5, r6, r7, lr}
90011222:	b08b      	sub	sp, #44	@ 0x2c
90011224:	461f      	mov	r7, r3
90011226:	4604      	mov	r4, r0
90011228:	4616      	mov	r6, r2
9001122a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001122e:	2500      	movs	r5, #0
90011230:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011234:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90011238:	9504      	str	r5, [sp, #16]
9001123a:	f8ad 3018 	strh.w	r3, [sp, #24]
9001123e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90011242:	f8ad 301a 	strh.w	r3, [sp, #26]
90011246:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
9001124a:	f8ad 301c 	strh.w	r3, [sp, #28]
9001124e:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90011252:	f88d 3020 	strb.w	r3, [sp, #32]
90011256:	f7ff fe9f 	bl	90010f98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001125a:	463a      	mov	r2, r7
9001125c:	4631      	mov	r1, r6
9001125e:	4603      	mov	r3, r0
90011260:	4620      	mov	r0, r4
90011262:	f7ff ffc1 	bl	900111e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90011266:	4b0e      	ldr	r3, [pc, #56]	@ (900112a0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90011268:	9005      	str	r0, [sp, #20]
9001126a:	881b      	ldrh	r3, [r3, #0]
9001126c:	f8ad 301e 	strh.w	r3, [sp, #30]
90011270:	f7ff fce6 	bl	90010c40 <_ZN8touchgfx3HAL3lcdEv>
90011274:	6803      	ldr	r3, [r0, #0]
90011276:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011278:	4798      	blx	r3
9001127a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9001127c:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
90011280:	a901      	add	r1, sp, #4
90011282:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90011286:	9304      	str	r3, [sp, #16]
90011288:	6860      	ldr	r0, [r4, #4]
9001128a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
9001128e:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
90011292:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90011296:	6803      	ldr	r3, [r0, #0]
90011298:	685b      	ldr	r3, [r3, #4]
9001129a:	4798      	blx	r3
9001129c:	b00b      	add	sp, #44	@ 0x2c
9001129e:	bdf0      	pop	{r4, r5, r6, r7, pc}
900112a0:	240233ce 	.word	0x240233ce

900112a4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
900112a4:	b5f0      	push	{r4, r5, r6, r7, lr}
900112a6:	b08d      	sub	sp, #52	@ 0x34
900112a8:	2501      	movs	r5, #1
900112aa:	4604      	mov	r4, r0
900112ac:	466b      	mov	r3, sp
900112ae:	9503      	str	r5, [sp, #12]
900112b0:	e883 0006 	stmia.w	r3, {r1, r2}
900112b4:	2300      	movs	r3, #0
900112b6:	f8bd 6000 	ldrh.w	r6, [sp]
900112ba:	f8bd 7002 	ldrh.w	r7, [sp, #2]
900112be:	9306      	str	r3, [sp, #24]
900112c0:	6803      	ldr	r3, [r0, #0]
900112c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900112c4:	4798      	blx	r3
900112c6:	463a      	mov	r2, r7
900112c8:	4631      	mov	r1, r6
900112ca:	4603      	mov	r3, r0
900112cc:	4620      	mov	r0, r4
900112ce:	f7ff ff8b 	bl	900111e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900112d2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
900112d4:	9004      	str	r0, [sp, #16]
900112d6:	9307      	str	r3, [sp, #28]
900112d8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900112dc:	f8ad 3020 	strh.w	r3, [sp, #32]
900112e0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
900112e4:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
900112e8:	4b0e      	ldr	r3, [pc, #56]	@ (90011324 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
900112ea:	881b      	ldrh	r3, [r3, #0]
900112ec:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
900112f0:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
900112f4:	f7ff fca4 	bl	90010c40 <_ZN8touchgfx3HAL3lcdEv>
900112f8:	6803      	ldr	r3, [r0, #0]
900112fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900112fc:	4798      	blx	r3
900112fe:	23ff      	movs	r3, #255	@ 0xff
90011300:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90011304:	a903      	add	r1, sp, #12
90011306:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
9001130a:	6860      	ldr	r0, [r4, #4]
9001130c:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90011310:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90011314:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90011318:	6803      	ldr	r3, [r0, #0]
9001131a:	685b      	ldr	r3, [r3, #4]
9001131c:	4798      	blx	r3
9001131e:	6c60      	ldr	r0, [r4, #68]	@ 0x44
90011320:	b00d      	add	sp, #52	@ 0x34
90011322:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011324:	240233ce 	.word	0x240233ce

90011328 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90011328:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001132c:	b08c      	sub	sp, #48	@ 0x30
9001132e:	461e      	mov	r6, r3
90011330:	2300      	movs	r3, #0
90011332:	4604      	mov	r4, r0
90011334:	466d      	mov	r5, sp
90011336:	9306      	str	r3, [sp, #24]
90011338:	6803      	ldr	r3, [r0, #0]
9001133a:	e885 0006 	stmia.w	r5, {r1, r2}
9001133e:	2501      	movs	r5, #1
90011340:	f8bd 7000 	ldrh.w	r7, [sp]
90011344:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90011348:	9503      	str	r5, [sp, #12]
9001134a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001134c:	4798      	blx	r3
9001134e:	4642      	mov	r2, r8
90011350:	4639      	mov	r1, r7
90011352:	4603      	mov	r3, r0
90011354:	4620      	mov	r0, r4
90011356:	f7ff ff47 	bl	900111e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9001135a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9001135e:	9004      	str	r0, [sp, #16]
90011360:	f8ad 3020 	strh.w	r3, [sp, #32]
90011364:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90011368:	9607      	str	r6, [sp, #28]
9001136a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001136e:	4b10      	ldr	r3, [pc, #64]	@ (900113b0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90011370:	881b      	ldrh	r3, [r3, #0]
90011372:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90011376:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90011378:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
9001137c:	f7ff fc60 	bl	90010c40 <_ZN8touchgfx3HAL3lcdEv>
90011380:	6803      	ldr	r3, [r0, #0]
90011382:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011384:	4798      	blx	r3
90011386:	23ff      	movs	r3, #255	@ 0xff
90011388:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
9001138c:	a903      	add	r1, sp, #12
9001138e:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90011392:	6860      	ldr	r0, [r4, #4]
90011394:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90011398:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
9001139c:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
900113a0:	6803      	ldr	r3, [r0, #0]
900113a2:	685b      	ldr	r3, [r3, #4]
900113a4:	4798      	blx	r3
900113a6:	4630      	mov	r0, r6
900113a8:	b00c      	add	sp, #48	@ 0x30
900113aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900113ae:	bf00      	nop
900113b0:	240233ce 	.word	0x240233ce

900113b4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
900113b4:	b5f0      	push	{r4, r5, r6, r7, lr}
900113b6:	b085      	sub	sp, #20
900113b8:	4605      	mov	r5, r0
900113ba:	ac02      	add	r4, sp, #8
900113bc:	e884 0006 	stmia.w	r4, {r1, r2}
900113c0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
900113c4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
900113c8:	f7ff fde6 	bl	90010f98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900113cc:	4631      	mov	r1, r6
900113ce:	4603      	mov	r3, r0
900113d0:	463a      	mov	r2, r7
900113d2:	4628      	mov	r0, r5
900113d4:	f7ff ff08 	bl	900111e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900113d8:	4a05      	ldr	r2, [pc, #20]	@ (900113f0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
900113da:	682b      	ldr	r3, [r5, #0]
900113dc:	8812      	ldrh	r2, [r2, #0]
900113de:	9200      	str	r2, [sp, #0]
900113e0:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
900113e2:	4603      	mov	r3, r0
900113e4:	4628      	mov	r0, r5
900113e6:	e894 0006 	ldmia.w	r4, {r1, r2}
900113ea:	47b0      	blx	r6
900113ec:	b005      	add	sp, #20
900113ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
900113f0:	240233ce 	.word	0x240233ce

900113f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
900113f4:	b570      	push	{r4, r5, r6, lr}
900113f6:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
900113fa:	4604      	mov	r4, r0
900113fc:	b19b      	cbz	r3, 90011426 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
900113fe:	2002      	movs	r0, #2
90011400:	f7ef fc8c 	bl	90000d1c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90011404:	2300      	movs	r3, #0
90011406:	4620      	mov	r0, r4
90011408:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
9001140c:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
90011410:	6823      	ldr	r3, [r4, #0]
90011412:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
90011416:	f7ff fdbf 	bl	90010f98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001141a:	4601      	mov	r1, r0
9001141c:	4620      	mov	r0, r4
9001141e:	462b      	mov	r3, r5
90011420:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011424:	4718      	bx	r3
90011426:	bd70      	pop	{r4, r5, r6, pc}

90011428 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90011428:	b570      	push	{r4, r5, r6, lr}
9001142a:	4605      	mov	r5, r0
9001142c:	460c      	mov	r4, r1
9001142e:	2003      	movs	r0, #3
90011430:	b149      	cbz	r1, 90011446 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90011432:	f7ef fc0b 	bl	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90011436:	6928      	ldr	r0, [r5, #16]
90011438:	b168      	cbz	r0, 90011456 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
9001143a:	6803      	ldr	r3, [r0, #0]
9001143c:	2101      	movs	r1, #1
9001143e:	695b      	ldr	r3, [r3, #20]
90011440:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011444:	4718      	bx	r3
90011446:	f7ef fc35 	bl	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
9001144a:	6928      	ldr	r0, [r5, #16]
9001144c:	b118      	cbz	r0, 90011456 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
9001144e:	6803      	ldr	r3, [r0, #0]
90011450:	4621      	mov	r1, r4
90011452:	695b      	ldr	r3, [r3, #20]
90011454:	e7f4      	b.n	90011440 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90011456:	bd70      	pop	{r4, r5, r6, pc}

90011458 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90011458:	b538      	push	{r3, r4, r5, lr}
9001145a:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
9001145e:	4604      	mov	r4, r0
90011460:	460d      	mov	r5, r1
90011462:	428b      	cmp	r3, r1
90011464:	d006      	beq.n	90011474 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90011466:	6803      	ldr	r3, [r0, #0]
90011468:	b929      	cbnz	r1, 90011476 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
9001146a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
9001146e:	4798      	blx	r3
90011470:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
90011474:	bd38      	pop	{r3, r4, r5, pc}
90011476:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
9001147a:	e7f8      	b.n	9001146e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

9001147c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
9001147c:	4b0d      	ldr	r3, [pc, #52]	@ (900114b4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
9001147e:	b510      	push	{r4, lr}
90011480:	781b      	ldrb	r3, [r3, #0]
90011482:	4604      	mov	r4, r0
90011484:	b95b      	cbnz	r3, 9001149e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90011486:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
9001148a:	2b02      	cmp	r3, #2
9001148c:	d007      	beq.n	9001149e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
9001148e:	6840      	ldr	r0, [r0, #4]
90011490:	f000 f91a 	bl	900116c8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90011494:	b118      	cbz	r0, 9001149e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90011496:	6862      	ldr	r2, [r4, #4]
90011498:	7a53      	ldrb	r3, [r2, #9]
9001149a:	2b00      	cmp	r3, #0
9001149c:	d0fc      	beq.n	90011498 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
9001149e:	f7f0 ff45 	bl	9000232c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
900114a2:	4620      	mov	r0, r4
900114a4:	2100      	movs	r1, #0
900114a6:	f7ff ffd7 	bl	90011458 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
900114aa:	4620      	mov	r0, r4
900114ac:	f7ff fd74 	bl	90010f98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900114b0:	bd10      	pop	{r4, pc}
900114b2:	bf00      	nop
900114b4:	240233d2 	.word	0x240233d2

900114b8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
900114b8:	b570      	push	{r4, r5, r6, lr}
900114ba:	4604      	mov	r4, r0
900114bc:	6803      	ldr	r3, [r0, #0]
900114be:	b919      	cbnz	r1, 900114c8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
900114c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900114c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900114c6:	4718      	bx	r3
900114c8:	2200      	movs	r2, #0
900114ca:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
900114ce:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
900114d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900114d4:	4798      	blx	r3
900114d6:	6863      	ldr	r3, [r4, #4]
900114d8:	2101      	movs	r1, #1
900114da:	4605      	mov	r5, r0
900114dc:	4620      	mov	r0, r4
900114de:	7299      	strb	r1, [r3, #10]
900114e0:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
900114e4:	f7ff ffb8 	bl	90011458 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
900114e8:	4628      	mov	r0, r5
900114ea:	bd70      	pop	{r4, r5, r6, pc}

900114ec <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
900114ec:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
900114f0:	1a13      	subs	r3, r2, r0
900114f2:	4258      	negs	r0, r3
900114f4:	4158      	adcs	r0, r3
900114f6:	4770      	bx	lr

900114f8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
900114f8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
900114fc:	1a9b      	subs	r3, r3, r2
900114fe:	2b00      	cmp	r3, #0
90011500:	bfdc      	itt	le
90011502:	6882      	ldrle	r2, [r0, #8]
90011504:	189b      	addle	r3, r3, r2
90011506:	2b01      	cmp	r3, #1
90011508:	bfcc      	ite	gt
9001150a:	2000      	movgt	r0, #0
9001150c:	2001      	movle	r0, #1
9001150e:	4770      	bx	lr

90011510 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90011510:	6902      	ldr	r2, [r0, #16]
90011512:	6843      	ldr	r3, [r0, #4]
90011514:	2024      	movs	r0, #36	@ 0x24
90011516:	fb00 3002 	mla	r0, r0, r2, r3
9001151a:	4770      	bx	lr

9001151c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
9001151c:	6803      	ldr	r3, [r0, #0]
9001151e:	691b      	ldr	r3, [r3, #16]
90011520:	4718      	bx	r3

90011522 <_ZN8touchgfx13DMA_Interface7executeEv>:
90011522:	2301      	movs	r3, #1
90011524:	b570      	push	{r4, r5, r6, lr}
90011526:	7203      	strb	r3, [r0, #8]
90011528:	4604      	mov	r4, r0
9001152a:	6840      	ldr	r0, [r0, #4]
9001152c:	6803      	ldr	r3, [r0, #0]
9001152e:	699b      	ldr	r3, [r3, #24]
90011530:	4798      	blx	r3
90011532:	6803      	ldr	r3, [r0, #0]
90011534:	4605      	mov	r5, r0
90011536:	2b40      	cmp	r3, #64	@ 0x40
90011538:	d00c      	beq.n	90011554 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9001153a:	d810      	bhi.n	9001155e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
9001153c:	2b04      	cmp	r3, #4
9001153e:	d01d      	beq.n	9001157c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90011540:	d804      	bhi.n	9001154c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90011542:	2b01      	cmp	r3, #1
90011544:	d006      	beq.n	90011554 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011546:	2b02      	cmp	r3, #2
90011548:	d02c      	beq.n	900115a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
9001154a:	bd70      	pop	{r4, r5, r6, pc}
9001154c:	2b08      	cmp	r3, #8
9001154e:	d01d      	beq.n	9001158c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90011550:	2b20      	cmp	r3, #32
90011552:	d1fa      	bne.n	9001154a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90011554:	6823      	ldr	r3, [r4, #0]
90011556:	4620      	mov	r0, r4
90011558:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001155a:	4798      	blx	r3
9001155c:	e013      	b.n	90011586 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
9001155e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
90011562:	d0f7      	beq.n	90011554 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011564:	d804      	bhi.n	90011570 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90011566:	2b80      	cmp	r3, #128	@ 0x80
90011568:	d0f4      	beq.n	90011554 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9001156a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9001156e:	e7f0      	b.n	90011552 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90011570:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
90011574:	d0ee      	beq.n	90011554 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011576:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
9001157a:	e7e5      	b.n	90011548 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
9001157c:	6823      	ldr	r3, [r4, #0]
9001157e:	7f01      	ldrb	r1, [r0, #28]
90011580:	4620      	mov	r0, r4
90011582:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90011584:	4798      	blx	r3
90011586:	6823      	ldr	r3, [r4, #0]
90011588:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001158a:	e006      	b.n	9001159a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
9001158c:	6823      	ldr	r3, [r4, #0]
9001158e:	7f01      	ldrb	r1, [r0, #28]
90011590:	4620      	mov	r0, r4
90011592:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90011594:	4798      	blx	r3
90011596:	6823      	ldr	r3, [r4, #0]
90011598:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001159a:	4629      	mov	r1, r5
9001159c:	4620      	mov	r0, r4
9001159e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900115a2:	4718      	bx	r3
900115a4:	6823      	ldr	r3, [r4, #0]
900115a6:	4620      	mov	r0, r4
900115a8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900115aa:	4798      	blx	r3
900115ac:	e7f3      	b.n	90011596 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

900115ae <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
900115ae:	4770      	bx	lr

900115b0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
900115b0:	4770      	bx	lr

900115b2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
900115b2:	4770      	bx	lr

900115b4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
900115b4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
900115b8:	b510      	push	{r4, lr}
900115ba:	1ad2      	subs	r2, r2, r3
900115bc:	2a00      	cmp	r2, #0
900115be:	bfdc      	itt	le
900115c0:	6884      	ldrle	r4, [r0, #8]
900115c2:	1912      	addle	r2, r2, r4
900115c4:	2a01      	cmp	r2, #1
900115c6:	dd16      	ble.n	900115f6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
900115c8:	6842      	ldr	r2, [r0, #4]
900115ca:	2424      	movs	r4, #36	@ 0x24
900115cc:	fb04 2303 	mla	r3, r4, r3, r2
900115d0:	f101 0220 	add.w	r2, r1, #32
900115d4:	f851 4b04 	ldr.w	r4, [r1], #4
900115d8:	4291      	cmp	r1, r2
900115da:	f843 4b04 	str.w	r4, [r3], #4
900115de:	d1f9      	bne.n	900115d4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
900115e0:	780a      	ldrb	r2, [r1, #0]
900115e2:	701a      	strb	r2, [r3, #0]
900115e4:	68c3      	ldr	r3, [r0, #12]
900115e6:	6882      	ldr	r2, [r0, #8]
900115e8:	f3bf 8f5b 	dmb	ish
900115ec:	3301      	adds	r3, #1
900115ee:	429a      	cmp	r2, r3
900115f0:	bfd8      	it	le
900115f2:	1a9b      	suble	r3, r3, r2
900115f4:	60c3      	str	r3, [r0, #12]
900115f6:	bd10      	pop	{r4, pc}

900115f8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
900115f8:	6903      	ldr	r3, [r0, #16]
900115fa:	6882      	ldr	r2, [r0, #8]
900115fc:	f3bf 8f5b 	dmb	ish
90011600:	3301      	adds	r3, #1
90011602:	429a      	cmp	r2, r3
90011604:	bfd8      	it	le
90011606:	1a9b      	suble	r3, r3, r2
90011608:	6103      	str	r3, [r0, #16]
9001160a:	4770      	bx	lr

9001160c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
9001160c:	b570      	push	{r4, r5, r6, lr}
9001160e:	4604      	mov	r4, r0
90011610:	460e      	mov	r6, r1
90011612:	6860      	ldr	r0, [r4, #4]
90011614:	6803      	ldr	r3, [r0, #0]
90011616:	685b      	ldr	r3, [r3, #4]
90011618:	4798      	blx	r3
9001161a:	2800      	cmp	r0, #0
9001161c:	d1f9      	bne.n	90011612 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
9001161e:	4d0d      	ldr	r5, [pc, #52]	@ (90011654 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90011620:	6828      	ldr	r0, [r5, #0]
90011622:	6803      	ldr	r3, [r0, #0]
90011624:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90011626:	4798      	blx	r3
90011628:	f7f0 fe8e 	bl	90002348 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
9001162c:	6828      	ldr	r0, [r5, #0]
9001162e:	2101      	movs	r1, #1
90011630:	f7ff ff12 	bl	90011458 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011634:	6860      	ldr	r0, [r4, #4]
90011636:	4631      	mov	r1, r6
90011638:	6803      	ldr	r3, [r0, #0]
9001163a:	689b      	ldr	r3, [r3, #8]
9001163c:	4798      	blx	r3
9001163e:	6823      	ldr	r3, [r4, #0]
90011640:	4620      	mov	r0, r4
90011642:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011644:	4798      	blx	r3
90011646:	6828      	ldr	r0, [r5, #0]
90011648:	6803      	ldr	r3, [r0, #0]
9001164a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001164e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90011650:	4718      	bx	r3
90011652:	bf00      	nop
90011654:	240233d4 	.word	0x240233d4

90011658 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90011658:	b508      	push	{r3, lr}
9001165a:	f7f0 fe67 	bl	9000232c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
9001165e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90011662:	f7f0 be6b 	b.w	9000233c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90011666 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90011666:	b510      	push	{r4, lr}
90011668:	4604      	mov	r4, r0
9001166a:	2114      	movs	r1, #20
9001166c:	f017 fefe 	bl	9002946c <_ZdlPvj>
90011670:	4620      	mov	r0, r4
90011672:	bd10      	pop	{r4, pc}

90011674 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90011674:	b570      	push	{r4, r5, r6, lr}
90011676:	4604      	mov	r4, r0
90011678:	6840      	ldr	r0, [r0, #4]
9001167a:	6803      	ldr	r3, [r0, #0]
9001167c:	681b      	ldr	r3, [r3, #0]
9001167e:	4798      	blx	r3
90011680:	4605      	mov	r5, r0
90011682:	b930      	cbnz	r0, 90011692 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90011684:	7a23      	ldrb	r3, [r4, #8]
90011686:	b123      	cbz	r3, 90011692 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90011688:	6860      	ldr	r0, [r4, #4]
9001168a:	6803      	ldr	r3, [r0, #0]
9001168c:	695b      	ldr	r3, [r3, #20]
9001168e:	4798      	blx	r3
90011690:	7225      	strb	r5, [r4, #8]
90011692:	6860      	ldr	r0, [r4, #4]
90011694:	6803      	ldr	r3, [r0, #0]
90011696:	681b      	ldr	r3, [r3, #0]
90011698:	4798      	blx	r3
9001169a:	b928      	cbnz	r0, 900116a8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
9001169c:	6823      	ldr	r3, [r4, #0]
9001169e:	4620      	mov	r0, r4
900116a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900116a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900116a6:	4718      	bx	r3
900116a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900116ac:	f7f0 be54 	b.w	90002358 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

900116b0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
900116b0:	b510      	push	{r4, lr}
900116b2:	6082      	str	r2, [r0, #8]
900116b4:	2200      	movs	r2, #0
900116b6:	4c03      	ldr	r4, [pc, #12]	@ (900116c4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
900116b8:	e9c0 2203 	strd	r2, r2, [r0, #12]
900116bc:	e9c0 4100 	strd	r4, r1, [r0]
900116c0:	bd10      	pop	{r4, pc}
900116c2:	bf00      	nop
900116c4:	9002d7d8 	.word	0x9002d7d8

900116c8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
900116c8:	6840      	ldr	r0, [r0, #4]
900116ca:	6803      	ldr	r3, [r0, #0]
900116cc:	681b      	ldr	r3, [r3, #0]
900116ce:	4718      	bx	r3

900116d0 <_ZN8touchgfxL10applyNoiseEiihhh>:
900116d0:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
900116d4:	fb80 0101 	smull	r0, r1, r0, r1
900116d8:	4f21      	ldr	r7, [pc, #132]	@ (90011760 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
900116da:	461c      	mov	r4, r3
900116dc:	4616      	mov	r6, r2
900116de:	fba0 bc07 	umull	fp, ip, r0, r7
900116e2:	f89d 5018 	ldrb.w	r5, [sp, #24]
900116e6:	fb07 cc01 	mla	ip, r7, r1, ip
900116ea:	fbab 010b 	umull	r0, r1, fp, fp
900116ee:	fb0b f70c 	mul.w	r7, fp, ip
900116f2:	fb00 f30c 	mul.w	r3, r0, ip
900116f6:	eb01 0147 	add.w	r1, r1, r7, lsl #1
900116fa:	fb0b 3301 	mla	r3, fp, r1, r3
900116fe:	fba0 010b 	umull	r0, r1, r0, fp
90011702:	4419      	add	r1, r3
90011704:	a314      	add	r3, pc, #80	@ (adr r3, 90011758 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
90011706:	e9d3 2300 	ldrd	r2, r3, [r3]
9001170a:	f7ee fff5 	bl	900006f8 <__aeabi_ldivmod>
9001170e:	2ef7      	cmp	r6, #247	@ 0xf7
90011710:	b290      	uxth	r0, r2
90011712:	bf9e      	ittt	ls
90011714:	f002 0207 	andls.w	r2, r2, #7
90011718:	18b6      	addls	r6, r6, r2
9001171a:	b2f6      	uxtbls	r6, r6
9001171c:	2cfb      	cmp	r4, #251	@ 0xfb
9001171e:	bf9e      	ittt	ls
90011720:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
90011724:	18e4      	addls	r4, r4, r3
90011726:	b2e4      	uxtbls	r4, r4
90011728:	2df7      	cmp	r5, #247	@ 0xf7
9001172a:	bf98      	it	ls
9001172c:	f3c0 1042 	ubfxls	r0, r0, #5, #3
90011730:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90011734:	bf98      	it	ls
90011736:	182d      	addls	r5, r5, r0
90011738:	480a      	ldr	r0, [pc, #40]	@ (90011764 <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
9001173a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9001173e:	ea00 2006 	and.w	r0, r0, r6, lsl #8
90011742:	bf98      	it	ls
90011744:	b2ed      	uxtbls	r5, r5
90011746:	4304      	orrs	r4, r0
90011748:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
9001174c:	b280      	uxth	r0, r0
9001174e:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
90011752:	bf00      	nop
90011754:	f3af 8000 	nop.w
90011758:	797a8d77 	.word	0x797a8d77
9001175c:	00000000 	.word	0x00000000
90011760:	00ec4ba7 	.word	0x00ec4ba7
90011764:	fffff800 	.word	0xfffff800

90011768 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
90011768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001176c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90011770:	4605      	mov	r5, r0
90011772:	ed2d 8b02 	vpush	{d8}
90011776:	b087      	sub	sp, #28
90011778:	7c41      	ldrb	r1, [r0, #17]
9001177a:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
9001177e:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
90011782:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
90011786:	2900      	cmp	r1, #0
90011788:	f000 809a 	beq.w	900118c0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
9001178c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90011790:	ed90 7a08 	vldr	s14, [r0, #32]
90011794:	454a      	cmp	r2, r9
90011796:	68c0      	ldr	r0, [r0, #12]
90011798:	db25      	blt.n	900117e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
9001179a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001179e:	f640 72fc 	movw	r2, #4092	@ 0xffc
900117a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900117a6:	bfc8      	it	gt
900117a8:	2200      	movgt	r2, #0
900117aa:	5882      	ldr	r2, [r0, r2]
900117ac:	2100      	movs	r1, #0
900117ae:	ea4f 2812 	mov.w	r8, r2, lsr #8
900117b2:	7c2d      	ldrb	r5, [r5, #16]
900117b4:	0950      	lsrs	r0, r2, #5
900117b6:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
900117ba:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
900117be:	eb04 0746 	add.w	r7, r4, r6, lsl #1
900117c2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900117c6:	2d00      	cmp	r5, #0
900117c8:	d044      	beq.n	90011854 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
900117ca:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900117ce:	d141      	bne.n	90011854 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
900117d0:	bb61      	cbnz	r1, 9001182c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
900117d2:	ea4e 0000 	orr.w	r0, lr, r0
900117d6:	ea4c 0500 	orr.w	r5, ip, r0
900117da:	42bc      	cmp	r4, r7
900117dc:	f080 8214 	bcs.w	90011c08 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900117e0:	f824 5b02 	strh.w	r5, [r4], #2
900117e4:	e7f9      	b.n	900117da <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
900117e6:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
900117ea:	454f      	cmp	r7, r9
900117ec:	dc08      	bgt.n	90011800 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
900117ee:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900117f2:	f640 72fc 	movw	r2, #4092	@ 0xffc
900117f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900117fa:	bfd8      	it	le
900117fc:	2200      	movle	r2, #0
900117fe:	e7d4      	b.n	900117aa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
90011800:	eba9 0202 	sub.w	r2, r9, r2
90011804:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011808:	ee07 2a90 	vmov	s15, r2
9001180c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011810:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90011814:	ee67 7a87 	vmul.f32	s15, s15, s14
90011818:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001181c:	ee17 2a90 	vmov	r2, s15
90011820:	bfd8      	it	le
90011822:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
90011826:	0092      	lsls	r2, r2, #2
90011828:	5882      	ldr	r2, [r0, r2]
9001182a:	e7c0      	b.n	900117ae <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
9001182c:	b2d5      	uxtb	r5, r2
9001182e:	f3c2 4a07 	ubfx	sl, r2, #16, #8
90011832:	fa5f f888 	uxtb.w	r8, r8
90011836:	461e      	mov	r6, r3
90011838:	42bc      	cmp	r4, r7
9001183a:	f080 81e5 	bcs.w	90011c08 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001183e:	4630      	mov	r0, r6
90011840:	9500      	str	r5, [sp, #0]
90011842:	4643      	mov	r3, r8
90011844:	4652      	mov	r2, sl
90011846:	4649      	mov	r1, r9
90011848:	3601      	adds	r6, #1
9001184a:	f7ff ff41 	bl	900116d0 <_ZN8touchgfxL10applyNoiseEiihhh>
9001184e:	f824 0b02 	strh.w	r0, [r4], #2
90011852:	e7f1      	b.n	90011838 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
90011854:	0e12      	lsrs	r2, r2, #24
90011856:	26ff      	movs	r6, #255	@ 0xff
90011858:	fb02 f20a 	mul.w	r2, r2, sl
9001185c:	1c53      	adds	r3, r2, #1
9001185e:	eb03 2222 	add.w	r2, r3, r2, asr #8
90011862:	1212      	asrs	r2, r2, #8
90011864:	fb02 f50c 	mul.w	r5, r2, ip
90011868:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 90011c1c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001186c:	fb02 f10e 	mul.w	r1, r2, lr
90011870:	4350      	muls	r0, r2
90011872:	43d2      	mvns	r2, r2
90011874:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90011878:	42bc      	cmp	r4, r7
9001187a:	f080 81c5 	bcs.w	90011c08 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001187e:	f8b4 e000 	ldrh.w	lr, [r4]
90011882:	ea0e 030c 	and.w	r3, lr, ip
90011886:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
9001188a:	f00e 0e1f 	and.w	lr, lr, #31
9001188e:	fb02 1303 	mla	r3, r2, r3, r1
90011892:	fb02 0808 	mla	r8, r2, r8, r0
90011896:	fb02 5e0e 	mla	lr, r2, lr, r5
9001189a:	fb93 f3f6 	sdiv	r3, r3, r6
9001189e:	fb98 f8f6 	sdiv	r8, r8, r6
900118a2:	fb9e fef6 	sdiv	lr, lr, r6
900118a6:	ea03 030c 	and.w	r3, r3, ip
900118aa:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
900118ae:	f00e 0e1f 	and.w	lr, lr, #31
900118b2:	ea43 0308 	orr.w	r3, r3, r8
900118b6:	ea43 030e 	orr.w	r3, r3, lr
900118ba:	f824 3b02 	strh.w	r3, [r4], #2
900118be:	e7db      	b.n	90011878 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
900118c0:	7c82      	ldrb	r2, [r0, #18]
900118c2:	2a00      	cmp	r2, #0
900118c4:	d04f      	beq.n	90011966 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
900118c6:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
900118ca:	ee07 2a90 	vmov	s15, r2
900118ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900118d2:	ee07 3a10 	vmov	s14, r3
900118d6:	461f      	mov	r7, r3
900118d8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
900118dc:	eef4 6ae7 	vcmpe.f32	s13, s15
900118e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900118e4:	f200 8095 	bhi.w	90011a12 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
900118e8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900118ec:	f640 71fc 	movw	r1, #4092	@ 0xffc
900118f0:	68ea      	ldr	r2, [r5, #12]
900118f2:	f895 c010 	ldrb.w	ip, [r5, #16]
900118f6:	ee37 7a87 	vadd.f32	s14, s15, s14
900118fa:	ee37 7a66 	vsub.f32	s14, s14, s13
900118fe:	ee06 6a90 	vmov	s13, r6
90011902:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90011906:	eeb4 7ae6 	vcmpe.f32	s14, s13
9001190a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001190e:	bf4a      	itet	mi
90011910:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
90011914:	9602      	strpl	r6, [sp, #8]
90011916:	ed8d 7a02 	vstrmi	s14, [sp, #8]
9001191a:	ed95 7a08 	vldr	s14, [r5, #32]
9001191e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011922:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011926:	bfc8      	it	gt
90011928:	2100      	movgt	r1, #0
9001192a:	5852      	ldr	r2, [r2, r1]
9001192c:	9902      	ldr	r1, [sp, #8]
9001192e:	ea4f 2b12 	mov.w	fp, r2, lsr #8
90011932:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90011936:	0950      	lsrs	r0, r2, #5
90011938:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001193c:	9103      	str	r1, [sp, #12]
9001193e:	f3c2 01c4 	ubfx	r1, r2, #3, #5
90011942:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90011946:	f1bc 0f00 	cmp.w	ip, #0
9001194a:	d024      	beq.n	90011996 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
9001194c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90011950:	d121      	bne.n	90011996 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
90011952:	ea4b 0b00 	orr.w	fp, fp, r0
90011956:	ea41 010b 	orr.w	r1, r1, fp
9001195a:	9a03      	ldr	r2, [sp, #12]
9001195c:	4294      	cmp	r4, r2
9001195e:	d255      	bcs.n	90011a0c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90011960:	f824 1b02 	strh.w	r1, [r4], #2
90011964:	e7f9      	b.n	9001195a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
90011966:	ee07 9a10 	vmov	s14, r9
9001196a:	edd0 7a06 	vldr	s15, [r0, #24]
9001196e:	edd0 6a05 	vldr	s13, [r0, #20]
90011972:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90011976:	ee37 7a67 	vsub.f32	s14, s14, s15
9001197a:	eec7 7a26 	vdiv.f32	s15, s14, s13
9001197e:	ed90 7a08 	vldr	s14, [r0, #32]
90011982:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011986:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001198a:	bf44      	itt	mi
9001198c:	ed90 7a07 	vldrmi	s14, [r0, #28]
90011990:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
90011994:	e79d      	b.n	900118d2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
90011996:	0e12      	lsrs	r2, r2, #24
90011998:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 90011c1c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001199c:	f04f 0eff 	mov.w	lr, #255	@ 0xff
900119a0:	fb02 f20a 	mul.w	r2, r2, sl
900119a4:	f102 0c01 	add.w	ip, r2, #1
900119a8:	eb0c 2222 	add.w	r2, ip, r2, asr #8
900119ac:	1212      	asrs	r2, r2, #8
900119ae:	4350      	muls	r0, r2
900119b0:	4351      	muls	r1, r2
900119b2:	fb02 fb0b 	mul.w	fp, r2, fp
900119b6:	43d2      	mvns	r2, r2
900119b8:	9004      	str	r0, [sp, #16]
900119ba:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
900119be:	9105      	str	r1, [sp, #20]
900119c0:	9903      	ldr	r1, [sp, #12]
900119c2:	428c      	cmp	r4, r1
900119c4:	d222      	bcs.n	90011a0c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
900119c6:	8820      	ldrh	r0, [r4, #0]
900119c8:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
900119cc:	ea00 0c08 	and.w	ip, r0, r8
900119d0:	460f      	mov	r7, r1
900119d2:	9904      	ldr	r1, [sp, #16]
900119d4:	fb02 bc0c 	mla	ip, r2, ip, fp
900119d8:	fb02 1107 	mla	r1, r2, r7, r1
900119dc:	fb9c fcfe 	sdiv	ip, ip, lr
900119e0:	fb91 f1fe 	sdiv	r1, r1, lr
900119e4:	ea0c 0c08 	and.w	ip, ip, r8
900119e8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900119ec:	ea4c 0101 	orr.w	r1, ip, r1
900119f0:	f000 0c1f 	and.w	ip, r0, #31
900119f4:	9805      	ldr	r0, [sp, #20]
900119f6:	fb02 0c0c 	mla	ip, r2, ip, r0
900119fa:	fb9c fcfe 	sdiv	ip, ip, lr
900119fe:	f00c 0c1f 	and.w	ip, ip, #31
90011a02:	ea41 010c 	orr.w	r1, r1, ip
90011a06:	f824 1b02 	strh.w	r1, [r4], #2
90011a0a:	e7d9      	b.n	900119c0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
90011a0c:	9a02      	ldr	r2, [sp, #8]
90011a0e:	441a      	add	r2, r3
90011a10:	4617      	mov	r7, r2
90011a12:	441e      	add	r6, r3
90011a14:	b236      	sxth	r6, r6
90011a16:	42be      	cmp	r6, r7
90011a18:	f340 80f6 	ble.w	90011c08 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011a1c:	ed95 7a07 	vldr	s14, [r5, #28]
90011a20:	ee06 7a90 	vmov	s13, r7
90011a24:	ee37 7a87 	vadd.f32	s14, s15, s14
90011a28:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90011a2c:	eeb4 7ae6 	vcmpe.f32	s14, s13
90011a30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011a34:	f340 80b2 	ble.w	90011b9c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
90011a38:	ee06 6a10 	vmov	s12, r6
90011a3c:	ee76 7ae7 	vsub.f32	s15, s13, s15
90011a40:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 90011c14 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
90011a44:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
90011a48:	7c2b      	ldrb	r3, [r5, #16]
90011a4a:	eeb4 7ac6 	vcmpe.f32	s14, s12
90011a4e:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 90011c18 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
90011a52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011a56:	bfd6      	itet	le
90011a58:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
90011a5c:	46b0      	movgt	r8, r6
90011a5e:	ee17 8a10 	vmovle	r8, s14
90011a62:	ed95 7a08 	vldr	s14, [r5, #32]
90011a66:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011a6a:	eba8 0707 	sub.w	r7, r8, r7
90011a6e:	eb04 0747 	add.w	r7, r4, r7, lsl #1
90011a72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011a76:	fe38 8a06 	vselgt.f32	s16, s16, s12
90011a7a:	eea7 8a27 	vfma.f32	s16, s14, s15
90011a7e:	b1db      	cbz	r3, 90011ab8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
90011a80:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90011a84:	d118      	bne.n	90011ab8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
90011a86:	42bc      	cmp	r4, r7
90011a88:	d262      	bcs.n	90011b50 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90011a8a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011a8e:	68eb      	ldr	r3, [r5, #12]
90011a90:	4649      	mov	r1, r9
90011a92:	ee17 0a90 	vmov	r0, s15
90011a96:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
90011a9a:	b2d3      	uxtb	r3, r2
90011a9c:	9300      	str	r3, [sp, #0]
90011a9e:	f3c2 2307 	ubfx	r3, r2, #8, #8
90011aa2:	f3c2 4207 	ubfx	r2, r2, #16, #8
90011aa6:	f7ff fe13 	bl	900116d0 <_ZN8touchgfxL10applyNoiseEiihhh>
90011aaa:	f824 0b02 	strh.w	r0, [r4], #2
90011aae:	edd5 7a08 	vldr	s15, [r5, #32]
90011ab2:	ee38 8a27 	vadd.f32	s16, s16, s15
90011ab6:	e7e6      	b.n	90011a86 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
90011ab8:	f8df b160 	ldr.w	fp, [pc, #352]	@ 90011c1c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90011abc:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90011ac0:	42bc      	cmp	r4, r7
90011ac2:	d245      	bcs.n	90011b50 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90011ac4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011ac8:	68eb      	ldr	r3, [r5, #12]
90011aca:	f8b4 e000 	ldrh.w	lr, [r4]
90011ace:	ee17 2a90 	vmov	r2, s15
90011ad2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90011ad6:	0e13      	lsrs	r3, r2, #24
90011ad8:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
90011adc:	fb03 f30a 	mul.w	r3, r3, sl
90011ae0:	b289      	uxth	r1, r1
90011ae2:	1c58      	adds	r0, r3, #1
90011ae4:	eb00 2023 	add.w	r0, r0, r3, asr #8
90011ae8:	ea0e 030b 	and.w	r3, lr, fp
90011aec:	1200      	asrs	r0, r0, #8
90011aee:	ea6f 0c00 	mvn.w	ip, r0
90011af2:	fa5f fc8c 	uxtb.w	ip, ip
90011af6:	fb0c f303 	mul.w	r3, ip, r3
90011afa:	fb00 3101 	mla	r1, r0, r1, r3
90011afe:	fb91 f1f9 	sdiv	r1, r1, r9
90011b02:	ea01 030b 	and.w	r3, r1, fp
90011b06:	9302      	str	r3, [sp, #8]
90011b08:	0953      	lsrs	r3, r2, #5
90011b0a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90011b0e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90011b12:	4619      	mov	r1, r3
90011b14:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
90011b18:	f00e 0e1f 	and.w	lr, lr, #31
90011b1c:	fb0c f303 	mul.w	r3, ip, r3
90011b20:	fb0c fc0e 	mul.w	ip, ip, lr
90011b24:	fb00 3301 	mla	r3, r0, r1, r3
90011b28:	9902      	ldr	r1, [sp, #8]
90011b2a:	fb00 c002 	mla	r0, r0, r2, ip
90011b2e:	fb93 f3f9 	sdiv	r3, r3, r9
90011b32:	fb90 f0f9 	sdiv	r0, r0, r9
90011b36:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90011b3a:	f000 001f 	and.w	r0, r0, #31
90011b3e:	4319      	orrs	r1, r3
90011b40:	4301      	orrs	r1, r0
90011b42:	f824 1b02 	strh.w	r1, [r4], #2
90011b46:	edd5 7a08 	vldr	s15, [r5, #32]
90011b4a:	ee38 8a27 	vadd.f32	s16, s16, s15
90011b4e:	e7b7      	b.n	90011ac0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
90011b50:	4546      	cmp	r6, r8
90011b52:	dd59      	ble.n	90011c08 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011b54:	edd5 7a08 	vldr	s15, [r5, #32]
90011b58:	f640 73fc 	movw	r3, #4092	@ 0xffc
90011b5c:	68ea      	ldr	r2, [r5, #12]
90011b5e:	eba6 0608 	sub.w	r6, r6, r8
90011b62:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90011b66:	7c29      	ldrb	r1, [r5, #16]
90011b68:	eb04 0646 	add.w	r6, r4, r6, lsl #1
90011b6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011b70:	bfd8      	it	le
90011b72:	2300      	movle	r3, #0
90011b74:	58d2      	ldr	r2, [r2, r3]
90011b76:	0a10      	lsrs	r0, r2, #8
90011b78:	f3c2 07c4 	ubfx	r7, r2, #3, #5
90011b7c:	0953      	lsrs	r3, r2, #5
90011b7e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90011b82:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90011b86:	b159      	cbz	r1, 90011ba0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90011b88:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90011b8c:	d108      	bne.n	90011ba0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90011b8e:	4318      	orrs	r0, r3
90011b90:	4338      	orrs	r0, r7
90011b92:	42b4      	cmp	r4, r6
90011b94:	d238      	bcs.n	90011c08 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011b96:	f824 0b02 	strh.w	r0, [r4], #2
90011b9a:	e7fa      	b.n	90011b92 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
90011b9c:	46b8      	mov	r8, r7
90011b9e:	e7d9      	b.n	90011b54 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
90011ba0:	0e12      	lsrs	r2, r2, #24
90011ba2:	f8df c078 	ldr.w	ip, [pc, #120]	@ 90011c1c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90011ba6:	fb02 f10a 	mul.w	r1, r2, sl
90011baa:	1c4a      	adds	r2, r1, #1
90011bac:	eb02 2221 	add.w	r2, r2, r1, asr #8
90011bb0:	1212      	asrs	r2, r2, #8
90011bb2:	fb02 f507 	mul.w	r5, r2, r7
90011bb6:	27ff      	movs	r7, #255	@ 0xff
90011bb8:	4350      	muls	r0, r2
90011bba:	4353      	muls	r3, r2
90011bbc:	43d2      	mvns	r2, r2
90011bbe:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90011bc2:	42b4      	cmp	r4, r6
90011bc4:	d220      	bcs.n	90011c08 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011bc6:	f8b4 e000 	ldrh.w	lr, [r4]
90011bca:	ea0e 010c 	and.w	r1, lr, ip
90011bce:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90011bd2:	f00e 0e1f 	and.w	lr, lr, #31
90011bd6:	fb02 0101 	mla	r1, r2, r1, r0
90011bda:	fb02 3808 	mla	r8, r2, r8, r3
90011bde:	fb02 5e0e 	mla	lr, r2, lr, r5
90011be2:	fb91 f1f7 	sdiv	r1, r1, r7
90011be6:	fb98 f8f7 	sdiv	r8, r8, r7
90011bea:	fb9e fef7 	sdiv	lr, lr, r7
90011bee:	ea01 010c 	and.w	r1, r1, ip
90011bf2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90011bf6:	f00e 0e1f 	and.w	lr, lr, #31
90011bfa:	ea41 0108 	orr.w	r1, r1, r8
90011bfe:	ea41 010e 	orr.w	r1, r1, lr
90011c02:	f824 1b02 	strh.w	r1, [r4], #2
90011c06:	e7dc      	b.n	90011bc2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
90011c08:	b007      	add	sp, #28
90011c0a:	ecbd 8b02 	vpop	{d8}
90011c0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011c12:	bf00      	nop
90011c14:	00000000 	.word	0x00000000
90011c18:	447ffffe 	.word	0x447ffffe
90011c1c:	fffff800 	.word	0xfffff800

90011c20 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
90011c20:	4770      	bx	lr

90011c22 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
90011c22:	4770      	bx	lr

90011c24 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
90011c24:	b510      	push	{r4, lr}
90011c26:	4604      	mov	r4, r0
90011c28:	2124      	movs	r1, #36	@ 0x24
90011c2a:	f017 fc1f 	bl	9002946c <_ZdlPvj>
90011c2e:	4620      	mov	r0, r4
90011c30:	bd10      	pop	{r4, pc}
	...

90011c34 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90011c34:	094a      	lsrs	r2, r1, #5
90011c36:	4b06      	ldr	r3, [pc, #24]	@ (90011c50 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90011c38:	60c1      	str	r1, [r0, #12]
90011c3a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90011c3e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90011c42:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90011c46:	4313      	orrs	r3, r2
90011c48:	4319      	orrs	r1, r3
90011c4a:	8201      	strh	r1, [r0, #16]
90011c4c:	4770      	bx	lr
90011c4e:	bf00      	nop
90011c50:	fffff800 	.word	0xfffff800

90011c54 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90011c54:	f1a0 0008 	sub.w	r0, r0, #8
90011c58:	e7ec      	b.n	90011c34 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90011c5a:	bf00      	nop

90011c5c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90011c5c:	b508      	push	{r3, lr}
90011c5e:	4b05      	ldr	r3, [pc, #20]	@ (90011c74 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90011c60:	6818      	ldr	r0, [r3, #0]
90011c62:	6803      	ldr	r3, [r0, #0]
90011c64:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
90011c68:	4798      	blx	r3
90011c6a:	1e43      	subs	r3, r0, #1
90011c6c:	4258      	negs	r0, r3
90011c6e:	4158      	adcs	r0, r3
90011c70:	bd08      	pop	{r3, pc}
90011c72:	bf00      	nop
90011c74:	240233d4 	.word	0x240233d4

90011c78 <_ZN8touchgfx13PainterRGB565D1Ev>:
90011c78:	4770      	bx	lr

90011c7a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90011c7a:	3808      	subs	r0, #8
90011c7c:	4770      	bx	lr

90011c7e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90011c7e:	b430      	push	{r4, r5}
90011c80:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90011c84:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90011c88:	8a02      	ldrh	r2, [r0, #16]
90011c8a:	f89d 3010 	ldrb.w	r3, [sp, #16]
90011c8e:	4629      	mov	r1, r5
90011c90:	9202      	str	r2, [sp, #8]
90011c92:	68c2      	ldr	r2, [r0, #12]
90011c94:	4620      	mov	r0, r4
90011c96:	bc30      	pop	{r4, r5}
90011c98:	f7f0 be54 	b.w	90002944 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90011c9c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90011c9c:	f7f0 be2e 	b.w	900028fc <_ZN8touchgfx5paint8tearDownEv>

90011ca0 <_ZN8touchgfx13PainterRGB565D0Ev>:
90011ca0:	b510      	push	{r4, lr}
90011ca2:	4604      	mov	r4, r0
90011ca4:	2114      	movs	r1, #20
90011ca6:	f017 fbe1 	bl	9002946c <_ZdlPvj>
90011caa:	4620      	mov	r0, r4
90011cac:	bd10      	pop	{r4, pc}

90011cae <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90011cae:	f1a0 0008 	sub.w	r0, r0, #8
90011cb2:	e7f5      	b.n	90011ca0 <_ZN8touchgfx13PainterRGB565D0Ev>

90011cb4 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
90011cb4:	2300      	movs	r3, #0
90011cb6:	84c3      	strh	r3, [r0, #38]	@ 0x26
90011cb8:	8503      	strh	r3, [r0, #40]	@ 0x28
90011cba:	8543      	strh	r3, [r0, #42]	@ 0x2a
90011cbc:	8583      	strh	r3, [r0, #44]	@ 0x2c
90011cbe:	6980      	ldr	r0, [r0, #24]
90011cc0:	b110      	cbz	r0, 90011cc8 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
90011cc2:	6803      	ldr	r3, [r0, #0]
90011cc4:	691b      	ldr	r3, [r3, #16]
90011cc6:	4718      	bx	r3
90011cc8:	4770      	bx	lr

90011cca <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
90011cca:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
90011cce:	4770      	bx	lr

90011cd0 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
90011cd0:	b538      	push	{r3, r4, r5, lr}
90011cd2:	0e0b      	lsrs	r3, r1, #24
90011cd4:	4604      	mov	r4, r0
90011cd6:	460d      	mov	r5, r1
90011cd8:	7783      	strb	r3, [r0, #30]
90011cda:	6803      	ldr	r3, [r0, #0]
90011cdc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90011cde:	4798      	blx	r3
90011ce0:	6803      	ldr	r3, [r0, #0]
90011ce2:	4629      	mov	r1, r5
90011ce4:	689b      	ldr	r3, [r3, #8]
90011ce6:	4798      	blx	r3
90011ce8:	6823      	ldr	r3, [r4, #0]
90011cea:	4620      	mov	r0, r4
90011cec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90011cee:	4798      	blx	r3
90011cf0:	61a0      	str	r0, [r4, #24]
90011cf2:	bd38      	pop	{r3, r4, r5, pc}

90011cf4 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
90011cf4:	7741      	strb	r1, [r0, #29]
90011cf6:	4770      	bx	lr

90011cf8 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90011cf8:	b530      	push	{r4, r5, lr}
90011cfa:	460d      	mov	r5, r1
90011cfc:	f100 0434 	add.w	r4, r0, #52	@ 0x34
90011d00:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90011d02:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011d04:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90011d06:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011d08:	682b      	ldr	r3, [r5, #0]
90011d0a:	6023      	str	r3, [r4, #0]
90011d0c:	bd30      	pop	{r4, r5, pc}

90011d0e <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
90011d0e:	b538      	push	{r3, r4, r5, lr}
90011d10:	4604      	mov	r4, r0
90011d12:	1d03      	adds	r3, r0, #4
90011d14:	6808      	ldr	r0, [r1, #0]
90011d16:	2500      	movs	r5, #0
90011d18:	6849      	ldr	r1, [r1, #4]
90011d1a:	c303      	stmia	r3!, {r0, r1}
90011d1c:	6813      	ldr	r3, [r2, #0]
90011d1e:	f104 0034 	add.w	r0, r4, #52	@ 0x34
90011d22:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
90011d26:	6853      	ldr	r3, [r2, #4]
90011d28:	61a5      	str	r5, [r4, #24]
90011d2a:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
90011d2e:	f006 fab9 	bl	900182a4 <_ZN8touchgfx9Matrix3x35resetEv>
90011d32:	23ff      	movs	r3, #255	@ 0xff
90011d34:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
90011d38:	7763      	strb	r3, [r4, #29]
90011d3a:	77a3      	strb	r3, [r4, #30]
90011d3c:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
90011d40:	6323      	str	r3, [r4, #48]	@ 0x30
90011d42:	2301      	movs	r3, #1
90011d44:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
90011d48:	bd38      	pop	{r3, r4, r5, pc}
	...

90011d4c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
90011d4c:	ee70 7a41 	vsub.f32	s15, s0, s2
90011d50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011d54:	eef5 7a40 	vcmp.f32	s15, #0.0
90011d58:	4605      	mov	r5, r0
90011d5a:	ed2d 8b0a 	vpush	{d8-d12}
90011d5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011d62:	b086      	sub	sp, #24
90011d64:	eeb0 ba40 	vmov.f32	s22, s0
90011d68:	6802      	ldr	r2, [r0, #0]
90011d6a:	eef0 ba60 	vmov.f32	s23, s1
90011d6e:	f89d 6058 	ldrb.w	r6, [sp, #88]	@ 0x58
90011d72:	eef0 aa41 	vmov.f32	s21, s2
90011d76:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
90011d78:	eeb0 aa61 	vmov.f32	s20, s3
90011d7c:	eeb0 ca42 	vmov.f32	s24, s4
90011d80:	eef0 ca62 	vmov.f32	s25, s5
90011d84:	d112      	bne.n	90011dac <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90011d86:	ee70 7ae1 	vsub.f32	s15, s1, s3
90011d8a:	eef5 7a40 	vcmp.f32	s15, #0.0
90011d8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011d92:	d10b      	bne.n	90011dac <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90011d94:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90011d98:	6a92      	ldr	r2, [r2, #40]	@ 0x28
90011d9a:	3901      	subs	r1, #1
90011d9c:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
90011da0:	b006      	add	sp, #24
90011da2:	ecbd 8b0a 	vpop	{d8-d12}
90011da6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90011daa:	4710      	bx	r2
90011dac:	23ff      	movs	r3, #255	@ 0xff
90011dae:	4628      	mov	r0, r5
90011db0:	f105 0834 	add.w	r8, r5, #52	@ 0x34
90011db4:	77ab      	strb	r3, [r5, #30]
90011db6:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90011db8:	4798      	blx	r3
90011dba:	eeb0 0a4b 	vmov.f32	s0, s22
90011dbe:	eef0 0a6b 	vmov.f32	s1, s23
90011dc2:	4604      	mov	r4, r0
90011dc4:	4640      	mov	r0, r8
90011dc6:	f006 fb1c 	bl	90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011dca:	eef0 8a40 	vmov.f32	s17, s0
90011dce:	ed8d 0a00 	vstr	s0, [sp]
90011dd2:	eeb0 0a6a 	vmov.f32	s0, s21
90011dd6:	eef0 9a60 	vmov.f32	s19, s1
90011dda:	edcd 0a01 	vstr	s1, [sp, #4]
90011dde:	4640      	mov	r0, r8
90011de0:	eef0 0a4a 	vmov.f32	s1, s20
90011de4:	f006 fb0d 	bl	90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011de8:	eef4 8a40 	vcmp.f32	s17, s0
90011dec:	eeb0 8a40 	vmov.f32	s16, s0
90011df0:	ed8d 0a02 	vstr	s0, [sp, #8]
90011df4:	eeb0 9a60 	vmov.f32	s18, s1
90011df8:	edcd 0a03 	vstr	s1, [sp, #12]
90011dfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011e00:	eef4 9a60 	vcmp.f32	s19, s1
90011e04:	bf0c      	ite	eq
90011e06:	2301      	moveq	r3, #1
90011e08:	2300      	movne	r3, #0
90011e0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011e0e:	eef4 8a40 	vcmp.f32	s17, s0
90011e12:	7463      	strb	r3, [r4, #17]
90011e14:	bf0c      	ite	eq
90011e16:	2301      	moveq	r3, #1
90011e18:	2300      	movne	r3, #0
90011e1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011e1e:	74a3      	strb	r3, [r4, #18]
90011e20:	d024      	beq.n	90011e6c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90011e22:	eef4 9a60 	vcmp.f32	s19, s1
90011e26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011e2a:	d01f      	beq.n	90011e6c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90011e2c:	ee3a aa6b 	vsub.f32	s20, s20, s23
90011e30:	4640      	mov	r0, r8
90011e32:	ee7a aacb 	vsub.f32	s21, s21, s22
90011e36:	eeb0 0a4b 	vmov.f32	s0, s22
90011e3a:	eeca 7a2c 	vdiv.f32	s15, s20, s25
90011e3e:	ee8a 7a8c 	vdiv.f32	s14, s21, s24
90011e42:	eef0 0a6b 	vmov.f32	s1, s23
90011e46:	eea7 0acc 	vfms.f32	s0, s15, s24
90011e4a:	eeec 0a87 	vfma.f32	s1, s25, s14
90011e4e:	f006 fad8 	bl	90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011e52:	ed8d 0a04 	vstr	s0, [sp, #16]
90011e56:	ee30 0a68 	vsub.f32	s0, s0, s17
90011e5a:	eeb5 0a40 	vcmp.f32	s0, #0.0
90011e5e:	edcd 0a05 	vstr	s1, [sp, #20]
90011e62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011e66:	d121      	bne.n	90011eac <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x160>
90011e68:	2301      	movs	r3, #1
90011e6a:	74a3      	strb	r3, [r4, #18]
90011e6c:	7c63      	ldrb	r3, [r4, #17]
90011e6e:	2b00      	cmp	r3, #0
90011e70:	d051      	beq.n	90011f16 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ca>
90011e72:	ee39 7a69 	vsub.f32	s14, s18, s19
90011e76:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 90011f6c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
90011e7a:	eef4 9ac9 	vcmpe.f32	s19, s18
90011e7e:	eec6 7a87 	vdiv.f32	s15, s13, s14
90011e82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011e86:	edc4 7a08 	vstr	s15, [r4, #32]
90011e8a:	eefd 7ac9 	vcvt.s32.f32	s15, s18
90011e8e:	ee17 3a90 	vmov	r3, s15
90011e92:	eefd 7ae9 	vcvt.s32.f32	s15, s19
90011e96:	b21a      	sxth	r2, r3
90011e98:	ee17 3a90 	vmov	r3, s15
90011e9c:	bf48      	it	mi
90011e9e:	8122      	strhmi	r2, [r4, #8]
90011ea0:	b21b      	sxth	r3, r3
90011ea2:	bf56      	itet	pl
90011ea4:	80e2      	strhpl	r2, [r4, #6]
90011ea6:	80e3      	strhmi	r3, [r4, #6]
90011ea8:	8123      	strhpl	r3, [r4, #8]
90011eaa:	e02c      	b.n	90011f06 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90011eac:	ee70 0ae9 	vsub.f32	s1, s1, s19
90011eb0:	eec0 7a80 	vdiv.f32	s15, s1, s0
90011eb4:	eef5 7a40 	vcmp.f32	s15, #0.0
90011eb8:	edc4 7a05 	vstr	s15, [r4, #20]
90011ebc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011ec0:	d102      	bne.n	90011ec8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x17c>
90011ec2:	2301      	movs	r3, #1
90011ec4:	7463      	strb	r3, [r4, #17]
90011ec6:	e7d1      	b.n	90011e6c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90011ec8:	eeb0 7a69 	vmov.f32	s14, s19
90011ecc:	ee39 9a69 	vsub.f32	s18, s18, s19
90011ed0:	ee38 8a68 	vsub.f32	s16, s16, s17
90011ed4:	eea8 7ae7 	vfms.f32	s14, s17, s15
90011ed8:	ed84 7a06 	vstr	s14, [r4, #24]
90011edc:	ee89 7a27 	vdiv.f32	s14, s18, s15
90011ee0:	ee38 8a47 	vsub.f32	s16, s16, s14
90011ee4:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 90011f70 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x224>
90011ee8:	eec7 7a08 	vdiv.f32	s15, s14, s16
90011eec:	ed84 8a07 	vstr	s16, [r4, #28]
90011ef0:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
90011ef4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011ef8:	edc4 7a08 	vstr	s15, [r4, #32]
90011efc:	d503      	bpl.n	90011f06 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90011efe:	eeb1 8a48 	vneg.f32	s16, s16
90011f02:	ed84 8a07 	vstr	s16, [r4, #28]
90011f06:	60e7      	str	r7, [r4, #12]
90011f08:	7426      	strb	r6, [r4, #16]
90011f0a:	61ac      	str	r4, [r5, #24]
90011f0c:	b006      	add	sp, #24
90011f0e:	ecbd 8b0a 	vpop	{d8-d12}
90011f12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011f16:	7ca3      	ldrb	r3, [r4, #18]
90011f18:	2b00      	cmp	r3, #0
90011f1a:	d0f4      	beq.n	90011f06 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90011f1c:	ee38 7a68 	vsub.f32	s14, s16, s17
90011f20:	eddf 6a12 	vldr	s13, [pc, #72]	@ 90011f6c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
90011f24:	eef4 8ac8 	vcmpe.f32	s17, s16
90011f28:	eec6 7a87 	vdiv.f32	s15, s13, s14
90011f2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011f30:	edc4 7a08 	vstr	s15, [r4, #32]
90011f34:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011f38:	ee17 3a90 	vmov	r3, s15
90011f3c:	eefd 7ae8 	vcvt.s32.f32	s15, s17
90011f40:	b21a      	sxth	r2, r3
90011f42:	ee17 3a90 	vmov	r3, s15
90011f46:	bf48      	it	mi
90011f48:	8122      	strhmi	r2, [r4, #8]
90011f4a:	b21b      	sxth	r3, r3
90011f4c:	bf56      	itet	pl
90011f4e:	80e2      	strhpl	r2, [r4, #6]
90011f50:	80e3      	strhmi	r3, [r4, #6]
90011f52:	8123      	strhpl	r3, [r4, #8]
90011f54:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90011f58:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
90011f5c:	1a9b      	subs	r3, r3, r2
90011f5e:	ee07 3a90 	vmov	s15, r3
90011f62:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90011f66:	edc4 7a07 	vstr	s15, [r4, #28]
90011f6a:	e7cc      	b.n	90011f06 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90011f6c:	447ffffe 	.word	0x447ffffe
90011f70:	44800000 	.word	0x44800000

90011f74 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
90011f74:	b510      	push	{r4, lr}
90011f76:	ed2d 8b02 	vpush	{d8}
90011f7a:	eef0 8a62 	vmov.f32	s17, s5
90011f7e:	2100      	movs	r1, #0
90011f80:	4604      	mov	r4, r0
90011f82:	eeb0 8a42 	vmov.f32	s16, s4
90011f86:	f016 ffe3 	bl	90028f50 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90011f8a:	eef0 7a68 	vmov.f32	s15, s17
90011f8e:	6823      	ldr	r3, [r4, #0]
90011f90:	4620      	mov	r0, r4
90011f92:	689b      	ldr	r3, [r3, #8]
90011f94:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011f98:	ee17 2a90 	vmov	r2, s15
90011f9c:	eef0 7a48 	vmov.f32	s15, s16
90011fa0:	ecbd 8b02 	vpop	{d8}
90011fa4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011fa8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011fac:	ee17 1a90 	vmov	r1, s15
90011fb0:	4718      	bx	r3

90011fb2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
90011fb2:	b510      	push	{r4, lr}
90011fb4:	ed2d 8b02 	vpush	{d8}
90011fb8:	eef0 8a63 	vmov.f32	s17, s7
90011fbc:	2100      	movs	r1, #0
90011fbe:	4604      	mov	r4, r0
90011fc0:	eeb0 8a43 	vmov.f32	s16, s6
90011fc4:	f017 f886 	bl	900290d4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90011fc8:	eef0 7a68 	vmov.f32	s15, s17
90011fcc:	6823      	ldr	r3, [r4, #0]
90011fce:	4620      	mov	r0, r4
90011fd0:	689b      	ldr	r3, [r3, #8]
90011fd2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011fd6:	ee17 2a90 	vmov	r2, s15
90011fda:	eef0 7a48 	vmov.f32	s15, s16
90011fde:	ecbd 8b02 	vpop	{d8}
90011fe2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011fe6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011fea:	ee17 1a90 	vmov	r1, s15
90011fee:	4718      	bx	r3

90011ff0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
90011ff0:	b513      	push	{r0, r1, r4, lr}
90011ff2:	4604      	mov	r4, r0
90011ff4:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90011ff6:	f006 fa04 	bl	90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011ffa:	eef0 7a60 	vmov.f32	s15, s1
90011ffe:	4620      	mov	r0, r4
90012000:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012004:	ee17 2a90 	vmov	r2, s15
90012008:	eef0 7a40 	vmov.f32	s15, s0
9001200c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012010:	ee17 1a90 	vmov	r1, s15
90012014:	b002      	add	sp, #8
90012016:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001201a:	f016 bef3 	b.w	90028e04 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
9001201e:	b513      	push	{r0, r1, r4, lr}
90012020:	4604      	mov	r4, r0
90012022:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90012024:	f006 f9ed 	bl	90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012028:	eef0 7a60 	vmov.f32	s15, s1
9001202c:	4620      	mov	r0, r4
9001202e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012032:	ee17 2a90 	vmov	r2, s15
90012036:	eef0 7a40 	vmov.f32	s15, s0
9001203a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001203e:	ee17 1a90 	vmov	r1, s15
90012042:	b002      	add	sp, #8
90012044:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012048:	f016 bf29 	b.w	90028e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

9001204c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
9001204c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001204e:	2400      	movs	r4, #0
90012050:	9f07      	ldr	r7, [sp, #28]
90012052:	f04f 0e01 	mov.w	lr, #1
90012056:	4626      	mov	r6, r4
90012058:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
9001205c:	4463      	add	r3, ip
9001205e:	4563      	cmp	r3, ip
90012060:	d02d      	beq.n	900120be <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
90012062:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
90012066:	2d06      	cmp	r5, #6
90012068:	d8f9      	bhi.n	9001205e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
9001206a:	fa0e f505 	lsl.w	r5, lr, r5
9001206e:	f015 0f66 	tst.w	r5, #102	@ 0x66
90012072:	d10d      	bne.n	90012090 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
90012074:	f015 0f10 	tst.w	r5, #16
90012078:	d117      	bne.n	900120aa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
9001207a:	072d      	lsls	r5, r5, #28
9001207c:	d5ef      	bpl.n	9001205e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
9001207e:	3801      	subs	r0, #1
90012080:	b91e      	cbnz	r6, 9001208a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
90012082:	eb07 0580 	add.w	r5, r7, r0, lsl #2
90012086:	682d      	ldr	r5, [r5, #0]
90012088:	600d      	str	r5, [r1, #0]
9001208a:	b96c      	cbnz	r4, 900120a8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
9001208c:	2601      	movs	r6, #1
9001208e:	e7e6      	b.n	9001205e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90012090:	b926      	cbnz	r6, 9001209c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
90012092:	eb07 0380 	add.w	r3, r7, r0, lsl #2
90012096:	f853 3c08 	ldr.w	r3, [r3, #-8]
9001209a:	600b      	str	r3, [r1, #0]
9001209c:	b924      	cbnz	r4, 900120a8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
9001209e:	eb07 0080 	add.w	r0, r7, r0, lsl #2
900120a2:	f850 3c04 	ldr.w	r3, [r0, #-4]
900120a6:	6013      	str	r3, [r2, #0]
900120a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900120aa:	3801      	subs	r0, #1
900120ac:	b91c      	cbnz	r4, 900120b6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
900120ae:	eb07 0480 	add.w	r4, r7, r0, lsl #2
900120b2:	6824      	ldr	r4, [r4, #0]
900120b4:	6014      	str	r4, [r2, #0]
900120b6:	2e00      	cmp	r6, #0
900120b8:	d1f6      	bne.n	900120a8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
900120ba:	2401      	movs	r4, #1
900120bc:	e7cf      	b.n	9001205e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
900120be:	b90e      	cbnz	r6, 900120c4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
900120c0:	2300      	movs	r3, #0
900120c2:	600b      	str	r3, [r1, #0]
900120c4:	2c00      	cmp	r4, #0
900120c6:	d1ef      	bne.n	900120a8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
900120c8:	2300      	movs	r3, #0
900120ca:	e7ec      	b.n	900120a6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

900120cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
900120cc:	b538      	push	{r3, r4, r5, lr}
900120ce:	ed2d 8b0a 	vpush	{d8-d12}
900120d2:	eef0 ba40 	vmov.f32	s23, s0
900120d6:	4604      	mov	r4, r0
900120d8:	eeb0 ca60 	vmov.f32	s24, s1
900120dc:	460d      	mov	r5, r1
900120de:	eef0 aa41 	vmov.f32	s21, s2
900120e2:	eeb0 ba61 	vmov.f32	s22, s3
900120e6:	eeb0 9a42 	vmov.f32	s18, s4
900120ea:	eef0 9a62 	vmov.f32	s19, s5
900120ee:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
900120f2:	ee7b 8a29 	vadd.f32	s17, s22, s19
900120f6:	ee3a 8a89 	vadd.f32	s16, s21, s18
900120fa:	ee68 8a8a 	vmul.f32	s17, s17, s20
900120fe:	ee28 8a0a 	vmul.f32	s16, s16, s20
90012102:	ee3c 0a68 	vsub.f32	s0, s24, s17
90012106:	ee7b 7ac8 	vsub.f32	s15, s23, s16
9001210a:	ee20 0a00 	vmul.f32	s0, s0, s0
9001210e:	eea7 0aa7 	vfma.f32	s0, s15, s15
90012112:	f017 f9d5 	bl	900294c0 <sqrtf>
90012116:	eeb5 0a40 	vcmp.f32	s0, #0.0
9001211a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001211e:	d12e      	bne.n	9001217e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
90012120:	ee79 7a6a 	vsub.f32	s15, s18, s21
90012124:	ee39 7acb 	vsub.f32	s14, s19, s22
90012128:	eeb0 8a6a 	vmov.f32	s16, s21
9001212c:	eef0 8a4b 	vmov.f32	s17, s22
90012130:	eea7 8a8a 	vfma.f32	s16, s15, s20
90012134:	eee7 8a0a 	vfma.f32	s17, s14, s20
90012138:	eea7 8a0a 	vfma.f32	s16, s14, s20
9001213c:	eee7 8aca 	vfms.f32	s17, s15, s20
90012140:	2d02      	cmp	r5, #2
90012142:	dc2f      	bgt.n	900121a4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
90012144:	3501      	adds	r5, #1
90012146:	eef0 1a4b 	vmov.f32	s3, s22
9001214a:	eeb0 1a6a 	vmov.f32	s2, s21
9001214e:	4620      	mov	r0, r4
90012150:	4629      	mov	r1, r5
90012152:	eef0 2a68 	vmov.f32	s5, s17
90012156:	eeb0 2a48 	vmov.f32	s4, s16
9001215a:	eef0 0a4c 	vmov.f32	s1, s24
9001215e:	eeb0 0a6b 	vmov.f32	s0, s23
90012162:	f7ff ffb3 	bl	900120cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90012166:	eef0 0a68 	vmov.f32	s1, s17
9001216a:	eeb0 0a48 	vmov.f32	s0, s16
9001216e:	4620      	mov	r0, r4
90012170:	f7ff ff55 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012174:	eeb0 ba68 	vmov.f32	s22, s17
90012178:	eef0 aa48 	vmov.f32	s21, s16
9001217c:	e7b9      	b.n	900120f2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
9001217e:	ee38 8a6b 	vsub.f32	s16, s16, s23
90012182:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90012186:	ee78 8acc 	vsub.f32	s17, s17, s24
9001218a:	ee28 7a27 	vmul.f32	s14, s16, s15
9001218e:	ee68 7aa7 	vmul.f32	s15, s17, s15
90012192:	ee87 8a00 	vdiv.f32	s16, s14, s0
90012196:	eec7 8a80 	vdiv.f32	s17, s15, s0
9001219a:	ee3b 8a88 	vadd.f32	s16, s23, s16
9001219e:	ee7c 8a28 	vadd.f32	s17, s24, s17
900121a2:	e7cd      	b.n	90012140 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
900121a4:	eef0 0a68 	vmov.f32	s1, s17
900121a8:	4620      	mov	r0, r4
900121aa:	eeb0 0a48 	vmov.f32	s0, s16
900121ae:	f7ff ff36 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900121b2:	ecbd 8b0a 	vpop	{d8-d12}
900121b6:	bd38      	pop	{r3, r4, r5, pc}

900121b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
900121b8:	b510      	push	{r4, lr}
900121ba:	ed2d 8b0a 	vpush	{d8-d12}
900121be:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
900121c2:	4604      	mov	r4, r0
900121c4:	eeb0 ca40 	vmov.f32	s24, s0
900121c8:	2b02      	cmp	r3, #2
900121ca:	eeb0 9a60 	vmov.f32	s18, s1
900121ce:	eef0 9a41 	vmov.f32	s19, s2
900121d2:	eef0 8a61 	vmov.f32	s17, s3
900121d6:	eeb0 ba42 	vmov.f32	s22, s4
900121da:	eef0 ba62 	vmov.f32	s23, s5
900121de:	eeb0 aa43 	vmov.f32	s20, s6
900121e2:	eef0 aa63 	vmov.f32	s21, s7
900121e6:	eeb0 8a44 	vmov.f32	s16, s8
900121ea:	eef0 ca64 	vmov.f32	s25, s9
900121ee:	d12c      	bne.n	9001224a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
900121f0:	eef0 0a62 	vmov.f32	s1, s5
900121f4:	eeb0 0a42 	vmov.f32	s0, s4
900121f8:	f7ff ff11 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900121fc:	ee79 9acb 	vsub.f32	s19, s19, s22
90012200:	ee7a caec 	vsub.f32	s25, s21, s25
90012204:	ee78 8aeb 	vsub.f32	s17, s17, s23
90012208:	ee3a 8a48 	vsub.f32	s16, s20, s16
9001220c:	ee69 9aac 	vmul.f32	s19, s19, s25
90012210:	ee28 8a88 	vmul.f32	s16, s17, s16
90012214:	eef4 9ac8 	vcmpe.f32	s19, s16
90012218:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001221c:	db0f      	blt.n	9001223e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
9001221e:	2101      	movs	r1, #1
90012220:	eef0 2a6a 	vmov.f32	s5, s21
90012224:	eeb0 2a4a 	vmov.f32	s4, s20
90012228:	4620      	mov	r0, r4
9001222a:	eef0 1a6b 	vmov.f32	s3, s23
9001222e:	eeb0 1a4b 	vmov.f32	s2, s22
90012232:	eef0 0a49 	vmov.f32	s1, s18
90012236:	eeb0 0a4c 	vmov.f32	s0, s24
9001223a:	f7ff ff47 	bl	900120cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
9001223e:	eef0 0a6a 	vmov.f32	s1, s21
90012242:	4620      	mov	r0, r4
90012244:	eeb0 0a4a 	vmov.f32	s0, s20
90012248:	e035      	b.n	900122b6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
9001224a:	2b01      	cmp	r3, #1
9001224c:	d138      	bne.n	900122c0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
9001224e:	ee31 4ae2 	vsub.f32	s8, s3, s5
90012252:	ee33 6a48 	vsub.f32	s12, s6, s16
90012256:	ee71 7a42 	vsub.f32	s15, s2, s4
9001225a:	ee73 6ae4 	vsub.f32	s13, s7, s9
9001225e:	ee26 7a44 	vnmul.f32	s14, s12, s8
90012262:	eea7 7aa6 	vfma.f32	s14, s15, s13
90012266:	eeb5 7a40 	vcmp.f32	s14, #0.0
9001226a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001226e:	d027      	beq.n	900122c0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90012270:	ee28 8a63 	vnmul.f32	s16, s16, s7
90012274:	ee61 8ac2 	vnmul.f32	s17, s3, s4
90012278:	eea4 8a83 	vfma.f32	s16, s9, s6
9001227c:	eee1 8a22 	vfma.f32	s17, s2, s5
90012280:	ee68 7a67 	vnmul.f32	s15, s16, s15
90012284:	ee28 8a44 	vnmul.f32	s16, s16, s8
90012288:	eee6 7a28 	vfma.f32	s15, s12, s17
9001228c:	eea6 8aa8 	vfma.f32	s16, s13, s17
90012290:	ee87 0a87 	vdiv.f32	s0, s15, s14
90012294:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
90012298:	eec8 0a07 	vdiv.f32	s1, s16, s14
9001229c:	ee3c ca40 	vsub.f32	s24, s24, s0
900122a0:	ee39 9a60 	vsub.f32	s18, s18, s1
900122a4:	ee29 9a09 	vmul.f32	s18, s18, s18
900122a8:	eeac 9a0c 	vfma.f32	s18, s24, s24
900122ac:	eef4 7ac9 	vcmpe.f32	s15, s18
900122b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900122b4:	db04      	blt.n	900122c0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
900122b6:	f7ff feb2 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900122ba:	ecbd 8b0a 	vpop	{d8-d12}
900122be:	bd10      	pop	{r4, pc}
900122c0:	eef0 0a6b 	vmov.f32	s1, s23
900122c4:	4620      	mov	r0, r4
900122c6:	eeb0 0a4b 	vmov.f32	s0, s22
900122ca:	f7ff fea8 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900122ce:	e7b6      	b.n	9001223e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

900122d0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
900122d0:	b510      	push	{r4, lr}
900122d2:	ed2d 8b0c 	vpush	{d8-d13}
900122d6:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
900122da:	4604      	mov	r4, r0
900122dc:	eeb0 9a40 	vmov.f32	s18, s0
900122e0:	eef0 9a60 	vmov.f32	s19, s1
900122e4:	eef0 aa41 	vmov.f32	s21, s2
900122e8:	eeb0 ba61 	vmov.f32	s22, s3
900122ec:	b933      	cbnz	r3, 900122fc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
900122ee:	f7ff fe96 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900122f2:	eef0 0a4b 	vmov.f32	s1, s22
900122f6:	eeb0 0a6a 	vmov.f32	s0, s21
900122fa:	e015      	b.n	90012328 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
900122fc:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90012300:	2b02      	cmp	r3, #2
90012302:	ee71 8a40 	vsub.f32	s17, s2, s0
90012306:	ee31 8ae0 	vsub.f32	s16, s3, s1
9001230a:	ee68 8aa7 	vmul.f32	s17, s17, s15
9001230e:	ee28 8a27 	vmul.f32	s16, s16, s15
90012312:	d10f      	bne.n	90012334 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
90012314:	ee70 0ae8 	vsub.f32	s1, s1, s17
90012318:	ee30 0a08 	vadd.f32	s0, s0, s16
9001231c:	f7ff fe7f 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012320:	ee7b 0a68 	vsub.f32	s1, s22, s17
90012324:	ee3a 0a88 	vadd.f32	s0, s21, s16
90012328:	4620      	mov	r0, r4
9001232a:	f7ff fe78 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001232e:	ecbd 8b0c 	vpop	{d8-d13}
90012332:	bd10      	pop	{r4, pc}
90012334:	f7ff fe73 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012338:	eef0 0a69 	vmov.f32	s1, s19
9001233c:	eeb0 0a49 	vmov.f32	s0, s18
90012340:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 90012470 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
90012344:	eeb1 aa68 	vneg.f32	s20, s17
90012348:	eddf ba4a 	vldr	s23, [pc, #296]	@ 90012474 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
9001234c:	eee8 0a27 	vfma.f32	s1, s16, s15
90012350:	4620      	mov	r0, r4
90012352:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012356:	ed9f ca48 	vldr	s24, [pc, #288]	@ 90012478 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
9001235a:	eddf ca48 	vldr	s25, [pc, #288]	@ 9001247c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
9001235e:	ed9f da48 	vldr	s26, [pc, #288]	@ 90012480 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
90012362:	eeea 0a2b 	vfma.f32	s1, s20, s23
90012366:	eea8 0a2b 	vfma.f32	s0, s16, s23
9001236a:	f7ff fe58 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001236e:	eef0 0a69 	vmov.f32	s1, s19
90012372:	eeb0 0a49 	vmov.f32	s0, s18
90012376:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90012484 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
9001237a:	4620      	mov	r0, r4
9001237c:	eee8 0a27 	vfma.f32	s1, s16, s15
90012380:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012384:	eeea 0a0c 	vfma.f32	s1, s20, s24
90012388:	eea8 0a0c 	vfma.f32	s0, s16, s24
9001238c:	f7ff fe47 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012390:	eef0 0a69 	vmov.f32	s1, s19
90012394:	eeb0 0a49 	vmov.f32	s0, s18
90012398:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90012488 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
9001239c:	4620      	mov	r0, r4
9001239e:	eee8 0a27 	vfma.f32	s1, s16, s15
900123a2:	eea8 0aa7 	vfma.f32	s0, s17, s15
900123a6:	eeea 0a2c 	vfma.f32	s1, s20, s25
900123aa:	eea8 0a2c 	vfma.f32	s0, s16, s25
900123ae:	f7ff fe36 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900123b2:	eef0 0a69 	vmov.f32	s1, s19
900123b6:	eeb0 0a49 	vmov.f32	s0, s18
900123ba:	eddf 7a34 	vldr	s15, [pc, #208]	@ 9001248c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
900123be:	4620      	mov	r0, r4
900123c0:	eee8 0a27 	vfma.f32	s1, s16, s15
900123c4:	eea8 0aa7 	vfma.f32	s0, s17, s15
900123c8:	eeea 0a0d 	vfma.f32	s1, s20, s26
900123cc:	eea8 0a0d 	vfma.f32	s0, s16, s26
900123d0:	f7ff fe25 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900123d4:	ee79 0a88 	vadd.f32	s1, s19, s16
900123d8:	ee39 0a28 	vadd.f32	s0, s18, s17
900123dc:	4620      	mov	r0, r4
900123de:	ee70 0ae8 	vsub.f32	s1, s1, s17
900123e2:	ee30 0a08 	vadd.f32	s0, s0, s16
900123e6:	f7ff fe1a 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900123ea:	eef0 0a69 	vmov.f32	s1, s19
900123ee:	eeb0 0a49 	vmov.f32	s0, s18
900123f2:	eddf 7a27 	vldr	s15, [pc, #156]	@ 90012490 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
900123f6:	4620      	mov	r0, r4
900123f8:	eee8 0a27 	vfma.f32	s1, s16, s15
900123fc:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012400:	eeea 0a0d 	vfma.f32	s1, s20, s26
90012404:	eea8 0a0d 	vfma.f32	s0, s16, s26
90012408:	f7ff fe09 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001240c:	eef0 0a69 	vmov.f32	s1, s19
90012410:	eeb0 0a49 	vmov.f32	s0, s18
90012414:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90012494 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
90012418:	4620      	mov	r0, r4
9001241a:	eee8 0a27 	vfma.f32	s1, s16, s15
9001241e:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012422:	eeea 0a2c 	vfma.f32	s1, s20, s25
90012426:	eea8 0a2c 	vfma.f32	s0, s16, s25
9001242a:	f7ff fdf8 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001242e:	eef0 0a69 	vmov.f32	s1, s19
90012432:	eeb0 0a49 	vmov.f32	s0, s18
90012436:	eddf 7a18 	vldr	s15, [pc, #96]	@ 90012498 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
9001243a:	4620      	mov	r0, r4
9001243c:	eee8 0a27 	vfma.f32	s1, s16, s15
90012440:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012444:	eeea 0a0c 	vfma.f32	s1, s20, s24
90012448:	eea8 0a0c 	vfma.f32	s0, s16, s24
9001244c:	f7ff fde7 	bl	9001201e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012450:	eef0 0a69 	vmov.f32	s1, s19
90012454:	eeb0 0a49 	vmov.f32	s0, s18
90012458:	eddf 7a10 	vldr	s15, [pc, #64]	@ 9001249c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
9001245c:	4620      	mov	r0, r4
9001245e:	eee8 0a27 	vfma.f32	s1, s16, s15
90012462:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012466:	eeea 0a2b 	vfma.f32	s1, s20, s23
9001246a:	eea8 0a2b 	vfma.f32	s0, s16, s23
9001246e:	e73e      	b.n	900122ee <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
90012470:	3d23d70a 	.word	0x3d23d70a
90012474:	3e8f5c29 	.word	0x3e8f5c29
90012478:	3f19999a 	.word	0x3f19999a
9001247c:	3f4ccccd 	.word	0x3f4ccccd
90012480:	3f75c28f 	.word	0x3f75c28f
90012484:	3e4ccccd 	.word	0x3e4ccccd
90012488:	3ecccccd 	.word	0x3ecccccd
9001248c:	3f3851ec 	.word	0x3f3851ec
90012490:	3fa3d70a 	.word	0x3fa3d70a
90012494:	3fcccccd 	.word	0x3fcccccd
90012498:	3fe66666 	.word	0x3fe66666
9001249c:	3ffae148 	.word	0x3ffae148

900124a0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
900124a0:	b570      	push	{r4, r5, r6, lr}
900124a2:	ed2d 8b06 	vpush	{d8-d10}
900124a6:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
900124aa:	eef0 aa40 	vmov.f32	s21, s0
900124ae:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
900124b2:	4604      	mov	r4, r0
900124b4:	ee30 8ac8 	vsub.f32	s16, s1, s16
900124b8:	ee30 9a49 	vsub.f32	s18, s0, s18
900124bc:	eeb0 aa60 	vmov.f32	s20, s1
900124c0:	ee28 0a08 	vmul.f32	s0, s16, s16
900124c4:	eea9 0a09 	vfma.f32	s0, s18, s18
900124c8:	f016 fffa 	bl	900294c0 <sqrtf>
900124cc:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
900124d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900124d4:	dd36      	ble.n	90012544 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
900124d6:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
900124da:	2600      	movs	r6, #0
900124dc:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
900124e0:	eec0 6a27 	vdiv.f32	s13, s0, s15
900124e4:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
900124e8:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
900124ec:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
900124f0:	eec8 8a26 	vdiv.f32	s17, s16, s13
900124f4:	ee89 8a26 	vdiv.f32	s16, s18, s13
900124f8:	ee70 9a28 	vadd.f32	s19, s0, s17
900124fc:	ee78 8aaa 	vadd.f32	s17, s17, s21
90012500:	ee30 9ac8 	vsub.f32	s18, s1, s16
90012504:	ee3a 8a48 	vsub.f32	s16, s20, s16
90012508:	b1fd      	cbz	r5, 9001254a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
9001250a:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
9001250e:	eef0 0a49 	vmov.f32	s1, s18
90012512:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
90012516:	eeb0 0a69 	vmov.f32	s0, s19
9001251a:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
9001251e:	4620      	mov	r0, r4
90012520:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
90012524:	f7ff fd64 	bl	90011ff0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90012528:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
9001252c:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
90012530:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
90012534:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
90012538:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
9001253c:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
90012540:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
90012544:	ecbd 8b06 	vpop	{d8-d10}
90012548:	bd70      	pop	{r4, r5, r6, pc}
9001254a:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
9001254e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
90012552:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
90012556:	b16b      	cbz	r3, 90012574 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
90012558:	eef0 1a49 	vmov.f32	s3, s18
9001255c:	4620      	mov	r0, r4
9001255e:	eeb0 1a69 	vmov.f32	s2, s19
90012562:	eef0 0a62 	vmov.f32	s1, s5
90012566:	eeb0 0a42 	vmov.f32	s0, s4
9001256a:	f7ff feb1 	bl	900122d0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
9001256e:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
90012572:	e7db      	b.n	9001252c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
90012574:	eef0 4a48 	vmov.f32	s9, s16
90012578:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
9001257c:	eeb0 4a68 	vmov.f32	s8, s17
90012580:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90012584:	eef0 3a49 	vmov.f32	s7, s18
90012588:	4620      	mov	r0, r4
9001258a:	eeb0 3a69 	vmov.f32	s6, s19
9001258e:	f7ff fe13 	bl	900121b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90012592:	e7cb      	b.n	9001252c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90012594 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90012594:	ee07 2a90 	vmov	s15, r2
90012598:	ee07 1a10 	vmov	s14, r1
9001259c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
900125a0:	eddf 7a04 	vldr	s15, [pc, #16]	@ 900125b4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
900125a4:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
900125a8:	ee60 0aa7 	vmul.f32	s1, s1, s15
900125ac:	ee20 0a27 	vmul.f32	s0, s0, s15
900125b0:	f7ff bf76 	b.w	900124a0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
900125b4:	3d000000 	.word	0x3d000000

900125b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
900125b8:	b538      	push	{r3, r4, r5, lr}
900125ba:	ed2d 8b02 	vpush	{d8}
900125be:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
900125c2:	4604      	mov	r4, r0
900125c4:	b31d      	cbz	r5, 9001260e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
900125c6:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
900125ca:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
900125ce:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
900125d2:	ee78 8a67 	vsub.f32	s17, s16, s15
900125d6:	ee38 8a27 	vadd.f32	s16, s16, s15
900125da:	eef0 0a68 	vmov.f32	s1, s17
900125de:	f7ff fd07 	bl	90011ff0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
900125e2:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
900125e6:	eef0 1a48 	vmov.f32	s3, s16
900125ea:	4620      	mov	r0, r4
900125ec:	eeb0 0a41 	vmov.f32	s0, s2
900125f0:	eef0 0a68 	vmov.f32	s1, s17
900125f4:	f7ff fe6c 	bl	900122d0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
900125f8:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
900125fc:	eef0 1a68 	vmov.f32	s3, s17
90012600:	4620      	mov	r0, r4
90012602:	eef0 0a48 	vmov.f32	s1, s16
90012606:	eeb0 0a41 	vmov.f32	s0, s2
9001260a:	f7ff fe61 	bl	900122d0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
9001260e:	4628      	mov	r0, r5
90012610:	ecbd 8b02 	vpop	{d8}
90012614:	bd38      	pop	{r3, r4, r5, pc}

90012616 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
90012616:	b510      	push	{r4, lr}
90012618:	ed2d 8b02 	vpush	{d8}
9001261c:	4604      	mov	r4, r0
9001261e:	eeb0 8a40 	vmov.f32	s16, s0
90012622:	eef0 8a60 	vmov.f32	s17, s1
90012626:	f7ff ffc7 	bl	900125b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001262a:	b9d0      	cbnz	r0, 90012662 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
9001262c:	4620      	mov	r0, r4
9001262e:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
90012632:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
90012636:	eef0 0a68 	vmov.f32	s1, s17
9001263a:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
9001263e:	eeb0 0a48 	vmov.f32	s0, s16
90012642:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
90012646:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
9001264a:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
9001264e:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90012652:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90012656:	f7ff fdaf 	bl	900121b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
9001265a:	2001      	movs	r0, #1
9001265c:	ecbd 8b02 	vpop	{d8}
90012660:	bd10      	pop	{r4, pc}
90012662:	2000      	movs	r0, #0
90012664:	e7fa      	b.n	9001265c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

90012666 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
90012666:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
9001266a:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
9001266e:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
90012672:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
90012676:	f7ff be2b 	b.w	900122d0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

9001267c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
9001267c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012680:	b089      	sub	sp, #36	@ 0x24
90012682:	461c      	mov	r4, r3
90012684:	4682      	mov	sl, r0
90012686:	4615      	mov	r5, r2
90012688:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
9001268c:	f10d 0820 	add.w	r8, sp, #32
90012690:	9e15      	ldr	r6, [sp, #84]	@ 0x54
90012692:	9304      	str	r3, [sp, #16]
90012694:	2300      	movs	r3, #0
90012696:	9105      	str	r1, [sp, #20]
90012698:	9306      	str	r3, [sp, #24]
9001269a:	f848 3d04 	str.w	r3, [r8, #-4]!
9001269e:	9b04      	ldr	r3, [sp, #16]
900126a0:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
900126a4:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
900126a8:	9b05      	ldr	r3, [sp, #20]
900126aa:	429d      	cmp	r5, r3
900126ac:	d96d      	bls.n	9001278a <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
900126ae:	3d01      	subs	r5, #1
900126b0:	f819 3005 	ldrb.w	r3, [r9, r5]
900126b4:	2b06      	cmp	r3, #6
900126b6:	d8f7      	bhi.n	900126a8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
900126b8:	a201      	add	r2, pc, #4	@ (adr r2, 900126c0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
900126ba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
900126be:	bf00      	nop
900126c0:	900126df 	.word	0x900126df
900126c4:	900126a9 	.word	0x900126a9
900126c8:	900126dd 	.word	0x900126dd
900126cc:	90012701 	.word	0x90012701
900126d0:	90012701 	.word	0x90012701
900126d4:	90012705 	.word	0x90012705
900126d8:	90012745 	.word	0x90012745
900126dc:	3c02      	subs	r4, #2
900126de:	4650      	mov	r0, sl
900126e0:	9400      	str	r4, [sp, #0]
900126e2:	462b      	mov	r3, r5
900126e4:	4642      	mov	r2, r8
900126e6:	a906      	add	r1, sp, #24
900126e8:	e9cd 9701 	strd	r9, r7, [sp, #4]
900126ec:	f7ff fcae 	bl	9001204c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900126f0:	eddd 0a07 	vldr	s1, [sp, #28]
900126f4:	ed9d 0a06 	vldr	s0, [sp, #24]
900126f8:	4630      	mov	r0, r6
900126fa:	f7ff fed1 	bl	900124a0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
900126fe:	e7d3      	b.n	900126a8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90012700:	3c01      	subs	r4, #1
90012702:	e7ec      	b.n	900126de <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
90012704:	f1a4 0b04 	sub.w	fp, r4, #4
90012708:	3c02      	subs	r4, #2
9001270a:	4650      	mov	r0, sl
9001270c:	462b      	mov	r3, r5
9001270e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90012712:	f8cd b000 	str.w	fp, [sp]
90012716:	4642      	mov	r2, r8
90012718:	a906      	add	r1, sp, #24
9001271a:	e9cd 9701 	strd	r9, r7, [sp, #4]
9001271e:	f7ff fc95 	bl	9001204c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90012722:	eddd 2a07 	vldr	s5, [sp, #28]
90012726:	ed9d 2a06 	vldr	s4, [sp, #24]
9001272a:	4630      	mov	r0, r6
9001272c:	ed54 1a01 	vldr	s3, [r4, #-4]
90012730:	ed14 1a02 	vldr	s2, [r4, #-8]
90012734:	edd4 0a01 	vldr	s1, [r4, #4]
90012738:	ed94 0a00 	vldr	s0, [r4]
9001273c:	f7ff fc1a 	bl	90011f74 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90012740:	465c      	mov	r4, fp
90012742:	e7b1      	b.n	900126a8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90012744:	f1a4 0b06 	sub.w	fp, r4, #6
90012748:	3c02      	subs	r4, #2
9001274a:	4650      	mov	r0, sl
9001274c:	462b      	mov	r3, r5
9001274e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90012752:	f8cd b000 	str.w	fp, [sp]
90012756:	4642      	mov	r2, r8
90012758:	a906      	add	r1, sp, #24
9001275a:	e9cd 9701 	strd	r9, r7, [sp, #4]
9001275e:	f7ff fc75 	bl	9001204c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90012762:	eddd 3a07 	vldr	s7, [sp, #28]
90012766:	ed9d 3a06 	vldr	s6, [sp, #24]
9001276a:	4630      	mov	r0, r6
9001276c:	ed54 2a03 	vldr	s5, [r4, #-12]
90012770:	ed14 2a04 	vldr	s4, [r4, #-16]
90012774:	ed54 1a01 	vldr	s3, [r4, #-4]
90012778:	ed14 1a02 	vldr	s2, [r4, #-8]
9001277c:	edd4 0a01 	vldr	s1, [r4, #4]
90012780:	ed94 0a00 	vldr	s0, [r4]
90012784:	f7ff fc15 	bl	90011fb2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90012788:	e7da      	b.n	90012740 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
9001278a:	9b04      	ldr	r3, [sp, #16]
9001278c:	b113      	cbz	r3, 90012794 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
9001278e:	4630      	mov	r0, r6
90012790:	f7ff ff69 	bl	90012666 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
90012794:	b009      	add	sp, #36	@ 0x24
90012796:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001279a:	bf00      	nop

9001279c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
9001279c:	eef0 7a60 	vmov.f32	s15, s1
900127a0:	6803      	ldr	r3, [r0, #0]
900127a2:	689b      	ldr	r3, [r3, #8]
900127a4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900127a8:	ee17 2a90 	vmov	r2, s15
900127ac:	eef0 7a40 	vmov.f32	s15, s0
900127b0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900127b4:	ee17 1a90 	vmov	r1, s15
900127b8:	4718      	bx	r3
	...

900127bc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
900127bc:	4b04      	ldr	r3, [pc, #16]	@ (900127d0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
900127be:	b510      	push	{r4, lr}
900127c0:	4604      	mov	r4, r0
900127c2:	f840 3b14 	str.w	r3, [r0], #20
900127c6:	f001 fe6b 	bl	900144a0 <_ZN8touchgfx7OutlineD1Ev>
900127ca:	4620      	mov	r0, r4
900127cc:	bd10      	pop	{r4, pc}
900127ce:	bf00      	nop
900127d0:	9002e080 	.word	0x9002e080

900127d4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
900127d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900127d8:	ed2d 8b04 	vpush	{d8-d9}
900127dc:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
900127e0:	b0b5      	sub	sp, #212	@ 0xd4
900127e2:	4605      	mov	r5, r0
900127e4:	468b      	mov	fp, r1
900127e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900127ea:	9206      	str	r2, [sp, #24]
900127ec:	461e      	mov	r6, r3
900127ee:	2400      	movs	r4, #0
900127f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900127f4:	f240 814f 	bls.w	90012a96 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
900127f8:	23ff      	movs	r3, #255	@ 0xff
900127fa:	1d02      	adds	r2, r0, #4
900127fc:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 90012a9c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
90012800:	f04f 0800 	mov.w	r8, #0
90012804:	9300      	str	r3, [sp, #0]
90012806:	af08      	add	r7, sp, #32
90012808:	6981      	ldr	r1, [r0, #24]
9001280a:	a808      	add	r0, sp, #32
9001280c:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
9001280e:	eef0 9a49 	vmov.f32	s19, s18
90012812:	f016 f9ab 	bl	90028b6c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90012816:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
9001281a:	4ba1      	ldr	r3, [pc, #644]	@ (90012aa0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
9001281c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
90012820:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90012824:	2201      	movs	r2, #1
90012826:	9308      	str	r3, [sp, #32]
90012828:	f105 0334 	add.w	r3, r5, #52	@ 0x34
9001282c:	edd5 6a08 	vldr	s13, [r5, #32]
90012830:	eeb0 8a49 	vmov.f32	s16, s18
90012834:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012838:	9325      	str	r3, [sp, #148]	@ 0x94
9001283a:	f04f 0300 	mov.w	r3, #0
9001283e:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
90012842:	7f6a      	ldrb	r2, [r5, #29]
90012844:	eef0 8a49 	vmov.f32	s17, s18
90012848:	bf48      	it	mi
9001284a:	eef1 7a67 	vnegmi.f32	s15, s15
9001284e:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
90012852:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
90012856:	46c1      	mov	r9, r8
90012858:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
9001285c:	f04f 0a01 	mov.w	sl, #1
90012860:	ee67 7a87 	vmul.f32	s15, s15, s14
90012864:	7fab      	ldrb	r3, [r5, #30]
90012866:	942a      	str	r4, [sp, #168]	@ 0xa8
90012868:	435a      	muls	r2, r3
9001286a:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
9001286e:	ee26 7aa7 	vmul.f32	s14, s13, s15
90012872:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
90012876:	1c53      	adds	r3, r2, #1
90012878:	942b      	str	r4, [sp, #172]	@ 0xac
9001287a:	942c      	str	r4, [sp, #176]	@ 0xb0
9001287c:	ee27 7a26 	vmul.f32	s14, s14, s13
90012880:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90012884:	942d      	str	r4, [sp, #180]	@ 0xb4
90012886:	942e      	str	r4, [sp, #184]	@ 0xb8
90012888:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001288c:	ee67 7a27 	vmul.f32	s15, s14, s15
90012890:	942f      	str	r4, [sp, #188]	@ 0xbc
90012892:	9430      	str	r4, [sp, #192]	@ 0xc0
90012894:	9431      	str	r4, [sp, #196]	@ 0xc4
90012896:	9432      	str	r4, [sp, #200]	@ 0xc8
90012898:	9433      	str	r4, [sp, #204]	@ 0xcc
9001289a:	4644      	mov	r4, r8
9001289c:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
900128a0:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
900128a4:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
900128a8:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
900128ac:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
900128b0:	9b06      	ldr	r3, [sp, #24]
900128b2:	454b      	cmp	r3, r9
900128b4:	f000 80cc 	beq.w	90012a50 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
900128b8:	f109 0301 	add.w	r3, r9, #1
900128bc:	9305      	str	r3, [sp, #20]
900128be:	f81b 3009 	ldrb.w	r3, [fp, r9]
900128c2:	2b06      	cmp	r3, #6
900128c4:	d839      	bhi.n	9001293a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900128c6:	e8df f003 	tbb	[pc, r3]
900128ca:	3b04      	.short	0x3b04
900128cc:	817c6f60 	.word	0x817c6f60
900128d0:	a0          	.byte	0xa0
900128d1:	00          	.byte	0x00
900128d2:	45c1      	cmp	r9, r8
900128d4:	d92b      	bls.n	9001292e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
900128d6:	eef0 0a49 	vmov.f32	s1, s18
900128da:	4638      	mov	r0, r7
900128dc:	eeb0 0a69 	vmov.f32	s0, s19
900128e0:	f7ff fdde 	bl	900124a0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
900128e4:	4638      	mov	r0, r7
900128e6:	f7ff fe67 	bl	900125b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900128ea:	4681      	mov	r9, r0
900128ec:	b9f8      	cbnz	r0, 9001292e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
900128ee:	eef0 0a49 	vmov.f32	s1, s18
900128f2:	4638      	mov	r0, r7
900128f4:	eeb0 0a69 	vmov.f32	s0, s19
900128f8:	f7ff fe8d 	bl	90012616 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
900128fc:	4628      	mov	r0, r5
900128fe:	4623      	mov	r3, r4
90012900:	9a05      	ldr	r2, [sp, #20]
90012902:	4641      	mov	r1, r8
90012904:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
90012908:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
9001290c:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90012910:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90012914:	e9cd 9702 	strd	r9, r7, [sp, #8]
90012918:	e9cd b600 	strd	fp, r6, [sp]
9001291c:	f7ff feae 	bl	9001267c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90012920:	eef0 0a49 	vmov.f32	s1, s18
90012924:	eeb0 0a69 	vmov.f32	s0, s19
90012928:	4638      	mov	r0, r7
9001292a:	f7ff fe74 	bl	90012616 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
9001292e:	eeb0 8a49 	vmov.f32	s16, s18
90012932:	f8dd 8014 	ldr.w	r8, [sp, #20]
90012936:	eef0 8a69 	vmov.f32	s17, s19
9001293a:	f8dd 9014 	ldr.w	r9, [sp, #20]
9001293e:	e7b7      	b.n	900128b0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
90012940:	45c1      	cmp	r9, r8
90012942:	d90d      	bls.n	90012960 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90012944:	4638      	mov	r0, r7
90012946:	f7ff fe37 	bl	900125b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001294a:	b948      	cbnz	r0, 90012960 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
9001294c:	4623      	mov	r3, r4
9001294e:	464a      	mov	r2, r9
90012950:	4641      	mov	r1, r8
90012952:	4628      	mov	r0, r5
90012954:	e9cd a702 	strd	sl, r7, [sp, #8]
90012958:	e9cd b600 	strd	fp, r6, [sp]
9001295c:	f7ff fe8e 	bl	9001267c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90012960:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90012964:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90012968:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
9001296c:	3402      	adds	r4, #2
9001296e:	edd3 8a00 	vldr	s17, [r3]
90012972:	46c8      	mov	r8, r9
90012974:	ed93 8a01 	vldr	s16, [r3, #4]
90012978:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
9001297c:	eef0 9a68 	vmov.f32	s19, s17
90012980:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
90012984:	eeb0 9a48 	vmov.f32	s18, s16
90012988:	e7d7      	b.n	9001293a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001298a:	eb06 0384 	add.w	r3, r6, r4, lsl #2
9001298e:	4638      	mov	r0, r7
90012990:	3402      	adds	r4, #2
90012992:	edd3 8a00 	vldr	s17, [r3]
90012996:	ed93 8a01 	vldr	s16, [r3, #4]
9001299a:	eeb0 0a68 	vmov.f32	s0, s17
9001299e:	eef0 0a48 	vmov.f32	s1, s16
900129a2:	f7ff fd7d 	bl	900124a0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
900129a6:	e7c8      	b.n	9001293a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900129a8:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900129ac:	edd3 8a00 	vldr	s17, [r3]
900129b0:	eef0 0a48 	vmov.f32	s1, s16
900129b4:	4638      	mov	r0, r7
900129b6:	eeb0 0a68 	vmov.f32	s0, s17
900129ba:	3401      	adds	r4, #1
900129bc:	f7ff fd70 	bl	900124a0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
900129c0:	e7bb      	b.n	9001293a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900129c2:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900129c6:	ed93 8a00 	vldr	s16, [r3]
900129ca:	e7f1      	b.n	900129b0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
900129cc:	00a3      	lsls	r3, r4, #2
900129ce:	eef0 0a48 	vmov.f32	s1, s16
900129d2:	eeb0 0a68 	vmov.f32	s0, s17
900129d6:	4638      	mov	r0, r7
900129d8:	f103 0208 	add.w	r2, r3, #8
900129dc:	f103 090c 	add.w	r9, r3, #12
900129e0:	4433      	add	r3, r6
900129e2:	3404      	adds	r4, #4
900129e4:	4432      	add	r2, r6
900129e6:	44b1      	add	r9, r6
900129e8:	edd3 1a01 	vldr	s3, [r3, #4]
900129ec:	ed92 2a00 	vldr	s4, [r2]
900129f0:	edd9 2a00 	vldr	s5, [r9]
900129f4:	ed93 1a00 	vldr	s2, [r3]
900129f8:	9207      	str	r2, [sp, #28]
900129fa:	f7ff fabb 	bl	90011f74 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900129fe:	9a07      	ldr	r2, [sp, #28]
90012a00:	ed99 8a00 	vldr	s16, [r9]
90012a04:	edd2 8a00 	vldr	s17, [r2]
90012a08:	e797      	b.n	9001293a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012a0a:	00a3      	lsls	r3, r4, #2
90012a0c:	eef0 0a48 	vmov.f32	s1, s16
90012a10:	eeb0 0a68 	vmov.f32	s0, s17
90012a14:	4638      	mov	r0, r7
90012a16:	f103 0210 	add.w	r2, r3, #16
90012a1a:	f103 0914 	add.w	r9, r3, #20
90012a1e:	4433      	add	r3, r6
90012a20:	3406      	adds	r4, #6
90012a22:	4432      	add	r2, r6
90012a24:	44b1      	add	r9, r6
90012a26:	edd3 2a03 	vldr	s5, [r3, #12]
90012a2a:	ed92 3a00 	vldr	s6, [r2]
90012a2e:	edd9 3a00 	vldr	s7, [r9]
90012a32:	ed93 2a02 	vldr	s4, [r3, #8]
90012a36:	edd3 1a01 	vldr	s3, [r3, #4]
90012a3a:	ed93 1a00 	vldr	s2, [r3]
90012a3e:	9207      	str	r2, [sp, #28]
90012a40:	f7ff fab7 	bl	90011fb2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90012a44:	9a07      	ldr	r2, [sp, #28]
90012a46:	ed99 8a00 	vldr	s16, [r9]
90012a4a:	edd2 8a00 	vldr	s17, [r2]
90012a4e:	e774      	b.n	9001293a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012a50:	9b06      	ldr	r3, [sp, #24]
90012a52:	af08      	add	r7, sp, #32
90012a54:	4543      	cmp	r3, r8
90012a56:	d90f      	bls.n	90012a78 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90012a58:	4638      	mov	r0, r7
90012a5a:	f7ff fdad 	bl	900125b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90012a5e:	b958      	cbnz	r0, 90012a78 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90012a60:	2301      	movs	r3, #1
90012a62:	9703      	str	r7, [sp, #12]
90012a64:	f8cd b000 	str.w	fp, [sp]
90012a68:	4641      	mov	r1, r8
90012a6a:	9a06      	ldr	r2, [sp, #24]
90012a6c:	4628      	mov	r0, r5
90012a6e:	e9cd 6301 	strd	r6, r3, [sp, #4]
90012a72:	4623      	mov	r3, r4
90012a74:	f7ff fe02 	bl	9001267c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90012a78:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
90012a7c:	4638      	mov	r0, r7
90012a7e:	f016 f909 	bl	90028c94 <_ZN8touchgfx6Canvas6renderEh>
90012a82:	4604      	mov	r4, r0
90012a84:	4638      	mov	r0, r7
90012a86:	f7ff fe99 	bl	900127bc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
90012a8a:	4620      	mov	r0, r4
90012a8c:	b035      	add	sp, #212	@ 0xd4
90012a8e:	ecbd 8b04 	vpop	{d8-d9}
90012a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012a96:	2401      	movs	r4, #1
90012a98:	e7f7      	b.n	90012a8a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
90012a9a:	bf00      	nop
90012a9c:	00000000 	.word	0x00000000
90012aa0:	9002d854 	.word	0x9002d854

90012aa4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
90012aa4:	b510      	push	{r4, lr}
90012aa6:	4604      	mov	r4, r0
90012aa8:	f7ff fe88 	bl	900127bc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
90012aac:	21b0      	movs	r1, #176	@ 0xb0
90012aae:	4620      	mov	r0, r4
90012ab0:	f016 fcdc 	bl	9002946c <_ZdlPvj>
90012ab4:	4620      	mov	r0, r4
90012ab6:	bd10      	pop	{r4, pc}

90012ab8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
90012ab8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012abc:	4698      	mov	r8, r3
90012abe:	23ff      	movs	r3, #255	@ 0xff
90012ac0:	4607      	mov	r7, r0
90012ac2:	4689      	mov	r9, r1
90012ac4:	4692      	mov	sl, r2
90012ac6:	1d02      	adds	r2, r0, #4
90012ac8:	f107 0534 	add.w	r5, r7, #52	@ 0x34
90012acc:	2400      	movs	r4, #0
90012ace:	44ca      	add	sl, r9
90012ad0:	ed2d 8b06 	vpush	{d8-d10}
90012ad4:	b0aa      	sub	sp, #168	@ 0xa8
90012ad6:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 90012cdc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90012ada:	9300      	str	r3, [sp, #0]
90012adc:	eef0 8a48 	vmov.f32	s17, s16
90012ae0:	6981      	ldr	r1, [r0, #24]
90012ae2:	a80d      	add	r0, sp, #52	@ 0x34
90012ae4:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
90012ae6:	f016 f841 	bl	90028b6c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90012aea:	7f3b      	ldrb	r3, [r7, #28]
90012aec:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 90012cdc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90012af0:	4628      	mov	r0, r5
90012af2:	1e5a      	subs	r2, r3, #1
90012af4:	eeb0 0a60 	vmov.f32	s0, s1
90012af8:	4253      	negs	r3, r2
90012afa:	4153      	adcs	r3, r2
90012afc:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
90012b00:	f005 fc7f 	bl	90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012b04:	eeb0 9a40 	vmov.f32	s18, s0
90012b08:	eef0 9a60 	vmov.f32	s19, s1
90012b0c:	45ca      	cmp	sl, r9
90012b0e:	f000 80cd 	beq.w	90012cac <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
90012b12:	f819 3b01 	ldrb.w	r3, [r9], #1
90012b16:	2b06      	cmp	r3, #6
90012b18:	d8f8      	bhi.n	90012b0c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012b1a:	e8df f003 	tbb	[pc, r3]
90012b1e:	0804      	.short	0x0804
90012b20:	58533f2a 	.word	0x58533f2a
90012b24:	8a          	.byte	0x8a
90012b25:	00          	.byte	0x00
90012b26:	a80d      	add	r0, sp, #52	@ 0x34
90012b28:	f016 f892 	bl	90028c50 <_ZN8touchgfx6Canvas5closeEv>
90012b2c:	e7ee      	b.n	90012b0c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012b2e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012b32:	4628      	mov	r0, r5
90012b34:	ed93 8a01 	vldr	s16, [r3, #4]
90012b38:	edd3 8a00 	vldr	s17, [r3]
90012b3c:	eef0 0a48 	vmov.f32	s1, s16
90012b40:	eeb0 0a68 	vmov.f32	s0, s17
90012b44:	f005 fc5d 	bl	90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012b48:	a80d      	add	r0, sp, #52	@ 0x34
90012b4a:	eef0 7a60 	vmov.f32	s15, s1
90012b4e:	eeb0 9a40 	vmov.f32	s18, s0
90012b52:	eef0 9a60 	vmov.f32	s19, s1
90012b56:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012b5a:	ee17 2a90 	vmov	r2, s15
90012b5e:	eef0 7a40 	vmov.f32	s15, s0
90012b62:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012b66:	ee17 1a90 	vmov	r1, s15
90012b6a:	f016 f94b 	bl	90028e04 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90012b6e:	3402      	adds	r4, #2
90012b70:	e7cc      	b.n	90012b0c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012b72:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012b76:	4628      	mov	r0, r5
90012b78:	edd3 8a00 	vldr	s17, [r3]
90012b7c:	ed93 8a01 	vldr	s16, [r3, #4]
90012b80:	eeb0 0a68 	vmov.f32	s0, s17
90012b84:	eef0 0a48 	vmov.f32	s1, s16
90012b88:	f005 fc3b 	bl	90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012b8c:	a80d      	add	r0, sp, #52	@ 0x34
90012b8e:	eeb0 9a40 	vmov.f32	s18, s0
90012b92:	eef0 9a60 	vmov.f32	s19, s1
90012b96:	f7ff fe01 	bl	9001279c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90012b9a:	e7e8      	b.n	90012b6e <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
90012b9c:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012ba0:	edd3 8a00 	vldr	s17, [r3]
90012ba4:	eef0 0a48 	vmov.f32	s1, s16
90012ba8:	4628      	mov	r0, r5
90012baa:	eeb0 0a68 	vmov.f32	s0, s17
90012bae:	3401      	adds	r4, #1
90012bb0:	f005 fc27 	bl	90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012bb4:	a80d      	add	r0, sp, #52	@ 0x34
90012bb6:	eef0 9a60 	vmov.f32	s19, s1
90012bba:	eeb0 9a40 	vmov.f32	s18, s0
90012bbe:	f7ff fded 	bl	9001279c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90012bc2:	e7a3      	b.n	90012b0c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012bc4:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012bc8:	ed93 8a00 	vldr	s16, [r3]
90012bcc:	e7ea      	b.n	90012ba4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
90012bce:	1ca3      	adds	r3, r4, #2
90012bd0:	4628      	mov	r0, r5
90012bd2:	3404      	adds	r4, #4
90012bd4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
90012bd8:	ed53 0a01 	vldr	s1, [r3, #-4]
90012bdc:	ed13 0a02 	vldr	s0, [r3, #-8]
90012be0:	edd3 8a00 	vldr	s17, [r3]
90012be4:	ed93 8a01 	vldr	s16, [r3, #4]
90012be8:	f005 fc0b 	bl	90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012bec:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90012bf0:	eeb0 0a68 	vmov.f32	s0, s17
90012bf4:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90012bf8:	eef0 0a48 	vmov.f32	s1, s16
90012bfc:	4628      	mov	r0, r5
90012bfe:	f005 fc00 	bl	90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012c02:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
90012c06:	eef0 2a60 	vmov.f32	s5, s1
90012c0a:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
90012c0e:	eeb0 2a40 	vmov.f32	s4, s0
90012c12:	a80d      	add	r0, sp, #52	@ 0x34
90012c14:	eeb0 aa40 	vmov.f32	s20, s0
90012c18:	eef0 aa60 	vmov.f32	s21, s1
90012c1c:	eeb0 0a49 	vmov.f32	s0, s18
90012c20:	eef0 0a69 	vmov.f32	s1, s19
90012c24:	f7ff f9a6 	bl	90011f74 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90012c28:	eef0 9a6a 	vmov.f32	s19, s21
90012c2c:	eeb0 9a4a 	vmov.f32	s18, s20
90012c30:	e76c      	b.n	90012b0c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012c32:	1d26      	adds	r6, r4, #4
90012c34:	4628      	mov	r0, r5
90012c36:	3406      	adds	r4, #6
90012c38:	eb08 0686 	add.w	r6, r8, r6, lsl #2
90012c3c:	ed56 0a03 	vldr	s1, [r6, #-12]
90012c40:	ed16 0a04 	vldr	s0, [r6, #-16]
90012c44:	edd6 8a00 	vldr	s17, [r6]
90012c48:	ed96 8a01 	vldr	s16, [r6, #4]
90012c4c:	f005 fbd9 	bl	90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012c50:	ed8d 0a07 	vstr	s0, [sp, #28]
90012c54:	4628      	mov	r0, r5
90012c56:	ed16 0a02 	vldr	s0, [r6, #-8]
90012c5a:	edcd 0a08 	vstr	s1, [sp, #32]
90012c5e:	ed56 0a01 	vldr	s1, [r6, #-4]
90012c62:	f005 fbce 	bl	90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012c66:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90012c6a:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90012c6e:	eeb0 0a68 	vmov.f32	s0, s17
90012c72:	eef0 0a48 	vmov.f32	s1, s16
90012c76:	4628      	mov	r0, r5
90012c78:	f005 fbc3 	bl	90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012c7c:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
90012c80:	eeb0 3a40 	vmov.f32	s6, s0
90012c84:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
90012c88:	eef0 3a60 	vmov.f32	s7, s1
90012c8c:	eddd 1a08 	vldr	s3, [sp, #32]
90012c90:	eeb0 aa40 	vmov.f32	s20, s0
90012c94:	ed9d 1a07 	vldr	s2, [sp, #28]
90012c98:	eef0 aa60 	vmov.f32	s21, s1
90012c9c:	a80d      	add	r0, sp, #52	@ 0x34
90012c9e:	eef0 0a69 	vmov.f32	s1, s19
90012ca2:	eeb0 0a49 	vmov.f32	s0, s18
90012ca6:	f7ff f984 	bl	90011fb2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90012caa:	e7bd      	b.n	90012c28 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
90012cac:	7f7b      	ldrb	r3, [r7, #29]
90012cae:	a80d      	add	r0, sp, #52	@ 0x34
90012cb0:	7fb9      	ldrb	r1, [r7, #30]
90012cb2:	4359      	muls	r1, r3
90012cb4:	1c4b      	adds	r3, r1, #1
90012cb6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90012cba:	f3c1 2107 	ubfx	r1, r1, #8, #8
90012cbe:	f015 ffe9 	bl	90028c94 <_ZN8touchgfx6Canvas6renderEh>
90012cc2:	4b07      	ldr	r3, [pc, #28]	@ (90012ce0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
90012cc4:	4604      	mov	r4, r0
90012cc6:	a812      	add	r0, sp, #72	@ 0x48
90012cc8:	930d      	str	r3, [sp, #52]	@ 0x34
90012cca:	f001 fbe9 	bl	900144a0 <_ZN8touchgfx7OutlineD1Ev>
90012cce:	4620      	mov	r0, r4
90012cd0:	b02a      	add	sp, #168	@ 0xa8
90012cd2:	ecbd 8b06 	vpop	{d8-d10}
90012cd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90012cda:	bf00      	nop
90012cdc:	00000000 	.word	0x00000000
90012ce0:	9002e080 	.word	0x9002e080

90012ce4 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
90012ce4:	b410      	push	{r4}
90012ce6:	7f04      	ldrb	r4, [r0, #28]
90012ce8:	b11c      	cbz	r4, 90012cf2 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
90012cea:	f85d 4b04 	ldr.w	r4, [sp], #4
90012cee:	f7ff bee3 	b.w	90012ab8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
90012cf2:	f85d 4b04 	ldr.w	r4, [sp], #4
90012cf6:	f7ff bd6d 	b.w	900127d4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>

90012cfa <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
90012cfa:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90012cfe:	4691      	mov	r9, r2
90012d00:	4602      	mov	r2, r0
90012d02:	4606      	mov	r6, r0
90012d04:	4688      	mov	r8, r1
90012d06:	f852 0f26 	ldr.w	r0, [r2, #38]!
90012d0a:	469a      	mov	sl, r3
90012d0c:	ab02      	add	r3, sp, #8
90012d0e:	af02      	add	r7, sp, #8
90012d10:	6851      	ldr	r1, [r2, #4]
90012d12:	c303      	stmia	r3!, {r0, r1}
90012d14:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90012d18:	2b00      	cmp	r3, #0
90012d1a:	dd2f      	ble.n	90012d7c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
90012d1c:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
90012d20:	2c00      	cmp	r4, #0
90012d22:	dd2b      	ble.n	90012d7c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
90012d24:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90012d28:	441c      	add	r4, r3
90012d2a:	b2a4      	uxth	r4, r4
90012d2c:	b225      	sxth	r5, r4
90012d2e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90012d32:	42ab      	cmp	r3, r5
90012d34:	da22      	bge.n	90012d7c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
90012d36:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90012d38:	464a      	mov	r2, r9
90012d3a:	9701      	str	r7, [sp, #4]
90012d3c:	4641      	mov	r1, r8
90012d3e:	9300      	str	r3, [sp, #0]
90012d40:	4630      	mov	r0, r6
90012d42:	4653      	mov	r3, sl
90012d44:	f7ff ffce 	bl	90012ce4 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90012d48:	b940      	cbnz	r0, 90012d5c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
90012d4a:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90012d4e:	2b01      	cmp	r3, #1
90012d50:	d004      	beq.n	90012d5c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
90012d52:	3301      	adds	r3, #1
90012d54:	105b      	asrs	r3, r3, #1
90012d56:	f8ad 300e 	strh.w	r3, [sp, #14]
90012d5a:	e7ec      	b.n	90012d36 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3c>
90012d5c:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90012d60:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90012d64:	4413      	add	r3, r2
90012d66:	b29b      	uxth	r3, r3
90012d68:	441a      	add	r2, r3
90012d6a:	f8ad 300a 	strh.w	r3, [sp, #10]
90012d6e:	b212      	sxth	r2, r2
90012d70:	4295      	cmp	r5, r2
90012d72:	dadc      	bge.n	90012d2e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
90012d74:	1ae3      	subs	r3, r4, r3
90012d76:	f8ad 300e 	strh.w	r3, [sp, #14]
90012d7a:	e7d8      	b.n	90012d2e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
90012d7c:	b004      	add	sp, #16
90012d7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90012d82 <_ZN8touchgfx6CircleD1Ev>:
90012d82:	4770      	bx	lr

90012d84 <_ZN8touchgfx6CircleD0Ev>:
90012d84:	b510      	push	{r4, lr}
90012d86:	4604      	mov	r4, r0
90012d88:	2148      	movs	r1, #72	@ 0x48
90012d8a:	f016 fb6f 	bl	9002946c <_ZdlPvj>
90012d8e:	4620      	mov	r0, r4
90012d90:	bd10      	pop	{r4, pc}

90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90012d92:	b507      	push	{r0, r1, r2, lr}
90012d94:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
90012d98:	ab01      	add	r3, sp, #4
90012d9a:	6809      	ldr	r1, [r1, #0]
90012d9c:	6800      	ldr	r0, [r0, #0]
90012d9e:	f005 fc49 	bl	90018634 <_ZN8touchgfx6muldivElllRl>
90012da2:	b003      	add	sp, #12
90012da4:	f85d fb04 	ldr.w	pc, [sp], #4

90012da8 <_ZN8touchgfx7CWRUtil4sineEi>:
90012da8:	f44f 73b4 	mov.w	r3, #360	@ 0x168
90012dac:	fb90 f2f3 	sdiv	r2, r0, r3
90012db0:	fb02 0013 	mls	r0, r2, r3, r0
90012db4:	2800      	cmp	r0, #0
90012db6:	bfb8      	it	lt
90012db8:	18c0      	addlt	r0, r0, r3
90012dba:	4b0a      	ldr	r3, [pc, #40]	@ (90012de4 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
90012dbc:	285a      	cmp	r0, #90	@ 0x5a
90012dbe:	dc02      	bgt.n	90012dc6 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
90012dc0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90012dc4:	4770      	bx	lr
90012dc6:	28b4      	cmp	r0, #180	@ 0xb4
90012dc8:	dc02      	bgt.n	90012dd0 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
90012dca:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
90012dce:	e7f7      	b.n	90012dc0 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90012dd0:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
90012dd4:	bfd4      	ite	le
90012dd6:	38b4      	suble	r0, #180	@ 0xb4
90012dd8:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
90012ddc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90012de0:	4240      	negs	r0, r0
90012de2:	4770      	bx	lr
90012de4:	9002d8ac 	.word	0x9002d8ac

90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
90012de8:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
90012dec:	fb90 f2f3 	sdiv	r2, r0, r3
90012df0:	b573      	push	{r0, r1, r4, r5, r6, lr}
90012df2:	fb02 0013 	mls	r0, r2, r3, r0
90012df6:	2800      	cmp	r0, #0
90012df8:	bfb8      	it	lt
90012dfa:	18c0      	addlt	r0, r0, r3
90012dfc:	1144      	asrs	r4, r0, #5
90012dfe:	f000 061f 	and.w	r6, r0, #31
90012e02:	4620      	mov	r0, r4
90012e04:	f7ff ffd0 	bl	90012da8 <_ZN8touchgfx7CWRUtil4sineEi>
90012e08:	4605      	mov	r5, r0
90012e0a:	b90e      	cbnz	r6, 90012e10 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
90012e0c:	b002      	add	sp, #8
90012e0e:	bd70      	pop	{r4, r5, r6, pc}
90012e10:	1c60      	adds	r0, r4, #1
90012e12:	f7ff ffc9 	bl	90012da8 <_ZN8touchgfx7CWRUtil4sineEi>
90012e16:	ab01      	add	r3, sp, #4
90012e18:	2220      	movs	r2, #32
90012e1a:	4631      	mov	r1, r6
90012e1c:	1b40      	subs	r0, r0, r5
90012e1e:	f005 fc09 	bl	90018634 <_ZN8touchgfx6muldivElllRl>
90012e22:	4428      	add	r0, r5
90012e24:	e7f2      	b.n	90012e0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
90012e26:	b508      	push	{r3, lr}
90012e28:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
90012e2c:	f7ff ffdc 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90012e30:	bd08      	pop	{r3, pc}
	...

90012e34 <_ZN8touchgfx6CircleC1Ev>:
90012e34:	b510      	push	{r4, lr}
90012e36:	4604      	mov	r4, r0
90012e38:	f000 fd04 	bl	90013844 <_ZN8touchgfx12CanvasWidgetC1Ev>
90012e3c:	4b08      	ldr	r3, [pc, #32]	@ (90012e60 <_ZN8touchgfx6CircleC1Ev+0x2c>)
90012e3e:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
90012e42:	4620      	mov	r0, r4
90012e44:	6023      	str	r3, [r4, #0]
90012e46:	2300      	movs	r3, #0
90012e48:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
90012e4c:	f24b 4205 	movw	r2, #46085	@ 0xb405
90012e50:	60a3      	str	r3, [r4, #8]
90012e52:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
90012e56:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
90012e5a:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
90012e5e:	bd10      	pop	{r4, pc}
90012e60:	9002d96c 	.word	0x9002d96c

90012e64 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
90012e64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012e68:	428a      	cmp	r2, r1
90012e6a:	4680      	mov	r8, r0
90012e6c:	4610      	mov	r0, r2
90012e6e:	4699      	mov	r9, r3
90012e70:	bfaa      	itet	ge
90012e72:	460a      	movge	r2, r1
90012e74:	460b      	movlt	r3, r1
90012e76:	4603      	movge	r3, r0
90012e78:	b085      	sub	sp, #20
90012e7a:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
90012e7e:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
90012e82:	1a99      	subs	r1, r3, r2
90012e84:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90012e86:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
90012e8a:	bfa4      	itt	ge
90012e8c:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
90012e90:	2200      	movge	r2, #0
90012e92:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
90012e96:	9300      	str	r3, [sp, #0]
90012e98:	f102 0b01 	add.w	fp, r2, #1
90012e9c:	2c00      	cmp	r4, #0
90012e9e:	f040 80ae 	bne.w	90012ffe <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19a>
90012ea2:	4610      	mov	r0, r2
90012ea4:	9201      	str	r2, [sp, #4]
90012ea6:	f7ff ff9f 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90012eaa:	a903      	add	r1, sp, #12
90012eac:	9003      	str	r0, [sp, #12]
90012eae:	4650      	mov	r0, sl
90012eb0:	f7ff ff6f 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90012eb4:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
90012eb8:	9a01      	ldr	r2, [sp, #4]
90012eba:	4408      	add	r0, r1
90012ebc:	f8d9 1000 	ldr.w	r1, [r9]
90012ec0:	4281      	cmp	r1, r0
90012ec2:	bfc8      	it	gt
90012ec4:	f8c9 0000 	strgt.w	r0, [r9]
90012ec8:	6839      	ldr	r1, [r7, #0]
90012eca:	4288      	cmp	r0, r1
90012ecc:	bfc8      	it	gt
90012ece:	6038      	strgt	r0, [r7, #0]
90012ed0:	4610      	mov	r0, r2
90012ed2:	f7ff ffa8 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90012ed6:	a903      	add	r1, sp, #12
90012ed8:	9003      	str	r0, [sp, #12]
90012eda:	4650      	mov	r0, sl
90012edc:	f7ff ff59 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90012ee0:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90012ee4:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
90012ee8:	1a10      	subs	r0, r2, r0
90012eea:	6832      	ldr	r2, [r6, #0]
90012eec:	4282      	cmp	r2, r0
90012eee:	bfc8      	it	gt
90012ef0:	6030      	strgt	r0, [r6, #0]
90012ef2:	682a      	ldr	r2, [r5, #0]
90012ef4:	4290      	cmp	r0, r2
90012ef6:	fb9b f2f1 	sdiv	r2, fp, r1
90012efa:	fb01 b212 	mls	r2, r1, r2, fp
90012efe:	bfc8      	it	gt
90012f00:	6028      	strgt	r0, [r5, #0]
90012f02:	1a8a      	subs	r2, r1, r2
90012f04:	fb92 f0f1 	sdiv	r0, r2, r1
90012f08:	fb01 2210 	mls	r2, r1, r0, r2
90012f0c:	4493      	add	fp, r2
90012f0e:	9b00      	ldr	r3, [sp, #0]
90012f10:	455b      	cmp	r3, fp
90012f12:	db2a      	blt.n	90012f6a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x106>
90012f14:	4658      	mov	r0, fp
90012f16:	f7ff ff67 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90012f1a:	a903      	add	r1, sp, #12
90012f1c:	9003      	str	r0, [sp, #12]
90012f1e:	4650      	mov	r0, sl
90012f20:	f7ff ff37 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90012f24:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90012f28:	4410      	add	r0, r2
90012f2a:	f8d9 2000 	ldr.w	r2, [r9]
90012f2e:	4282      	cmp	r2, r0
90012f30:	bfc8      	it	gt
90012f32:	f8c9 0000 	strgt.w	r0, [r9]
90012f36:	683a      	ldr	r2, [r7, #0]
90012f38:	4290      	cmp	r0, r2
90012f3a:	bfc8      	it	gt
90012f3c:	6038      	strgt	r0, [r7, #0]
90012f3e:	4658      	mov	r0, fp
90012f40:	f7ff ff71 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90012f44:	a903      	add	r1, sp, #12
90012f46:	9003      	str	r0, [sp, #12]
90012f48:	4650      	mov	r0, sl
90012f4a:	f7ff ff22 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90012f4e:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90012f52:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
90012f56:	1a10      	subs	r0, r2, r0
90012f58:	6832      	ldr	r2, [r6, #0]
90012f5a:	4282      	cmp	r2, r0
90012f5c:	bfc8      	it	gt
90012f5e:	6030      	strgt	r0, [r6, #0]
90012f60:	682a      	ldr	r2, [r5, #0]
90012f62:	4290      	cmp	r0, r2
90012f64:	bfc8      	it	gt
90012f66:	6028      	strgt	r0, [r5, #0]
90012f68:	e7d1      	b.n	90012f0e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xaa>
90012f6a:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
90012f6e:	9b00      	ldr	r3, [sp, #0]
90012f70:	455b      	cmp	r3, fp
90012f72:	dd27      	ble.n	90012fc4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x160>
90012f74:	4618      	mov	r0, r3
90012f76:	f7ff ff37 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90012f7a:	a903      	add	r1, sp, #12
90012f7c:	9003      	str	r0, [sp, #12]
90012f7e:	4650      	mov	r0, sl
90012f80:	f7ff ff07 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90012f84:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90012f88:	4410      	add	r0, r2
90012f8a:	f8d9 2000 	ldr.w	r2, [r9]
90012f8e:	4282      	cmp	r2, r0
90012f90:	bfc8      	it	gt
90012f92:	f8c9 0000 	strgt.w	r0, [r9]
90012f96:	683a      	ldr	r2, [r7, #0]
90012f98:	4290      	cmp	r0, r2
90012f9a:	bfc8      	it	gt
90012f9c:	6038      	strgt	r0, [r7, #0]
90012f9e:	9800      	ldr	r0, [sp, #0]
90012fa0:	f7ff ff41 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90012fa4:	a903      	add	r1, sp, #12
90012fa6:	9003      	str	r0, [sp, #12]
90012fa8:	4650      	mov	r0, sl
90012faa:	f7ff fef2 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90012fae:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90012fb2:	1a10      	subs	r0, r2, r0
90012fb4:	6832      	ldr	r2, [r6, #0]
90012fb6:	4282      	cmp	r2, r0
90012fb8:	bfc8      	it	gt
90012fba:	6030      	strgt	r0, [r6, #0]
90012fbc:	682a      	ldr	r2, [r5, #0]
90012fbe:	4290      	cmp	r0, r2
90012fc0:	bfc8      	it	gt
90012fc2:	6028      	strgt	r0, [r5, #0]
90012fc4:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90012fc8:	f8d9 1000 	ldr.w	r1, [r9]
90012fcc:	4291      	cmp	r1, r2
90012fce:	bfc8      	it	gt
90012fd0:	f8c9 2000 	strgt.w	r2, [r9]
90012fd4:	683a      	ldr	r2, [r7, #0]
90012fd6:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
90012fda:	429a      	cmp	r2, r3
90012fdc:	bfb8      	it	lt
90012fde:	603b      	strlt	r3, [r7, #0]
90012fe0:	6832      	ldr	r2, [r6, #0]
90012fe2:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90012fe6:	429a      	cmp	r2, r3
90012fe8:	bfc8      	it	gt
90012fea:	6033      	strgt	r3, [r6, #0]
90012fec:	682a      	ldr	r2, [r5, #0]
90012fee:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90012ff2:	429a      	cmp	r2, r3
90012ff4:	da00      	bge.n	90012ff8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
90012ff6:	602b      	str	r3, [r5, #0]
90012ff8:	b005      	add	sp, #20
90012ffa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012ffe:	2002      	movs	r0, #2
90013000:	3401      	adds	r4, #1
90013002:	9201      	str	r2, [sp, #4]
90013004:	fb94 f4f0 	sdiv	r4, r4, r0
90013008:	4610      	mov	r0, r2
9001300a:	f7ff feed 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001300e:	a903      	add	r1, sp, #12
90013010:	9003      	str	r0, [sp, #12]
90013012:	4650      	mov	r0, sl
90013014:	f7ff febd 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013018:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
9001301c:	9a01      	ldr	r2, [sp, #4]
9001301e:	4408      	add	r0, r1
90013020:	f8d9 1000 	ldr.w	r1, [r9]
90013024:	1b03      	subs	r3, r0, r4
90013026:	4420      	add	r0, r4
90013028:	4299      	cmp	r1, r3
9001302a:	bfc8      	it	gt
9001302c:	f8c9 3000 	strgt.w	r3, [r9]
90013030:	6839      	ldr	r1, [r7, #0]
90013032:	428b      	cmp	r3, r1
90013034:	bfc8      	it	gt
90013036:	603b      	strgt	r3, [r7, #0]
90013038:	f8d9 1000 	ldr.w	r1, [r9]
9001303c:	4281      	cmp	r1, r0
9001303e:	bfc8      	it	gt
90013040:	f8c9 0000 	strgt.w	r0, [r9]
90013044:	6839      	ldr	r1, [r7, #0]
90013046:	4288      	cmp	r0, r1
90013048:	bfc8      	it	gt
9001304a:	6038      	strgt	r0, [r7, #0]
9001304c:	4610      	mov	r0, r2
9001304e:	f7ff feea 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013052:	a903      	add	r1, sp, #12
90013054:	9003      	str	r0, [sp, #12]
90013056:	4650      	mov	r0, sl
90013058:	f7ff fe9b 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001305c:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90013060:	1a10      	subs	r0, r2, r0
90013062:	6832      	ldr	r2, [r6, #0]
90013064:	1b01      	subs	r1, r0, r4
90013066:	4420      	add	r0, r4
90013068:	428a      	cmp	r2, r1
9001306a:	bfc8      	it	gt
9001306c:	6031      	strgt	r1, [r6, #0]
9001306e:	682a      	ldr	r2, [r5, #0]
90013070:	4291      	cmp	r1, r2
90013072:	bfc8      	it	gt
90013074:	6029      	strgt	r1, [r5, #0]
90013076:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
9001307a:	6832      	ldr	r2, [r6, #0]
9001307c:	4282      	cmp	r2, r0
9001307e:	bfc8      	it	gt
90013080:	6030      	strgt	r0, [r6, #0]
90013082:	682a      	ldr	r2, [r5, #0]
90013084:	4290      	cmp	r0, r2
90013086:	fb9b f2f1 	sdiv	r2, fp, r1
9001308a:	fb01 b212 	mls	r2, r1, r2, fp
9001308e:	bfc8      	it	gt
90013090:	6028      	strgt	r0, [r5, #0]
90013092:	1a8a      	subs	r2, r1, r2
90013094:	fb92 f0f1 	sdiv	r0, r2, r1
90013098:	fb01 2210 	mls	r2, r1, r0, r2
9001309c:	4493      	add	fp, r2
9001309e:	9b00      	ldr	r3, [sp, #0]
900130a0:	455b      	cmp	r3, fp
900130a2:	db40      	blt.n	90013126 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c2>
900130a4:	4658      	mov	r0, fp
900130a6:	f7ff fe9f 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900130aa:	a903      	add	r1, sp, #12
900130ac:	9003      	str	r0, [sp, #12]
900130ae:	4650      	mov	r0, sl
900130b0:	f7ff fe6f 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900130b4:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
900130b8:	4410      	add	r0, r2
900130ba:	f8d9 2000 	ldr.w	r2, [r9]
900130be:	1b01      	subs	r1, r0, r4
900130c0:	4420      	add	r0, r4
900130c2:	428a      	cmp	r2, r1
900130c4:	bfc8      	it	gt
900130c6:	f8c9 1000 	strgt.w	r1, [r9]
900130ca:	683a      	ldr	r2, [r7, #0]
900130cc:	4291      	cmp	r1, r2
900130ce:	bfc8      	it	gt
900130d0:	6039      	strgt	r1, [r7, #0]
900130d2:	f8d9 2000 	ldr.w	r2, [r9]
900130d6:	4282      	cmp	r2, r0
900130d8:	bfc8      	it	gt
900130da:	f8c9 0000 	strgt.w	r0, [r9]
900130de:	683a      	ldr	r2, [r7, #0]
900130e0:	4290      	cmp	r0, r2
900130e2:	bfc8      	it	gt
900130e4:	6038      	strgt	r0, [r7, #0]
900130e6:	4658      	mov	r0, fp
900130e8:	f7ff fe9d 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900130ec:	a903      	add	r1, sp, #12
900130ee:	9003      	str	r0, [sp, #12]
900130f0:	4650      	mov	r0, sl
900130f2:	f7ff fe4e 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900130f6:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
900130fa:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
900130fe:	1a10      	subs	r0, r2, r0
90013100:	6832      	ldr	r2, [r6, #0]
90013102:	1b01      	subs	r1, r0, r4
90013104:	4420      	add	r0, r4
90013106:	428a      	cmp	r2, r1
90013108:	bfc8      	it	gt
9001310a:	6031      	strgt	r1, [r6, #0]
9001310c:	682a      	ldr	r2, [r5, #0]
9001310e:	4291      	cmp	r1, r2
90013110:	bfc8      	it	gt
90013112:	6029      	strgt	r1, [r5, #0]
90013114:	6832      	ldr	r2, [r6, #0]
90013116:	4282      	cmp	r2, r0
90013118:	bfc8      	it	gt
9001311a:	6030      	strgt	r0, [r6, #0]
9001311c:	682a      	ldr	r2, [r5, #0]
9001311e:	4290      	cmp	r0, r2
90013120:	bfc8      	it	gt
90013122:	6028      	strgt	r0, [r5, #0]
90013124:	e7bb      	b.n	9001309e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23a>
90013126:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
9001312a:	9b00      	ldr	r3, [sp, #0]
9001312c:	455b      	cmp	r3, fp
9001312e:	f77f af63 	ble.w	90012ff8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
90013132:	4618      	mov	r0, r3
90013134:	f7ff fe58 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90013138:	a903      	add	r1, sp, #12
9001313a:	9003      	str	r0, [sp, #12]
9001313c:	4650      	mov	r0, sl
9001313e:	f7ff fe28 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013142:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90013146:	4410      	add	r0, r2
90013148:	f8d9 2000 	ldr.w	r2, [r9]
9001314c:	1b01      	subs	r1, r0, r4
9001314e:	4420      	add	r0, r4
90013150:	428a      	cmp	r2, r1
90013152:	bfc8      	it	gt
90013154:	f8c9 1000 	strgt.w	r1, [r9]
90013158:	683a      	ldr	r2, [r7, #0]
9001315a:	4291      	cmp	r1, r2
9001315c:	bfc8      	it	gt
9001315e:	6039      	strgt	r1, [r7, #0]
90013160:	f8d9 2000 	ldr.w	r2, [r9]
90013164:	4282      	cmp	r2, r0
90013166:	bfc8      	it	gt
90013168:	f8c9 0000 	strgt.w	r0, [r9]
9001316c:	683b      	ldr	r3, [r7, #0]
9001316e:	4298      	cmp	r0, r3
90013170:	bfc8      	it	gt
90013172:	6038      	strgt	r0, [r7, #0]
90013174:	9800      	ldr	r0, [sp, #0]
90013176:	f7ff fe56 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001317a:	a903      	add	r1, sp, #12
9001317c:	9003      	str	r0, [sp, #12]
9001317e:	4650      	mov	r0, sl
90013180:	f7ff fe07 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013184:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90013188:	6832      	ldr	r2, [r6, #0]
9001318a:	1a18      	subs	r0, r3, r0
9001318c:	1b03      	subs	r3, r0, r4
9001318e:	4404      	add	r4, r0
90013190:	429a      	cmp	r2, r3
90013192:	bfc8      	it	gt
90013194:	6033      	strgt	r3, [r6, #0]
90013196:	682a      	ldr	r2, [r5, #0]
90013198:	4293      	cmp	r3, r2
9001319a:	bfc8      	it	gt
9001319c:	602b      	strgt	r3, [r5, #0]
9001319e:	6833      	ldr	r3, [r6, #0]
900131a0:	42a3      	cmp	r3, r4
900131a2:	bfc8      	it	gt
900131a4:	6034      	strgt	r4, [r6, #0]
900131a6:	682b      	ldr	r3, [r5, #0]
900131a8:	429c      	cmp	r4, r3
900131aa:	bfc8      	it	gt
900131ac:	602c      	strgt	r4, [r5, #0]
900131ae:	e723      	b.n	90012ff8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>

900131b0 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
900131b0:	b530      	push	{r4, r5, lr}
900131b2:	4604      	mov	r4, r0
900131b4:	4608      	mov	r0, r1
900131b6:	4611      	mov	r1, r2
900131b8:	461a      	mov	r2, r3
900131ba:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900131be:	b089      	sub	sp, #36	@ 0x24
900131c0:	2500      	movs	r5, #0
900131c2:	015b      	lsls	r3, r3, #5
900131c4:	9505      	str	r5, [sp, #20]
900131c6:	9304      	str	r3, [sp, #16]
900131c8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900131cc:	015b      	lsls	r3, r3, #5
900131ce:	e9cd 3506 	strd	r3, r5, [sp, #24]
900131d2:	ab07      	add	r3, sp, #28
900131d4:	2520      	movs	r5, #32
900131d6:	9302      	str	r3, [sp, #8]
900131d8:	ab06      	add	r3, sp, #24
900131da:	9301      	str	r3, [sp, #4]
900131dc:	ab05      	add	r3, sp, #20
900131de:	9300      	str	r3, [sp, #0]
900131e0:	ab04      	add	r3, sp, #16
900131e2:	f7ff fe3f 	bl	90012e64 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
900131e6:	9a04      	ldr	r2, [sp, #16]
900131e8:	9805      	ldr	r0, [sp, #20]
900131ea:	9b06      	ldr	r3, [sp, #24]
900131ec:	9907      	ldr	r1, [sp, #28]
900131ee:	fb92 f2f5 	sdiv	r2, r2, r5
900131f2:	fb90 f0f5 	sdiv	r0, r0, r5
900131f6:	fb93 f3f5 	sdiv	r3, r3, r5
900131fa:	fb91 f1f5 	sdiv	r1, r1, r5
900131fe:	b292      	uxth	r2, r2
90013200:	3002      	adds	r0, #2
90013202:	b29b      	uxth	r3, r3
90013204:	3102      	adds	r1, #2
90013206:	1a80      	subs	r0, r0, r2
90013208:	3a01      	subs	r2, #1
9001320a:	1ac9      	subs	r1, r1, r3
9001320c:	3b01      	subs	r3, #1
9001320e:	80a0      	strh	r0, [r4, #4]
90013210:	4620      	mov	r0, r4
90013212:	8022      	strh	r2, [r4, #0]
90013214:	8063      	strh	r3, [r4, #2]
90013216:	80e1      	strh	r1, [r4, #6]
90013218:	b009      	add	sp, #36	@ 0x24
9001321a:	bd30      	pop	{r4, r5, pc}

9001321c <_ZNK8touchgfx6Circle14getMinimalRectEv>:
9001321c:	b510      	push	{r4, lr}
9001321e:	4604      	mov	r4, r0
90013220:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
90013224:	f7ff ffc4 	bl	900131b0 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
90013228:	4620      	mov	r0, r4
9001322a:	bd10      	pop	{r4, pc}

9001322c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
9001322c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013230:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
90013234:	468a      	mov	sl, r1
90013236:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
9001323a:	42b5      	cmp	r5, r6
9001323c:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
90013240:	6c01      	ldr	r1, [r0, #64]	@ 0x40
90013242:	b0af      	sub	sp, #188	@ 0xbc
90013244:	bfa4      	itt	ge
90013246:	462b      	movge	r3, r5
90013248:	4635      	movge	r5, r6
9001324a:	4604      	mov	r4, r0
9001324c:	6b42      	ldr	r2, [r0, #52]	@ 0x34
9001324e:	bfa8      	it	ge
90013250:	461e      	movge	r6, r3
90013252:	1b73      	subs	r3, r6, r5
90013254:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
90013258:	f04f 0320 	mov.w	r3, #32
9001325c:	bfa4      	itt	ge
9001325e:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
90013262:	2500      	movge	r5, #0
90013264:	fb99 f9f3 	sdiv	r9, r9, r3
90013268:	fb9b fbf3 	sdiv	fp, fp, r3
9001326c:	2900      	cmp	r1, #0
9001326e:	f000 80fb 	beq.w	90013468 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x23c>
90013272:	f9ba 0000 	ldrsh.w	r0, [sl]
90013276:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
9001327a:	eba9 0700 	sub.w	r7, r9, r0
9001327e:	ebab 0803 	sub.w	r8, fp, r3
90013282:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
90013286:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
9001328a:	f8ba 7004 	ldrh.w	r7, [sl, #4]
9001328e:	4407      	add	r7, r0
90013290:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
90013294:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
90013298:	f8ba 8006 	ldrh.w	r8, [sl, #6]
9001329c:	b23f      	sxth	r7, r7
9001329e:	4498      	add	r8, r3
900132a0:	2302      	movs	r3, #2
900132a2:	eba9 0707 	sub.w	r7, r9, r7
900132a6:	fa0f f888 	sxth.w	r8, r8
900132aa:	9303      	str	r3, [sp, #12]
900132ac:	2f00      	cmp	r7, #0
900132ae:	ebab 0808 	sub.w	r8, fp, r8
900132b2:	bfb8      	it	lt
900132b4:	427f      	neglt	r7, r7
900132b6:	f1b8 0f00 	cmp.w	r8, #0
900132ba:	bfb8      	it	lt
900132bc:	f1c8 0800 	rsblt	r8, r8, #0
900132c0:	45bc      	cmp	ip, r7
900132c2:	bfcc      	ite	gt
900132c4:	f10c 0701 	addgt.w	r7, ip, #1
900132c8:	3701      	addle	r7, #1
900132ca:	4540      	cmp	r0, r8
900132cc:	bfc8      	it	gt
900132ce:	f100 0801 	addgt.w	r8, r0, #1
900132d2:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
900132d6:	bfd8      	it	le
900132d8:	f108 0801 	addle.w	r8, r8, #1
900132dc:	3001      	adds	r0, #1
900132de:	fb08 f808 	mul.w	r8, r8, r8
900132e2:	1040      	asrs	r0, r0, #1
900132e4:	fb07 8707 	mla	r7, r7, r7, r8
900132e8:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
900132ec:	fb91 f1f3 	sdiv	r1, r1, r3
900132f0:	1a52      	subs	r2, r2, r1
900132f2:	920f      	str	r2, [sp, #60]	@ 0x3c
900132f4:	f7ff fd58 	bl	90012da8 <_ZN8touchgfx7CWRUtil4sineEi>
900132f8:	a92e      	add	r1, sp, #184	@ 0xb8
900132fa:	f841 0d74 	str.w	r0, [r1, #-116]!
900132fe:	a80f      	add	r0, sp, #60	@ 0x3c
90013300:	f7ff fd47 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013304:	f04f 0c20 	mov.w	ip, #32
90013308:	9b03      	ldr	r3, [sp, #12]
9001330a:	fb90 f0fc 	sdiv	r0, r0, ip
9001330e:	4340      	muls	r0, r0
90013310:	4287      	cmp	r7, r0
90013312:	da04      	bge.n	9001331e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf2>
90013314:	2401      	movs	r4, #1
90013316:	4620      	mov	r0, r4
90013318:	b02f      	add	sp, #188	@ 0xbc
9001331a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001331e:	6c21      	ldr	r1, [r4, #64]	@ 0x40
90013320:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90013322:	fb91 f2f3 	sdiv	r2, r1, r3
90013326:	4402      	add	r2, r0
90013328:	fb92 f2fc 	sdiv	r2, r2, ip
9001332c:	f9ba 1000 	ldrsh.w	r1, [sl]
90013330:	3201      	adds	r2, #1
90013332:	f8ba 3004 	ldrh.w	r3, [sl, #4]
90013336:	4352      	muls	r2, r2
90013338:	440b      	add	r3, r1
9001333a:	b21b      	sxth	r3, r3
9001333c:	454b      	cmp	r3, r9
9001333e:	bfa8      	it	ge
90013340:	464b      	movge	r3, r9
90013342:	428b      	cmp	r3, r1
90013344:	bfac      	ite	ge
90013346:	eba9 0903 	subge.w	r9, r9, r3
9001334a:	eba9 0901 	sublt.w	r9, r9, r1
9001334e:	f8ba 3006 	ldrh.w	r3, [sl, #6]
90013352:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
90013356:	440b      	add	r3, r1
90013358:	b21b      	sxth	r3, r3
9001335a:	455b      	cmp	r3, fp
9001335c:	bfa8      	it	ge
9001335e:	465b      	movge	r3, fp
90013360:	428b      	cmp	r3, r1
90013362:	bfac      	ite	ge
90013364:	ebab 0b03 	subge.w	fp, fp, r3
90013368:	ebab 0b01 	sublt.w	fp, fp, r1
9001336c:	fb0b fb0b 	mul.w	fp, fp, fp
90013370:	fb09 b909 	mla	r9, r9, r9, fp
90013374:	4591      	cmp	r9, r2
90013376:	dccd      	bgt.n	90013314 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe8>
90013378:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
9001337c:	4621      	mov	r1, r4
9001337e:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
90013380:	4648      	mov	r0, r9
90013382:	f004 fd23 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013386:	6823      	ldr	r3, [r4, #0]
90013388:	4620      	mov	r0, r4
9001338a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
9001338c:	4798      	blx	r3
9001338e:	4653      	mov	r3, sl
90013390:	9000      	str	r0, [sp, #0]
90013392:	464a      	mov	r2, r9
90013394:	4639      	mov	r1, r7
90013396:	a811      	add	r0, sp, #68	@ 0x44
90013398:	f015 fbe8 	bl	90028b6c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001339c:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9001339e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
900133a0:	920b      	str	r2, [sp, #44]	@ 0x2c
900133a2:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
900133a6:	930c      	str	r3, [sp, #48]	@ 0x30
900133a8:	dd07      	ble.n	900133ba <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18e>
900133aa:	2102      	movs	r1, #2
900133ac:	fb93 f3f1 	sdiv	r3, r3, r1
900133b0:	4413      	add	r3, r2
900133b2:	930c      	str	r3, [sp, #48]	@ 0x30
900133b4:	fb93 f3f1 	sdiv	r3, r3, r1
900133b8:	930b      	str	r3, [sp, #44]	@ 0x2c
900133ba:	f04f 0a02 	mov.w	sl, #2
900133be:	4628      	mov	r0, r5
900133c0:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
900133c4:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
900133c8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
900133cc:	017f      	lsls	r7, r7, #5
900133ce:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900133d2:	930d      	str	r3, [sp, #52]	@ 0x34
900133d4:	f7ff fd08 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900133d8:	4649      	mov	r1, r9
900133da:	900f      	str	r0, [sp, #60]	@ 0x3c
900133dc:	a80d      	add	r0, sp, #52	@ 0x34
900133de:	f7ff fcd8 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900133e2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900133e4:	fb90 f0fa 	sdiv	r0, r0, sl
900133e8:	eb00 0b03 	add.w	fp, r0, r3
900133ec:	4628      	mov	r0, r5
900133ee:	f7ff fd1a 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900133f2:	f848 0d80 	str.w	r0, [r8, #-128]!
900133f6:	a80d      	add	r0, sp, #52	@ 0x34
900133f8:	4641      	mov	r1, r8
900133fa:	f7ff fcca 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900133fe:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90013400:	4659      	mov	r1, fp
90013402:	fb90 f0fa 	sdiv	r0, r0, sl
90013406:	1a12      	subs	r2, r2, r0
90013408:	a811      	add	r0, sp, #68	@ 0x44
9001340a:	f015 fcfb 	bl	90028e04 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001340e:	f105 0a20 	add.w	sl, r5, #32
90013412:	bb67      	cbnz	r7, 9001346e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
90013414:	46ab      	mov	fp, r5
90013416:	45b2      	cmp	sl, r6
90013418:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001341a:	dc33      	bgt.n	90013484 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x258>
9001341c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001341e:	4650      	mov	r0, sl
90013420:	eb02 0241 	add.w	r2, r2, r1, lsl #1
90013424:	920d      	str	r2, [sp, #52]	@ 0x34
90013426:	f7ff fcdf 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001342a:	4641      	mov	r1, r8
9001342c:	900e      	str	r0, [sp, #56]	@ 0x38
9001342e:	a80d      	add	r0, sp, #52	@ 0x34
90013430:	f7ff fcaf 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013434:	2302      	movs	r3, #2
90013436:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90013438:	fb90 f0f3 	sdiv	r0, r0, r3
9001343c:	eb00 0b02 	add.w	fp, r0, r2
90013440:	4650      	mov	r0, sl
90013442:	f7ff fcf0 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013446:	4649      	mov	r1, r9
90013448:	900f      	str	r0, [sp, #60]	@ 0x3c
9001344a:	a80d      	add	r0, sp, #52	@ 0x34
9001344c:	f7ff fca1 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013450:	2302      	movs	r3, #2
90013452:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90013454:	4659      	mov	r1, fp
90013456:	46d3      	mov	fp, sl
90013458:	44ba      	add	sl, r7
9001345a:	fb90 f0f3 	sdiv	r0, r0, r3
9001345e:	1a12      	subs	r2, r2, r0
90013460:	a811      	add	r0, sp, #68	@ 0x44
90013462:	f015 fd1c 	bl	90028e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90013466:	e7d6      	b.n	90013416 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ea>
90013468:	fb92 f2f3 	sdiv	r2, r2, r3
9001346c:	e75e      	b.n	9001332c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x100>
9001346e:	fb9a f2f7 	sdiv	r2, sl, r7
90013472:	fb07 a212 	mls	r2, r7, r2, sl
90013476:	1aba      	subs	r2, r7, r2
90013478:	fb92 f1f7 	sdiv	r1, r2, r7
9001347c:	fb07 2211 	mls	r2, r7, r1, r2
90013480:	4492      	add	sl, r2
90013482:	e7c7      	b.n	90013414 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1e8>
90013484:	455e      	cmp	r6, fp
90013486:	dd23      	ble.n	900134d0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
90013488:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001348a:	f04f 0a02 	mov.w	sl, #2
9001348e:	4630      	mov	r0, r6
90013490:	eb02 0243 	add.w	r2, r2, r3, lsl #1
90013494:	920d      	str	r2, [sp, #52]	@ 0x34
90013496:	f7ff fca7 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001349a:	4641      	mov	r1, r8
9001349c:	900e      	str	r0, [sp, #56]	@ 0x38
9001349e:	a80d      	add	r0, sp, #52	@ 0x34
900134a0:	f7ff fc77 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900134a4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900134a6:	fb90 f0fa 	sdiv	r0, r0, sl
900134aa:	4403      	add	r3, r0
900134ac:	4630      	mov	r0, r6
900134ae:	9303      	str	r3, [sp, #12]
900134b0:	f7ff fcb9 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900134b4:	4649      	mov	r1, r9
900134b6:	900f      	str	r0, [sp, #60]	@ 0x3c
900134b8:	a80d      	add	r0, sp, #52	@ 0x34
900134ba:	f7ff fc6a 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900134be:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900134c0:	9b03      	ldr	r3, [sp, #12]
900134c2:	fb90 f0fa 	sdiv	r0, r0, sl
900134c6:	4619      	mov	r1, r3
900134c8:	1a12      	subs	r2, r2, r0
900134ca:	a811      	add	r0, sp, #68	@ 0x44
900134cc:	f015 fce7 	bl	90028e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900134d0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900134d2:	b99b      	cbnz	r3, 900134fc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d0>
900134d4:	1b75      	subs	r5, r6, r5
900134d6:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
900134da:	da04      	bge.n	900134e6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
900134dc:	a811      	add	r0, sp, #68	@ 0x44
900134de:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
900134e2:	f015 fcdc 	bl	90028e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900134e6:	21ff      	movs	r1, #255	@ 0xff
900134e8:	a811      	add	r0, sp, #68	@ 0x44
900134ea:	f015 fbd3 	bl	90028c94 <_ZN8touchgfx6Canvas6renderEh>
900134ee:	4604      	mov	r4, r0
900134f0:	4b89      	ldr	r3, [pc, #548]	@ (90013718 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ec>)
900134f2:	a816      	add	r0, sp, #88	@ 0x58
900134f4:	9311      	str	r3, [sp, #68]	@ 0x44
900134f6:	f000 ffd3 	bl	900144a0 <_ZN8touchgfx7OutlineD1Ev>
900134fa:	e70c      	b.n	90013316 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xea>
900134fc:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
90013500:	429a      	cmp	r2, r3
90013502:	f0c0 8107 	bcc.w	90013714 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e8>
90013506:	1b73      	subs	r3, r6, r5
90013508:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
9001350c:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
90013510:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
90013514:	9303      	str	r3, [sp, #12]
90013516:	da43      	bge.n	900135a0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x374>
90013518:	4630      	mov	r0, r6
9001351a:	f7ff fc65 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001351e:	4649      	mov	r1, r9
90013520:	900f      	str	r0, [sp, #60]	@ 0x3c
90013522:	a80b      	add	r0, sp, #44	@ 0x2c
90013524:	f7ff fc35 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013528:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9001352a:	18c3      	adds	r3, r0, r3
9001352c:	4630      	mov	r0, r6
9001352e:	9305      	str	r3, [sp, #20]
90013530:	f7ff fc79 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013534:	4649      	mov	r1, r9
90013536:	900f      	str	r0, [sp, #60]	@ 0x3c
90013538:	a80b      	add	r0, sp, #44	@ 0x2c
9001353a:	f7ff fc2a 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001353e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90013540:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
90013544:	1a1b      	subs	r3, r3, r0
90013546:	9206      	str	r2, [sp, #24]
90013548:	9304      	str	r3, [sp, #16]
9001354a:	eb06 030a 	add.w	r3, r6, sl
9001354e:	9a06      	ldr	r2, [sp, #24]
90013550:	4293      	cmp	r3, r2
90013552:	da25      	bge.n	900135a0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x374>
90013554:	4618      	mov	r0, r3
90013556:	9308      	str	r3, [sp, #32]
90013558:	f7ff fc46 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001355c:	4649      	mov	r1, r9
9001355e:	900f      	str	r0, [sp, #60]	@ 0x3c
90013560:	a80c      	add	r0, sp, #48	@ 0x30
90013562:	f7ff fc16 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013566:	2202      	movs	r2, #2
90013568:	9b05      	ldr	r3, [sp, #20]
9001356a:	9209      	str	r2, [sp, #36]	@ 0x24
9001356c:	fb90 f0f2 	sdiv	r0, r0, r2
90013570:	18c3      	adds	r3, r0, r3
90013572:	9307      	str	r3, [sp, #28]
90013574:	9b08      	ldr	r3, [sp, #32]
90013576:	4618      	mov	r0, r3
90013578:	f7ff fc55 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001357c:	a92e      	add	r1, sp, #184	@ 0xb8
9001357e:	f841 0d80 	str.w	r0, [r1, #-128]!
90013582:	a80c      	add	r0, sp, #48	@ 0x30
90013584:	f7ff fc05 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013588:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001358a:	9b04      	ldr	r3, [sp, #16]
9001358c:	9907      	ldr	r1, [sp, #28]
9001358e:	fb90 f2f2 	sdiv	r2, r0, r2
90013592:	a811      	add	r0, sp, #68	@ 0x44
90013594:	1a9a      	subs	r2, r3, r2
90013596:	f015 fc82 	bl	90028e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001359a:	9b08      	ldr	r3, [sp, #32]
9001359c:	4453      	add	r3, sl
9001359e:	e7d6      	b.n	9001354e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x322>
900135a0:	455e      	cmp	r6, fp
900135a2:	dd25      	ble.n	900135f0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3c4>
900135a4:	4630      	mov	r0, r6
900135a6:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
900135aa:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
900135ae:	930d      	str	r3, [sp, #52]	@ 0x34
900135b0:	f7ff fc1a 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900135b4:	4641      	mov	r1, r8
900135b6:	900e      	str	r0, [sp, #56]	@ 0x38
900135b8:	a80d      	add	r0, sp, #52	@ 0x34
900135ba:	f7ff fbea 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900135be:	2202      	movs	r2, #2
900135c0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900135c2:	9204      	str	r2, [sp, #16]
900135c4:	fb90 f0f2 	sdiv	r0, r0, r2
900135c8:	eb00 0903 	add.w	r9, r0, r3
900135cc:	4630      	mov	r0, r6
900135ce:	f7ff fc2a 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900135d2:	a92e      	add	r1, sp, #184	@ 0xb8
900135d4:	f841 0d7c 	str.w	r0, [r1, #-124]!
900135d8:	a80d      	add	r0, sp, #52	@ 0x34
900135da:	f7ff fbda 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900135de:	9a04      	ldr	r2, [sp, #16]
900135e0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
900135e2:	4649      	mov	r1, r9
900135e4:	fb90 f2f2 	sdiv	r2, r0, r2
900135e8:	a811      	add	r0, sp, #68	@ 0x44
900135ea:	1a9a      	subs	r2, r3, r2
900135ec:	f015 fc57 	bl	90028e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900135f0:	46d9      	mov	r9, fp
900135f2:	2602      	movs	r6, #2
900135f4:	45a9      	cmp	r9, r5
900135f6:	db25      	blt.n	90013644 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x418>
900135f8:	4648      	mov	r0, r9
900135fa:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
900135fe:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
90013602:	930d      	str	r3, [sp, #52]	@ 0x34
90013604:	f7ff fbf0 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90013608:	4641      	mov	r1, r8
9001360a:	900e      	str	r0, [sp, #56]	@ 0x38
9001360c:	a80d      	add	r0, sp, #52	@ 0x34
9001360e:	f7ff fbc0 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013612:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90013614:	fb90 f0f6 	sdiv	r0, r0, r6
90013618:	eb00 0b03 	add.w	fp, r0, r3
9001361c:	4648      	mov	r0, r9
9001361e:	f7ff fc02 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013622:	a90f      	add	r1, sp, #60	@ 0x3c
90013624:	900f      	str	r0, [sp, #60]	@ 0x3c
90013626:	a80d      	add	r0, sp, #52	@ 0x34
90013628:	f7ff fbb3 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001362c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9001362e:	4659      	mov	r1, fp
90013630:	46cb      	mov	fp, r9
90013632:	eba9 0907 	sub.w	r9, r9, r7
90013636:	fb90 f0f6 	sdiv	r0, r0, r6
9001363a:	1a12      	subs	r2, r2, r0
9001363c:	a811      	add	r0, sp, #68	@ 0x44
9001363e:	f015 fc2e 	bl	90028e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90013642:	e7d7      	b.n	900135f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3c8>
90013644:	455d      	cmp	r5, fp
90013646:	da22      	bge.n	9001368e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x462>
90013648:	2602      	movs	r6, #2
9001364a:	4628      	mov	r0, r5
9001364c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90013650:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
90013654:	930d      	str	r3, [sp, #52]	@ 0x34
90013656:	f7ff fbc7 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001365a:	4641      	mov	r1, r8
9001365c:	900e      	str	r0, [sp, #56]	@ 0x38
9001365e:	a80d      	add	r0, sp, #52	@ 0x34
90013660:	f7ff fb97 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013664:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90013666:	fb90 f0f6 	sdiv	r0, r0, r6
9001366a:	4407      	add	r7, r0
9001366c:	4628      	mov	r0, r5
9001366e:	f7ff fbda 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90013672:	a92e      	add	r1, sp, #184	@ 0xb8
90013674:	f841 0d7c 	str.w	r0, [r1, #-124]!
90013678:	a80d      	add	r0, sp, #52	@ 0x34
9001367a:	f7ff fb8a 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001367e:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90013680:	4639      	mov	r1, r7
90013682:	fb90 f0f6 	sdiv	r0, r0, r6
90013686:	1a12      	subs	r2, r2, r0
90013688:	a811      	add	r0, sp, #68	@ 0x44
9001368a:	f015 fc08 	bl	90028e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001368e:	9b03      	ldr	r3, [sp, #12]
90013690:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
90013694:	f6bf af27 	bge.w	900134e6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
90013698:	ae2e      	add	r6, sp, #184	@ 0xb8
9001369a:	4628      	mov	r0, r5
9001369c:	f7ff fba4 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900136a0:	f04f 0b02 	mov.w	fp, #2
900136a4:	f846 0d7c 	str.w	r0, [r6, #-124]!
900136a8:	a80b      	add	r0, sp, #44	@ 0x2c
900136aa:	4631      	mov	r1, r6
900136ac:	f7ff fb71 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900136b0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900136b2:	eb00 0903 	add.w	r9, r0, r3
900136b6:	4628      	mov	r0, r5
900136b8:	f7ff fbb5 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900136bc:	4631      	mov	r1, r6
900136be:	900f      	str	r0, [sp, #60]	@ 0x3c
900136c0:	a80b      	add	r0, sp, #44	@ 0x2c
900136c2:	f7ff fb66 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900136c6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
900136c8:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
900136cc:	eba3 0800 	sub.w	r8, r3, r0
900136d0:	4454      	add	r4, sl
900136d2:	42a5      	cmp	r5, r4
900136d4:	f77f af07 	ble.w	900134e6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
900136d8:	4620      	mov	r0, r4
900136da:	f7ff fb85 	bl	90012de8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900136de:	4631      	mov	r1, r6
900136e0:	900f      	str	r0, [sp, #60]	@ 0x3c
900136e2:	a80c      	add	r0, sp, #48	@ 0x30
900136e4:	f7ff fb55 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900136e8:	fb90 f0fb 	sdiv	r0, r0, fp
900136ec:	eb00 0709 	add.w	r7, r0, r9
900136f0:	4620      	mov	r0, r4
900136f2:	f7ff fb98 	bl	90012e26 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900136f6:	a90e      	add	r1, sp, #56	@ 0x38
900136f8:	900e      	str	r0, [sp, #56]	@ 0x38
900136fa:	a80c      	add	r0, sp, #48	@ 0x30
900136fc:	f7ff fb49 	bl	90012d92 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90013700:	4639      	mov	r1, r7
90013702:	4454      	add	r4, sl
90013704:	fb90 f2fb 	sdiv	r2, r0, fp
90013708:	a811      	add	r0, sp, #68	@ 0x44
9001370a:	eba8 0202 	sub.w	r2, r8, r2
9001370e:	f015 fbc6 	bl	90028e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90013712:	e7de      	b.n	900136d2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4a6>
90013714:	2400      	movs	r4, #0
90013716:	e6eb      	b.n	900134f0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c4>
90013718:	9002e080 	.word	0x9002e080

9001371c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
9001371c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001371e:	6803      	ldr	r3, [r0, #0]
90013720:	460d      	mov	r5, r1
90013722:	4604      	mov	r4, r0
90013724:	4601      	mov	r1, r0
90013726:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90013728:	a802      	add	r0, sp, #8
9001372a:	4798      	blx	r3
9001372c:	6828      	ldr	r0, [r5, #0]
9001372e:	6869      	ldr	r1, [r5, #4]
90013730:	466b      	mov	r3, sp
90013732:	c303      	stmia	r3!, {r0, r1}
90013734:	4668      	mov	r0, sp
90013736:	4619      	mov	r1, r3
90013738:	f7fc ff9e 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
9001373c:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9001373e:	b188      	cbz	r0, 90013764 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013740:	6803      	ldr	r3, [r0, #0]
90013742:	1d21      	adds	r1, r4, #4
90013744:	68db      	ldr	r3, [r3, #12]
90013746:	4798      	blx	r3
90013748:	b160      	cbz	r0, 90013764 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001374a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001374e:	2b00      	cmp	r3, #0
90013750:	dd08      	ble.n	90013764 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013752:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90013756:	2d00      	cmp	r5, #0
90013758:	dd04      	ble.n	90013764 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001375a:	4a2b      	ldr	r2, [pc, #172]	@ (90013808 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
9001375c:	7812      	ldrb	r2, [r2, #0]
9001375e:	b11a      	cbz	r2, 90013768 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90013760:	2a01      	cmp	r2, #1
90013762:	d029      	beq.n	900137b8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90013764:	b004      	add	sp, #16
90013766:	bd70      	pop	{r4, r5, r6, pc}
90013768:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001376c:	441d      	add	r5, r3
9001376e:	b2ad      	uxth	r5, r5
90013770:	b22e      	sxth	r6, r5
90013772:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90013776:	42b3      	cmp	r3, r6
90013778:	daf4      	bge.n	90013764 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001377a:	6823      	ldr	r3, [r4, #0]
9001377c:	4669      	mov	r1, sp
9001377e:	4620      	mov	r0, r4
90013780:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90013782:	4798      	blx	r3
90013784:	b940      	cbnz	r0, 90013798 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90013786:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
9001378a:	2b01      	cmp	r3, #1
9001378c:	d004      	beq.n	90013798 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
9001378e:	3301      	adds	r3, #1
90013790:	105b      	asrs	r3, r3, #1
90013792:	f8ad 3006 	strh.w	r3, [sp, #6]
90013796:	e7f0      	b.n	9001377a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90013798:	f8bd 2006 	ldrh.w	r2, [sp, #6]
9001379c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900137a0:	4413      	add	r3, r2
900137a2:	b29b      	uxth	r3, r3
900137a4:	441a      	add	r2, r3
900137a6:	f8ad 3002 	strh.w	r3, [sp, #2]
900137aa:	b212      	sxth	r2, r2
900137ac:	4296      	cmp	r6, r2
900137ae:	dae0      	bge.n	90013772 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
900137b0:	1aeb      	subs	r3, r5, r3
900137b2:	f8ad 3006 	strh.w	r3, [sp, #6]
900137b6:	e7dc      	b.n	90013772 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
900137b8:	f8bd 5000 	ldrh.w	r5, [sp]
900137bc:	441d      	add	r5, r3
900137be:	b2ad      	uxth	r5, r5
900137c0:	b22e      	sxth	r6, r5
900137c2:	f9bd 3000 	ldrsh.w	r3, [sp]
900137c6:	42b3      	cmp	r3, r6
900137c8:	dacc      	bge.n	90013764 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900137ca:	6823      	ldr	r3, [r4, #0]
900137cc:	4669      	mov	r1, sp
900137ce:	4620      	mov	r0, r4
900137d0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
900137d2:	4798      	blx	r3
900137d4:	b940      	cbnz	r0, 900137e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
900137d6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900137da:	2b01      	cmp	r3, #1
900137dc:	d004      	beq.n	900137e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
900137de:	3301      	adds	r3, #1
900137e0:	105b      	asrs	r3, r3, #1
900137e2:	f8ad 3004 	strh.w	r3, [sp, #4]
900137e6:	e7f0      	b.n	900137ca <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
900137e8:	f8bd 2004 	ldrh.w	r2, [sp, #4]
900137ec:	f8bd 3000 	ldrh.w	r3, [sp]
900137f0:	4413      	add	r3, r2
900137f2:	b29b      	uxth	r3, r3
900137f4:	441a      	add	r2, r3
900137f6:	f8ad 3000 	strh.w	r3, [sp]
900137fa:	b212      	sxth	r2, r2
900137fc:	4296      	cmp	r6, r2
900137fe:	dae0      	bge.n	900137c2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013800:	1aeb      	subs	r3, r5, r3
90013802:	f8ad 3004 	strh.w	r3, [sp, #4]
90013806:	e7dc      	b.n	900137c2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013808:	240233cc 	.word	0x240233cc

9001380c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
9001380c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9001380e:	6803      	ldr	r3, [r0, #0]
90013810:	4604      	mov	r4, r0
90013812:	4601      	mov	r1, r0
90013814:	4668      	mov	r0, sp
90013816:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90013818:	4798      	blx	r3
9001381a:	2100      	movs	r1, #0
9001381c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013820:	4668      	mov	r0, sp
90013822:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013826:	9102      	str	r1, [sp, #8]
90013828:	a902      	add	r1, sp, #8
9001382a:	f8ad 200c 	strh.w	r2, [sp, #12]
9001382e:	f8ad 300e 	strh.w	r3, [sp, #14]
90013832:	f7fc ff21 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
90013836:	6823      	ldr	r3, [r4, #0]
90013838:	4669      	mov	r1, sp
9001383a:	4620      	mov	r0, r4
9001383c:	691b      	ldr	r3, [r3, #16]
9001383e:	4798      	blx	r3
90013840:	b004      	add	sp, #16
90013842:	bd10      	pop	{r4, pc}

90013844 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90013844:	2101      	movs	r1, #1
90013846:	2200      	movs	r2, #0
90013848:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
9001384c:	490a      	ldr	r1, [pc, #40]	@ (90013878 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
9001384e:	8082      	strh	r2, [r0, #4]
90013850:	6001      	str	r1, [r0, #0]
90013852:	21ff      	movs	r1, #255	@ 0xff
90013854:	80c2      	strh	r2, [r0, #6]
90013856:	8102      	strh	r2, [r0, #8]
90013858:	8142      	strh	r2, [r0, #10]
9001385a:	8182      	strh	r2, [r0, #12]
9001385c:	81c2      	strh	r2, [r0, #14]
9001385e:	8202      	strh	r2, [r0, #16]
90013860:	8242      	strh	r2, [r0, #18]
90013862:	61c2      	str	r2, [r0, #28]
90013864:	8402      	strh	r2, [r0, #32]
90013866:	8442      	strh	r2, [r0, #34]	@ 0x22
90013868:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
9001386c:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
90013870:	6282      	str	r2, [r0, #40]	@ 0x28
90013872:	e9c0 2205 	strd	r2, r2, [r0, #20]
90013876:	4770      	bx	lr
90013878:	9002d9e4 	.word	0x9002d9e4

9001387c <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
9001387c:	2000      	movs	r0, #0
9001387e:	4770      	bx	lr

90013880 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90013880:	4b07      	ldr	r3, [pc, #28]	@ (900138a0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90013882:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90013884:	881b      	ldrh	r3, [r3, #0]
90013886:	4293      	cmp	r3, r2
90013888:	bf81      	itttt	hi
9001388a:	4b06      	ldrhi	r3, [pc, #24]	@ (900138a4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
9001388c:	681b      	ldrhi	r3, [r3, #0]
9001388e:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90013892:	7858      	ldrbhi	r0, [r3, #1]
90013894:	bf8c      	ite	hi
90013896:	f000 0003 	andhi.w	r0, r0, #3
9001389a:	2000      	movls	r0, #0
9001389c:	4770      	bx	lr
9001389e:	bf00      	nop
900138a0:	24023430 	.word	0x24023430
900138a4:	2402342c 	.word	0x2402342c

900138a8 <_ZN8touchgfx8TextAreaD1Ev>:
900138a8:	4770      	bx	lr
	...

900138ac <_ZNK8touchgfx8TextArea13getTextHeightEv>:
900138ac:	4b11      	ldr	r3, [pc, #68]	@ (900138f4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
900138ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900138b2:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
900138b4:	4604      	mov	r4, r0
900138b6:	881b      	ldrh	r3, [r3, #0]
900138b8:	428b      	cmp	r3, r1
900138ba:	d918      	bls.n	900138ee <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
900138bc:	6803      	ldr	r3, [r0, #0]
900138be:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
900138c0:	4b0d      	ldr	r3, [pc, #52]	@ (900138f8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
900138c2:	6818      	ldr	r0, [r3, #0]
900138c4:	f7f1 ffd2 	bl	9000586c <_ZNK8touchgfx5Texts7getTextEt>
900138c8:	6823      	ldr	r3, [r4, #0]
900138ca:	4606      	mov	r6, r0
900138cc:	4620      	mov	r0, r4
900138ce:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900138d0:	4798      	blx	r3
900138d2:	6823      	ldr	r3, [r4, #0]
900138d4:	4607      	mov	r7, r0
900138d6:	4620      	mov	r0, r4
900138d8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900138dc:	4798      	blx	r3
900138de:	463a      	mov	r2, r7
900138e0:	4603      	mov	r3, r0
900138e2:	4631      	mov	r1, r6
900138e4:	4620      	mov	r0, r4
900138e6:	46ac      	mov	ip, r5
900138e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900138ec:	4760      	bx	ip
900138ee:	2000      	movs	r0, #0
900138f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900138f4:	24023430 	.word	0x24023430
900138f8:	24023438 	.word	0x24023438

900138fc <_ZNK8touchgfx8TextArea12getTextWidthEv>:
900138fc:	4b18      	ldr	r3, [pc, #96]	@ (90013960 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
900138fe:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90013902:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90013904:	4604      	mov	r4, r0
90013906:	881b      	ldrh	r3, [r3, #0]
90013908:	428b      	cmp	r3, r1
9001390a:	d926      	bls.n	9001395a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
9001390c:	4b15      	ldr	r3, [pc, #84]	@ (90013964 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
9001390e:	681b      	ldr	r3, [r3, #0]
90013910:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90013914:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90013918:	4b13      	ldr	r3, [pc, #76]	@ (90013968 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
9001391a:	7855      	ldrb	r5, [r2, #1]
9001391c:	681b      	ldr	r3, [r3, #0]
9001391e:	f3c5 0581 	ubfx	r5, r5, #2, #2
90013922:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90013926:	6833      	ldr	r3, [r6, #0]
90013928:	69df      	ldr	r7, [r3, #28]
9001392a:	4b10      	ldr	r3, [pc, #64]	@ (9001396c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
9001392c:	6818      	ldr	r0, [r3, #0]
9001392e:	f7f1 ff9d 	bl	9000586c <_ZNK8touchgfx5Texts7getTextEt>
90013932:	6823      	ldr	r3, [r4, #0]
90013934:	4680      	mov	r8, r0
90013936:	4620      	mov	r0, r4
90013938:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9001393a:	4798      	blx	r3
9001393c:	6823      	ldr	r3, [r4, #0]
9001393e:	4681      	mov	r9, r0
90013940:	4620      	mov	r0, r4
90013942:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90013946:	4798      	blx	r3
90013948:	464b      	mov	r3, r9
9001394a:	9000      	str	r0, [sp, #0]
9001394c:	4642      	mov	r2, r8
9001394e:	4629      	mov	r1, r5
90013950:	4630      	mov	r0, r6
90013952:	47b8      	blx	r7
90013954:	b003      	add	sp, #12
90013956:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001395a:	2000      	movs	r0, #0
9001395c:	e7fa      	b.n	90013954 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
9001395e:	bf00      	nop
90013960:	24023430 	.word	0x24023430
90013964:	2402342c 	.word	0x2402342c
90013968:	24023434 	.word	0x24023434
9001396c:	24023438 	.word	0x24023438

90013970 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90013970:	b40e      	push	{r1, r2, r3}
90013972:	4b30      	ldr	r3, [pc, #192]	@ (90013a34 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90013974:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90013978:	881a      	ldrh	r2, [r3, #0]
9001397a:	b09d      	sub	sp, #116	@ 0x74
9001397c:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
9001397e:	4604      	mov	r4, r0
90013980:	429a      	cmp	r2, r3
90013982:	d954      	bls.n	90013a2e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90013984:	aa26      	add	r2, sp, #152	@ 0x98
90013986:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 90013a38 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
9001398a:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 90013a3c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
9001398e:	9202      	str	r2, [sp, #8]
90013990:	f8d9 2000 	ldr.w	r2, [r9]
90013994:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90013998:	f8d8 3000 	ldr.w	r3, [r8]
9001399c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900139a0:	682b      	ldr	r3, [r5, #0]
900139a2:	4628      	mov	r0, r5
900139a4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900139a6:	4798      	blx	r3
900139a8:	4606      	mov	r6, r0
900139aa:	b207      	sxth	r7, r0
900139ac:	a803      	add	r0, sp, #12
900139ae:	f005 f97b 	bl	90018ca8 <_ZN8touchgfx12TextProviderC1Ev>
900139b2:	682b      	ldr	r3, [r5, #0]
900139b4:	4628      	mov	r0, r5
900139b6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900139b8:	4798      	blx	r3
900139ba:	682b      	ldr	r3, [r5, #0]
900139bc:	4682      	mov	sl, r0
900139be:	4628      	mov	r0, r5
900139c0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900139c2:	4798      	blx	r3
900139c4:	4653      	mov	r3, sl
900139c6:	9000      	str	r0, [sp, #0]
900139c8:	a803      	add	r0, sp, #12
900139ca:	9a02      	ldr	r2, [sp, #8]
900139cc:	9925      	ldr	r1, [sp, #148]	@ 0x94
900139ce:	f005 f9c6 	bl	90018d5e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900139d2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
900139d4:	f8d9 3000 	ldr.w	r3, [r9]
900139d8:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
900139dc:	8925      	ldrh	r5, [r4, #8]
900139de:	eb03 0142 	add.w	r1, r3, r2, lsl #1
900139e2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
900139e6:	eba5 050c 	sub.w	r5, r5, ip
900139ea:	784a      	ldrb	r2, [r1, #1]
900139ec:	f8d8 3000 	ldr.w	r3, [r8]
900139f0:	b22d      	sxth	r5, r5
900139f2:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
900139f6:	f3c2 0281 	ubfx	r2, r2, #2, #2
900139fa:	9500      	str	r5, [sp, #0]
900139fc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90013a00:	a803      	add	r0, sp, #12
90013a02:	f002 fc3b 	bl	9001627c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90013a06:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
90013a0a:	b203      	sxth	r3, r0
90013a0c:	18b9      	adds	r1, r7, r2
90013a0e:	2900      	cmp	r1, #0
90013a10:	dd0b      	ble.n	90013a2a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90013a12:	3b01      	subs	r3, #1
90013a14:	fb13 f302 	smulbb	r3, r3, r2
90013a18:	fb16 3300 	smlabb	r3, r6, r0, r3
90013a1c:	b21f      	sxth	r7, r3
90013a1e:	4638      	mov	r0, r7
90013a20:	b01d      	add	sp, #116	@ 0x74
90013a22:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90013a26:	b003      	add	sp, #12
90013a28:	4770      	bx	lr
90013a2a:	2b00      	cmp	r3, #0
90013a2c:	dcf7      	bgt.n	90013a1e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90013a2e:	2700      	movs	r7, #0
90013a30:	e7f5      	b.n	90013a1e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90013a32:	bf00      	nop
90013a34:	24023430 	.word	0x24023430
90013a38:	2402342c 	.word	0x2402342c
90013a3c:	24023434 	.word	0x24023434

90013a40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90013a40:	4bbd      	ldr	r3, [pc, #756]	@ (90013d38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90013a42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013a46:	460c      	mov	r4, r1
90013a48:	881b      	ldrh	r3, [r3, #0]
90013a4a:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
90013a4c:	b0a9      	sub	sp, #164	@ 0xa4
90013a4e:	4680      	mov	r8, r0
90013a50:	428b      	cmp	r3, r1
90013a52:	d809      	bhi.n	90013a68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90013a54:	2300      	movs	r3, #0
90013a56:	f04f 32ff 	mov.w	r2, #4294967295
90013a5a:	6083      	str	r3, [r0, #8]
90013a5c:	e9c0 3200 	strd	r3, r2, [r0]
90013a60:	4640      	mov	r0, r8
90013a62:	b029      	add	sp, #164	@ 0xa4
90013a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013a68:	4eb4      	ldr	r6, [pc, #720]	@ (90013d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
90013a6a:	6833      	ldr	r3, [r6, #0]
90013a6c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90013a70:	4bb3      	ldr	r3, [pc, #716]	@ (90013d40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90013a72:	681b      	ldr	r3, [r3, #0]
90013a74:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90013a78:	4bb2      	ldr	r3, [pc, #712]	@ (90013d44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90013a7a:	6818      	ldr	r0, [r3, #0]
90013a7c:	f7f1 fef6 	bl	9000586c <_ZNK8touchgfx5Texts7getTextEt>
90013a80:	682b      	ldr	r3, [r5, #0]
90013a82:	4681      	mov	r9, r0
90013a84:	4628      	mov	r0, r5
90013a86:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90013a88:	4798      	blx	r3
90013a8a:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
90013a8c:	b203      	sxth	r3, r0
90013a8e:	4682      	mov	sl, r0
90013a90:	4407      	add	r7, r0
90013a92:	a80f      	add	r0, sp, #60	@ 0x3c
90013a94:	9304      	str	r3, [sp, #16]
90013a96:	b2bb      	uxth	r3, r7
90013a98:	9303      	str	r3, [sp, #12]
90013a9a:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
90013a9e:	2b00      	cmp	r3, #0
90013aa0:	f040 80a5 	bne.w	90013bee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90013aa4:	f005 f900 	bl	90018ca8 <_ZN8touchgfx12TextProviderC1Ev>
90013aa8:	682b      	ldr	r3, [r5, #0]
90013aaa:	4628      	mov	r0, r5
90013aac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90013aae:	4798      	blx	r3
90013ab0:	682b      	ldr	r3, [r5, #0]
90013ab2:	4606      	mov	r6, r0
90013ab4:	4628      	mov	r0, r5
90013ab6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90013ab8:	4798      	blx	r3
90013aba:	6823      	ldr	r3, [r4, #0]
90013abc:	4607      	mov	r7, r0
90013abe:	4620      	mov	r0, r4
90013ac0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90013ac2:	4798      	blx	r3
90013ac4:	6823      	ldr	r3, [r4, #0]
90013ac6:	4683      	mov	fp, r0
90013ac8:	4620      	mov	r0, r4
90013aca:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90013ace:	4798      	blx	r3
90013ad0:	463b      	mov	r3, r7
90013ad2:	4649      	mov	r1, r9
90013ad4:	4632      	mov	r2, r6
90013ad6:	2600      	movs	r6, #0
90013ad8:	e9cd b000 	strd	fp, r0, [sp]
90013adc:	a80f      	add	r0, sp, #60	@ 0x3c
90013ade:	4637      	mov	r7, r6
90013ae0:	f005 f952 	bl	90018d88 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90013ae4:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90013ae8:	f8df b250 	ldr.w	fp, [pc, #592]	@ 90013d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90013aec:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90013af0:	bf0c      	ite	eq
90013af2:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
90013af6:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90013afa:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90013afc:	4629      	mov	r1, r5
90013afe:	f8db 3000 	ldr.w	r3, [fp]
90013b02:	a80f      	add	r0, sp, #60	@ 0x3c
90013b04:	3701      	adds	r7, #1
90013b06:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90013b0a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90013b0e:	b2bf      	uxth	r7, r7
90013b10:	785b      	ldrb	r3, [r3, #1]
90013b12:	f3c3 0381 	ubfx	r3, r3, #2, #2
90013b16:	f002 f8b8 	bl	90015c8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90013b1a:	9b03      	ldr	r3, [sp, #12]
90013b1c:	4286      	cmp	r6, r0
90013b1e:	eba9 0903 	sub.w	r9, r9, r3
90013b22:	bfb8      	it	lt
90013b24:	4606      	movlt	r6, r0
90013b26:	a80f      	add	r0, sp, #60	@ 0x3c
90013b28:	fa0f f989 	sxth.w	r9, r9
90013b2c:	b236      	sxth	r6, r6
90013b2e:	f005 f8e2 	bl	90018cf6 <_ZN8touchgfx12TextProvider11endOfStringEv>
90013b32:	b918      	cbnz	r0, 90013b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013b34:	7a2b      	ldrb	r3, [r5, #8]
90013b36:	444b      	add	r3, r9
90013b38:	2b00      	cmp	r3, #0
90013b3a:	dcde      	bgt.n	90013afa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90013b3c:	9b03      	ldr	r3, [sp, #12]
90013b3e:	4620      	mov	r0, r4
90013b40:	9a04      	ldr	r2, [sp, #16]
90013b42:	fb13 f707 	smulbb	r7, r3, r7
90013b46:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90013b48:	f895 9009 	ldrb.w	r9, [r5, #9]
90013b4c:	1aff      	subs	r7, r7, r3
90013b4e:	b2bf      	uxth	r7, r7
90013b50:	b23b      	sxth	r3, r7
90013b52:	429a      	cmp	r2, r3
90013b54:	bfa8      	it	ge
90013b56:	4657      	movge	r7, sl
90013b58:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90013b5c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90013b60:	6823      	ldr	r3, [r4, #0]
90013b62:	444f      	add	r7, r9
90013b64:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90013b66:	bf08      	it	eq
90013b68:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90013b6c:	fa1f f987 	uxth.w	r9, r7
90013b70:	bf18      	it	ne
90013b72:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
90013b76:	4798      	blx	r3
90013b78:	2801      	cmp	r0, #1
90013b7a:	fa0f f789 	sxth.w	r7, r9
90013b7e:	b2b3      	uxth	r3, r6
90013b80:	f000 80e2 	beq.w	90013d48 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90013b84:	2802      	cmp	r0, #2
90013b86:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
90013b8a:	f000 80e3 	beq.w	90013d54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
90013b8e:	7aea      	ldrb	r2, [r5, #11]
90013b90:	b236      	sxth	r6, r6
90013b92:	7b2d      	ldrb	r5, [r5, #12]
90013b94:	1ab6      	subs	r6, r6, r2
90013b96:	442a      	add	r2, r5
90013b98:	fa1f fa86 	uxth.w	sl, r6
90013b9c:	4413      	add	r3, r2
90013b9e:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
90013ba2:	fa0f fb8a 	sxth.w	fp, sl
90013ba6:	b29b      	uxth	r3, r3
90013ba8:	2a02      	cmp	r2, #2
90013baa:	b21e      	sxth	r6, r3
90013bac:	f000 80d6 	beq.w	90013d5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
90013bb0:	2a03      	cmp	r2, #3
90013bb2:	f000 80de 	beq.w	90013d72 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
90013bb6:	2a01      	cmp	r2, #1
90013bb8:	f040 80e6 	bne.w	90013d88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90013bbc:	8925      	ldrh	r5, [r4, #8]
90013bbe:	4633      	mov	r3, r6
90013bc0:	463e      	mov	r6, r7
90013bc2:	eba5 0909 	sub.w	r9, r5, r9
90013bc6:	461f      	mov	r7, r3
90013bc8:	465d      	mov	r5, fp
90013bca:	fa0f fb89 	sxth.w	fp, r9
90013bce:	4b5d      	ldr	r3, [pc, #372]	@ (90013d44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90013bd0:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90013bd2:	6818      	ldr	r0, [r3, #0]
90013bd4:	f7f1 fe4a 	bl	9000586c <_ZNK8touchgfx5Texts7getTextEt>
90013bd8:	f8a8 b000 	strh.w	fp, [r8]
90013bdc:	f8a8 5002 	strh.w	r5, [r8, #2]
90013be0:	f8a8 6004 	strh.w	r6, [r8, #4]
90013be4:	f8a8 7006 	strh.w	r7, [r8, #6]
90013be8:	f8c8 0008 	str.w	r0, [r8, #8]
90013bec:	e738      	b.n	90013a60 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90013bee:	f005 f85b 	bl	90018ca8 <_ZN8touchgfx12TextProviderC1Ev>
90013bf2:	682b      	ldr	r3, [r5, #0]
90013bf4:	4628      	mov	r0, r5
90013bf6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90013bf8:	4798      	blx	r3
90013bfa:	682b      	ldr	r3, [r5, #0]
90013bfc:	4607      	mov	r7, r0
90013bfe:	4628      	mov	r0, r5
90013c00:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90013c02:	4798      	blx	r3
90013c04:	6823      	ldr	r3, [r4, #0]
90013c06:	4683      	mov	fp, r0
90013c08:	4620      	mov	r0, r4
90013c0a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90013c0c:	4798      	blx	r3
90013c0e:	6822      	ldr	r2, [r4, #0]
90013c10:	9005      	str	r0, [sp, #20]
90013c12:	4620      	mov	r0, r4
90013c14:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
90013c18:	4790      	blx	r2
90013c1a:	9b05      	ldr	r3, [sp, #20]
90013c1c:	463a      	mov	r2, r7
90013c1e:	4649      	mov	r1, r9
90013c20:	9001      	str	r0, [sp, #4]
90013c22:	a80f      	add	r0, sp, #60	@ 0x3c
90013c24:	9300      	str	r3, [sp, #0]
90013c26:	465b      	mov	r3, fp
90013c28:	f005 f8ae 	bl	90018d88 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90013c2c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90013c30:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90013c34:	af0f      	add	r7, sp, #60	@ 0x3c
90013c36:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90013c3a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013c3e:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90013c40:	bf0a      	itet	eq
90013c42:	464a      	moveq	r2, r9
90013c44:	461a      	movne	r2, r3
90013c46:	4699      	moveq	r9, r3
90013c48:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
90013c4c:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
90013c50:	1ad2      	subs	r2, r2, r3
90013c52:	6833      	ldr	r3, [r6, #0]
90013c54:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
90013c58:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90013c5c:	7859      	ldrb	r1, [r3, #1]
90013c5e:	2300      	movs	r3, #0
90013c60:	9707      	str	r7, [sp, #28]
90013c62:	f3c1 0181 	ubfx	r1, r1, #2, #2
90013c66:	f8ad 3018 	strh.w	r3, [sp, #24]
90013c6a:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90013c6e:	f88d 1020 	strb.w	r1, [sp, #32]
90013c72:	9509      	str	r5, [sp, #36]	@ 0x24
90013c74:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90013c78:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
90013c7c:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
90013c80:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90013c84:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90013c88:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90013c8c:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90013c90:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90013c94:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90013c98:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
90013c9c:	b350      	cbz	r0, 90013cf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013c9e:	682b      	ldr	r3, [r5, #0]
90013ca0:	4628      	mov	r0, r5
90013ca2:	695b      	ldr	r3, [r3, #20]
90013ca4:	4798      	blx	r3
90013ca6:	4607      	mov	r7, r0
90013ca8:	b320      	cbz	r0, 90013cf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013caa:	9809      	ldr	r0, [sp, #36]	@ 0x24
90013cac:	4639      	mov	r1, r7
90013cae:	6803      	ldr	r3, [r0, #0]
90013cb0:	68db      	ldr	r3, [r3, #12]
90013cb2:	4798      	blx	r3
90013cb4:	4606      	mov	r6, r0
90013cb6:	b1e8      	cbz	r0, 90013cf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013cb8:	7b43      	ldrb	r3, [r0, #13]
90013cba:	7a82      	ldrb	r2, [r0, #10]
90013cbc:	005b      	lsls	r3, r3, #1
90013cbe:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90013cc2:	4313      	orrs	r3, r2
90013cc4:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90013cc8:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
90013ccc:	2b06      	cmp	r3, #6
90013cce:	d111      	bne.n	90013cf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013cd0:	9809      	ldr	r0, [sp, #36]	@ 0x24
90013cd2:	4632      	mov	r2, r6
90013cd4:	4639      	mov	r1, r7
90013cd6:	6803      	ldr	r3, [r0, #0]
90013cd8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90013cda:	4798      	blx	r3
90013cdc:	7b73      	ldrb	r3, [r6, #13]
90013cde:	005b      	lsls	r3, r3, #1
90013ce0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90013ce4:	7ab3      	ldrb	r3, [r6, #10]
90013ce6:	4313      	orrs	r3, r2
90013ce8:	4418      	add	r0, r3
90013cea:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90013cee:	4418      	add	r0, r3
90013cf0:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
90013cf4:	2600      	movs	r6, #0
90013cf6:	4637      	mov	r7, r6
90013cf8:	a806      	add	r0, sp, #24
90013cfa:	3701      	adds	r7, #1
90013cfc:	f002 f9bb 	bl	90016076 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90013d00:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
90013d04:	9b03      	ldr	r3, [sp, #12]
90013d06:	b2bf      	uxth	r7, r7
90013d08:	4286      	cmp	r6, r0
90013d0a:	eba9 0903 	sub.w	r9, r9, r3
90013d0e:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90013d12:	bfb8      	it	lt
90013d14:	4606      	movlt	r6, r0
90013d16:	fa0f f989 	sxth.w	r9, r9
90013d1a:	b236      	sxth	r6, r6
90013d1c:	2b00      	cmp	r3, #0
90013d1e:	f43f af0d 	beq.w	90013b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013d22:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
90013d26:	2b00      	cmp	r3, #0
90013d28:	f47f af08 	bne.w	90013b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013d2c:	7a2b      	ldrb	r3, [r5, #8]
90013d2e:	444b      	add	r3, r9
90013d30:	2b00      	cmp	r3, #0
90013d32:	dce1      	bgt.n	90013cf8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90013d34:	e702      	b.n	90013b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013d36:	bf00      	nop
90013d38:	24023430 	.word	0x24023430
90013d3c:	2402342c 	.word	0x2402342c
90013d40:	24023434 	.word	0x24023434
90013d44:	24023438 	.word	0x24023438
90013d48:	ebaa 0606 	sub.w	r6, sl, r6
90013d4c:	2002      	movs	r0, #2
90013d4e:	fb96 f6f0 	sdiv	r6, r6, r0
90013d52:	e71c      	b.n	90013b8e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90013d54:	441e      	add	r6, r3
90013d56:	ebaa 0606 	sub.w	r6, sl, r6
90013d5a:	e718      	b.n	90013b8e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90013d5c:	8925      	ldrh	r5, [r4, #8]
90013d5e:	1aed      	subs	r5, r5, r3
90013d60:	eba5 050a 	sub.w	r5, r5, sl
90013d64:	fa0f fb85 	sxth.w	fp, r5
90013d68:	8965      	ldrh	r5, [r4, #10]
90013d6a:	eba5 0509 	sub.w	r5, r5, r9
90013d6e:	b22d      	sxth	r5, r5
90013d70:	e72d      	b.n	90013bce <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90013d72:	8965      	ldrh	r5, [r4, #10]
90013d74:	f04f 0b00 	mov.w	fp, #0
90013d78:	1aed      	subs	r5, r5, r3
90013d7a:	4633      	mov	r3, r6
90013d7c:	463e      	mov	r6, r7
90013d7e:	eba5 050a 	sub.w	r5, r5, sl
90013d82:	461f      	mov	r7, r3
90013d84:	b22d      	sxth	r5, r5
90013d86:	e722      	b.n	90013bce <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90013d88:	2500      	movs	r5, #0
90013d8a:	e720      	b.n	90013bce <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

90013d8c <_ZN8touchgfx8TextAreaD0Ev>:
90013d8c:	b510      	push	{r4, lr}
90013d8e:	4604      	mov	r4, r0
90013d90:	2148      	movs	r1, #72	@ 0x48
90013d92:	f015 fb6b 	bl	9002946c <_ZdlPvj>
90013d96:	4620      	mov	r0, r4
90013d98:	bd10      	pop	{r4, pc}
	...

90013d9c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
90013d9c:	b513      	push	{r0, r1, r4, lr}
90013d9e:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
90013da2:	4604      	mov	r4, r0
90013da4:	b1fb      	cbz	r3, 90013de6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013da6:	4b16      	ldr	r3, [pc, #88]	@ (90013e00 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
90013da8:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90013daa:	881b      	ldrh	r3, [r3, #0]
90013dac:	428b      	cmp	r3, r1
90013dae:	d91a      	bls.n	90013de6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013db0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90013db4:	2b00      	cmp	r3, #0
90013db6:	dd16      	ble.n	90013de6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013db8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90013dbc:	2b00      	cmp	r3, #0
90013dbe:	dd12      	ble.n	90013de6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013dc0:	4b10      	ldr	r3, [pc, #64]	@ (90013e04 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
90013dc2:	6818      	ldr	r0, [r3, #0]
90013dc4:	f7f1 fd52 	bl	9000586c <_ZNK8touchgfx5Texts7getTextEt>
90013dc8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
90013dcc:	6822      	ldr	r2, [r4, #0]
90013dce:	2b00      	cmp	r3, #0
90013dd0:	db06      	blt.n	90013de0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90013dd2:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
90013dd6:	2b00      	cmp	r3, #0
90013dd8:	db02      	blt.n	90013de0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90013dda:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90013ddc:	4298      	cmp	r0, r3
90013dde:	d004      	beq.n	90013dea <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90013de0:	6953      	ldr	r3, [r2, #20]
90013de2:	4620      	mov	r0, r4
90013de4:	4798      	blx	r3
90013de6:	b002      	add	sp, #8
90013de8:	bd10      	pop	{r4, pc}
90013dea:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
90013dee:	466b      	mov	r3, sp
90013df0:	6912      	ldr	r2, [r2, #16]
90013df2:	c903      	ldmia	r1, {r0, r1}
90013df4:	e883 0003 	stmia.w	r3, {r0, r1}
90013df8:	4619      	mov	r1, r3
90013dfa:	4620      	mov	r0, r4
90013dfc:	4790      	blx	r2
90013dfe:	e7f2      	b.n	90013de6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013e00:	24023430 	.word	0x24023430
90013e04:	24023438 	.word	0x24023438

90013e08 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
90013e08:	4b45      	ldr	r3, [pc, #276]	@ (90013f20 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
90013e0a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013e0e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90013e10:	b08e      	sub	sp, #56	@ 0x38
90013e12:	881b      	ldrh	r3, [r3, #0]
90013e14:	4604      	mov	r4, r0
90013e16:	4293      	cmp	r3, r2
90013e18:	d97e      	bls.n	90013f18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90013e1a:	6808      	ldr	r0, [r1, #0]
90013e1c:	ab05      	add	r3, sp, #20
90013e1e:	6849      	ldr	r1, [r1, #4]
90013e20:	4d40      	ldr	r5, [pc, #256]	@ (90013f24 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90013e22:	c303      	stmia	r3!, {r0, r1}
90013e24:	4611      	mov	r1, r2
90013e26:	6828      	ldr	r0, [r5, #0]
90013e28:	f7f1 fd20 	bl	9000586c <_ZNK8touchgfx5Texts7getTextEt>
90013e2c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
90013e30:	2b00      	cmp	r3, #0
90013e32:	db11      	blt.n	90013e58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90013e34:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
90013e38:	2b00      	cmp	r3, #0
90013e3a:	db0d      	blt.n	90013e58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90013e3c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90013e3e:	4298      	cmp	r0, r3
90013e40:	d10a      	bne.n	90013e58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90013e42:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
90013e46:	ab09      	add	r3, sp, #36	@ 0x24
90013e48:	e892 0003 	ldmia.w	r2, {r0, r1}
90013e4c:	e883 0003 	stmia.w	r3, {r0, r1}
90013e50:	4619      	mov	r1, r3
90013e52:	a805      	add	r0, sp, #20
90013e54:	f7fc fc10 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
90013e58:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90013e5c:	2b00      	cmp	r3, #0
90013e5e:	dd5b      	ble.n	90013f18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90013e60:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90013e64:	2b00      	cmp	r3, #0
90013e66:	dd57      	ble.n	90013f18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90013e68:	4f2f      	ldr	r7, [pc, #188]	@ (90013f28 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
90013e6a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90013e6c:	683b      	ldr	r3, [r7, #0]
90013e6e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90013e72:	4b2e      	ldr	r3, [pc, #184]	@ (90013f2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
90013e74:	681b      	ldr	r3, [r3, #0]
90013e76:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90013e7a:	2e00      	cmp	r6, #0
90013e7c:	d04c      	beq.n	90013f18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90013e7e:	6823      	ldr	r3, [r4, #0]
90013e80:	4620      	mov	r0, r4
90013e82:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
90013e86:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90013e88:	4798      	blx	r3
90013e8a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90013e8c:	683b      	ldr	r3, [r7, #0]
90013e8e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
90013e92:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90013e96:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
90013e9a:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
90013e9e:	785b      	ldrb	r3, [r3, #1]
90013ea0:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
90013ea4:	f3c3 0381 	ubfx	r3, r3, #2, #2
90013ea8:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90013eaa:	9609      	str	r6, [sp, #36]	@ 0x24
90013eac:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
90013eb0:	4b1f      	ldr	r3, [pc, #124]	@ (90013f30 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
90013eb2:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
90013eb6:	681b      	ldr	r3, [r3, #0]
90013eb8:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
90013ebc:	910b      	str	r1, [sp, #44]	@ 0x2c
90013ebe:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
90013ec2:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
90013ec6:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
90013eca:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
90013ece:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90013ed2:	b10a      	cbz	r2, 90013ed8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
90013ed4:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
90013ed6:	b906      	cbnz	r6, 90013eda <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
90013ed8:	689e      	ldr	r6, [r3, #8]
90013eda:	af07      	add	r7, sp, #28
90013edc:	4621      	mov	r1, r4
90013ede:	4638      	mov	r0, r7
90013ee0:	f003 ff74 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013ee4:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90013ee6:	6828      	ldr	r0, [r5, #0]
90013ee8:	f7f1 fcc0 	bl	9000586c <_ZNK8touchgfx5Texts7getTextEt>
90013eec:	6823      	ldr	r3, [r4, #0]
90013eee:	4605      	mov	r5, r0
90013ef0:	4620      	mov	r0, r4
90013ef2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90013ef4:	4798      	blx	r3
90013ef6:	6823      	ldr	r3, [r4, #0]
90013ef8:	4680      	mov	r8, r0
90013efa:	4620      	mov	r0, r4
90013efc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90013f00:	4798      	blx	r3
90013f02:	ab09      	add	r3, sp, #36	@ 0x24
90013f04:	9501      	str	r5, [sp, #4]
90013f06:	9300      	str	r3, [sp, #0]
90013f08:	ab05      	add	r3, sp, #20
90013f0a:	e9cd 8002 	strd	r8, r0, [sp, #8]
90013f0e:	4630      	mov	r0, r6
90013f10:	e897 0006 	ldmia.w	r7, {r1, r2}
90013f14:	f7f1 fc5a 	bl	900057cc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90013f18:	b00e      	add	sp, #56	@ 0x38
90013f1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013f1e:	bf00      	nop
90013f20:	24023430 	.word	0x24023430
90013f24:	24023438 	.word	0x24023438
90013f28:	2402342c 	.word	0x2402342c
90013f2c:	24023434 	.word	0x24023434
90013f30:	240233d4 	.word	0x240233d4

90013f34 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90013f34:	b570      	push	{r4, r5, r6, lr}
90013f36:	6803      	ldr	r3, [r0, #0]
90013f38:	4604      	mov	r4, r0
90013f3a:	4615      	mov	r5, r2
90013f3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90013f3e:	4798      	blx	r3
90013f40:	6823      	ldr	r3, [r4, #0]
90013f42:	4629      	mov	r1, r5
90013f44:	4620      	mov	r0, r4
90013f46:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90013f48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013f4c:	4718      	bx	r3
	...

90013f50 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90013f50:	b538      	push	{r3, r4, r5, lr}
90013f52:	4b0e      	ldr	r3, [pc, #56]	@ (90013f8c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90013f54:	4604      	mov	r4, r0
90013f56:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90013f58:	881b      	ldrh	r3, [r3, #0]
90013f5a:	429a      	cmp	r2, r3
90013f5c:	d214      	bcs.n	90013f88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
90013f5e:	6803      	ldr	r3, [r0, #0]
90013f60:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90013f62:	4798      	blx	r3
90013f64:	6823      	ldr	r3, [r4, #0]
90013f66:	4605      	mov	r5, r0
90013f68:	4620      	mov	r0, r4
90013f6a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90013f6c:	4798      	blx	r3
90013f6e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90013f72:	b22d      	sxth	r5, r5
90013f74:	4601      	mov	r1, r0
90013f76:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90013f7a:	bf06      	itte	eq
90013f7c:	4602      	moveq	r2, r0
90013f7e:	4629      	moveq	r1, r5
90013f80:	462a      	movne	r2, r5
90013f82:	4620      	mov	r0, r4
90013f84:	f7ff ffd6 	bl	90013f34 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90013f88:	bd38      	pop	{r3, r4, r5, pc}
90013f8a:	bf00      	nop
90013f8c:	24023430 	.word	0x24023430

90013f90 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90013f90:	b530      	push	{r4, r5, lr}
90013f92:	888b      	ldrh	r3, [r1, #4]
90013f94:	b085      	sub	sp, #20
90013f96:	4604      	mov	r4, r0
90013f98:	8583      	strh	r3, [r0, #44]	@ 0x2c
90013f9a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90013f9e:	b923      	cbnz	r3, 90013faa <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90013fa0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90013fa4:	b90b      	cbnz	r3, 90013faa <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90013fa6:	f7ff ffd3 	bl	90013f50 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90013faa:	6823      	ldr	r3, [r4, #0]
90013fac:	466d      	mov	r5, sp
90013fae:	4621      	mov	r1, r4
90013fb0:	343c      	adds	r4, #60	@ 0x3c
90013fb2:	4628      	mov	r0, r5
90013fb4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90013fb8:	4798      	blx	r3
90013fba:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90013fbe:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90013fc2:	b005      	add	sp, #20
90013fc4:	bd30      	pop	{r4, r5, pc}

90013fc6 <_ZNK8touchgfx3Box12getSolidRectEv>:
90013fc6:	2300      	movs	r3, #0
90013fc8:	8083      	strh	r3, [r0, #4]
90013fca:	80c3      	strh	r3, [r0, #6]
90013fcc:	8003      	strh	r3, [r0, #0]
90013fce:	8043      	strh	r3, [r0, #2]
90013fd0:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
90013fd4:	2bff      	cmp	r3, #255	@ 0xff
90013fd6:	bf01      	itttt	eq
90013fd8:	890b      	ldrheq	r3, [r1, #8]
90013fda:	8083      	strheq	r3, [r0, #4]
90013fdc:	894b      	ldrheq	r3, [r1, #10]
90013fde:	80c3      	strheq	r3, [r0, #6]
90013fe0:	4770      	bx	lr
	...

90013fe4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90013fe4:	b537      	push	{r0, r1, r2, r4, r5, lr}
90013fe6:	4604      	mov	r4, r0
90013fe8:	466b      	mov	r3, sp
90013fea:	6808      	ldr	r0, [r1, #0]
90013fec:	6849      	ldr	r1, [r1, #4]
90013fee:	c303      	stmia	r3!, {r0, r1}
90013ff0:	6823      	ldr	r3, [r4, #0]
90013ff2:	4669      	mov	r1, sp
90013ff4:	4620      	mov	r0, r4
90013ff6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013ff8:	4798      	blx	r3
90013ffa:	4b08      	ldr	r3, [pc, #32]	@ (9001401c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90013ffc:	681b      	ldr	r3, [r3, #0]
90013ffe:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90014002:	b10a      	cbz	r2, 90014008 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90014004:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90014006:	b900      	cbnz	r0, 9001400a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90014008:	6898      	ldr	r0, [r3, #8]
9001400a:	6803      	ldr	r3, [r0, #0]
9001400c:	4669      	mov	r1, sp
9001400e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90014010:	6a1d      	ldr	r5, [r3, #32]
90014012:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
90014016:	47a8      	blx	r5
90014018:	b003      	add	sp, #12
9001401a:	bd30      	pop	{r4, r5, pc}
9001401c:	240233d4 	.word	0x240233d4

90014020 <_ZN8touchgfx3BoxD1Ev>:
90014020:	4770      	bx	lr

90014022 <_ZN8touchgfx3BoxD0Ev>:
90014022:	b510      	push	{r4, lr}
90014024:	4604      	mov	r4, r0
90014026:	212c      	movs	r1, #44	@ 0x2c
90014028:	f015 fa20 	bl	9002946c <_ZdlPvj>
9001402c:	4620      	mov	r0, r4
9001402e:	bd10      	pop	{r4, pc}

90014030 <_ZNK8touchgfx3Box17invalidateContentEv>:
90014030:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
90014034:	b12a      	cbz	r2, 90014042 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90014036:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
9001403a:	b112      	cbz	r2, 90014042 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
9001403c:	6803      	ldr	r3, [r0, #0]
9001403e:	695b      	ldr	r3, [r3, #20]
90014040:	4718      	bx	r3
90014042:	4770      	bx	lr

90014044 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
90014044:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
90014048:	4770      	bx	lr

9001404a <_ZN8touchgfx6ButtonD1Ev>:
9001404a:	4770      	bx	lr

9001404c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
9001404c:	b570      	push	{r4, r5, r6, lr}
9001404e:	880b      	ldrh	r3, [r1, #0]
90014050:	4605      	mov	r5, r0
90014052:	4604      	mov	r4, r0
90014054:	85c3      	strh	r3, [r0, #46]	@ 0x2e
90014056:	8813      	ldrh	r3, [r2, #0]
90014058:	f825 3f30 	strh.w	r3, [r5, #48]!
9001405c:	4628      	mov	r0, r5
9001405e:	f006 f9af 	bl	9001a3c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90014062:	4606      	mov	r6, r0
90014064:	4628      	mov	r0, r5
90014066:	f006 f9df 	bl	9001a428 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001406a:	6823      	ldr	r3, [r4, #0]
9001406c:	4605      	mov	r5, r0
9001406e:	4631      	mov	r1, r6
90014070:	4620      	mov	r0, r4
90014072:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014074:	4798      	blx	r3
90014076:	6823      	ldr	r3, [r4, #0]
90014078:	4629      	mov	r1, r5
9001407a:	4620      	mov	r0, r4
9001407c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001407e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014082:	4718      	bx	r3

90014084 <_ZN8touchgfx6ButtonD0Ev>:
90014084:	b510      	push	{r4, lr}
90014086:	4604      	mov	r4, r0
90014088:	2134      	movs	r1, #52	@ 0x34
9001408a:	f015 f9ef 	bl	9002946c <_ZdlPvj>
9001408e:	4620      	mov	r0, r4
90014090:	bd10      	pop	{r4, pc}

90014092 <_ZN8touchgfx14AbstractButton13executeActionEv>:
90014092:	b510      	push	{r4, lr}
90014094:	4604      	mov	r4, r0
90014096:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90014098:	b150      	cbz	r0, 900140b0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9001409a:	6803      	ldr	r3, [r0, #0]
9001409c:	68db      	ldr	r3, [r3, #12]
9001409e:	4798      	blx	r3
900140a0:	b130      	cbz	r0, 900140b0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900140a2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900140a4:	4621      	mov	r1, r4
900140a6:	6803      	ldr	r3, [r0, #0]
900140a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900140ac:	689b      	ldr	r3, [r3, #8]
900140ae:	4718      	bx	r3
900140b0:	bd10      	pop	{r4, pc}

900140b2 <_ZNK8touchgfx6Button12getSolidRectEv>:
900140b2:	b510      	push	{r4, lr}
900140b4:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
900140b8:	4604      	mov	r4, r0
900140ba:	2bff      	cmp	r3, #255	@ 0xff
900140bc:	d006      	beq.n	900140cc <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
900140be:	2300      	movs	r3, #0
900140c0:	8003      	strh	r3, [r0, #0]
900140c2:	8043      	strh	r3, [r0, #2]
900140c4:	8083      	strh	r3, [r0, #4]
900140c6:	80c3      	strh	r3, [r0, #6]
900140c8:	4620      	mov	r0, r4
900140ca:	bd10      	pop	{r4, pc}
900140cc:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
900140d0:	b11b      	cbz	r3, 900140da <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
900140d2:	3130      	adds	r1, #48	@ 0x30
900140d4:	f006 f9dc 	bl	9001a490 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900140d8:	e7f6      	b.n	900140c8 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
900140da:	312e      	adds	r1, #46	@ 0x2e
900140dc:	e7fa      	b.n	900140d4 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

900140e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
900140e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900140e4:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
900140e8:	b08a      	sub	sp, #40	@ 0x28
900140ea:	4604      	mov	r4, r0
900140ec:	4688      	mov	r8, r1
900140ee:	2b00      	cmp	r3, #0
900140f0:	d066      	beq.n	900141c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
900140f2:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
900140f4:	a805      	add	r0, sp, #20
900140f6:	f8ad 3014 	strh.w	r3, [sp, #20]
900140fa:	f006 f961 	bl	9001a3c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
900140fe:	4607      	mov	r7, r0
90014100:	a805      	add	r0, sp, #20
90014102:	f006 f991 	bl	9001a428 <_ZNK8touchgfx6Bitmap9getHeightEv>
90014106:	f9b8 6000 	ldrsh.w	r6, [r8]
9001410a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
9001410e:	2300      	movs	r3, #0
90014110:	4432      	add	r2, r6
90014112:	9306      	str	r3, [sp, #24]
90014114:	b292      	uxth	r2, r2
90014116:	fa0f fc82 	sxth.w	ip, r2
9001411a:	459c      	cmp	ip, r3
9001411c:	dd52      	ble.n	900141c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001411e:	42b7      	cmp	r7, r6
90014120:	dd50      	ble.n	900141c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90014122:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
90014126:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9001412a:	442b      	add	r3, r5
9001412c:	b29b      	uxth	r3, r3
9001412e:	b219      	sxth	r1, r3
90014130:	2900      	cmp	r1, #0
90014132:	dd47      	ble.n	900141c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90014134:	42a8      	cmp	r0, r5
90014136:	dd45      	ble.n	900141c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90014138:	4567      	cmp	r7, ip
9001413a:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
9001413e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90014142:	bfb8      	it	lt
90014144:	b2ba      	uxthlt	r2, r7
90014146:	4288      	cmp	r0, r1
90014148:	f8ad 6018 	strh.w	r6, [sp, #24]
9001414c:	bfb8      	it	lt
9001414e:	b283      	uxthlt	r3, r0
90014150:	1b92      	subs	r2, r2, r6
90014152:	f8ad 501a 	strh.w	r5, [sp, #26]
90014156:	1b5b      	subs	r3, r3, r5
90014158:	f8ad 201c 	strh.w	r2, [sp, #28]
9001415c:	f8ad 301e 	strh.w	r3, [sp, #30]
90014160:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90014164:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90014168:	429a      	cmp	r2, r3
9001416a:	d026      	beq.n	900141ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9001416c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90014170:	2b00      	cmp	r3, #0
90014172:	dd22      	ble.n	900141ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90014174:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90014178:	2b00      	cmp	r3, #0
9001417a:	dd1e      	ble.n	900141ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9001417c:	2300      	movs	r3, #0
9001417e:	a908      	add	r1, sp, #32
90014180:	4620      	mov	r0, r4
90014182:	e9cd 3308 	strd	r3, r3, [sp, #32]
90014186:	6823      	ldr	r3, [r4, #0]
90014188:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001418a:	4798      	blx	r3
9001418c:	4b0f      	ldr	r3, [pc, #60]	@ (900141cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
9001418e:	681b      	ldr	r3, [r3, #0]
90014190:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90014194:	b10a      	cbz	r2, 9001419a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
90014196:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90014198:	b900      	cbnz	r0, 9001419c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
9001419a:	6898      	ldr	r0, [r3, #8]
9001419c:	2501      	movs	r5, #1
9001419e:	6801      	ldr	r1, [r0, #0]
900141a0:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
900141a4:	9502      	str	r5, [sp, #8]
900141a6:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
900141aa:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
900141ae:	9401      	str	r4, [sp, #4]
900141b0:	ac06      	add	r4, sp, #24
900141b2:	9400      	str	r4, [sp, #0]
900141b4:	688c      	ldr	r4, [r1, #8]
900141b6:	a905      	add	r1, sp, #20
900141b8:	47a0      	blx	r4
900141ba:	b00a      	add	sp, #40	@ 0x28
900141bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900141c0:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
900141c2:	e797      	b.n	900140f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
900141c4:	2300      	movs	r3, #0
900141c6:	9307      	str	r3, [sp, #28]
900141c8:	e7ca      	b.n	90014160 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
900141ca:	bf00      	nop
900141cc:	240233d4 	.word	0x240233d4

900141d0 <_ZNK8touchgfx6Button17invalidateContentEv>:
900141d0:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
900141d4:	b12a      	cbz	r2, 900141e2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900141d6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900141da:	b112      	cbz	r2, 900141e2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
900141dc:	6803      	ldr	r3, [r0, #0]
900141de:	695b      	ldr	r3, [r3, #20]
900141e0:	4718      	bx	r3
900141e2:	4770      	bx	lr

900141e4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
900141e4:	4b30      	ldr	r3, [pc, #192]	@ (900142a8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
900141e6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900141ea:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
900141ec:	b08d      	sub	sp, #52	@ 0x34
900141ee:	881b      	ldrh	r3, [r3, #0]
900141f0:	4604      	mov	r4, r0
900141f2:	460f      	mov	r7, r1
900141f4:	4293      	cmp	r3, r2
900141f6:	d954      	bls.n	900142a2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900141f8:	4b2c      	ldr	r3, [pc, #176]	@ (900142ac <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
900141fa:	6819      	ldr	r1, [r3, #0]
900141fc:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90014200:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
90014204:	4a2a      	ldr	r2, [pc, #168]	@ (900142b0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
90014206:	6812      	ldr	r2, [r2, #0]
90014208:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
9001420c:	2900      	cmp	r1, #0
9001420e:	d048      	beq.n	900142a2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90014210:	785a      	ldrb	r2, [r3, #1]
90014212:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
90014216:	f3c2 0801 	ubfx	r8, r2, #0, #2
9001421a:	f3c2 0281 	ubfx	r2, r2, #2, #2
9001421e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
90014222:	4b24      	ldr	r3, [pc, #144]	@ (900142b4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
90014224:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
90014228:	681a      	ldr	r2, [r3, #0]
9001422a:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
9001422e:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
90014232:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
90014236:	6b26      	ldr	r6, [r4, #48]	@ 0x30
90014238:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
9001423c:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
90014240:	9107      	str	r1, [sp, #28]
90014242:	f88d 8020 	strb.w	r8, [sp, #32]
90014246:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
9001424a:	9609      	str	r6, [sp, #36]	@ 0x24
9001424c:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
90014250:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
90014254:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
90014258:	b10b      	cbz	r3, 9001425e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
9001425a:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
9001425c:	b905      	cbnz	r5, 90014260 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
9001425e:	6895      	ldr	r5, [r2, #8]
90014260:	ae05      	add	r6, sp, #20
90014262:	4621      	mov	r1, r4
90014264:	4630      	mov	r0, r6
90014266:	f003 fdb1 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001426a:	4b13      	ldr	r3, [pc, #76]	@ (900142b8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
9001426c:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
9001426e:	6818      	ldr	r0, [r3, #0]
90014270:	f7f1 fafc 	bl	9000586c <_ZNK8touchgfx5Texts7getTextEt>
90014274:	6823      	ldr	r3, [r4, #0]
90014276:	4680      	mov	r8, r0
90014278:	4620      	mov	r0, r4
9001427a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9001427c:	4798      	blx	r3
9001427e:	6823      	ldr	r3, [r4, #0]
90014280:	4681      	mov	r9, r0
90014282:	4620      	mov	r0, r4
90014284:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90014288:	4798      	blx	r3
9001428a:	ab07      	add	r3, sp, #28
9001428c:	f8cd 8004 	str.w	r8, [sp, #4]
90014290:	9300      	str	r3, [sp, #0]
90014292:	463b      	mov	r3, r7
90014294:	e9cd 9002 	strd	r9, r0, [sp, #8]
90014298:	4628      	mov	r0, r5
9001429a:	e896 0006 	ldmia.w	r6, {r1, r2}
9001429e:	f7f1 fa95 	bl	900057cc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900142a2:	b00d      	add	sp, #52	@ 0x34
900142a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900142a8:	24023430 	.word	0x24023430
900142ac:	2402342c 	.word	0x2402342c
900142b0:	24023434 	.word	0x24023434
900142b4:	240233d4 	.word	0x240233d4
900142b8:	24023438 	.word	0x24023438

900142bc <_ZN8touchgfx15ButtonWithLabelD1Ev>:
900142bc:	4770      	bx	lr

900142be <_ZN8touchgfx15ButtonWithLabelD0Ev>:
900142be:	b510      	push	{r4, lr}
900142c0:	4604      	mov	r4, r0
900142c2:	2148      	movs	r1, #72	@ 0x48
900142c4:	f015 f8d2 	bl	9002946c <_ZdlPvj>
900142c8:	4620      	mov	r0, r4
900142ca:	bd10      	pop	{r4, pc}

900142cc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
900142cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900142d0:	b08d      	sub	sp, #52	@ 0x34
900142d2:	4604      	mov	r4, r0
900142d4:	460f      	mov	r7, r1
900142d6:	f7ff ff03 	bl	900140e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
900142da:	4a55      	ldr	r2, [pc, #340]	@ (90014430 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
900142dc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
900142de:	8812      	ldrh	r2, [r2, #0]
900142e0:	429a      	cmp	r2, r3
900142e2:	f240 8082 	bls.w	900143ea <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
900142e6:	4d53      	ldr	r5, [pc, #332]	@ (90014434 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
900142e8:	682a      	ldr	r2, [r5, #0]
900142ea:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
900142ee:	4b52      	ldr	r3, [pc, #328]	@ (90014438 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
900142f0:	681b      	ldr	r3, [r3, #0]
900142f2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900142f6:	2200      	movs	r2, #0
900142f8:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
900142fc:	e9cd 2203 	strd	r2, r2, [sp, #12]
90014300:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
90014304:	2a03      	cmp	r2, #3
90014306:	d811      	bhi.n	9001432c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90014308:	e8df f002 	tbb	[pc, r2]
9001430c:	89727902 	.word	0x89727902
90014310:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90014314:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90014318:	1ad2      	subs	r2, r2, r3
9001431a:	2002      	movs	r0, #2
9001431c:	f8ad 1010 	strh.w	r1, [sp, #16]
90014320:	f8ad 3012 	strh.w	r3, [sp, #18]
90014324:	fb92 f2f0 	sdiv	r2, r2, r0
90014328:	f8ad 200e 	strh.w	r2, [sp, #14]
9001432c:	f10d 080c 	add.w	r8, sp, #12
90014330:	f10d 0914 	add.w	r9, sp, #20
90014334:	e898 0003 	ldmia.w	r8, {r0, r1}
90014338:	e889 0003 	stmia.w	r9, {r0, r1}
9001433c:	4639      	mov	r1, r7
9001433e:	4648      	mov	r0, r9
90014340:	f7fc f99a 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
90014344:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90014348:	2b00      	cmp	r3, #0
9001434a:	dd4e      	ble.n	900143ea <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
9001434c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90014350:	2b00      	cmp	r3, #0
90014352:	dd4a      	ble.n	900143ea <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90014354:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90014358:	4641      	mov	r1, r8
9001435a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
9001435e:	4620      	mov	r0, r4
90014360:	1a9b      	subs	r3, r3, r2
90014362:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90014366:	f8ad 3014 	strh.w	r3, [sp, #20]
9001436a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
9001436e:	1a9b      	subs	r3, r3, r2
90014370:	f8ad 3016 	strh.w	r3, [sp, #22]
90014374:	6823      	ldr	r3, [r4, #0]
90014376:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014378:	4798      	blx	r3
9001437a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9001437e:	2b00      	cmp	r3, #0
90014380:	d053      	beq.n	9001442a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
90014382:	6c22      	ldr	r2, [r4, #64]	@ 0x40
90014384:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
90014386:	682b      	ldr	r3, [r5, #0]
90014388:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
9001438c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90014390:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
90014394:	785b      	ldrb	r3, [r3, #1]
90014396:	9209      	str	r2, [sp, #36]	@ 0x24
90014398:	f3c3 0501 	ubfx	r5, r3, #0, #2
9001439c:	f3c3 0381 	ubfx	r3, r3, #2, #2
900143a0:	9607      	str	r6, [sp, #28]
900143a2:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
900143a6:	2300      	movs	r3, #0
900143a8:	f88d 5020 	strb.w	r5, [sp, #32]
900143ac:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
900143b0:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
900143b4:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
900143b8:	4b20      	ldr	r3, [pc, #128]	@ (9001443c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
900143ba:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
900143be:	681b      	ldr	r3, [r3, #0]
900143c0:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
900143c4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900143c8:	b10a      	cbz	r2, 900143ce <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
900143ca:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
900143cc:	b904      	cbnz	r4, 900143d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
900143ce:	689c      	ldr	r4, [r3, #8]
900143d0:	4b1b      	ldr	r3, [pc, #108]	@ (90014440 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
900143d2:	6818      	ldr	r0, [r3, #0]
900143d4:	f7f1 fa4a 	bl	9000586c <_ZNK8touchgfx5Texts7getTextEt>
900143d8:	ab07      	add	r3, sp, #28
900143da:	9001      	str	r0, [sp, #4]
900143dc:	4620      	mov	r0, r4
900143de:	9300      	str	r3, [sp, #0]
900143e0:	464b      	mov	r3, r9
900143e2:	e898 0006 	ldmia.w	r8, {r1, r2}
900143e6:	f7f1 f9f1 	bl	900057cc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900143ea:	b00d      	add	sp, #52	@ 0x34
900143ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900143f0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
900143f4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
900143f8:	1ad2      	subs	r2, r2, r3
900143fa:	3201      	adds	r2, #1
900143fc:	e78d      	b.n	9001431a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
900143fe:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90014402:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90014406:	1ad2      	subs	r2, r2, r3
90014408:	3201      	adds	r2, #1
9001440a:	2002      	movs	r0, #2
9001440c:	f8ad 3010 	strh.w	r3, [sp, #16]
90014410:	f8ad 1012 	strh.w	r1, [sp, #18]
90014414:	fb92 f2f0 	sdiv	r2, r2, r0
90014418:	f8ad 200c 	strh.w	r2, [sp, #12]
9001441c:	e786      	b.n	9001432c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
9001441e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90014422:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90014426:	1ad2      	subs	r2, r2, r3
90014428:	e7ef      	b.n	9001440a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
9001442a:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9001442c:	e7aa      	b.n	90014384 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
9001442e:	bf00      	nop
90014430:	24023430 	.word	0x24023430
90014434:	2402342c 	.word	0x2402342c
90014438:	24023434 	.word	0x24023434
9001443c:	240233d4 	.word	0x240233d4
90014440:	24023438 	.word	0x24023438

90014444 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90014444:	2101      	movs	r1, #1
90014446:	2200      	movs	r2, #0
90014448:	b510      	push	{r4, lr}
9001444a:	4c13      	ldr	r4, [pc, #76]	@ (90014498 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
9001444c:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90014450:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
90014454:	f64f 71ff 	movw	r1, #65535	@ 0xffff
90014458:	6004      	str	r4, [r0, #0]
9001445a:	4c10      	ldr	r4, [pc, #64]	@ (9001449c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
9001445c:	8082      	strh	r2, [r0, #4]
9001445e:	80c2      	strh	r2, [r0, #6]
90014460:	8102      	strh	r2, [r0, #8]
90014462:	8142      	strh	r2, [r0, #10]
90014464:	8182      	strh	r2, [r0, #12]
90014466:	81c2      	strh	r2, [r0, #14]
90014468:	8202      	strh	r2, [r0, #16]
9001446a:	8242      	strh	r2, [r0, #18]
9001446c:	61c2      	str	r2, [r0, #28]
9001446e:	8402      	strh	r2, [r0, #32]
90014470:	8442      	strh	r2, [r0, #34]	@ 0x22
90014472:	6282      	str	r2, [r0, #40]	@ 0x28
90014474:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
90014478:	85c1      	strh	r1, [r0, #46]	@ 0x2e
9001447a:	8601      	strh	r1, [r0, #48]	@ 0x30
9001447c:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
90014480:	6344      	str	r4, [r0, #52]	@ 0x34
90014482:	8701      	strh	r1, [r0, #56]	@ 0x38
90014484:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
90014488:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
9001448c:	e9c0 2205 	strd	r2, r2, [r0, #20]
90014490:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
90014494:	bd10      	pop	{r4, pc}
90014496:	bf00      	nop
90014498:	9002dbc8 	.word	0x9002dbc8
9001449c:	9002c514 	.word	0x9002c514

900144a0 <_ZN8touchgfx7OutlineD1Ev>:
900144a0:	4770      	bx	lr

900144a2 <_ZN8touchgfx7OutlineD0Ev>:
900144a2:	b510      	push	{r4, lr}
900144a4:	4604      	mov	r4, r0
900144a6:	2130      	movs	r1, #48	@ 0x30
900144a8:	f014 ffe0 	bl	9002946c <_ZdlPvj>
900144ac:	4620      	mov	r0, r4
900144ae:	bd10      	pop	{r4, pc}

900144b0 <_ZN8touchgfx7Outline5resetEv>:
900144b0:	b510      	push	{r4, lr}
900144b2:	4604      	mov	r4, r0
900144b4:	f000 fe86 	bl	900151c4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
900144b8:	60e0      	str	r0, [r4, #12]
900144ba:	f000 fe89 	bl	900151d0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
900144be:	68e3      	ldr	r3, [r4, #12]
900144c0:	08c0      	lsrs	r0, r0, #3
900144c2:	2200      	movs	r2, #0
900144c4:	f647 71ff 	movw	r1, #32767	@ 0x7fff
900144c8:	6123      	str	r3, [r4, #16]
900144ca:	3801      	subs	r0, #1
900144cc:	60a2      	str	r2, [r4, #8]
900144ce:	6060      	str	r0, [r4, #4]
900144d0:	8019      	strh	r1, [r3, #0]
900144d2:	8059      	strh	r1, [r3, #2]
900144d4:	809a      	strh	r2, [r3, #4]
900144d6:	80da      	strh	r2, [r3, #6]
900144d8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900144da:	f023 0301 	bic.w	r3, r3, #1
900144de:	f043 0302 	orr.w	r3, r3, #2
900144e2:	6263      	str	r3, [r4, #36]	@ 0x24
900144e4:	bd10      	pop	{r4, pc}
	...

900144e8 <_ZN8touchgfx7OutlineC1Ev>:
900144e8:	4b0a      	ldr	r3, [pc, #40]	@ (90014514 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
900144ea:	b510      	push	{r4, lr}
900144ec:	6003      	str	r3, [r0, #0]
900144ee:	2300      	movs	r3, #0
900144f0:	4604      	mov	r4, r0
900144f2:	6243      	str	r3, [r0, #36]	@ 0x24
900144f4:	e9c0 3301 	strd	r3, r3, [r0, #4]
900144f8:	e9c0 3303 	strd	r3, r3, [r0, #12]
900144fc:	e9c0 3305 	strd	r3, r3, [r0, #20]
90014500:	e9c0 3307 	strd	r3, r3, [r0, #28]
90014504:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90014508:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
9001450c:	f7ff ffd0 	bl	900144b0 <_ZN8touchgfx7Outline5resetEv>
90014510:	4620      	mov	r0, r4
90014512:	bd10      	pop	{r4, pc}
90014514:	9002dc3c 	.word	0x9002dc3c

90014518 <_ZN8touchgfx7Outline10renderLineEiiii>:
90014518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001451c:	b093      	sub	sp, #76	@ 0x4c
9001451e:	1156      	asrs	r6, r2, #5
90014520:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90014522:	9305      	str	r3, [sp, #20]
90014524:	1153      	asrs	r3, r2, #5
90014526:	f004 051f 	and.w	r5, r4, #31
9001452a:	9303      	str	r3, [sp, #12]
9001452c:	1163      	asrs	r3, r4, #5
9001452e:	9504      	str	r5, [sp, #16]
90014530:	1165      	asrs	r5, r4, #5
90014532:	9306      	str	r3, [sp, #24]
90014534:	f002 031f 	and.w	r3, r2, #31
90014538:	42ae      	cmp	r6, r5
9001453a:	f040 80f4 	bne.w	90014726 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
9001453e:	9c04      	ldr	r4, [sp, #16]
90014540:	9a05      	ldr	r2, [sp, #20]
90014542:	42a3      	cmp	r3, r4
90014544:	ea4f 1e62 	mov.w	lr, r2, asr #5
90014548:	6902      	ldr	r2, [r0, #16]
9001454a:	d125      	bne.n	90014598 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
9001454c:	f9b2 3000 	ldrsh.w	r3, [r2]
90014550:	459e      	cmp	lr, r3
90014552:	d103      	bne.n	9001455c <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90014554:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90014558:	429e      	cmp	r6, r3
9001455a:	d035      	beq.n	900145c8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001455c:	88d1      	ldrh	r1, [r2, #6]
9001455e:	8893      	ldrh	r3, [r2, #4]
90014560:	430b      	orrs	r3, r1
90014562:	d010      	beq.n	90014586 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014564:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90014568:	2b00      	cmp	r3, #0
9001456a:	db0c      	blt.n	90014586 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
9001456c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9001456e:	428b      	cmp	r3, r1
90014570:	da09      	bge.n	90014586 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014572:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90014576:	428b      	cmp	r3, r1
90014578:	f103 0301 	add.w	r3, r3, #1
9001457c:	bf38      	it	cc
9001457e:	3208      	addcc	r2, #8
90014580:	6083      	str	r3, [r0, #8]
90014582:	bf38      	it	cc
90014584:	6102      	strcc	r2, [r0, #16]
90014586:	6903      	ldr	r3, [r0, #16]
90014588:	9a03      	ldr	r2, [sp, #12]
9001458a:	f8a3 e000 	strh.w	lr, [r3]
9001458e:	805a      	strh	r2, [r3, #2]
90014590:	2200      	movs	r2, #0
90014592:	809a      	strh	r2, [r3, #4]
90014594:	80da      	strh	r2, [r3, #6]
90014596:	e017      	b.n	900145c8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014598:	9c05      	ldr	r4, [sp, #20]
9001459a:	114e      	asrs	r6, r1, #5
9001459c:	f001 0c1f 	and.w	ip, r1, #31
900145a0:	f8b2 8004 	ldrh.w	r8, [r2, #4]
900145a4:	f004 041f 	and.w	r4, r4, #31
900145a8:	4576      	cmp	r6, lr
900145aa:	f8b2 a006 	ldrh.w	sl, [r2, #6]
900145ae:	9402      	str	r4, [sp, #8]
900145b0:	9c04      	ldr	r4, [sp, #16]
900145b2:	eba4 0403 	sub.w	r4, r4, r3
900145b6:	d10a      	bne.n	900145ce <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
900145b8:	9b02      	ldr	r3, [sp, #8]
900145ba:	44a0      	add	r8, r4
900145bc:	449c      	add	ip, r3
900145be:	f8a2 8004 	strh.w	r8, [r2, #4]
900145c2:	fb04 a40c 	mla	r4, r4, ip, sl
900145c6:	80d4      	strh	r4, [r2, #6]
900145c8:	b013      	add	sp, #76	@ 0x4c
900145ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900145ce:	9d05      	ldr	r5, [sp, #20]
900145d0:	1a69      	subs	r1, r5, r1
900145d2:	bf51      	iteee	pl
900145d4:	f1cc 0520 	rsbpl	r5, ip, #32
900145d8:	fb04 f40c 	mulmi.w	r4, r4, ip
900145dc:	4249      	negmi	r1, r1
900145de:	2500      	movmi	r5, #0
900145e0:	bf5d      	ittte	pl
900145e2:	436c      	mulpl	r4, r5
900145e4:	2520      	movpl	r5, #32
900145e6:	f04f 0901 	movpl.w	r9, #1
900145ea:	f04f 39ff 	movmi.w	r9, #4294967295
900145ee:	9501      	str	r5, [sp, #4]
900145f0:	9f01      	ldr	r7, [sp, #4]
900145f2:	444e      	add	r6, r9
900145f4:	fb94 f5f1 	sdiv	r5, r4, r1
900145f8:	fb01 4415 	mls	r4, r1, r5, r4
900145fc:	44bc      	add	ip, r7
900145fe:	2c00      	cmp	r4, #0
90014600:	bfbc      	itt	lt
90014602:	f105 35ff 	addlt.w	r5, r5, #4294967295
90014606:	1864      	addlt	r4, r4, r1
90014608:	44a8      	add	r8, r5
9001460a:	fb05 ac0c 	mla	ip, r5, ip, sl
9001460e:	f8a2 8004 	strh.w	r8, [r2, #4]
90014612:	f8a2 c006 	strh.w	ip, [r2, #6]
90014616:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001461a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
9001461e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90014622:	ea58 0202 	orrs.w	r2, r8, r2
90014626:	d011      	beq.n	9001464c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014628:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
9001462c:	f1b8 0f00 	cmp.w	r8, #0
90014630:	db0c      	blt.n	9001464c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014632:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90014634:	4590      	cmp	r8, r2
90014636:	da09      	bge.n	9001464c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014638:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
9001463c:	4590      	cmp	r8, r2
9001463e:	bf3c      	itt	cc
90014640:	f10c 0208 	addcc.w	r2, ip, #8
90014644:	6102      	strcc	r2, [r0, #16]
90014646:	f108 0201 	add.w	r2, r8, #1
9001464a:	6082      	str	r2, [r0, #8]
9001464c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014650:	2700      	movs	r7, #0
90014652:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90014656:	45b6      	cmp	lr, r6
90014658:	f8ac 6000 	strh.w	r6, [ip]
9001465c:	442b      	add	r3, r5
9001465e:	f8ac 2002 	strh.w	r2, [ip, #2]
90014662:	f8ac 7004 	strh.w	r7, [ip, #4]
90014666:	f8ac 7006 	strh.w	r7, [ip, #6]
9001466a:	d04b      	beq.n	90014704 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
9001466c:	9f04      	ldr	r7, [sp, #16]
9001466e:	1a64      	subs	r4, r4, r1
90014670:	f04f 0a00 	mov.w	sl, #0
90014674:	1aff      	subs	r7, r7, r3
90014676:	443d      	add	r5, r7
90014678:	016d      	lsls	r5, r5, #5
9001467a:	fb95 f8f1 	sdiv	r8, r5, r1
9001467e:	fb01 5518 	mls	r5, r1, r8, r5
90014682:	2d00      	cmp	r5, #0
90014684:	bfbc      	itt	lt
90014686:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001468a:	186d      	addlt	r5, r5, r1
9001468c:	f108 0701 	add.w	r7, r8, #1
90014690:	9703      	str	r7, [sp, #12]
90014692:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014696:	1964      	adds	r4, r4, r5
90014698:	444e      	add	r6, r9
9001469a:	bf54      	ite	pl
9001469c:	9f03      	ldrpl	r7, [sp, #12]
9001469e:	4647      	movmi	r7, r8
900146a0:	f8bc b004 	ldrh.w	fp, [ip, #4]
900146a4:	bf58      	it	pl
900146a6:	1a64      	subpl	r4, r4, r1
900146a8:	443b      	add	r3, r7
900146aa:	44bb      	add	fp, r7
900146ac:	f8ac b004 	strh.w	fp, [ip, #4]
900146b0:	f8bc b006 	ldrh.w	fp, [ip, #6]
900146b4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900146b8:	f8ac b006 	strh.w	fp, [ip, #6]
900146bc:	f8d0 c010 	ldr.w	ip, [r0, #16]
900146c0:	f8bc b006 	ldrh.w	fp, [ip, #6]
900146c4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900146c8:	ea5b 0707 	orrs.w	r7, fp, r7
900146cc:	d011      	beq.n	900146f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
900146ce:	f9bc b002 	ldrsh.w	fp, [ip, #2]
900146d2:	f1bb 0f00 	cmp.w	fp, #0
900146d6:	db0c      	blt.n	900146f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
900146d8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900146da:	45bb      	cmp	fp, r7
900146dc:	da09      	bge.n	900146f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
900146de:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900146e2:	45bb      	cmp	fp, r7
900146e4:	bf3c      	itt	cc
900146e6:	f10c 0708 	addcc.w	r7, ip, #8
900146ea:	6107      	strcc	r7, [r0, #16]
900146ec:	f10b 0701 	add.w	r7, fp, #1
900146f0:	6087      	str	r7, [r0, #8]
900146f2:	6907      	ldr	r7, [r0, #16]
900146f4:	45b6      	cmp	lr, r6
900146f6:	803e      	strh	r6, [r7, #0]
900146f8:	807a      	strh	r2, [r7, #2]
900146fa:	f8a7 a004 	strh.w	sl, [r7, #4]
900146fe:	f8a7 a006 	strh.w	sl, [r7, #6]
90014702:	d1c6      	bne.n	90014692 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90014704:	9a04      	ldr	r2, [sp, #16]
90014706:	1ad3      	subs	r3, r2, r3
90014708:	6902      	ldr	r2, [r0, #16]
9001470a:	8891      	ldrh	r1, [r2, #4]
9001470c:	88d6      	ldrh	r6, [r2, #6]
9001470e:	4419      	add	r1, r3
90014710:	8091      	strh	r1, [r2, #4]
90014712:	9902      	ldr	r1, [sp, #8]
90014714:	f101 0c20 	add.w	ip, r1, #32
90014718:	9901      	ldr	r1, [sp, #4]
9001471a:	ebac 0c01 	sub.w	ip, ip, r1
9001471e:	fb03 630c 	mla	r3, r3, ip, r6
90014722:	80d3      	strh	r3, [r2, #6]
90014724:	e750      	b.n	900145c8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014726:	9d05      	ldr	r5, [sp, #20]
90014728:	1aa2      	subs	r2, r4, r2
9001472a:	eba5 0501 	sub.w	r5, r5, r1
9001472e:	9202      	str	r2, [sp, #8]
90014730:	9508      	str	r5, [sp, #32]
90014732:	f140 8128 	bpl.w	90014986 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90014736:	9a03      	ldr	r2, [sp, #12]
90014738:	2a00      	cmp	r2, #0
9001473a:	f6ff af45 	blt.w	900145c8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001473e:	9a02      	ldr	r2, [sp, #8]
90014740:	f04f 34ff 	mov.w	r4, #4294967295
90014744:	4252      	negs	r2, r2
90014746:	940b      	str	r4, [sp, #44]	@ 0x2c
90014748:	2400      	movs	r4, #0
9001474a:	9202      	str	r2, [sp, #8]
9001474c:	9a06      	ldr	r2, [sp, #24]
9001474e:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90014752:	9206      	str	r2, [sp, #24]
90014754:	462a      	mov	r2, r5
90014756:	435a      	muls	r2, r3
90014758:	9401      	str	r4, [sp, #4]
9001475a:	9c02      	ldr	r4, [sp, #8]
9001475c:	9d02      	ldr	r5, [sp, #8]
9001475e:	fb92 f4f4 	sdiv	r4, r2, r4
90014762:	fb05 2214 	mls	r2, r5, r4, r2
90014766:	2a00      	cmp	r2, #0
90014768:	9207      	str	r2, [sp, #28]
9001476a:	bfbc      	itt	lt
9001476c:	1952      	addlt	r2, r2, r5
9001476e:	f104 34ff 	addlt.w	r4, r4, #4294967295
90014772:	6905      	ldr	r5, [r0, #16]
90014774:	bfb8      	it	lt
90014776:	9207      	strlt	r2, [sp, #28]
90014778:	eb04 0901 	add.w	r9, r4, r1
9001477c:	9a01      	ldr	r2, [sp, #4]
9001477e:	ea4f 1669 	mov.w	r6, r9, asr #5
90014782:	429a      	cmp	r2, r3
90014784:	f040 8111 	bne.w	900149aa <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90014788:	f9b5 3000 	ldrsh.w	r3, [r5]
9001478c:	429e      	cmp	r6, r3
9001478e:	d104      	bne.n	9001479a <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90014790:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90014794:	9a03      	ldr	r2, [sp, #12]
90014796:	429a      	cmp	r2, r3
90014798:	d01b      	beq.n	900147d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
9001479a:	88ea      	ldrh	r2, [r5, #6]
9001479c:	88ab      	ldrh	r3, [r5, #4]
9001479e:	4313      	orrs	r3, r2
900147a0:	d010      	beq.n	900147c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
900147a2:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900147a6:	2a00      	cmp	r2, #0
900147a8:	db0c      	blt.n	900147c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
900147aa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900147ac:	429a      	cmp	r2, r3
900147ae:	da09      	bge.n	900147c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
900147b0:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
900147b4:	429a      	cmp	r2, r3
900147b6:	f102 0201 	add.w	r2, r2, #1
900147ba:	bf38      	it	cc
900147bc:	3508      	addcc	r5, #8
900147be:	6082      	str	r2, [r0, #8]
900147c0:	bf38      	it	cc
900147c2:	6105      	strcc	r5, [r0, #16]
900147c4:	6903      	ldr	r3, [r0, #16]
900147c6:	9a03      	ldr	r2, [sp, #12]
900147c8:	801e      	strh	r6, [r3, #0]
900147ca:	805a      	strh	r2, [r3, #2]
900147cc:	2200      	movs	r2, #0
900147ce:	809a      	strh	r2, [r3, #4]
900147d0:	80da      	strh	r2, [r3, #6]
900147d2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900147d4:	9a03      	ldr	r2, [sp, #12]
900147d6:	6901      	ldr	r1, [r0, #16]
900147d8:	441a      	add	r2, r3
900147da:	f9b1 3000 	ldrsh.w	r3, [r1]
900147de:	42b3      	cmp	r3, r6
900147e0:	d103      	bne.n	900147ea <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
900147e2:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
900147e6:	429a      	cmp	r2, r3
900147e8:	d01a      	beq.n	90014820 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
900147ea:	88cc      	ldrh	r4, [r1, #6]
900147ec:	888b      	ldrh	r3, [r1, #4]
900147ee:	4323      	orrs	r3, r4
900147f0:	d010      	beq.n	90014814 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900147f2:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
900147f6:	2c00      	cmp	r4, #0
900147f8:	db0c      	blt.n	90014814 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900147fa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900147fc:	429c      	cmp	r4, r3
900147fe:	da09      	bge.n	90014814 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90014800:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90014804:	429c      	cmp	r4, r3
90014806:	f104 0401 	add.w	r4, r4, #1
9001480a:	bf38      	it	cc
9001480c:	3108      	addcc	r1, #8
9001480e:	6084      	str	r4, [r0, #8]
90014810:	bf38      	it	cc
90014812:	6101      	strcc	r1, [r0, #16]
90014814:	6903      	ldr	r3, [r0, #16]
90014816:	2100      	movs	r1, #0
90014818:	801e      	strh	r6, [r3, #0]
9001481a:	805a      	strh	r2, [r3, #2]
9001481c:	8099      	strh	r1, [r3, #4]
9001481e:	80d9      	strh	r1, [r3, #6]
90014820:	9b06      	ldr	r3, [sp, #24]
90014822:	4293      	cmp	r3, r2
90014824:	f000 8082 	beq.w	9001492c <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90014828:	9b08      	ldr	r3, [sp, #32]
9001482a:	9902      	ldr	r1, [sp, #8]
9001482c:	015b      	lsls	r3, r3, #5
9001482e:	9c02      	ldr	r4, [sp, #8]
90014830:	fb93 f1f1 	sdiv	r1, r3, r1
90014834:	fb04 3311 	mls	r3, r4, r1, r3
90014838:	9103      	str	r1, [sp, #12]
9001483a:	2b00      	cmp	r3, #0
9001483c:	9308      	str	r3, [sp, #32]
9001483e:	da04      	bge.n	9001484a <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90014840:	1e4b      	subs	r3, r1, #1
90014842:	9303      	str	r3, [sp, #12]
90014844:	9b08      	ldr	r3, [sp, #32]
90014846:	4423      	add	r3, r4
90014848:	9308      	str	r3, [sp, #32]
9001484a:	9b07      	ldr	r3, [sp, #28]
9001484c:	464f      	mov	r7, r9
9001484e:	9902      	ldr	r1, [sp, #8]
90014850:	2600      	movs	r6, #0
90014852:	1a5b      	subs	r3, r3, r1
90014854:	9307      	str	r3, [sp, #28]
90014856:	9b01      	ldr	r3, [sp, #4]
90014858:	f1c3 0320 	rsb	r3, r3, #32
9001485c:	930e      	str	r3, [sp, #56]	@ 0x38
9001485e:	990e      	ldr	r1, [sp, #56]	@ 0x38
90014860:	9b01      	ldr	r3, [sp, #4]
90014862:	1a5b      	subs	r3, r3, r1
90014864:	930a      	str	r3, [sp, #40]	@ 0x28
90014866:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
9001486a:	185b      	adds	r3, r3, r1
9001486c:	bf58      	it	pl
9001486e:	9902      	ldrpl	r1, [sp, #8]
90014870:	9307      	str	r3, [sp, #28]
90014872:	bf57      	itett	pl
90014874:	1a5b      	subpl	r3, r3, r1
90014876:	9903      	ldrmi	r1, [sp, #12]
90014878:	9307      	strpl	r3, [sp, #28]
9001487a:	9b03      	ldrpl	r3, [sp, #12]
9001487c:	bf58      	it	pl
9001487e:	1c59      	addpl	r1, r3, #1
90014880:	2a00      	cmp	r2, #0
90014882:	4489      	add	r9, r1
90014884:	ea4f 1a69 	mov.w	sl, r9, asr #5
90014888:	db2e      	blt.n	900148e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001488a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001488c:	4293      	cmp	r3, r2
9001488e:	dd2b      	ble.n	900148e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014890:	9c01      	ldr	r4, [sp, #4]
90014892:	6905      	ldr	r5, [r0, #16]
90014894:	46a0      	mov	r8, r4
90014896:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90014898:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
9001489c:	45a0      	cmp	r8, r4
9001489e:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
900148a2:	f040 814c 	bne.w	90014b3e <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
900148a6:	f9b5 1000 	ldrsh.w	r1, [r5]
900148aa:	4551      	cmp	r1, sl
900148ac:	d103      	bne.n	900148b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
900148ae:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
900148b2:	4291      	cmp	r1, r2
900148b4:	d018      	beq.n	900148e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900148b6:	ea5c 010e 	orrs.w	r1, ip, lr
900148ba:	d00f      	beq.n	900148dc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
900148bc:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
900148c0:	2900      	cmp	r1, #0
900148c2:	db0b      	blt.n	900148dc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
900148c4:	428b      	cmp	r3, r1
900148c6:	dd09      	ble.n	900148dc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
900148c8:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
900148cc:	4299      	cmp	r1, r3
900148ce:	f101 0101 	add.w	r1, r1, #1
900148d2:	bf38      	it	cc
900148d4:	3508      	addcc	r5, #8
900148d6:	6081      	str	r1, [r0, #8]
900148d8:	bf38      	it	cc
900148da:	6105      	strcc	r5, [r0, #16]
900148dc:	6903      	ldr	r3, [r0, #16]
900148de:	f8a3 a000 	strh.w	sl, [r3]
900148e2:	805a      	strh	r2, [r3, #2]
900148e4:	809e      	strh	r6, [r3, #4]
900148e6:	80de      	strh	r6, [r3, #6]
900148e8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900148ea:	6901      	ldr	r1, [r0, #16]
900148ec:	441a      	add	r2, r3
900148ee:	88cc      	ldrh	r4, [r1, #6]
900148f0:	888b      	ldrh	r3, [r1, #4]
900148f2:	4323      	orrs	r3, r4
900148f4:	d010      	beq.n	90014918 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900148f6:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
900148fa:	2c00      	cmp	r4, #0
900148fc:	db0c      	blt.n	90014918 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900148fe:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90014900:	429c      	cmp	r4, r3
90014902:	da09      	bge.n	90014918 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90014904:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90014908:	429c      	cmp	r4, r3
9001490a:	f104 0401 	add.w	r4, r4, #1
9001490e:	bf38      	it	cc
90014910:	3108      	addcc	r1, #8
90014912:	6084      	str	r4, [r0, #8]
90014914:	bf38      	it	cc
90014916:	6101      	strcc	r1, [r0, #16]
90014918:	6903      	ldr	r3, [r0, #16]
9001491a:	464f      	mov	r7, r9
9001491c:	f8a3 a000 	strh.w	sl, [r3]
90014920:	805a      	strh	r2, [r3, #2]
90014922:	809e      	strh	r6, [r3, #4]
90014924:	80de      	strh	r6, [r3, #6]
90014926:	9b06      	ldr	r3, [sp, #24]
90014928:	4293      	cmp	r3, r2
9001492a:	d19c      	bne.n	90014866 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
9001492c:	9b01      	ldr	r3, [sp, #4]
9001492e:	6907      	ldr	r7, [r0, #16]
90014930:	f1c3 0620 	rsb	r6, r3, #32
90014934:	9b05      	ldr	r3, [sp, #20]
90014936:	ea4f 1e63 	mov.w	lr, r3, asr #5
9001493a:	9b04      	ldr	r3, [sp, #16]
9001493c:	429e      	cmp	r6, r3
9001493e:	f040 81c7 	bne.w	90014cd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90014942:	f9b7 3000 	ldrsh.w	r3, [r7]
90014946:	459e      	cmp	lr, r3
90014948:	d104      	bne.n	90014954 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
9001494a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
9001494e:	429a      	cmp	r2, r3
90014950:	f43f ae3a 	beq.w	900145c8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014954:	88f9      	ldrh	r1, [r7, #6]
90014956:	88bb      	ldrh	r3, [r7, #4]
90014958:	430b      	orrs	r3, r1
9001495a:	d010      	beq.n	9001497e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
9001495c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90014960:	2b00      	cmp	r3, #0
90014962:	db0c      	blt.n	9001497e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90014964:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90014966:	428b      	cmp	r3, r1
90014968:	da09      	bge.n	9001497e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
9001496a:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
9001496e:	428b      	cmp	r3, r1
90014970:	f103 0301 	add.w	r3, r3, #1
90014974:	bf38      	it	cc
90014976:	3708      	addcc	r7, #8
90014978:	6083      	str	r3, [r0, #8]
9001497a:	bf38      	it	cc
9001497c:	6107      	strcc	r7, [r0, #16]
9001497e:	6903      	ldr	r3, [r0, #16]
90014980:	f8a3 e000 	strh.w	lr, [r3]
90014984:	e603      	b.n	9001458e <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90014986:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90014988:	9c03      	ldr	r4, [sp, #12]
9001498a:	42a2      	cmp	r2, r4
9001498c:	f6ff ae1c 	blt.w	900145c8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014990:	9c06      	ldr	r4, [sp, #24]
90014992:	42a2      	cmp	r2, r4
90014994:	9c08      	ldr	r4, [sp, #32]
90014996:	bfbc      	itt	lt
90014998:	3201      	addlt	r2, #1
9001499a:	9206      	strlt	r2, [sp, #24]
9001499c:	f1c3 0220 	rsb	r2, r3, #32
900149a0:	4362      	muls	r2, r4
900149a2:	2401      	movs	r4, #1
900149a4:	940b      	str	r4, [sp, #44]	@ 0x2c
900149a6:	2420      	movs	r4, #32
900149a8:	e6d6      	b.n	90014758 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
900149aa:	ea4f 1861 	mov.w	r8, r1, asr #5
900149ae:	f009 021f 	and.w	r2, r9, #31
900149b2:	f001 011f 	and.w	r1, r1, #31
900149b6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
900149ba:	920c      	str	r2, [sp, #48]	@ 0x30
900149bc:	45b0      	cmp	r8, r6
900149be:	9a01      	ldr	r2, [sp, #4]
900149c0:	f8b5 a006 	ldrh.w	sl, [r5, #6]
900149c4:	eba2 0203 	sub.w	r2, r2, r3
900149c8:	d108      	bne.n	900149dc <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
900149ca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900149cc:	4496      	add	lr, r2
900149ce:	4419      	add	r1, r3
900149d0:	f8a5 e004 	strh.w	lr, [r5, #4]
900149d4:	fb02 a101 	mla	r1, r2, r1, sl
900149d8:	80e9      	strh	r1, [r5, #6]
900149da:	e6fa      	b.n	900147d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900149dc:	2c00      	cmp	r4, #0
900149de:	f2c0 80a7 	blt.w	90014b30 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
900149e2:	2701      	movs	r7, #1
900149e4:	f1c1 0c20 	rsb	ip, r1, #32
900149e8:	970a      	str	r7, [sp, #40]	@ 0x28
900149ea:	2720      	movs	r7, #32
900149ec:	fb02 f20c 	mul.w	r2, r2, ip
900149f0:	9709      	str	r7, [sp, #36]	@ 0x24
900149f2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900149f4:	fb92 fcf4 	sdiv	ip, r2, r4
900149f8:	fb04 221c 	mls	r2, r4, ip, r2
900149fc:	4439      	add	r1, r7
900149fe:	2a00      	cmp	r2, #0
90014a00:	bfbc      	itt	lt
90014a02:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90014a06:	1912      	addlt	r2, r2, r4
90014a08:	fb0c a101 	mla	r1, ip, r1, sl
90014a0c:	44e6      	add	lr, ip
90014a0e:	80e9      	strh	r1, [r5, #6]
90014a10:	990a      	ldr	r1, [sp, #40]	@ 0x28
90014a12:	f8a5 e004 	strh.w	lr, [r5, #4]
90014a16:	eb08 0501 	add.w	r5, r8, r1
90014a1a:	6901      	ldr	r1, [r0, #16]
90014a1c:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90014a20:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90014a24:	ea58 070e 	orrs.w	r7, r8, lr
90014a28:	d010      	beq.n	90014a4c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90014a2a:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
90014a2e:	f1be 0f00 	cmp.w	lr, #0
90014a32:	db0b      	blt.n	90014a4c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90014a34:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014a36:	45be      	cmp	lr, r7
90014a38:	da08      	bge.n	90014a4c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90014a3a:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90014a3e:	45be      	cmp	lr, r7
90014a40:	bf3c      	itt	cc
90014a42:	3108      	addcc	r1, #8
90014a44:	6101      	strcc	r1, [r0, #16]
90014a46:	f10e 0101 	add.w	r1, lr, #1
90014a4a:	6081      	str	r1, [r0, #8]
90014a4c:	6901      	ldr	r1, [r0, #16]
90014a4e:	f04f 0e00 	mov.w	lr, #0
90014a52:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90014a56:	42ae      	cmp	r6, r5
90014a58:	800d      	strh	r5, [r1, #0]
90014a5a:	4463      	add	r3, ip
90014a5c:	f8a1 8002 	strh.w	r8, [r1, #2]
90014a60:	f8a1 e004 	strh.w	lr, [r1, #4]
90014a64:	f8a1 e006 	strh.w	lr, [r1, #6]
90014a68:	d053      	beq.n	90014b12 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90014a6a:	9901      	ldr	r1, [sp, #4]
90014a6c:	1b12      	subs	r2, r2, r4
90014a6e:	1ac9      	subs	r1, r1, r3
90014a70:	4461      	add	r1, ip
90014a72:	0149      	lsls	r1, r1, #5
90014a74:	fb91 fef4 	sdiv	lr, r1, r4
90014a78:	fb04 111e 	mls	r1, r4, lr, r1
90014a7c:	2900      	cmp	r1, #0
90014a7e:	bfbc      	itt	lt
90014a80:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90014a84:	1909      	addlt	r1, r1, r4
90014a86:	f10e 0701 	add.w	r7, lr, #1
90014a8a:	970d      	str	r7, [sp, #52]	@ 0x34
90014a8c:	f8d0 a010 	ldr.w	sl, [r0, #16]
90014a90:	1852      	adds	r2, r2, r1
90014a92:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90014a94:	bf54      	ite	pl
90014a96:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
90014a9a:	46f4      	movmi	ip, lr
90014a9c:	f8ba b004 	ldrh.w	fp, [sl, #4]
90014aa0:	bf58      	it	pl
90014aa2:	1b12      	subpl	r2, r2, r4
90014aa4:	4463      	add	r3, ip
90014aa6:	443d      	add	r5, r7
90014aa8:	44e3      	add	fp, ip
90014aaa:	f8aa b004 	strh.w	fp, [sl, #4]
90014aae:	f8ba b006 	ldrh.w	fp, [sl, #6]
90014ab2:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90014ab6:	f8aa b006 	strh.w	fp, [sl, #6]
90014aba:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014abe:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014ac2:	f8bc a004 	ldrh.w	sl, [ip, #4]
90014ac6:	ea5b 070a 	orrs.w	r7, fp, sl
90014aca:	d014      	beq.n	90014af6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90014acc:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90014ad0:	f1ba 0f00 	cmp.w	sl, #0
90014ad4:	db0f      	blt.n	90014af6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90014ad6:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014ad8:	45ba      	cmp	sl, r7
90014ada:	da0c      	bge.n	90014af6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90014adc:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90014ae0:	45ba      	cmp	sl, r7
90014ae2:	f10a 0a01 	add.w	sl, sl, #1
90014ae6:	bf38      	it	cc
90014ae8:	f10c 0c08 	addcc.w	ip, ip, #8
90014aec:	f8c0 a008 	str.w	sl, [r0, #8]
90014af0:	bf38      	it	cc
90014af2:	f8c0 c010 	strcc.w	ip, [r0, #16]
90014af6:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014afa:	f04f 0700 	mov.w	r7, #0
90014afe:	42ae      	cmp	r6, r5
90014b00:	f8ac 5000 	strh.w	r5, [ip]
90014b04:	f8ac 8002 	strh.w	r8, [ip, #2]
90014b08:	f8ac 7004 	strh.w	r7, [ip, #4]
90014b0c:	f8ac 7006 	strh.w	r7, [ip, #6]
90014b10:	d1bc      	bne.n	90014a8c <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90014b12:	6904      	ldr	r4, [r0, #16]
90014b14:	9a01      	ldr	r2, [sp, #4]
90014b16:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014b18:	1ad3      	subs	r3, r2, r3
90014b1a:	88a2      	ldrh	r2, [r4, #4]
90014b1c:	3120      	adds	r1, #32
90014b1e:	441a      	add	r2, r3
90014b20:	80a2      	strh	r2, [r4, #4]
90014b22:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90014b24:	1a89      	subs	r1, r1, r2
90014b26:	88e2      	ldrh	r2, [r4, #6]
90014b28:	fb03 2301 	mla	r3, r3, r1, r2
90014b2c:	80e3      	strh	r3, [r4, #6]
90014b2e:	e650      	b.n	900147d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90014b30:	f04f 37ff 	mov.w	r7, #4294967295
90014b34:	434a      	muls	r2, r1
90014b36:	4264      	negs	r4, r4
90014b38:	970a      	str	r7, [sp, #40]	@ 0x28
90014b3a:	2700      	movs	r7, #0
90014b3c:	e758      	b.n	900149f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
90014b3e:	ea4f 1867 	mov.w	r8, r7, asr #5
90014b42:	f009 031f 	and.w	r3, r9, #31
90014b46:	f007 071f 	and.w	r7, r7, #31
90014b4a:	fa1f fc8c 	uxth.w	ip, ip
90014b4e:	45d0      	cmp	r8, sl
90014b50:	930f      	str	r3, [sp, #60]	@ 0x3c
90014b52:	fa1f fe8e 	uxth.w	lr, lr
90014b56:	d10a      	bne.n	90014b6e <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90014b58:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90014b5a:	449c      	add	ip, r3
90014b5c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90014b5e:	441f      	add	r7, r3
90014b60:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90014b62:	f8a5 c004 	strh.w	ip, [r5, #4]
90014b66:	fb03 e707 	mla	r7, r3, r7, lr
90014b6a:	80ef      	strh	r7, [r5, #6]
90014b6c:	e6bc      	b.n	900148e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014b6e:	2900      	cmp	r1, #0
90014b70:	f2c0 80a6 	blt.w	90014cc0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90014b74:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90014b76:	f1c7 0320 	rsb	r3, r7, #32
90014b7a:	4363      	muls	r3, r4
90014b7c:	2401      	movs	r4, #1
90014b7e:	940d      	str	r4, [sp, #52]	@ 0x34
90014b80:	2420      	movs	r4, #32
90014b82:	940c      	str	r4, [sp, #48]	@ 0x30
90014b84:	fb93 f4f1 	sdiv	r4, r3, r1
90014b88:	fb01 3b14 	mls	fp, r1, r4, r3
90014b8c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014b8e:	f1bb 0f00 	cmp.w	fp, #0
90014b92:	441f      	add	r7, r3
90014b94:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90014b96:	bfbc      	itt	lt
90014b98:	f104 34ff 	addlt.w	r4, r4, #4294967295
90014b9c:	448b      	addlt	fp, r1
90014b9e:	fb04 e707 	mla	r7, r4, r7, lr
90014ba2:	44a4      	add	ip, r4
90014ba4:	80ef      	strh	r7, [r5, #6]
90014ba6:	f8a5 c004 	strh.w	ip, [r5, #4]
90014baa:	eb08 0503 	add.w	r5, r8, r3
90014bae:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014bb2:	f8bc e006 	ldrh.w	lr, [ip, #6]
90014bb6:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90014bba:	ea5e 0307 	orrs.w	r3, lr, r7
90014bbe:	d011      	beq.n	90014be4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90014bc0:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90014bc4:	f1be 0f00 	cmp.w	lr, #0
90014bc8:	db0c      	blt.n	90014be4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90014bca:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014bcc:	45be      	cmp	lr, r7
90014bce:	da09      	bge.n	90014be4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90014bd0:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90014bd4:	45be      	cmp	lr, r7
90014bd6:	bf3c      	itt	cc
90014bd8:	f10c 0708 	addcc.w	r7, ip, #8
90014bdc:	6107      	strcc	r7, [r0, #16]
90014bde:	f10e 0701 	add.w	r7, lr, #1
90014be2:	6087      	str	r7, [r0, #8]
90014be4:	6907      	ldr	r7, [r0, #16]
90014be6:	b213      	sxth	r3, r2
90014be8:	4555      	cmp	r5, sl
90014bea:	9310      	str	r3, [sp, #64]	@ 0x40
90014bec:	807b      	strh	r3, [r7, #2]
90014bee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90014bf0:	803d      	strh	r5, [r7, #0]
90014bf2:	80be      	strh	r6, [r7, #4]
90014bf4:	eb04 0c03 	add.w	ip, r4, r3
90014bf8:	80fe      	strh	r6, [r7, #6]
90014bfa:	d050      	beq.n	90014c9e <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90014bfc:	9b01      	ldr	r3, [sp, #4]
90014bfe:	eba3 070c 	sub.w	r7, r3, ip
90014c02:	ebab 0301 	sub.w	r3, fp, r1
90014c06:	443c      	add	r4, r7
90014c08:	9309      	str	r3, [sp, #36]	@ 0x24
90014c0a:	0164      	lsls	r4, r4, #5
90014c0c:	fb94 f8f1 	sdiv	r8, r4, r1
90014c10:	fb01 4418 	mls	r4, r1, r8, r4
90014c14:	2c00      	cmp	r4, #0
90014c16:	bfbc      	itt	lt
90014c18:	f108 38ff 	addlt.w	r8, r8, #4294967295
90014c1c:	1864      	addlt	r4, r4, r1
90014c1e:	f108 0701 	add.w	r7, r8, #1
90014c22:	9711      	str	r7, [sp, #68]	@ 0x44
90014c24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014c26:	f8d0 e010 	ldr.w	lr, [r0, #16]
90014c2a:	191b      	adds	r3, r3, r4
90014c2c:	f8be b004 	ldrh.w	fp, [lr, #4]
90014c30:	bf54      	ite	pl
90014c32:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
90014c34:	4647      	movmi	r7, r8
90014c36:	9309      	str	r3, [sp, #36]	@ 0x24
90014c38:	bf58      	it	pl
90014c3a:	1a5b      	subpl	r3, r3, r1
90014c3c:	44bb      	add	fp, r7
90014c3e:	44bc      	add	ip, r7
90014c40:	bf58      	it	pl
90014c42:	9309      	strpl	r3, [sp, #36]	@ 0x24
90014c44:	f8ae b004 	strh.w	fp, [lr, #4]
90014c48:	f8be b006 	ldrh.w	fp, [lr, #6]
90014c4c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90014c50:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
90014c52:	f8ae b006 	strh.w	fp, [lr, #6]
90014c56:	443d      	add	r5, r7
90014c58:	f8d0 e010 	ldr.w	lr, [r0, #16]
90014c5c:	f8be b006 	ldrh.w	fp, [lr, #6]
90014c60:	f8be 7004 	ldrh.w	r7, [lr, #4]
90014c64:	ea5b 0307 	orrs.w	r3, fp, r7
90014c68:	d011      	beq.n	90014c8e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90014c6a:	f9be b002 	ldrsh.w	fp, [lr, #2]
90014c6e:	f1bb 0f00 	cmp.w	fp, #0
90014c72:	db0c      	blt.n	90014c8e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90014c74:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014c76:	45bb      	cmp	fp, r7
90014c78:	da09      	bge.n	90014c8e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90014c7a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90014c7e:	45bb      	cmp	fp, r7
90014c80:	bf3c      	itt	cc
90014c82:	f10e 0708 	addcc.w	r7, lr, #8
90014c86:	6107      	strcc	r7, [r0, #16]
90014c88:	f10b 0701 	add.w	r7, fp, #1
90014c8c:	6087      	str	r7, [r0, #8]
90014c8e:	6907      	ldr	r7, [r0, #16]
90014c90:	4555      	cmp	r5, sl
90014c92:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90014c94:	803d      	strh	r5, [r7, #0]
90014c96:	807b      	strh	r3, [r7, #2]
90014c98:	80be      	strh	r6, [r7, #4]
90014c9a:	80fe      	strh	r6, [r7, #6]
90014c9c:	d1c2      	bne.n	90014c24 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
90014c9e:	9b01      	ldr	r3, [sp, #4]
90014ca0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90014ca2:	eba3 0c0c 	sub.w	ip, r3, ip
90014ca6:	6903      	ldr	r3, [r0, #16]
90014ca8:	3720      	adds	r7, #32
90014caa:	8899      	ldrh	r1, [r3, #4]
90014cac:	4461      	add	r1, ip
90014cae:	8099      	strh	r1, [r3, #4]
90014cb0:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014cb2:	1a7f      	subs	r7, r7, r1
90014cb4:	88d9      	ldrh	r1, [r3, #6]
90014cb6:	fb0c 1c07 	mla	ip, ip, r7, r1
90014cba:	f8a3 c006 	strh.w	ip, [r3, #6]
90014cbe:	e613      	b.n	900148e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014cc0:	f04f 34ff 	mov.w	r4, #4294967295
90014cc4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90014cc6:	4249      	negs	r1, r1
90014cc8:	940d      	str	r4, [sp, #52]	@ 0x34
90014cca:	2400      	movs	r4, #0
90014ccc:	437b      	muls	r3, r7
90014cce:	e758      	b.n	90014b82 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90014cd0:	9905      	ldr	r1, [sp, #20]
90014cd2:	ea4f 1b69 	mov.w	fp, r9, asr #5
90014cd6:	f009 0c1f 	and.w	ip, r9, #31
90014cda:	f8b7 8004 	ldrh.w	r8, [r7, #4]
90014cde:	f001 011f 	and.w	r1, r1, #31
90014ce2:	45f3      	cmp	fp, lr
90014ce4:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90014ce8:	9102      	str	r1, [sp, #8]
90014cea:	9904      	ldr	r1, [sp, #16]
90014cec:	eba1 0406 	sub.w	r4, r1, r6
90014cf0:	d108      	bne.n	90014d04 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
90014cf2:	9b02      	ldr	r3, [sp, #8]
90014cf4:	44a0      	add	r8, r4
90014cf6:	449c      	add	ip, r3
90014cf8:	f8a7 8004 	strh.w	r8, [r7, #4]
90014cfc:	fb04 a40c 	mla	r4, r4, ip, sl
90014d00:	80fc      	strh	r4, [r7, #6]
90014d02:	e461      	b.n	900145c8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014d04:	9905      	ldr	r1, [sp, #20]
90014d06:	ebb1 0109 	subs.w	r1, r1, r9
90014d0a:	bf51      	iteee	pl
90014d0c:	f1cc 0520 	rsbpl	r5, ip, #32
90014d10:	fb04 f40c 	mulmi.w	r4, r4, ip
90014d14:	4249      	negmi	r1, r1
90014d16:	2500      	movmi	r5, #0
90014d18:	bf5d      	ittte	pl
90014d1a:	436c      	mulpl	r4, r5
90014d1c:	2520      	movpl	r5, #32
90014d1e:	f04f 0901 	movpl.w	r9, #1
90014d22:	f04f 39ff 	movmi.w	r9, #4294967295
90014d26:	9501      	str	r5, [sp, #4]
90014d28:	9b01      	ldr	r3, [sp, #4]
90014d2a:	fb94 f5f1 	sdiv	r5, r4, r1
90014d2e:	fb01 4415 	mls	r4, r1, r5, r4
90014d32:	449c      	add	ip, r3
90014d34:	eb0b 0309 	add.w	r3, fp, r9
90014d38:	2c00      	cmp	r4, #0
90014d3a:	bfbc      	itt	lt
90014d3c:	f105 35ff 	addlt.w	r5, r5, #4294967295
90014d40:	1864      	addlt	r4, r4, r1
90014d42:	44a8      	add	r8, r5
90014d44:	fb05 ac0c 	mla	ip, r5, ip, sl
90014d48:	f8a7 8004 	strh.w	r8, [r7, #4]
90014d4c:	f8a7 c006 	strh.w	ip, [r7, #6]
90014d50:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014d54:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90014d58:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90014d5c:	ea58 0707 	orrs.w	r7, r8, r7
90014d60:	d011      	beq.n	90014d86 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014d62:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90014d66:	f1b8 0f00 	cmp.w	r8, #0
90014d6a:	db0c      	blt.n	90014d86 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014d6c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014d6e:	45b8      	cmp	r8, r7
90014d70:	da09      	bge.n	90014d86 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014d72:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90014d76:	45b8      	cmp	r8, r7
90014d78:	bf3c      	itt	cc
90014d7a:	f10c 0708 	addcc.w	r7, ip, #8
90014d7e:	6107      	strcc	r7, [r0, #16]
90014d80:	f108 0701 	add.w	r7, r8, #1
90014d84:	6087      	str	r7, [r0, #8]
90014d86:	6907      	ldr	r7, [r0, #16]
90014d88:	f04f 0c00 	mov.w	ip, #0
90014d8c:	b212      	sxth	r2, r2
90014d8e:	459e      	cmp	lr, r3
90014d90:	803b      	strh	r3, [r7, #0]
90014d92:	442e      	add	r6, r5
90014d94:	807a      	strh	r2, [r7, #2]
90014d96:	f8a7 c004 	strh.w	ip, [r7, #4]
90014d9a:	f8a7 c006 	strh.w	ip, [r7, #6]
90014d9e:	d04b      	beq.n	90014e38 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90014da0:	9f04      	ldr	r7, [sp, #16]
90014da2:	1a64      	subs	r4, r4, r1
90014da4:	f04f 0a00 	mov.w	sl, #0
90014da8:	1bbf      	subs	r7, r7, r6
90014daa:	443d      	add	r5, r7
90014dac:	016d      	lsls	r5, r5, #5
90014dae:	fb95 f8f1 	sdiv	r8, r5, r1
90014db2:	fb01 5518 	mls	r5, r1, r8, r5
90014db6:	4565      	cmp	r5, ip
90014db8:	bfbc      	itt	lt
90014dba:	f108 38ff 	addlt.w	r8, r8, #4294967295
90014dbe:	186d      	addlt	r5, r5, r1
90014dc0:	f108 0701 	add.w	r7, r8, #1
90014dc4:	9703      	str	r7, [sp, #12]
90014dc6:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014dca:	1964      	adds	r4, r4, r5
90014dcc:	444b      	add	r3, r9
90014dce:	bf54      	ite	pl
90014dd0:	9f03      	ldrpl	r7, [sp, #12]
90014dd2:	4647      	movmi	r7, r8
90014dd4:	f8bc b004 	ldrh.w	fp, [ip, #4]
90014dd8:	bf58      	it	pl
90014dda:	1a64      	subpl	r4, r4, r1
90014ddc:	443e      	add	r6, r7
90014dde:	44bb      	add	fp, r7
90014de0:	f8ac b004 	strh.w	fp, [ip, #4]
90014de4:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014de8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90014dec:	f8ac b006 	strh.w	fp, [ip, #6]
90014df0:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014df4:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014df8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90014dfc:	ea5b 0707 	orrs.w	r7, fp, r7
90014e00:	d011      	beq.n	90014e26 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90014e02:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90014e06:	f1bb 0f00 	cmp.w	fp, #0
90014e0a:	db0c      	blt.n	90014e26 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90014e0c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014e0e:	45bb      	cmp	fp, r7
90014e10:	da09      	bge.n	90014e26 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90014e12:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90014e16:	45bb      	cmp	fp, r7
90014e18:	bf3c      	itt	cc
90014e1a:	f10c 0708 	addcc.w	r7, ip, #8
90014e1e:	6107      	strcc	r7, [r0, #16]
90014e20:	f10b 0701 	add.w	r7, fp, #1
90014e24:	6087      	str	r7, [r0, #8]
90014e26:	6907      	ldr	r7, [r0, #16]
90014e28:	459e      	cmp	lr, r3
90014e2a:	803b      	strh	r3, [r7, #0]
90014e2c:	807a      	strh	r2, [r7, #2]
90014e2e:	f8a7 a004 	strh.w	sl, [r7, #4]
90014e32:	f8a7 a006 	strh.w	sl, [r7, #6]
90014e36:	d1c6      	bne.n	90014dc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90014e38:	9b04      	ldr	r3, [sp, #16]
90014e3a:	1b9e      	subs	r6, r3, r6
90014e3c:	6903      	ldr	r3, [r0, #16]
90014e3e:	889a      	ldrh	r2, [r3, #4]
90014e40:	4432      	add	r2, r6
90014e42:	809a      	strh	r2, [r3, #4]
90014e44:	9a02      	ldr	r2, [sp, #8]
90014e46:	f102 0c20 	add.w	ip, r2, #32
90014e4a:	9a01      	ldr	r2, [sp, #4]
90014e4c:	ebac 0c02 	sub.w	ip, ip, r2
90014e50:	88da      	ldrh	r2, [r3, #6]
90014e52:	fb06 260c 	mla	r6, r6, ip, r2
90014e56:	80de      	strh	r6, [r3, #6]
90014e58:	f7ff bbb6 	b.w	900145c8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90014e5c <_ZN8touchgfx7Outline6lineToEii>:
90014e5c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90014e5e:	079b      	lsls	r3, r3, #30
90014e60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90014e62:	460e      	mov	r6, r1
90014e64:	4615      	mov	r5, r2
90014e66:	d511      	bpl.n	90014e8c <_ZN8touchgfx7Outline6lineToEii+0x30>
90014e68:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90014e6c:	ea86 0701 	eor.w	r7, r6, r1
90014e70:	ea85 0302 	eor.w	r3, r5, r2
90014e74:	433b      	orrs	r3, r7
90014e76:	d009      	beq.n	90014e8c <_ZN8touchgfx7Outline6lineToEii+0x30>
90014e78:	4633      	mov	r3, r6
90014e7a:	9500      	str	r5, [sp, #0]
90014e7c:	f7ff fb4c 	bl	90014518 <_ZN8touchgfx7Outline10renderLineEiiii>
90014e80:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90014e82:	f043 0301 	orr.w	r3, r3, #1
90014e86:	e9c0 6505 	strd	r6, r5, [r0, #20]
90014e8a:	6243      	str	r3, [r0, #36]	@ 0x24
90014e8c:	b003      	add	sp, #12
90014e8e:	bdf0      	pop	{r4, r5, r6, r7, pc}

90014e90 <_ZN8touchgfx7Outline6moveToEii>:
90014e90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014e92:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90014e94:	4615      	mov	r5, r2
90014e96:	4604      	mov	r4, r0
90014e98:	460e      	mov	r6, r1
90014e9a:	079a      	lsls	r2, r3, #30
90014e9c:	d401      	bmi.n	90014ea2 <_ZN8touchgfx7Outline6moveToEii+0x12>
90014e9e:	f7ff fb07 	bl	900144b0 <_ZN8touchgfx7Outline5resetEv>
90014ea2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90014ea4:	07db      	lsls	r3, r3, #31
90014ea6:	d504      	bpl.n	90014eb2 <_ZN8touchgfx7Outline6moveToEii+0x22>
90014ea8:	4620      	mov	r0, r4
90014eaa:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
90014eae:	f7ff ffd5 	bl	90014e5c <_ZN8touchgfx7Outline6lineToEii>
90014eb2:	6923      	ldr	r3, [r4, #16]
90014eb4:	1170      	asrs	r0, r6, #5
90014eb6:	1169      	asrs	r1, r5, #5
90014eb8:	f9b3 2000 	ldrsh.w	r2, [r3]
90014ebc:	4290      	cmp	r0, r2
90014ebe:	d103      	bne.n	90014ec8 <_ZN8touchgfx7Outline6moveToEii+0x38>
90014ec0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90014ec4:	4291      	cmp	r1, r2
90014ec6:	d01a      	beq.n	90014efe <_ZN8touchgfx7Outline6moveToEii+0x6e>
90014ec8:	88df      	ldrh	r7, [r3, #6]
90014eca:	889a      	ldrh	r2, [r3, #4]
90014ecc:	433a      	orrs	r2, r7
90014ece:	d010      	beq.n	90014ef2 <_ZN8touchgfx7Outline6moveToEii+0x62>
90014ed0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90014ed4:	2a00      	cmp	r2, #0
90014ed6:	db0c      	blt.n	90014ef2 <_ZN8touchgfx7Outline6moveToEii+0x62>
90014ed8:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90014eda:	42ba      	cmp	r2, r7
90014edc:	da09      	bge.n	90014ef2 <_ZN8touchgfx7Outline6moveToEii+0x62>
90014ede:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90014ee2:	42ba      	cmp	r2, r7
90014ee4:	f102 0201 	add.w	r2, r2, #1
90014ee8:	bf38      	it	cc
90014eea:	3308      	addcc	r3, #8
90014eec:	60a2      	str	r2, [r4, #8]
90014eee:	bf38      	it	cc
90014ef0:	6123      	strcc	r3, [r4, #16]
90014ef2:	6923      	ldr	r3, [r4, #16]
90014ef4:	2200      	movs	r2, #0
90014ef6:	8018      	strh	r0, [r3, #0]
90014ef8:	8059      	strh	r1, [r3, #2]
90014efa:	809a      	strh	r2, [r3, #4]
90014efc:	80da      	strh	r2, [r3, #6]
90014efe:	6166      	str	r6, [r4, #20]
90014f00:	6225      	str	r5, [r4, #32]
90014f02:	e9c4 5606 	strd	r5, r6, [r4, #24]
90014f06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90014f08 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90014f08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014f0c:	b0d0      	sub	sp, #320	@ 0x140
90014f0e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90014f12:	466c      	mov	r4, sp
90014f14:	4627      	mov	r7, r4
90014f16:	1a0d      	subs	r5, r1, r0
90014f18:	f100 0308 	add.w	r3, r0, #8
90014f1c:	2d48      	cmp	r5, #72	@ 0x48
90014f1e:	f340 80d5 	ble.w	900150cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90014f22:	112d      	asrs	r5, r5, #4
90014f24:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90014f28:	f9b0 9000 	ldrsh.w	r9, [r0]
90014f2c:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90014f30:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90014f34:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90014f38:	6816      	ldr	r6, [r2, #0]
90014f3a:	6006      	str	r6, [r0, #0]
90014f3c:	6856      	ldr	r6, [r2, #4]
90014f3e:	6046      	str	r6, [r0, #4]
90014f40:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90014f44:	f8a2 8002 	strh.w	r8, [r2, #2]
90014f48:	f8a2 e004 	strh.w	lr, [r2, #4]
90014f4c:	f8a2 c006 	strh.w	ip, [r2, #6]
90014f50:	f1a1 0208 	sub.w	r2, r1, #8
90014f54:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90014f58:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90014f5c:	4565      	cmp	r5, ip
90014f5e:	db06      	blt.n	90014f6e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90014f60:	d119      	bne.n	90014f96 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90014f62:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90014f66:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90014f6a:	42ae      	cmp	r6, r5
90014f6c:	dd13      	ble.n	90014f96 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90014f6e:	460e      	mov	r6, r1
90014f70:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90014f74:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90014f78:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90014f7c:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90014f80:	601d      	str	r5, [r3, #0]
90014f82:	6875      	ldr	r5, [r6, #4]
90014f84:	605d      	str	r5, [r3, #4]
90014f86:	f821 9c08 	strh.w	r9, [r1, #-8]
90014f8a:	f821 cc06 	strh.w	ip, [r1, #-6]
90014f8e:	f821 8c04 	strh.w	r8, [r1, #-4]
90014f92:	f821 ec02 	strh.w	lr, [r1, #-2]
90014f96:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90014f9a:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
90014f9e:	42ae      	cmp	r6, r5
90014fa0:	db06      	blt.n	90014fb0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
90014fa2:	d116      	bne.n	90014fd2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90014fa4:	f9b0 c000 	ldrsh.w	ip, [r0]
90014fa8:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90014fac:	45ac      	cmp	ip, r5
90014fae:	da10      	bge.n	90014fd2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90014fb0:	681d      	ldr	r5, [r3, #0]
90014fb2:	f9b0 8000 	ldrsh.w	r8, [r0]
90014fb6:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90014fba:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90014fbe:	6005      	str	r5, [r0, #0]
90014fc0:	685d      	ldr	r5, [r3, #4]
90014fc2:	f8a0 8008 	strh.w	r8, [r0, #8]
90014fc6:	6045      	str	r5, [r0, #4]
90014fc8:	8146      	strh	r6, [r0, #10]
90014fca:	f8a0 e00c 	strh.w	lr, [r0, #12]
90014fce:	f8a0 c00e 	strh.w	ip, [r0, #14]
90014fd2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90014fd6:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90014fda:	4565      	cmp	r5, ip
90014fdc:	db06      	blt.n	90014fec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
90014fde:	d119      	bne.n	90015014 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014fe0:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90014fe4:	f9b0 5000 	ldrsh.w	r5, [r0]
90014fe8:	42ae      	cmp	r6, r5
90014fea:	da13      	bge.n	90015014 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014fec:	460e      	mov	r6, r1
90014fee:	f9b0 9000 	ldrsh.w	r9, [r0]
90014ff2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90014ff6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90014ffa:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
90014ffe:	6005      	str	r5, [r0, #0]
90015000:	6875      	ldr	r5, [r6, #4]
90015002:	6045      	str	r5, [r0, #4]
90015004:	f821 9c08 	strh.w	r9, [r1, #-8]
90015008:	f821 cc06 	strh.w	ip, [r1, #-6]
9001500c:	f821 8c04 	strh.w	r8, [r1, #-4]
90015010:	f821 ec02 	strh.w	lr, [r1, #-2]
90015014:	3308      	adds	r3, #8
90015016:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001501a:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
9001501e:	45e6      	cmp	lr, ip
90015020:	dbf8      	blt.n	90015014 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015022:	d105      	bne.n	90015030 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90015024:	f9b3 6000 	ldrsh.w	r6, [r3]
90015028:	f9b0 5000 	ldrsh.w	r5, [r0]
9001502c:	42ae      	cmp	r6, r5
9001502e:	dbf1      	blt.n	90015014 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015030:	4615      	mov	r5, r2
90015032:	3a08      	subs	r2, #8
90015034:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90015038:	45b4      	cmp	ip, r6
9001503a:	dbf9      	blt.n	90015030 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001503c:	d105      	bne.n	9001504a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
9001503e:	f9b0 8000 	ldrsh.w	r8, [r0]
90015042:	f9b2 6000 	ldrsh.w	r6, [r2]
90015046:	45b0      	cmp	r8, r6
90015048:	dbf2      	blt.n	90015030 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001504a:	4293      	cmp	r3, r2
9001504c:	f1a5 0608 	sub.w	r6, r5, #8
90015050:	d816      	bhi.n	90015080 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90015052:	f8d6 c000 	ldr.w	ip, [r6]
90015056:	f9b3 a000 	ldrsh.w	sl, [r3]
9001505a:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
9001505e:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90015062:	f8c3 c000 	str.w	ip, [r3]
90015066:	f8d6 c004 	ldr.w	ip, [r6, #4]
9001506a:	f8c3 c004 	str.w	ip, [r3, #4]
9001506e:	f825 ac08 	strh.w	sl, [r5, #-8]
90015072:	f825 ec06 	strh.w	lr, [r5, #-6]
90015076:	f825 9c04 	strh.w	r9, [r5, #-4]
9001507a:	f825 8c02 	strh.w	r8, [r5, #-2]
9001507e:	e7c9      	b.n	90015014 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90015080:	f8d6 e000 	ldr.w	lr, [r6]
90015084:	f9b0 a000 	ldrsh.w	sl, [r0]
90015088:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
9001508c:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90015090:	f8c0 e000 	str.w	lr, [r0]
90015094:	f8d6 e004 	ldr.w	lr, [r6, #4]
90015098:	1a16      	subs	r6, r2, r0
9001509a:	f8c0 e004 	str.w	lr, [r0, #4]
9001509e:	f825 ac08 	strh.w	sl, [r5, #-8]
900150a2:	f825 cc06 	strh.w	ip, [r5, #-6]
900150a6:	f825 9c04 	strh.w	r9, [r5, #-4]
900150aa:	f825 8c02 	strh.w	r8, [r5, #-2]
900150ae:	1acd      	subs	r5, r1, r3
900150b0:	10ed      	asrs	r5, r5, #3
900150b2:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
900150b6:	bfb5      	itete	lt
900150b8:	e9c4 0200 	strdlt	r0, r2, [r4]
900150bc:	e9c4 3100 	strdge	r3, r1, [r4]
900150c0:	460a      	movlt	r2, r1
900150c2:	4603      	movge	r3, r0
900150c4:	3408      	adds	r4, #8
900150c6:	4618      	mov	r0, r3
900150c8:	4611      	mov	r1, r2
900150ca:	e724      	b.n	90014f16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900150cc:	4299      	cmp	r1, r3
900150ce:	d927      	bls.n	90015120 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
900150d0:	f1a3 0210 	sub.w	r2, r3, #16
900150d4:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
900150d8:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
900150dc:	45ac      	cmp	ip, r5
900150de:	db06      	blt.n	900150ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
900150e0:	d11c      	bne.n	9001511c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900150e2:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
900150e6:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
900150ea:	42ae      	cmp	r6, r5
900150ec:	da16      	bge.n	9001511c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900150ee:	4615      	mov	r5, r2
900150f0:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
900150f4:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
900150f8:	3a08      	subs	r2, #8
900150fa:	f855 6f08 	ldr.w	r6, [r5, #8]!
900150fe:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
90015102:	6196      	str	r6, [r2, #24]
90015104:	42a8      	cmp	r0, r5
90015106:	686e      	ldr	r6, [r5, #4]
90015108:	f8a2 9010 	strh.w	r9, [r2, #16]
9001510c:	61d6      	str	r6, [r2, #28]
9001510e:	f8a2 c012 	strh.w	ip, [r2, #18]
90015112:	f8a2 8014 	strh.w	r8, [r2, #20]
90015116:	f8a2 e016 	strh.w	lr, [r2, #22]
9001511a:	d1db      	bne.n	900150d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
9001511c:	3308      	adds	r3, #8
9001511e:	e7d5      	b.n	900150cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90015120:	42bc      	cmp	r4, r7
90015122:	d903      	bls.n	9001512c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90015124:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90015128:	3c08      	subs	r4, #8
9001512a:	e6f4      	b.n	90014f16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
9001512c:	b050      	add	sp, #320	@ 0x140
9001512e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90015132 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90015132:	b510      	push	{r4, lr}
90015134:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90015136:	4604      	mov	r4, r0
90015138:	07da      	lsls	r2, r3, #31
9001513a:	d507      	bpl.n	9001514c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
9001513c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90015140:	f7ff fe8c 	bl	90014e5c <_ZN8touchgfx7Outline6lineToEii>
90015144:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90015146:	f023 0301 	bic.w	r3, r3, #1
9001514a:	6243      	str	r3, [r0, #36]	@ 0x24
9001514c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9001514e:	079b      	lsls	r3, r3, #30
90015150:	d521      	bpl.n	90015196 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90015152:	6923      	ldr	r3, [r4, #16]
90015154:	88d9      	ldrh	r1, [r3, #6]
90015156:	889a      	ldrh	r2, [r3, #4]
90015158:	430a      	orrs	r2, r1
9001515a:	d010      	beq.n	9001517e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001515c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90015160:	2a00      	cmp	r2, #0
90015162:	db0c      	blt.n	9001517e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90015164:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90015166:	428a      	cmp	r2, r1
90015168:	da09      	bge.n	9001517e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001516a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
9001516e:	4291      	cmp	r1, r2
90015170:	f102 0201 	add.w	r2, r2, #1
90015174:	bf88      	it	hi
90015176:	3308      	addhi	r3, #8
90015178:	60a2      	str	r2, [r4, #8]
9001517a:	bf88      	it	hi
9001517c:	6123      	strhi	r3, [r4, #16]
9001517e:	68a1      	ldr	r1, [r4, #8]
90015180:	b129      	cbz	r1, 9001518e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90015182:	6863      	ldr	r3, [r4, #4]
90015184:	4299      	cmp	r1, r3
90015186:	d802      	bhi.n	9001518e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90015188:	68e0      	ldr	r0, [r4, #12]
9001518a:	f7ff febd 	bl	90014f08 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
9001518e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90015190:	f023 0302 	bic.w	r3, r3, #2
90015194:	6263      	str	r3, [r4, #36]	@ 0x24
90015196:	68e0      	ldr	r0, [r4, #12]
90015198:	bd10      	pop	{r4, pc}
	...

9001519c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
9001519c:	4b02      	ldr	r3, [pc, #8]	@ (900151a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
9001519e:	6018      	str	r0, [r3, #0]
900151a0:	4b02      	ldr	r3, [pc, #8]	@ (900151ac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
900151a2:	6019      	str	r1, [r3, #0]
900151a4:	4770      	bx	lr
900151a6:	bf00      	nop
900151a8:	240233dc 	.word	0x240233dc
900151ac:	240233e0 	.word	0x240233e0

900151b0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
900151b0:	2300      	movs	r3, #0
900151b2:	4a02      	ldr	r2, [pc, #8]	@ (900151bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
900151b4:	6013      	str	r3, [r2, #0]
900151b6:	4a02      	ldr	r2, [pc, #8]	@ (900151c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
900151b8:	6013      	str	r3, [r2, #0]
900151ba:	4770      	bx	lr
900151bc:	240233dc 	.word	0x240233dc
900151c0:	240233e0 	.word	0x240233e0

900151c4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
900151c4:	4b01      	ldr	r3, [pc, #4]	@ (900151cc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
900151c6:	6818      	ldr	r0, [r3, #0]
900151c8:	4770      	bx	lr
900151ca:	bf00      	nop
900151cc:	240233dc 	.word	0x240233dc

900151d0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
900151d0:	4b01      	ldr	r3, [pc, #4]	@ (900151d8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
900151d2:	6818      	ldr	r0, [r3, #0]
900151d4:	4770      	bx	lr
900151d6:	bf00      	nop
900151d8:	240233e0 	.word	0x240233e0

900151dc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
900151dc:	b510      	push	{r4, lr}
900151de:	6803      	ldr	r3, [r0, #0]
900151e0:	460c      	mov	r4, r1
900151e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900151e4:	4798      	blx	r3
900151e6:	1b03      	subs	r3, r0, r4
900151e8:	4258      	negs	r0, r3
900151ea:	4158      	adcs	r0, r3
900151ec:	bd10      	pop	{r4, pc}
	...

900151f0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
900151f0:	4b01      	ldr	r3, [pc, #4]	@ (900151f8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
900151f2:	6019      	str	r1, [r3, #0]
900151f4:	4770      	bx	lr
900151f6:	bf00      	nop
900151f8:	240233e4 	.word	0x240233e4

900151fc <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900151fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015200:	4696      	mov	lr, r2
90015202:	b097      	sub	sp, #92	@ 0x5c
90015204:	4605      	mov	r5, r0
90015206:	4614      	mov	r4, r2
90015208:	460e      	mov	r6, r1
9001520a:	461f      	mov	r7, r3
9001520c:	f10d 0c1c 	add.w	ip, sp, #28
90015210:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
90015214:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
90015218:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
9001521c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015220:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015224:	f8de 3000 	ldr.w	r3, [lr]
90015228:	f104 0e14 	add.w	lr, r4, #20
9001522c:	f8cc 3000 	str.w	r3, [ip]
90015230:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90015234:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015238:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001523c:	f8de 3000 	ldr.w	r3, [lr]
90015240:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90015244:	f8cc 3000 	str.w	r3, [ip]
90015248:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
9001524c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015250:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90015254:	f8de 3000 	ldr.w	r3, [lr]
90015258:	4631      	mov	r1, r6
9001525a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
9001525c:	4628      	mov	r0, r5
9001525e:	f8cc 3000 	str.w	r3, [ip]
90015262:	682b      	ldr	r3, [r5, #0]
90015264:	9201      	str	r2, [sp, #4]
90015266:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90015268:	f8cd 8008 	str.w	r8, [sp, #8]
9001526c:	9200      	str	r2, [sp, #0]
9001526e:	aa07      	add	r2, sp, #28
90015270:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90015274:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
90015278:	463b      	mov	r3, r7
9001527a:	47d8      	blx	fp
9001527c:	46a6      	mov	lr, r4
9001527e:	f10d 0c1c 	add.w	ip, sp, #28
90015282:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90015286:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001528a:	f8de 3000 	ldr.w	r3, [lr]
9001528e:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90015292:	343c      	adds	r4, #60	@ 0x3c
90015294:	f8cc 3000 	str.w	r3, [ip]
90015298:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
9001529c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900152a0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900152a4:	f8de 3000 	ldr.w	r3, [lr]
900152a8:	f8cc 3000 	str.w	r3, [ip]
900152ac:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
900152b0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
900152b2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900152b6:	6823      	ldr	r3, [r4, #0]
900152b8:	4631      	mov	r1, r6
900152ba:	4628      	mov	r0, r5
900152bc:	f8cc 3000 	str.w	r3, [ip]
900152c0:	682b      	ldr	r3, [r5, #0]
900152c2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900152c6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900152c8:	f8cd 8008 	str.w	r8, [sp, #8]
900152cc:	9201      	str	r2, [sp, #4]
900152ce:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900152d0:	9200      	str	r2, [sp, #0]
900152d2:	aa07      	add	r2, sp, #28
900152d4:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
900152d6:	463b      	mov	r3, r7
900152d8:	47a0      	blx	r4
900152da:	b017      	add	sp, #92	@ 0x5c
900152dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900152e0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
900152e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900152e4:	b08d      	sub	sp, #52	@ 0x34
900152e6:	4688      	mov	r8, r1
900152e8:	f8d3 c000 	ldr.w	ip, [r3]
900152ec:	9916      	ldr	r1, [sp, #88]	@ 0x58
900152ee:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
900152f2:	680f      	ldr	r7, [r1, #0]
900152f4:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
900152f8:	eba7 070c 	sub.w	r7, r7, ip
900152fc:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
90015300:	edd3 6a07 	vldr	s13, [r3, #28]
90015304:	42bc      	cmp	r4, r7
90015306:	9918      	ldr	r1, [sp, #96]	@ 0x60
90015308:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
9001530c:	bfa8      	it	ge
9001530e:	463c      	movge	r4, r7
90015310:	f9b1 9000 	ldrsh.w	r9, [r1]
90015314:	f9ba 1000 	ldrsh.w	r1, [sl]
90015318:	ee07 4a90 	vmov	s15, r4
9001531c:	eb09 0e0c 	add.w	lr, r9, ip
90015320:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
90015324:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90015328:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
9001532c:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
90015330:	4571      	cmp	r1, lr
90015332:	ee25 4a04 	vmul.f32	s8, s10, s8
90015336:	ee65 4a24 	vmul.f32	s9, s10, s9
9001533a:	ee25 5a27 	vmul.f32	s10, s10, s15
9001533e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90015342:	ee71 0aa4 	vadd.f32	s1, s3, s9
90015346:	ee32 1a05 	vadd.f32	s2, s4, s10
9001534a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9001534e:	ee36 0a84 	vadd.f32	s0, s13, s8
90015352:	ee61 1a87 	vmul.f32	s3, s3, s14
90015356:	ee22 2a07 	vmul.f32	s4, s4, s14
9001535a:	f340 808c 	ble.w	90015476 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
9001535e:	eba1 060e 	sub.w	r6, r1, lr
90015362:	fb96 f5f4 	sdiv	r5, r6, r4
90015366:	ee07 5a10 	vmov	s14, r5
9001536a:	2d00      	cmp	r5, #0
9001536c:	fb04 6615 	mls	r6, r4, r5, r6
90015370:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90015374:	eea7 0a04 	vfma.f32	s0, s14, s8
90015378:	eee7 0a24 	vfma.f32	s1, s14, s9
9001537c:	eea7 1a05 	vfma.f32	s2, s14, s10
90015380:	dd12      	ble.n	900153a8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90015382:	ee70 6a44 	vsub.f32	s13, s0, s8
90015386:	ee70 1ae4 	vsub.f32	s3, s1, s9
9001538a:	ee31 2a45 	vsub.f32	s4, s2, s10
9001538e:	eef5 6a40 	vcmp.f32	s13, #0.0
90015392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015396:	bf14      	ite	ne
90015398:	ee87 7aa6 	vdivne.f32	s14, s15, s13
9001539c:	eeb0 7a67 	vmoveq.f32	s14, s15
900153a0:	ee61 1a87 	vmul.f32	s3, s3, s14
900153a4:	ee22 2a07 	vmul.f32	s4, s4, s14
900153a8:	fb05 f204 	mul.w	r2, r5, r4
900153ac:	1abf      	subs	r7, r7, r2
900153ae:	4494      	add	ip, r2
900153b0:	f8ba 2004 	ldrh.w	r2, [sl, #4]
900153b4:	4411      	add	r1, r2
900153b6:	eb09 020c 	add.w	r2, r9, ip
900153ba:	b209      	sxth	r1, r1
900153bc:	443a      	add	r2, r7
900153be:	428a      	cmp	r2, r1
900153c0:	bfc4      	itt	gt
900153c2:	eba1 0209 	subgt.w	r2, r1, r9
900153c6:	eba2 070c 	subgt.w	r7, r2, ip
900153ca:	2f00      	cmp	r7, #0
900153cc:	dd50      	ble.n	90015470 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
900153ce:	fb97 f1f4 	sdiv	r1, r7, r4
900153d2:	fb04 7211 	mls	r2, r4, r1, r7
900153d6:	b90a      	cbnz	r2, 900153dc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
900153d8:	3901      	subs	r1, #1
900153da:	4622      	mov	r2, r4
900153dc:	eec7 3a80 	vdiv.f32	s7, s15, s0
900153e0:	6840      	ldr	r0, [r0, #4]
900153e2:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
900153e6:	44b6      	add	lr, r6
900153e8:	f8d0 a000 	ldr.w	sl, [r0]
900153ec:	2900      	cmp	r1, #0
900153ee:	bfcc      	ite	gt
900153f0:	46a1      	movgt	r9, r4
900153f2:	4691      	movle	r9, r2
900153f4:	900b      	str	r0, [sp, #44]	@ 0x2c
900153f6:	9817      	ldr	r0, [sp, #92]	@ 0x5c
900153f8:	fb04 e505 	mla	r5, r4, r5, lr
900153fc:	eef0 6a42 	vmov.f32	s13, s4
90015400:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
90015404:	9008      	str	r0, [sp, #32]
90015406:	eeb0 7a61 	vmov.f32	s14, s3
9001540a:	9818      	ldr	r0, [sp, #96]	@ 0x60
9001540c:	695b      	ldr	r3, [r3, #20]
9001540e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90015412:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90015416:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
9001541a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001541c:	445b      	add	r3, fp
9001541e:	9307      	str	r3, [sp, #28]
90015420:	ee16 3a90 	vmov	r3, s13
90015424:	e9cd 8505 	strd	r8, r5, [sp, #20]
90015428:	ee60 2aa3 	vmul.f32	s5, s1, s7
9001542c:	ee21 3a23 	vmul.f32	s6, s2, s7
90015430:	ee72 7ae1 	vsub.f32	s15, s5, s3
90015434:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90015438:	ee17 7a90 	vmov	r7, s15
9001543c:	ee73 7a42 	vsub.f32	s15, s6, s4
90015440:	fb97 f7f4 	sdiv	r7, r7, r4
90015444:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90015448:	ee17 ca90 	vmov	ip, s15
9001544c:	fb9c fcf4 	sdiv	ip, ip, r4
90015450:	fb0c 3306 	mla	r3, ip, r6, r3
90015454:	9302      	str	r3, [sp, #8]
90015456:	ee17 3a10 	vmov	r3, s14
9001545a:	e9cd 7c03 	strd	r7, ip, [sp, #12]
9001545e:	fb07 3706 	mla	r7, r7, r6, r3
90015462:	eba9 0306 	sub.w	r3, r9, r6
90015466:	e9cd 4700 	strd	r4, r7, [sp]
9001546a:	f8da 4008 	ldr.w	r4, [sl, #8]
9001546e:	47a0      	blx	r4
90015470:	b00d      	add	sp, #52	@ 0x34
90015472:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015476:	2500      	movs	r5, #0
90015478:	462e      	mov	r6, r5
9001547a:	e799      	b.n	900153b0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

9001547c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
9001547c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015480:	b0db      	sub	sp, #364	@ 0x16c
90015482:	461d      	mov	r5, r3
90015484:	4614      	mov	r4, r2
90015486:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
9001548a:	910f      	str	r1, [sp, #60]	@ 0x3c
9001548c:	4629      	mov	r1, r5
9001548e:	930a      	str	r3, [sp, #40]	@ 0x28
90015490:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
90015494:	9009      	str	r0, [sp, #36]	@ 0x24
90015496:	930b      	str	r3, [sp, #44]	@ 0x2c
90015498:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
9001549c:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
900154a0:	9310      	str	r3, [sp, #64]	@ 0x40
900154a2:	6803      	ldr	r3, [r0, #0]
900154a4:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
900154a6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
900154aa:	47b8      	blx	r7
900154ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900154ae:	6058      	str	r0, [r3, #4]
900154b0:	2800      	cmp	r0, #0
900154b2:	f000 83a1 	beq.w	90015bf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900154b6:	682b      	ldr	r3, [r5, #0]
900154b8:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
900154bc:	ed94 7a02 	vldr	s14, [r4, #8]
900154c0:	9314      	str	r3, [sp, #80]	@ 0x50
900154c2:	686b      	ldr	r3, [r5, #4]
900154c4:	eeb4 7ae7 	vcmpe.f32	s14, s15
900154c8:	9315      	str	r3, [sp, #84]	@ 0x54
900154ca:	4bc1      	ldr	r3, [pc, #772]	@ (900157d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
900154cc:	7819      	ldrb	r1, [r3, #0]
900154ce:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
900154d2:	2900      	cmp	r1, #0
900154d4:	bf16      	itet	ne
900154d6:	4619      	movne	r1, r3
900154d8:	4611      	moveq	r1, r2
900154da:	4613      	movne	r3, r2
900154dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900154e0:	9116      	str	r1, [sp, #88]	@ 0x58
900154e2:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
900154e6:	f240 8387 	bls.w	90015bf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900154ea:	ed94 7a07 	vldr	s14, [r4, #28]
900154ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
900154f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900154f6:	f240 837f 	bls.w	90015bf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900154fa:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
900154fe:	eeb4 7ae7 	vcmpe.f32	s14, s15
90015502:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015506:	f240 8377 	bls.w	90015bf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001550a:	6822      	ldr	r2, [r4, #0]
9001550c:	4bb1      	ldr	r3, [pc, #708]	@ (900157d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
9001550e:	429a      	cmp	r2, r3
90015510:	f2c0 8372 	blt.w	90015bf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015514:	49b0      	ldr	r1, [pc, #704]	@ (900157d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90015516:	6963      	ldr	r3, [r4, #20]
90015518:	428a      	cmp	r2, r1
9001551a:	f300 836d 	bgt.w	90015bf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001551e:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90015522:	48ae      	ldr	r0, [pc, #696]	@ (900157dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90015524:	33ff      	adds	r3, #255	@ 0xff
90015526:	4283      	cmp	r3, r0
90015528:	f200 8366 	bhi.w	90015bf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001552c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9001552e:	4dac      	ldr	r5, [pc, #688]	@ (900157e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90015530:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90015534:	33ff      	adds	r3, #255	@ 0xff
90015536:	42ab      	cmp	r3, r5
90015538:	f200 835e 	bhi.w	90015bf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001553c:	6862      	ldr	r2, [r4, #4]
9001553e:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
90015542:	33ff      	adds	r3, #255	@ 0xff
90015544:	4283      	cmp	r3, r0
90015546:	f200 8357 	bhi.w	90015bf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001554a:	69a1      	ldr	r1, [r4, #24]
9001554c:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
90015550:	33ff      	adds	r3, #255	@ 0xff
90015552:	4283      	cmp	r3, r0
90015554:	f200 8350 	bhi.w	90015bf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015558:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9001555a:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
9001555e:	30ff      	adds	r0, #255	@ 0xff
90015560:	42a8      	cmp	r0, r5
90015562:	f200 8349 	bhi.w	90015bf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015566:	428a      	cmp	r2, r1
90015568:	f280 8110 	bge.w	9001578c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
9001556c:	429a      	cmp	r2, r3
9001556e:	f300 8119 	bgt.w	900157a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90015572:	4299      	cmp	r1, r3
90015574:	f280 811d 	bge.w	900157b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90015578:	2502      	movs	r5, #2
9001557a:	2701      	movs	r7, #1
9001557c:	46a9      	mov	r9, r5
9001557e:	46b8      	mov	r8, r7
90015580:	f04f 0a00 	mov.w	sl, #0
90015584:	4621      	mov	r1, r4
90015586:	a849      	add	r0, sp, #292	@ 0x124
90015588:	f004 f8d8 	bl	9001973c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
9001558c:	4622      	mov	r2, r4
9001558e:	4653      	mov	r3, sl
90015590:	a949      	add	r1, sp, #292	@ 0x124
90015592:	f8cd 9000 	str.w	r9, [sp]
90015596:	a819      	add	r0, sp, #100	@ 0x64
90015598:	f004 fa00 	bl	9001999c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
9001559c:	4622      	mov	r2, r4
9001559e:	4653      	mov	r3, sl
900155a0:	a949      	add	r1, sp, #292	@ 0x124
900155a2:	f8cd 8000 	str.w	r8, [sp]
900155a6:	a829      	add	r0, sp, #164	@ 0xa4
900155a8:	f004 f9f8 	bl	9001999c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900155ac:	4643      	mov	r3, r8
900155ae:	4622      	mov	r2, r4
900155b0:	a949      	add	r1, sp, #292	@ 0x124
900155b2:	f8cd 9000 	str.w	r9, [sp]
900155b6:	a839      	add	r0, sp, #228	@ 0xe4
900155b8:	f004 f9f0 	bl	9001999c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900155bc:	42af      	cmp	r7, r5
900155be:	af12      	add	r7, sp, #72	@ 0x48
900155c0:	bfb7      	itett	lt
900155c2:	2300      	movlt	r3, #0
900155c4:	2301      	movge	r3, #1
900155c6:	ad29      	addlt	r5, sp, #164	@ 0xa4
900155c8:	ac19      	addlt	r4, sp, #100	@ 0x64
900155ca:	bfb1      	iteee	lt
900155cc:	930e      	strlt	r3, [sp, #56]	@ 0x38
900155ce:	ad19      	addge	r5, sp, #100	@ 0x64
900155d0:	930e      	strge	r3, [sp, #56]	@ 0x38
900155d2:	ac29      	addge	r4, sp, #164	@ 0xa4
900155d4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900155d6:	e893 0003 	ldmia.w	r3, {r0, r1}
900155da:	e887 0003 	stmia.w	r7, {r0, r1}
900155de:	b928      	cbnz	r0, 900155ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
900155e0:	4b80      	ldr	r3, [pc, #512]	@ (900157e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
900155e2:	6818      	ldr	r0, [r3, #0]
900155e4:	6803      	ldr	r3, [r0, #0]
900155e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900155e8:	4798      	blx	r3
900155ea:	6038      	str	r0, [r7, #0]
900155ec:	9b64      	ldr	r3, [sp, #400]	@ 0x190
900155ee:	f8bb 0006 	ldrh.w	r0, [fp, #6]
900155f2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900155f6:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
900155f8:	930c      	str	r3, [sp, #48]	@ 0x30
900155fa:	990c      	ldr	r1, [sp, #48]	@ 0x30
900155fc:	6963      	ldr	r3, [r4, #20]
900155fe:	440b      	add	r3, r1
90015600:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90015604:	4408      	add	r0, r1
90015606:	b200      	sxth	r0, r0
90015608:	4283      	cmp	r3, r0
9001560a:	900d      	str	r0, [sp, #52]	@ 0x34
9001560c:	f280 80dd 	bge.w	900157ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90015610:	428b      	cmp	r3, r1
90015612:	da08      	bge.n	90015626 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015614:	2a00      	cmp	r2, #0
90015616:	dd06      	ble.n	90015626 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015618:	1acb      	subs	r3, r1, r3
9001561a:	429a      	cmp	r2, r3
9001561c:	f2c0 80e4 	blt.w	900157e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90015620:	2b00      	cmp	r3, #0
90015622:	f300 80e2 	bgt.w	900157ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90015626:	6967      	ldr	r7, [r4, #20]
90015628:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
9001562c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001562e:	443b      	add	r3, r7
90015630:	461f      	mov	r7, r3
90015632:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90015634:	1bdf      	subs	r7, r3, r7
90015636:	4297      	cmp	r7, r2
90015638:	bfa8      	it	ge
9001563a:	4617      	movge	r7, r2
9001563c:	2f00      	cmp	r7, #0
9001563e:	f340 8166 	ble.w	9001590e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90015642:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015644:	6829      	ldr	r1, [r5, #0]
90015646:	f9b3 2000 	ldrsh.w	r2, [r3]
9001564a:	f9bb 3000 	ldrsh.w	r3, [fp]
9001564e:	4411      	add	r1, r2
90015650:	6820      	ldr	r0, [r4, #0]
90015652:	4299      	cmp	r1, r3
90015654:	dd1a      	ble.n	9001568c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90015656:	f8bb 1004 	ldrh.w	r1, [fp, #4]
9001565a:	4402      	add	r2, r0
9001565c:	440b      	add	r3, r1
9001565e:	b21b      	sxth	r3, r3
90015660:	429a      	cmp	r2, r3
90015662:	dc13      	bgt.n	9001568c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90015664:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90015666:	a912      	add	r1, sp, #72	@ 0x48
90015668:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001566a:	9809      	ldr	r0, [sp, #36]	@ 0x24
9001566c:	681b      	ldr	r3, [r3, #0]
9001566e:	9206      	str	r2, [sp, #24]
90015670:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90015672:	9500      	str	r5, [sp, #0]
90015674:	9205      	str	r2, [sp, #20]
90015676:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90015678:	e9cd b203 	strd	fp, r2, [sp, #12]
9001567c:	9a64      	ldr	r2, [sp, #400]	@ 0x190
9001567e:	e9cd 8201 	strd	r8, r2, [sp, #4]
90015682:	aa49      	add	r2, sp, #292	@ 0x124
90015684:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90015688:	4623      	mov	r3, r4
9001568a:	47c8      	blx	r9
9001568c:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90015690:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90015694:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90015698:	ee37 7a27 	vadd.f32	s14, s14, s15
9001569c:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
900156a0:	68a1      	ldr	r1, [r4, #8]
900156a2:	ee77 7aa6 	vadd.f32	s15, s15, s13
900156a6:	ed94 6a08 	vldr	s12, [r4, #32]
900156aa:	edd4 6a07 	vldr	s13, [r4, #28]
900156ae:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
900156b2:	ee76 6a86 	vadd.f32	s13, s13, s12
900156b6:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
900156ba:	e9d4 2300 	ldrd	r2, r3, [r4]
900156be:	edc4 6a07 	vstr	s13, [r4, #28]
900156c2:	441a      	add	r2, r3
900156c4:	6963      	ldr	r3, [r4, #20]
900156c6:	3301      	adds	r3, #1
900156c8:	6022      	str	r2, [r4, #0]
900156ca:	6163      	str	r3, [r4, #20]
900156cc:	69a3      	ldr	r3, [r4, #24]
900156ce:	3b01      	subs	r3, #1
900156d0:	61a3      	str	r3, [r4, #24]
900156d2:	6923      	ldr	r3, [r4, #16]
900156d4:	440b      	add	r3, r1
900156d6:	68e1      	ldr	r1, [r4, #12]
900156d8:	428b      	cmp	r3, r1
900156da:	6123      	str	r3, [r4, #16]
900156dc:	db15      	blt.n	9001570a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
900156de:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
900156e2:	3201      	adds	r2, #1
900156e4:	1a5b      	subs	r3, r3, r1
900156e6:	ee76 6a26 	vadd.f32	s13, s12, s13
900156ea:	6022      	str	r2, [r4, #0]
900156ec:	6123      	str	r3, [r4, #16]
900156ee:	edc4 6a07 	vstr	s13, [r4, #28]
900156f2:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
900156f6:	ee36 7a87 	vadd.f32	s14, s13, s14
900156fa:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
900156fe:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90015702:	ee77 7a27 	vadd.f32	s15, s14, s15
90015706:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
9001570a:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
9001570e:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90015712:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90015716:	ee37 7a27 	vadd.f32	s14, s14, s15
9001571a:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
9001571e:	68a9      	ldr	r1, [r5, #8]
90015720:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015724:	ed95 6a08 	vldr	s12, [r5, #32]
90015728:	edd5 6a07 	vldr	s13, [r5, #28]
9001572c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015730:	ee76 6a86 	vadd.f32	s13, s13, s12
90015734:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90015738:	e9d5 2300 	ldrd	r2, r3, [r5]
9001573c:	edc5 6a07 	vstr	s13, [r5, #28]
90015740:	441a      	add	r2, r3
90015742:	696b      	ldr	r3, [r5, #20]
90015744:	3301      	adds	r3, #1
90015746:	602a      	str	r2, [r5, #0]
90015748:	616b      	str	r3, [r5, #20]
9001574a:	69ab      	ldr	r3, [r5, #24]
9001574c:	3b01      	subs	r3, #1
9001574e:	61ab      	str	r3, [r5, #24]
90015750:	692b      	ldr	r3, [r5, #16]
90015752:	440b      	add	r3, r1
90015754:	68e9      	ldr	r1, [r5, #12]
90015756:	428b      	cmp	r3, r1
90015758:	612b      	str	r3, [r5, #16]
9001575a:	db15      	blt.n	90015788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
9001575c:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90015760:	3201      	adds	r2, #1
90015762:	1a5b      	subs	r3, r3, r1
90015764:	ee76 6a26 	vadd.f32	s13, s12, s13
90015768:	602a      	str	r2, [r5, #0]
9001576a:	612b      	str	r3, [r5, #16]
9001576c:	edc5 6a07 	vstr	s13, [r5, #28]
90015770:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90015774:	ee36 7a87 	vadd.f32	s14, s13, s14
90015778:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
9001577c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90015780:	ee77 7a27 	vadd.f32	s15, s14, s15
90015784:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90015788:	3f01      	subs	r7, #1
9001578a:	e757      	b.n	9001563c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
9001578c:	4299      	cmp	r1, r3
9001578e:	dc13      	bgt.n	900157b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90015790:	429a      	cmp	r2, r3
90015792:	da14      	bge.n	900157be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90015794:	2502      	movs	r5, #2
90015796:	2703      	movs	r7, #3
90015798:	f04f 0800 	mov.w	r8, #0
9001579c:	46a9      	mov	r9, r5
9001579e:	f04f 0a01 	mov.w	sl, #1
900157a2:	e6ef      	b.n	90015584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
900157a4:	2501      	movs	r5, #1
900157a6:	2700      	movs	r7, #0
900157a8:	46a9      	mov	r9, r5
900157aa:	46b8      	mov	r8, r7
900157ac:	f04f 0a02 	mov.w	sl, #2
900157b0:	e6e8      	b.n	90015584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
900157b2:	2501      	movs	r5, #1
900157b4:	2702      	movs	r7, #2
900157b6:	e6e1      	b.n	9001557c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
900157b8:	2500      	movs	r5, #0
900157ba:	2701      	movs	r7, #1
900157bc:	e7f4      	b.n	900157a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
900157be:	2702      	movs	r7, #2
900157c0:	2503      	movs	r5, #3
900157c2:	f04f 0900 	mov.w	r9, #0
900157c6:	46b8      	mov	r8, r7
900157c8:	e7e9      	b.n	9001579e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
900157ca:	4613      	mov	r3, r2
900157cc:	e728      	b.n	90015620 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
900157ce:	bf00      	nop
900157d0:	240233cc 	.word	0x240233cc
900157d4:	fffd8f01 	.word	0xfffd8f01
900157d8:	00027100 	.word	0x00027100
900157dc:	0004e1ff 	.word	0x0004e1ff
900157e0:	0004e1fe 	.word	0x0004e1fe
900157e4:	240233d4 	.word	0x240233d4
900157e8:	4613      	mov	r3, r2
900157ea:	992b      	ldr	r1, [sp, #172]	@ 0xac
900157ec:	469e      	mov	lr, r3
900157ee:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
900157f0:	469c      	mov	ip, r3
900157f2:	9111      	str	r1, [sp, #68]	@ 0x44
900157f4:	f04f 0900 	mov.w	r9, #0
900157f8:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
900157fc:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
90015800:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
90015804:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
90015808:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
9001580c:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
90015810:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
90015814:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
90015818:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
9001581c:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
90015820:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
90015824:	f1bc 0f00 	cmp.w	ip, #0
90015828:	d147      	bne.n	900158ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
9001582a:	eb03 0c07 	add.w	ip, r3, r7
9001582e:	1ad7      	subs	r7, r2, r3
90015830:	f1b9 0f00 	cmp.w	r9, #0
90015834:	d009      	beq.n	9001584a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90015836:	9029      	str	r0, [sp, #164]	@ 0xa4
90015838:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
9001583c:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
90015840:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
90015844:	912d      	str	r1, [sp, #180]	@ 0xb4
90015846:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
9001584a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
9001584c:	f04f 0800 	mov.w	r8, #0
90015850:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90015854:	9111      	str	r1, [sp, #68]	@ 0x44
90015856:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
9001585a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
9001585e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90015862:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90015866:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
9001586a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
9001586e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90015872:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90015876:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
9001587a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
9001587e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90015882:	f1be 0f00 	cmp.w	lr, #0
90015886:	d031      	beq.n	900158ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90015888:	9e11      	ldr	r6, [sp, #68]	@ 0x44
9001588a:	4450      	add	r0, sl
9001588c:	ee76 6aa4 	vadd.f32	s13, s13, s9
90015890:	4431      	add	r1, r6
90015892:	ee37 7a04 	vadd.f32	s14, s14, s8
90015896:	ee77 7aa3 	vadd.f32	s15, s15, s7
9001589a:	4549      	cmp	r1, r9
9001589c:	db08      	blt.n	900158b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
9001589e:	ee77 7a85 	vadd.f32	s15, s15, s10
900158a2:	3001      	adds	r0, #1
900158a4:	ee76 6aa5 	vadd.f32	s13, s13, s11
900158a8:	eba1 0109 	sub.w	r1, r1, r9
900158ac:	ee37 7a06 	vadd.f32	s14, s14, s12
900158b0:	f10e 3eff 	add.w	lr, lr, #4294967295
900158b4:	f04f 0801 	mov.w	r8, #1
900158b8:	e7e3      	b.n	90015882 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
900158ba:	9e11      	ldr	r6, [sp, #68]	@ 0x44
900158bc:	4450      	add	r0, sl
900158be:	ee37 7a24 	vadd.f32	s14, s14, s9
900158c2:	4431      	add	r1, r6
900158c4:	ee77 7a84 	vadd.f32	s15, s15, s8
900158c8:	ee76 6aa3 	vadd.f32	s13, s13, s7
900158cc:	4541      	cmp	r1, r8
900158ce:	db08      	blt.n	900158e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
900158d0:	ee76 6a85 	vadd.f32	s13, s13, s10
900158d4:	3001      	adds	r0, #1
900158d6:	ee37 7a25 	vadd.f32	s14, s14, s11
900158da:	eba1 0108 	sub.w	r1, r1, r8
900158de:	ee77 7a86 	vadd.f32	s15, s15, s12
900158e2:	f10c 3cff 	add.w	ip, ip, #4294967295
900158e6:	f04f 0901 	mov.w	r9, #1
900158ea:	e79b      	b.n	90015824 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
900158ec:	449c      	add	ip, r3
900158ee:	1aff      	subs	r7, r7, r3
900158f0:	f1b8 0f00 	cmp.w	r8, #0
900158f4:	d009      	beq.n	9001590a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
900158f6:	9019      	str	r0, [sp, #100]	@ 0x64
900158f8:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
900158fc:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90015900:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90015904:	911d      	str	r1, [sp, #116]	@ 0x74
90015906:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
9001590a:	1ad2      	subs	r2, r2, r3
9001590c:	e68b      	b.n	90015626 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
9001590e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90015910:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
90015912:	2b00      	cmp	r3, #0
90015914:	f000 80d1 	beq.w	90015aba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90015918:	ad19      	add	r5, sp, #100	@ 0x64
9001591a:	ac39      	add	r4, sp, #228	@ 0xe4
9001591c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
9001591e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90015922:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90015926:	930c      	str	r3, [sp, #48]	@ 0x30
90015928:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001592a:	6963      	ldr	r3, [r4, #20]
9001592c:	440b      	add	r3, r1
9001592e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90015932:	4408      	add	r0, r1
90015934:	b200      	sxth	r0, r0
90015936:	4283      	cmp	r3, r0
90015938:	900d      	str	r0, [sp, #52]	@ 0x34
9001593a:	f280 80c1 	bge.w	90015ac0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
9001593e:	428b      	cmp	r3, r1
90015940:	da08      	bge.n	90015954 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015942:	2a00      	cmp	r2, #0
90015944:	dd06      	ble.n	90015954 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015946:	1acb      	subs	r3, r1, r3
90015948:	429a      	cmp	r2, r3
9001594a:	f2c0 80bb 	blt.w	90015ac4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
9001594e:	2b00      	cmp	r3, #0
90015950:	f300 80b9 	bgt.w	90015ac6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90015954:	6967      	ldr	r7, [r4, #20]
90015956:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
9001595a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001595c:	443b      	add	r3, r7
9001595e:	461f      	mov	r7, r3
90015960:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90015962:	1bdf      	subs	r7, r3, r7
90015964:	4297      	cmp	r7, r2
90015966:	bfa8      	it	ge
90015968:	4617      	movge	r7, r2
9001596a:	2f00      	cmp	r7, #0
9001596c:	f340 813c 	ble.w	90015be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90015970:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90015972:	6829      	ldr	r1, [r5, #0]
90015974:	f9b3 2000 	ldrsh.w	r2, [r3]
90015978:	f9bb 3000 	ldrsh.w	r3, [fp]
9001597c:	4411      	add	r1, r2
9001597e:	6820      	ldr	r0, [r4, #0]
90015980:	4299      	cmp	r1, r3
90015982:	dd1a      	ble.n	900159ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90015984:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90015988:	4402      	add	r2, r0
9001598a:	440b      	add	r3, r1
9001598c:	b21b      	sxth	r3, r3
9001598e:	429a      	cmp	r2, r3
90015990:	dc13      	bgt.n	900159ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90015992:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90015994:	a912      	add	r1, sp, #72	@ 0x48
90015996:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015998:	9809      	ldr	r0, [sp, #36]	@ 0x24
9001599a:	681b      	ldr	r3, [r3, #0]
9001599c:	9206      	str	r2, [sp, #24]
9001599e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900159a0:	9500      	str	r5, [sp, #0]
900159a2:	9205      	str	r2, [sp, #20]
900159a4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900159a6:	e9cd b203 	strd	fp, r2, [sp, #12]
900159aa:	9a64      	ldr	r2, [sp, #400]	@ 0x190
900159ac:	e9cd 8201 	strd	r8, r2, [sp, #4]
900159b0:	aa49      	add	r2, sp, #292	@ 0x124
900159b2:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
900159b6:	4623      	mov	r3, r4
900159b8:	47c8      	blx	r9
900159ba:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
900159be:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
900159c2:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
900159c6:	ee37 7a27 	vadd.f32	s14, s14, s15
900159ca:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
900159ce:	68a1      	ldr	r1, [r4, #8]
900159d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
900159d4:	ed94 6a08 	vldr	s12, [r4, #32]
900159d8:	edd4 6a07 	vldr	s13, [r4, #28]
900159dc:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
900159e0:	ee76 6a86 	vadd.f32	s13, s13, s12
900159e4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
900159e8:	e9d4 2300 	ldrd	r2, r3, [r4]
900159ec:	edc4 6a07 	vstr	s13, [r4, #28]
900159f0:	441a      	add	r2, r3
900159f2:	6963      	ldr	r3, [r4, #20]
900159f4:	3301      	adds	r3, #1
900159f6:	6022      	str	r2, [r4, #0]
900159f8:	6163      	str	r3, [r4, #20]
900159fa:	69a3      	ldr	r3, [r4, #24]
900159fc:	3b01      	subs	r3, #1
900159fe:	61a3      	str	r3, [r4, #24]
90015a00:	6923      	ldr	r3, [r4, #16]
90015a02:	440b      	add	r3, r1
90015a04:	68e1      	ldr	r1, [r4, #12]
90015a06:	428b      	cmp	r3, r1
90015a08:	6123      	str	r3, [r4, #16]
90015a0a:	db15      	blt.n	90015a38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90015a0c:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90015a10:	3201      	adds	r2, #1
90015a12:	1a5b      	subs	r3, r3, r1
90015a14:	ee76 6a26 	vadd.f32	s13, s12, s13
90015a18:	6022      	str	r2, [r4, #0]
90015a1a:	6123      	str	r3, [r4, #16]
90015a1c:	edc4 6a07 	vstr	s13, [r4, #28]
90015a20:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90015a24:	ee36 7a87 	vadd.f32	s14, s13, s14
90015a28:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015a2c:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90015a30:	ee77 7a27 	vadd.f32	s15, s14, s15
90015a34:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015a38:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90015a3c:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90015a40:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90015a44:	ee37 7a27 	vadd.f32	s14, s14, s15
90015a48:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90015a4c:	68a9      	ldr	r1, [r5, #8]
90015a4e:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015a52:	ed95 6a08 	vldr	s12, [r5, #32]
90015a56:	edd5 6a07 	vldr	s13, [r5, #28]
90015a5a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015a5e:	ee76 6a86 	vadd.f32	s13, s13, s12
90015a62:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90015a66:	e9d5 2300 	ldrd	r2, r3, [r5]
90015a6a:	edc5 6a07 	vstr	s13, [r5, #28]
90015a6e:	441a      	add	r2, r3
90015a70:	696b      	ldr	r3, [r5, #20]
90015a72:	3301      	adds	r3, #1
90015a74:	602a      	str	r2, [r5, #0]
90015a76:	616b      	str	r3, [r5, #20]
90015a78:	69ab      	ldr	r3, [r5, #24]
90015a7a:	3b01      	subs	r3, #1
90015a7c:	61ab      	str	r3, [r5, #24]
90015a7e:	692b      	ldr	r3, [r5, #16]
90015a80:	440b      	add	r3, r1
90015a82:	68e9      	ldr	r1, [r5, #12]
90015a84:	428b      	cmp	r3, r1
90015a86:	612b      	str	r3, [r5, #16]
90015a88:	db15      	blt.n	90015ab6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90015a8a:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90015a8e:	3201      	adds	r2, #1
90015a90:	1a5b      	subs	r3, r3, r1
90015a92:	ee76 6a26 	vadd.f32	s13, s12, s13
90015a96:	602a      	str	r2, [r5, #0]
90015a98:	612b      	str	r3, [r5, #16]
90015a9a:	edc5 6a07 	vstr	s13, [r5, #28]
90015a9e:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90015aa2:	ee36 7a87 	vadd.f32	s14, s13, s14
90015aa6:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015aaa:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90015aae:	ee77 7a27 	vadd.f32	s15, s14, s15
90015ab2:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90015ab6:	3f01      	subs	r7, #1
90015ab8:	e757      	b.n	9001596a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90015aba:	ad39      	add	r5, sp, #228	@ 0xe4
90015abc:	ac19      	add	r4, sp, #100	@ 0x64
90015abe:	e72d      	b.n	9001591c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90015ac0:	4613      	mov	r3, r2
90015ac2:	e744      	b.n	9001594e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90015ac4:	4613      	mov	r3, r2
90015ac6:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
90015ac8:	469e      	mov	lr, r3
90015aca:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
90015ace:	461f      	mov	r7, r3
90015ad0:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
90015ad4:	f04f 0900 	mov.w	r9, #0
90015ad8:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
90015adc:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
90015ae0:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
90015ae4:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
90015ae8:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
90015aec:	993d      	ldr	r1, [sp, #244]	@ 0xf4
90015aee:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
90015af2:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
90015af6:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
90015afa:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
90015afe:	960e      	str	r6, [sp, #56]	@ 0x38
90015b00:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
90015b04:	2f00      	cmp	r7, #0
90015b06:	d146      	bne.n	90015b96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
90015b08:	449c      	add	ip, r3
90015b0a:	1ad7      	subs	r7, r2, r3
90015b0c:	f1b9 0f00 	cmp.w	r9, #0
90015b10:	d009      	beq.n	90015b26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90015b12:	9039      	str	r0, [sp, #228]	@ 0xe4
90015b14:	913d      	str	r1, [sp, #244]	@ 0xf4
90015b16:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
90015b1a:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
90015b1e:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
90015b22:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
90015b26:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90015b28:	f04f 0800 	mov.w	r8, #0
90015b2c:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90015b30:	910e      	str	r1, [sp, #56]	@ 0x38
90015b32:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
90015b36:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90015b3a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90015b3e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90015b42:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90015b46:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90015b4a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90015b4e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90015b52:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90015b56:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90015b5a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90015b5e:	f1be 0f00 	cmp.w	lr, #0
90015b62:	d030      	beq.n	90015bc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90015b64:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90015b66:	4450      	add	r0, sl
90015b68:	ee76 6aa4 	vadd.f32	s13, s13, s9
90015b6c:	4431      	add	r1, r6
90015b6e:	ee37 7a04 	vadd.f32	s14, s14, s8
90015b72:	ee77 7aa3 	vadd.f32	s15, s15, s7
90015b76:	4549      	cmp	r1, r9
90015b78:	db08      	blt.n	90015b8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90015b7a:	ee77 7a85 	vadd.f32	s15, s15, s10
90015b7e:	3001      	adds	r0, #1
90015b80:	ee76 6aa5 	vadd.f32	s13, s13, s11
90015b84:	eba1 0109 	sub.w	r1, r1, r9
90015b88:	ee37 7a06 	vadd.f32	s14, s14, s12
90015b8c:	f10e 3eff 	add.w	lr, lr, #4294967295
90015b90:	f04f 0801 	mov.w	r8, #1
90015b94:	e7e3      	b.n	90015b5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90015b96:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90015b98:	4450      	add	r0, sl
90015b9a:	ee37 7a24 	vadd.f32	s14, s14, s9
90015b9e:	4431      	add	r1, r6
90015ba0:	ee77 7a84 	vadd.f32	s15, s15, s8
90015ba4:	ee76 6aa3 	vadd.f32	s13, s13, s7
90015ba8:	4541      	cmp	r1, r8
90015baa:	db08      	blt.n	90015bbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90015bac:	ee76 6a85 	vadd.f32	s13, s13, s10
90015bb0:	3001      	adds	r0, #1
90015bb2:	ee37 7a25 	vadd.f32	s14, s14, s11
90015bb6:	eba1 0108 	sub.w	r1, r1, r8
90015bba:	ee77 7a86 	vadd.f32	s15, s15, s12
90015bbe:	3f01      	subs	r7, #1
90015bc0:	f04f 0901 	mov.w	r9, #1
90015bc4:	e79e      	b.n	90015b04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90015bc6:	449c      	add	ip, r3
90015bc8:	1aff      	subs	r7, r7, r3
90015bca:	f1b8 0f00 	cmp.w	r8, #0
90015bce:	d009      	beq.n	90015be4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90015bd0:	9019      	str	r0, [sp, #100]	@ 0x64
90015bd2:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90015bd6:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90015bda:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90015bde:	911d      	str	r1, [sp, #116]	@ 0x74
90015be0:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90015be4:	1ad2      	subs	r2, r2, r3
90015be6:	e6b5      	b.n	90015954 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015be8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90015bea:	681b      	ldr	r3, [r3, #0]
90015bec:	b923      	cbnz	r3, 90015bf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015bee:	4b04      	ldr	r3, [pc, #16]	@ (90015c00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90015bf0:	6818      	ldr	r0, [r3, #0]
90015bf2:	6803      	ldr	r3, [r0, #0]
90015bf4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90015bf6:	4798      	blx	r3
90015bf8:	b05b      	add	sp, #364	@ 0x16c
90015bfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015bfe:	bf00      	nop
90015c00:	240233d4 	.word	0x240233d4

90015c04 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90015c04:	b570      	push	{r4, r5, r6, lr}
90015c06:	4604      	mov	r4, r0
90015c08:	2500      	movs	r5, #0
90015c0a:	9805      	ldr	r0, [sp, #20]
90015c0c:	f89d 601c 	ldrb.w	r6, [sp, #28]
90015c10:	6061      	str	r1, [r4, #4]
90015c12:	8263      	strh	r3, [r4, #18]
90015c14:	f89d 1010 	ldrb.w	r1, [sp, #16]
90015c18:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90015c1c:	8025      	strh	r5, [r4, #0]
90015c1e:	7221      	strb	r1, [r4, #8]
90015c20:	7266      	strb	r6, [r4, #9]
90015c22:	60e0      	str	r0, [r4, #12]
90015c24:	8222      	strh	r2, [r4, #16]
90015c26:	82a3      	strh	r3, [r4, #20]
90015c28:	82e5      	strh	r5, [r4, #22]
90015c2a:	8325      	strh	r5, [r4, #24]
90015c2c:	8365      	strh	r5, [r4, #26]
90015c2e:	83a5      	strh	r5, [r4, #28]
90015c30:	83e5      	strh	r5, [r4, #30]
90015c32:	8425      	strh	r5, [r4, #32]
90015c34:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
90015c38:	b32e      	cbz	r6, 90015c86 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015c3a:	6803      	ldr	r3, [r0, #0]
90015c3c:	695b      	ldr	r3, [r3, #20]
90015c3e:	4798      	blx	r3
90015c40:	4606      	mov	r6, r0
90015c42:	b300      	cbz	r0, 90015c86 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015c44:	68e0      	ldr	r0, [r4, #12]
90015c46:	4631      	mov	r1, r6
90015c48:	6803      	ldr	r3, [r0, #0]
90015c4a:	68db      	ldr	r3, [r3, #12]
90015c4c:	4798      	blx	r3
90015c4e:	4605      	mov	r5, r0
90015c50:	b1c8      	cbz	r0, 90015c86 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015c52:	7b43      	ldrb	r3, [r0, #13]
90015c54:	7a82      	ldrb	r2, [r0, #10]
90015c56:	005b      	lsls	r3, r3, #1
90015c58:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90015c5c:	4313      	orrs	r3, r2
90015c5e:	8423      	strh	r3, [r4, #32]
90015c60:	7a63      	ldrb	r3, [r4, #9]
90015c62:	2b06      	cmp	r3, #6
90015c64:	d10f      	bne.n	90015c86 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015c66:	68e0      	ldr	r0, [r4, #12]
90015c68:	462a      	mov	r2, r5
90015c6a:	4631      	mov	r1, r6
90015c6c:	6803      	ldr	r3, [r0, #0]
90015c6e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90015c70:	4798      	blx	r3
90015c72:	7b6b      	ldrb	r3, [r5, #13]
90015c74:	005b      	lsls	r3, r3, #1
90015c76:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90015c7a:	7aab      	ldrb	r3, [r5, #10]
90015c7c:	4313      	orrs	r3, r2
90015c7e:	4418      	add	r0, r3
90015c80:	8c23      	ldrh	r3, [r4, #32]
90015c82:	4418      	add	r0, r3
90015c84:	8420      	strh	r0, [r4, #32]
90015c86:	4620      	mov	r0, r4
90015c88:	bd70      	pop	{r4, r5, r6, pc}

90015c8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90015c8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015c8e:	2400      	movs	r4, #0
90015c90:	b085      	sub	sp, #20
90015c92:	4681      	mov	r9, r0
90015c94:	4688      	mov	r8, r1
90015c96:	4692      	mov	sl, r2
90015c98:	469b      	mov	fp, r3
90015c9a:	4627      	mov	r7, r4
90015c9c:	4625      	mov	r5, r4
90015c9e:	4626      	mov	r6, r4
90015ca0:	4554      	cmp	r4, sl
90015ca2:	da2a      	bge.n	90015cfa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90015ca4:	2300      	movs	r3, #0
90015ca6:	9303      	str	r3, [sp, #12]
90015ca8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90015cac:	429d      	cmp	r5, r3
90015cae:	d004      	beq.n	90015cba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90015cb0:	f242 030b 	movw	r3, #8203	@ 0x200b
90015cb4:	429d      	cmp	r5, r3
90015cb6:	bf18      	it	ne
90015cb8:	462f      	movne	r7, r5
90015cba:	ab03      	add	r3, sp, #12
90015cbc:	4642      	mov	r2, r8
90015cbe:	4659      	mov	r1, fp
90015cc0:	4648      	mov	r0, r9
90015cc2:	f003 fb51 	bl	90019368 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015cc6:	4605      	mov	r5, r0
90015cc8:	b1b8      	cbz	r0, 90015cfa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90015cca:	280a      	cmp	r0, #10
90015ccc:	d015      	beq.n	90015cfa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90015cce:	9a03      	ldr	r2, [sp, #12]
90015cd0:	b18a      	cbz	r2, 90015cf6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90015cd2:	7b50      	ldrb	r0, [r2, #13]
90015cd4:	4639      	mov	r1, r7
90015cd6:	7a93      	ldrb	r3, [r2, #10]
90015cd8:	0040      	lsls	r0, r0, #1
90015cda:	8895      	ldrh	r5, [r2, #4]
90015cdc:	f400 7080 	and.w	r0, r0, #256	@ 0x100
90015ce0:	4303      	orrs	r3, r0
90015ce2:	4640      	mov	r0, r8
90015ce4:	9301      	str	r3, [sp, #4]
90015ce6:	f8d8 3000 	ldr.w	r3, [r8]
90015cea:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90015cec:	4798      	blx	r3
90015cee:	9b01      	ldr	r3, [sp, #4]
90015cf0:	4418      	add	r0, r3
90015cf2:	4406      	add	r6, r0
90015cf4:	b2b6      	uxth	r6, r6
90015cf6:	3401      	adds	r4, #1
90015cf8:	e7d2      	b.n	90015ca0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
90015cfa:	4630      	mov	r0, r6
90015cfc:	b005      	add	sp, #20
90015cfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90015d02 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90015d02:	2a02      	cmp	r2, #2
90015d04:	b530      	push	{r4, r5, lr}
90015d06:	d011      	beq.n	90015d2c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
90015d08:	2a03      	cmp	r2, #3
90015d0a:	d01c      	beq.n	90015d46 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90015d0c:	2a01      	cmp	r2, #1
90015d0e:	d10c      	bne.n	90015d2a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90015d10:	888b      	ldrh	r3, [r1, #4]
90015d12:	8801      	ldrh	r1, [r0, #0]
90015d14:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90015d18:	1a5b      	subs	r3, r3, r1
90015d1a:	8844      	ldrh	r4, [r0, #2]
90015d1c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90015d20:	1a9b      	subs	r3, r3, r2
90015d22:	8004      	strh	r4, [r0, #0]
90015d24:	8081      	strh	r1, [r0, #4]
90015d26:	8043      	strh	r3, [r0, #2]
90015d28:	80c2      	strh	r2, [r0, #6]
90015d2a:	bd30      	pop	{r4, r5, pc}
90015d2c:	88cb      	ldrh	r3, [r1, #6]
90015d2e:	8842      	ldrh	r2, [r0, #2]
90015d30:	1a9b      	subs	r3, r3, r2
90015d32:	88c2      	ldrh	r2, [r0, #6]
90015d34:	1a9b      	subs	r3, r3, r2
90015d36:	888a      	ldrh	r2, [r1, #4]
90015d38:	8801      	ldrh	r1, [r0, #0]
90015d3a:	8043      	strh	r3, [r0, #2]
90015d3c:	1a52      	subs	r2, r2, r1
90015d3e:	8881      	ldrh	r1, [r0, #4]
90015d40:	1a52      	subs	r2, r2, r1
90015d42:	8002      	strh	r2, [r0, #0]
90015d44:	e7f1      	b.n	90015d2a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90015d46:	88cb      	ldrh	r3, [r1, #6]
90015d48:	8841      	ldrh	r1, [r0, #2]
90015d4a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90015d4e:	1a5b      	subs	r3, r3, r1
90015d50:	f9b0 5000 	ldrsh.w	r5, [r0]
90015d54:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90015d58:	1a9b      	subs	r3, r3, r2
90015d5a:	8045      	strh	r5, [r0, #2]
90015d5c:	8082      	strh	r2, [r0, #4]
90015d5e:	8003      	strh	r3, [r0, #0]
90015d60:	80c4      	strh	r4, [r0, #6]
90015d62:	e7e2      	b.n	90015d2a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90015d64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90015d64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015d68:	b09f      	sub	sp, #124	@ 0x7c
90015d6a:	920f      	str	r2, [sp, #60]	@ 0x3c
90015d6c:	9312      	str	r3, [sp, #72]	@ 0x48
90015d6e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90015d70:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90015d72:	8812      	ldrh	r2, [r2, #0]
90015d74:	889b      	ldrh	r3, [r3, #4]
90015d76:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90015d78:	4413      	add	r3, r2
90015d7a:	900e      	str	r0, [sp, #56]	@ 0x38
90015d7c:	6828      	ldr	r0, [r5, #0]
90015d7e:	b21b      	sxth	r3, r3
90015d80:	9117      	str	r1, [sp, #92]	@ 0x5c
90015d82:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
90015d86:	9311      	str	r3, [sp, #68]	@ 0x44
90015d88:	6803      	ldr	r3, [r0, #0]
90015d8a:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
90015d8e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90015d90:	4798      	blx	r3
90015d92:	682b      	ldr	r3, [r5, #0]
90015d94:	9013      	str	r0, [sp, #76]	@ 0x4c
90015d96:	7b1a      	ldrb	r2, [r3, #12]
90015d98:	7adb      	ldrb	r3, [r3, #11]
90015d9a:	9215      	str	r2, [sp, #84]	@ 0x54
90015d9c:	9316      	str	r3, [sp, #88]	@ 0x58
90015d9e:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
90015da2:	2c00      	cmp	r4, #0
90015da4:	d067      	beq.n	90015e76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90015da6:	7c2b      	ldrb	r3, [r5, #16]
90015da8:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90015daa:	2b06      	cmp	r3, #6
90015dac:	bf14      	ite	ne
90015dae:	2301      	movne	r3, #1
90015db0:	2302      	moveq	r3, #2
90015db2:	4413      	add	r3, r2
90015db4:	f04f 0900 	mov.w	r9, #0
90015db8:	9310      	str	r3, [sp, #64]	@ 0x40
90015dba:	464c      	mov	r4, r9
90015dbc:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
90015dc0:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
90015dc4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90015dc6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90015dc8:	4293      	cmp	r3, r2
90015dca:	f280 808b 	bge.w	90015ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90015dce:	2300      	movs	r3, #0
90015dd0:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
90015dd4:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
90015dd8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90015ddc:	429c      	cmp	r4, r3
90015dde:	d006      	beq.n	90015dee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
90015de0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015de2:	f242 020b 	movw	r2, #8203	@ 0x200b
90015de6:	4294      	cmp	r4, r2
90015de8:	bf18      	it	ne
90015dea:	4623      	movne	r3, r4
90015dec:	930c      	str	r3, [sp, #48]	@ 0x30
90015dee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90015df0:	992d      	ldr	r1, [sp, #180]	@ 0xb4
90015df2:	682a      	ldr	r2, [r5, #0]
90015df4:	428b      	cmp	r3, r1
90015df6:	db40      	blt.n	90015e7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
90015df8:	6813      	ldr	r3, [r2, #0]
90015dfa:	4610      	mov	r0, r2
90015dfc:	695b      	ldr	r3, [r3, #20]
90015dfe:	4798      	blx	r3
90015e00:	4604      	mov	r4, r0
90015e02:	6828      	ldr	r0, [r5, #0]
90015e04:	aa1d      	add	r2, sp, #116	@ 0x74
90015e06:	4621      	mov	r1, r4
90015e08:	6803      	ldr	r3, [r0, #0]
90015e0a:	689f      	ldr	r7, [r3, #8]
90015e0c:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90015e10:	47b8      	blx	r7
90015e12:	901c      	str	r0, [sp, #112]	@ 0x70
90015e14:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90015e18:	429c      	cmp	r4, r3
90015e1a:	f000 80eb 	beq.w	90015ff4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015e1e:	f242 030b 	movw	r3, #8203	@ 0x200b
90015e22:	429c      	cmp	r4, r3
90015e24:	f000 80e6 	beq.w	90015ff4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015e28:	2c00      	cmp	r4, #0
90015e2a:	f000 810d 	beq.w	90016048 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90015e2e:	2c0a      	cmp	r4, #10
90015e30:	d05e      	beq.n	90015ef0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90015e32:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90015e34:	b36a      	cbz	r2, 90015e92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
90015e36:	8894      	ldrh	r4, [r2, #4]
90015e38:	f1bb 0f00 	cmp.w	fp, #0
90015e3c:	d03a      	beq.n	90015eb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
90015e3e:	f892 900d 	ldrb.w	r9, [r2, #13]
90015e42:	f1bb 0f01 	cmp.w	fp, #1
90015e46:	ea4f 0949 	mov.w	r9, r9, lsl #1
90015e4a:	f409 7380 	and.w	r3, r9, #256	@ 0x100
90015e4e:	f892 900a 	ldrb.w	r9, [r2, #10]
90015e52:	ea49 0903 	orr.w	r9, r9, r3
90015e56:	d133      	bne.n	90015ec0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90015e58:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015e5a:	eba6 0609 	sub.w	r6, r6, r9
90015e5e:	2b00      	cmp	r3, #0
90015e60:	d14d      	bne.n	90015efe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90015e62:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90015e64:	eb09 0306 	add.w	r3, r9, r6
90015e68:	4413      	add	r3, r2
90015e6a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90015e6c:	f9b2 2000 	ldrsh.w	r2, [r2]
90015e70:	4293      	cmp	r3, r2
90015e72:	da4e      	bge.n	90015f12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90015e74:	e036      	b.n	90015ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90015e76:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90015e78:	e79c      	b.n	90015db4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
90015e7a:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90015e7e:	4659      	mov	r1, fp
90015e80:	982c      	ldr	r0, [sp, #176]	@ 0xb0
90015e82:	9301      	str	r3, [sp, #4]
90015e84:	ab1d      	add	r3, sp, #116	@ 0x74
90015e86:	9300      	str	r3, [sp, #0]
90015e88:	ab1c      	add	r3, sp, #112	@ 0x70
90015e8a:	f003 fab6 	bl	900193fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
90015e8e:	4604      	mov	r4, r0
90015e90:	e7c0      	b.n	90015e14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
90015e92:	6828      	ldr	r0, [r5, #0]
90015e94:	6803      	ldr	r3, [r0, #0]
90015e96:	691b      	ldr	r3, [r3, #16]
90015e98:	4798      	blx	r3
90015e9a:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90015e9e:	4298      	cmp	r0, r3
90015ea0:	f000 80a8 	beq.w	90015ff4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015ea4:	f242 030b 	movw	r3, #8203	@ 0x200b
90015ea8:	4298      	cmp	r0, r3
90015eaa:	f000 80a3 	beq.w	90015ff4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015eae:	f1bb 0f00 	cmp.w	fp, #0
90015eb2:	d100      	bne.n	90015eb6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90015eb4:	444e      	add	r6, r9
90015eb6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90015eb8:	2a00      	cmp	r2, #0
90015eba:	d1c0      	bne.n	90015e3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90015ebc:	4691      	mov	r9, r2
90015ebe:	e099      	b.n	90015ff4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015ec0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015ec2:	2b00      	cmp	r3, #0
90015ec4:	f000 80c2 	beq.w	9001604c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
90015ec8:	f1bb 0f00 	cmp.w	fp, #0
90015ecc:	d117      	bne.n	90015efe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90015ece:	6828      	ldr	r0, [r5, #0]
90015ed0:	990c      	ldr	r1, [sp, #48]	@ 0x30
90015ed2:	6803      	ldr	r3, [r0, #0]
90015ed4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90015ed6:	4798      	blx	r3
90015ed8:	4406      	add	r6, r0
90015eda:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90015edc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90015ede:	1af3      	subs	r3, r6, r3
90015ee0:	4293      	cmp	r3, r2
90015ee2:	dd16      	ble.n	90015f12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90015ee4:	2c00      	cmp	r4, #0
90015ee6:	f000 80af 	beq.w	90016048 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90015eea:	2c0a      	cmp	r4, #10
90015eec:	f040 809d 	bne.w	9001602a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
90015ef0:	240a      	movs	r4, #10
90015ef2:	fab4 f084 	clz	r0, r4
90015ef6:	0940      	lsrs	r0, r0, #5
90015ef8:	b01f      	add	sp, #124	@ 0x7c
90015efa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015efe:	6828      	ldr	r0, [r5, #0]
90015f00:	990c      	ldr	r1, [sp, #48]	@ 0x30
90015f02:	6803      	ldr	r3, [r0, #0]
90015f04:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90015f06:	4798      	blx	r3
90015f08:	f1bb 0f01 	cmp.w	fp, #1
90015f0c:	eba6 0600 	sub.w	r6, r6, r0
90015f10:	d0a7      	beq.n	90015e62 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
90015f12:	981c      	ldr	r0, [sp, #112]	@ 0x70
90015f14:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90015f16:	f990 1009 	ldrsb.w	r1, [r0, #9]
90015f1a:	f9b3 8000 	ldrsh.w	r8, [r3]
90015f1e:	7b43      	ldrb	r3, [r0, #13]
90015f20:	4431      	add	r1, r6
90015f22:	015b      	lsls	r3, r3, #5
90015f24:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90015f28:	7983      	ldrb	r3, [r0, #6]
90015f2a:	4313      	orrs	r3, r2
90015f2c:	440b      	add	r3, r1
90015f2e:	4543      	cmp	r3, r8
90015f30:	db60      	blt.n	90015ff4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015f32:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90015f34:	4299      	cmp	r1, r3
90015f36:	da5d      	bge.n	90015ff4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015f38:	6828      	ldr	r0, [r5, #0]
90015f3a:	45b0      	cmp	r8, r6
90015f3c:	6803      	ldr	r3, [r0, #0]
90015f3e:	bfcc      	ite	gt
90015f40:	eba8 0806 	subgt.w	r8, r8, r6
90015f44:	f04f 0800 	movle.w	r8, #0
90015f48:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90015f4a:	bfc8      	it	gt
90015f4c:	fa1f f888 	uxthgt.w	r8, r8
90015f50:	4798      	blx	r3
90015f52:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90015f54:	7b53      	ldrb	r3, [r2, #13]
90015f56:	00d9      	lsls	r1, r3, #3
90015f58:	f401 7780 	and.w	r7, r1, #256	@ 0x100
90015f5c:	7a11      	ldrb	r1, [r2, #8]
90015f5e:	4339      	orrs	r1, r7
90015f60:	065f      	lsls	r7, r3, #25
90015f62:	9f12      	ldr	r7, [sp, #72]	@ 0x48
90015f64:	bf48      	it	mi
90015f66:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
90015f6a:	4407      	add	r7, r0
90015f6c:	bf48      	it	mi
90015f6e:	b209      	sxthmi	r1, r1
90015f70:	1a7f      	subs	r7, r7, r1
90015f72:	9929      	ldr	r1, [sp, #164]	@ 0xa4
90015f74:	b2bf      	uxth	r7, r7
90015f76:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90015f7a:	fa0f fa87 	sxth.w	sl, r7
90015f7e:	4551      	cmp	r1, sl
90015f80:	dd3c      	ble.n	90015ffc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
90015f82:	011b      	lsls	r3, r3, #4
90015f84:	79d0      	ldrb	r0, [r2, #7]
90015f86:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90015f8a:	4303      	orrs	r3, r0
90015f8c:	449a      	add	sl, r3
90015f8e:	4551      	cmp	r1, sl
90015f90:	dc30      	bgt.n	90015ff4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015f92:	1bcf      	subs	r7, r1, r7
90015f94:	468a      	mov	sl, r1
90015f96:	b23f      	sxth	r7, r7
90015f98:	9219      	str	r2, [sp, #100]	@ 0x64
90015f9a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90015f9c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90015f9e:	6828      	ldr	r0, [r5, #0]
90015fa0:	2a00      	cmp	r2, #0
90015fa2:	d12d      	bne.n	90016000 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
90015fa4:	9318      	str	r3, [sp, #96]	@ 0x60
90015fa6:	b2bf      	uxth	r7, r7
90015fa8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90015faa:	6819      	ldr	r1, [r3, #0]
90015fac:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
90015fae:	6801      	ldr	r1, [r0, #0]
90015fb0:	9314      	str	r3, [sp, #80]	@ 0x50
90015fb2:	6c09      	ldr	r1, [r1, #64]	@ 0x40
90015fb4:	4788      	blx	r1
90015fb6:	79a9      	ldrb	r1, [r5, #6]
90015fb8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90015fba:	910b      	str	r1, [sp, #44]	@ 0x2c
90015fbc:	7ba9      	ldrb	r1, [r5, #14]
90015fbe:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90015fc0:	910a      	str	r1, [sp, #40]	@ 0x28
90015fc2:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
90015fc6:	9109      	str	r1, [sp, #36]	@ 0x24
90015fc8:	68a9      	ldr	r1, [r5, #8]
90015fca:	9306      	str	r3, [sp, #24]
90015fcc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90015fce:	9205      	str	r2, [sp, #20]
90015fd0:	9304      	str	r3, [sp, #16]
90015fd2:	f8cd a004 	str.w	sl, [sp, #4]
90015fd6:	e9cd 8702 	strd	r8, r7, [sp, #8]
90015fda:	44b0      	add	r8, r6
90015fdc:	9f14      	ldr	r7, [sp, #80]	@ 0x50
90015fde:	fa0f f388 	sxth.w	r3, r8
90015fe2:	9300      	str	r3, [sp, #0]
90015fe4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90015fe6:	e9cd 0107 	strd	r0, r1, [sp, #28]
90015fea:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90015fec:	681a      	ldr	r2, [r3, #0]
90015fee:	980e      	ldr	r0, [sp, #56]	@ 0x38
90015ff0:	685b      	ldr	r3, [r3, #4]
90015ff2:	47b8      	blx	r7
90015ff4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90015ff6:	3301      	adds	r3, #1
90015ff8:	930d      	str	r3, [sp, #52]	@ 0x34
90015ffa:	e6e3      	b.n	90015dc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
90015ffc:	2700      	movs	r7, #0
90015ffe:	e7cb      	b.n	90015f98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
90016000:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90016002:	f8d2 c008 	ldr.w	ip, [r2, #8]
90016006:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90016008:	f8dc 1000 	ldr.w	r1, [ip]
9001600c:	e9cd 6204 	strd	r6, r2, [sp, #16]
90016010:	79aa      	ldrb	r2, [r5, #6]
90016012:	9203      	str	r2, [sp, #12]
90016014:	7baa      	ldrb	r2, [r5, #14]
90016016:	9202      	str	r2, [sp, #8]
90016018:	68aa      	ldr	r2, [r5, #8]
9001601a:	e9cd 0200 	strd	r0, r2, [sp]
9001601e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90016020:	4660      	mov	r0, ip
90016022:	688f      	ldr	r7, [r1, #8]
90016024:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90016026:	47b8      	blx	r7
90016028:	e7e4      	b.n	90015ff4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001602a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9001602c:	3501      	adds	r5, #1
9001602e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90016030:	429d      	cmp	r5, r3
90016032:	f6bf af5e 	bge.w	90015ef2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90016036:	4659      	mov	r1, fp
90016038:	982c      	ldr	r0, [sp, #176]	@ 0xb0
9001603a:	f7ef fb75 	bl	90005728 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001603e:	4604      	mov	r4, r0
90016040:	b110      	cbz	r0, 90016048 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90016042:	280a      	cmp	r0, #10
90016044:	d1f2      	bne.n	9001602c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
90016046:	e753      	b.n	90015ef0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90016048:	2400      	movs	r4, #0
9001604a:	e752      	b.n	90015ef2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
9001604c:	f1bb 0f00 	cmp.w	fp, #0
90016050:	f43f af43 	beq.w	90015eda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
90016054:	e75d      	b.n	90015f12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

90016056 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90016056:	b530      	push	{r4, r5, lr}
90016058:	8ac4      	ldrh	r4, [r0, #22]
9001605a:	8b45      	ldrh	r5, [r0, #26]
9001605c:	8343      	strh	r3, [r0, #26]
9001605e:	442c      	add	r4, r5
90016060:	1ae4      	subs	r4, r4, r3
90016062:	8b83      	ldrh	r3, [r0, #28]
90016064:	82c4      	strh	r4, [r0, #22]
90016066:	8b04      	ldrh	r4, [r0, #24]
90016068:	4422      	add	r2, r4
9001606a:	440c      	add	r4, r1
9001606c:	1a59      	subs	r1, r3, r1
9001606e:	83c2      	strh	r2, [r0, #30]
90016070:	8304      	strh	r4, [r0, #24]
90016072:	8381      	strh	r1, [r0, #28]
90016074:	bd30      	pop	{r4, r5, pc}

90016076 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90016076:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001607a:	4604      	mov	r4, r0
9001607c:	8a47      	ldrh	r7, [r0, #18]
9001607e:	68c0      	ldr	r0, [r0, #12]
90016080:	b085      	sub	sp, #20
90016082:	6803      	ldr	r3, [r0, #0]
90016084:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016086:	4798      	blx	r3
90016088:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
9001608c:	7a63      	ldrb	r3, [r4, #9]
9001608e:	eb06 0640 	add.w	r6, r6, r0, lsl #1
90016092:	3b01      	subs	r3, #1
90016094:	42b7      	cmp	r7, r6
90016096:	bfac      	ite	ge
90016098:	f04f 0900 	movge.w	r9, #0
9001609c:	f04f 0901 	movlt.w	r9, #1
900160a0:	2b05      	cmp	r3, #5
900160a2:	d804      	bhi.n	900160ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
900160a4:	e8df f003 	tbb	[pc, r3]
900160a8:	470f0854 	.word	0x470f0854
900160ac:	4c4c      	.short	0x4c4c
900160ae:	2500      	movs	r5, #0
900160b0:	46a9      	mov	r9, r5
900160b2:	462e      	mov	r6, r5
900160b4:	462f      	mov	r7, r5
900160b6:	e00e      	b.n	900160d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900160b8:	42b7      	cmp	r7, r6
900160ba:	f04f 0500 	mov.w	r5, #0
900160be:	bfb4      	ite	lt
900160c0:	2600      	movlt	r6, #0
900160c2:	2601      	movge	r6, #1
900160c4:	e7f6      	b.n	900160b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
900160c6:	42b7      	cmp	r7, r6
900160c8:	464d      	mov	r5, r9
900160ca:	f04f 0900 	mov.w	r9, #0
900160ce:	bfb4      	ite	lt
900160d0:	2600      	movlt	r6, #0
900160d2:	2601      	movge	r6, #1
900160d4:	464f      	mov	r7, r9
900160d6:	f04f 0800 	mov.w	r8, #0
900160da:	f8a4 8016 	strh.w	r8, [r4, #22]
900160de:	f8a4 8018 	strh.w	r8, [r4, #24]
900160e2:	f8cd 8004 	str.w	r8, [sp, #4]
900160e6:	2300      	movs	r3, #0
900160e8:	9303      	str	r3, [sp, #12]
900160ea:	8823      	ldrh	r3, [r4, #0]
900160ec:	2b20      	cmp	r3, #32
900160ee:	d033      	beq.n	90016158 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
900160f0:	f242 010b 	movw	r1, #8203	@ 0x200b
900160f4:	1a5a      	subs	r2, r3, r1
900160f6:	f1d2 0a00 	rsbs	sl, r2, #0
900160fa:	eb4a 0a02 	adc.w	sl, sl, r2
900160fe:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90016102:	4293      	cmp	r3, r2
90016104:	d008      	beq.n	90016118 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90016106:	428b      	cmp	r3, r1
90016108:	9a01      	ldr	r2, [sp, #4]
9001610a:	bf0e      	itee	eq
9001610c:	f04f 0a01 	moveq.w	sl, #1
90016110:	461a      	movne	r2, r3
90016112:	f04f 0a00 	movne.w	sl, #0
90016116:	9201      	str	r2, [sp, #4]
90016118:	ab03      	add	r3, sp, #12
9001611a:	68e2      	ldr	r2, [r4, #12]
9001611c:	7a21      	ldrb	r1, [r4, #8]
9001611e:	6860      	ldr	r0, [r4, #4]
90016120:	f003 f922 	bl	90019368 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90016124:	8020      	strh	r0, [r4, #0]
90016126:	b9d8      	cbnz	r0, 90016160 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90016128:	8ba2      	ldrh	r2, [r4, #28]
9001612a:	2300      	movs	r3, #0
9001612c:	4611      	mov	r1, r2
9001612e:	4620      	mov	r0, r4
90016130:	f7ff ff91 	bl	90016056 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90016134:	e06e      	b.n	90016214 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90016136:	2500      	movs	r5, #0
90016138:	2701      	movs	r7, #1
9001613a:	46a9      	mov	r9, r5
9001613c:	462e      	mov	r6, r5
9001613e:	e7ca      	b.n	900160d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90016140:	42b7      	cmp	r7, r6
90016142:	f04f 0500 	mov.w	r5, #0
90016146:	bfb4      	ite	lt
90016148:	2700      	movlt	r7, #0
9001614a:	2701      	movge	r7, #1
9001614c:	462e      	mov	r6, r5
9001614e:	e7c2      	b.n	900160d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90016150:	2500      	movs	r5, #0
90016152:	2601      	movs	r6, #1
90016154:	46a9      	mov	r9, r5
90016156:	e7ad      	b.n	900160b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90016158:	9301      	str	r3, [sp, #4]
9001615a:	f04f 0a01 	mov.w	sl, #1
9001615e:	e7db      	b.n	90016118 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90016160:	8b63      	ldrh	r3, [r4, #26]
90016162:	280a      	cmp	r0, #10
90016164:	f103 0301 	add.w	r3, r3, #1
90016168:	8363      	strh	r3, [r4, #26]
9001616a:	d0dd      	beq.n	90016128 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
9001616c:	9a03      	ldr	r2, [sp, #12]
9001616e:	bb62      	cbnz	r2, 900161ca <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
90016170:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90016174:	4298      	cmp	r0, r3
90016176:	d003      	beq.n	90016180 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90016178:	f242 030b 	movw	r3, #8203	@ 0x200b
9001617c:	4298      	cmp	r0, r3
9001617e:	d1b2      	bne.n	900160e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016180:	8823      	ldrh	r3, [r4, #0]
90016182:	8ba1      	ldrh	r1, [r4, #28]
90016184:	2b20      	cmp	r3, #32
90016186:	d003      	beq.n	90016190 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90016188:	f242 000b 	movw	r0, #8203	@ 0x200b
9001618c:	4283      	cmp	r3, r0
9001618e:	d131      	bne.n	900161f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
90016190:	f1ba 0f00 	cmp.w	sl, #0
90016194:	bf0a      	itet	eq
90016196:	4688      	moveq	r8, r1
90016198:	4650      	movne	r0, sl
9001619a:	2001      	moveq	r0, #1
9001619c:	440a      	add	r2, r1
9001619e:	8b23      	ldrh	r3, [r4, #24]
900161a0:	f8b4 c010 	ldrh.w	ip, [r4, #16]
900161a4:	b292      	uxth	r2, r2
900161a6:	83a2      	strh	r2, [r4, #28]
900161a8:	4413      	add	r3, r2
900161aa:	f1b9 0f00 	cmp.w	r9, #0
900161ae:	d102      	bne.n	900161b6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
900161b0:	2d00      	cmp	r5, #0
900161b2:	d042      	beq.n	9001623a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
900161b4:	b300      	cbz	r0, 900161f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
900161b6:	8c21      	ldrh	r1, [r4, #32]
900161b8:	4419      	add	r1, r3
900161ba:	458c      	cmp	ip, r1
900161bc:	da37      	bge.n	9001622e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900161be:	8ae1      	ldrh	r1, [r4, #22]
900161c0:	2900      	cmp	r1, #0
900161c2:	d034      	beq.n	9001622e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900161c4:	4563      	cmp	r3, ip
900161c6:	dd8e      	ble.n	900160e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900161c8:	e01d      	b.n	90016206 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
900161ca:	8893      	ldrh	r3, [r2, #4]
900161cc:	9901      	ldr	r1, [sp, #4]
900161ce:	8023      	strh	r3, [r4, #0]
900161d0:	f892 b00d 	ldrb.w	fp, [r2, #13]
900161d4:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
900161d8:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
900161dc:	f892 b00a 	ldrb.w	fp, [r2, #10]
900161e0:	ea4b 0b00 	orr.w	fp, fp, r0
900161e4:	68e0      	ldr	r0, [r4, #12]
900161e6:	6803      	ldr	r3, [r0, #0]
900161e8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900161ea:	4798      	blx	r3
900161ec:	eb0b 0200 	add.w	r2, fp, r0
900161f0:	b292      	uxth	r2, r2
900161f2:	e7c5      	b.n	90016180 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900161f4:	2000      	movs	r0, #0
900161f6:	e7d1      	b.n	9001619c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
900161f8:	4563      	cmp	r3, ip
900161fa:	f77f af74 	ble.w	900160e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900161fe:	8ae3      	ldrh	r3, [r4, #22]
90016200:	2b00      	cmp	r3, #0
90016202:	f43f af70 	beq.w	900160e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016206:	2301      	movs	r3, #1
90016208:	8c22      	ldrh	r2, [r4, #32]
9001620a:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
9001620e:	8be3      	ldrh	r3, [r4, #30]
90016210:	4413      	add	r3, r2
90016212:	83e3      	strh	r3, [r4, #30]
90016214:	68e0      	ldr	r0, [r4, #12]
90016216:	6803      	ldr	r3, [r0, #0]
90016218:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001621a:	4798      	blx	r3
9001621c:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
90016220:	4418      	add	r0, r3
90016222:	8a63      	ldrh	r3, [r4, #18]
90016224:	1a18      	subs	r0, r3, r0
90016226:	8260      	strh	r0, [r4, #18]
90016228:	b005      	add	sp, #20
9001622a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001622e:	2300      	movs	r3, #0
90016230:	4611      	mov	r1, r2
90016232:	4620      	mov	r0, r4
90016234:	f7ff ff0f 	bl	90016056 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90016238:	e755      	b.n	900160e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001623a:	4563      	cmp	r3, ip
9001623c:	dd14      	ble.n	90016268 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
9001623e:	b117      	cbz	r7, 90016246 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90016240:	2301      	movs	r3, #1
90016242:	460a      	mov	r2, r1
90016244:	e772      	b.n	9001612c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90016246:	2e00      	cmp	r6, #0
90016248:	f43f af4d 	beq.w	900160e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001624c:	2800      	cmp	r0, #0
9001624e:	f47f af4a 	bne.w	900160e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016252:	f1ba 0f00 	cmp.w	sl, #0
90016256:	d002      	beq.n	9001625e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90016258:	2301      	movs	r3, #1
9001625a:	4642      	mov	r2, r8
9001625c:	e767      	b.n	9001612e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
9001625e:	8ae3      	ldrh	r3, [r4, #22]
90016260:	2b00      	cmp	r3, #0
90016262:	f43f af40 	beq.w	900160e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016266:	e7d5      	b.n	90016214 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90016268:	2800      	cmp	r0, #0
9001626a:	f47f af3c 	bne.w	900160e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001626e:	f1ba 0f00 	cmp.w	sl, #0
90016272:	f43f af38 	beq.w	900160e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90016276:	2301      	movs	r3, #1
90016278:	4642      	mov	r2, r8
9001627a:	e7da      	b.n	90016232 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

9001627c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
9001627c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001627e:	4605      	mov	r5, r0
90016280:	b08f      	sub	sp, #60	@ 0x3c
90016282:	4617      	mov	r7, r2
90016284:	461c      	mov	r4, r3
90016286:	460e      	mov	r6, r1
90016288:	b1d1      	cbz	r1, 900162c0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
9001628a:	681b      	ldr	r3, [r3, #0]
9001628c:	4620      	mov	r0, r4
9001628e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016290:	4798      	blx	r3
90016292:	4240      	negs	r0, r0
90016294:	9603      	str	r6, [sp, #12]
90016296:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9001629a:	b200      	sxth	r0, r0
9001629c:	9700      	str	r7, [sp, #0]
9001629e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
900162a2:	4629      	mov	r1, r5
900162a4:	e9cd 4001 	strd	r4, r0, [sp, #4]
900162a8:	2401      	movs	r4, #1
900162aa:	a805      	add	r0, sp, #20
900162ac:	f7ff fcaa 	bl	90015c04 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900162b0:	a805      	add	r0, sp, #20
900162b2:	f7ff fee0 	bl	90016076 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900162b6:	f8bd 3014 	ldrh.w	r3, [sp, #20]
900162ba:	b163      	cbz	r3, 900162d6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
900162bc:	3401      	adds	r4, #1
900162be:	e7f7      	b.n	900162b0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
900162c0:	2401      	movs	r4, #1
900162c2:	f003 f91d 	bl	90019500 <_ZN8touchgfx12TextProvider11getNextCharEv>
900162c6:	280a      	cmp	r0, #10
900162c8:	4628      	mov	r0, r5
900162ca:	bf08      	it	eq
900162cc:	3401      	addeq	r4, #1
900162ce:	f003 f917 	bl	90019500 <_ZN8touchgfx12TextProvider11getNextCharEv>
900162d2:	2800      	cmp	r0, #0
900162d4:	d1f7      	bne.n	900162c6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
900162d6:	b2a0      	uxth	r0, r4
900162d8:	b00f      	add	sp, #60	@ 0x3c
900162da:	bdf0      	pop	{r4, r5, r6, r7, pc}

900162dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
900162dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900162e0:	b0e3      	sub	sp, #396	@ 0x18c
900162e2:	461c      	mov	r4, r3
900162e4:	4683      	mov	fp, r0
900162e6:	4688      	mov	r8, r1
900162e8:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
900162ea:	2b00      	cmp	r3, #0
900162ec:	f000 8112 	beq.w	90016514 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900162f0:	6823      	ldr	r3, [r4, #0]
900162f2:	2b00      	cmp	r3, #0
900162f4:	f000 810e 	beq.w	90016514 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900162f8:	7ba3      	ldrb	r3, [r4, #14]
900162fa:	2b00      	cmp	r3, #0
900162fc:	f000 810a 	beq.w	90016514 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016300:	ad0a      	add	r5, sp, #40	@ 0x28
90016302:	6810      	ldr	r0, [r2, #0]
90016304:	6851      	ldr	r1, [r2, #4]
90016306:	462b      	mov	r3, r5
90016308:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
9001630c:	c303      	stmia	r3!, {r0, r1}
9001630e:	2100      	movs	r1, #0
90016310:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90016314:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90016318:	4628      	mov	r0, r5
9001631a:	910c      	str	r1, [sp, #48]	@ 0x30
9001631c:	a90c      	add	r1, sp, #48	@ 0x30
9001631e:	79a2      	ldrb	r2, [r4, #6]
90016320:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90016324:	f7ff fced 	bl	90015d02 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90016328:	a90c      	add	r1, sp, #48	@ 0x30
9001632a:	79a2      	ldrb	r2, [r4, #6]
9001632c:	4608      	mov	r0, r1
9001632e:	f7ff fce8 	bl	90015d02 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90016332:	a817      	add	r0, sp, #92	@ 0x5c
90016334:	f002 fcb8 	bl	90018ca8 <_ZN8touchgfx12TextProviderC1Ev>
90016338:	6820      	ldr	r0, [r4, #0]
9001633a:	6803      	ldr	r3, [r0, #0]
9001633c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001633e:	4798      	blx	r3
90016340:	4606      	mov	r6, r0
90016342:	6820      	ldr	r0, [r4, #0]
90016344:	6803      	ldr	r3, [r0, #0]
90016346:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90016348:	4798      	blx	r3
9001634a:	4633      	mov	r3, r6
9001634c:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
9001634e:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90016350:	9000      	str	r0, [sp, #0]
90016352:	a817      	add	r0, sp, #92	@ 0x5c
90016354:	f002 fd03 	bl	90018d5e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016358:	6820      	ldr	r0, [r4, #0]
9001635a:	f894 a004 	ldrb.w	sl, [r4, #4]
9001635e:	6803      	ldr	r3, [r0, #0]
90016360:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016362:	4798      	blx	r3
90016364:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90016368:	6823      	ldr	r3, [r4, #0]
9001636a:	4607      	mov	r7, r0
9001636c:	4406      	add	r6, r0
9001636e:	a830      	add	r0, sp, #192	@ 0xc0
90016370:	f893 9009 	ldrb.w	r9, [r3, #9]
90016374:	f002 fc98 	bl	90018ca8 <_ZN8touchgfx12TextProviderC1Ev>
90016378:	7c23      	ldrb	r3, [r4, #16]
9001637a:	b17b      	cbz	r3, 9001639c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
9001637c:	6820      	ldr	r0, [r4, #0]
9001637e:	6803      	ldr	r3, [r0, #0]
90016380:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90016382:	4798      	blx	r3
90016384:	9009      	str	r0, [sp, #36]	@ 0x24
90016386:	6820      	ldr	r0, [r4, #0]
90016388:	6802      	ldr	r2, [r0, #0]
9001638a:	6d12      	ldr	r2, [r2, #80]	@ 0x50
9001638c:	4790      	blx	r2
9001638e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90016390:	9000      	str	r0, [sp, #0]
90016392:	a830      	add	r0, sp, #192	@ 0xc0
90016394:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90016396:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90016398:	f002 fce1 	bl	90018d5e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001639c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
900163a0:	a80e      	add	r0, sp, #56	@ 0x38
900163a2:	7be2      	ldrb	r2, [r4, #15]
900163a4:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
900163a8:	1a8a      	subs	r2, r1, r2
900163aa:	7c21      	ldrb	r1, [r4, #16]
900163ac:	9103      	str	r1, [sp, #12]
900163ae:	b292      	uxth	r2, r2
900163b0:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900163b4:	9102      	str	r1, [sp, #8]
900163b6:	6821      	ldr	r1, [r4, #0]
900163b8:	9101      	str	r1, [sp, #4]
900163ba:	7961      	ldrb	r1, [r4, #5]
900163bc:	9100      	str	r1, [sp, #0]
900163be:	a930      	add	r1, sp, #192	@ 0xc0
900163c0:	f7ff fc20 	bl	90015c04 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900163c4:	2e00      	cmp	r6, #0
900163c6:	dc5b      	bgt.n	90016480 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
900163c8:	af17      	add	r7, sp, #92	@ 0x5c
900163ca:	f04f 0900 	mov.w	r9, #0
900163ce:	7c23      	ldrb	r3, [r4, #16]
900163d0:	2b00      	cmp	r3, #0
900163d2:	f000 80b1 	beq.w	90016538 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
900163d6:	a80e      	add	r0, sp, #56	@ 0x38
900163d8:	f7ff fe4d 	bl	90016076 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900163dc:	f1ba 0f00 	cmp.w	sl, #0
900163e0:	f000 80a5 	beq.w	9001652e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
900163e4:	7c23      	ldrb	r3, [r4, #16]
900163e6:	2264      	movs	r2, #100	@ 0x64
900163e8:	4639      	mov	r1, r7
900163ea:	a849      	add	r0, sp, #292	@ 0x124
900163ec:	9309      	str	r3, [sp, #36]	@ 0x24
900163ee:	f013 ff30 	bl	9002a252 <memcpy>
900163f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900163f4:	2b00      	cmp	r3, #0
900163f6:	f000 80a7 	beq.w	90016548 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
900163fa:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
900163fe:	7922      	ldrb	r2, [r4, #4]
90016400:	2a01      	cmp	r2, #1
90016402:	f040 808a 	bne.w	9001651a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90016406:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
9001640a:	1ac0      	subs	r0, r0, r3
9001640c:	2302      	movs	r3, #2
9001640e:	fb90 f0f3 	sdiv	r0, r0, r3
90016412:	b200      	sxth	r0, r0
90016414:	7c23      	ldrb	r3, [r4, #16]
90016416:	2b00      	cmp	r3, #0
90016418:	f000 808b 	beq.w	90016532 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
9001641c:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
90016420:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
90016424:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90016428:	e9cd 2105 	strd	r2, r1, [sp, #20]
9001642c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90016430:	2100      	movs	r1, #0
90016432:	4410      	add	r0, r2
90016434:	4642      	mov	r2, r8
90016436:	b200      	sxth	r0, r0
90016438:	e9cd 9703 	strd	r9, r7, [sp, #12]
9001643c:	9000      	str	r0, [sp, #0]
9001643e:	4658      	mov	r0, fp
90016440:	e9cd 5401 	strd	r5, r4, [sp, #4]
90016444:	f7ff fc8e 	bl	90015d64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90016448:	2800      	cmp	r0, #0
9001644a:	d163      	bne.n	90016514 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001644c:	b2b2      	uxth	r2, r6
9001644e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90016452:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90016456:	4413      	add	r3, r2
90016458:	1a8a      	subs	r2, r1, r2
9001645a:	b21b      	sxth	r3, r3
9001645c:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90016460:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
90016464:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90016468:	2a00      	cmp	r2, #0
9001646a:	d153      	bne.n	90016514 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001646c:	6822      	ldr	r2, [r4, #0]
9001646e:	8869      	ldrh	r1, [r5, #2]
90016470:	7a12      	ldrb	r2, [r2, #8]
90016472:	1a9b      	subs	r3, r3, r2
90016474:	88ea      	ldrh	r2, [r5, #6]
90016476:	440a      	add	r2, r1
90016478:	b212      	sxth	r2, r2
9001647a:	4293      	cmp	r3, r2
9001647c:	dda7      	ble.n	900163ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
9001647e:	e049      	b.n	90016514 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016480:	7c23      	ldrb	r3, [r4, #16]
90016482:	444f      	add	r7, r9
90016484:	b1c3      	cbz	r3, 900164b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90016486:	f64f 79ff 	movw	r9, #65535	@ 0xffff
9001648a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001648e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016492:	443b      	add	r3, r7
90016494:	4293      	cmp	r3, r2
90016496:	da97      	bge.n	900163c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90016498:	a80e      	add	r0, sp, #56	@ 0x38
9001649a:	f7ff fdec 	bl	90016076 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001649e:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
900164a2:	3b01      	subs	r3, #1
900164a4:	b29b      	uxth	r3, r3
900164a6:	454b      	cmp	r3, r9
900164a8:	9309      	str	r3, [sp, #36]	@ 0x24
900164aa:	d021      	beq.n	900164f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
900164ac:	7961      	ldrb	r1, [r4, #5]
900164ae:	a817      	add	r0, sp, #92	@ 0x5c
900164b0:	f7ef f93a 	bl	90005728 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900164b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900164b6:	e7f4      	b.n	900164a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
900164b8:	fa1f f986 	uxth.w	r9, r6
900164bc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
900164c0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900164c4:	443b      	add	r3, r7
900164c6:	4293      	cmp	r3, r2
900164c8:	f6bf af7e 	bge.w	900163c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
900164cc:	a817      	add	r0, sp, #92	@ 0x5c
900164ce:	f003 f817 	bl	90019500 <_ZN8touchgfx12TextProvider11getNextCharEv>
900164d2:	b1f8      	cbz	r0, 90016514 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900164d4:	280a      	cmp	r0, #10
900164d6:	d1f1      	bne.n	900164bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900164d8:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
900164dc:	444b      	add	r3, r9
900164de:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
900164e2:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
900164e6:	eba3 0309 	sub.w	r3, r3, r9
900164ea:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900164ee:	e7e5      	b.n	900164bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900164f0:	b2b3      	uxth	r3, r6
900164f2:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
900164f6:	441a      	add	r2, r3
900164f8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
900164fc:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90016500:	1ad3      	subs	r3, r2, r3
90016502:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90016506:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001650a:	b11b      	cbz	r3, 90016514 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001650c:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
90016510:	2b00      	cmp	r3, #0
90016512:	d0ba      	beq.n	9001648a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90016514:	b063      	add	sp, #396	@ 0x18c
90016516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001651a:	2a02      	cmp	r2, #2
9001651c:	d105      	bne.n	9001652a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
9001651e:	7be2      	ldrb	r2, [r4, #15]
90016520:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90016524:	1a80      	subs	r0, r0, r2
90016526:	1ac0      	subs	r0, r0, r3
90016528:	e773      	b.n	90016412 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
9001652a:	2000      	movs	r0, #0
9001652c:	e772      	b.n	90016414 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001652e:	7be0      	ldrb	r0, [r4, #15]
90016530:	e770      	b.n	90016414 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90016532:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90016536:	e773      	b.n	90016420 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90016538:	f1ba 0f00 	cmp.w	sl, #0
9001653c:	d0f7      	beq.n	9001652e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
9001653e:	2264      	movs	r2, #100	@ 0x64
90016540:	4639      	mov	r1, r7
90016542:	a849      	add	r0, sp, #292	@ 0x124
90016544:	f013 fe85 	bl	9002a252 <memcpy>
90016548:	2300      	movs	r3, #0
9001654a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
9001654e:	6821      	ldr	r1, [r4, #0]
90016550:	a849      	add	r0, sp, #292	@ 0x124
90016552:	f7ff fb9a 	bl	90015c8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90016556:	b203      	sxth	r3, r0
90016558:	e751      	b.n	900163fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

9001655a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
9001655a:	2b03      	cmp	r3, #3
9001655c:	d818      	bhi.n	90016590 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
9001655e:	e8df f003 	tbb	[pc, r3]
90016562:	0602      	.short	0x0602
90016564:	130d      	.short	0x130d
90016566:	f9b0 2000 	ldrsh.w	r2, [r0]
9001656a:	1850      	adds	r0, r2, r1
9001656c:	4770      	bx	lr
9001656e:	8803      	ldrh	r3, [r0, #0]
90016570:	8880      	ldrh	r0, [r0, #4]
90016572:	4418      	add	r0, r3
90016574:	b200      	sxth	r0, r0
90016576:	1a80      	subs	r0, r0, r2
90016578:	3801      	subs	r0, #1
9001657a:	4770      	bx	lr
9001657c:	8803      	ldrh	r3, [r0, #0]
9001657e:	8880      	ldrh	r0, [r0, #4]
90016580:	4418      	add	r0, r3
90016582:	b200      	sxth	r0, r0
90016584:	1a40      	subs	r0, r0, r1
90016586:	e7f7      	b.n	90016578 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90016588:	f9b0 0000 	ldrsh.w	r0, [r0]
9001658c:	4410      	add	r0, r2
9001658e:	4770      	bx	lr
90016590:	2000      	movs	r0, #0
90016592:	4770      	bx	lr

90016594 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90016594:	2b03      	cmp	r3, #3
90016596:	d817      	bhi.n	900165c8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90016598:	e8df f003 	tbb	[pc, r3]
9001659c:	10090602 	.word	0x10090602
900165a0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
900165a4:	1850      	adds	r0, r2, r1
900165a6:	4770      	bx	lr
900165a8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
900165ac:	e7fa      	b.n	900165a4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
900165ae:	8843      	ldrh	r3, [r0, #2]
900165b0:	88c0      	ldrh	r0, [r0, #6]
900165b2:	4418      	add	r0, r3
900165b4:	b200      	sxth	r0, r0
900165b6:	1a80      	subs	r0, r0, r2
900165b8:	3801      	subs	r0, #1
900165ba:	4770      	bx	lr
900165bc:	8843      	ldrh	r3, [r0, #2]
900165be:	88c0      	ldrh	r0, [r0, #6]
900165c0:	4418      	add	r0, r3
900165c2:	b200      	sxth	r0, r0
900165c4:	1a40      	subs	r0, r0, r1
900165c6:	e7f7      	b.n	900165b8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
900165c8:	2000      	movs	r0, #0
900165ca:	4770      	bx	lr

900165cc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
900165cc:	4b01      	ldr	r3, [pc, #4]	@ (900165d4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
900165ce:	2200      	movs	r2, #0
900165d0:	601a      	str	r2, [r3, #0]
900165d2:	4770      	bx	lr
900165d4:	240233e4 	.word	0x240233e4

900165d8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
900165d8:	4603      	mov	r3, r0
900165da:	b1c8      	cbz	r0, 90016610 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
900165dc:	0c02      	lsrs	r2, r0, #16
900165de:	0412      	lsls	r2, r2, #16
900165e0:	b9a2      	cbnz	r2, 9001660c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
900165e2:	0403      	lsls	r3, r0, #16
900165e4:	2010      	movs	r0, #16
900165e6:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
900165ea:	bf04      	itt	eq
900165ec:	021b      	lsleq	r3, r3, #8
900165ee:	3008      	addeq	r0, #8
900165f0:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
900165f4:	bf04      	itt	eq
900165f6:	011b      	lsleq	r3, r3, #4
900165f8:	3004      	addeq	r0, #4
900165fa:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
900165fe:	bf04      	itt	eq
90016600:	009b      	lsleq	r3, r3, #2
90016602:	3002      	addeq	r0, #2
90016604:	2b00      	cmp	r3, #0
90016606:	db04      	blt.n	90016612 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90016608:	3001      	adds	r0, #1
9001660a:	4770      	bx	lr
9001660c:	2000      	movs	r0, #0
9001660e:	e7ea      	b.n	900165e6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90016610:	2020      	movs	r0, #32
90016612:	4770      	bx	lr

90016614 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90016614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016618:	b087      	sub	sp, #28
9001661a:	460d      	mov	r5, r1
9001661c:	4616      	mov	r6, r2
9001661e:	4698      	mov	r8, r3
90016620:	4601      	mov	r1, r0
90016622:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
90016626:	b120      	cbz	r0, 90016632 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90016628:	b11a      	cbz	r2, 90016632 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
9001662a:	2d1f      	cmp	r5, #31
9001662c:	d801      	bhi.n	90016632 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
9001662e:	2b1f      	cmp	r3, #31
90016630:	d904      	bls.n	9001663c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90016632:	2000      	movs	r0, #0
90016634:	6038      	str	r0, [r7, #0]
90016636:	b007      	add	sp, #28
90016638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001663c:	b97d      	cbnz	r5, 9001665e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
9001663e:	b143      	cbz	r3, 90016652 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90016640:	4602      	mov	r2, r0
90016642:	462b      	mov	r3, r5
90016644:	4641      	mov	r1, r8
90016646:	4630      	mov	r0, r6
90016648:	e9cd 4700 	strd	r4, r7, [sp]
9001664c:	f7ff ffe2 	bl	90016614 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016650:	e7f1      	b.n	90016636 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016652:	f04f 33ff 	mov.w	r3, #4294967295
90016656:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
9001665a:	603b      	str	r3, [r7, #0]
9001665c:	e7eb      	b.n	90016636 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001665e:	fa32 fa05 	lsrs.w	sl, r2, r5
90016662:	d106      	bne.n	90016672 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90016664:	4346      	muls	r6, r0
90016666:	fbb6 f0f4 	udiv	r0, r6, r4
9001666a:	fb04 6610 	mls	r6, r4, r0, r6
9001666e:	603e      	str	r6, [r7, #0]
90016670:	e7e1      	b.n	90016636 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016672:	2201      	movs	r2, #1
90016674:	fa00 fb05 	lsl.w	fp, r0, r5
90016678:	40aa      	lsls	r2, r5
9001667a:	fbbb f9f4 	udiv	r9, fp, r4
9001667e:	3a01      	subs	r2, #1
90016680:	fb0a f309 	mul.w	r3, sl, r9
90016684:	fb04 b919 	mls	r9, r4, r9, fp
90016688:	4016      	ands	r6, r2
9001668a:	9303      	str	r3, [sp, #12]
9001668c:	4630      	mov	r0, r6
9001668e:	f7ff ffa3 	bl	900165d8 <_ZN8touchgfx16TouchCalibration4clzuEm>
90016692:	462b      	mov	r3, r5
90016694:	460a      	mov	r2, r1
90016696:	4601      	mov	r1, r0
90016698:	4630      	mov	r0, r6
9001669a:	e9cd 4700 	strd	r4, r7, [sp]
9001669e:	f7ff ffb9 	bl	90016614 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900166a2:	4606      	mov	r6, r0
900166a4:	4648      	mov	r0, r9
900166a6:	eb05 0108 	add.w	r1, r5, r8
900166aa:	f7ff ff95 	bl	900165d8 <_ZN8touchgfx16TouchCalibration4clzuEm>
900166ae:	ab05      	add	r3, sp, #20
900166b0:	464a      	mov	r2, r9
900166b2:	e9cd 4300 	strd	r4, r3, [sp]
900166b6:	4603      	mov	r3, r0
900166b8:	4650      	mov	r0, sl
900166ba:	f7ff ffab 	bl	90016614 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900166be:	6839      	ldr	r1, [r7, #0]
900166c0:	9a05      	ldr	r2, [sp, #20]
900166c2:	9b03      	ldr	r3, [sp, #12]
900166c4:	4411      	add	r1, r2
900166c6:	fbb1 f2f4 	udiv	r2, r1, r4
900166ca:	18d3      	adds	r3, r2, r3
900166cc:	fb04 1412 	mls	r4, r4, r2, r1
900166d0:	441e      	add	r6, r3
900166d2:	603c      	str	r4, [r7, #0]
900166d4:	4430      	add	r0, r6
900166d6:	e7ae      	b.n	90016636 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

900166d8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
900166d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900166dc:	b085      	sub	sp, #20
900166de:	f1b0 0900 	subs.w	r9, r0, #0
900166e2:	461d      	mov	r5, r3
900166e4:	4617      	mov	r7, r2
900166e6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900166e8:	bfbb      	ittet	lt
900166ea:	f1c9 0900 	rsblt	r9, r9, #0
900166ee:	f04f 36ff 	movlt.w	r6, #4294967295
900166f2:	2601      	movge	r6, #1
900166f4:	6823      	ldrlt	r3, [r4, #0]
900166f6:	bfbc      	itt	lt
900166f8:	425b      	neglt	r3, r3
900166fa:	6023      	strlt	r3, [r4, #0]
900166fc:	2a00      	cmp	r2, #0
900166fe:	da04      	bge.n	9001670a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90016700:	6823      	ldr	r3, [r4, #0]
90016702:	4257      	negs	r7, r2
90016704:	4276      	negs	r6, r6
90016706:	425b      	negs	r3, r3
90016708:	6023      	str	r3, [r4, #0]
9001670a:	2d00      	cmp	r5, #0
9001670c:	4638      	mov	r0, r7
9001670e:	bfba      	itte	lt
90016710:	426d      	neglt	r5, r5
90016712:	f04f 38ff 	movlt.w	r8, #4294967295
90016716:	f04f 0801 	movge.w	r8, #1
9001671a:	f7ff ff5d 	bl	900165d8 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001671e:	ab03      	add	r3, sp, #12
90016720:	463a      	mov	r2, r7
90016722:	e9cd 5300 	strd	r5, r3, [sp]
90016726:	4603      	mov	r3, r0
90016728:	4648      	mov	r0, r9
9001672a:	f7ff ff73 	bl	90016614 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001672e:	6823      	ldr	r3, [r4, #0]
90016730:	9a03      	ldr	r2, [sp, #12]
90016732:	4546      	cmp	r6, r8
90016734:	441a      	add	r2, r3
90016736:	fb92 f3f5 	sdiv	r3, r2, r5
9001673a:	4418      	add	r0, r3
9001673c:	fb05 2313 	mls	r3, r5, r3, r2
90016740:	bf18      	it	ne
90016742:	4240      	negne	r0, r0
90016744:	1c72      	adds	r2, r6, #1
90016746:	6023      	str	r3, [r4, #0]
90016748:	d105      	bne.n	90016756 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
9001674a:	2b00      	cmp	r3, #0
9001674c:	f1c3 0200 	rsb	r2, r3, #0
90016750:	db0b      	blt.n	9001676a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90016752:	6022      	str	r2, [r4, #0]
90016754:	e006      	b.n	90016764 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90016756:	2e01      	cmp	r6, #1
90016758:	d104      	bne.n	90016764 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001675a:	2b00      	cmp	r3, #0
9001675c:	da02      	bge.n	90016764 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001675e:	442b      	add	r3, r5
90016760:	3801      	subs	r0, #1
90016762:	6023      	str	r3, [r4, #0]
90016764:	b005      	add	sp, #20
90016766:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001676a:	3801      	subs	r0, #1
9001676c:	1b52      	subs	r2, r2, r5
9001676e:	e7f0      	b.n	90016752 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90016770 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90016770:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90016774:	4c1c      	ldr	r4, [pc, #112]	@ (900167e8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90016776:	4605      	mov	r5, r0
90016778:	6807      	ldr	r7, [r0, #0]
9001677a:	69a3      	ldr	r3, [r4, #24]
9001677c:	b92b      	cbnz	r3, 9001678a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
9001677e:	6840      	ldr	r0, [r0, #4]
90016780:	e9c5 7000 	strd	r7, r0, [r5]
90016784:	b004      	add	sp, #16
90016786:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001678a:	f04f 0802 	mov.w	r8, #2
9001678e:	68a2      	ldr	r2, [r4, #8]
90016790:	ae04      	add	r6, sp, #16
90016792:	6820      	ldr	r0, [r4, #0]
90016794:	fb93 f1f8 	sdiv	r1, r3, r8
90016798:	440a      	add	r2, r1
9001679a:	69e1      	ldr	r1, [r4, #28]
9001679c:	f846 2d04 	str.w	r2, [r6, #-4]!
900167a0:	463a      	mov	r2, r7
900167a2:	9600      	str	r6, [sp, #0]
900167a4:	f7ff ff98 	bl	900166d8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
900167a8:	69a3      	ldr	r3, [r4, #24]
900167aa:	4607      	mov	r7, r0
900167ac:	686a      	ldr	r2, [r5, #4]
900167ae:	6a21      	ldr	r1, [r4, #32]
900167b0:	9600      	str	r6, [sp, #0]
900167b2:	6860      	ldr	r0, [r4, #4]
900167b4:	f7ff ff90 	bl	900166d8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
900167b8:	69a3      	ldr	r3, [r4, #24]
900167ba:	6962      	ldr	r2, [r4, #20]
900167bc:	4407      	add	r7, r0
900167be:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900167c0:	9600      	str	r6, [sp, #0]
900167c2:	68e0      	ldr	r0, [r4, #12]
900167c4:	fb93 f8f8 	sdiv	r8, r3, r8
900167c8:	4442      	add	r2, r8
900167ca:	9203      	str	r2, [sp, #12]
900167cc:	682a      	ldr	r2, [r5, #0]
900167ce:	f7ff ff83 	bl	900166d8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
900167d2:	4680      	mov	r8, r0
900167d4:	9600      	str	r6, [sp, #0]
900167d6:	69a3      	ldr	r3, [r4, #24]
900167d8:	686a      	ldr	r2, [r5, #4]
900167da:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
900167dc:	6920      	ldr	r0, [r4, #16]
900167de:	f7ff ff7b 	bl	900166d8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
900167e2:	4440      	add	r0, r8
900167e4:	e7cc      	b.n	90016780 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
900167e6:	bf00      	nop
900167e8:	240233e8 	.word	0x240233e8

900167ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
900167ec:	4b07      	ldr	r3, [pc, #28]	@ (9001680c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
900167ee:	781b      	ldrb	r3, [r3, #0]
900167f0:	2b01      	cmp	r3, #1
900167f2:	d109      	bne.n	90016808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
900167f4:	f9b1 3000 	ldrsh.w	r3, [r1]
900167f8:	f9b0 2000 	ldrsh.w	r2, [r0]
900167fc:	8003      	strh	r3, [r0, #0]
900167fe:	4b04      	ldr	r3, [pc, #16]	@ (90016810 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90016800:	881b      	ldrh	r3, [r3, #0]
90016802:	3b01      	subs	r3, #1
90016804:	1a9b      	subs	r3, r3, r2
90016806:	800b      	strh	r3, [r1, #0]
90016808:	4770      	bx	lr
9001680a:	bf00      	nop
9001680c:	240233cc 	.word	0x240233cc
90016810:	240233c8 	.word	0x240233c8

90016814 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90016814:	4b07      	ldr	r3, [pc, #28]	@ (90016834 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90016816:	b510      	push	{r4, lr}
90016818:	781b      	ldrb	r3, [r3, #0]
9001681a:	2b01      	cmp	r3, #1
9001681c:	d108      	bne.n	90016830 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
9001681e:	4b06      	ldr	r3, [pc, #24]	@ (90016838 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90016820:	880c      	ldrh	r4, [r1, #0]
90016822:	881b      	ldrh	r3, [r3, #0]
90016824:	f9b0 2000 	ldrsh.w	r2, [r0]
90016828:	3b01      	subs	r3, #1
9001682a:	1b1b      	subs	r3, r3, r4
9001682c:	8003      	strh	r3, [r0, #0]
9001682e:	800a      	strh	r2, [r1, #0]
90016830:	bd10      	pop	{r4, pc}
90016832:	bf00      	nop
90016834:	240233cc 	.word	0x240233cc
90016838:	240233c8 	.word	0x240233c8

9001683c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
9001683c:	4b0a      	ldr	r3, [pc, #40]	@ (90016868 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
9001683e:	b510      	push	{r4, lr}
90016840:	781b      	ldrb	r3, [r3, #0]
90016842:	2b01      	cmp	r3, #1
90016844:	d10e      	bne.n	90016864 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90016846:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
9001684a:	8843      	ldrh	r3, [r0, #2]
9001684c:	f9b0 4000 	ldrsh.w	r4, [r0]
90016850:	18ca      	adds	r2, r1, r3
90016852:	4b06      	ldr	r3, [pc, #24]	@ (9001686c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90016854:	8044      	strh	r4, [r0, #2]
90016856:	881b      	ldrh	r3, [r3, #0]
90016858:	1a9b      	subs	r3, r3, r2
9001685a:	8003      	strh	r3, [r0, #0]
9001685c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016860:	8081      	strh	r1, [r0, #4]
90016862:	80c3      	strh	r3, [r0, #6]
90016864:	bd10      	pop	{r4, pc}
90016866:	bf00      	nop
90016868:	240233cc 	.word	0x240233cc
9001686c:	240233c8 	.word	0x240233c8

90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90016870:	4b08      	ldr	r3, [pc, #32]	@ (90016894 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90016872:	781b      	ldrb	r3, [r3, #0]
90016874:	2b01      	cmp	r3, #1
90016876:	d10c      	bne.n	90016892 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90016878:	8803      	ldrh	r3, [r0, #0]
9001687a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
9001687e:	8842      	ldrh	r2, [r0, #2]
90016880:	8002      	strh	r2, [r0, #0]
90016882:	185a      	adds	r2, r3, r1
90016884:	4b04      	ldr	r3, [pc, #16]	@ (90016898 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90016886:	881b      	ldrh	r3, [r3, #0]
90016888:	1a9b      	subs	r3, r3, r2
9001688a:	8043      	strh	r3, [r0, #2]
9001688c:	88c3      	ldrh	r3, [r0, #6]
9001688e:	80c1      	strh	r1, [r0, #6]
90016890:	8083      	strh	r3, [r0, #4]
90016892:	4770      	bx	lr
90016894:	240233cc 	.word	0x240233cc
90016898:	240233c8 	.word	0x240233c8

9001689c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
9001689c:	4b07      	ldr	r3, [pc, #28]	@ (900168bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
9001689e:	b510      	push	{r4, lr}
900168a0:	781b      	ldrb	r3, [r3, #0]
900168a2:	2b01      	cmp	r3, #1
900168a4:	d108      	bne.n	900168b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
900168a6:	f9b1 3000 	ldrsh.w	r3, [r1]
900168aa:	f9b0 4000 	ldrsh.w	r4, [r0]
900168ae:	8003      	strh	r3, [r0, #0]
900168b0:	8893      	ldrh	r3, [r2, #4]
900168b2:	3b01      	subs	r3, #1
900168b4:	1b1b      	subs	r3, r3, r4
900168b6:	800b      	strh	r3, [r1, #0]
900168b8:	bd10      	pop	{r4, pc}
900168ba:	bf00      	nop
900168bc:	240233cc 	.word	0x240233cc

900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
900168c0:	4b0a      	ldr	r3, [pc, #40]	@ (900168ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
900168c2:	460a      	mov	r2, r1
900168c4:	b510      	push	{r4, lr}
900168c6:	781b      	ldrb	r3, [r3, #0]
900168c8:	2b01      	cmp	r3, #1
900168ca:	d10d      	bne.n	900168e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
900168cc:	8881      	ldrh	r1, [r0, #4]
900168ce:	8803      	ldrh	r3, [r0, #0]
900168d0:	440b      	add	r3, r1
900168d2:	4601      	mov	r1, r0
900168d4:	3b01      	subs	r3, #1
900168d6:	f821 3b02 	strh.w	r3, [r1], #2
900168da:	f7ff ffdf 	bl	9001689c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
900168de:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900168e2:	88c2      	ldrh	r2, [r0, #6]
900168e4:	80c3      	strh	r3, [r0, #6]
900168e6:	8082      	strh	r2, [r0, #4]
900168e8:	bd10      	pop	{r4, pc}
900168ea:	bf00      	nop
900168ec:	240233cc 	.word	0x240233cc

900168f0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
900168f0:	4770      	bx	lr
	...

900168f4 <_ZN8touchgfx11Application13requestRedrawEv>:
900168f4:	4b06      	ldr	r3, [pc, #24]	@ (90016910 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
900168f6:	2100      	movs	r1, #0
900168f8:	f9b3 2000 	ldrsh.w	r2, [r3]
900168fc:	4b05      	ldr	r3, [pc, #20]	@ (90016914 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
900168fe:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
90016902:	f9b3 3000 	ldrsh.w	r3, [r3]
90016906:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
9001690a:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
9001690e:	4770      	bx	lr
90016910:	240233c8 	.word	0x240233c8
90016914:	240233ca 	.word	0x240233ca

90016918 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90016918:	4b03      	ldr	r3, [pc, #12]	@ (90016928 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
9001691a:	6818      	ldr	r0, [r3, #0]
9001691c:	b110      	cbz	r0, 90016924 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
9001691e:	6803      	ldr	r3, [r0, #0]
90016920:	699b      	ldr	r3, [r3, #24]
90016922:	4718      	bx	r3
90016924:	4770      	bx	lr
90016926:	bf00      	nop
90016928:	24023418 	.word	0x24023418

9001692c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
9001692c:	4770      	bx	lr
	...

90016930 <_ZN8touchgfx11Application4drawEv>:
90016930:	4b09      	ldr	r3, [pc, #36]	@ (90016958 <_ZN8touchgfx11Application4drawEv+0x28>)
90016932:	b507      	push	{r0, r1, r2, lr}
90016934:	f9b3 2000 	ldrsh.w	r2, [r3]
90016938:	2100      	movs	r1, #0
9001693a:	4b08      	ldr	r3, [pc, #32]	@ (9001695c <_ZN8touchgfx11Application4drawEv+0x2c>)
9001693c:	9100      	str	r1, [sp, #0]
9001693e:	4669      	mov	r1, sp
90016940:	f9b3 3000 	ldrsh.w	r3, [r3]
90016944:	f8ad 2004 	strh.w	r2, [sp, #4]
90016948:	f8ad 3006 	strh.w	r3, [sp, #6]
9001694c:	6803      	ldr	r3, [r0, #0]
9001694e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016950:	4798      	blx	r3
90016952:	b003      	add	sp, #12
90016954:	f85d fb04 	ldr.w	pc, [sp], #4
90016958:	240233c8 	.word	0x240233c8
9001695c:	240233ca 	.word	0x240233ca

90016960 <_ZN8touchgfx11Application10invalidateEv>:
90016960:	4b09      	ldr	r3, [pc, #36]	@ (90016988 <_ZN8touchgfx11Application10invalidateEv+0x28>)
90016962:	b082      	sub	sp, #8
90016964:	2100      	movs	r1, #0
90016966:	f9b3 2000 	ldrsh.w	r2, [r3]
9001696a:	4b08      	ldr	r3, [pc, #32]	@ (9001698c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
9001696c:	f8ad 2004 	strh.w	r2, [sp, #4]
90016970:	aa02      	add	r2, sp, #8
90016972:	f9b3 3000 	ldrsh.w	r3, [r3]
90016976:	9100      	str	r1, [sp, #0]
90016978:	f8ad 3006 	strh.w	r3, [sp, #6]
9001697c:	6803      	ldr	r3, [r0, #0]
9001697e:	e912 0006 	ldmdb	r2, {r1, r2}
90016982:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90016984:	b002      	add	sp, #8
90016986:	4718      	bx	r3
90016988:	240233c8 	.word	0x240233c8
9001698c:	240233ca 	.word	0x240233ca

90016990 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90016990:	4b03      	ldr	r3, [pc, #12]	@ (900169a0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90016992:	6818      	ldr	r0, [r3, #0]
90016994:	b110      	cbz	r0, 9001699c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90016996:	6803      	ldr	r3, [r0, #0]
90016998:	69db      	ldr	r3, [r3, #28]
9001699a:	4718      	bx	r3
9001699c:	4770      	bx	lr
9001699e:	bf00      	nop
900169a0:	24023418 	.word	0x24023418

900169a4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
900169a4:	4b03      	ldr	r3, [pc, #12]	@ (900169b4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
900169a6:	6818      	ldr	r0, [r3, #0]
900169a8:	b110      	cbz	r0, 900169b0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
900169aa:	6803      	ldr	r3, [r0, #0]
900169ac:	6a1b      	ldr	r3, [r3, #32]
900169ae:	4718      	bx	r3
900169b0:	4770      	bx	lr
900169b2:	bf00      	nop
900169b4:	24023418 	.word	0x24023418

900169b8 <_ZN8touchgfx11Application16clearCachedAreasEv>:
900169b8:	2300      	movs	r3, #0
900169ba:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
900169be:	4770      	bx	lr

900169c0 <_ZN8touchgfx11Application14handleKeyEventEh>:
900169c0:	4b03      	ldr	r3, [pc, #12]	@ (900169d0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
900169c2:	6818      	ldr	r0, [r3, #0]
900169c4:	b110      	cbz	r0, 900169cc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
900169c6:	6803      	ldr	r3, [r0, #0]
900169c8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900169ca:	4718      	bx	r3
900169cc:	4770      	bx	lr
900169ce:	bf00      	nop
900169d0:	24023418 	.word	0x24023418

900169d4 <_ZN8touchgfx11ApplicationD1Ev>:
900169d4:	4770      	bx	lr

900169d6 <_ZN8touchgfx11ApplicationD0Ev>:
900169d6:	b510      	push	{r4, lr}
900169d8:	4604      	mov	r4, r0
900169da:	f44f 719e 	mov.w	r1, #316	@ 0x13c
900169de:	f012 fd45 	bl	9002946c <_ZdlPvj>
900169e2:	4620      	mov	r0, r4
900169e4:	bd10      	pop	{r4, pc}

900169e6 <_ZNK8touchgfx4Rect9intersectERKS0_>:
900169e6:	b510      	push	{r4, lr}
900169e8:	f9b1 4000 	ldrsh.w	r4, [r1]
900169ec:	888a      	ldrh	r2, [r1, #4]
900169ee:	f9b0 3000 	ldrsh.w	r3, [r0]
900169f2:	4422      	add	r2, r4
900169f4:	b212      	sxth	r2, r2
900169f6:	4293      	cmp	r3, r2
900169f8:	da15      	bge.n	90016a26 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900169fa:	8882      	ldrh	r2, [r0, #4]
900169fc:	4413      	add	r3, r2
900169fe:	b21b      	sxth	r3, r3
90016a00:	429c      	cmp	r4, r3
90016a02:	da10      	bge.n	90016a26 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016a04:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90016a08:	88c9      	ldrh	r1, [r1, #6]
90016a0a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90016a0e:	4419      	add	r1, r3
90016a10:	b209      	sxth	r1, r1
90016a12:	428a      	cmp	r2, r1
90016a14:	da07      	bge.n	90016a26 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016a16:	88c0      	ldrh	r0, [r0, #6]
90016a18:	4410      	add	r0, r2
90016a1a:	b200      	sxth	r0, r0
90016a1c:	4283      	cmp	r3, r0
90016a1e:	bfac      	ite	ge
90016a20:	2000      	movge	r0, #0
90016a22:	2001      	movlt	r0, #1
90016a24:	bd10      	pop	{r4, pc}
90016a26:	2000      	movs	r0, #0
90016a28:	e7fc      	b.n	90016a24 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90016a2a <_ZN8touchgfx4Rect10restrictToEss>:
90016a2a:	f9b0 3000 	ldrsh.w	r3, [r0]
90016a2e:	2b00      	cmp	r3, #0
90016a30:	b510      	push	{r4, lr}
90016a32:	da04      	bge.n	90016a3e <_ZN8touchgfx4Rect10restrictToEss+0x14>
90016a34:	8884      	ldrh	r4, [r0, #4]
90016a36:	4423      	add	r3, r4
90016a38:	8083      	strh	r3, [r0, #4]
90016a3a:	2300      	movs	r3, #0
90016a3c:	8003      	strh	r3, [r0, #0]
90016a3e:	f9b0 4000 	ldrsh.w	r4, [r0]
90016a42:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016a46:	1b09      	subs	r1, r1, r4
90016a48:	428b      	cmp	r3, r1
90016a4a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90016a4e:	bfc8      	it	gt
90016a50:	8081      	strhgt	r1, [r0, #4]
90016a52:	2b00      	cmp	r3, #0
90016a54:	da04      	bge.n	90016a60 <_ZN8touchgfx4Rect10restrictToEss+0x36>
90016a56:	88c1      	ldrh	r1, [r0, #6]
90016a58:	440b      	add	r3, r1
90016a5a:	80c3      	strh	r3, [r0, #6]
90016a5c:	2300      	movs	r3, #0
90016a5e:	8043      	strh	r3, [r0, #2]
90016a60:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90016a64:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90016a68:	1a52      	subs	r2, r2, r1
90016a6a:	4293      	cmp	r3, r2
90016a6c:	bfc8      	it	gt
90016a6e:	80c2      	strhgt	r2, [r0, #6]
90016a70:	bd10      	pop	{r4, pc}
	...

90016a74 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90016a74:	4b10      	ldr	r3, [pc, #64]	@ (90016ab8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90016a76:	b510      	push	{r4, lr}
90016a78:	460c      	mov	r4, r1
90016a7a:	f9b3 2000 	ldrsh.w	r2, [r3]
90016a7e:	4b0f      	ldr	r3, [pc, #60]	@ (90016abc <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90016a80:	4620      	mov	r0, r4
90016a82:	f9b3 1000 	ldrsh.w	r1, [r3]
90016a86:	f7ff ffd0 	bl	90016a2a <_ZN8touchgfx4Rect10restrictToEss>
90016a8a:	4b0d      	ldr	r3, [pc, #52]	@ (90016ac0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90016a8c:	6818      	ldr	r0, [r3, #0]
90016a8e:	b190      	cbz	r0, 90016ab6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90016a90:	6803      	ldr	r3, [r0, #0]
90016a92:	4621      	mov	r1, r4
90016a94:	689b      	ldr	r3, [r3, #8]
90016a96:	4798      	blx	r3
90016a98:	4b0a      	ldr	r3, [pc, #40]	@ (90016ac4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90016a9a:	6818      	ldr	r0, [r3, #0]
90016a9c:	b118      	cbz	r0, 90016aa6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90016a9e:	6803      	ldr	r3, [r0, #0]
90016aa0:	4621      	mov	r1, r4
90016aa2:	689b      	ldr	r3, [r3, #8]
90016aa4:	4798      	blx	r3
90016aa6:	4b08      	ldr	r3, [pc, #32]	@ (90016ac8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90016aa8:	4621      	mov	r1, r4
90016aaa:	6818      	ldr	r0, [r3, #0]
90016aac:	6803      	ldr	r3, [r0, #0]
90016aae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90016ab2:	69db      	ldr	r3, [r3, #28]
90016ab4:	4718      	bx	r3
90016ab6:	bd10      	pop	{r4, pc}
90016ab8:	240233ca 	.word	0x240233ca
90016abc:	240233c8 	.word	0x240233c8
90016ac0:	24023418 	.word	0x24023418
90016ac4:	24023414 	.word	0x24023414
90016ac8:	240233d4 	.word	0x240233d4

90016acc <_ZNK8touchgfx4Rect8includesERKS0_>:
90016acc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016ace:	4606      	mov	r6, r0
90016ad0:	4608      	mov	r0, r1
90016ad2:	460f      	mov	r7, r1
90016ad4:	f7f9 fe13 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
90016ad8:	b9e8      	cbnz	r0, 90016b16 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016ada:	f9b7 5000 	ldrsh.w	r5, [r7]
90016ade:	f9b6 4000 	ldrsh.w	r4, [r6]
90016ae2:	42a5      	cmp	r5, r4
90016ae4:	db17      	blt.n	90016b16 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016ae6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
90016aea:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90016aee:	429a      	cmp	r2, r3
90016af0:	db11      	blt.n	90016b16 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016af2:	88b9      	ldrh	r1, [r7, #4]
90016af4:	440d      	add	r5, r1
90016af6:	88b1      	ldrh	r1, [r6, #4]
90016af8:	440c      	add	r4, r1
90016afa:	b22d      	sxth	r5, r5
90016afc:	b224      	sxth	r4, r4
90016afe:	42a5      	cmp	r5, r4
90016b00:	dc09      	bgt.n	90016b16 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016b02:	88f8      	ldrh	r0, [r7, #6]
90016b04:	4410      	add	r0, r2
90016b06:	88f2      	ldrh	r2, [r6, #6]
90016b08:	4413      	add	r3, r2
90016b0a:	b200      	sxth	r0, r0
90016b0c:	b21b      	sxth	r3, r3
90016b0e:	4298      	cmp	r0, r3
90016b10:	bfcc      	ite	gt
90016b12:	2000      	movgt	r0, #0
90016b14:	2001      	movle	r0, #1
90016b16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90016b18 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90016b18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016b1a:	4604      	mov	r4, r0
90016b1c:	4608      	mov	r0, r1
90016b1e:	460d      	mov	r5, r1
90016b20:	f7f9 fded 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
90016b24:	b978      	cbnz	r0, 90016b46 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
90016b26:	4620      	mov	r0, r4
90016b28:	f7f9 fde9 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
90016b2c:	f9b5 6000 	ldrsh.w	r6, [r5]
90016b30:	b150      	cbz	r0, 90016b48 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90016b32:	8026      	strh	r6, [r4, #0]
90016b34:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90016b38:	8063      	strh	r3, [r4, #2]
90016b3a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90016b3e:	80a3      	strh	r3, [r4, #4]
90016b40:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90016b44:	80e3      	strh	r3, [r4, #6]
90016b46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016b48:	f9b4 1000 	ldrsh.w	r1, [r4]
90016b4c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016b50:	42b1      	cmp	r1, r6
90016b52:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90016b56:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90016b5a:	460f      	mov	r7, r1
90016b5c:	88ed      	ldrh	r5, [r5, #6]
90016b5e:	bfa8      	it	ge
90016b60:	4637      	movge	r7, r6
90016b62:	4293      	cmp	r3, r2
90016b64:	4618      	mov	r0, r3
90016b66:	4466      	add	r6, ip
90016b68:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90016b6c:	bfa8      	it	ge
90016b6e:	4610      	movge	r0, r2
90016b70:	442a      	add	r2, r5
90016b72:	88e5      	ldrh	r5, [r4, #6]
90016b74:	4461      	add	r1, ip
90016b76:	b236      	sxth	r6, r6
90016b78:	8027      	strh	r7, [r4, #0]
90016b7a:	442b      	add	r3, r5
90016b7c:	b209      	sxth	r1, r1
90016b7e:	b212      	sxth	r2, r2
90016b80:	8060      	strh	r0, [r4, #2]
90016b82:	b21b      	sxth	r3, r3
90016b84:	428e      	cmp	r6, r1
90016b86:	bfac      	ite	ge
90016b88:	ebc7 0106 	rsbge	r1, r7, r6
90016b8c:	ebc7 0101 	rsblt	r1, r7, r1
90016b90:	429a      	cmp	r2, r3
90016b92:	bfac      	ite	ge
90016b94:	ebc0 0202 	rsbge	r2, r0, r2
90016b98:	ebc0 0203 	rsblt	r2, r0, r3
90016b9c:	80a1      	strh	r1, [r4, #4]
90016b9e:	80e2      	strh	r2, [r4, #6]
90016ba0:	e7d1      	b.n	90016b46 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90016ba4 <_ZN8touchgfx11Application11getInstanceEv>:
90016ba4:	4b01      	ldr	r3, [pc, #4]	@ (90016bac <_ZN8touchgfx11Application11getInstanceEv+0x8>)
90016ba6:	6818      	ldr	r0, [r3, #0]
90016ba8:	4770      	bx	lr
90016baa:	bf00      	nop
90016bac:	24023428 	.word	0x24023428

90016bb0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90016bb0:	2300      	movs	r3, #0
90016bb2:	b510      	push	{r4, lr}
90016bb4:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
90016bb8:	4604      	mov	r4, r0
90016bba:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90016bbe:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
90016bc2:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
90016bc6:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
90016bca:	429a      	cmp	r2, r3
90016bcc:	d90e      	bls.n	90016bec <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
90016bce:	18e2      	adds	r2, r4, r3
90016bd0:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
90016bd4:	b122      	cbz	r2, 90016be0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
90016bd6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
90016bda:	6803      	ldr	r3, [r0, #0]
90016bdc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90016bde:	4798      	blx	r3
90016be0:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
90016be4:	3301      	adds	r3, #1
90016be6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
90016bea:	e7ea      	b.n	90016bc2 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90016bec:	bd10      	pop	{r4, pc}

90016bee <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90016bee:	2300      	movs	r3, #0
90016bf0:	f100 0284 	add.w	r2, r0, #132	@ 0x84
90016bf4:	30a4      	adds	r0, #164	@ 0xa4
90016bf6:	f820 3c24 	strh.w	r3, [r0, #-36]
90016bfa:	f802 3b01 	strb.w	r3, [r2], #1
90016bfe:	4282      	cmp	r2, r0
90016c00:	d1fb      	bne.n	90016bfa <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
90016c02:	4770      	bx	lr

90016c04 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90016c04:	b570      	push	{r4, r5, r6, lr}
90016c06:	4c0b      	ldr	r4, [pc, #44]	@ (90016c34 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
90016c08:	4605      	mov	r5, r0
90016c0a:	460e      	mov	r6, r1
90016c0c:	6820      	ldr	r0, [r4, #0]
90016c0e:	b110      	cbz	r0, 90016c16 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90016c10:	6803      	ldr	r3, [r0, #0]
90016c12:	695b      	ldr	r3, [r3, #20]
90016c14:	4798      	blx	r3
90016c16:	1d28      	adds	r0, r5, #4
90016c18:	f7ff ffe9 	bl	90016bee <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90016c1c:	6026      	str	r6, [r4, #0]
90016c1e:	6833      	ldr	r3, [r6, #0]
90016c20:	4630      	mov	r0, r6
90016c22:	68db      	ldr	r3, [r3, #12]
90016c24:	4798      	blx	r3
90016c26:	682b      	ldr	r3, [r5, #0]
90016c28:	4628      	mov	r0, r5
90016c2a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016c2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016c30:	4718      	bx	r3
90016c32:	bf00      	nop
90016c34:	24023418 	.word	0x24023418

90016c38 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90016c38:	2300      	movs	r3, #0
90016c3a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
90016c3e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
90016c42:	461a      	mov	r2, r3
90016c44:	b5f0      	push	{r4, r5, r6, r7, lr}
90016c46:	461c      	mov	r4, r3
90016c48:	461d      	mov	r5, r3
90016c4a:	459c      	cmp	ip, r3
90016c4c:	dd1a      	ble.n	90016c84 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
90016c4e:	18c6      	adds	r6, r0, r3
90016c50:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
90016c54:	b16e      	cbz	r6, 90016c72 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
90016c56:	429a      	cmp	r2, r3
90016c58:	d008      	beq.n	90016c6c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
90016c5a:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
90016c5e:	fa1f fe82 	uxth.w	lr, r2
90016c62:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
90016c66:	1887      	adds	r7, r0, r2
90016c68:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
90016c6c:	3201      	adds	r2, #1
90016c6e:	3301      	adds	r3, #1
90016c70:	e7eb      	b.n	90016c4a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90016c72:	4299      	cmp	r1, r3
90016c74:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
90016c78:	bfa8      	it	ge
90016c7a:	3501      	addge	r5, #1
90016c7c:	429e      	cmp	r6, r3
90016c7e:	bfc8      	it	gt
90016c80:	3401      	addgt	r4, #1
90016c82:	e7f4      	b.n	90016c6e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90016c84:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
90016c88:	1b49      	subs	r1, r1, r5
90016c8a:	1b1b      	subs	r3, r3, r4
90016c8c:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
90016c90:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
90016c94:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90016c98:	4293      	cmp	r3, r2
90016c9a:	dd03      	ble.n	90016ca4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90016c9c:	3b01      	subs	r3, #1
90016c9e:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
90016ca2:	e7f7      	b.n	90016c94 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90016ca4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90016ca8 <_ZN8touchgfx11Application15handleTickEventEv>:
90016ca8:	b570      	push	{r4, r5, r6, lr}
90016caa:	4d16      	ldr	r5, [pc, #88]	@ (90016d04 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90016cac:	4604      	mov	r4, r0
90016cae:	6828      	ldr	r0, [r5, #0]
90016cb0:	b140      	cbz	r0, 90016cc4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90016cb2:	7a03      	ldrb	r3, [r0, #8]
90016cb4:	b933      	cbnz	r3, 90016cc4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90016cb6:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
90016cba:	6803      	ldr	r3, [r0, #0]
90016cbc:	689b      	ldr	r3, [r3, #8]
90016cbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016cc2:	4718      	bx	r3
90016cc4:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
90016cc8:	4e0f      	ldr	r6, [pc, #60]	@ (90016d08 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
90016cca:	b973      	cbnz	r3, 90016cea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90016ccc:	b168      	cbz	r0, 90016cea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90016cce:	7a03      	ldrb	r3, [r0, #8]
90016cd0:	b15b      	cbz	r3, 90016cea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90016cd2:	6830      	ldr	r0, [r6, #0]
90016cd4:	b110      	cbz	r0, 90016cdc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
90016cd6:	6803      	ldr	r3, [r0, #0]
90016cd8:	691b      	ldr	r3, [r3, #16]
90016cda:	4798      	blx	r3
90016cdc:	6828      	ldr	r0, [r5, #0]
90016cde:	6803      	ldr	r3, [r0, #0]
90016ce0:	68db      	ldr	r3, [r3, #12]
90016ce2:	4798      	blx	r3
90016ce4:	2301      	movs	r3, #1
90016ce6:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
90016cea:	3404      	adds	r4, #4
90016cec:	4620      	mov	r0, r4
90016cee:	f7ff ff5f 	bl	90016bb0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90016cf2:	4620      	mov	r0, r4
90016cf4:	f7ff ffa0 	bl	90016c38 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90016cf8:	6830      	ldr	r0, [r6, #0]
90016cfa:	b110      	cbz	r0, 90016d02 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90016cfc:	6803      	ldr	r3, [r0, #0]
90016cfe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90016d00:	e7dd      	b.n	90016cbe <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90016d02:	bd70      	pop	{r4, r5, r6, pc}
90016d04:	2402341c 	.word	0x2402341c
90016d08:	24023418 	.word	0x24023418

90016d0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90016d0c:	4603      	mov	r3, r0
90016d0e:	f100 0140 	add.w	r1, r0, #64	@ 0x40
90016d12:	2200      	movs	r2, #0
90016d14:	801a      	strh	r2, [r3, #0]
90016d16:	3308      	adds	r3, #8
90016d18:	f823 2c06 	strh.w	r2, [r3, #-6]
90016d1c:	f823 2c04 	strh.w	r2, [r3, #-4]
90016d20:	f823 2c02 	strh.w	r2, [r3, #-2]
90016d24:	428b      	cmp	r3, r1
90016d26:	d1f5      	bne.n	90016d14 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90016d28:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
90016d2c:	4770      	bx	lr
	...

90016d30 <_ZN8touchgfx11ApplicationC1Ev>:
90016d30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016d32:	4b1d      	ldr	r3, [pc, #116]	@ (90016da8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90016d34:	4606      	mov	r6, r0
90016d36:	4604      	mov	r4, r0
90016d38:	2500      	movs	r5, #0
90016d3a:	f846 3b04 	str.w	r3, [r6], #4
90016d3e:	22a8      	movs	r2, #168	@ 0xa8
90016d40:	2100      	movs	r1, #0
90016d42:	4630      	mov	r0, r6
90016d44:	f013 f9a4 	bl	9002a090 <memset>
90016d48:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
90016d4c:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90016d50:	4f16      	ldr	r7, [pc, #88]	@ (90016dac <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
90016d52:	f7ff ffdb 	bl	90016d0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90016d56:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
90016d5a:	f7ff ffd7 	bl	90016d0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90016d5e:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
90016d62:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
90016d66:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
90016d6a:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
90016d6e:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
90016d72:	490f      	ldr	r1, [pc, #60]	@ (90016db0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90016d74:	480f      	ldr	r0, [pc, #60]	@ (90016db4 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
90016d76:	f011 fce9 	bl	9002874c <CRC_Lock>
90016d7a:	4b0f      	ldr	r3, [pc, #60]	@ (90016db8 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90016d7c:	b158      	cbz	r0, 90016d96 <_ZN8touchgfx11ApplicationC1Ev+0x66>
90016d7e:	801d      	strh	r5, [r3, #0]
90016d80:	2300      	movs	r3, #0
90016d82:	4a0e      	ldr	r2, [pc, #56]	@ (90016dbc <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90016d84:	4630      	mov	r0, r6
90016d86:	6013      	str	r3, [r2, #0]
90016d88:	4a0d      	ldr	r2, [pc, #52]	@ (90016dc0 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
90016d8a:	603b      	str	r3, [r7, #0]
90016d8c:	6013      	str	r3, [r2, #0]
90016d8e:	f7ff ff2e 	bl	90016bee <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90016d92:	4620      	mov	r0, r4
90016d94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016d96:	f44f 6280 	mov.w	r2, #1024	@ 0x400
90016d9a:	2002      	movs	r0, #2
90016d9c:	801a      	strh	r2, [r3, #0]
90016d9e:	6038      	str	r0, [r7, #0]
90016da0:	f001 fe08 	bl	900189b4 <_ZN8touchgfx6Screen4drawEv>
90016da4:	e7ec      	b.n	90016d80 <_ZN8touchgfx11ApplicationC1Ev+0x50>
90016da6:	bf00      	nop
90016da8:	9002dc4c 	.word	0x9002dc4c
90016dac:	24023418 	.word	0x24023418
90016db0:	b5e8b5cd 	.word	0xb5e8b5cd
90016db4:	f407a5c2 	.word	0xf407a5c2
90016db8:	240000a8 	.word	0x240000a8
90016dbc:	24023428 	.word	0x24023428
90016dc0:	2402341c 	.word	0x2402341c

90016dc4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90016dc4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
90016dc8:	3b01      	subs	r3, #1
90016dca:	b29b      	uxth	r3, r3
90016dcc:	428b      	cmp	r3, r1
90016dce:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
90016dd2:	b510      	push	{r4, lr}
90016dd4:	d908      	bls.n	90016de8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
90016dd6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90016dda:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90016dde:	681a      	ldr	r2, [r3, #0]
90016de0:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90016de4:	685a      	ldr	r2, [r3, #4]
90016de6:	6062      	str	r2, [r4, #4]
90016de8:	bd10      	pop	{r4, pc}
	...

90016dec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90016dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016df0:	b08f      	sub	sp, #60	@ 0x3c
90016df2:	4b8f      	ldr	r3, [pc, #572]	@ (90017030 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90016df4:	4683      	mov	fp, r0
90016df6:	ac0a      	add	r4, sp, #40	@ 0x28
90016df8:	e884 0006 	stmia.w	r4, {r1, r2}
90016dfc:	f9b3 2000 	ldrsh.w	r2, [r3]
90016e00:	4620      	mov	r0, r4
90016e02:	4b8c      	ldr	r3, [pc, #560]	@ (90017034 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90016e04:	f9b3 1000 	ldrsh.w	r1, [r3]
90016e08:	f7ff fe0f 	bl	90016a2a <_ZN8touchgfx4Rect10restrictToEss>
90016e0c:	4620      	mov	r0, r4
90016e0e:	f7f9 fc76 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
90016e12:	2800      	cmp	r0, #0
90016e14:	d16a      	bne.n	90016eec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90016e16:	9403      	str	r4, [sp, #12]
90016e18:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90016e1c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90016e20:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90016e24:	9301      	str	r3, [sp, #4]
90016e26:	35a4      	adds	r5, #164	@ 0xa4
90016e28:	b15c      	cbz	r4, 90016e42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
90016e2a:	4629      	mov	r1, r5
90016e2c:	9803      	ldr	r0, [sp, #12]
90016e2e:	f7ff fe4d 	bl	90016acc <_ZNK8touchgfx4Rect8includesERKS0_>
90016e32:	3c01      	subs	r4, #1
90016e34:	b118      	cbz	r0, 90016e3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
90016e36:	b2a1      	uxth	r1, r4
90016e38:	9801      	ldr	r0, [sp, #4]
90016e3a:	f7ff ffc3 	bl	90016dc4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016e3e:	3d08      	subs	r5, #8
90016e40:	e7f2      	b.n	90016e28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
90016e42:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
90016e46:	f10a 33ff 	add.w	r3, sl, #4294967295
90016e4a:	f8cd a010 	str.w	sl, [sp, #16]
90016e4e:	9302      	str	r3, [sp, #8]
90016e50:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90016e54:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
90016e58:	9306      	str	r3, [sp, #24]
90016e5a:	445c      	add	r4, fp
90016e5c:	2500      	movs	r5, #0
90016e5e:	4626      	mov	r6, r4
90016e60:	f8cd a014 	str.w	sl, [sp, #20]
90016e64:	462f      	mov	r7, r5
90016e66:	9b05      	ldr	r3, [sp, #20]
90016e68:	2b00      	cmp	r3, #0
90016e6a:	d073      	beq.n	90016f54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
90016e6c:	9903      	ldr	r1, [sp, #12]
90016e6e:	4630      	mov	r0, r6
90016e70:	f7ff fdb9 	bl	900169e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
90016e74:	b350      	cbz	r0, 90016ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90016e76:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
90016e7a:	f9b6 c000 	ldrsh.w	ip, [r6]
90016e7e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
90016e82:	45e6      	cmp	lr, ip
90016e84:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
90016e88:	db33      	blt.n	90016ef2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90016e8a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90016e8e:	88b3      	ldrh	r3, [r6, #4]
90016e90:	4472      	add	r2, lr
90016e92:	4463      	add	r3, ip
90016e94:	b212      	sxth	r2, r2
90016e96:	b21b      	sxth	r3, r3
90016e98:	429a      	cmp	r2, r3
90016e9a:	dc2a      	bgt.n	90016ef2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90016e9c:	fa1f f289 	uxth.w	r2, r9
90016ea0:	88f3      	ldrh	r3, [r6, #6]
90016ea2:	45c8      	cmp	r8, r9
90016ea4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90016ea8:	4413      	add	r3, r2
90016eaa:	fa1f fc88 	uxth.w	ip, r8
90016eae:	b29b      	uxth	r3, r3
90016eb0:	fa0f fe83 	sxth.w	lr, r3
90016eb4:	db0f      	blt.n	90016ed6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90016eb6:	eba3 030c 	sub.w	r3, r3, ip
90016eba:	1ac9      	subs	r1, r1, r3
90016ebc:	b209      	sxth	r1, r1
90016ebe:	2900      	cmp	r1, #0
90016ec0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90016ec4:	dd12      	ble.n	90016eec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90016ec6:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
90016eca:	4605      	mov	r5, r0
90016ecc:	9b05      	ldr	r3, [sp, #20]
90016ece:	3e08      	subs	r6, #8
90016ed0:	3b01      	subs	r3, #1
90016ed2:	9305      	str	r3, [sp, #20]
90016ed4:	e7c7      	b.n	90016e66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
90016ed6:	4461      	add	r1, ip
90016ed8:	b209      	sxth	r1, r1
90016eda:	4571      	cmp	r1, lr
90016edc:	dc38      	bgt.n	90016f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90016ede:	eba2 020c 	sub.w	r2, r2, ip
90016ee2:	b212      	sxth	r2, r2
90016ee4:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90016ee8:	2a00      	cmp	r2, #0
90016eea:	dcee      	bgt.n	90016eca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90016eec:	b00f      	add	sp, #60	@ 0x3c
90016eee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016ef2:	45c8      	cmp	r8, r9
90016ef4:	db2c      	blt.n	90016f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90016ef6:	88f3      	ldrh	r3, [r6, #6]
90016ef8:	4499      	add	r9, r3
90016efa:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
90016efe:	4498      	add	r8, r3
90016f00:	fa0f f989 	sxth.w	r9, r9
90016f04:	fa0f f888 	sxth.w	r8, r8
90016f08:	45c1      	cmp	r9, r8
90016f0a:	db21      	blt.n	90016f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90016f0c:	fa1f f28c 	uxth.w	r2, ip
90016f10:	88b3      	ldrh	r3, [r6, #4]
90016f12:	45e6      	cmp	lr, ip
90016f14:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90016f18:	4413      	add	r3, r2
90016f1a:	fa1f f88e 	uxth.w	r8, lr
90016f1e:	b29b      	uxth	r3, r3
90016f20:	fa0f f983 	sxth.w	r9, r3
90016f24:	db0a      	blt.n	90016f3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
90016f26:	eba3 0308 	sub.w	r3, r3, r8
90016f2a:	1ac9      	subs	r1, r1, r3
90016f2c:	b209      	sxth	r1, r1
90016f2e:	2900      	cmp	r1, #0
90016f30:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90016f34:	ddda      	ble.n	90016eec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90016f36:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90016f3a:	e7c6      	b.n	90016eca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90016f3c:	4441      	add	r1, r8
90016f3e:	b209      	sxth	r1, r1
90016f40:	4549      	cmp	r1, r9
90016f42:	dc05      	bgt.n	90016f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90016f44:	eba2 0208 	sub.w	r2, r2, r8
90016f48:	b212      	sxth	r2, r2
90016f4a:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
90016f4e:	e7cb      	b.n	90016ee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
90016f50:	4607      	mov	r7, r0
90016f52:	e7bb      	b.n	90016ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90016f54:	2d00      	cmp	r5, #0
90016f56:	d181      	bne.n	90016e5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
90016f58:	2f00      	cmp	r7, #0
90016f5a:	f000 81dd 	beq.w	90017318 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90016f5e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
90016f62:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
90016f66:	b2b3      	uxth	r3, r6
90016f68:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
90016f6c:	9305      	str	r3, [sp, #20]
90016f6e:	9a05      	ldr	r2, [sp, #20]
90016f70:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90016f74:	4413      	add	r3, r2
90016f76:	b2ba      	uxth	r2, r7
90016f78:	4492      	add	sl, r2
90016f7a:	b29b      	uxth	r3, r3
90016f7c:	fa1f fa8a 	uxth.w	sl, sl
90016f80:	fa0f f883 	sxth.w	r8, r3
90016f84:	fa0f f98a 	sxth.w	r9, sl
90016f88:	e9cd 2307 	strd	r2, r3, [sp, #28]
90016f8c:	9b04      	ldr	r3, [sp, #16]
90016f8e:	2b00      	cmp	r3, #0
90016f90:	d052      	beq.n	90017038 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
90016f92:	9903      	ldr	r1, [sp, #12]
90016f94:	4620      	mov	r0, r4
90016f96:	f7ff fd26 	bl	900169e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
90016f9a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90016f9e:	b1c0      	cbz	r0, 90016fd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90016fa0:	f9b4 e000 	ldrsh.w	lr, [r4]
90016fa4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90016fa8:	4576      	cmp	r6, lr
90016faa:	dc22      	bgt.n	90016ff2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90016fac:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90016fb0:	44f4      	add	ip, lr
90016fb2:	fa0f fc8c 	sxth.w	ip, ip
90016fb6:	45e0      	cmp	r8, ip
90016fb8:	db1b      	blt.n	90016ff2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90016fba:	428f      	cmp	r7, r1
90016fbc:	fa1f fc81 	uxth.w	ip, r1
90016fc0:	88e1      	ldrh	r1, [r4, #6]
90016fc2:	dc0d      	bgt.n	90016fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90016fc4:	ebaa 0c0c 	sub.w	ip, sl, ip
90016fc8:	f8a4 9002 	strh.w	r9, [r4, #2]
90016fcc:	eba1 010c 	sub.w	r1, r1, ip
90016fd0:	80e1      	strh	r1, [r4, #6]
90016fd2:	4628      	mov	r0, r5
90016fd4:	9904      	ldr	r1, [sp, #16]
90016fd6:	3c08      	subs	r4, #8
90016fd8:	4605      	mov	r5, r0
90016fda:	3901      	subs	r1, #1
90016fdc:	9104      	str	r1, [sp, #16]
90016fde:	e7d3      	b.n	90016f88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
90016fe0:	4461      	add	r1, ip
90016fe2:	b209      	sxth	r1, r1
90016fe4:	4549      	cmp	r1, r9
90016fe6:	dcf5      	bgt.n	90016fd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90016fe8:	eba2 0c0c 	sub.w	ip, r2, ip
90016fec:	f8a4 c006 	strh.w	ip, [r4, #6]
90016ff0:	e7ef      	b.n	90016fd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90016ff2:	428f      	cmp	r7, r1
90016ff4:	dcee      	bgt.n	90016fd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90016ff6:	f8b4 c006 	ldrh.w	ip, [r4, #6]
90016ffa:	4461      	add	r1, ip
90016ffc:	b209      	sxth	r1, r1
90016ffe:	4589      	cmp	r9, r1
90017000:	dbe8      	blt.n	90016fd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90017002:	4576      	cmp	r6, lr
90017004:	fa1f fc8e 	uxth.w	ip, lr
90017008:	88a1      	ldrh	r1, [r4, #4]
9001700a:	dc07      	bgt.n	9001701c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
9001700c:	eba3 0c0c 	sub.w	ip, r3, ip
90017010:	f8a4 8000 	strh.w	r8, [r4]
90017014:	eba1 010c 	sub.w	r1, r1, ip
90017018:	80a1      	strh	r1, [r4, #4]
9001701a:	e7da      	b.n	90016fd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
9001701c:	4461      	add	r1, ip
9001701e:	b209      	sxth	r1, r1
90017020:	4588      	cmp	r8, r1
90017022:	dbd7      	blt.n	90016fd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90017024:	9905      	ldr	r1, [sp, #20]
90017026:	eba1 0c0c 	sub.w	ip, r1, ip
9001702a:	f8a4 c004 	strh.w	ip, [r4, #4]
9001702e:	e7d0      	b.n	90016fd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90017030:	240233ca 	.word	0x240233ca
90017034:	240233c8 	.word	0x240233c8
90017038:	2d00      	cmp	r5, #0
9001703a:	f000 816d 	beq.w	90017318 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001703e:	9b06      	ldr	r3, [sp, #24]
90017040:	445b      	add	r3, fp
90017042:	461c      	mov	r4, r3
90017044:	9b02      	ldr	r3, [sp, #8]
90017046:	3301      	adds	r3, #1
90017048:	f000 8166 	beq.w	90017318 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
9001704c:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
90017050:	9803      	ldr	r0, [sp, #12]
90017052:	4629      	mov	r1, r5
90017054:	f7ff fd3a 	bl	90016acc <_ZNK8touchgfx4Rect8includesERKS0_>
90017058:	b120      	cbz	r0, 90017064 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
9001705a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001705e:	9801      	ldr	r0, [sp, #4]
90017060:	f7ff feb0 	bl	90016dc4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017064:	9903      	ldr	r1, [sp, #12]
90017066:	4628      	mov	r0, r5
90017068:	f7ff fcbd 	bl	900169e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001706c:	2800      	cmp	r0, #0
9001706e:	f000 809c 	beq.w	900171aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90017072:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
90017076:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
9001707a:	fa1f f189 	uxth.w	r1, r9
9001707e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90017082:	9309      	str	r3, [sp, #36]	@ 0x24
90017084:	eb01 0c03 	add.w	ip, r1, r3
90017088:	b283      	uxth	r3, r0
9001708a:	4548      	cmp	r0, r9
9001708c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
90017090:	fa1f fa8c 	uxth.w	sl, ip
90017094:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90017098:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
9001709c:	eb03 050c 	add.w	r5, r3, ip
900170a0:	b2ad      	uxth	r5, r5
900170a2:	9505      	str	r5, [sp, #20]
900170a4:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
900170a8:	9504      	str	r5, [sp, #16]
900170aa:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
900170ae:	f340 8099 	ble.w	900171e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
900170b2:	1a5b      	subs	r3, r3, r1
900170b4:	4596      	cmp	lr, r2
900170b6:	fa0f f08a 	sxth.w	r0, sl
900170ba:	b29b      	uxth	r3, r3
900170bc:	b21e      	sxth	r6, r3
900170be:	dd2e      	ble.n	9001711e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
900170c0:	9f02      	ldr	r7, [sp, #8]
900170c2:	fa1f fe8e 	uxth.w	lr, lr
900170c6:	b292      	uxth	r2, r2
900170c8:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
900170cc:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
900170d0:	9f04      	ldr	r7, [sp, #16]
900170d2:	ebae 0102 	sub.w	r1, lr, r2
900170d6:	44a6      	add	lr, r4
900170d8:	1a3f      	subs	r7, r7, r0
900170da:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
900170de:	b289      	uxth	r1, r1
900170e0:	4402      	add	r2, r0
900170e2:	fa0f fe8e 	sxth.w	lr, lr
900170e6:	b20d      	sxth	r5, r1
900170e8:	b212      	sxth	r2, r2
900170ea:	436f      	muls	r7, r5
900170ec:	ebae 0202 	sub.w	r2, lr, r2
900170f0:	4372      	muls	r2, r6
900170f2:	4297      	cmp	r7, r2
900170f4:	db09      	blt.n	9001710a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
900170f6:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
900170fa:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
900170fe:	449c      	add	ip, r3
90017100:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90017104:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90017108:	e686      	b.n	90016e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001710a:	4421      	add	r1, r4
9001710c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
90017110:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
90017114:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90017118:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001711c:	e67c      	b.n	90016e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001711e:	9f04      	ldr	r7, [sp, #16]
90017120:	42b8      	cmp	r0, r7
90017122:	da27      	bge.n	90017174 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90017124:	9902      	ldr	r1, [sp, #8]
90017126:	1a3f      	subs	r7, r7, r0
90017128:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
9001712c:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90017130:	eb05 010e 	add.w	r1, r5, lr
90017134:	fa1f f881 	uxth.w	r8, r1
90017138:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
9001713c:	4411      	add	r1, r2
9001713e:	fa0f f988 	sxth.w	r9, r8
90017142:	eba2 020e 	sub.w	r2, r2, lr
90017146:	eba1 0108 	sub.w	r1, r1, r8
9001714a:	4372      	muls	r2, r6
9001714c:	b289      	uxth	r1, r1
9001714e:	fa0f f881 	sxth.w	r8, r1
90017152:	fb08 f707 	mul.w	r7, r8, r7
90017156:	42ba      	cmp	r2, r7
90017158:	dc06      	bgt.n	90017168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
9001715a:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
9001715e:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
90017162:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
90017166:	e7ca      	b.n	900170fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
90017168:	4429      	add	r1, r5
9001716a:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
9001716e:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90017172:	e651      	b.n	90016e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90017174:	9805      	ldr	r0, [sp, #20]
90017176:	2d06      	cmp	r5, #6
90017178:	ebaa 0000 	sub.w	r0, sl, r0
9001717c:	b280      	uxth	r0, r0
9001717e:	fa0f fe80 	sxth.w	lr, r0
90017182:	d817      	bhi.n	900171b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90017184:	9b04      	ldr	r3, [sp, #16]
90017186:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
9001718a:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
9001718e:	1c6b      	adds	r3, r5, #1
90017190:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
90017194:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90017198:	9b01      	ldr	r3, [sp, #4]
9001719a:	9801      	ldr	r0, [sp, #4]
9001719c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900171a0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900171a4:	805a      	strh	r2, [r3, #2]
900171a6:	809e      	strh	r6, [r3, #4]
900171a8:	80d9      	strh	r1, [r3, #6]
900171aa:	9b02      	ldr	r3, [sp, #8]
900171ac:	3c08      	subs	r4, #8
900171ae:	3b01      	subs	r3, #1
900171b0:	9302      	str	r3, [sp, #8]
900171b2:	e747      	b.n	90017044 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
900171b4:	9a02      	ldr	r2, [sp, #8]
900171b6:	45b6      	cmp	lr, r6
900171b8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900171bc:	db0d      	blt.n	900171da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
900171be:	449c      	add	ip, r3
900171c0:	445a      	add	r2, fp
900171c2:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
900171c6:	fa1f fc8c 	uxth.w	ip, ip
900171ca:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
900171ce:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
900171d2:	448c      	add	ip, r1
900171d4:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
900171d8:	e61e      	b.n	90016e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900171da:	445a      	add	r2, fp
900171dc:	4484      	add	ip, r0
900171de:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
900171e2:	e78f      	b.n	90017104 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
900171e4:	fa1f f18e 	uxth.w	r1, lr
900171e8:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
900171ec:	b293      	uxth	r3, r2
900171ee:	4596      	cmp	lr, r2
900171f0:	eb01 0806 	add.w	r8, r1, r6
900171f4:	9306      	str	r3, [sp, #24]
900171f6:	fa1f f888 	uxth.w	r8, r8
900171fa:	9f06      	ldr	r7, [sp, #24]
900171fc:	fa0f f388 	sxth.w	r3, r8
90017200:	9307      	str	r3, [sp, #28]
90017202:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90017206:	443b      	add	r3, r7
90017208:	b29b      	uxth	r3, r3
9001720a:	9308      	str	r3, [sp, #32]
9001720c:	da24      	bge.n	90017258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
9001720e:	9905      	ldr	r1, [sp, #20]
90017210:	eba3 0308 	sub.w	r3, r3, r8
90017214:	eba2 020e 	sub.w	r2, r2, lr
90017218:	eba9 0000 	sub.w	r0, r9, r0
9001721c:	ebaa 0401 	sub.w	r4, sl, r1
90017220:	b29b      	uxth	r3, r3
90017222:	b2a4      	uxth	r4, r4
90017224:	b219      	sxth	r1, r3
90017226:	b225      	sxth	r5, r4
90017228:	4348      	muls	r0, r1
9001722a:	436a      	muls	r2, r5
9001722c:	4282      	cmp	r2, r0
9001722e:	9a02      	ldr	r2, [sp, #8]
90017230:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90017234:	445a      	add	r2, fp
90017236:	dc06      	bgt.n	90017246 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
90017238:	9b07      	ldr	r3, [sp, #28]
9001723a:	44a4      	add	ip, r4
9001723c:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
90017240:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
90017244:	e75e      	b.n	90017104 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90017246:	9904      	ldr	r1, [sp, #16]
90017248:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
9001724c:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
90017250:	4433      	add	r3, r6
90017252:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90017256:	e5df      	b.n	90016e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90017258:	9f06      	ldr	r7, [sp, #24]
9001725a:	9b04      	ldr	r3, [sp, #16]
9001725c:	1bc9      	subs	r1, r1, r7
9001725e:	fa0f f78a 	sxth.w	r7, sl
90017262:	b289      	uxth	r1, r1
90017264:	429f      	cmp	r7, r3
90017266:	fa0f fe81 	sxth.w	lr, r1
9001726a:	dd23      	ble.n	900172b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
9001726c:	9a05      	ldr	r2, [sp, #20]
9001726e:	eba9 0000 	sub.w	r0, r9, r0
90017272:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90017276:	ebaa 0202 	sub.w	r2, sl, r2
9001727a:	9d07      	ldr	r5, [sp, #28]
9001727c:	fb0e f000 	mul.w	r0, lr, r0
90017280:	b292      	uxth	r2, r2
90017282:	eba5 0a03 	sub.w	sl, r5, r3
90017286:	9b02      	ldr	r3, [sp, #8]
90017288:	b214      	sxth	r4, r2
9001728a:	00db      	lsls	r3, r3, #3
9001728c:	fb04 fa0a 	mul.w	sl, r4, sl
90017290:	445b      	add	r3, fp
90017292:	4550      	cmp	r0, sl
90017294:	db03      	blt.n	9001729e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
90017296:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
9001729a:	4494      	add	ip, r2
9001729c:	e732      	b.n	90017104 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
9001729e:	9a04      	ldr	r2, [sp, #16]
900172a0:	4431      	add	r1, r6
900172a2:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
900172a6:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
900172aa:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
900172ae:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
900172b2:	e75c      	b.n	9001716e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
900172b4:	9b08      	ldr	r3, [sp, #32]
900172b6:	2d06      	cmp	r5, #6
900172b8:	eba3 0308 	sub.w	r3, r3, r8
900172bc:	b29b      	uxth	r3, r3
900172be:	b218      	sxth	r0, r3
900172c0:	d813      	bhi.n	900172ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
900172c2:	9b07      	ldr	r3, [sp, #28]
900172c4:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
900172c8:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
900172cc:	1c6b      	adds	r3, r5, #1
900172ce:	9901      	ldr	r1, [sp, #4]
900172d0:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
900172d4:	9b01      	ldr	r3, [sp, #4]
900172d6:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
900172da:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900172de:	805a      	strh	r2, [r3, #2]
900172e0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900172e2:	f8a3 e006 	strh.w	lr, [r3, #6]
900172e6:	809a      	strh	r2, [r3, #4]
900172e8:	e75f      	b.n	900171aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
900172ea:	9c02      	ldr	r4, [sp, #8]
900172ec:	4570      	cmp	r0, lr
900172ee:	ea4f 04c4 	mov.w	r4, r4, lsl #3
900172f2:	db0d      	blt.n	90017310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
900172f4:	4431      	add	r1, r6
900172f6:	9b06      	ldr	r3, [sp, #24]
900172f8:	445c      	add	r4, fp
900172fa:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
900172fe:	b289      	uxth	r1, r1
90017300:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
90017304:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90017308:	4419      	add	r1, r3
9001730a:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
9001730e:	e583      	b.n	90016e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90017310:	445c      	add	r4, fp
90017312:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
90017316:	e79b      	b.n	90017250 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
90017318:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
9001731c:	f64f 76ff 	movw	r6, #65535	@ 0xffff
90017320:	1e65      	subs	r5, r4, #1
90017322:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90017326:	b2ad      	uxth	r5, r5
90017328:	42b5      	cmp	r5, r6
9001732a:	d044      	beq.n	900173b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
9001732c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90017330:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
90017334:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90017338:	4282      	cmp	r2, r0
9001733a:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
9001733e:	d11f      	bne.n	90017380 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90017340:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
90017344:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90017348:	459c      	cmp	ip, r3
9001734a:	d119      	bne.n	90017380 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
9001734c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
90017350:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90017354:	19d8      	adds	r0, r3, r7
90017356:	b200      	sxth	r0, r0
90017358:	4288      	cmp	r0, r1
9001735a:	d109      	bne.n	90017370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
9001735c:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
90017360:	4413      	add	r3, r2
90017362:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90017366:	4629      	mov	r1, r5
90017368:	9801      	ldr	r0, [sp, #4]
9001736a:	f7ff fd2b 	bl	90016dc4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001736e:	e003      	b.n	90017378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90017370:	4411      	add	r1, r2
90017372:	b209      	sxth	r1, r1
90017374:	42b9      	cmp	r1, r7
90017376:	d0f3      	beq.n	90017360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
90017378:	3d01      	subs	r5, #1
9001737a:	3c08      	subs	r4, #8
9001737c:	b2ad      	uxth	r5, r5
9001737e:	e7d3      	b.n	90017328 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90017380:	42b9      	cmp	r1, r7
90017382:	d1f9      	bne.n	90017378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90017384:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90017388:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
9001738c:	4299      	cmp	r1, r3
9001738e:	d1f3      	bne.n	90017378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90017390:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90017394:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90017398:	181f      	adds	r7, r3, r0
9001739a:	b23f      	sxth	r7, r7
9001739c:	42ba      	cmp	r2, r7
9001739e:	d105      	bne.n	900173ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
900173a0:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
900173a4:	440b      	add	r3, r1
900173a6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900173aa:	e7dc      	b.n	90017366 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
900173ac:	440a      	add	r2, r1
900173ae:	b212      	sxth	r2, r2
900173b0:	4290      	cmp	r0, r2
900173b2:	d1e1      	bne.n	90017378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
900173b4:	e7f6      	b.n	900173a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
900173b6:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
900173ba:	2e07      	cmp	r6, #7
900173bc:	ea4f 04c6 	mov.w	r4, r6, lsl #3
900173c0:	d812      	bhi.n	900173e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
900173c2:	1c75      	adds	r5, r6, #1
900173c4:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
900173c8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
900173cc:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
900173d0:	9d01      	ldr	r5, [sp, #4]
900173d2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
900173d6:	442c      	add	r4, r5
900173d8:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
900173dc:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
900173e0:	8061      	strh	r1, [r4, #2]
900173e2:	80a2      	strh	r2, [r4, #4]
900173e4:	80e3      	strh	r3, [r4, #6]
900173e6:	e581      	b.n	90016eec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900173e8:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
900173ec:	3e01      	subs	r6, #1
900173ee:	445c      	add	r4, fp
900173f0:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
900173f4:	f04f 37ff 	mov.w	r7, #4294967295
900173f8:	2500      	movs	r5, #0
900173fa:	9305      	str	r3, [sp, #20]
900173fc:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90017400:	1e72      	subs	r2, r6, #1
90017402:	9302      	str	r3, [sp, #8]
90017404:	4691      	mov	r9, r2
90017406:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
9001740a:	9304      	str	r3, [sp, #16]
9001740c:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
90017410:	f1b9 3fff 	cmp.w	r9, #4294967295
90017414:	6818      	ldr	r0, [r3, #0]
90017416:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
9001741a:	9207      	str	r2, [sp, #28]
9001741c:	bf16      	itet	ne
9001741e:	9905      	ldrne	r1, [sp, #20]
90017420:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90017424:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90017428:	9306      	str	r3, [sp, #24]
9001742a:	f8be 1006 	ldrh.w	r1, [lr, #6]
9001742e:	f8be 8004 	ldrh.w	r8, [lr, #4]
90017432:	fb18 f801 	smulbb	r8, r8, r1
90017436:	6859      	ldr	r1, [r3, #4]
90017438:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001743c:	4671      	mov	r1, lr
9001743e:	a80c      	add	r0, sp, #48	@ 0x30
90017440:	f7ff fb6a 	bl	90016b18 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017444:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90017448:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
9001744c:	f04f 0c08 	mov.w	ip, #8
90017450:	9b04      	ldr	r3, [sp, #16]
90017452:	9a02      	ldr	r2, [sp, #8]
90017454:	fb10 f001 	smulbb	r0, r0, r1
90017458:	fb02 8803 	mla	r8, r2, r3, r8
9001745c:	eba0 0108 	sub.w	r1, r0, r8
90017460:	fb90 f0fc 	sdiv	r0, r0, ip
90017464:	4288      	cmp	r0, r1
90017466:	dc20      	bgt.n	900174aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90017468:	4551      	cmp	r1, sl
9001746a:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
9001746e:	da03      	bge.n	90017478 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90017470:	b1d9      	cbz	r1, 900174aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90017472:	468a      	mov	sl, r1
90017474:	464f      	mov	r7, r9
90017476:	4635      	mov	r5, r6
90017478:	f109 39ff 	add.w	r9, r9, #4294967295
9001747c:	f119 0f02 	cmn.w	r9, #2
90017480:	d1c6      	bne.n	90017410 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90017482:	4616      	mov	r6, r2
90017484:	3201      	adds	r2, #1
90017486:	f1a4 0408 	sub.w	r4, r4, #8
9001748a:	d1b7      	bne.n	900173fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
9001748c:	9b01      	ldr	r3, [sp, #4]
9001748e:	b2ac      	uxth	r4, r5
90017490:	00ed      	lsls	r5, r5, #3
90017492:	1958      	adds	r0, r3, r5
90017494:	1c7b      	adds	r3, r7, #1
90017496:	d10b      	bne.n	900174b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90017498:	4601      	mov	r1, r0
9001749a:	9803      	ldr	r0, [sp, #12]
9001749c:	f7ff fb3c 	bl	90016b18 <_ZN8touchgfx4Rect11expandToFitERKS0_>
900174a0:	4621      	mov	r1, r4
900174a2:	9801      	ldr	r0, [sp, #4]
900174a4:	f7ff fc8e 	bl	90016dc4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900174a8:	e4b6      	b.n	90016e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900174aa:	464f      	mov	r7, r9
900174ac:	4635      	mov	r5, r6
900174ae:	e7ed      	b.n	9001748c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
900174b0:	9b01      	ldr	r3, [sp, #4]
900174b2:	00ff      	lsls	r7, r7, #3
900174b4:	445d      	add	r5, fp
900174b6:	19d9      	adds	r1, r3, r7
900174b8:	445f      	add	r7, fp
900174ba:	f7ff fb2d 	bl	90016b18 <_ZN8touchgfx4Rect11expandToFitERKS0_>
900174be:	9b03      	ldr	r3, [sp, #12]
900174c0:	cb03      	ldmia	r3!, {r0, r1}
900174c2:	9b03      	ldr	r3, [sp, #12]
900174c4:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
900174c8:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
900174cc:	f855 0fac 	ldr.w	r0, [r5, #172]!
900174d0:	6869      	ldr	r1, [r5, #4]
900174d2:	c303      	stmia	r3!, {r0, r1}
900174d4:	e7e4      	b.n	900174a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
900174d6:	bf00      	nop

900174d8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
900174d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900174dc:	f500 7698 	add.w	r6, r0, #304	@ 0x130
900174e0:	b09b      	sub	sp, #108	@ 0x6c
900174e2:	4604      	mov	r4, r0
900174e4:	4630      	mov	r0, r6
900174e6:	f7f9 f90a 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
900174ea:	4605      	mov	r5, r0
900174ec:	b948      	cbnz	r0, 90017502 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
900174ee:	6823      	ldr	r3, [r4, #0]
900174f0:	4620      	mov	r0, r4
900174f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900174f4:	e896 0006 	ldmia.w	r6, {r1, r2}
900174f8:	4798      	blx	r3
900174fa:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
900174fe:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
90017502:	4bc5      	ldr	r3, [pc, #788]	@ (90017818 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90017504:	681b      	ldr	r3, [r3, #0]
90017506:	2b00      	cmp	r3, #0
90017508:	d03f      	beq.n	9001758a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
9001750a:	4dc4      	ldr	r5, [pc, #784]	@ (9001781c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
9001750c:	4628      	mov	r0, r5
9001750e:	f7f9 f8f6 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
90017512:	4606      	mov	r6, r0
90017514:	2800      	cmp	r0, #0
90017516:	d138      	bne.n	9001758a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90017518:	4628      	mov	r0, r5
9001751a:	f7ff f98f 	bl	9001683c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001751e:	6823      	ldr	r3, [r4, #0]
90017520:	6829      	ldr	r1, [r5, #0]
90017522:	4620      	mov	r0, r4
90017524:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90017526:	686a      	ldr	r2, [r5, #4]
90017528:	4798      	blx	r3
9001752a:	802e      	strh	r6, [r5, #0]
9001752c:	806e      	strh	r6, [r5, #2]
9001752e:	80ae      	strh	r6, [r5, #4]
90017530:	80ee      	strh	r6, [r5, #6]
90017532:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
90017536:	4dba      	ldr	r5, [pc, #744]	@ (90017820 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
90017538:	4640      	mov	r0, r8
9001753a:	f7ff fbe7 	bl	90016d0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001753e:	882e      	ldrh	r6, [r5, #0]
90017540:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
90017544:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90017548:	4633      	mov	r3, r6
9001754a:	42bb      	cmp	r3, r7
9001754c:	d224      	bcs.n	90017598 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
9001754e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
90017552:	2907      	cmp	r1, #7
90017554:	d816      	bhi.n	90017584 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
90017556:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
9001755a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
9001755e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90017562:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
90017566:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
9001756a:	1c4a      	adds	r2, r1, #1
9001756c:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
90017570:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
90017574:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
90017578:	f8a2 a002 	strh.w	sl, [r2, #2]
9001757c:	f8a2 e004 	strh.w	lr, [r2, #4]
90017580:	f8a2 c006 	strh.w	ip, [r2, #6]
90017584:	3301      	adds	r3, #1
90017586:	b29b      	uxth	r3, r3
90017588:	e7df      	b.n	9001754a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
9001758a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
9001758e:	2b00      	cmp	r3, #0
90017590:	d1cf      	bne.n	90017532 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
90017592:	b01b      	add	sp, #108	@ 0x6c
90017594:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017598:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
9001759c:	42b3      	cmp	r3, r6
9001759e:	d90c      	bls.n	900175ba <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
900175a0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
900175a4:	6822      	ldr	r2, [r4, #0]
900175a6:	3601      	adds	r6, #1
900175a8:	4620      	mov	r0, r4
900175aa:	6c17      	ldr	r7, [r2, #64]	@ 0x40
900175ac:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
900175b0:	b2b6      	uxth	r6, r6
900175b2:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
900175b6:	47b8      	blx	r7
900175b8:	e7ee      	b.n	90017598 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
900175ba:	4a9a      	ldr	r2, [pc, #616]	@ (90017824 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
900175bc:	6813      	ldr	r3, [r2, #0]
900175be:	4691      	mov	r9, r2
900175c0:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
900175c4:	2b01      	cmp	r3, #1
900175c6:	f040 80e0 	bne.w	9001778a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
900175ca:	8829      	ldrh	r1, [r5, #0]
900175cc:	2600      	movs	r6, #0
900175ce:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
900175d2:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
900175d6:	33ae      	adds	r3, #174	@ 0xae
900175d8:	428f      	cmp	r7, r1
900175da:	f103 0308 	add.w	r3, r3, #8
900175de:	dd0a      	ble.n	900175f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
900175e0:	f833 2c04 	ldrh.w	r2, [r3, #-4]
900175e4:	3101      	adds	r1, #1
900175e6:	f833 0c08 	ldrh.w	r0, [r3, #-8]
900175ea:	4402      	add	r2, r0
900175ec:	b212      	sxth	r2, r2
900175ee:	4296      	cmp	r6, r2
900175f0:	bfb8      	it	lt
900175f2:	4616      	movlt	r6, r2
900175f4:	e7f0      	b.n	900175d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
900175f6:	4b8c      	ldr	r3, [pc, #560]	@ (90017828 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
900175f8:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 90017824 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
900175fc:	881b      	ldrh	r3, [r3, #0]
900175fe:	2b0f      	cmp	r3, #15
90017600:	bf8c      	ite	hi
90017602:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
90017606:	f04f 0b01 	movls.w	fp, #1
9001760a:	2300      	movs	r3, #0
9001760c:	e9cd 3305 	strd	r3, r3, [sp, #20]
90017610:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90017614:	f8bd 001a 	ldrh.w	r0, [sp, #26]
90017618:	4b82      	ldr	r3, [pc, #520]	@ (90017824 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
9001761a:	4438      	add	r0, r7
9001761c:	b207      	sxth	r7, r0
9001761e:	6818      	ldr	r0, [r3, #0]
90017620:	42b7      	cmp	r7, r6
90017622:	6803      	ldr	r3, [r0, #0]
90017624:	f280 8083 	bge.w	9001772e <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
90017628:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
9001762c:	4798      	blx	r3
9001762e:	eb07 030b 	add.w	r3, r7, fp
90017632:	4298      	cmp	r0, r3
90017634:	da07      	bge.n	90017646 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90017636:	42b0      	cmp	r0, r6
90017638:	da05      	bge.n	90017646 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
9001763a:	4287      	cmp	r7, r0
9001763c:	dd6c      	ble.n	90017718 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
9001763e:	2f00      	cmp	r7, #0
90017640:	dd6a      	ble.n	90017718 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90017642:	4630      	mov	r0, r6
90017644:	e004      	b.n	90017650 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
90017646:	4287      	cmp	r7, r0
90017648:	dcfb      	bgt.n	90017642 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
9001764a:	42b0      	cmp	r0, r6
9001764c:	bfa8      	it	ge
9001764e:	4630      	movge	r0, r6
90017650:	4b76      	ldr	r3, [pc, #472]	@ (9001782c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
90017652:	1bc0      	subs	r0, r0, r7
90017654:	2200      	movs	r2, #0
90017656:	f8ad 7016 	strh.w	r7, [sp, #22]
9001765a:	f9b3 3000 	ldrsh.w	r3, [r3]
9001765e:	882f      	ldrh	r7, [r5, #0]
90017660:	f8ad 2014 	strh.w	r2, [sp, #20]
90017664:	f8ad 3018 	strh.w	r3, [sp, #24]
90017668:	f8ad 001a 	strh.w	r0, [sp, #26]
9001766c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90017670:	42bb      	cmp	r3, r7
90017672:	d9cd      	bls.n	90017610 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90017674:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
90017678:	ab07      	add	r3, sp, #28
9001767a:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001767e:	6851      	ldr	r1, [r2, #4]
90017680:	c303      	stmia	r3!, {r0, r1}
90017682:	a905      	add	r1, sp, #20
90017684:	a807      	add	r0, sp, #28
90017686:	f7ff f9ae 	bl	900169e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001768a:	2800      	cmp	r0, #0
9001768c:	d04c      	beq.n	90017728 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
9001768e:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90017692:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
90017696:	f8bd a020 	ldrh.w	sl, [sp, #32]
9001769a:	4686      	mov	lr, r0
9001769c:	4290      	cmp	r0, r2
9001769e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
900176a2:	4450      	add	r0, sl
900176a4:	f8bd a018 	ldrh.w	sl, [sp, #24]
900176a8:	bfb8      	it	lt
900176aa:	4696      	movlt	lr, r2
900176ac:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
900176b0:	4452      	add	r2, sl
900176b2:	b280      	uxth	r0, r0
900176b4:	4299      	cmp	r1, r3
900176b6:	468c      	mov	ip, r1
900176b8:	b292      	uxth	r2, r2
900176ba:	9302      	str	r3, [sp, #8]
900176bc:	bfb8      	it	lt
900176be:	469c      	movlt	ip, r3
900176c0:	b203      	sxth	r3, r0
900176c2:	fa0f fa82 	sxth.w	sl, r2
900176c6:	f8ad e01c 	strh.w	lr, [sp, #28]
900176ca:	f8ad c01e 	strh.w	ip, [sp, #30]
900176ce:	4553      	cmp	r3, sl
900176d0:	bfb8      	it	lt
900176d2:	4602      	movlt	r2, r0
900176d4:	9b02      	ldr	r3, [sp, #8]
900176d6:	eba2 020e 	sub.w	r2, r2, lr
900176da:	f8ad 2020 	strh.w	r2, [sp, #32]
900176de:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
900176e2:	4411      	add	r1, r2
900176e4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
900176e8:	4413      	add	r3, r2
900176ea:	b289      	uxth	r1, r1
900176ec:	b29b      	uxth	r3, r3
900176ee:	b208      	sxth	r0, r1
900176f0:	b21a      	sxth	r2, r3
900176f2:	4290      	cmp	r0, r2
900176f4:	bfb8      	it	lt
900176f6:	460b      	movlt	r3, r1
900176f8:	eba3 030c 	sub.w	r3, r3, ip
900176fc:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90017700:	a807      	add	r0, sp, #28
90017702:	f7f8 fffc 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
90017706:	b920      	cbnz	r0, 90017712 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
90017708:	6823      	ldr	r3, [r4, #0]
9001770a:	a907      	add	r1, sp, #28
9001770c:	4620      	mov	r0, r4
9001770e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017710:	4798      	blx	r3
90017712:	3701      	adds	r7, #1
90017714:	b2bf      	uxth	r7, r7
90017716:	e7a9      	b.n	9001766c <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
90017718:	f8d9 0000 	ldr.w	r0, [r9]
9001771c:	2101      	movs	r1, #1
9001771e:	6803      	ldr	r3, [r0, #0]
90017720:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90017724:	4798      	blx	r3
90017726:	e773      	b.n	90017610 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90017728:	e9cd 0007 	strd	r0, r0, [sp, #28]
9001772c:	e7e8      	b.n	90017700 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
9001772e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90017730:	4798      	blx	r3
90017732:	4b3f      	ldr	r3, [pc, #252]	@ (90017830 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90017734:	781b      	ldrb	r3, [r3, #0]
90017736:	2b00      	cmp	r3, #0
90017738:	f43f af2b 	beq.w	90017592 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
9001773c:	2300      	movs	r3, #0
9001773e:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
90017742:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
90017746:	882b      	ldrh	r3, [r5, #0]
90017748:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001774c:	42ab      	cmp	r3, r5
9001774e:	f4bf af20 	bcs.w	90017592 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90017752:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
90017756:	2907      	cmp	r1, #7
90017758:	d814      	bhi.n	90017784 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
9001775a:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
9001775e:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
90017762:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
90017766:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
9001776a:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
9001776e:	1c4a      	adds	r2, r1, #1
90017770:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
90017774:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
90017778:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
9001777c:	f8a2 c002 	strh.w	ip, [r2, #2]
90017780:	8097      	strh	r7, [r2, #4]
90017782:	80d6      	strh	r6, [r2, #6]
90017784:	3301      	adds	r3, #1
90017786:	b29b      	uxth	r3, r3
90017788:	e7e0      	b.n	9001774c <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
9001778a:	2b02      	cmp	r3, #2
9001778c:	f040 8133 	bne.w	900179f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90017790:	4b28      	ldr	r3, [pc, #160]	@ (90017834 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
90017792:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
90017796:	781b      	ldrb	r3, [r3, #0]
90017798:	2b01      	cmp	r3, #1
9001779a:	f000 8098 	beq.w	900178ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001779e:	882a      	ldrh	r2, [r5, #0]
900177a0:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
900177a4:	3201      	adds	r2, #1
900177a6:	b292      	uxth	r2, r2
900177a8:	2900      	cmp	r1, #0
900177aa:	d0c2      	beq.n	90017732 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
900177ac:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
900177b0:	4694      	mov	ip, r2
900177b2:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
900177b6:	f04f 0900 	mov.w	r9, #0
900177ba:	441e      	add	r6, r3
900177bc:	b236      	sxth	r6, r6
900177be:	fa1f f38c 	uxth.w	r3, ip
900177c2:	ea4f 07c9 	mov.w	r7, r9, lsl #3
900177c6:	4299      	cmp	r1, r3
900177c8:	f240 80be 	bls.w	90017948 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
900177cc:	4427      	add	r7, r4
900177ce:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
900177d2:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
900177d6:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
900177da:	4283      	cmp	r3, r0
900177dc:	f340 80a0 	ble.w	90017920 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
900177e0:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
900177e4:	46e1      	mov	r9, ip
900177e6:	4406      	add	r6, r0
900177e8:	b236      	sxth	r6, r6
900177ea:	429e      	cmp	r6, r3
900177ec:	bfa8      	it	ge
900177ee:	461e      	movge	r6, r3
900177f0:	f10c 0c01 	add.w	ip, ip, #1
900177f4:	e7e3      	b.n	900177be <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
900177f6:	d10a      	bne.n	9001780e <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
900177f8:	4562      	cmp	r2, ip
900177fa:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
900177fe:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
90017802:	bfb8      	it	lt
90017804:	4662      	movlt	r2, ip
90017806:	4288      	cmp	r0, r1
90017808:	bfb8      	it	lt
9001780a:	461f      	movlt	r7, r3
9001780c:	e086      	b.n	9001791c <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
9001780e:	428a      	cmp	r2, r1
90017810:	bfb8      	it	lt
90017812:	460a      	movlt	r2, r1
90017814:	e082      	b.n	9001791c <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90017816:	bf00      	nop
90017818:	24023414 	.word	0x24023414
9001781c:	24023420 	.word	0x24023420
90017820:	240000a8 	.word	0x240000a8
90017824:	240233d4 	.word	0x240233d4
90017828:	240233ca 	.word	0x240233ca
9001782c:	240233c8 	.word	0x240233c8
90017830:	240233d2 	.word	0x240233d2
90017834:	240233cc 	.word	0x240233cc
90017838:	19a1      	adds	r1, r4, r6
9001783a:	ab07      	add	r3, sp, #28
9001783c:	f851 0fac 	ldr.w	r0, [r1, #172]!
90017840:	6849      	ldr	r1, [r1, #4]
90017842:	c303      	stmia	r3!, {r0, r1}
90017844:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90017848:	a807      	add	r0, sp, #28
9001784a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
9001784e:	2b13      	cmp	r3, #19
90017850:	440b      	add	r3, r1
90017852:	bfd8      	it	le
90017854:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
90017858:	1a9b      	subs	r3, r3, r2
9001785a:	f8ad 201c 	strh.w	r2, [sp, #28]
9001785e:	f8ad 3020 	strh.w	r3, [sp, #32]
90017862:	f7ff f805 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90017866:	a807      	add	r0, sp, #28
90017868:	f7f8 ff49 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
9001786c:	bb78      	cbnz	r0, 900178ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001786e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
90017872:	4426      	add	r6, r4
90017874:	f8d9 0000 	ldr.w	r0, [r9]
90017878:	f1bc 0f14 	cmp.w	ip, #20
9001787c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90017880:	f8d0 e000 	ldr.w	lr, [r0]
90017884:	bfa8      	it	ge
90017886:	f04f 0c14 	movge.w	ip, #20
9001788a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
9001788e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90017892:	fa1f fc8c 	uxth.w	ip, ip
90017896:	f8cd c000 	str.w	ip, [sp]
9001789a:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
9001789e:	47d8      	blx	fp
900178a0:	4683      	mov	fp, r0
900178a2:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
900178a6:	a807      	add	r0, sp, #28
900178a8:	f7fe ffc8 	bl	9001683c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
900178ac:	6823      	ldr	r3, [r4, #0]
900178ae:	4620      	mov	r0, r4
900178b0:	a907      	add	r1, sp, #28
900178b2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900178b4:	4798      	blx	r3
900178b6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
900178ba:	eba0 000b 	sub.w	r0, r0, fp
900178be:	b200      	sxth	r0, r0
900178c0:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
900178c4:	b918      	cbnz	r0, 900178ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
900178c6:	b2b9      	uxth	r1, r7
900178c8:	4650      	mov	r0, sl
900178ca:	f7ff fa7b 	bl	90016dc4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900178ce:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
900178d2:	f1bb 0f00 	cmp.w	fp, #0
900178d6:	f43f af2c 	beq.w	90017732 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
900178da:	882b      	ldrh	r3, [r5, #0]
900178dc:	2700      	movs	r7, #0
900178de:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
900178e2:	3301      	adds	r3, #1
900178e4:	b29b      	uxth	r3, r3
900178e6:	b299      	uxth	r1, r3
900178e8:	00fe      	lsls	r6, r7, #3
900178ea:	458b      	cmp	fp, r1
900178ec:	d9a4      	bls.n	90017838 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
900178ee:	4426      	add	r6, r4
900178f0:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
900178f4:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
900178f8:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
900178fc:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
90017900:	4408      	add	r0, r1
90017902:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
90017906:	4461      	add	r1, ip
90017908:	b200      	sxth	r0, r0
9001790a:	b209      	sxth	r1, r1
9001790c:	4288      	cmp	r0, r1
9001790e:	f6bf af72 	bge.w	900177f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90017912:	4584      	cmp	ip, r0
90017914:	4662      	mov	r2, ip
90017916:	461f      	mov	r7, r3
90017918:	bfb8      	it	lt
9001791a:	4602      	movlt	r2, r0
9001791c:	3301      	adds	r3, #1
9001791e:	e7e2      	b.n	900178e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90017920:	d10e      	bne.n	90017940 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90017922:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
90017926:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
9001792a:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
9001792e:	4473      	add	r3, lr
90017930:	b21b      	sxth	r3, r3
90017932:	429e      	cmp	r6, r3
90017934:	bfa8      	it	ge
90017936:	461e      	movge	r6, r3
90017938:	4287      	cmp	r7, r0
9001793a:	bfb8      	it	lt
9001793c:	46e1      	movlt	r9, ip
9001793e:	e757      	b.n	900177f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017940:	4286      	cmp	r6, r0
90017942:	bfa8      	it	ge
90017944:	4606      	movge	r6, r0
90017946:	e753      	b.n	900177f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017948:	eb0a 0007 	add.w	r0, sl, r7
9001794c:	4427      	add	r7, r4
9001794e:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
90017952:	f1bb 0f13 	cmp.w	fp, #19
90017956:	bfdc      	itt	le
90017958:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
9001795c:	445e      	addle	r6, fp
9001795e:	e9cd 2102 	strd	r2, r1, [sp, #8]
90017962:	bfd8      	it	le
90017964:	b236      	sxthle	r6, r6
90017966:	f7f8 feca 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
9001796a:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
9001796e:	2800      	cmp	r0, #0
90017970:	f47f af1a 	bne.w	900177a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
90017974:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
90017978:	fa1f fb8b 	uxth.w	fp, fp
9001797c:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
90017980:	1ab6      	subs	r6, r6, r2
90017982:	4829      	ldr	r0, [pc, #164]	@ (90017a28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
90017984:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
90017988:	2e14      	cmp	r6, #20
9001798a:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
9001798e:	6800      	ldr	r0, [r0, #0]
90017990:	bfa8      	it	ge
90017992:	2614      	movge	r6, #20
90017994:	f8ad 101c 	strh.w	r1, [sp, #28]
90017998:	f8ad 201e 	strh.w	r2, [sp, #30]
9001799c:	b289      	uxth	r1, r1
9001799e:	f8ad 3020 	strh.w	r3, [sp, #32]
900179a2:	b2b6      	uxth	r6, r6
900179a4:	f8d0 c000 	ldr.w	ip, [r0]
900179a8:	b292      	uxth	r2, r2
900179aa:	455e      	cmp	r6, fp
900179ac:	bf94      	ite	ls
900179ae:	9600      	strls	r6, [sp, #0]
900179b0:	f8cd b000 	strhi.w	fp, [sp]
900179b4:	b29b      	uxth	r3, r3
900179b6:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
900179ba:	47b0      	blx	r6
900179bc:	6823      	ldr	r3, [r4, #0]
900179be:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
900179c2:	a907      	add	r1, sp, #28
900179c4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900179c6:	4620      	mov	r0, r4
900179c8:	4798      	blx	r3
900179ca:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
900179ce:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
900179d2:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
900179d6:	1a5b      	subs	r3, r3, r1
900179d8:	440a      	add	r2, r1
900179da:	b21b      	sxth	r3, r3
900179dc:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
900179e0:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
900179e4:	2b00      	cmp	r3, #0
900179e6:	f47f aeda 	bne.w	9001779e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
900179ea:	fa1f f189 	uxth.w	r1, r9
900179ee:	4650      	mov	r0, sl
900179f0:	f7ff f9e8 	bl	90016dc4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900179f4:	e6d3      	b.n	9001779e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
900179f6:	882e      	ldrh	r6, [r5, #0]
900179f8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
900179fc:	42b3      	cmp	r3, r6
900179fe:	f67f ae98 	bls.w	90017732 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90017a02:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
90017a06:	ab07      	add	r3, sp, #28
90017a08:	f852 0fac 	ldr.w	r0, [r2, #172]!
90017a0c:	6851      	ldr	r1, [r2, #4]
90017a0e:	c303      	stmia	r3!, {r0, r1}
90017a10:	a807      	add	r0, sp, #28
90017a12:	f7f8 fe74 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
90017a16:	b920      	cbnz	r0, 90017a22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
90017a18:	6823      	ldr	r3, [r4, #0]
90017a1a:	a907      	add	r1, sp, #28
90017a1c:	4620      	mov	r0, r4
90017a1e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017a20:	4798      	blx	r3
90017a22:	3601      	adds	r6, #1
90017a24:	b2b6      	uxth	r6, r6
90017a26:	e7e7      	b.n	900179f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90017a28:	240233d4 	.word	0x240233d4

90017a2c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90017a2c:	4b03      	ldr	r3, [pc, #12]	@ (90017a3c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
90017a2e:	2200      	movs	r2, #0
90017a30:	801a      	strh	r2, [r3, #0]
90017a32:	805a      	strh	r2, [r3, #2]
90017a34:	809a      	strh	r2, [r3, #4]
90017a36:	80da      	strh	r2, [r3, #6]
90017a38:	4770      	bx	lr
90017a3a:	bf00      	nop
90017a3c:	24023420 	.word	0x24023420

90017a40 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90017a40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017a44:	b09d      	sub	sp, #116	@ 0x74
90017a46:	4606      	mov	r6, r0
90017a48:	4614      	mov	r4, r2
90017a4a:	468a      	mov	sl, r1
90017a4c:	a803      	add	r0, sp, #12
90017a4e:	461d      	mov	r5, r3
90017a50:	f001 f92a 	bl	90018ca8 <_ZN8touchgfx12TextProviderC1Ev>
90017a54:	6833      	ldr	r3, [r6, #0]
90017a56:	4630      	mov	r0, r6
90017a58:	f242 0b0b 	movw	fp, #8203	@ 0x200b
90017a5c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90017a5e:	4798      	blx	r3
90017a60:	6833      	ldr	r3, [r6, #0]
90017a62:	4607      	mov	r7, r0
90017a64:	4630      	mov	r0, r6
90017a66:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90017a68:	4798      	blx	r3
90017a6a:	462a      	mov	r2, r5
90017a6c:	2500      	movs	r5, #0
90017a6e:	4621      	mov	r1, r4
90017a70:	9000      	str	r0, [sp, #0]
90017a72:	463b      	mov	r3, r7
90017a74:	462c      	mov	r4, r5
90017a76:	46a9      	mov	r9, r5
90017a78:	46a8      	mov	r8, r5
90017a7a:	a803      	add	r0, sp, #12
90017a7c:	f001 f96f 	bl	90018d5e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017a80:	2300      	movs	r3, #0
90017a82:	9302      	str	r3, [sp, #8]
90017a84:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90017a88:	429c      	cmp	r4, r3
90017a8a:	d002      	beq.n	90017a92 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90017a8c:	455c      	cmp	r4, fp
90017a8e:	bf18      	it	ne
90017a90:	4625      	movne	r5, r4
90017a92:	ab02      	add	r3, sp, #8
90017a94:	4632      	mov	r2, r6
90017a96:	4651      	mov	r1, sl
90017a98:	a803      	add	r0, sp, #12
90017a9a:	f001 fc65 	bl	90019368 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017a9e:	4604      	mov	r4, r0
90017aa0:	b108      	cbz	r0, 90017aa6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
90017aa2:	280a      	cmp	r0, #10
90017aa4:	d10a      	bne.n	90017abc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
90017aa6:	45c1      	cmp	r9, r8
90017aa8:	bf38      	it	cc
90017aaa:	46c1      	movcc	r9, r8
90017aac:	f04f 0800 	mov.w	r8, #0
90017ab0:	2c00      	cmp	r4, #0
90017ab2:	d1e5      	bne.n	90017a80 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90017ab4:	4648      	mov	r0, r9
90017ab6:	b01d      	add	sp, #116	@ 0x74
90017ab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017abc:	9a02      	ldr	r2, [sp, #8]
90017abe:	2a00      	cmp	r2, #0
90017ac0:	d0de      	beq.n	90017a80 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90017ac2:	7b57      	ldrb	r7, [r2, #13]
90017ac4:	4629      	mov	r1, r5
90017ac6:	6833      	ldr	r3, [r6, #0]
90017ac8:	007f      	lsls	r7, r7, #1
90017aca:	8894      	ldrh	r4, [r2, #4]
90017acc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90017ace:	f407 7080 	and.w	r0, r7, #256	@ 0x100
90017ad2:	7a97      	ldrb	r7, [r2, #10]
90017ad4:	4307      	orrs	r7, r0
90017ad6:	4630      	mov	r0, r6
90017ad8:	4798      	blx	r3
90017ada:	4438      	add	r0, r7
90017adc:	4480      	add	r8, r0
90017ade:	fa1f f888 	uxth.w	r8, r8
90017ae2:	e7e5      	b.n	90017ab0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90017ae4 <_ZNK8touchgfx4Font12getCharWidthEt>:
90017ae4:	b508      	push	{r3, lr}
90017ae6:	6803      	ldr	r3, [r0, #0]
90017ae8:	68db      	ldr	r3, [r3, #12]
90017aea:	4798      	blx	r3
90017aec:	b128      	cbz	r0, 90017afa <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
90017aee:	7b43      	ldrb	r3, [r0, #13]
90017af0:	7a80      	ldrb	r0, [r0, #10]
90017af2:	005b      	lsls	r3, r3, #1
90017af4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90017af8:	4318      	orrs	r0, r3
90017afa:	bd08      	pop	{r3, pc}

90017afc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90017afc:	b40e      	push	{r1, r2, r3}
90017afe:	b5f0      	push	{r4, r5, r6, r7, lr}
90017b00:	b09e      	sub	sp, #120	@ 0x78
90017b02:	4605      	mov	r5, r0
90017b04:	ab23      	add	r3, sp, #140	@ 0x8c
90017b06:	a805      	add	r0, sp, #20
90017b08:	f853 4b04 	ldr.w	r4, [r3], #4
90017b0c:	9303      	str	r3, [sp, #12]
90017b0e:	f001 f8cb 	bl	90018ca8 <_ZN8touchgfx12TextProviderC1Ev>
90017b12:	682b      	ldr	r3, [r5, #0]
90017b14:	4628      	mov	r0, r5
90017b16:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90017b18:	4798      	blx	r3
90017b1a:	682b      	ldr	r3, [r5, #0]
90017b1c:	4606      	mov	r6, r0
90017b1e:	4628      	mov	r0, r5
90017b20:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90017b22:	4798      	blx	r3
90017b24:	4633      	mov	r3, r6
90017b26:	4621      	mov	r1, r4
90017b28:	ae1e      	add	r6, sp, #120	@ 0x78
90017b2a:	2400      	movs	r4, #0
90017b2c:	9000      	str	r0, [sp, #0]
90017b2e:	9a03      	ldr	r2, [sp, #12]
90017b30:	a805      	add	r0, sp, #20
90017b32:	f001 f914 	bl	90018d5e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017b36:	f846 4d68 	str.w	r4, [r6, #-104]!
90017b3a:	462a      	mov	r2, r5
90017b3c:	4633      	mov	r3, r6
90017b3e:	4621      	mov	r1, r4
90017b40:	a805      	add	r0, sp, #20
90017b42:	f001 fc11 	bl	90019368 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017b46:	b300      	cbz	r0, 90017b8a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
90017b48:	280a      	cmp	r0, #10
90017b4a:	d01a      	beq.n	90017b82 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90017b4c:	9f04      	ldr	r7, [sp, #16]
90017b4e:	b1c7      	cbz	r7, 90017b82 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90017b50:	7b78      	ldrb	r0, [r7, #13]
90017b52:	7a3b      	ldrb	r3, [r7, #8]
90017b54:	00c1      	lsls	r1, r0, #3
90017b56:	88ea      	ldrh	r2, [r5, #6]
90017b58:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90017b5c:	4319      	orrs	r1, r3
90017b5e:	0643      	lsls	r3, r0, #25
90017b60:	ea4f 1000 	mov.w	r0, r0, lsl #4
90017b64:	bf48      	it	mi
90017b66:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
90017b6a:	f400 7080 	and.w	r0, r0, #256	@ 0x100
90017b6e:	bf48      	it	mi
90017b70:	b219      	sxthmi	r1, r3
90017b72:	79fb      	ldrb	r3, [r7, #7]
90017b74:	4303      	orrs	r3, r0
90017b76:	4413      	add	r3, r2
90017b78:	1a5b      	subs	r3, r3, r1
90017b7a:	b21b      	sxth	r3, r3
90017b7c:	429c      	cmp	r4, r3
90017b7e:	bfb8      	it	lt
90017b80:	461c      	movlt	r4, r3
90017b82:	4633      	mov	r3, r6
90017b84:	462a      	mov	r2, r5
90017b86:	2100      	movs	r1, #0
90017b88:	e7da      	b.n	90017b40 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
90017b8a:	b2a0      	uxth	r0, r4
90017b8c:	b01e      	add	sp, #120	@ 0x78
90017b8e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90017b92:	b003      	add	sp, #12
90017b94:	4770      	bx	lr

90017b96 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
90017b96:	7a43      	ldrb	r3, [r0, #9]
90017b98:	8880      	ldrh	r0, [r0, #4]
90017b9a:	4418      	add	r0, r3
90017b9c:	b280      	uxth	r0, r0
90017b9e:	4770      	bx	lr

90017ba0 <_ZNK8touchgfx4Font13getFontHeightEv>:
90017ba0:	6803      	ldr	r3, [r0, #0]
90017ba2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90017ba4:	4718      	bx	r3

90017ba6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
90017ba6:	b40e      	push	{r1, r2, r3}
90017ba8:	b570      	push	{r4, r5, r6, lr}
90017baa:	b09d      	sub	sp, #116	@ 0x74
90017bac:	4604      	mov	r4, r0
90017bae:	ab21      	add	r3, sp, #132	@ 0x84
90017bb0:	a803      	add	r0, sp, #12
90017bb2:	f853 5b04 	ldr.w	r5, [r3], #4
90017bb6:	9302      	str	r3, [sp, #8]
90017bb8:	f001 f876 	bl	90018ca8 <_ZN8touchgfx12TextProviderC1Ev>
90017bbc:	6823      	ldr	r3, [r4, #0]
90017bbe:	4620      	mov	r0, r4
90017bc0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90017bc2:	4798      	blx	r3
90017bc4:	6823      	ldr	r3, [r4, #0]
90017bc6:	4606      	mov	r6, r0
90017bc8:	4620      	mov	r0, r4
90017bca:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90017bcc:	2401      	movs	r4, #1
90017bce:	4798      	blx	r3
90017bd0:	4633      	mov	r3, r6
90017bd2:	9000      	str	r0, [sp, #0]
90017bd4:	4629      	mov	r1, r5
90017bd6:	9a02      	ldr	r2, [sp, #8]
90017bd8:	a803      	add	r0, sp, #12
90017bda:	f001 f8c0 	bl	90018d5e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017bde:	a803      	add	r0, sp, #12
90017be0:	f001 fc8e 	bl	90019500 <_ZN8touchgfx12TextProvider11getNextCharEv>
90017be4:	b2a3      	uxth	r3, r4
90017be6:	b138      	cbz	r0, 90017bf8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
90017be8:	280a      	cmp	r0, #10
90017bea:	a803      	add	r0, sp, #12
90017bec:	bf04      	itt	eq
90017bee:	3301      	addeq	r3, #1
90017bf0:	b21c      	sxtheq	r4, r3
90017bf2:	f001 fc85 	bl	90019500 <_ZN8touchgfx12TextProvider11getNextCharEv>
90017bf6:	e7f5      	b.n	90017be4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
90017bf8:	4618      	mov	r0, r3
90017bfa:	b01d      	add	sp, #116	@ 0x74
90017bfc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017c00:	b003      	add	sp, #12
90017c02:	4770      	bx	lr

90017c04 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90017c04:	b40e      	push	{r1, r2, r3}
90017c06:	b5f0      	push	{r4, r5, r6, r7, lr}
90017c08:	b09e      	sub	sp, #120	@ 0x78
90017c0a:	4604      	mov	r4, r0
90017c0c:	ab23      	add	r3, sp, #140	@ 0x8c
90017c0e:	a805      	add	r0, sp, #20
90017c10:	f853 5b04 	ldr.w	r5, [r3], #4
90017c14:	9303      	str	r3, [sp, #12]
90017c16:	f001 f847 	bl	90018ca8 <_ZN8touchgfx12TextProviderC1Ev>
90017c1a:	6823      	ldr	r3, [r4, #0]
90017c1c:	4620      	mov	r0, r4
90017c1e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90017c20:	4798      	blx	r3
90017c22:	6823      	ldr	r3, [r4, #0]
90017c24:	4606      	mov	r6, r0
90017c26:	4620      	mov	r0, r4
90017c28:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90017c2a:	4798      	blx	r3
90017c2c:	4633      	mov	r3, r6
90017c2e:	4629      	mov	r1, r5
90017c30:	9000      	str	r0, [sp, #0]
90017c32:	9a03      	ldr	r2, [sp, #12]
90017c34:	a805      	add	r0, sp, #20
90017c36:	f001 f892 	bl	90018d5e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017c3a:	ad1e      	add	r5, sp, #120	@ 0x78
90017c3c:	2100      	movs	r1, #0
90017c3e:	f647 76ff 	movw	r6, #32767	@ 0x7fff
90017c42:	4622      	mov	r2, r4
90017c44:	a805      	add	r0, sp, #20
90017c46:	f845 1d68 	str.w	r1, [r5, #-104]!
90017c4a:	462b      	mov	r3, r5
90017c4c:	f001 fb8c 	bl	90019368 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017c50:	b1d8      	cbz	r0, 90017c8a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
90017c52:	280a      	cmp	r0, #10
90017c54:	d012      	beq.n	90017c7c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90017c56:	9804      	ldr	r0, [sp, #16]
90017c58:	b180      	cbz	r0, 90017c7c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90017c5a:	7b47      	ldrb	r7, [r0, #13]
90017c5c:	88e2      	ldrh	r2, [r4, #6]
90017c5e:	00fb      	lsls	r3, r7, #3
90017c60:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90017c64:	7a03      	ldrb	r3, [r0, #8]
90017c66:	430b      	orrs	r3, r1
90017c68:	0679      	lsls	r1, r7, #25
90017c6a:	bf44      	itt	mi
90017c6c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017c70:	b21b      	sxthmi	r3, r3
90017c72:	1ad3      	subs	r3, r2, r3
90017c74:	b21b      	sxth	r3, r3
90017c76:	429e      	cmp	r6, r3
90017c78:	bfa8      	it	ge
90017c7a:	461e      	movge	r6, r3
90017c7c:	462b      	mov	r3, r5
90017c7e:	4622      	mov	r2, r4
90017c80:	2100      	movs	r1, #0
90017c82:	a805      	add	r0, sp, #20
90017c84:	f001 fb70 	bl	90019368 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017c88:	e7e2      	b.n	90017c50 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
90017c8a:	4630      	mov	r0, r6
90017c8c:	b01e      	add	sp, #120	@ 0x78
90017c8e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90017c92:	b003      	add	sp, #12
90017c94:	4770      	bx	lr

90017c96 <_ZNK8touchgfx8Drawable10invalidateEv>:
90017c96:	b513      	push	{r0, r1, r4, lr}
90017c98:	6803      	ldr	r3, [r0, #0]
90017c9a:	2400      	movs	r4, #0
90017c9c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90017ca0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90017ca4:	f8ad 1004 	strh.w	r1, [sp, #4]
90017ca8:	4669      	mov	r1, sp
90017caa:	691b      	ldr	r3, [r3, #16]
90017cac:	9400      	str	r4, [sp, #0]
90017cae:	f8ad 2006 	strh.w	r2, [sp, #6]
90017cb2:	4798      	blx	r3
90017cb4:	b002      	add	sp, #8
90017cb6:	bd10      	pop	{r4, pc}

90017cb8 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
90017cb8:	b538      	push	{r3, r4, r5, lr}
90017cba:	680b      	ldr	r3, [r1, #0]
90017cbc:	460c      	mov	r4, r1
90017cbe:	4605      	mov	r5, r0
90017cc0:	68db      	ldr	r3, [r3, #12]
90017cc2:	4798      	blx	r3
90017cc4:	6823      	ldr	r3, [r4, #0]
90017cc6:	4620      	mov	r0, r4
90017cc8:	4629      	mov	r1, r5
90017cca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90017ccc:	4798      	blx	r3
90017cce:	4628      	mov	r0, r5
90017cd0:	bd38      	pop	{r3, r4, r5, pc}

90017cd2 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
90017cd2:	b410      	push	{r4}
90017cd4:	880a      	ldrh	r2, [r1, #0]
90017cd6:	8884      	ldrh	r4, [r0, #4]
90017cd8:	4422      	add	r2, r4
90017cda:	800a      	strh	r2, [r1, #0]
90017cdc:	884a      	ldrh	r2, [r1, #2]
90017cde:	88c4      	ldrh	r4, [r0, #6]
90017ce0:	4422      	add	r2, r4
90017ce2:	804a      	strh	r2, [r1, #2]
90017ce4:	6940      	ldr	r0, [r0, #20]
90017ce6:	b120      	cbz	r0, 90017cf2 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
90017ce8:	6803      	ldr	r3, [r0, #0]
90017cea:	f85d 4b04 	ldr.w	r4, [sp], #4
90017cee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90017cf0:	4718      	bx	r3
90017cf2:	f85d 4b04 	ldr.w	r4, [sp], #4
90017cf6:	4770      	bx	lr

90017cf8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
90017cf8:	b570      	push	{r4, r5, r6, lr}
90017cfa:	8882      	ldrh	r2, [r0, #4]
90017cfc:	460c      	mov	r4, r1
90017cfe:	880b      	ldrh	r3, [r1, #0]
90017d00:	4605      	mov	r5, r0
90017d02:	4413      	add	r3, r2
90017d04:	800b      	strh	r3, [r1, #0]
90017d06:	884b      	ldrh	r3, [r1, #2]
90017d08:	88c2      	ldrh	r2, [r0, #6]
90017d0a:	4413      	add	r3, r2
90017d0c:	804b      	strh	r3, [r1, #2]
90017d0e:	1d01      	adds	r1, r0, #4
90017d10:	4620      	mov	r0, r4
90017d12:	f7f8 fcb1 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
90017d16:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90017d1a:	2b00      	cmp	r3, #0
90017d1c:	dd0b      	ble.n	90017d36 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017d1e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90017d22:	2b00      	cmp	r3, #0
90017d24:	dd07      	ble.n	90017d36 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017d26:	6968      	ldr	r0, [r5, #20]
90017d28:	b128      	cbz	r0, 90017d36 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017d2a:	6803      	ldr	r3, [r0, #0]
90017d2c:	4621      	mov	r1, r4
90017d2e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90017d30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017d34:	4718      	bx	r3
90017d36:	bd70      	pop	{r4, r5, r6, pc}

90017d38 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
90017d38:	b570      	push	{r4, r5, r6, lr}
90017d3a:	8882      	ldrh	r2, [r0, #4]
90017d3c:	460c      	mov	r4, r1
90017d3e:	880b      	ldrh	r3, [r1, #0]
90017d40:	4605      	mov	r5, r0
90017d42:	4413      	add	r3, r2
90017d44:	800b      	strh	r3, [r1, #0]
90017d46:	884b      	ldrh	r3, [r1, #2]
90017d48:	88c2      	ldrh	r2, [r0, #6]
90017d4a:	4413      	add	r3, r2
90017d4c:	804b      	strh	r3, [r1, #2]
90017d4e:	1d01      	adds	r1, r0, #4
90017d50:	4620      	mov	r0, r4
90017d52:	f7f8 fc91 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
90017d56:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90017d5a:	2b00      	cmp	r3, #0
90017d5c:	dd19      	ble.n	90017d92 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90017d5e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90017d62:	2b00      	cmp	r3, #0
90017d64:	dd15      	ble.n	90017d92 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90017d66:	6968      	ldr	r0, [r5, #20]
90017d68:	b128      	cbz	r0, 90017d76 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
90017d6a:	6803      	ldr	r3, [r0, #0]
90017d6c:	4621      	mov	r1, r4
90017d6e:	691b      	ldr	r3, [r3, #16]
90017d70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017d74:	4718      	bx	r3
90017d76:	4b07      	ldr	r3, [pc, #28]	@ (90017d94 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
90017d78:	681b      	ldr	r3, [r3, #0]
90017d7a:	3304      	adds	r3, #4
90017d7c:	429d      	cmp	r5, r3
90017d7e:	d108      	bne.n	90017d92 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90017d80:	f7fe ff10 	bl	90016ba4 <_ZN8touchgfx11Application11getInstanceEv>
90017d84:	6803      	ldr	r3, [r0, #0]
90017d86:	6821      	ldr	r1, [r4, #0]
90017d88:	6862      	ldr	r2, [r4, #4]
90017d8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90017d8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017d90:	4718      	bx	r3
90017d92:	bd70      	pop	{r4, r5, r6, pc}
90017d94:	24023418 	.word	0x24023418

90017d98 <_ZN8touchgfx8Drawable12moveRelativeEss>:
90017d98:	b570      	push	{r4, r5, r6, lr}
90017d9a:	4604      	mov	r4, r0
90017d9c:	4616      	mov	r6, r2
90017d9e:	460d      	mov	r5, r1
90017da0:	b901      	cbnz	r1, 90017da4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90017da2:	b192      	cbz	r2, 90017dca <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90017da4:	6823      	ldr	r3, [r4, #0]
90017da6:	4620      	mov	r0, r4
90017da8:	699b      	ldr	r3, [r3, #24]
90017daa:	4798      	blx	r3
90017dac:	88e2      	ldrh	r2, [r4, #6]
90017dae:	88a1      	ldrh	r1, [r4, #4]
90017db0:	4620      	mov	r0, r4
90017db2:	4432      	add	r2, r6
90017db4:	4429      	add	r1, r5
90017db6:	b212      	sxth	r2, r2
90017db8:	b209      	sxth	r1, r1
90017dba:	f7f8 ff33 	bl	90010c24 <_ZN8touchgfx8Drawable5setXYEss>
90017dbe:	6823      	ldr	r3, [r4, #0]
90017dc0:	4620      	mov	r0, r4
90017dc2:	699b      	ldr	r3, [r3, #24]
90017dc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017dc8:	4718      	bx	r3
90017dca:	bd70      	pop	{r4, r5, r6, pc}

90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90017dcc:	b510      	push	{r4, lr}
90017dce:	2300      	movs	r3, #0
90017dd0:	4604      	mov	r4, r0
90017dd2:	4608      	mov	r0, r1
90017dd4:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
90017dd8:	8023      	strh	r3, [r4, #0]
90017dda:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90017dde:	8063      	strh	r3, [r4, #2]
90017de0:	6803      	ldr	r3, [r0, #0]
90017de2:	80a1      	strh	r1, [r4, #4]
90017de4:	4621      	mov	r1, r4
90017de6:	80e2      	strh	r2, [r4, #6]
90017de8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90017dea:	4798      	blx	r3
90017dec:	4620      	mov	r0, r4
90017dee:	bd10      	pop	{r4, pc}

90017df0 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
90017df0:	4770      	bx	lr

90017df2 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
90017df2:	b510      	push	{r4, lr}
90017df4:	4604      	mov	r4, r0
90017df6:	211c      	movs	r1, #28
90017df8:	f011 fb38 	bl	9002946c <_ZdlPvj>
90017dfc:	4620      	mov	r0, r4
90017dfe:	bd10      	pop	{r4, pc}

90017e00 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
90017e00:	4a04      	ldr	r2, [pc, #16]	@ (90017e14 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
90017e02:	6002      	str	r2, [r0, #0]
90017e04:	2200      	movs	r2, #0
90017e06:	e9c0 2201 	strd	r2, r2, [r0, #4]
90017e0a:	e9c0 2203 	strd	r2, r2, [r0, #12]
90017e0e:	e9c0 2205 	strd	r2, r2, [r0, #20]
90017e12:	4770      	bx	lr
90017e14:	9002dca0 	.word	0x9002dca0

90017e18 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
90017e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017e1c:	4604      	mov	r4, r0
90017e1e:	b087      	sub	sp, #28
90017e20:	4696      	mov	lr, r2
90017e22:	6880      	ldr	r0, [r0, #8]
90017e24:	8b22      	ldrh	r2, [r4, #24]
90017e26:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
90017e2a:	9105      	str	r1, [sp, #20]
90017e2c:	1c51      	adds	r1, r2, #1
90017e2e:	8321      	strh	r1, [r4, #24]
90017e30:	2101      	movs	r1, #1
90017e32:	5481      	strb	r1, [r0, r2]
90017e34:	4689      	mov	r9, r1
90017e36:	f9b3 2000 	ldrsh.w	r2, [r3]
90017e3a:	8b60      	ldrh	r0, [r4, #26]
90017e3c:	ee06 2a90 	vmov	s13, r2
90017e40:	68e2      	ldr	r2, [r4, #12]
90017e42:	1845      	adds	r5, r0, r1
90017e44:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90017e48:	eb02 0280 	add.w	r2, r2, r0, lsl #2
90017e4c:	8365      	strh	r5, [r4, #26]
90017e4e:	edc2 6a00 	vstr	s13, [r2]
90017e52:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90017e56:	8b60      	ldrh	r0, [r4, #26]
90017e58:	ee07 2a10 	vmov	s14, r2
90017e5c:	68e2      	ldr	r2, [r4, #12]
90017e5e:	1845      	adds	r5, r0, r1
90017e60:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017e64:	eb02 0280 	add.w	r2, r2, r0, lsl #2
90017e68:	8365      	strh	r5, [r4, #26]
90017e6a:	1d18      	adds	r0, r3, #4
90017e6c:	460d      	mov	r5, r1
90017e6e:	ed82 7a00 	vstr	s14, [r2]
90017e72:	f8be 2000 	ldrh.w	r2, [lr]
90017e76:	9203      	str	r2, [sp, #12]
90017e78:	2200      	movs	r2, #0
90017e7a:	4613      	mov	r3, r2
90017e7c:	4694      	mov	ip, r2
90017e7e:	9201      	str	r2, [sp, #4]
90017e80:	9202      	str	r2, [sp, #8]
90017e82:	f8b4 8018 	ldrh.w	r8, [r4, #24]
90017e86:	9e05      	ldr	r6, [sp, #20]
90017e88:	f108 0701 	add.w	r7, r8, #1
90017e8c:	f8d4 a008 	ldr.w	sl, [r4, #8]
90017e90:	428e      	cmp	r6, r1
90017e92:	b2bf      	uxth	r7, r7
90017e94:	eb0a 0b08 	add.w	fp, sl, r8
90017e98:	f340 80b6 	ble.w	90018008 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
90017e9c:	9b03      	ldr	r3, [sp, #12]
90017e9e:	f9b0 c000 	ldrsh.w	ip, [r0]
90017ea2:	fa43 fb05 	asr.w	fp, r3, r5
90017ea6:	f00b 0b01 	and.w	fp, fp, #1
90017eaa:	fa5f f38b 	uxtb.w	r3, fp
90017eae:	9304      	str	r3, [sp, #16]
90017eb0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90017eb4:	f1bb 0f00 	cmp.w	fp, #0
90017eb8:	d057      	beq.n	90017f6a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
90017eba:	ee07 ca90 	vmov	s15, ip
90017ebe:	8327      	strh	r7, [r4, #24]
90017ec0:	eef8 5ae7 	vcvt.f32.s32	s11, s15
90017ec4:	ee07 3a90 	vmov	s15, r3
90017ec8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017ecc:	f1b9 0f00 	cmp.w	r9, #0
90017ed0:	d028      	beq.n	90017f24 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
90017ed2:	f04f 0602 	mov.w	r6, #2
90017ed6:	f80a 6008 	strb.w	r6, [sl, r8]
90017eda:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017ede:	68e7      	ldr	r7, [r4, #12]
90017ee0:	f108 0901 	add.w	r9, r8, #1
90017ee4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90017ee8:	f8a4 901a 	strh.w	r9, [r4, #26]
90017eec:	edc7 5a00 	vstr	s11, [r7]
90017ef0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017ef4:	68e7      	ldr	r7, [r4, #12]
90017ef6:	f108 0901 	add.w	r9, r8, #1
90017efa:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90017efe:	f8a4 901a 	strh.w	r9, [r4, #26]
90017f02:	edc7 7a00 	vstr	s15, [r7]
90017f06:	3501      	adds	r5, #1
90017f08:	2d10      	cmp	r5, #16
90017f0a:	d106      	bne.n	90017f1a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
90017f0c:	9d02      	ldr	r5, [sp, #8]
90017f0e:	3501      	adds	r5, #1
90017f10:	9502      	str	r5, [sp, #8]
90017f12:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
90017f16:	9503      	str	r5, [sp, #12]
90017f18:	2500      	movs	r5, #0
90017f1a:	3101      	adds	r1, #1
90017f1c:	3004      	adds	r0, #4
90017f1e:	f8dd 9010 	ldr.w	r9, [sp, #16]
90017f22:	e7ae      	b.n	90017e82 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
90017f24:	f04f 0605 	mov.w	r6, #5
90017f28:	ed9d 5a01 	vldr	s10, [sp, #4]
90017f2c:	f80a 6008 	strb.w	r6, [sl, r8]
90017f30:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
90017f34:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017f38:	68e7      	ldr	r7, [r4, #12]
90017f3a:	f108 0901 	add.w	r9, r8, #1
90017f3e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90017f42:	f8a4 901a 	strh.w	r9, [r4, #26]
90017f46:	ed87 5a00 	vstr	s10, [r7]
90017f4a:	ee05 2a10 	vmov	s10, r2
90017f4e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017f52:	68e7      	ldr	r7, [r4, #12]
90017f54:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
90017f58:	f108 0901 	add.w	r9, r8, #1
90017f5c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90017f60:	f8a4 901a 	strh.w	r9, [r4, #26]
90017f64:	ed87 5a00 	vstr	s10, [r7]
90017f68:	e7b7      	b.n	90017eda <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
90017f6a:	f1b9 0f00 	cmp.w	r9, #0
90017f6e:	d147      	bne.n	90018000 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
90017f70:	f04f 0605 	mov.w	r6, #5
90017f74:	eddd 7a01 	vldr	s15, [sp, #4]
90017f78:	8327      	strh	r7, [r4, #24]
90017f7a:	f80a 6008 	strb.w	r6, [sl, r8]
90017f7e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017f82:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017f86:	68e7      	ldr	r7, [r4, #12]
90017f88:	f108 0901 	add.w	r9, r8, #1
90017f8c:	9e01      	ldr	r6, [sp, #4]
90017f8e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90017f92:	f8a4 901a 	strh.w	r9, [r4, #26]
90017f96:	4466      	add	r6, ip
90017f98:	edc7 7a00 	vstr	s15, [r7]
90017f9c:	ee07 2a90 	vmov	s15, r2
90017fa0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017fa4:	441a      	add	r2, r3
90017fa6:	68e7      	ldr	r7, [r4, #12]
90017fa8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017fac:	f108 0901 	add.w	r9, r8, #1
90017fb0:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90017fb4:	f8a4 901a 	strh.w	r9, [r4, #26]
90017fb8:	edc7 7a00 	vstr	s15, [r7]
90017fbc:	ee07 6a90 	vmov	s15, r6
90017fc0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017fc4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017fc8:	68e7      	ldr	r7, [r4, #12]
90017fca:	f108 0901 	add.w	r9, r8, #1
90017fce:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90017fd2:	ee67 7a86 	vmul.f32	s15, s15, s12
90017fd6:	f8a4 901a 	strh.w	r9, [r4, #26]
90017fda:	edc7 7a00 	vstr	s15, [r7]
90017fde:	ee07 2a90 	vmov	s15, r2
90017fe2:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017fe6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017fea:	68e7      	ldr	r7, [r4, #12]
90017fec:	f108 0901 	add.w	r9, r8, #1
90017ff0:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90017ff4:	ee67 7a86 	vmul.f32	s15, s15, s12
90017ff8:	f8a4 901a 	strh.w	r9, [r4, #26]
90017ffc:	edc7 7a00 	vstr	s15, [r7]
90018000:	461a      	mov	r2, r3
90018002:	f8cd c004 	str.w	ip, [sp, #4]
90018006:	e77e      	b.n	90017f06 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
90018008:	f1b9 0f00 	cmp.w	r9, #0
9001800c:	d028      	beq.n	90018060 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
9001800e:	ee07 ca90 	vmov	s15, ip
90018012:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018016:	eef4 6a67 	vcmp.f32	s13, s15
9001801a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001801e:	d108      	bne.n	90018032 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
90018020:	ee07 3a90 	vmov	s15, r3
90018024:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018028:	eeb4 7a67 	vcmp.f32	s14, s15
9001802c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018030:	d016      	beq.n	90018060 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
90018032:	2302      	movs	r3, #2
90018034:	8327      	strh	r7, [r4, #24]
90018036:	f88b 3000 	strb.w	r3, [fp]
9001803a:	8b62      	ldrh	r2, [r4, #26]
9001803c:	68e3      	ldr	r3, [r4, #12]
9001803e:	1c51      	adds	r1, r2, #1
90018040:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90018044:	8361      	strh	r1, [r4, #26]
90018046:	edc3 6a00 	vstr	s13, [r3]
9001804a:	8b62      	ldrh	r2, [r4, #26]
9001804c:	68e3      	ldr	r3, [r4, #12]
9001804e:	1c51      	adds	r1, r2, #1
90018050:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90018054:	8361      	strh	r1, [r4, #26]
90018056:	ed83 7a00 	vstr	s14, [r3]
9001805a:	b007      	add	sp, #28
9001805c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018060:	2305      	movs	r3, #5
90018062:	eddd 7a01 	vldr	s15, [sp, #4]
90018066:	8327      	strh	r7, [r4, #24]
90018068:	f88b 3000 	strb.w	r3, [fp]
9001806c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018070:	8b61      	ldrh	r1, [r4, #26]
90018072:	68e3      	ldr	r3, [r4, #12]
90018074:	1c4d      	adds	r5, r1, #1
90018076:	eb03 0381 	add.w	r3, r3, r1, lsl #2
9001807a:	8365      	strh	r5, [r4, #26]
9001807c:	edc3 7a00 	vstr	s15, [r3]
90018080:	ee07 2a90 	vmov	s15, r2
90018084:	8b61      	ldrh	r1, [r4, #26]
90018086:	68e3      	ldr	r3, [r4, #12]
90018088:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001808c:	1c4d      	adds	r5, r1, #1
9001808e:	eb03 0381 	add.w	r3, r3, r1, lsl #2
90018092:	8365      	strh	r5, [r4, #26]
90018094:	edc3 7a00 	vstr	s15, [r3]
90018098:	e7cf      	b.n	9001803a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

9001809c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
9001809c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900180a0:	4604      	mov	r4, r0
900180a2:	b08e      	sub	sp, #56	@ 0x38
900180a4:	4699      	mov	r9, r3
900180a6:	4688      	mov	r8, r1
900180a8:	4615      	mov	r5, r2
900180aa:	9e16      	ldr	r6, [sp, #88]	@ 0x58
900180ac:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
900180b0:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
900180b2:	f7eb fa2f 	bl	90003514 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
900180b6:	6060      	str	r0, [r4, #4]
900180b8:	f1b9 0f00 	cmp.w	r9, #0
900180bc:	f000 80e8 	beq.w	90018290 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
900180c0:	2800      	cmp	r0, #0
900180c2:	f000 80e5 	beq.w	90018290 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
900180c6:	a805      	add	r0, sp, #20
900180c8:	f000 f8f9 	bl	900182be <_ZN8touchgfx9Matrix3x3C1Ev>
900180cc:	6833      	ldr	r3, [r6, #0]
900180ce:	4630      	mov	r0, r6
900180d0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
900180d2:	4798      	blx	r3
900180d4:	a805      	add	r0, sp, #20
900180d6:	eef0 0a40 	vmov.f32	s1, s0
900180da:	f000 f8f4 	bl	900182c6 <_ZN8touchgfx9Matrix3x35scaleEff>
900180de:	6860      	ldr	r0, [r4, #4]
900180e0:	f1ba 0f03 	cmp.w	sl, #3
900180e4:	d83b      	bhi.n	9001815e <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
900180e6:	e8df f00a 	tbb	[pc, sl]
900180ea:	1002      	.short	0x1002
900180ec:	9f71      	.short	0x9f71
900180ee:	6803      	ldr	r3, [r0, #0]
900180f0:	462a      	mov	r2, r5
900180f2:	4641      	mov	r1, r8
900180f4:	689b      	ldr	r3, [r3, #8]
900180f6:	4798      	blx	r3
900180f8:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
900180fc:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90018100:	ee07 7a90 	vmov	s15, r7
90018104:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
90018108:	e026      	b.n	90018158 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
9001810a:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
9001810e:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90018112:	8869      	ldrh	r1, [r5, #2]
90018114:	1a9b      	subs	r3, r3, r2
90018116:	f8ad 2010 	strh.w	r2, [sp, #16]
9001811a:	aa03      	add	r2, sp, #12
9001811c:	1a5b      	subs	r3, r3, r1
9001811e:	4641      	mov	r1, r8
90018120:	f8ad 300c 	strh.w	r3, [sp, #12]
90018124:	882b      	ldrh	r3, [r5, #0]
90018126:	f8ad 300e 	strh.w	r3, [sp, #14]
9001812a:	88ab      	ldrh	r3, [r5, #4]
9001812c:	f8ad 3012 	strh.w	r3, [sp, #18]
90018130:	6803      	ldr	r3, [r0, #0]
90018132:	689b      	ldr	r3, [r3, #8]
90018134:	4798      	blx	r3
90018136:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 90018298 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
9001813a:	a805      	add	r0, sp, #20
9001813c:	f000 f8e8 	bl	90018310 <_ZN8touchgfx9Matrix3x36rotateEf>
90018140:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90018144:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90018146:	ee07 7a90 	vmov	s15, r7
9001814a:	1a9b      	subs	r3, r3, r2
9001814c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90018150:	ee00 3a10 	vmov	s0, r3
90018154:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90018158:	a805      	add	r0, sp, #20
9001815a:	f000 f927 	bl	900183ac <_ZN8touchgfx9Matrix3x39translateEff>
9001815e:	6860      	ldr	r0, [r4, #4]
90018160:	a905      	add	r1, sp, #20
90018162:	2500      	movs	r5, #0
90018164:	f109 0602 	add.w	r6, r9, #2
90018168:	6803      	ldr	r3, [r0, #0]
9001816a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001816c:	4798      	blx	r3
9001816e:	6860      	ldr	r0, [r4, #4]
90018170:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90018172:	6803      	ldr	r3, [r0, #0]
90018174:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
90018178:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001817a:	4798      	blx	r3
9001817c:	6860      	ldr	r0, [r4, #4]
9001817e:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
90018182:	6803      	ldr	r3, [r0, #0]
90018184:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90018186:	4798      	blx	r3
90018188:	6860      	ldr	r0, [r4, #4]
9001818a:	2101      	movs	r1, #1
9001818c:	6803      	ldr	r3, [r0, #0]
9001818e:	68db      	ldr	r3, [r3, #12]
90018190:	4798      	blx	r3
90018192:	f8b9 7000 	ldrh.w	r7, [r9]
90018196:	f104 0310 	add.w	r3, r4, #16
9001819a:	61a5      	str	r5, [r4, #24]
9001819c:	f104 0208 	add.w	r2, r4, #8
900181a0:	f104 0114 	add.w	r1, r4, #20
900181a4:	f104 000c 	add.w	r0, r4, #12
900181a8:	f7ed fb82 	bl	900058b0 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
900181ac:	42af      	cmp	r7, r5
900181ae:	dd60      	ble.n	90018272 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
900181b0:	8831      	ldrh	r1, [r6, #0]
900181b2:	1cb2      	adds	r2, r6, #2
900181b4:	4620      	mov	r0, r4
900181b6:	3501      	adds	r5, #1
900181b8:	f101 030f 	add.w	r3, r1, #15
900181bc:	f3c3 1307 	ubfx	r3, r3, #4, #8
900181c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900181c4:	f7ff fe28 	bl	90017e18 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
900181c8:	4606      	mov	r6, r0
900181ca:	e7ef      	b.n	900181ac <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
900181cc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
900181d0:	f8b8 3004 	ldrh.w	r3, [r8, #4]
900181d4:	8829      	ldrh	r1, [r5, #0]
900181d6:	1a9b      	subs	r3, r3, r2
900181d8:	f8ad 2010 	strh.w	r2, [sp, #16]
900181dc:	aa03      	add	r2, sp, #12
900181de:	1a5b      	subs	r3, r3, r1
900181e0:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900181e4:	886d      	ldrh	r5, [r5, #2]
900181e6:	f8ad 300c 	strh.w	r3, [sp, #12]
900181ea:	f8b8 3006 	ldrh.w	r3, [r8, #6]
900181ee:	f8ad 1012 	strh.w	r1, [sp, #18]
900181f2:	1a5b      	subs	r3, r3, r1
900181f4:	4641      	mov	r1, r8
900181f6:	1b5b      	subs	r3, r3, r5
900181f8:	f8ad 300e 	strh.w	r3, [sp, #14]
900181fc:	6803      	ldr	r3, [r0, #0]
900181fe:	689b      	ldr	r3, [r3, #8]
90018200:	4798      	blx	r3
90018202:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 9001829c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
90018206:	a805      	add	r0, sp, #20
90018208:	f000 f882 	bl	90018310 <_ZN8touchgfx9Matrix3x36rotateEf>
9001820c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90018210:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90018212:	1a9b      	subs	r3, r3, r2
90018214:	ee00 3a90 	vmov	s1, r3
90018218:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
9001821c:	1bdb      	subs	r3, r3, r7
9001821e:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90018222:	ee00 3a10 	vmov	s0, r3
90018226:	e795      	b.n	90018154 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
90018228:	886b      	ldrh	r3, [r5, #2]
9001822a:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
9001822e:	f8ad 300c 	strh.w	r3, [sp, #12]
90018232:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90018236:	8829      	ldrh	r1, [r5, #0]
90018238:	1a9b      	subs	r3, r3, r2
9001823a:	f8ad 2012 	strh.w	r2, [sp, #18]
9001823e:	aa03      	add	r2, sp, #12
90018240:	1a5b      	subs	r3, r3, r1
90018242:	4641      	mov	r1, r8
90018244:	f8ad 300e 	strh.w	r3, [sp, #14]
90018248:	88eb      	ldrh	r3, [r5, #6]
9001824a:	f8ad 3010 	strh.w	r3, [sp, #16]
9001824e:	6803      	ldr	r3, [r0, #0]
90018250:	689b      	ldr	r3, [r3, #8]
90018252:	4798      	blx	r3
90018254:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 900182a0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
90018258:	a805      	add	r0, sp, #20
9001825a:	f000 f859 	bl	90018310 <_ZN8touchgfx9Matrix3x36rotateEf>
9001825e:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90018262:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90018266:	1bdb      	subs	r3, r3, r7
90018268:	ee00 3a90 	vmov	s1, r3
9001826c:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90018270:	e748      	b.n	90018104 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
90018272:	6860      	ldr	r0, [r4, #4]
90018274:	2100      	movs	r1, #0
90018276:	8b22      	ldrh	r2, [r4, #24]
90018278:	6803      	ldr	r3, [r0, #0]
9001827a:	9101      	str	r1, [sp, #4]
9001827c:	8b61      	ldrh	r1, [r4, #26]
9001827e:	9100      	str	r1, [sp, #0]
90018280:	6a1d      	ldr	r5, [r3, #32]
90018282:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
90018286:	47a8      	blx	r5
90018288:	6860      	ldr	r0, [r4, #4]
9001828a:	6803      	ldr	r3, [r0, #0]
9001828c:	69db      	ldr	r3, [r3, #28]
9001828e:	4798      	blx	r3
90018290:	b00e      	add	sp, #56	@ 0x38
90018292:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90018296:	bf00      	nop
90018298:	42b40000 	.word	0x42b40000
9001829c:	43340000 	.word	0x43340000
900182a0:	43870000 	.word	0x43870000

900182a4 <_ZN8touchgfx9Matrix3x35resetEv>:
900182a4:	2300      	movs	r3, #0
900182a6:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
900182aa:	6043      	str	r3, [r0, #4]
900182ac:	6002      	str	r2, [r0, #0]
900182ae:	6083      	str	r3, [r0, #8]
900182b0:	60c3      	str	r3, [r0, #12]
900182b2:	6102      	str	r2, [r0, #16]
900182b4:	6143      	str	r3, [r0, #20]
900182b6:	6183      	str	r3, [r0, #24]
900182b8:	61c3      	str	r3, [r0, #28]
900182ba:	6202      	str	r2, [r0, #32]
900182bc:	4770      	bx	lr

900182be <_ZN8touchgfx9Matrix3x3C1Ev>:
900182be:	b508      	push	{r3, lr}
900182c0:	f7ff fff0 	bl	900182a4 <_ZN8touchgfx9Matrix3x35resetEv>
900182c4:	bd08      	pop	{r3, pc}

900182c6 <_ZN8touchgfx9Matrix3x35scaleEff>:
900182c6:	edd0 7a00 	vldr	s15, [r0]
900182ca:	ee67 7a80 	vmul.f32	s15, s15, s0
900182ce:	edc0 7a00 	vstr	s15, [r0]
900182d2:	edd0 7a01 	vldr	s15, [r0, #4]
900182d6:	ee67 7a80 	vmul.f32	s15, s15, s0
900182da:	edc0 7a01 	vstr	s15, [r0, #4]
900182de:	edd0 7a02 	vldr	s15, [r0, #8]
900182e2:	ee27 0a80 	vmul.f32	s0, s15, s0
900182e6:	edd0 7a03 	vldr	s15, [r0, #12]
900182ea:	ee67 7aa0 	vmul.f32	s15, s15, s1
900182ee:	ed80 0a02 	vstr	s0, [r0, #8]
900182f2:	edc0 7a03 	vstr	s15, [r0, #12]
900182f6:	edd0 7a04 	vldr	s15, [r0, #16]
900182fa:	ee67 7aa0 	vmul.f32	s15, s15, s1
900182fe:	edc0 7a04 	vstr	s15, [r0, #16]
90018302:	edd0 7a05 	vldr	s15, [r0, #20]
90018306:	ee67 0aa0 	vmul.f32	s1, s15, s1
9001830a:	edc0 0a05 	vstr	s1, [r0, #20]
9001830e:	4770      	bx	lr

90018310 <_ZN8touchgfx9Matrix3x36rotateEf>:
90018310:	eddf 7a24 	vldr	s15, [pc, #144]	@ 900183a4 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
90018314:	ee20 0a27 	vmul.f32	s0, s0, s15
90018318:	eddf 7a23 	vldr	s15, [pc, #140]	@ 900183a8 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
9001831c:	b510      	push	{r4, lr}
9001831e:	ed2d 8b02 	vpush	{d8}
90018322:	eec0 8a27 	vdiv.f32	s17, s0, s15
90018326:	4604      	mov	r4, r0
90018328:	eeb0 0a68 	vmov.f32	s0, s17
9001832c:	f011 f9d4 	bl	900296d8 <cosf>
90018330:	eeb0 8a40 	vmov.f32	s16, s0
90018334:	eeb0 0a68 	vmov.f32	s0, s17
90018338:	f011 f90a 	bl	90029550 <sinf>
9001833c:	edd4 6a03 	vldr	s13, [r4, #12]
90018340:	edd4 4a00 	vldr	s9, [r4]
90018344:	ee60 7a66 	vnmul.f32	s15, s0, s13
90018348:	ed94 7a04 	vldr	s14, [r4, #16]
9001834c:	ed94 5a01 	vldr	s10, [r4, #4]
90018350:	ee66 6a88 	vmul.f32	s13, s13, s16
90018354:	edd4 5a02 	vldr	s11, [r4, #8]
90018358:	eee8 7a24 	vfma.f32	s15, s16, s9
9001835c:	eee0 6a24 	vfma.f32	s13, s0, s9
90018360:	edc4 7a00 	vstr	s15, [r4]
90018364:	ee60 7a47 	vnmul.f32	s15, s0, s14
90018368:	ee27 7a08 	vmul.f32	s14, s14, s16
9001836c:	edc4 6a03 	vstr	s13, [r4, #12]
90018370:	eee8 7a05 	vfma.f32	s15, s16, s10
90018374:	eea0 7a05 	vfma.f32	s14, s0, s10
90018378:	edc4 7a01 	vstr	s15, [r4, #4]
9001837c:	edd4 7a05 	vldr	s15, [r4, #20]
90018380:	ed84 7a04 	vstr	s14, [r4, #16]
90018384:	ee20 6a67 	vnmul.f32	s12, s0, s15
90018388:	ee67 7a88 	vmul.f32	s15, s15, s16
9001838c:	eea8 6a25 	vfma.f32	s12, s16, s11
90018390:	eee0 7a25 	vfma.f32	s15, s0, s11
90018394:	ecbd 8b02 	vpop	{d8}
90018398:	ed84 6a02 	vstr	s12, [r4, #8]
9001839c:	edc4 7a05 	vstr	s15, [r4, #20]
900183a0:	bd10      	pop	{r4, pc}
900183a2:	bf00      	nop
900183a4:	40490fdb 	.word	0x40490fdb
900183a8:	43340000 	.word	0x43340000

900183ac <_ZN8touchgfx9Matrix3x39translateEff>:
900183ac:	ed90 6a06 	vldr	s12, [r0, #24]
900183b0:	edd0 7a00 	vldr	s15, [r0]
900183b4:	edd0 6a07 	vldr	s13, [r0, #28]
900183b8:	eee6 7a00 	vfma.f32	s15, s12, s0
900183bc:	ed90 7a08 	vldr	s14, [r0, #32]
900183c0:	edc0 7a00 	vstr	s15, [r0]
900183c4:	edd0 7a01 	vldr	s15, [r0, #4]
900183c8:	eee6 7a80 	vfma.f32	s15, s13, s0
900183cc:	edc0 7a01 	vstr	s15, [r0, #4]
900183d0:	edd0 7a02 	vldr	s15, [r0, #8]
900183d4:	eee7 7a00 	vfma.f32	s15, s14, s0
900183d8:	edc0 7a02 	vstr	s15, [r0, #8]
900183dc:	edd0 7a03 	vldr	s15, [r0, #12]
900183e0:	eee6 7a20 	vfma.f32	s15, s12, s1
900183e4:	edc0 7a03 	vstr	s15, [r0, #12]
900183e8:	edd0 7a04 	vldr	s15, [r0, #16]
900183ec:	eee6 7aa0 	vfma.f32	s15, s13, s1
900183f0:	edc0 7a04 	vstr	s15, [r0, #16]
900183f4:	edd0 7a05 	vldr	s15, [r0, #20]
900183f8:	eee7 7a20 	vfma.f32	s15, s14, s1
900183fc:	edc0 7a05 	vstr	s15, [r0, #20]
90018400:	4770      	bx	lr

90018402 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
90018402:	edd0 6a01 	vldr	s13, [r0, #4]
90018406:	b084      	sub	sp, #16
90018408:	edd0 7a04 	vldr	s15, [r0, #16]
9001840c:	ed90 7a03 	vldr	s14, [r0, #12]
90018410:	ee60 7aa7 	vmul.f32	s15, s1, s15
90018414:	ee60 0aa6 	vmul.f32	s1, s1, s13
90018418:	edd0 6a00 	vldr	s13, [r0]
9001841c:	eee7 7a00 	vfma.f32	s15, s14, s0
90018420:	ed90 7a05 	vldr	s14, [r0, #20]
90018424:	eee6 0a80 	vfma.f32	s1, s13, s0
90018428:	ed90 0a02 	vldr	s0, [r0, #8]
9001842c:	ee30 0a80 	vadd.f32	s0, s1, s0
90018430:	ee77 0a87 	vadd.f32	s1, s15, s14
90018434:	b004      	add	sp, #16
90018436:	4770      	bx	lr

90018438 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90018438:	b530      	push	{r4, r5, lr}
9001843a:	8083      	strh	r3, [r0, #4]
9001843c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90018440:	f89d 5018 	ldrb.w	r5, [sp, #24]
90018444:	80c3      	strh	r3, [r0, #6]
90018446:	f89d 3010 	ldrb.w	r3, [sp, #16]
9001844a:	6141      	str	r1, [r0, #20]
9001844c:	7203      	strb	r3, [r0, #8]
9001844e:	f89d 3014 	ldrb.w	r3, [sp, #20]
90018452:	8302      	strh	r2, [r0, #24]
90018454:	7243      	strb	r3, [r0, #9]
90018456:	7a83      	ldrb	r3, [r0, #10]
90018458:	f365 0306 	bfi	r3, r5, #0, #7
9001845c:	f89d 501c 	ldrb.w	r5, [sp, #28]
90018460:	f365 13c7 	bfi	r3, r5, #7, #1
90018464:	7283      	strb	r3, [r0, #10]
90018466:	f89d 3020 	ldrb.w	r3, [sp, #32]
9001846a:	72c3      	strb	r3, [r0, #11]
9001846c:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
90018470:	7303      	strb	r3, [r0, #12]
90018472:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90018476:	81c3      	strh	r3, [r0, #14]
90018478:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
9001847c:	8203      	strh	r3, [r0, #16]
9001847e:	4b01      	ldr	r3, [pc, #4]	@ (90018484 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90018480:	6003      	str	r3, [r0, #0]
90018482:	bd30      	pop	{r4, r5, pc}
90018484:	9002dcb4 	.word	0x9002dcb4

90018488 <_ZNK8touchgfx9ConstFont4findEt>:
90018488:	b5f0      	push	{r4, r5, r6, r7, lr}
9001848a:	6944      	ldr	r4, [r0, #20]
9001848c:	b3bc      	cbz	r4, 900184fe <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001848e:	88a3      	ldrh	r3, [r4, #4]
90018490:	8b02      	ldrh	r2, [r0, #24]
90018492:	1acb      	subs	r3, r1, r3
90018494:	f102 32ff 	add.w	r2, r2, #4294967295
90018498:	d431      	bmi.n	900184fe <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001849a:	4293      	cmp	r3, r2
9001849c:	dd0c      	ble.n	900184b8 <_ZNK8touchgfx9ConstFont4findEt+0x30>
9001849e:	230e      	movs	r3, #14
900184a0:	fb03 4302 	mla	r3, r3, r2, r4
900184a4:	889b      	ldrh	r3, [r3, #4]
900184a6:	1a5b      	subs	r3, r3, r1
900184a8:	1ad3      	subs	r3, r2, r3
900184aa:	429a      	cmp	r2, r3
900184ac:	db27      	blt.n	900184fe <_ZNK8touchgfx9ConstFont4findEt+0x76>
900184ae:	2b00      	cmp	r3, #0
900184b0:	bfbc      	itt	lt
900184b2:	2302      	movlt	r3, #2
900184b4:	fb92 f3f3 	sdivlt	r3, r2, r3
900184b8:	2500      	movs	r5, #0
900184ba:	260e      	movs	r6, #14
900184bc:	4295      	cmp	r5, r2
900184be:	dc1e      	bgt.n	900184fe <_ZNK8touchgfx9ConstFont4findEt+0x76>
900184c0:	fb06 4003 	mla	r0, r6, r3, r4
900184c4:	8887      	ldrh	r7, [r0, #4]
900184c6:	42b9      	cmp	r1, r7
900184c8:	d01a      	beq.n	90018500 <_ZNK8touchgfx9ConstFont4findEt+0x78>
900184ca:	d20d      	bcs.n	900184e8 <_ZNK8touchgfx9ConstFont4findEt+0x60>
900184cc:	1e5a      	subs	r2, r3, #1
900184ce:	4295      	cmp	r5, r2
900184d0:	dc15      	bgt.n	900184fe <_ZNK8touchgfx9ConstFont4findEt+0x76>
900184d2:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
900184d6:	1a5b      	subs	r3, r3, r1
900184d8:	1ad3      	subs	r3, r2, r3
900184da:	429a      	cmp	r2, r3
900184dc:	db0f      	blt.n	900184fe <_ZNK8touchgfx9ConstFont4findEt+0x76>
900184de:	429d      	cmp	r5, r3
900184e0:	ddec      	ble.n	900184bc <_ZNK8touchgfx9ConstFont4findEt+0x34>
900184e2:	1953      	adds	r3, r2, r5
900184e4:	105b      	asrs	r3, r3, #1
900184e6:	e7e9      	b.n	900184bc <_ZNK8touchgfx9ConstFont4findEt+0x34>
900184e8:	1c5d      	adds	r5, r3, #1
900184ea:	42aa      	cmp	r2, r5
900184ec:	db07      	blt.n	900184fe <_ZNK8touchgfx9ConstFont4findEt+0x76>
900184ee:	8a43      	ldrh	r3, [r0, #18]
900184f0:	1acb      	subs	r3, r1, r3
900184f2:	442b      	add	r3, r5
900184f4:	429d      	cmp	r5, r3
900184f6:	dc02      	bgt.n	900184fe <_ZNK8touchgfx9ConstFont4findEt+0x76>
900184f8:	429a      	cmp	r2, r3
900184fa:	dadf      	bge.n	900184bc <_ZNK8touchgfx9ConstFont4findEt+0x34>
900184fc:	e7f1      	b.n	900184e2 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
900184fe:	2000      	movs	r0, #0
90018500:	bdf0      	pop	{r4, r5, r6, r7, pc}

90018502 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90018502:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018504:	4604      	mov	r4, r0
90018506:	4617      	mov	r7, r2
90018508:	461e      	mov	r6, r3
9001850a:	b911      	cbnz	r1, 90018512 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
9001850c:	2500      	movs	r5, #0
9001850e:	4628      	mov	r0, r5
90018510:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90018512:	290a      	cmp	r1, #10
90018514:	d0fa      	beq.n	9001850c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018516:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
9001851a:	4291      	cmp	r1, r2
9001851c:	d0f6      	beq.n	9001850c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001851e:	f242 020b 	movw	r2, #8203	@ 0x200b
90018522:	4291      	cmp	r1, r2
90018524:	d0f2      	beq.n	9001850c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018526:	f7ff ffaf 	bl	90018488 <_ZNK8touchgfx9ConstFont4findEt>
9001852a:	4605      	mov	r5, r0
9001852c:	b950      	cbnz	r0, 90018544 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
9001852e:	6823      	ldr	r3, [r4, #0]
90018530:	4620      	mov	r0, r4
90018532:	691b      	ldr	r3, [r3, #16]
90018534:	4798      	blx	r3
90018536:	4601      	mov	r1, r0
90018538:	4620      	mov	r0, r4
9001853a:	f7ff ffa5 	bl	90018488 <_ZNK8touchgfx9ConstFont4findEt>
9001853e:	4605      	mov	r5, r0
90018540:	2800      	cmp	r0, #0
90018542:	d0e3      	beq.n	9001850c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90018544:	6823      	ldr	r3, [r4, #0]
90018546:	4629      	mov	r1, r5
90018548:	4620      	mov	r0, r4
9001854a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001854c:	4798      	blx	r3
9001854e:	6038      	str	r0, [r7, #0]
90018550:	6823      	ldr	r3, [r4, #0]
90018552:	4620      	mov	r0, r4
90018554:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90018556:	4798      	blx	r3
90018558:	7030      	strb	r0, [r6, #0]
9001855a:	e7d8      	b.n	9001850e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

9001855c <_ZN8touchgfx4clzuEm>:
9001855c:	4603      	mov	r3, r0
9001855e:	b1c8      	cbz	r0, 90018594 <_ZN8touchgfx4clzuEm+0x38>
90018560:	0c02      	lsrs	r2, r0, #16
90018562:	0412      	lsls	r2, r2, #16
90018564:	b9a2      	cbnz	r2, 90018590 <_ZN8touchgfx4clzuEm+0x34>
90018566:	0403      	lsls	r3, r0, #16
90018568:	2010      	movs	r0, #16
9001856a:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
9001856e:	bf04      	itt	eq
90018570:	021b      	lsleq	r3, r3, #8
90018572:	3008      	addeq	r0, #8
90018574:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90018578:	bf04      	itt	eq
9001857a:	011b      	lsleq	r3, r3, #4
9001857c:	3004      	addeq	r0, #4
9001857e:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90018582:	bf04      	itt	eq
90018584:	009b      	lsleq	r3, r3, #2
90018586:	3002      	addeq	r0, #2
90018588:	2b00      	cmp	r3, #0
9001858a:	db04      	blt.n	90018596 <_ZN8touchgfx4clzuEm+0x3a>
9001858c:	3001      	adds	r0, #1
9001858e:	4770      	bx	lr
90018590:	2000      	movs	r0, #0
90018592:	e7ea      	b.n	9001856a <_ZN8touchgfx4clzuEm+0xe>
90018594:	2020      	movs	r0, #32
90018596:	4770      	bx	lr

90018598 <_ZN8touchgfx7muldivuEmmmRm>:
90018598:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
9001859c:	460f      	mov	r7, r1
9001859e:	4615      	mov	r5, r2
900185a0:	461e      	mov	r6, r3
900185a2:	4601      	mov	r1, r0
900185a4:	b100      	cbz	r0, 900185a8 <_ZN8touchgfx7muldivuEmmmRm+0x10>
900185a6:	b927      	cbnz	r7, 900185b2 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
900185a8:	2000      	movs	r0, #0
900185aa:	6030      	str	r0, [r6, #0]
900185ac:	b002      	add	sp, #8
900185ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900185b2:	f7ff ffd3 	bl	9001855c <_ZN8touchgfx4clzuEm>
900185b6:	b980      	cbnz	r0, 900185da <_ZN8touchgfx7muldivuEmmmRm+0x42>
900185b8:	4638      	mov	r0, r7
900185ba:	f7ff ffcf 	bl	9001855c <_ZN8touchgfx4clzuEm>
900185be:	2800      	cmp	r0, #0
900185c0:	dd05      	ble.n	900185ce <_ZN8touchgfx7muldivuEmmmRm+0x36>
900185c2:	4633      	mov	r3, r6
900185c4:	462a      	mov	r2, r5
900185c6:	4638      	mov	r0, r7
900185c8:	f7ff ffe6 	bl	90018598 <_ZN8touchgfx7muldivuEmmmRm>
900185cc:	e7ee      	b.n	900185ac <_ZN8touchgfx7muldivuEmmmRm+0x14>
900185ce:	f04f 33ff 	mov.w	r3, #4294967295
900185d2:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
900185d6:	6033      	str	r3, [r6, #0]
900185d8:	e7e8      	b.n	900185ac <_ZN8touchgfx7muldivuEmmmRm+0x14>
900185da:	fa37 f800 	lsrs.w	r8, r7, r0
900185de:	fb07 f301 	mul.w	r3, r7, r1
900185e2:	d105      	bne.n	900185f0 <_ZN8touchgfx7muldivuEmmmRm+0x58>
900185e4:	fbb3 f0f5 	udiv	r0, r3, r5
900185e8:	fb05 3510 	mls	r5, r5, r0, r3
900185ec:	6035      	str	r5, [r6, #0]
900185ee:	e7dd      	b.n	900185ac <_ZN8touchgfx7muldivuEmmmRm+0x14>
900185f0:	2301      	movs	r3, #1
900185f2:	fa01 fa00 	lsl.w	sl, r1, r0
900185f6:	462a      	mov	r2, r5
900185f8:	fa03 f000 	lsl.w	r0, r3, r0
900185fc:	4633      	mov	r3, r6
900185fe:	fbba f9f5 	udiv	r9, sl, r5
90018602:	3801      	subs	r0, #1
90018604:	fb08 f409 	mul.w	r4, r8, r9
90018608:	4038      	ands	r0, r7
9001860a:	f7ff ffc5 	bl	90018598 <_ZN8touchgfx7muldivuEmmmRm>
9001860e:	462a      	mov	r2, r5
90018610:	4607      	mov	r7, r0
90018612:	ab01      	add	r3, sp, #4
90018614:	fb05 a119 	mls	r1, r5, r9, sl
90018618:	4640      	mov	r0, r8
9001861a:	f7ff ffbd 	bl	90018598 <_ZN8touchgfx7muldivuEmmmRm>
9001861e:	9b01      	ldr	r3, [sp, #4]
90018620:	6832      	ldr	r2, [r6, #0]
90018622:	441a      	add	r2, r3
90018624:	fbb2 f3f5 	udiv	r3, r2, r5
90018628:	441c      	add	r4, r3
9001862a:	fb05 2513 	mls	r5, r5, r3, r2
9001862e:	443c      	add	r4, r7
90018630:	4420      	add	r0, r4
90018632:	e7db      	b.n	900185ec <_ZN8touchgfx7muldivuEmmmRm+0x54>

90018634 <_ZN8touchgfx6muldivElllRl>:
90018634:	b573      	push	{r0, r1, r4, r5, r6, lr}
90018636:	2800      	cmp	r0, #0
90018638:	461e      	mov	r6, r3
9001863a:	bfba      	itte	lt
9001863c:	4240      	neglt	r0, r0
9001863e:	f04f 34ff 	movlt.w	r4, #4294967295
90018642:	2401      	movge	r4, #1
90018644:	2900      	cmp	r1, #0
90018646:	bfbc      	itt	lt
90018648:	4249      	neglt	r1, r1
9001864a:	4264      	neglt	r4, r4
9001864c:	2a00      	cmp	r2, #0
9001864e:	bfb6      	itet	lt
90018650:	4265      	neglt	r5, r4
90018652:	4625      	movge	r5, r4
90018654:	4252      	neglt	r2, r2
90018656:	4288      	cmp	r0, r1
90018658:	bfc2      	ittt	gt
9001865a:	4603      	movgt	r3, r0
9001865c:	4608      	movgt	r0, r1
9001865e:	4619      	movgt	r1, r3
90018660:	ab01      	add	r3, sp, #4
90018662:	f7ff ff99 	bl	90018598 <_ZN8touchgfx7muldivuEmmmRm>
90018666:	9b01      	ldr	r3, [sp, #4]
90018668:	4368      	muls	r0, r5
9001866a:	435c      	muls	r4, r3
9001866c:	6034      	str	r4, [r6, #0]
9001866e:	b002      	add	sp, #8
90018670:	bd70      	pop	{r4, r5, r6, pc}

90018672 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90018672:	2000      	movs	r0, #0
90018674:	4770      	bx	lr

90018676 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90018676:	2001      	movs	r0, #1
90018678:	4770      	bx	lr

9001867a <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001867a:	2002      	movs	r0, #2
9001867c:	4770      	bx	lr

9001867e <_ZN8touchgfx6ScreenD1Ev>:
9001867e:	4770      	bx	lr

90018680 <_ZN8touchgfx6Screen11setupScreenEv>:
90018680:	4770      	bx	lr

90018682 <_ZN8touchgfx12GestureEventD1Ev>:
90018682:	4770      	bx	lr

90018684 <_ZN8touchgfx9DragEventD1Ev>:
90018684:	4770      	bx	lr

90018686 <_ZN8touchgfx10ClickEventD1Ev>:
90018686:	4770      	bx	lr

90018688 <_ZN8touchgfx10ClickEventD0Ev>:
90018688:	b510      	push	{r4, lr}
9001868a:	4604      	mov	r4, r0
9001868c:	210c      	movs	r1, #12
9001868e:	f010 feed 	bl	9002946c <_ZdlPvj>
90018692:	4620      	mov	r0, r4
90018694:	bd10      	pop	{r4, pc}

90018696 <_ZN8touchgfx9DragEventD0Ev>:
90018696:	b510      	push	{r4, lr}
90018698:	4604      	mov	r4, r0
9001869a:	2110      	movs	r1, #16
9001869c:	f010 fee6 	bl	9002946c <_ZdlPvj>
900186a0:	4620      	mov	r0, r4
900186a2:	bd10      	pop	{r4, pc}

900186a4 <_ZN8touchgfx12GestureEventD0Ev>:
900186a4:	b510      	push	{r4, lr}
900186a6:	4604      	mov	r4, r0
900186a8:	210c      	movs	r1, #12
900186aa:	f010 fedf 	bl	9002946c <_ZdlPvj>
900186ae:	4620      	mov	r0, r4
900186b0:	bd10      	pop	{r4, pc}

900186b2 <_ZN8touchgfx6ScreenD0Ev>:
900186b2:	b510      	push	{r4, lr}
900186b4:	4604      	mov	r4, r0
900186b6:	213c      	movs	r1, #60	@ 0x3c
900186b8:	f010 fed8 	bl	9002946c <_ZdlPvj>
900186bc:	4620      	mov	r0, r4
900186be:	bd10      	pop	{r4, pc}

900186c0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
900186c0:	b530      	push	{r4, r5, lr}
900186c2:	460d      	mov	r5, r1
900186c4:	6b01      	ldr	r1, [r0, #48]	@ 0x30
900186c6:	b087      	sub	sp, #28
900186c8:	4604      	mov	r4, r0
900186ca:	b301      	cbz	r1, 9001870e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
900186cc:	a801      	add	r0, sp, #4
900186ce:	f7ff fb7d 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900186d2:	892a      	ldrh	r2, [r5, #8]
900186d4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900186d8:	7928      	ldrb	r0, [r5, #4]
900186da:	1ad2      	subs	r2, r2, r3
900186dc:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
900186de:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900186e2:	441a      	add	r2, r3
900186e4:	896b      	ldrh	r3, [r5, #10]
900186e6:	f8bd 5006 	ldrh.w	r5, [sp, #6]
900186ea:	f88d 0010 	strb.w	r0, [sp, #16]
900186ee:	1b5b      	subs	r3, r3, r5
900186f0:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
900186f2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900186f4:	442b      	add	r3, r5
900186f6:	4d07      	ldr	r5, [pc, #28]	@ (90018714 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
900186f8:	f8ad 1012 	strh.w	r1, [sp, #18]
900186fc:	a903      	add	r1, sp, #12
900186fe:	9503      	str	r5, [sp, #12]
90018700:	f8ad 2014 	strh.w	r2, [sp, #20]
90018704:	f8ad 3016 	strh.w	r3, [sp, #22]
90018708:	6803      	ldr	r3, [r0, #0]
9001870a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001870c:	4798      	blx	r3
9001870e:	b007      	add	sp, #28
90018710:	bd30      	pop	{r4, r5, pc}
90018712:	bf00      	nop
90018714:	9002dd44 	.word	0x9002dd44

90018718 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90018718:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001871c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001871e:	b08a      	sub	sp, #40	@ 0x28
90018720:	4604      	mov	r4, r0
90018722:	460d      	mov	r5, r1
90018724:	b113      	cbz	r3, 9001872c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90018726:	790b      	ldrb	r3, [r1, #4]
90018728:	2b00      	cmp	r3, #0
9001872a:	d044      	beq.n	900187b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001872c:	f104 0804 	add.w	r8, r4, #4
90018730:	a803      	add	r0, sp, #12
90018732:	4641      	mov	r1, r8
90018734:	f7ff fb4a 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018738:	792b      	ldrb	r3, [r5, #4]
9001873a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001873e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90018742:	b983      	cbnz	r3, 90018766 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90018744:	f104 0336 	add.w	r3, r4, #54	@ 0x36
90018748:	892a      	ldrh	r2, [r5, #8]
9001874a:	88e9      	ldrh	r1, [r5, #6]
9001874c:	4640      	mov	r0, r8
9001874e:	1b92      	subs	r2, r2, r6
90018750:	9301      	str	r3, [sp, #4]
90018752:	1bc9      	subs	r1, r1, r7
90018754:	f104 0334 	add.w	r3, r4, #52	@ 0x34
90018758:	b212      	sxth	r2, r2
9001875a:	9300      	str	r3, [sp, #0]
9001875c:	b209      	sxth	r1, r1
9001875e:	f104 0330 	add.w	r3, r4, #48	@ 0x30
90018762:	f7f7 fea7 	bl	900104b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90018766:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90018768:	b329      	cbz	r1, 900187b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001876a:	a805      	add	r0, sp, #20
9001876c:	f7ff fb2e 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018770:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90018774:	792b      	ldrb	r3, [r5, #4]
90018776:	a907      	add	r1, sp, #28
90018778:	1abf      	subs	r7, r7, r2
9001877a:	88ea      	ldrh	r2, [r5, #6]
9001877c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9001877e:	4417      	add	r7, r2
90018780:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
90018782:	f88d 3020 	strb.w	r3, [sp, #32]
90018786:	4417      	add	r7, r2
90018788:	f8bd 2016 	ldrh.w	r2, [sp, #22]
9001878c:	1ab6      	subs	r6, r6, r2
9001878e:	892a      	ldrh	r2, [r5, #8]
90018790:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
90018794:	4416      	add	r6, r2
90018796:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90018798:	4416      	add	r6, r2
9001879a:	4a08      	ldr	r2, [pc, #32]	@ (900187bc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
9001879c:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
900187a0:	2600      	movs	r6, #0
900187a2:	9207      	str	r2, [sp, #28]
900187a4:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
900187a8:	6803      	ldr	r3, [r0, #0]
900187aa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900187ac:	4798      	blx	r3
900187ae:	792b      	ldrb	r3, [r5, #4]
900187b0:	b10b      	cbz	r3, 900187b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
900187b2:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
900187b6:	b00a      	add	sp, #40	@ 0x28
900187b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900187bc:	9002dd1c 	.word	0x9002dd1c

900187c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
900187c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900187c4:	460c      	mov	r4, r1
900187c6:	6b01      	ldr	r1, [r0, #48]	@ 0x30
900187c8:	b088      	sub	sp, #32
900187ca:	4605      	mov	r5, r0
900187cc:	2900      	cmp	r1, #0
900187ce:	d06d      	beq.n	900188ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
900187d0:	4668      	mov	r0, sp
900187d2:	f7ff fafb 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900187d6:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
900187d8:	88e3      	ldrh	r3, [r4, #6]
900187da:	f9bd 8000 	ldrsh.w	r8, [sp]
900187de:	440b      	add	r3, r1
900187e0:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
900187e4:	b21b      	sxth	r3, r3
900187e6:	4543      	cmp	r3, r8
900187e8:	db31      	blt.n	9001884e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900187ea:	f8bd c004 	ldrh.w	ip, [sp, #4]
900187ee:	44c4      	add	ip, r8
900187f0:	fa0f fc8c 	sxth.w	ip, ip
900187f4:	4563      	cmp	r3, ip
900187f6:	da2a      	bge.n	9001884e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900187f8:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
900187fa:	8926      	ldrh	r6, [r4, #8]
900187fc:	4416      	add	r6, r2
900187fe:	b236      	sxth	r6, r6
90018800:	42be      	cmp	r6, r7
90018802:	db24      	blt.n	9001884e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018804:	f8bd 0006 	ldrh.w	r0, [sp, #6]
90018808:	4438      	add	r0, r7
9001880a:	b200      	sxth	r0, r0
9001880c:	4286      	cmp	r6, r0
9001880e:	da1e      	bge.n	9001884e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018810:	8963      	ldrh	r3, [r4, #10]
90018812:	4419      	add	r1, r3
90018814:	b209      	sxth	r1, r1
90018816:	4541      	cmp	r1, r8
90018818:	db08      	blt.n	9001882c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001881a:	4561      	cmp	r1, ip
9001881c:	da06      	bge.n	9001882c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001881e:	89a3      	ldrh	r3, [r4, #12]
90018820:	441a      	add	r2, r3
90018822:	b212      	sxth	r2, r2
90018824:	42ba      	cmp	r2, r7
90018826:	db01      	blt.n	9001882c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90018828:	4282      	cmp	r2, r0
9001882a:	db10      	blt.n	9001884e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001882c:	4b21      	ldr	r3, [pc, #132]	@ (900188b4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
9001882e:	a904      	add	r1, sp, #16
90018830:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90018832:	9304      	str	r3, [sp, #16]
90018834:	2302      	movs	r3, #2
90018836:	f88d 3014 	strb.w	r3, [sp, #20]
9001883a:	2300      	movs	r3, #0
9001883c:	f8ad 3016 	strh.w	r3, [sp, #22]
90018840:	f8ad 3018 	strh.w	r3, [sp, #24]
90018844:	f8ad 301a 	strh.w	r3, [sp, #26]
90018848:	6803      	ldr	r3, [r0, #0]
9001884a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001884c:	4798      	blx	r3
9001884e:	1d29      	adds	r1, r5, #4
90018850:	a802      	add	r0, sp, #8
90018852:	f7ff fabb 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018856:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001885a:	88e0      	ldrh	r0, [r4, #6]
9001885c:	eba3 0808 	sub.w	r8, r3, r8
90018860:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90018864:	7921      	ldrb	r1, [r4, #4]
90018866:	fa1f f888 	uxth.w	r8, r8
9001886a:	1bdf      	subs	r7, r3, r7
9001886c:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
90018870:	b2bb      	uxth	r3, r7
90018872:	4440      	add	r0, r8
90018874:	8922      	ldrh	r2, [r4, #8]
90018876:	8967      	ldrh	r7, [r4, #10]
90018878:	4460      	add	r0, ip
9001887a:	89a4      	ldrh	r4, [r4, #12]
9001887c:	441a      	add	r2, r3
9001887e:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
90018880:	44b8      	add	r8, r7
90018882:	4423      	add	r3, r4
90018884:	f8ad 0016 	strh.w	r0, [sp, #22]
90018888:	4432      	add	r2, r6
9001888a:	44e0      	add	r8, ip
9001888c:	4433      	add	r3, r6
9001888e:	4c0a      	ldr	r4, [pc, #40]	@ (900188b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90018890:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90018892:	f88d 1014 	strb.w	r1, [sp, #20]
90018896:	a904      	add	r1, sp, #16
90018898:	9404      	str	r4, [sp, #16]
9001889a:	f8ad 2018 	strh.w	r2, [sp, #24]
9001889e:	f8ad 801a 	strh.w	r8, [sp, #26]
900188a2:	f8ad 301c 	strh.w	r3, [sp, #28]
900188a6:	6803      	ldr	r3, [r0, #0]
900188a8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900188aa:	4798      	blx	r3
900188ac:	b008      	add	sp, #32
900188ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900188b2:	bf00      	nop
900188b4:	9002dd1c 	.word	0x9002dd1c
900188b8:	9002dd30 	.word	0x9002dd30

900188bc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
900188bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
900188be:	4604      	mov	r4, r0
900188c0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
900188c4:	3201      	adds	r2, #1
900188c6:	d112      	bne.n	900188ee <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
900188c8:	2500      	movs	r5, #0
900188ca:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900188ce:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900188d2:	6803      	ldr	r3, [r0, #0]
900188d4:	9500      	str	r5, [sp, #0]
900188d6:	466d      	mov	r5, sp
900188d8:	f8ad 1004 	strh.w	r1, [sp, #4]
900188dc:	f8ad 2006 	strh.w	r2, [sp, #6]
900188e0:	4629      	mov	r1, r5
900188e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900188e4:	4798      	blx	r3
900188e6:	e895 0003 	ldmia.w	r5, {r0, r1}
900188ea:	e884 0003 	stmia.w	r4, {r0, r1}
900188ee:	4620      	mov	r0, r4
900188f0:	b003      	add	sp, #12
900188f2:	bd30      	pop	{r4, r5, pc}

900188f4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
900188f4:	b513      	push	{r0, r1, r4, lr}
900188f6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
900188fa:	4604      	mov	r4, r0
900188fc:	3301      	adds	r3, #1
900188fe:	d109      	bne.n	90018914 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90018900:	4601      	mov	r1, r0
90018902:	4668      	mov	r0, sp
90018904:	f7ff fa62 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018908:	f8bd 3000 	ldrh.w	r3, [sp]
9001890c:	8423      	strh	r3, [r4, #32]
9001890e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90018912:	8463      	strh	r3, [r4, #34]	@ 0x22
90018914:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
90018918:	b002      	add	sp, #8
9001891a:	bd10      	pop	{r4, pc}

9001891c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
9001891c:	b513      	push	{r0, r1, r4, lr}
9001891e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
90018922:	4604      	mov	r4, r0
90018924:	3301      	adds	r3, #1
90018926:	d109      	bne.n	9001893c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
90018928:	4601      	mov	r1, r0
9001892a:	4668      	mov	r0, sp
9001892c:	f7ff fa4e 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018930:	f8bd 3000 	ldrh.w	r3, [sp]
90018934:	8423      	strh	r3, [r4, #32]
90018936:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001893a:	8463      	strh	r3, [r4, #34]	@ 0x22
9001893c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
90018940:	b002      	add	sp, #8
90018942:	bd10      	pop	{r4, pc}

90018944 <_ZN8touchgfx6ScreenC1Ev>:
90018944:	b570      	push	{r4, r5, r6, lr}
90018946:	4b17      	ldr	r3, [pc, #92]	@ (900189a4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
90018948:	4605      	mov	r5, r0
9001894a:	4a17      	ldr	r2, [pc, #92]	@ (900189a8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
9001894c:	2101      	movs	r1, #1
9001894e:	f845 3b04 	str.w	r3, [r5], #4
90018952:	2300      	movs	r3, #0
90018954:	6042      	str	r2, [r0, #4]
90018956:	4604      	mov	r4, r0
90018958:	8103      	strh	r3, [r0, #8]
9001895a:	8143      	strh	r3, [r0, #10]
9001895c:	8183      	strh	r3, [r0, #12]
9001895e:	81c3      	strh	r3, [r0, #14]
90018960:	8203      	strh	r3, [r0, #16]
90018962:	8243      	strh	r3, [r0, #18]
90018964:	8283      	strh	r3, [r0, #20]
90018966:	82c3      	strh	r3, [r0, #22]
90018968:	6203      	str	r3, [r0, #32]
9001896a:	8483      	strh	r3, [r0, #36]	@ 0x24
9001896c:	84c3      	strh	r3, [r0, #38]	@ 0x26
9001896e:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
90018972:	6343      	str	r3, [r0, #52]	@ 0x34
90018974:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
90018978:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
9001897c:	e9c0 3306 	strd	r3, r3, [r0, #24]
90018980:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
90018984:	4b09      	ldr	r3, [pc, #36]	@ (900189ac <_ZN8touchgfx6ScreenC1Ev+0x68>)
90018986:	4628      	mov	r0, r5
90018988:	f9b3 6000 	ldrsh.w	r6, [r3]
9001898c:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9001898e:	4a08      	ldr	r2, [pc, #32]	@ (900189b0 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90018990:	f9b2 1000 	ldrsh.w	r1, [r2]
90018994:	4798      	blx	r3
90018996:	6863      	ldr	r3, [r4, #4]
90018998:	4628      	mov	r0, r5
9001899a:	4631      	mov	r1, r6
9001899c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001899e:	4798      	blx	r3
900189a0:	4620      	mov	r0, r4
900189a2:	bd70      	pop	{r4, r5, r6, pc}
900189a4:	9002dd58 	.word	0x9002dd58
900189a8:	9002d73c 	.word	0x9002d73c
900189ac:	240233ca 	.word	0x240233ca
900189b0:	240233c8 	.word	0x240233c8

900189b4 <_ZN8touchgfx6Screen4drawEv>:
900189b4:	4b09      	ldr	r3, [pc, #36]	@ (900189dc <_ZN8touchgfx6Screen4drawEv+0x28>)
900189b6:	b507      	push	{r0, r1, r2, lr}
900189b8:	f9b3 2000 	ldrsh.w	r2, [r3]
900189bc:	2100      	movs	r1, #0
900189be:	4b08      	ldr	r3, [pc, #32]	@ (900189e0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
900189c0:	9100      	str	r1, [sp, #0]
900189c2:	4669      	mov	r1, sp
900189c4:	f9b3 3000 	ldrsh.w	r3, [r3]
900189c8:	f8ad 2004 	strh.w	r2, [sp, #4]
900189cc:	f8ad 3006 	strh.w	r3, [sp, #6]
900189d0:	6803      	ldr	r3, [r0, #0]
900189d2:	689b      	ldr	r3, [r3, #8]
900189d4:	4798      	blx	r3
900189d6:	b003      	add	sp, #12
900189d8:	f85d fb04 	ldr.w	pc, [sp], #4
900189dc:	240233c8 	.word	0x240233c8
900189e0:	240233ca 	.word	0x240233ca

900189e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
900189e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900189e8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
900189ec:	b089      	sub	sp, #36	@ 0x24
900189ee:	4680      	mov	r8, r0
900189f0:	460c      	mov	r4, r1
900189f2:	2b00      	cmp	r3, #0
900189f4:	4615      	mov	r5, r2
900189f6:	dd0e      	ble.n	90018a16 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900189f8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
900189fc:	2b00      	cmp	r3, #0
900189fe:	dd0a      	ble.n	90018a16 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90018a00:	4628      	mov	r0, r5
90018a02:	f7ff ff5b 	bl	900188bc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90018a06:	4621      	mov	r1, r4
90018a08:	f7fd ffed 	bl	900169e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
90018a0c:	69eb      	ldr	r3, [r5, #28]
90018a0e:	b928      	cbnz	r0, 90018a1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90018a10:	461d      	mov	r5, r3
90018a12:	2b00      	cmp	r3, #0
90018a14:	d1f4      	bne.n	90018a00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
90018a16:	b009      	add	sp, #36	@ 0x24
90018a18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018a1c:	ae04      	add	r6, sp, #16
90018a1e:	2b00      	cmp	r3, #0
90018a20:	f000 80b5 	beq.w	90018b8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90018a24:	682b      	ldr	r3, [r5, #0]
90018a26:	4629      	mov	r1, r5
90018a28:	a802      	add	r0, sp, #8
90018a2a:	68db      	ldr	r3, [r3, #12]
90018a2c:	4798      	blx	r3
90018a2e:	4628      	mov	r0, r5
90018a30:	f7ff ff60 	bl	900188f4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90018a34:	f8bd 7008 	ldrh.w	r7, [sp, #8]
90018a38:	4407      	add	r7, r0
90018a3a:	4628      	mov	r0, r5
90018a3c:	f7ff ff6e 	bl	9001891c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90018a40:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90018a44:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90018a48:	b23f      	sxth	r7, r7
90018a4a:	4418      	add	r0, r3
90018a4c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90018a50:	4621      	mov	r1, r4
90018a52:	f8ad 2014 	strh.w	r2, [sp, #20]
90018a56:	f8ad 0012 	strh.w	r0, [sp, #18]
90018a5a:	4630      	mov	r0, r6
90018a5c:	f8ad 3016 	strh.w	r3, [sp, #22]
90018a60:	f8ad 7010 	strh.w	r7, [sp, #16]
90018a64:	f7f7 fe08 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
90018a68:	4628      	mov	r0, r5
90018a6a:	f7ff ff27 	bl	900188bc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90018a6e:	ab06      	add	r3, sp, #24
90018a70:	4602      	mov	r2, r0
90018a72:	e896 0003 	ldmia.w	r6, {r0, r1}
90018a76:	e883 0003 	stmia.w	r3, {r0, r1}
90018a7a:	4611      	mov	r1, r2
90018a7c:	4618      	mov	r0, r3
90018a7e:	f7f7 fdfb 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
90018a82:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90018a86:	f9b4 1000 	ldrsh.w	r1, [r4]
90018a8a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
90018a8e:	4299      	cmp	r1, r3
90018a90:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90018a94:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90018a98:	d10b      	bne.n	90018ab2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90018a9a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90018a9e:	4552      	cmp	r2, sl
90018aa0:	d107      	bne.n	90018ab2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90018aa2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90018aa6:	455a      	cmp	r2, fp
90018aa8:	d103      	bne.n	90018ab2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90018aaa:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90018aae:	454a      	cmp	r2, r9
90018ab0:	d06d      	beq.n	90018b8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90018ab2:	f1bb 0f00 	cmp.w	fp, #0
90018ab6:	dd65      	ble.n	90018b84 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90018ab8:	f1b9 0f00 	cmp.w	r9, #0
90018abc:	dd62      	ble.n	90018b84 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90018abe:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90018ac2:	fa1f f08a 	uxth.w	r0, sl
90018ac6:	4552      	cmp	r2, sl
90018ac8:	9000      	str	r0, [sp, #0]
90018aca:	da12      	bge.n	90018af2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
90018acc:	9301      	str	r3, [sp, #4]
90018ace:	9b00      	ldr	r3, [sp, #0]
90018ad0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90018ad4:	f8ad 2012 	strh.w	r2, [sp, #18]
90018ad8:	1a9a      	subs	r2, r3, r2
90018ada:	f8ad 1010 	strh.w	r1, [sp, #16]
90018ade:	4631      	mov	r1, r6
90018ae0:	f8ad 0014 	strh.w	r0, [sp, #20]
90018ae4:	4640      	mov	r0, r8
90018ae6:	f8ad 2016 	strh.w	r2, [sp, #22]
90018aea:	69ea      	ldr	r2, [r5, #28]
90018aec:	f7ff ff7a 	bl	900189e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90018af0:	9b01      	ldr	r3, [sp, #4]
90018af2:	f9b4 2000 	ldrsh.w	r2, [r4]
90018af6:	b29f      	uxth	r7, r3
90018af8:	429a      	cmp	r2, r3
90018afa:	da0d      	bge.n	90018b18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
90018afc:	f8ad 2010 	strh.w	r2, [sp, #16]
90018b00:	1aba      	subs	r2, r7, r2
90018b02:	f8ad a012 	strh.w	sl, [sp, #18]
90018b06:	4631      	mov	r1, r6
90018b08:	f8ad 2014 	strh.w	r2, [sp, #20]
90018b0c:	4640      	mov	r0, r8
90018b0e:	f8ad 9016 	strh.w	r9, [sp, #22]
90018b12:	69ea      	ldr	r2, [r5, #28]
90018b14:	f7ff ff66 	bl	900189e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90018b18:	8822      	ldrh	r2, [r4, #0]
90018b1a:	445f      	add	r7, fp
90018b1c:	88a3      	ldrh	r3, [r4, #4]
90018b1e:	b2bf      	uxth	r7, r7
90018b20:	4413      	add	r3, r2
90018b22:	b23a      	sxth	r2, r7
90018b24:	b29b      	uxth	r3, r3
90018b26:	b219      	sxth	r1, r3
90018b28:	4291      	cmp	r1, r2
90018b2a:	dd0d      	ble.n	90018b48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
90018b2c:	1bdb      	subs	r3, r3, r7
90018b2e:	f8ad 2010 	strh.w	r2, [sp, #16]
90018b32:	f8ad a012 	strh.w	sl, [sp, #18]
90018b36:	4631      	mov	r1, r6
90018b38:	f8ad 3014 	strh.w	r3, [sp, #20]
90018b3c:	4640      	mov	r0, r8
90018b3e:	f8ad 9016 	strh.w	r9, [sp, #22]
90018b42:	69ea      	ldr	r2, [r5, #28]
90018b44:	f7ff ff4e 	bl	900189e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90018b48:	88e2      	ldrh	r2, [r4, #6]
90018b4a:	8863      	ldrh	r3, [r4, #2]
90018b4c:	4413      	add	r3, r2
90018b4e:	9a00      	ldr	r2, [sp, #0]
90018b50:	444a      	add	r2, r9
90018b52:	b29b      	uxth	r3, r3
90018b54:	fa1f f982 	uxth.w	r9, r2
90018b58:	b219      	sxth	r1, r3
90018b5a:	fa0f f289 	sxth.w	r2, r9
90018b5e:	428a      	cmp	r2, r1
90018b60:	da15      	bge.n	90018b8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90018b62:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90018b66:	eba3 0309 	sub.w	r3, r3, r9
90018b6a:	f9b4 0000 	ldrsh.w	r0, [r4]
90018b6e:	f8ad 1014 	strh.w	r1, [sp, #20]
90018b72:	4631      	mov	r1, r6
90018b74:	f8ad 0010 	strh.w	r0, [sp, #16]
90018b78:	f8ad 2012 	strh.w	r2, [sp, #18]
90018b7c:	f8ad 3016 	strh.w	r3, [sp, #22]
90018b80:	69ea      	ldr	r2, [r5, #28]
90018b82:	e001      	b.n	90018b88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90018b84:	69ea      	ldr	r2, [r5, #28]
90018b86:	4621      	mov	r1, r4
90018b88:	4640      	mov	r0, r8
90018b8a:	f7ff ff2b 	bl	900189e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90018b8e:	4628      	mov	r0, r5
90018b90:	f7ff fe94 	bl	900188bc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90018b94:	6861      	ldr	r1, [r4, #4]
90018b96:	4602      	mov	r2, r0
90018b98:	4633      	mov	r3, r6
90018b9a:	6820      	ldr	r0, [r4, #0]
90018b9c:	c303      	stmia	r3!, {r0, r1}
90018b9e:	4611      	mov	r1, r2
90018ba0:	4630      	mov	r0, r6
90018ba2:	f7f7 fd69 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
90018ba6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90018baa:	2b00      	cmp	r3, #0
90018bac:	f77f af33 	ble.w	90018a16 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90018bb0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90018bb4:	2b00      	cmp	r3, #0
90018bb6:	f77f af2e 	ble.w	90018a16 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90018bba:	4628      	mov	r0, r5
90018bbc:	f7ff fe9a 	bl	900188f4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90018bc0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90018bc4:	1a18      	subs	r0, r3, r0
90018bc6:	f8ad 0010 	strh.w	r0, [sp, #16]
90018bca:	4628      	mov	r0, r5
90018bcc:	f7ff fea6 	bl	9001891c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90018bd0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90018bd4:	4631      	mov	r1, r6
90018bd6:	1a18      	subs	r0, r3, r0
90018bd8:	f8ad 0012 	strh.w	r0, [sp, #18]
90018bdc:	4628      	mov	r0, r5
90018bde:	682b      	ldr	r3, [r5, #0]
90018be0:	689b      	ldr	r3, [r3, #8]
90018be2:	4798      	blx	r3
90018be4:	e717      	b.n	90018a16 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

90018be6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
90018be6:	b570      	push	{r4, r5, r6, lr}
90018be8:	1d06      	adds	r6, r0, #4
90018bea:	b086      	sub	sp, #24
90018bec:	460c      	mov	r4, r1
90018bee:	2300      	movs	r3, #0
90018bf0:	4631      	mov	r1, r6
90018bf2:	4605      	mov	r5, r0
90018bf4:	a802      	add	r0, sp, #8
90018bf6:	9301      	str	r3, [sp, #4]
90018bf8:	f7ff f8e8 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018bfc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90018c00:	8822      	ldrh	r2, [r4, #0]
90018c02:	f8bd 100a 	ldrh.w	r1, [sp, #10]
90018c06:	1ad2      	subs	r2, r2, r3
90018c08:	8863      	ldrh	r3, [r4, #2]
90018c0a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90018c0e:	1a5b      	subs	r3, r3, r1
90018c10:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90018c14:	f8ad 2010 	strh.w	r2, [sp, #16]
90018c18:	aa01      	add	r2, sp, #4
90018c1a:	f8ad 0014 	strh.w	r0, [sp, #20]
90018c1e:	4630      	mov	r0, r6
90018c20:	f8ad 1016 	strh.w	r1, [sp, #22]
90018c24:	a904      	add	r1, sp, #16
90018c26:	f8ad 3012 	strh.w	r3, [sp, #18]
90018c2a:	f7f7 fdfd 	bl	90010828 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90018c2e:	9a01      	ldr	r2, [sp, #4]
90018c30:	b11a      	cbz	r2, 90018c3a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90018c32:	4621      	mov	r1, r4
90018c34:	4628      	mov	r0, r5
90018c36:	f7ff fed5 	bl	900189e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90018c3a:	b006      	add	sp, #24
90018c3c:	bd70      	pop	{r4, r5, r6, pc}

90018c3e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
90018c3e:	4602      	mov	r2, r0
90018c40:	b530      	push	{r4, r5, lr}
90018c42:	4604      	mov	r4, r0
90018c44:	b085      	sub	sp, #20
90018c46:	f852 0f08 	ldr.w	r0, [r2, #8]!
90018c4a:	460d      	mov	r5, r1
90018c4c:	466b      	mov	r3, sp
90018c4e:	6851      	ldr	r1, [r2, #4]
90018c50:	c303      	stmia	r3!, {r0, r1}
90018c52:	4629      	mov	r1, r5
90018c54:	4668      	mov	r0, sp
90018c56:	f7f7 fd0f 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
90018c5a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90018c5e:	b12b      	cbz	r3, 90018c6c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90018c60:	4669      	mov	r1, sp
90018c62:	4620      	mov	r0, r4
90018c64:	f7ff ffbf 	bl	90018be6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90018c68:	b005      	add	sp, #20
90018c6a:	bd30      	pop	{r4, r5, pc}
90018c6c:	3404      	adds	r4, #4
90018c6e:	a802      	add	r0, sp, #8
90018c70:	4621      	mov	r1, r4
90018c72:	f7ff f8ab 	bl	90017dcc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018c76:	f8bd 3000 	ldrh.w	r3, [sp]
90018c7a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
90018c7e:	4669      	mov	r1, sp
90018c80:	4620      	mov	r0, r4
90018c82:	1a9b      	subs	r3, r3, r2
90018c84:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90018c88:	f8ad 3000 	strh.w	r3, [sp]
90018c8c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90018c90:	1a9b      	subs	r3, r3, r2
90018c92:	f8ad 3002 	strh.w	r3, [sp, #2]
90018c96:	f7f7 fd8e 	bl	900107b6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
90018c9a:	e7e5      	b.n	90018c68 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90018c9c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90018c9c:	460b      	mov	r3, r1
90018c9e:	680a      	ldr	r2, [r1, #0]
90018ca0:	1d01      	adds	r1, r0, #4
90018ca2:	6992      	ldr	r2, [r2, #24]
90018ca4:	4618      	mov	r0, r3
90018ca6:	4710      	bx	r2

90018ca8 <_ZN8touchgfx12TextProviderC1Ev>:
90018ca8:	b538      	push	{r3, r4, r5, lr}
90018caa:	2500      	movs	r5, #0
90018cac:	2302      	movs	r3, #2
90018cae:	4604      	mov	r4, r0
90018cb0:	220e      	movs	r2, #14
90018cb2:	7403      	strb	r3, [r0, #16]
90018cb4:	4629      	mov	r1, r5
90018cb6:	6145      	str	r5, [r0, #20]
90018cb8:	7605      	strb	r5, [r0, #24]
90018cba:	83c5      	strh	r5, [r0, #30]
90018cbc:	8405      	strh	r5, [r0, #32]
90018cbe:	86c5      	strh	r5, [r0, #54]	@ 0x36
90018cc0:	8705      	strh	r5, [r0, #56]	@ 0x38
90018cc2:	87c5      	strh	r5, [r0, #62]	@ 0x3e
90018cc4:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
90018cc8:	e9c0 5500 	strd	r5, r5, [r0]
90018ccc:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
90018cd0:	304c      	adds	r0, #76	@ 0x4c
90018cd2:	f011 f9dd 	bl	9002a090 <memset>
90018cd6:	2301      	movs	r3, #1
90018cd8:	4620      	mov	r0, r4
90018cda:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
90018cde:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90018ce2:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
90018ce6:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
90018cea:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
90018cee:	f7ec fd6b 	bl	900057c8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90018cf2:	4620      	mov	r0, r4
90018cf4:	bd38      	pop	{r3, r4, r5, pc}

90018cf6 <_ZN8touchgfx12TextProvider11endOfStringEv>:
90018cf6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90018cf8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90018cfc:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
90018cfe:	fab0 f080 	clz	r0, r0
90018d02:	0940      	lsrs	r0, r0, #5
90018d04:	4770      	bx	lr

90018d06 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
90018d06:	b530      	push	{r4, r5, lr}
90018d08:	2500      	movs	r5, #0
90018d0a:	2401      	movs	r4, #1
90018d0c:	6843      	ldr	r3, [r0, #4]
90018d0e:	b913      	cbnz	r3, 90018d16 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90018d10:	6803      	ldr	r3, [r0, #0]
90018d12:	b313      	cbz	r3, 90018d5a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90018d14:	6043      	str	r3, [r0, #4]
90018d16:	7e03      	ldrb	r3, [r0, #24]
90018d18:	b143      	cbz	r3, 90018d2c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
90018d1a:	6943      	ldr	r3, [r0, #20]
90018d1c:	b12b      	cbz	r3, 90018d2a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90018d1e:	881a      	ldrh	r2, [r3, #0]
90018d20:	b11a      	cbz	r2, 90018d2a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90018d22:	1c9a      	adds	r2, r3, #2
90018d24:	6142      	str	r2, [r0, #20]
90018d26:	8818      	ldrh	r0, [r3, #0]
90018d28:	bd30      	pop	{r4, r5, pc}
90018d2a:	7605      	strb	r5, [r0, #24]
90018d2c:	6843      	ldr	r3, [r0, #4]
90018d2e:	8819      	ldrh	r1, [r3, #0]
90018d30:	b199      	cbz	r1, 90018d5a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90018d32:	1c9a      	adds	r2, r3, #2
90018d34:	2902      	cmp	r1, #2
90018d36:	6042      	str	r2, [r0, #4]
90018d38:	d1f5      	bne.n	90018d26 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
90018d3a:	7c03      	ldrb	r3, [r0, #16]
90018d3c:	2b01      	cmp	r3, #1
90018d3e:	d8e5      	bhi.n	90018d0c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018d40:	1c5a      	adds	r2, r3, #1
90018d42:	3302      	adds	r3, #2
90018d44:	7402      	strb	r2, [r0, #16]
90018d46:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
90018d4a:	6143      	str	r3, [r0, #20]
90018d4c:	2b00      	cmp	r3, #0
90018d4e:	d0dd      	beq.n	90018d0c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018d50:	881b      	ldrh	r3, [r3, #0]
90018d52:	2b00      	cmp	r3, #0
90018d54:	d0da      	beq.n	90018d0c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018d56:	7604      	strb	r4, [r0, #24]
90018d58:	e7d8      	b.n	90018d0c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018d5a:	2000      	movs	r0, #0
90018d5c:	e7e4      	b.n	90018d28 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90018d5e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90018d5e:	6001      	str	r1, [r0, #0]
90018d60:	2100      	movs	r1, #0
90018d62:	b430      	push	{r4, r5}
90018d64:	6041      	str	r1, [r0, #4]
90018d66:	6815      	ldr	r5, [r2, #0]
90018d68:	6085      	str	r5, [r0, #8]
90018d6a:	6852      	ldr	r2, [r2, #4]
90018d6c:	6443      	str	r3, [r0, #68]	@ 0x44
90018d6e:	9b02      	ldr	r3, [sp, #8]
90018d70:	60c2      	str	r2, [r0, #12]
90018d72:	7401      	strb	r1, [r0, #16]
90018d74:	6141      	str	r1, [r0, #20]
90018d76:	7601      	strb	r1, [r0, #24]
90018d78:	8701      	strh	r1, [r0, #56]	@ 0x38
90018d7a:	8401      	strh	r1, [r0, #32]
90018d7c:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
90018d80:	6483      	str	r3, [r0, #72]	@ 0x48
90018d82:	bc30      	pop	{r4, r5}
90018d84:	f7ec bd20 	b.w	900057c8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

90018d88 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
90018d88:	b408      	push	{r3}
90018d8a:	b510      	push	{r4, lr}
90018d8c:	b085      	sub	sp, #20
90018d8e:	ac07      	add	r4, sp, #28
90018d90:	f854 3b04 	ldr.w	r3, [r4], #4
90018d94:	9300      	str	r3, [sp, #0]
90018d96:	4613      	mov	r3, r2
90018d98:	4622      	mov	r2, r4
90018d9a:	9403      	str	r4, [sp, #12]
90018d9c:	f7ff ffdf 	bl	90018d5e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90018da0:	b005      	add	sp, #20
90018da2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90018da6:	b001      	add	sp, #4
90018da8:	4770      	bx	lr

90018daa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
90018daa:	b5f0      	push	{r4, r5, r6, r7, lr}
90018dac:	4605      	mov	r5, r0
90018dae:	4608      	mov	r0, r1
90018db0:	b1f1      	cbz	r1, 90018df0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
90018db2:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
90018db6:	460b      	mov	r3, r1
90018db8:	f101 0708 	add.w	r7, r1, #8
90018dbc:	4622      	mov	r2, r4
90018dbe:	6818      	ldr	r0, [r3, #0]
90018dc0:	3308      	adds	r3, #8
90018dc2:	f853 1c04 	ldr.w	r1, [r3, #-4]
90018dc6:	4626      	mov	r6, r4
90018dc8:	42bb      	cmp	r3, r7
90018dca:	c603      	stmia	r6!, {r0, r1}
90018dcc:	4634      	mov	r4, r6
90018dce:	d1f6      	bne.n	90018dbe <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
90018dd0:	6818      	ldr	r0, [r3, #0]
90018dd2:	6030      	str	r0, [r6, #0]
90018dd4:	4610      	mov	r0, r2
90018dd6:	889b      	ldrh	r3, [r3, #4]
90018dd8:	80b3      	strh	r3, [r6, #4]
90018dda:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
90018dde:	015b      	lsls	r3, r3, #5
90018de0:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90018de4:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
90018de8:	430b      	orrs	r3, r1
90018dea:	425b      	negs	r3, r3
90018dec:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
90018df0:	bdf0      	pop	{r4, r5, r6, r7, pc}

90018df2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
90018df2:	b538      	push	{r3, r4, r5, lr}
90018df4:	460c      	mov	r4, r1
90018df6:	6811      	ldr	r1, [r2, #0]
90018df8:	4610      	mov	r0, r2
90018dfa:	68cd      	ldr	r5, [r1, #12]
90018dfc:	4619      	mov	r1, r3
90018dfe:	47a8      	blx	r5
90018e00:	2800      	cmp	r0, #0
90018e02:	bf08      	it	eq
90018e04:	4620      	moveq	r0, r4
90018e06:	bd38      	pop	{r3, r4, r5, pc}

90018e08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
90018e08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018e0c:	468c      	mov	ip, r1
90018e0e:	4604      	mov	r4, r0
90018e10:	4615      	mov	r5, r2
90018e12:	b942      	cbnz	r2, 90018e26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
90018e14:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
90018e18:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
90018e1c:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
90018e20:	4628      	mov	r0, r5
90018e22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018e26:	7b50      	ldrb	r0, [r2, #13]
90018e28:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
90018e2c:	8893      	ldrh	r3, [r2, #4]
90018e2e:	0106      	lsls	r6, r0, #4
90018e30:	f406 7280 	and.w	r2, r6, #256	@ 0x100
90018e34:	79ee      	ldrb	r6, [r5, #7]
90018e36:	4316      	orrs	r6, r2
90018e38:	185a      	adds	r2, r3, r1
90018e3a:	b291      	uxth	r1, r2
90018e3c:	b2b7      	uxth	r7, r6
90018e3e:	291d      	cmp	r1, #29
90018e40:	d87f      	bhi.n	90018f42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90018e42:	2201      	movs	r2, #1
90018e44:	10f6      	asrs	r6, r6, #3
90018e46:	408a      	lsls	r2, r1
90018e48:	4974      	ldr	r1, [pc, #464]	@ (9001901c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
90018e4a:	420a      	tst	r2, r1
90018e4c:	d12e      	bne.n	90018eac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90018e4e:	f412 7f60 	tst.w	r2, #896	@ 0x380
90018e52:	d076      	beq.n	90018f42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90018e54:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
90018e58:	462b      	mov	r3, r5
90018e5a:	f105 0e08 	add.w	lr, r5, #8
90018e5e:	4615      	mov	r5, r2
90018e60:	6818      	ldr	r0, [r3, #0]
90018e62:	3308      	adds	r3, #8
90018e64:	f853 1c04 	ldr.w	r1, [r3, #-4]
90018e68:	4694      	mov	ip, r2
90018e6a:	4573      	cmp	r3, lr
90018e6c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90018e70:	4662      	mov	r2, ip
90018e72:	d1f5      	bne.n	90018e60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90018e74:	6818      	ldr	r0, [r3, #0]
90018e76:	f8cc 0000 	str.w	r0, [ip]
90018e7a:	889b      	ldrh	r3, [r3, #4]
90018e7c:	f8ac 3004 	strh.w	r3, [ip, #4]
90018e80:	b2b3      	uxth	r3, r6
90018e82:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
90018e86:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
90018e8a:	1aca      	subs	r2, r1, r3
90018e8c:	1bcf      	subs	r7, r1, r7
90018e8e:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
90018e92:	b292      	uxth	r2, r2
90018e94:	1afb      	subs	r3, r7, r3
90018e96:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
90018e9a:	10d2      	asrs	r2, r2, #3
90018e9c:	f002 0260 	and.w	r2, r2, #96	@ 0x60
90018ea0:	4302      	orrs	r2, r0
90018ea2:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
90018ea6:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
90018eaa:	e7b9      	b.n	90018e20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
90018eac:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
90018eb0:	462b      	mov	r3, r5
90018eb2:	f105 0808 	add.w	r8, r5, #8
90018eb6:	4615      	mov	r5, r2
90018eb8:	6818      	ldr	r0, [r3, #0]
90018eba:	3308      	adds	r3, #8
90018ebc:	f853 1c04 	ldr.w	r1, [r3, #-4]
90018ec0:	4696      	mov	lr, r2
90018ec2:	4543      	cmp	r3, r8
90018ec4:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90018ec8:	4672      	mov	r2, lr
90018eca:	d1f5      	bne.n	90018eb8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
90018ecc:	6818      	ldr	r0, [r3, #0]
90018ece:	f8ce 0000 	str.w	r0, [lr]
90018ed2:	889b      	ldrh	r3, [r3, #4]
90018ed4:	f8ae 3004 	strh.w	r3, [lr, #4]
90018ed8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
90018eda:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90018ede:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
90018ee0:	f640 6333 	movw	r3, #3635	@ 0xe33
90018ee4:	4299      	cmp	r1, r3
90018ee6:	d111      	bne.n	90018f0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
90018ee8:	f8dc 3000 	ldr.w	r3, [ip]
90018eec:	4660      	mov	r0, ip
90018eee:	68db      	ldr	r3, [r3, #12]
90018ef0:	4798      	blx	r3
90018ef2:	7b41      	ldrb	r1, [r0, #13]
90018ef4:	00cb      	lsls	r3, r1, #3
90018ef6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90018efa:	7a03      	ldrb	r3, [r0, #8]
90018efc:	4313      	orrs	r3, r2
90018efe:	064a      	lsls	r2, r1, #25
90018f00:	bf44      	itt	mi
90018f02:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018f06:	b21b      	sxthmi	r3, r3
90018f08:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90018f0c:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
90018f10:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90018f14:	443b      	add	r3, r7
90018f16:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90018f1a:	4433      	add	r3, r6
90018f1c:	b29b      	uxth	r3, r3
90018f1e:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90018f22:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90018f26:	10db      	asrs	r3, r3, #3
90018f28:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90018f2c:	4313      	orrs	r3, r2
90018f2e:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
90018f32:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90018f36:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
90018f3a:	1a9b      	subs	r3, r3, r2
90018f3c:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
90018f40:	e76e      	b.n	90018e20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
90018f42:	f023 0204 	bic.w	r2, r3, #4
90018f46:	f640 611b 	movw	r1, #3611	@ 0xe1b
90018f4a:	428a      	cmp	r2, r1
90018f4c:	d003      	beq.n	90018f56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
90018f4e:	f640 621d 	movw	r2, #3613	@ 0xe1d
90018f52:	4293      	cmp	r3, r2
90018f54:	d120      	bne.n	90018f98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x190>
90018f56:	3b01      	subs	r3, #1
90018f58:	4662      	mov	r2, ip
90018f5a:	4629      	mov	r1, r5
90018f5c:	4620      	mov	r0, r4
90018f5e:	b29b      	uxth	r3, r3
90018f60:	f7ff ff47 	bl	90018df2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90018f64:	7b41      	ldrb	r1, [r0, #13]
90018f66:	00cb      	lsls	r3, r1, #3
90018f68:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90018f6c:	7a03      	ldrb	r3, [r0, #8]
90018f6e:	0648      	lsls	r0, r1, #25
90018f70:	ea43 0302 	orr.w	r3, r3, r2
90018f74:	bf44      	itt	mi
90018f76:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018f7a:	b21b      	sxthmi	r3, r3
90018f7c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90018f80:	7b6b      	ldrb	r3, [r5, #13]
90018f82:	7aaa      	ldrb	r2, [r5, #10]
90018f84:	005b      	lsls	r3, r3, #1
90018f86:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90018f8a:	4313      	orrs	r3, r2
90018f8c:	115a      	asrs	r2, r3, #5
90018f8e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
90018f92:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
90018f96:	e032      	b.n	90018ffe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
90018f98:	00c2      	lsls	r2, r0, #3
90018f9a:	f402 7180 	and.w	r1, r2, #256	@ 0x100
90018f9e:	7a2a      	ldrb	r2, [r5, #8]
90018fa0:	430a      	orrs	r2, r1
90018fa2:	0641      	lsls	r1, r0, #25
90018fa4:	f640 6109 	movw	r1, #3593	@ 0xe09
90018fa8:	bf44      	itt	mi
90018faa:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
90018fae:	b212      	sxthmi	r2, r2
90018fb0:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
90018fb4:	f023 0210 	bic.w	r2, r3, #16
90018fb8:	428a      	cmp	r2, r1
90018fba:	d003      	beq.n	90018fc4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
90018fbc:	f640 6213 	movw	r2, #3603	@ 0xe13
90018fc0:	4293      	cmp	r3, r2
90018fc2:	d129      	bne.n	90019018 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x210>
90018fc4:	7b6e      	ldrb	r6, [r5, #13]
90018fc6:	4629      	mov	r1, r5
90018fc8:	4620      	mov	r0, r4
90018fca:	0076      	lsls	r6, r6, #1
90018fcc:	f406 7280 	and.w	r2, r6, #256	@ 0x100
90018fd0:	7aae      	ldrb	r6, [r5, #10]
90018fd2:	4316      	orrs	r6, r2
90018fd4:	f640 6213 	movw	r2, #3603	@ 0xe13
90018fd8:	4293      	cmp	r3, r2
90018fda:	4662      	mov	r2, ip
90018fdc:	bf16      	itet	ne
90018fde:	f103 33ff 	addne.w	r3, r3, #4294967295
90018fe2:	f640 630c 	movweq	r3, #3596	@ 0xe0c
90018fe6:	b29b      	uxthne	r3, r3
90018fe8:	f7ff ff03 	bl	90018df2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90018fec:	7b43      	ldrb	r3, [r0, #13]
90018fee:	7a82      	ldrb	r2, [r0, #10]
90018ff0:	005b      	lsls	r3, r3, #1
90018ff2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90018ff6:	4313      	orrs	r3, r2
90018ff8:	1af6      	subs	r6, r6, r3
90018ffa:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
90018ffe:	7b69      	ldrb	r1, [r5, #13]
90019000:	00cb      	lsls	r3, r1, #3
90019002:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019006:	7a2b      	ldrb	r3, [r5, #8]
90019008:	4313      	orrs	r3, r2
9001900a:	064a      	lsls	r2, r1, #25
9001900c:	bf44      	itt	mi
9001900e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90019012:	b21b      	sxthmi	r3, r3
90019014:	1bdb      	subs	r3, r3, r7
90019016:	e746      	b.n	90018ea6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
90019018:	2300      	movs	r3, #0
9001901a:	e7ba      	b.n	90018f92 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18a>
9001901c:	3fc00079 	.word	0x3fc00079

90019020 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90019020:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90019024:	4604      	mov	r4, r0
90019026:	b942      	cbnz	r2, 9001903a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90019028:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001902c:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
90019030:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
90019034:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
90019038:	e047      	b.n	900190ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001903a:	7b51      	ldrb	r1, [r2, #13]
9001903c:	8893      	ldrh	r3, [r2, #4]
9001903e:	010d      	lsls	r5, r1, #4
90019040:	f405 7080 	and.w	r0, r5, #256	@ 0x100
90019044:	79d5      	ldrb	r5, [r2, #7]
90019046:	4305      	orrs	r5, r0
90019048:	2d04      	cmp	r5, #4
9001904a:	bfcc      	ite	gt
9001904c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
90019050:	f04f 0e01 	movle.w	lr, #1
90019054:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
90019058:	f200 80ab 	bhi.w	900191b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
9001905c:	f240 60e7 	movw	r0, #1767	@ 0x6e7
90019060:	4283      	cmp	r3, r0
90019062:	d216      	bcs.n	90019092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019064:	f240 605b 	movw	r0, #1627	@ 0x65b
90019068:	4283      	cmp	r3, r0
9001906a:	d859      	bhi.n	90019120 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
9001906c:	f240 6057 	movw	r0, #1623	@ 0x657
90019070:	4283      	cmp	r3, r0
90019072:	d20e      	bcs.n	90019092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019074:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
90019078:	d24a      	bcs.n	90019110 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
9001907a:	f240 604e 	movw	r0, #1614	@ 0x64e
9001907e:	4283      	cmp	r3, r0
90019080:	d207      	bcs.n	90019092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019082:	f240 601a 	movw	r0, #1562	@ 0x61a
90019086:	4283      	cmp	r3, r0
90019088:	d02a      	beq.n	900190e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001908a:	d821      	bhi.n	900190d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
9001908c:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
90019090:	d35b      	bcc.n	9001914a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90019092:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
90019096:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001909a:	f040 80d0 	bne.w	9001923e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001909e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
900190a2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
900190a6:	f040 80ca 	bne.w	9001923e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
900190aa:	00cb      	lsls	r3, r1, #3
900190ac:	0649      	lsls	r1, r1, #25
900190ae:	f403 7080 	and.w	r0, r3, #256	@ 0x100
900190b2:	7a13      	ldrb	r3, [r2, #8]
900190b4:	ea43 0300 	orr.w	r3, r3, r0
900190b8:	bf44      	itt	mi
900190ba:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900190be:	b21b      	sxthmi	r3, r3
900190c0:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
900190c4:	1b5d      	subs	r5, r3, r5
900190c6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
900190ca:	4610      	mov	r0, r2
900190cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900190d0:	f240 604b 	movw	r0, #1611	@ 0x64b
900190d4:	4283      	cmp	r3, r0
900190d6:	d338      	bcc.n	9001914a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900190d8:	f240 604c 	movw	r0, #1612	@ 0x64c
900190dc:	4283      	cmp	r3, r0
900190de:	d9d8      	bls.n	90019092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900190e0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
900190e4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
900190e8:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
900190ec:	f040 80f3 	bne.w	900192d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
900190f0:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
900190f4:	f040 80ef 	bne.w	900192d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
900190f8:	00cb      	lsls	r3, r1, #3
900190fa:	064e      	lsls	r6, r1, #25
900190fc:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90019100:	7a13      	ldrb	r3, [r2, #8]
90019102:	ea43 0300 	orr.w	r3, r3, r0
90019106:	bf44      	itt	mi
90019108:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001910c:	b21b      	sxthmi	r3, r3
9001910e:	e7d9      	b.n	900190c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90019110:	f240 6054 	movw	r0, #1620	@ 0x654
90019114:	4283      	cmp	r3, r0
90019116:	d8e3      	bhi.n	900190e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019118:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001911c:	d9e0      	bls.n	900190e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001911e:	e7b8      	b.n	90019092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019120:	f240 6074 	movw	r0, #1652	@ 0x674
90019124:	4283      	cmp	r3, r0
90019126:	d0b4      	beq.n	90019092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019128:	d82d      	bhi.n	90019186 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
9001912a:	f240 605e 	movw	r0, #1630	@ 0x65e
9001912e:	4283      	cmp	r3, r0
90019130:	d804      	bhi.n	9001913c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
90019132:	f240 605d 	movw	r0, #1629	@ 0x65d
90019136:	4283      	cmp	r3, r0
90019138:	d3d2      	bcc.n	900190e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001913a:	e7aa      	b.n	90019092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001913c:	f240 605f 	movw	r0, #1631	@ 0x65f
90019140:	4283      	cmp	r3, r0
90019142:	d0cd      	beq.n	900190e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019144:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
90019148:	d0a3      	beq.n	90019092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001914a:	00cb      	lsls	r3, r1, #3
9001914c:	0649      	lsls	r1, r1, #25
9001914e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90019152:	7a13      	ldrb	r3, [r2, #8]
90019154:	ea43 0300 	orr.w	r3, r3, r0
90019158:	bf44      	itt	mi
9001915a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001915e:	b21b      	sxthmi	r3, r3
90019160:	1b5d      	subs	r5, r3, r5
90019162:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90019166:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001916a:	7b53      	ldrb	r3, [r2, #13]
9001916c:	015b      	lsls	r3, r3, #5
9001916e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90019172:	7993      	ldrb	r3, [r2, #6]
90019174:	430b      	orrs	r3, r1
90019176:	2105      	movs	r1, #5
90019178:	005b      	lsls	r3, r3, #1
9001917a:	fb93 f3f1 	sdiv	r3, r3, r1
9001917e:	f992 1009 	ldrsb.w	r1, [r2, #9]
90019182:	440b      	add	r3, r1
90019184:	e756      	b.n	90019034 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
90019186:	f240 60e2 	movw	r0, #1762	@ 0x6e2
9001918a:	4283      	cmp	r3, r0
9001918c:	d809      	bhi.n	900191a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
9001918e:	f240 60df 	movw	r0, #1759	@ 0x6df
90019192:	4283      	cmp	r3, r0
90019194:	f4bf af7d 	bcs.w	90019092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019198:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
9001919c:	2b05      	cmp	r3, #5
9001919e:	d8d4      	bhi.n	9001914a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900191a0:	e777      	b.n	90019092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900191a2:	f240 60e3 	movw	r0, #1763	@ 0x6e3
900191a6:	4283      	cmp	r3, r0
900191a8:	d09a      	beq.n	900190e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900191aa:	f240 60e4 	movw	r0, #1764	@ 0x6e4
900191ae:	4283      	cmp	r3, r0
900191b0:	e7ca      	b.n	90019148 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
900191b2:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
900191b6:	d22b      	bcs.n	90019210 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
900191b8:	f640 00ed 	movw	r0, #2285	@ 0x8ed
900191bc:	4283      	cmp	r3, r0
900191be:	d28f      	bcs.n	900190e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900191c0:	f640 00e5 	movw	r0, #2277	@ 0x8e5
900191c4:	4283      	cmp	r3, r0
900191c6:	d816      	bhi.n	900191f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
900191c8:	f640 00e4 	movw	r0, #2276	@ 0x8e4
900191cc:	4283      	cmp	r3, r0
900191ce:	f4bf af60 	bcs.w	90019092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900191d2:	f240 60ec 	movw	r0, #1772	@ 0x6ec
900191d6:	4283      	cmp	r3, r0
900191d8:	d80a      	bhi.n	900191f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
900191da:	f240 60eb 	movw	r0, #1771	@ 0x6eb
900191de:	4283      	cmp	r3, r0
900191e0:	f4bf af57 	bcs.w	90019092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900191e4:	f240 60ea 	movw	r0, #1770	@ 0x6ea
900191e8:	4283      	cmp	r3, r0
900191ea:	f43f af79 	beq.w	900190e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900191ee:	e7ac      	b.n	9001914a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900191f0:	f240 60ed 	movw	r0, #1773	@ 0x6ed
900191f4:	e7f8      	b.n	900191e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
900191f6:	f640 00e8 	movw	r0, #2280	@ 0x8e8
900191fa:	4283      	cmp	r3, r0
900191fc:	d802      	bhi.n	90019204 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
900191fe:	f640 00e7 	movw	r0, #2279	@ 0x8e7
90019202:	e798      	b.n	90019136 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90019204:	f640 00e9 	movw	r0, #2281	@ 0x8e9
90019208:	4283      	cmp	r3, r0
9001920a:	f47f af42 	bne.w	90019092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001920e:	e767      	b.n	900190e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019210:	f640 00f6 	movw	r0, #2294	@ 0x8f6
90019214:	4283      	cmp	r3, r0
90019216:	f43f af63 	beq.w	900190e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001921a:	d802      	bhi.n	90019222 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
9001921c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
90019220:	e7f2      	b.n	90019208 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
90019222:	f640 00fa 	movw	r0, #2298	@ 0x8fa
90019226:	4283      	cmp	r3, r0
90019228:	d805      	bhi.n	90019236 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
9001922a:	f640 00f9 	movw	r0, #2297	@ 0x8f9
9001922e:	4283      	cmp	r3, r0
90019230:	f4ff af2f 	bcc.w	90019092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90019234:	e754      	b.n	900190e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90019236:	f640 00fe 	movw	r0, #2302	@ 0x8fe
9001923a:	4283      	cmp	r3, r0
9001923c:	e7af      	b.n	9001919e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
9001923e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90019242:	4617      	mov	r7, r2
90019244:	f102 0808 	add.w	r8, r2, #8
90019248:	4666      	mov	r6, ip
9001924a:	6838      	ldr	r0, [r7, #0]
9001924c:	3708      	adds	r7, #8
9001924e:	f857 1c04 	ldr.w	r1, [r7, #-4]
90019252:	46e6      	mov	lr, ip
90019254:	4547      	cmp	r7, r8
90019256:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001925a:	46f4      	mov	ip, lr
9001925c:	d1f5      	bne.n	9001924a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
9001925e:	6838      	ldr	r0, [r7, #0]
90019260:	f8ce 0000 	str.w	r0, [lr]
90019264:	88b9      	ldrh	r1, [r7, #4]
90019266:	f8ae 1004 	strh.w	r1, [lr, #4]
9001926a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
9001926e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90019272:	d009      	beq.n	90019288 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
90019274:	7b51      	ldrb	r1, [r2, #13]
90019276:	7992      	ldrb	r2, [r2, #6]
90019278:	0149      	lsls	r1, r1, #5
9001927a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001927e:	4311      	orrs	r1, r2
90019280:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90019284:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90019288:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001928c:	b2ad      	uxth	r5, r5
9001928e:	d00d      	beq.n	900192ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90019290:	442b      	add	r3, r5
90019292:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90019296:	b29b      	uxth	r3, r3
90019298:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001929c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
900192a0:	10db      	asrs	r3, r3, #3
900192a2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
900192a6:	4313      	orrs	r3, r2
900192a8:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
900192ac:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
900192b0:	00cb      	lsls	r3, r1, #3
900192b2:	064f      	lsls	r7, r1, #25
900192b4:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900192b8:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
900192bc:	ea43 0302 	orr.w	r3, r3, r2
900192c0:	bf44      	itt	mi
900192c2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900192c6:	b21b      	sxthmi	r3, r3
900192c8:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
900192cc:	1b5b      	subs	r3, r3, r5
900192ce:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
900192d2:	4632      	mov	r2, r6
900192d4:	e6f9      	b.n	900190ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
900192d6:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
900192da:	4617      	mov	r7, r2
900192dc:	f102 0908 	add.w	r9, r2, #8
900192e0:	4666      	mov	r6, ip
900192e2:	6838      	ldr	r0, [r7, #0]
900192e4:	3708      	adds	r7, #8
900192e6:	f857 1c04 	ldr.w	r1, [r7, #-4]
900192ea:	46e0      	mov	r8, ip
900192ec:	454f      	cmp	r7, r9
900192ee:	e8a8 0003 	stmia.w	r8!, {r0, r1}
900192f2:	46c4      	mov	ip, r8
900192f4:	d1f5      	bne.n	900192e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
900192f6:	6838      	ldr	r0, [r7, #0]
900192f8:	f8c8 0000 	str.w	r0, [r8]
900192fc:	88b9      	ldrh	r1, [r7, #4]
900192fe:	f8a8 1004 	strh.w	r1, [r8, #4]
90019302:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90019306:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001930a:	d009      	beq.n	90019320 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
9001930c:	7b51      	ldrb	r1, [r2, #13]
9001930e:	7992      	ldrb	r2, [r2, #6]
90019310:	0149      	lsls	r1, r1, #5
90019312:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90019316:	4311      	orrs	r1, r2
90019318:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001931c:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90019320:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90019324:	d00e      	beq.n	90019344 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
90019326:	eba3 030e 	sub.w	r3, r3, lr
9001932a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001932e:	b29b      	uxth	r3, r3
90019330:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90019334:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90019338:	10db      	asrs	r3, r3, #3
9001933a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001933e:	4313      	orrs	r3, r2
90019340:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90019344:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90019348:	00cb      	lsls	r3, r1, #3
9001934a:	0648      	lsls	r0, r1, #25
9001934c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90019350:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90019354:	ea43 0302 	orr.w	r3, r3, r2
90019358:	bf44      	itt	mi
9001935a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001935e:	b21b      	sxthmi	r3, r3
90019360:	1b5d      	subs	r5, r3, r5
90019362:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90019366:	e7b4      	b.n	900192d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90019368 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90019368:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001936c:	461e      	mov	r6, r3
9001936e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90019370:	4604      	mov	r4, r0
90019372:	4617      	mov	r7, r2
90019374:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90019378:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001937c:	f7ec f9d4 	bl	90005728 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90019380:	4605      	mov	r5, r0
90019382:	b918      	cbnz	r0, 9001938c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
90019384:	6030      	str	r0, [r6, #0]
90019386:	4628      	mov	r0, r5
90019388:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001938c:	683b      	ldr	r3, [r7, #0]
9001938e:	4601      	mov	r1, r0
90019390:	4638      	mov	r0, r7
90019392:	68db      	ldr	r3, [r3, #12]
90019394:	4798      	blx	r3
90019396:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
9001939a:	4602      	mov	r2, r0
9001939c:	6030      	str	r0, [r6, #0]
9001939e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
900193a2:	d213      	bcs.n	900193cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
900193a4:	4643      	mov	r3, r8
900193a6:	4639      	mov	r1, r7
900193a8:	4620      	mov	r0, r4
900193aa:	f7ff fe39 	bl	90019020 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
900193ae:	6030      	str	r0, [r6, #0]
900193b0:	6833      	ldr	r3, [r6, #0]
900193b2:	b143      	cbz	r3, 900193c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
900193b4:	7b5a      	ldrb	r2, [r3, #13]
900193b6:	7a9b      	ldrb	r3, [r3, #10]
900193b8:	0052      	lsls	r2, r2, #1
900193ba:	f402 7280 	and.w	r2, r2, #256	@ 0x100
900193be:	4313      	orrs	r3, r2
900193c0:	bf0c      	ite	eq
900193c2:	2301      	moveq	r3, #1
900193c4:	2300      	movne	r3, #0
900193c6:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
900193ca:	e7dc      	b.n	90019386 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
900193cc:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
900193d0:	b29b      	uxth	r3, r3
900193d2:	2b7f      	cmp	r3, #127	@ 0x7f
900193d4:	d804      	bhi.n	900193e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
900193d6:	4639      	mov	r1, r7
900193d8:	4620      	mov	r0, r4
900193da:	f7ff fd15 	bl	90018e08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
900193de:	e7e6      	b.n	900193ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
900193e0:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
900193e4:	2b00      	cmp	r3, #0
900193e6:	d0e3      	beq.n	900193b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
900193e8:	f640 1302 	movw	r3, #2306	@ 0x902
900193ec:	429d      	cmp	r5, r3
900193ee:	d1df      	bne.n	900193b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
900193f0:	4601      	mov	r1, r0
900193f2:	4620      	mov	r0, r4
900193f4:	f7ff fcd9 	bl	90018daa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
900193f8:	e7d9      	b.n	900193ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

900193fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
900193fa:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900193fe:	461e      	mov	r6, r3
90019400:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90019402:	4604      	mov	r4, r0
90019404:	4617      	mov	r7, r2
90019406:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001940a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001940e:	f7ec f98b 	bl	90005728 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90019412:	4605      	mov	r5, r0
90019414:	b918      	cbnz	r0, 9001941e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
90019416:	6030      	str	r0, [r6, #0]
90019418:	4628      	mov	r0, r5
9001941a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001941e:	683b      	ldr	r3, [r7, #0]
90019420:	4601      	mov	r1, r0
90019422:	4638      	mov	r0, r7
90019424:	f8d3 9008 	ldr.w	r9, [r3, #8]
90019428:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
9001942c:	47c8      	blx	r9
9001942e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90019432:	4602      	mov	r2, r0
90019434:	6030      	str	r0, [r6, #0]
90019436:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
9001943a:	d213      	bcs.n	90019464 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
9001943c:	4643      	mov	r3, r8
9001943e:	4639      	mov	r1, r7
90019440:	4620      	mov	r0, r4
90019442:	f7ff fded 	bl	90019020 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90019446:	6030      	str	r0, [r6, #0]
90019448:	6833      	ldr	r3, [r6, #0]
9001944a:	b143      	cbz	r3, 9001945e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
9001944c:	7b5a      	ldrb	r2, [r3, #13]
9001944e:	7a9b      	ldrb	r3, [r3, #10]
90019450:	0052      	lsls	r2, r2, #1
90019452:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90019456:	4313      	orrs	r3, r2
90019458:	bf0c      	ite	eq
9001945a:	2301      	moveq	r3, #1
9001945c:	2300      	movne	r3, #0
9001945e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90019462:	e7d9      	b.n	90019418 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
90019464:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90019468:	b29b      	uxth	r3, r3
9001946a:	2b7f      	cmp	r3, #127	@ 0x7f
9001946c:	d804      	bhi.n	90019478 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
9001946e:	4639      	mov	r1, r7
90019470:	4620      	mov	r0, r4
90019472:	f7ff fcc9 	bl	90018e08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90019476:	e7e6      	b.n	90019446 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
90019478:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001947c:	2b00      	cmp	r3, #0
9001947e:	d0e3      	beq.n	90019448 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90019480:	f640 1302 	movw	r3, #2306	@ 0x902
90019484:	429d      	cmp	r5, r3
90019486:	d1df      	bne.n	90019448 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90019488:	4601      	mov	r1, r0
9001948a:	4620      	mov	r0, r4
9001948c:	f7ff fc8d 	bl	90018daa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90019490:	e7d9      	b.n	90019446 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

90019492 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
90019492:	b510      	push	{r4, lr}
90019494:	4604      	mov	r4, r0
90019496:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
9001949a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001949c:	b1e1      	cbz	r1, 900194d8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001949e:	2b0a      	cmp	r3, #10
900194a0:	d02d      	beq.n	900194fe <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
900194a2:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
900194a4:	3901      	subs	r1, #1
900194a6:	eb04 0042 	add.w	r0, r4, r2, lsl #1
900194aa:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
900194ac:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
900194b0:	1c51      	adds	r1, r2, #1
900194b2:	b289      	uxth	r1, r1
900194b4:	2901      	cmp	r1, #1
900194b6:	bf8a      	itet	hi
900194b8:	f102 32ff 	addhi.w	r2, r2, #4294967295
900194bc:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
900194be:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
900194c0:	1c5a      	adds	r2, r3, #1
900194c2:	8722      	strh	r2, [r4, #56]	@ 0x38
900194c4:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
900194c6:	4413      	add	r3, r2
900194c8:	b29b      	uxth	r3, r3
900194ca:	2b09      	cmp	r3, #9
900194cc:	bf88      	it	hi
900194ce:	3b0a      	subhi	r3, #10
900194d0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900194d4:	8458      	strh	r0, [r3, #34]	@ 0x22
900194d6:	e7de      	b.n	90019496 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
900194d8:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
900194da:	2b0a      	cmp	r3, #10
900194dc:	d00f      	beq.n	900194fe <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
900194de:	4620      	mov	r0, r4
900194e0:	f7ff fc11 	bl	90018d06 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
900194e4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
900194e6:	1c5a      	adds	r2, r3, #1
900194e8:	8722      	strh	r2, [r4, #56]	@ 0x38
900194ea:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
900194ec:	4413      	add	r3, r2
900194ee:	b29b      	uxth	r3, r3
900194f0:	2b09      	cmp	r3, #9
900194f2:	bf88      	it	hi
900194f4:	3b0a      	subhi	r3, #10
900194f6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900194fa:	8458      	strh	r0, [r3, #34]	@ 0x22
900194fc:	e7ec      	b.n	900194d8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
900194fe:	bd10      	pop	{r4, pc}

90019500 <_ZN8touchgfx12TextProvider11getNextCharEv>:
90019500:	b538      	push	{r3, r4, r5, lr}
90019502:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90019504:	4604      	mov	r4, r0
90019506:	eb00 0243 	add.w	r2, r0, r3, lsl #1
9001950a:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
9001950c:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
9001950e:	3a01      	subs	r2, #1
90019510:	8702      	strh	r2, [r0, #56]	@ 0x38
90019512:	1c5a      	adds	r2, r3, #1
90019514:	b292      	uxth	r2, r2
90019516:	2a09      	cmp	r2, #9
90019518:	bf8a      	itet	hi
9001951a:	3b09      	subhi	r3, #9
9001951c:	86c2      	strhls	r2, [r0, #54]	@ 0x36
9001951e:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
90019520:	f7ff ffb7 	bl	90019492 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
90019524:	8c23      	ldrh	r3, [r4, #32]
90019526:	2b01      	cmp	r3, #1
90019528:	bf9c      	itt	ls
9001952a:	3301      	addls	r3, #1
9001952c:	8423      	strhls	r3, [r4, #32]
9001952e:	8be3      	ldrh	r3, [r4, #30]
90019530:	b90b      	cbnz	r3, 90019536 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
90019532:	2302      	movs	r3, #2
90019534:	83e3      	strh	r3, [r4, #30]
90019536:	8be3      	ldrh	r3, [r4, #30]
90019538:	4628      	mov	r0, r5
9001953a:	3b01      	subs	r3, #1
9001953c:	b29b      	uxth	r3, r3
9001953e:	83e3      	strh	r3, [r4, #30]
90019540:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019544:	8365      	strh	r5, [r4, #26]
90019546:	bd38      	pop	{r3, r4, r5, pc}

90019548 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90019548:	428a      	cmp	r2, r1
9001954a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001954e:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
90019550:	d932      	bls.n	900195b8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
90019552:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
90019554:	1a54      	subs	r4, r2, r1
90019556:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
9001955a:	19ee      	adds	r6, r5, r7
9001955c:	fa1f fe84 	uxth.w	lr, r4
90019560:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
90019564:	3e01      	subs	r6, #1
90019566:	b2b4      	uxth	r4, r6
90019568:	eba4 090e 	sub.w	r9, r4, lr
9001956c:	fa1f f989 	uxth.w	r9, r9
90019570:	2c09      	cmp	r4, #9
90019572:	4626      	mov	r6, r4
90019574:	bf88      	it	hi
90019576:	f1a4 060a 	subhi.w	r6, r4, #10
9001957a:	f1bc 0f00 	cmp.w	ip, #0
9001957e:	f104 34ff 	add.w	r4, r4, #4294967295
90019582:	bf08      	it	eq
90019584:	f04f 0c02 	moveq.w	ip, #2
90019588:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001958c:	b2a4      	uxth	r4, r4
9001958e:	f10c 3cff 	add.w	ip, ip, #4294967295
90019592:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
90019596:	454c      	cmp	r4, r9
90019598:	fa1f fc8c 	uxth.w	ip, ip
9001959c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
900195a0:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
900195a4:	d1e4      	bne.n	90019570 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
900195a6:	eba5 050e 	sub.w	r5, r5, lr
900195aa:	eb0e 0408 	add.w	r4, lr, r8
900195ae:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
900195b2:	8705      	strh	r5, [r0, #56]	@ 0x38
900195b4:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
900195b8:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
900195ba:	250a      	movs	r5, #10
900195bc:	1a64      	subs	r4, r4, r1
900195be:	4439      	add	r1, r7
900195c0:	b289      	uxth	r1, r1
900195c2:	8704      	strh	r4, [r0, #56]	@ 0x38
900195c4:	2909      	cmp	r1, #9
900195c6:	bf88      	it	hi
900195c8:	390a      	subhi	r1, #10
900195ca:	86c1      	strh	r1, [r0, #54]	@ 0x36
900195cc:	b18a      	cbz	r2, 900195f2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
900195ce:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
900195d0:	3a01      	subs	r2, #1
900195d2:	3101      	adds	r1, #1
900195d4:	b292      	uxth	r2, r2
900195d6:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
900195da:	8701      	strh	r1, [r0, #56]	@ 0x38
900195dc:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
900195de:	b901      	cbnz	r1, 900195e2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
900195e0:	86c5      	strh	r5, [r0, #54]	@ 0x36
900195e2:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
900195e4:	3901      	subs	r1, #1
900195e6:	b289      	uxth	r1, r1
900195e8:	86c1      	strh	r1, [r0, #54]	@ 0x36
900195ea:	eb00 0141 	add.w	r1, r0, r1, lsl #1
900195ee:	844c      	strh	r4, [r1, #34]	@ 0x22
900195f0:	e7ec      	b.n	900195cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
900195f2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900195f6:	f7ff bf4c 	b.w	90019492 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900195fa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
900195fa:	b570      	push	{r4, r5, r6, lr}
900195fc:	2500      	movs	r5, #0
900195fe:	4295      	cmp	r5, r2
90019600:	d011      	beq.n	90019626 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
90019602:	8bc4      	ldrh	r4, [r0, #30]
90019604:	f831 6b02 	ldrh.w	r6, [r1], #2
90019608:	4414      	add	r4, r2
9001960a:	3c01      	subs	r4, #1
9001960c:	1b64      	subs	r4, r4, r5
9001960e:	b2a4      	uxth	r4, r4
90019610:	2c01      	cmp	r4, #1
90019612:	bf88      	it	hi
90019614:	3c02      	subhi	r4, #2
90019616:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001961a:	8b64      	ldrh	r4, [r4, #26]
9001961c:	42b4      	cmp	r4, r6
9001961e:	d117      	bne.n	90019650 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
90019620:	3501      	adds	r5, #1
90019622:	b2ad      	uxth	r5, r5
90019624:	e7eb      	b.n	900195fe <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
90019626:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001962a:	2400      	movs	r4, #0
9001962c:	4413      	add	r3, r2
9001962e:	b2a2      	uxth	r2, r4
90019630:	429a      	cmp	r2, r3
90019632:	da0f      	bge.n	90019654 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
90019634:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
90019636:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
9001963a:	3401      	adds	r4, #1
9001963c:	4432      	add	r2, r6
9001963e:	b292      	uxth	r2, r2
90019640:	2a09      	cmp	r2, #9
90019642:	bf88      	it	hi
90019644:	3a0a      	subhi	r2, #10
90019646:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001964a:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
9001964c:	42aa      	cmp	r2, r5
9001964e:	d0ee      	beq.n	9001962e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90019650:	2000      	movs	r0, #0
90019652:	bd70      	pop	{r4, r5, r6, pc}
90019654:	2001      	movs	r0, #1
90019656:	e7fc      	b.n	90019652 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

90019658 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
90019658:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001965c:	4605      	mov	r5, r0
9001965e:	4616      	mov	r6, r2
90019660:	1c8c      	adds	r4, r1, #2
90019662:	8809      	ldrh	r1, [r1, #0]
90019664:	ea4f 3a11 	mov.w	sl, r1, lsr #12
90019668:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
9001966c:	42b3      	cmp	r3, r6
9001966e:	d124      	bne.n	900196ba <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
90019670:	f3c1 2903 	ubfx	r9, r1, #8, #4
90019674:	f3c1 1803 	ubfx	r8, r1, #4, #4
90019678:	f001 070f 	and.w	r7, r1, #15
9001967c:	4652      	mov	r2, sl
9001967e:	f8cd 8000 	str.w	r8, [sp]
90019682:	464b      	mov	r3, r9
90019684:	4621      	mov	r1, r4
90019686:	4628      	mov	r0, r5
90019688:	f7ff ffb7 	bl	900195fa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
9001968c:	4683      	mov	fp, r0
9001968e:	b168      	cbz	r0, 900196ac <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
90019690:	eb0a 0109 	add.w	r1, sl, r9
90019694:	463a      	mov	r2, r7
90019696:	4628      	mov	r0, r5
90019698:	4441      	add	r1, r8
9001969a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
9001969e:	4649      	mov	r1, r9
900196a0:	f7ff ff52 	bl	90019548 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
900196a4:	4658      	mov	r0, fp
900196a6:	b003      	add	sp, #12
900196a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900196ac:	eb07 010a 	add.w	r1, r7, sl
900196b0:	4449      	add	r1, r9
900196b2:	4441      	add	r1, r8
900196b4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
900196b8:	e7d2      	b.n	90019660 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
900196ba:	f04f 0b00 	mov.w	fp, #0
900196be:	e7f1      	b.n	900196a4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

900196c0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
900196c0:	b570      	push	{r4, r5, r6, lr}
900196c2:	8810      	ldrh	r0, [r2, #0]
900196c4:	4298      	cmp	r0, r3
900196c6:	d817      	bhi.n	900196f8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
900196c8:	1e48      	subs	r0, r1, #1
900196ca:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
900196ce:	4298      	cmp	r0, r3
900196d0:	d312      	bcc.n	900196f8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
900196d2:	2400      	movs	r4, #0
900196d4:	428c      	cmp	r4, r1
900196d6:	d20f      	bcs.n	900196f8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
900196d8:	1860      	adds	r0, r4, r1
900196da:	1040      	asrs	r0, r0, #1
900196dc:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
900196e0:	0085      	lsls	r5, r0, #2
900196e2:	42b3      	cmp	r3, r6
900196e4:	d902      	bls.n	900196ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
900196e6:	3001      	adds	r0, #1
900196e8:	b284      	uxth	r4, r0
900196ea:	e7f3      	b.n	900196d4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
900196ec:	d201      	bcs.n	900196f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
900196ee:	b281      	uxth	r1, r0
900196f0:	e7f0      	b.n	900196d4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
900196f2:	442a      	add	r2, r5
900196f4:	8850      	ldrh	r0, [r2, #2]
900196f6:	bd70      	pop	{r4, r5, r6, pc}
900196f8:	2000      	movs	r0, #0
900196fa:	e7fc      	b.n	900196f6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

900196fc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
900196fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019700:	6c45      	ldr	r5, [r0, #68]	@ 0x44
90019702:	4604      	mov	r4, r0
90019704:	260b      	movs	r6, #11
90019706:	886f      	ldrh	r7, [r5, #2]
90019708:	087f      	lsrs	r7, r7, #1
9001970a:	3e01      	subs	r6, #1
9001970c:	d013      	beq.n	90019736 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001970e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
90019710:	462a      	mov	r2, r5
90019712:	4639      	mov	r1, r7
90019714:	4620      	mov	r0, r4
90019716:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001971a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001971e:	4643      	mov	r3, r8
90019720:	f7ff ffce 	bl	900196c0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
90019724:	b138      	cbz	r0, 90019736 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90019726:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001972a:	4642      	mov	r2, r8
9001972c:	4620      	mov	r0, r4
9001972e:	f7ff ff93 	bl	90019658 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
90019732:	2800      	cmp	r0, #0
90019734:	d1e9      	bne.n	9001970a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
90019736:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001973c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001973c:	b570      	push	{r4, r5, r6, lr}
9001973e:	694a      	ldr	r2, [r1, #20]
90019740:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90019742:	684b      	ldr	r3, [r1, #4]
90019744:	1b54      	subs	r4, r2, r5
90019746:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
90019748:	f000 8106 	beq.w	90019958 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001974c:	1b9b      	subs	r3, r3, r6
9001974e:	d003      	beq.n	90019758 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90019750:	4363      	muls	r3, r4
90019752:	2210      	movs	r2, #16
90019754:	fb93 f3f2 	sdiv	r3, r3, r2
90019758:	680c      	ldr	r4, [r1, #0]
9001975a:	698a      	ldr	r2, [r1, #24]
9001975c:	1b65      	subs	r5, r4, r5
9001975e:	f000 80fd 	beq.w	9001995c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
90019762:	1b92      	subs	r2, r2, r6
90019764:	d003      	beq.n	9001976e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90019766:	436a      	muls	r2, r5
90019768:	2410      	movs	r4, #16
9001976a:	fb92 f2f4 	sdiv	r2, r2, r4
9001976e:	1a9b      	subs	r3, r3, r2
90019770:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 90019998 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
90019774:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90019778:	460a      	mov	r2, r1
9001977a:	ee07 3a90 	vmov	s15, r3
9001977e:	f100 040c 	add.w	r4, r0, #12
90019782:	4603      	mov	r3, r0
90019784:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019788:	ee67 7a84 	vmul.f32	s15, s15, s8
9001978c:	ee87 3a27 	vdiv.f32	s6, s14, s15
90019790:	eeb1 6a43 	vneg.f32	s12, s6
90019794:	edd2 7a02 	vldr	s15, [r2, #8]
90019798:	3214      	adds	r2, #20
9001979a:	eec7 6a27 	vdiv.f32	s13, s14, s15
9001979e:	ece3 6a01 	vstmia	r3!, {s13}
900197a2:	429c      	cmp	r4, r3
900197a4:	ed52 7a02 	vldr	s15, [r2, #-8]
900197a8:	ee67 7aa6 	vmul.f32	s15, s15, s13
900197ac:	edc3 7a02 	vstr	s15, [r3, #8]
900197b0:	ed52 7a01 	vldr	s15, [r2, #-4]
900197b4:	ee67 7aa6 	vmul.f32	s15, s15, s13
900197b8:	edc3 7a05 	vstr	s15, [r3, #20]
900197bc:	d1ea      	bne.n	90019794 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
900197be:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
900197c0:	698b      	ldr	r3, [r1, #24]
900197c2:	edd0 4a02 	vldr	s9, [r0, #8]
900197c6:	1a9b      	subs	r3, r3, r2
900197c8:	edd0 3a00 	vldr	s7, [r0]
900197cc:	edd0 6a01 	vldr	s13, [r0, #4]
900197d0:	ee07 3a90 	vmov	s15, r3
900197d4:	684b      	ldr	r3, [r1, #4]
900197d6:	ee76 6ae4 	vsub.f32	s13, s13, s9
900197da:	ed90 5a05 	vldr	s10, [r0, #20]
900197de:	1a9b      	subs	r3, r3, r2
900197e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900197e4:	ee73 4ae4 	vsub.f32	s9, s7, s9
900197e8:	ed90 2a03 	vldr	s4, [r0, #12]
900197ec:	ee07 3a10 	vmov	s14, r3
900197f0:	edd0 5a04 	vldr	s11, [r0, #16]
900197f4:	ee67 7a84 	vmul.f32	s15, s15, s8
900197f8:	ed90 1a07 	vldr	s2, [r0, #28]
900197fc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019800:	edd0 2a06 	vldr	s5, [r0, #24]
90019804:	ee75 5ac5 	vsub.f32	s11, s11, s10
90019808:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001980c:	ee27 7a04 	vmul.f32	s14, s14, s8
90019810:	ee32 5a45 	vsub.f32	s10, s4, s10
90019814:	eee6 7a87 	vfma.f32	s15, s13, s14
90019818:	ee67 7a83 	vmul.f32	s15, s15, s6
9001981c:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
90019820:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90019822:	694a      	ldr	r2, [r1, #20]
90019824:	1b13      	subs	r3, r2, r4
90019826:	ee07 3a10 	vmov	s14, r3
9001982a:	680b      	ldr	r3, [r1, #0]
9001982c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019830:	1b1b      	subs	r3, r3, r4
90019832:	ee27 7a04 	vmul.f32	s14, s14, s8
90019836:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001983a:	ee07 3a10 	vmov	s14, r3
9001983e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019842:	ee27 7a04 	vmul.f32	s14, s14, s8
90019846:	eee6 4a87 	vfma.f32	s9, s13, s14
9001984a:	ee64 4a86 	vmul.f32	s9, s9, s12
9001984e:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
90019852:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90019854:	698b      	ldr	r3, [r1, #24]
90019856:	1a9b      	subs	r3, r3, r2
90019858:	ee06 3a90 	vmov	s13, r3
9001985c:	684b      	ldr	r3, [r1, #4]
9001985e:	1a9b      	subs	r3, r3, r2
90019860:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90019864:	ee07 3a10 	vmov	s14, r3
90019868:	ee66 6a84 	vmul.f32	s13, s13, s8
9001986c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019870:	ee65 6a66 	vnmul.f32	s13, s10, s13
90019874:	ee27 7a04 	vmul.f32	s14, s14, s8
90019878:	eee5 6a87 	vfma.f32	s13, s11, s14
9001987c:	ee66 6a83 	vmul.f32	s13, s13, s6
90019880:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
90019884:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90019886:	694a      	ldr	r2, [r1, #20]
90019888:	1b13      	subs	r3, r2, r4
9001988a:	ee07 3a10 	vmov	s14, r3
9001988e:	680b      	ldr	r3, [r1, #0]
90019890:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019894:	1b1b      	subs	r3, r3, r4
90019896:	ee27 7a04 	vmul.f32	s14, s14, s8
9001989a:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001989e:	ee07 3a10 	vmov	s14, r3
900198a2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900198a6:	ee27 7a04 	vmul.f32	s14, s14, s8
900198aa:	eea5 5a87 	vfma.f32	s10, s11, s14
900198ae:	edd0 5a08 	vldr	s11, [r0, #32]
900198b2:	ee31 1a65 	vsub.f32	s2, s2, s11
900198b6:	ee72 5ae5 	vsub.f32	s11, s5, s11
900198ba:	ee25 5a06 	vmul.f32	s10, s10, s12
900198be:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
900198c2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
900198c4:	698b      	ldr	r3, [r1, #24]
900198c6:	1a9b      	subs	r3, r3, r2
900198c8:	ee07 3a10 	vmov	s14, r3
900198cc:	684b      	ldr	r3, [r1, #4]
900198ce:	1a9b      	subs	r3, r3, r2
900198d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900198d4:	ee01 3a90 	vmov	s3, r3
900198d8:	ee27 7a04 	vmul.f32	s14, s14, s8
900198dc:	eef8 1ae1 	vcvt.f32.s32	s3, s3
900198e0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
900198e4:	ee61 1a84 	vmul.f32	s3, s3, s8
900198e8:	eea1 7a21 	vfma.f32	s14, s2, s3
900198ec:	ee27 7a03 	vmul.f32	s14, s14, s6
900198f0:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
900198f4:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
900198f6:	694a      	ldr	r2, [r1, #20]
900198f8:	1b13      	subs	r3, r2, r4
900198fa:	ee03 3a10 	vmov	s6, r3
900198fe:	680b      	ldr	r3, [r1, #0]
90019900:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90019904:	1b1b      	subs	r3, r3, r4
90019906:	ee23 3a04 	vmul.f32	s6, s6, s8
9001990a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001990e:	ee03 3a10 	vmov	s6, r3
90019912:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90019916:	ee23 4a04 	vmul.f32	s8, s6, s8
9001991a:	eee1 5a04 	vfma.f32	s11, s2, s8
9001991e:	ee25 6a86 	vmul.f32	s12, s11, s12
90019922:	ee62 5a67 	vnmul.f32	s11, s4, s15
90019926:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
9001992a:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001992e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
90019932:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019936:	dd13      	ble.n	90019960 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
90019938:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001993c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
90019940:	63c3      	str	r3, [r0, #60]	@ 0x3c
90019942:	eee3 7a87 	vfma.f32	s15, s7, s14
90019946:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001994a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001994e:	dd15      	ble.n	9001997c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
90019950:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
90019954:	6403      	str	r3, [r0, #64]	@ 0x40
90019956:	bd70      	pop	{r4, r5, r6, pc}
90019958:	4623      	mov	r3, r4
9001995a:	e6fd      	b.n	90019758 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001995c:	462a      	mov	r2, r5
9001995e:	e706      	b.n	9001976e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90019960:	d502      	bpl.n	90019968 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
90019962:	f647 73ff 	movw	r3, #32767	@ 0x7fff
90019966:	e7e9      	b.n	9001993c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
90019968:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001996c:	eea3 2a85 	vfma.f32	s4, s7, s10
90019970:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
90019974:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019978:	dade      	bge.n	90019938 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001997a:	e7f2      	b.n	90019962 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001997c:	d502      	bpl.n	90019984 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001997e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
90019982:	e7e7      	b.n	90019954 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
90019984:	ee62 4ae4 	vnmul.f32	s9, s5, s9
90019988:	eee3 4a86 	vfma.f32	s9, s7, s12
9001998c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
90019990:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019994:	dadc      	bge.n	90019950 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
90019996:	e7f2      	b.n	9001997e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
90019998:	3d800000 	.word	0x3d800000

9001999c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001999c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900199a0:	2714      	movs	r7, #20
900199a2:	435f      	muls	r7, r3
900199a4:	eb02 0c07 	add.w	ip, r2, r7
900199a8:	f8dc 5004 	ldr.w	r5, [ip, #4]
900199ac:	f115 0e0f 	adds.w	lr, r5, #15
900199b0:	f100 80a2 	bmi.w	90019af8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
900199b4:	ea4f 1e2e 	mov.w	lr, lr, asr #4
900199b8:	9c08      	ldr	r4, [sp, #32]
900199ba:	2614      	movs	r6, #20
900199bc:	f8c0 e014 	str.w	lr, [r0, #20]
900199c0:	4366      	muls	r6, r4
900199c2:	eb02 0806 	add.w	r8, r2, r6
900199c6:	f8d8 5004 	ldr.w	r5, [r8, #4]
900199ca:	f115 040f 	adds.w	r4, r5, #15
900199ce:	f100 809f 	bmi.w	90019b10 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
900199d2:	1124      	asrs	r4, r4, #4
900199d4:	eba4 040e 	sub.w	r4, r4, lr
900199d8:	6184      	str	r4, [r0, #24]
900199da:	2c00      	cmp	r4, #0
900199dc:	f000 808a 	beq.w	90019af4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
900199e0:	f8dc 9004 	ldr.w	r9, [ip, #4]
900199e4:	f8d8 4004 	ldr.w	r4, [r8, #4]
900199e8:	5995      	ldr	r5, [r2, r6]
900199ea:	eba4 0809 	sub.w	r8, r4, r9
900199ee:	59d4      	ldr	r4, [r2, r7]
900199f0:	eba5 0a04 	sub.w	sl, r5, r4
900199f4:	ea4f 1608 	mov.w	r6, r8, lsl #4
900199f8:	ea4f 150a 	mov.w	r5, sl, lsl #4
900199fc:	fb0e fe05 	mul.w	lr, lr, r5
90019a00:	fb0a ee19 	mls	lr, sl, r9, lr
90019a04:	fb08 e404 	mla	r4, r8, r4, lr
90019a08:	3c01      	subs	r4, #1
90019a0a:	19a4      	adds	r4, r4, r6
90019a0c:	f100 808c 	bmi.w	90019b28 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
90019a10:	fb94 fef6 	sdiv	lr, r4, r6
90019a14:	fb06 441e 	mls	r4, r6, lr, r4
90019a18:	f8c0 e000 	str.w	lr, [r0]
90019a1c:	6104      	str	r4, [r0, #16]
90019a1e:	2d00      	cmp	r5, #0
90019a20:	f2c0 8095 	blt.w	90019b4e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
90019a24:	fb95 f4f6 	sdiv	r4, r5, r6
90019a28:	fb06 5514 	mls	r5, r6, r4, r5
90019a2c:	6044      	str	r4, [r0, #4]
90019a2e:	6085      	str	r5, [r0, #8]
90019a30:	60c6      	str	r6, [r0, #12]
90019a32:	eb01 0383 	add.w	r3, r1, r3, lsl #2
90019a36:	f8dc 4004 	ldr.w	r4, [ip, #4]
90019a3a:	6945      	ldr	r5, [r0, #20]
90019a3c:	59d2      	ldr	r2, [r2, r7]
90019a3e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
90019a42:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 90019b70 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
90019a46:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
90019a4a:	ee07 4a10 	vmov	s14, r4
90019a4e:	6804      	ldr	r4, [r0, #0]
90019a50:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
90019a54:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019a58:	ee07 2a90 	vmov	s15, r2
90019a5c:	ee27 7a26 	vmul.f32	s14, s14, s13
90019a60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019a64:	ee67 7aa6 	vmul.f32	s15, s15, s13
90019a68:	edd3 6a00 	vldr	s13, [r3]
90019a6c:	eee6 6a07 	vfma.f32	s13, s12, s14
90019a70:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
90019a74:	eee6 6a27 	vfma.f32	s13, s12, s15
90019a78:	edc0 6a07 	vstr	s13, [r0, #28]
90019a7c:	edd0 6a01 	vldr	s13, [r0, #4]
90019a80:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
90019a84:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90019a88:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
90019a8c:	eea6 6aa5 	vfma.f32	s12, s13, s11
90019a90:	ed80 6a08 	vstr	s12, [r0, #32]
90019a94:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
90019a96:	6242      	str	r2, [r0, #36]	@ 0x24
90019a98:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
90019a9c:	ed93 6a03 	vldr	s12, [r3, #12]
90019aa0:	eea5 6a87 	vfma.f32	s12, s11, s14
90019aa4:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
90019aa8:	eea5 6aa7 	vfma.f32	s12, s11, s15
90019aac:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
90019ab0:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
90019ab4:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
90019ab8:	eea6 6aa5 	vfma.f32	s12, s13, s11
90019abc:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
90019ac0:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90019ac2:	6302      	str	r2, [r0, #48]	@ 0x30
90019ac4:	ed93 6a06 	vldr	s12, [r3, #24]
90019ac8:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
90019acc:	eea5 6a87 	vfma.f32	s12, s11, s14
90019ad0:	eeb0 7a46 	vmov.f32	s14, s12
90019ad4:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
90019ad8:	eea6 7a27 	vfma.f32	s14, s12, s15
90019adc:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
90019ae0:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
90019ae4:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
90019ae8:	eee6 7a87 	vfma.f32	s15, s13, s14
90019aec:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
90019af0:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
90019af2:	63c3      	str	r3, [r0, #60]	@ 0x3c
90019af4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90019af8:	2410      	movs	r4, #16
90019afa:	f1c5 0501 	rsb	r5, r5, #1
90019afe:	fb9e fef4 	sdiv	lr, lr, r4
90019b02:	f015 050f 	ands.w	r5, r5, #15
90019b06:	bf18      	it	ne
90019b08:	2501      	movne	r5, #1
90019b0a:	ebae 0e05 	sub.w	lr, lr, r5
90019b0e:	e753      	b.n	900199b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
90019b10:	f04f 0910 	mov.w	r9, #16
90019b14:	f1c5 0501 	rsb	r5, r5, #1
90019b18:	fb94 f4f9 	sdiv	r4, r4, r9
90019b1c:	f015 050f 	ands.w	r5, r5, #15
90019b20:	bf18      	it	ne
90019b22:	2501      	movne	r5, #1
90019b24:	1b64      	subs	r4, r4, r5
90019b26:	e755      	b.n	900199d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
90019b28:	4264      	negs	r4, r4
90019b2a:	fb94 fef6 	sdiv	lr, r4, r6
90019b2e:	f1ce 0800 	rsb	r8, lr, #0
90019b32:	fb06 441e 	mls	r4, r6, lr, r4
90019b36:	f8c0 8000 	str.w	r8, [r0]
90019b3a:	6104      	str	r4, [r0, #16]
90019b3c:	2c00      	cmp	r4, #0
90019b3e:	f43f af6e 	beq.w	90019a1e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
90019b42:	ea6f 0e0e 	mvn.w	lr, lr
90019b46:	1b34      	subs	r4, r6, r4
90019b48:	f8c0 e000 	str.w	lr, [r0]
90019b4c:	e766      	b.n	90019a1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
90019b4e:	426d      	negs	r5, r5
90019b50:	fb95 f4f6 	sdiv	r4, r5, r6
90019b54:	f1c4 0e00 	rsb	lr, r4, #0
90019b58:	fb06 5514 	mls	r5, r6, r4, r5
90019b5c:	f8c0 e004 	str.w	lr, [r0, #4]
90019b60:	6085      	str	r5, [r0, #8]
90019b62:	2d00      	cmp	r5, #0
90019b64:	f43f af64 	beq.w	90019a30 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
90019b68:	43e4      	mvns	r4, r4
90019b6a:	1b75      	subs	r5, r6, r5
90019b6c:	6044      	str	r4, [r0, #4]
90019b6e:	e75e      	b.n	90019a2e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
90019b70:	3d800000 	.word	0x3d800000

90019b74 <_ZN8touchgfx7Unicode6strlenEPKt>:
90019b74:	4602      	mov	r2, r0
90019b76:	b148      	cbz	r0, 90019b8c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
90019b78:	2300      	movs	r3, #0
90019b7a:	b298      	uxth	r0, r3
90019b7c:	3301      	adds	r3, #1
90019b7e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
90019b82:	f831 1c02 	ldrh.w	r1, [r1, #-2]
90019b86:	2900      	cmp	r1, #0
90019b88:	d1f7      	bne.n	90019b7a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
90019b8a:	4770      	bx	lr
90019b8c:	4770      	bx	lr

90019b8e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
90019b8e:	b530      	push	{r4, r5, lr}
90019b90:	4604      	mov	r4, r0
90019b92:	b159      	cbz	r1, 90019bac <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
90019b94:	b148      	cbz	r0, 90019baa <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
90019b96:	2300      	movs	r3, #0
90019b98:	b298      	uxth	r0, r3
90019b9a:	4282      	cmp	r2, r0
90019b9c:	d905      	bls.n	90019baa <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
90019b9e:	5ccd      	ldrb	r5, [r1, r3]
90019ba0:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
90019ba4:	3301      	adds	r3, #1
90019ba6:	2d00      	cmp	r5, #0
90019ba8:	d1f6      	bne.n	90019b98 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
90019baa:	bd30      	pop	{r4, r5, pc}
90019bac:	4608      	mov	r0, r1
90019bae:	e7fc      	b.n	90019baa <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

90019bb0 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
90019bb0:	b5f0      	push	{r4, r5, r6, r7, lr}
90019bb2:	b08b      	sub	sp, #44	@ 0x2c
90019bb4:	468c      	mov	ip, r1
90019bb6:	4604      	mov	r4, r0
90019bb8:	2100      	movs	r1, #0
90019bba:	261f      	movs	r6, #31
90019bbc:	af01      	add	r7, sp, #4
90019bbe:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
90019bc2:	1e71      	subs	r1, r6, #1
90019bc4:	fb94 fef3 	sdiv	lr, r4, r3
90019bc8:	fb03 441e 	mls	r4, r3, lr, r4
90019bcc:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
90019bd0:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
90019bd4:	b2ec      	uxtb	r4, r5
90019bd6:	2d09      	cmp	r5, #9
90019bd8:	bfd4      	ite	le
90019bda:	3430      	addle	r4, #48	@ 0x30
90019bdc:	3457      	addgt	r4, #87	@ 0x57
90019bde:	b2e4      	uxtb	r4, r4
90019be0:	55bc      	strb	r4, [r7, r6]
90019be2:	4674      	mov	r4, lr
90019be4:	b974      	cbnz	r4, 90019c04 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
90019be6:	2800      	cmp	r0, #0
90019be8:	da05      	bge.n	90019bf6 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
90019bea:	ab0a      	add	r3, sp, #40	@ 0x28
90019bec:	4419      	add	r1, r3
90019bee:	232d      	movs	r3, #45	@ 0x2d
90019bf0:	f801 3c24 	strb.w	r3, [r1, #-36]
90019bf4:	1eb1      	subs	r1, r6, #2
90019bf6:	3101      	adds	r1, #1
90019bf8:	4660      	mov	r0, ip
90019bfa:	4439      	add	r1, r7
90019bfc:	f7ff ffc7 	bl	90019b8e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90019c00:	b00b      	add	sp, #44	@ 0x2c
90019c02:	bdf0      	pop	{r4, r5, r6, r7, pc}
90019c04:	460e      	mov	r6, r1
90019c06:	e7dc      	b.n	90019bc2 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

90019c08 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
90019c08:	b5f0      	push	{r4, r5, r6, r7, lr}
90019c0a:	468c      	mov	ip, r1
90019c0c:	b08b      	sub	sp, #44	@ 0x2c
90019c0e:	2100      	movs	r1, #0
90019c10:	ae01      	add	r6, sp, #4
90019c12:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
90019c16:	211f      	movs	r1, #31
90019c18:	fbb0 f7f3 	udiv	r7, r0, r3
90019c1c:	fb03 0517 	mls	r5, r3, r7, r0
90019c20:	4638      	mov	r0, r7
90019c22:	b2ec      	uxtb	r4, r5
90019c24:	2d09      	cmp	r5, #9
90019c26:	bfd4      	ite	le
90019c28:	3430      	addle	r4, #48	@ 0x30
90019c2a:	3457      	addgt	r4, #87	@ 0x57
90019c2c:	b2e4      	uxtb	r4, r4
90019c2e:	558c      	strb	r4, [r1, r6]
90019c30:	1e4c      	subs	r4, r1, #1
90019c32:	b92f      	cbnz	r7, 90019c40 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
90019c34:	4431      	add	r1, r6
90019c36:	4660      	mov	r0, ip
90019c38:	f7ff ffa9 	bl	90019b8e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90019c3c:	b00b      	add	sp, #44	@ 0x2c
90019c3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90019c40:	4621      	mov	r1, r4
90019c42:	e7e9      	b.n	90019c18 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

90019c44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
90019c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019c48:	b085      	sub	sp, #20
90019c4a:	4691      	mov	r9, r2
90019c4c:	6802      	ldr	r2, [r0, #0]
90019c4e:	4688      	mov	r8, r1
90019c50:	461c      	mov	r4, r3
90019c52:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
90019c56:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
90019c5a:	4683      	mov	fp, r0
90019c5c:	4610      	mov	r0, r2
90019c5e:	9103      	str	r1, [sp, #12]
90019c60:	9302      	str	r3, [sp, #8]
90019c62:	9201      	str	r2, [sp, #4]
90019c64:	f7ff ff86 	bl	90019b74 <_ZN8touchgfx7Unicode6strlenEPKt>
90019c68:	f1b8 0f00 	cmp.w	r8, #0
90019c6c:	bf0c      	ite	eq
90019c6e:	4684      	moveq	ip, r0
90019c70:	f100 0c01 	addne.w	ip, r0, #1
90019c74:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
90019c78:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
90019c7c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90019c7e:	fa1f fc8c 	uxth.w	ip, ip
90019c82:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90019c84:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
90019c88:	9903      	ldr	r1, [sp, #12]
90019c8a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
90019c8e:	d041      	beq.n	90019d14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90019c90:	d834      	bhi.n	90019cfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
90019c92:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
90019c96:	d059      	beq.n	90019d4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
90019c98:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
90019c9c:	d03a      	beq.n	90019d14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90019c9e:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
90019ca2:	d034      	beq.n	90019d0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90019ca4:	2400      	movs	r4, #0
90019ca6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
90019caa:	3a01      	subs	r2, #1
90019cac:	b169      	cbz	r1, 90019cca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90019cae:	9911      	ldr	r1, [sp, #68]	@ 0x44
90019cb0:	458c      	cmp	ip, r1
90019cb2:	da09      	bge.n	90019cc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90019cb4:	eba1 010c 	sub.w	r1, r1, ip
90019cb8:	b289      	uxth	r1, r1
90019cba:	b933      	cbnz	r3, 90019cca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90019cbc:	2e00      	cmp	r6, #0
90019cbe:	d051      	beq.n	90019d64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90019cc0:	2800      	cmp	r0, #0
90019cc2:	d04f      	beq.n	90019d64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90019cc4:	440c      	add	r4, r1
90019cc6:	b2a4      	uxth	r4, r4
90019cc8:	2100      	movs	r1, #0
90019cca:	682b      	ldr	r3, [r5, #0]
90019ccc:	4293      	cmp	r3, r2
90019cce:	da07      	bge.n	90019ce0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90019cd0:	f1b8 0f00 	cmp.w	r8, #0
90019cd4:	d004      	beq.n	90019ce0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90019cd6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
90019cda:	682b      	ldr	r3, [r5, #0]
90019cdc:	3301      	adds	r3, #1
90019cde:	602b      	str	r3, [r5, #0]
90019ce0:	2730      	movs	r7, #48	@ 0x30
90019ce2:	2c00      	cmp	r4, #0
90019ce4:	d04e      	beq.n	90019d84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90019ce6:	682e      	ldr	r6, [r5, #0]
90019ce8:	3c01      	subs	r4, #1
90019cea:	42b2      	cmp	r2, r6
90019cec:	b2a4      	uxth	r4, r4
90019cee:	dd49      	ble.n	90019d84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90019cf0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90019cf4:	682b      	ldr	r3, [r5, #0]
90019cf6:	3301      	adds	r3, #1
90019cf8:	602b      	str	r3, [r5, #0]
90019cfa:	e7f2      	b.n	90019ce2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
90019cfc:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
90019d00:	d01d      	beq.n	90019d3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
90019d02:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
90019d06:	d002      	beq.n	90019d0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90019d08:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
90019d0c:	e7c9      	b.n	90019ca2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
90019d0e:	4684      	mov	ip, r0
90019d10:	f04f 0800 	mov.w	r8, #0
90019d14:	2c00      	cmp	r4, #0
90019d16:	d0c6      	beq.n	90019ca6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019d18:	b947      	cbnz	r7, 90019d2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90019d1a:	2801      	cmp	r0, #1
90019d1c:	d106      	bne.n	90019d2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90019d1e:	8814      	ldrh	r4, [r2, #0]
90019d20:	2c30      	cmp	r4, #48	@ 0x30
90019d22:	bf02      	ittt	eq
90019d24:	3202      	addeq	r2, #2
90019d26:	4638      	moveq	r0, r7
90019d28:	f8cb 2000 	streq.w	r2, [fp]
90019d2c:	45bc      	cmp	ip, r7
90019d2e:	da14      	bge.n	90019d5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
90019d30:	b2bf      	uxth	r7, r7
90019d32:	eba7 040c 	sub.w	r4, r7, ip
90019d36:	46bc      	mov	ip, r7
90019d38:	b2a4      	uxth	r4, r4
90019d3a:	2600      	movs	r6, #0
90019d3c:	e7b3      	b.n	90019ca6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019d3e:	4684      	mov	ip, r0
90019d40:	b16c      	cbz	r4, 90019d5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
90019d42:	42b8      	cmp	r0, r7
90019d44:	dd00      	ble.n	90019d48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
90019d46:	b2b8      	uxth	r0, r7
90019d48:	2400      	movs	r4, #0
90019d4a:	e003      	b.n	90019d54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
90019d4c:	f04f 0c01 	mov.w	ip, #1
90019d50:	2400      	movs	r4, #0
90019d52:	4660      	mov	r0, ip
90019d54:	4626      	mov	r6, r4
90019d56:	46a0      	mov	r8, r4
90019d58:	e7a5      	b.n	90019ca6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019d5a:	2400      	movs	r4, #0
90019d5c:	e7ed      	b.n	90019d3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
90019d5e:	4626      	mov	r6, r4
90019d60:	46a0      	mov	r8, r4
90019d62:	e7a0      	b.n	90019ca6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019d64:	2900      	cmp	r1, #0
90019d66:	d0b0      	beq.n	90019cca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90019d68:	2720      	movs	r7, #32
90019d6a:	682e      	ldr	r6, [r5, #0]
90019d6c:	2900      	cmp	r1, #0
90019d6e:	d0ac      	beq.n	90019cca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90019d70:	3901      	subs	r1, #1
90019d72:	4296      	cmp	r6, r2
90019d74:	b289      	uxth	r1, r1
90019d76:	daa7      	bge.n	90019cc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90019d78:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90019d7c:	682b      	ldr	r3, [r5, #0]
90019d7e:	3301      	adds	r3, #1
90019d80:	602b      	str	r3, [r5, #0]
90019d82:	e7f2      	b.n	90019d6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
90019d84:	b188      	cbz	r0, 90019daa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
90019d86:	682b      	ldr	r3, [r5, #0]
90019d88:	3801      	subs	r0, #1
90019d8a:	429a      	cmp	r2, r3
90019d8c:	b280      	uxth	r0, r0
90019d8e:	dd0c      	ble.n	90019daa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
90019d90:	f8db 3000 	ldr.w	r3, [fp]
90019d94:	1c9c      	adds	r4, r3, #2
90019d96:	f8cb 4000 	str.w	r4, [fp]
90019d9a:	881c      	ldrh	r4, [r3, #0]
90019d9c:	682b      	ldr	r3, [r5, #0]
90019d9e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
90019da2:	682b      	ldr	r3, [r5, #0]
90019da4:	3301      	adds	r3, #1
90019da6:	602b      	str	r3, [r5, #0]
90019da8:	e7ec      	b.n	90019d84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90019daa:	2620      	movs	r6, #32
90019dac:	b151      	cbz	r1, 90019dc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90019dae:	6828      	ldr	r0, [r5, #0]
90019db0:	3901      	subs	r1, #1
90019db2:	4282      	cmp	r2, r0
90019db4:	b289      	uxth	r1, r1
90019db6:	dd05      	ble.n	90019dc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90019db8:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
90019dbc:	682b      	ldr	r3, [r5, #0]
90019dbe:	3301      	adds	r3, #1
90019dc0:	602b      	str	r3, [r5, #0]
90019dc2:	e7f3      	b.n	90019dac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
90019dc4:	b005      	add	sp, #20
90019dc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019dca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
90019dca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90019dce:	2400      	movs	r4, #0
90019dd0:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
90019dd4:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
90019dd8:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
90019ddc:	8014      	strh	r4, [r2, #0]
90019dde:	701c      	strb	r4, [r3, #0]
90019de0:	f888 4000 	strb.w	r4, [r8]
90019de4:	f88c 4000 	strb.w	r4, [ip]
90019de8:	f88e 4000 	strb.w	r4, [lr]
90019dec:	703c      	strb	r4, [r7, #0]
90019dee:	6804      	ldr	r4, [r0, #0]
90019df0:	b1a4      	cbz	r4, 90019e1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
90019df2:	8824      	ldrh	r4, [r4, #0]
90019df4:	f04f 0901 	mov.w	r9, #1
90019df8:	b314      	cbz	r4, 90019e40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019dfa:	2c2b      	cmp	r4, #43	@ 0x2b
90019dfc:	d001      	beq.n	90019e02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
90019dfe:	2c20      	cmp	r4, #32
90019e00:	d110      	bne.n	90019e24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
90019e02:	8014      	strh	r4, [r2, #0]
90019e04:	6804      	ldr	r4, [r0, #0]
90019e06:	b10c      	cbz	r4, 90019e0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
90019e08:	3402      	adds	r4, #2
90019e0a:	6004      	str	r4, [r0, #0]
90019e0c:	680c      	ldr	r4, [r1, #0]
90019e0e:	b10c      	cbz	r4, 90019e14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
90019e10:	3401      	adds	r4, #1
90019e12:	600c      	str	r4, [r1, #0]
90019e14:	6804      	ldr	r4, [r0, #0]
90019e16:	b17c      	cbz	r4, 90019e38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
90019e18:	8824      	ldrh	r4, [r4, #0]
90019e1a:	e7ed      	b.n	90019df8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90019e1c:	680c      	ldr	r4, [r1, #0]
90019e1e:	b17c      	cbz	r4, 90019e40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019e20:	7824      	ldrb	r4, [r4, #0]
90019e22:	e7e7      	b.n	90019df4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
90019e24:	2c2d      	cmp	r4, #45	@ 0x2d
90019e26:	d102      	bne.n	90019e2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
90019e28:	f883 9000 	strb.w	r9, [r3]
90019e2c:	e7ea      	b.n	90019e04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90019e2e:	2c23      	cmp	r4, #35	@ 0x23
90019e30:	d107      	bne.n	90019e42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
90019e32:	f888 9000 	strb.w	r9, [r8]
90019e36:	e7e5      	b.n	90019e04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90019e38:	680c      	ldr	r4, [r1, #0]
90019e3a:	b10c      	cbz	r4, 90019e40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019e3c:	7824      	ldrb	r4, [r4, #0]
90019e3e:	e7db      	b.n	90019df8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90019e40:	2400      	movs	r4, #0
90019e42:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
90019e46:	2b09      	cmp	r3, #9
90019e48:	d901      	bls.n	90019e4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
90019e4a:	2c2a      	cmp	r4, #42	@ 0x2a
90019e4c:	d122      	bne.n	90019e94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90019e4e:	2301      	movs	r3, #1
90019e50:	2c30      	cmp	r4, #48	@ 0x30
90019e52:	f88e 3000 	strb.w	r3, [lr]
90019e56:	d10d      	bne.n	90019e74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90019e58:	f88c 3000 	strb.w	r3, [ip]
90019e5c:	6803      	ldr	r3, [r0, #0]
90019e5e:	b10b      	cbz	r3, 90019e64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
90019e60:	3302      	adds	r3, #2
90019e62:	6003      	str	r3, [r0, #0]
90019e64:	680b      	ldr	r3, [r1, #0]
90019e66:	b10b      	cbz	r3, 90019e6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
90019e68:	3301      	adds	r3, #1
90019e6a:	600b      	str	r3, [r1, #0]
90019e6c:	6803      	ldr	r3, [r0, #0]
90019e6e:	2b00      	cmp	r3, #0
90019e70:	d02f      	beq.n	90019ed2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
90019e72:	881c      	ldrh	r4, [r3, #0]
90019e74:	2c2a      	cmp	r4, #42	@ 0x2a
90019e76:	d135      	bne.n	90019ee4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90019e78:	f04f 33ff 	mov.w	r3, #4294967295
90019e7c:	6033      	str	r3, [r6, #0]
90019e7e:	6803      	ldr	r3, [r0, #0]
90019e80:	b10b      	cbz	r3, 90019e86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
90019e82:	3302      	adds	r3, #2
90019e84:	6003      	str	r3, [r0, #0]
90019e86:	680b      	ldr	r3, [r1, #0]
90019e88:	b10b      	cbz	r3, 90019e8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
90019e8a:	3301      	adds	r3, #1
90019e8c:	600b      	str	r3, [r1, #0]
90019e8e:	6803      	ldr	r3, [r0, #0]
90019e90:	b31b      	cbz	r3, 90019eda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
90019e92:	881c      	ldrh	r4, [r3, #0]
90019e94:	2c2e      	cmp	r4, #46	@ 0x2e
90019e96:	d11a      	bne.n	90019ece <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90019e98:	2301      	movs	r3, #1
90019e9a:	703b      	strb	r3, [r7, #0]
90019e9c:	6803      	ldr	r3, [r0, #0]
90019e9e:	b10b      	cbz	r3, 90019ea4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
90019ea0:	3302      	adds	r3, #2
90019ea2:	6003      	str	r3, [r0, #0]
90019ea4:	680b      	ldr	r3, [r1, #0]
90019ea6:	b10b      	cbz	r3, 90019eac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
90019ea8:	3301      	adds	r3, #1
90019eaa:	600b      	str	r3, [r1, #0]
90019eac:	6803      	ldr	r3, [r0, #0]
90019eae:	2b00      	cmp	r3, #0
90019eb0:	d036      	beq.n	90019f20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
90019eb2:	881b      	ldrh	r3, [r3, #0]
90019eb4:	2b2a      	cmp	r3, #42	@ 0x2a
90019eb6:	d137      	bne.n	90019f28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90019eb8:	f04f 33ff 	mov.w	r3, #4294967295
90019ebc:	602b      	str	r3, [r5, #0]
90019ebe:	6803      	ldr	r3, [r0, #0]
90019ec0:	b10b      	cbz	r3, 90019ec6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
90019ec2:	3302      	adds	r3, #2
90019ec4:	6003      	str	r3, [r0, #0]
90019ec6:	680b      	ldr	r3, [r1, #0]
90019ec8:	b10b      	cbz	r3, 90019ece <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90019eca:	3301      	adds	r3, #1
90019ecc:	600b      	str	r3, [r1, #0]
90019ece:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90019ed2:	680c      	ldr	r4, [r1, #0]
90019ed4:	b134      	cbz	r4, 90019ee4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90019ed6:	7824      	ldrb	r4, [r4, #0]
90019ed8:	e7cc      	b.n	90019e74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90019eda:	680b      	ldr	r3, [r1, #0]
90019edc:	2b00      	cmp	r3, #0
90019ede:	d0f6      	beq.n	90019ece <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90019ee0:	781c      	ldrb	r4, [r3, #0]
90019ee2:	e7d7      	b.n	90019e94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90019ee4:	2300      	movs	r3, #0
90019ee6:	220a      	movs	r2, #10
90019ee8:	6033      	str	r3, [r6, #0]
90019eea:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
90019eee:	fa1f f38c 	uxth.w	r3, ip
90019ef2:	2b09      	cmp	r3, #9
90019ef4:	d8ce      	bhi.n	90019e94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90019ef6:	6833      	ldr	r3, [r6, #0]
90019ef8:	fb02 c303 	mla	r3, r2, r3, ip
90019efc:	6033      	str	r3, [r6, #0]
90019efe:	6803      	ldr	r3, [r0, #0]
90019f00:	b10b      	cbz	r3, 90019f06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
90019f02:	3302      	adds	r3, #2
90019f04:	6003      	str	r3, [r0, #0]
90019f06:	680b      	ldr	r3, [r1, #0]
90019f08:	b10b      	cbz	r3, 90019f0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
90019f0a:	3301      	adds	r3, #1
90019f0c:	600b      	str	r3, [r1, #0]
90019f0e:	6803      	ldr	r3, [r0, #0]
90019f10:	b10b      	cbz	r3, 90019f16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
90019f12:	881c      	ldrh	r4, [r3, #0]
90019f14:	e7e9      	b.n	90019eea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90019f16:	680c      	ldr	r4, [r1, #0]
90019f18:	2c00      	cmp	r4, #0
90019f1a:	d0e6      	beq.n	90019eea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90019f1c:	7824      	ldrb	r4, [r4, #0]
90019f1e:	e7e4      	b.n	90019eea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90019f20:	680b      	ldr	r3, [r1, #0]
90019f22:	b10b      	cbz	r3, 90019f28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90019f24:	781b      	ldrb	r3, [r3, #0]
90019f26:	e7c5      	b.n	90019eb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
90019f28:	2200      	movs	r2, #0
90019f2a:	240a      	movs	r4, #10
90019f2c:	602a      	str	r2, [r5, #0]
90019f2e:	3b30      	subs	r3, #48	@ 0x30
90019f30:	682a      	ldr	r2, [r5, #0]
90019f32:	b29e      	uxth	r6, r3
90019f34:	2e09      	cmp	r6, #9
90019f36:	d813      	bhi.n	90019f60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
90019f38:	fb04 3302 	mla	r3, r4, r2, r3
90019f3c:	602b      	str	r3, [r5, #0]
90019f3e:	6803      	ldr	r3, [r0, #0]
90019f40:	b10b      	cbz	r3, 90019f46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
90019f42:	3302      	adds	r3, #2
90019f44:	6003      	str	r3, [r0, #0]
90019f46:	680b      	ldr	r3, [r1, #0]
90019f48:	b10b      	cbz	r3, 90019f4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
90019f4a:	3301      	adds	r3, #1
90019f4c:	600b      	str	r3, [r1, #0]
90019f4e:	6803      	ldr	r3, [r0, #0]
90019f50:	b10b      	cbz	r3, 90019f56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
90019f52:	881b      	ldrh	r3, [r3, #0]
90019f54:	e7eb      	b.n	90019f2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90019f56:	680b      	ldr	r3, [r1, #0]
90019f58:	2b00      	cmp	r3, #0
90019f5a:	d0e8      	beq.n	90019f2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90019f5c:	781b      	ldrb	r3, [r3, #0]
90019f5e:	e7e6      	b.n	90019f2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90019f60:	2a06      	cmp	r2, #6
90019f62:	bfa8      	it	ge
90019f64:	2206      	movge	r2, #6
90019f66:	602a      	str	r2, [r5, #0]
90019f68:	e7b1      	b.n	90019ece <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

90019f6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
90019f6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019f6e:	b0a3      	sub	sp, #140	@ 0x8c
90019f70:	2600      	movs	r6, #0
90019f72:	4607      	mov	r7, r0
90019f74:	4688      	mov	r8, r1
90019f76:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
90019f7a:	4631      	mov	r1, r6
90019f7c:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
90019f7e:	4648      	mov	r0, r9
90019f80:	960d      	str	r6, [sp, #52]	@ 0x34
90019f82:	e9cd 3208 	strd	r3, r2, [sp, #32]
90019f86:	2242      	movs	r2, #66	@ 0x42
90019f88:	f010 f882 	bl	9002a090 <memset>
90019f8c:	b15f      	cbz	r7, 90019fa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
90019f8e:	f108 3aff 	add.w	sl, r8, #4294967295
90019f92:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90019f94:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90019f96:	b152      	cbz	r2, 90019fae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
90019f98:	8812      	ldrh	r2, [r2, #0]
90019f9a:	b10a      	cbz	r2, 90019fa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90019f9c:	459a      	cmp	sl, r3
90019f9e:	dc2e      	bgt.n	90019ffe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
90019fa0:	2200      	movs	r2, #0
90019fa2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90019fa6:	4638      	mov	r0, r7
90019fa8:	b023      	add	sp, #140	@ 0x8c
90019faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019fae:	9a08      	ldr	r2, [sp, #32]
90019fb0:	2a00      	cmp	r2, #0
90019fb2:	d0f5      	beq.n	90019fa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90019fb4:	7812      	ldrb	r2, [r2, #0]
90019fb6:	e7f0      	b.n	90019f9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
90019fb8:	2d00      	cmp	r5, #0
90019fba:	d0ea      	beq.n	90019f92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019fbc:	782a      	ldrb	r2, [r5, #0]
90019fbe:	b142      	cbz	r2, 90019fd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
90019fc0:	2a25      	cmp	r2, #37	@ 0x25
90019fc2:	d001      	beq.n	90019fc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
90019fc4:	459a      	cmp	sl, r3
90019fc6:	dc08      	bgt.n	90019fda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
90019fc8:	f1bb 0f00 	cmp.w	fp, #0
90019fcc:	d121      	bne.n	9001a012 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
90019fce:	2d00      	cmp	r5, #0
90019fd0:	d0df      	beq.n	90019f92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019fd2:	782a      	ldrb	r2, [r5, #0]
90019fd4:	f04f 0b00 	mov.w	fp, #0
90019fd8:	e01d      	b.n	9001a016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
90019fda:	f1bb 0f00 	cmp.w	fp, #0
90019fde:	d077      	beq.n	9001a0d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
90019fe0:	f8bb 2000 	ldrh.w	r2, [fp]
90019fe4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90019fe8:	f1bb 0f00 	cmp.w	fp, #0
90019fec:	d002      	beq.n	90019ff4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
90019fee:	f10b 0202 	add.w	r2, fp, #2
90019ff2:	9209      	str	r2, [sp, #36]	@ 0x24
90019ff4:	b10d      	cbz	r5, 90019ffa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
90019ff6:	3501      	adds	r5, #1
90019ff8:	9508      	str	r5, [sp, #32]
90019ffa:	3301      	adds	r3, #1
90019ffc:	930d      	str	r3, [sp, #52]	@ 0x34
90019ffe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001a000:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
9001a004:	f1bb 0f00 	cmp.w	fp, #0
9001a008:	d0d6      	beq.n	90019fb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
9001a00a:	f8bb 2000 	ldrh.w	r2, [fp]
9001a00e:	2a00      	cmp	r2, #0
9001a010:	d1d6      	bne.n	90019fc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001a012:	f8bb 2000 	ldrh.w	r2, [fp]
9001a016:	2a00      	cmp	r2, #0
9001a018:	d0bb      	beq.n	90019f92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a01a:	459a      	cmp	sl, r3
9001a01c:	ddb9      	ble.n	90019f92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a01e:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
9001a022:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
9001a026:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
9001a02a:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
9001a02e:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
9001a032:	960e      	str	r6, [sp, #56]	@ 0x38
9001a034:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
9001a038:	960f      	str	r6, [sp, #60]	@ 0x3c
9001a03a:	f1bb 0f00 	cmp.w	fp, #0
9001a03e:	d002      	beq.n	9001a046 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
9001a040:	f10b 0302 	add.w	r3, fp, #2
9001a044:	9309      	str	r3, [sp, #36]	@ 0x24
9001a046:	b10d      	cbz	r5, 9001a04c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
9001a048:	1c6b      	adds	r3, r5, #1
9001a04a:	9308      	str	r3, [sp, #32]
9001a04c:	ab0f      	add	r3, sp, #60	@ 0x3c
9001a04e:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
9001a052:	a908      	add	r1, sp, #32
9001a054:	a809      	add	r0, sp, #36	@ 0x24
9001a056:	9305      	str	r3, [sp, #20]
9001a058:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
9001a05c:	9304      	str	r3, [sp, #16]
9001a05e:	ab0e      	add	r3, sp, #56	@ 0x38
9001a060:	9303      	str	r3, [sp, #12]
9001a062:	ab0c      	add	r3, sp, #48	@ 0x30
9001a064:	9302      	str	r3, [sp, #8]
9001a066:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
9001a06a:	9301      	str	r3, [sp, #4]
9001a06c:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
9001a070:	9300      	str	r3, [sp, #0]
9001a072:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
9001a076:	f7ff fea8 	bl	90019dca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
9001a07a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a07c:	2b00      	cmp	r3, #0
9001a07e:	bfbf      	itttt	lt
9001a080:	6823      	ldrlt	r3, [r4, #0]
9001a082:	3404      	addlt	r4, #4
9001a084:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001a088:	930e      	strlt	r3, [sp, #56]	@ 0x38
9001a08a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001a08c:	2b00      	cmp	r3, #0
9001a08e:	bfbe      	ittt	lt
9001a090:	6823      	ldrlt	r3, [r4, #0]
9001a092:	3404      	addlt	r4, #4
9001a094:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001a098:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001a09c:	bfb8      	it	lt
9001a09e:	930f      	strlt	r3, [sp, #60]	@ 0x3c
9001a0a0:	b1d9      	cbz	r1, 9001a0da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
9001a0a2:	880b      	ldrh	r3, [r1, #0]
9001a0a4:	2b69      	cmp	r3, #105	@ 0x69
9001a0a6:	d01f      	beq.n	9001a0e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a0a8:	d82f      	bhi.n	9001a10a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
9001a0aa:	2b58      	cmp	r3, #88	@ 0x58
9001a0ac:	d01c      	beq.n	9001a0e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a0ae:	d818      	bhi.n	9001a0e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
9001a0b0:	2b25      	cmp	r3, #37	@ 0x25
9001a0b2:	d034      	beq.n	9001a11e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
9001a0b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001a0b6:	e9cd 5b08 	strd	r5, fp, [sp, #32]
9001a0ba:	f1bb 0f00 	cmp.w	fp, #0
9001a0be:	f000 80b7 	beq.w	9001a230 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
9001a0c2:	f8bb 5000 	ldrh.w	r5, [fp]
9001a0c6:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
9001a0ca:	3301      	adds	r3, #1
9001a0cc:	930d      	str	r3, [sp, #52]	@ 0x34
9001a0ce:	e029      	b.n	9001a124 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001a0d0:	b10d      	cbz	r5, 9001a0d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001a0d2:	782a      	ldrb	r2, [r5, #0]
9001a0d4:	e786      	b.n	90019fe4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001a0d6:	462a      	mov	r2, r5
9001a0d8:	e784      	b.n	90019fe4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001a0da:	2a00      	cmp	r2, #0
9001a0dc:	d0ea      	beq.n	9001a0b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001a0de:	7813      	ldrb	r3, [r2, #0]
9001a0e0:	e7e0      	b.n	9001a0a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
9001a0e2:	3b63      	subs	r3, #99	@ 0x63
9001a0e4:	2b01      	cmp	r3, #1
9001a0e6:	d8e5      	bhi.n	9001a0b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001a0e8:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
9001a0ec:	b329      	cbz	r1, 9001a13a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
9001a0ee:	880b      	ldrh	r3, [r1, #0]
9001a0f0:	2b69      	cmp	r3, #105	@ 0x69
9001a0f2:	d063      	beq.n	9001a1bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001a0f4:	d825      	bhi.n	9001a142 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001a0f6:	2b63      	cmp	r3, #99	@ 0x63
9001a0f8:	d038      	beq.n	9001a16c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
9001a0fa:	2b64      	cmp	r3, #100	@ 0x64
9001a0fc:	d05e      	beq.n	9001a1bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001a0fe:	2b58      	cmp	r3, #88	@ 0x58
9001a100:	d07a      	beq.n	9001a1f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001a102:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
9001a106:	4625      	mov	r5, r4
9001a108:	e036      	b.n	9001a178 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a10a:	2b73      	cmp	r3, #115	@ 0x73
9001a10c:	d0ec      	beq.n	9001a0e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a10e:	d802      	bhi.n	9001a116 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
9001a110:	2b6f      	cmp	r3, #111	@ 0x6f
9001a112:	d1cf      	bne.n	9001a0b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001a114:	e7e8      	b.n	9001a0e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a116:	2b75      	cmp	r3, #117	@ 0x75
9001a118:	d0e6      	beq.n	9001a0e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001a11a:	2b78      	cmp	r3, #120	@ 0x78
9001a11c:	e7f9      	b.n	9001a112 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
9001a11e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a120:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
9001a124:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001a126:	b10b      	cbz	r3, 9001a12c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
9001a128:	3302      	adds	r3, #2
9001a12a:	9309      	str	r3, [sp, #36]	@ 0x24
9001a12c:	9b08      	ldr	r3, [sp, #32]
9001a12e:	2b00      	cmp	r3, #0
9001a130:	f43f af2f 	beq.w	90019f92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a134:	3301      	adds	r3, #1
9001a136:	9308      	str	r3, [sp, #32]
9001a138:	e72b      	b.n	90019f92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001a13a:	2a00      	cmp	r2, #0
9001a13c:	d0e1      	beq.n	9001a102 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001a13e:	7813      	ldrb	r3, [r2, #0]
9001a140:	e7d6      	b.n	9001a0f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001a142:	2b73      	cmp	r3, #115	@ 0x73
9001a144:	d036      	beq.n	9001a1b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001a146:	d807      	bhi.n	9001a158 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
9001a148:	2b6f      	cmp	r3, #111	@ 0x6f
9001a14a:	d1da      	bne.n	9001a102 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001a14c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a14e:	1d25      	adds	r5, r4, #4
9001a150:	2308      	movs	r3, #8
9001a152:	eba8 0202 	sub.w	r2, r8, r2
9001a156:	e049      	b.n	9001a1ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001a158:	2b75      	cmp	r3, #117	@ 0x75
9001a15a:	d042      	beq.n	9001a1e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
9001a15c:	2b78      	cmp	r3, #120	@ 0x78
9001a15e:	d1d0      	bne.n	9001a102 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001a160:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a162:	1d25      	adds	r5, r4, #4
9001a164:	2310      	movs	r3, #16
9001a166:	eba8 0202 	sub.w	r2, r8, r2
9001a16a:	e03f      	b.n	9001a1ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001a16c:	6823      	ldr	r3, [r4, #0]
9001a16e:	1d25      	adds	r5, r4, #4
9001a170:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
9001a174:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
9001a178:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001a17a:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
9001a17e:	2b00      	cmp	r3, #0
9001a180:	d051      	beq.n	9001a226 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001a182:	881a      	ldrh	r2, [r3, #0]
9001a184:	a80d      	add	r0, sp, #52	@ 0x34
9001a186:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
9001a18a:	462c      	mov	r4, r5
9001a18c:	9005      	str	r0, [sp, #20]
9001a18e:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
9001a192:	9004      	str	r0, [sp, #16]
9001a194:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001a196:	9003      	str	r0, [sp, #12]
9001a198:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
9001a19c:	9002      	str	r0, [sp, #8]
9001a19e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9001a1a0:	9001      	str	r0, [sp, #4]
9001a1a2:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
9001a1a6:	e9cd 8706 	strd	r8, r7, [sp, #24]
9001a1aa:	9000      	str	r0, [sp, #0]
9001a1ac:	a810      	add	r0, sp, #64	@ 0x40
9001a1ae:	f7ff fd49 	bl	90019c44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001a1b2:	e7b7      	b.n	9001a124 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001a1b4:	1d25      	adds	r5, r4, #4
9001a1b6:	6823      	ldr	r3, [r4, #0]
9001a1b8:	9310      	str	r3, [sp, #64]	@ 0x40
9001a1ba:	e7dd      	b.n	9001a178 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a1bc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a1be:	230a      	movs	r3, #10
9001a1c0:	4649      	mov	r1, r9
9001a1c2:	6820      	ldr	r0, [r4, #0]
9001a1c4:	eba8 0202 	sub.w	r2, r8, r2
9001a1c8:	1d25      	adds	r5, r4, #4
9001a1ca:	b292      	uxth	r2, r2
9001a1cc:	f7ff fcf0 	bl	90019bb0 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
9001a1d0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
9001a1d4:	2b2d      	cmp	r3, #45	@ 0x2d
9001a1d6:	d1cf      	bne.n	9001a178 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a1d8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001a1dc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a1de:	3302      	adds	r3, #2
9001a1e0:	e7ea      	b.n	9001a1b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
9001a1e2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a1e4:	1d25      	adds	r5, r4, #4
9001a1e6:	230a      	movs	r3, #10
9001a1e8:	eba8 0202 	sub.w	r2, r8, r2
9001a1ec:	b292      	uxth	r2, r2
9001a1ee:	4649      	mov	r1, r9
9001a1f0:	6820      	ldr	r0, [r4, #0]
9001a1f2:	f7ff fd09 	bl	90019c08 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001a1f6:	e7bf      	b.n	9001a178 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a1f8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9001a1fa:	2310      	movs	r3, #16
9001a1fc:	4649      	mov	r1, r9
9001a1fe:	6820      	ldr	r0, [r4, #0]
9001a200:	eba8 0202 	sub.w	r2, r8, r2
9001a204:	1d25      	adds	r5, r4, #4
9001a206:	b292      	uxth	r2, r2
9001a208:	f7ff fcfe 	bl	90019c08 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001a20c:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
9001a210:	f832 3f02 	ldrh.w	r3, [r2, #2]!
9001a214:	2b00      	cmp	r3, #0
9001a216:	d0af      	beq.n	9001a178 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001a218:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
9001a21c:	2919      	cmp	r1, #25
9001a21e:	d8f7      	bhi.n	9001a210 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001a220:	3b20      	subs	r3, #32
9001a222:	8013      	strh	r3, [r2, #0]
9001a224:	e7f4      	b.n	9001a210 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001a226:	9a08      	ldr	r2, [sp, #32]
9001a228:	2a00      	cmp	r2, #0
9001a22a:	d0ab      	beq.n	9001a184 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001a22c:	7812      	ldrb	r2, [r2, #0]
9001a22e:	e7a9      	b.n	9001a184 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001a230:	2d00      	cmp	r5, #0
9001a232:	f43f af48 	beq.w	9001a0c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001a236:	782d      	ldrb	r5, [r5, #0]
9001a238:	e745      	b.n	9001a0c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

9001a23a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
9001a23a:	b507      	push	{r0, r1, r2, lr}
9001a23c:	9300      	str	r3, [sp, #0]
9001a23e:	4613      	mov	r3, r2
9001a240:	2200      	movs	r2, #0
9001a242:	f7ff fe92 	bl	90019f6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001a246:	b003      	add	sp, #12
9001a248:	f85d fb04 	ldr.w	pc, [sp], #4

9001a24c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
9001a24c:	b40c      	push	{r2, r3}
9001a24e:	b507      	push	{r0, r1, r2, lr}
9001a250:	ab04      	add	r3, sp, #16
9001a252:	f853 2b04 	ldr.w	r2, [r3], #4
9001a256:	9301      	str	r3, [sp, #4]
9001a258:	f7ff ffef 	bl	9001a23a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
9001a25c:	b003      	add	sp, #12
9001a25e:	f85d eb04 	ldr.w	lr, [sp], #4
9001a262:	b002      	add	sp, #8
9001a264:	4770      	bx	lr
	...

9001a268 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001a268:	4b01      	ldr	r3, [pc, #4]	@ (9001a270 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001a26a:	6018      	str	r0, [r3, #0]
9001a26c:	4770      	bx	lr
9001a26e:	bf00      	nop
9001a270:	2402343c 	.word	0x2402343c

9001a274 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001a274:	4b06      	ldr	r3, [pc, #24]	@ (9001a290 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001a276:	881a      	ldrh	r2, [r3, #0]
9001a278:	4282      	cmp	r2, r0
9001a27a:	d807      	bhi.n	9001a28c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001a27c:	4b05      	ldr	r3, [pc, #20]	@ (9001a294 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001a27e:	881b      	ldrh	r3, [r3, #0]
9001a280:	4413      	add	r3, r2
9001a282:	4298      	cmp	r0, r3
9001a284:	bfac      	ite	ge
9001a286:	2000      	movge	r0, #0
9001a288:	2001      	movlt	r0, #1
9001a28a:	4770      	bx	lr
9001a28c:	2000      	movs	r0, #0
9001a28e:	4770      	bx	lr
9001a290:	2402345c 	.word	0x2402345c
9001a294:	24023460 	.word	0x24023460

9001a298 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001a298:	b508      	push	{r3, lr}
9001a29a:	4601      	mov	r1, r0
9001a29c:	f7ff ffea 	bl	9001a274 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001a2a0:	b118      	cbz	r0, 9001a2aa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001a2a2:	4b02      	ldr	r3, [pc, #8]	@ (9001a2ac <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001a2a4:	681b      	ldr	r3, [r3, #0]
9001a2a6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001a2aa:	bd08      	pop	{r3, pc}
9001a2ac:	24023440 	.word	0x24023440

9001a2b0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001a2b0:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a2b2:	4c24      	ldr	r4, [pc, #144]	@ (9001a344 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001a2b4:	6823      	ldr	r3, [r4, #0]
9001a2b6:	2b00      	cmp	r3, #0
9001a2b8:	d042      	beq.n	9001a340 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001a2ba:	4a23      	ldr	r2, [pc, #140]	@ (9001a348 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001a2bc:	4d23      	ldr	r5, [pc, #140]	@ (9001a34c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001a2be:	8811      	ldrh	r1, [r2, #0]
9001a2c0:	f8b5 c000 	ldrh.w	ip, [r5]
9001a2c4:	4822      	ldr	r0, [pc, #136]	@ (9001a350 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001a2c6:	4461      	add	r1, ip
9001a2c8:	1c4a      	adds	r2, r1, #1
9001a2ca:	008f      	lsls	r7, r1, #2
9001a2cc:	f022 0201 	bic.w	r2, r2, #1
9001a2d0:	19de      	adds	r6, r3, r7
9001a2d2:	0412      	lsls	r2, r2, #16
9001a2d4:	6006      	str	r6, [r0, #0]
9001a2d6:	4e1f      	ldr	r6, [pc, #124]	@ (9001a354 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001a2d8:	0c12      	lsrs	r2, r2, #16
9001a2da:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001a2de:	19da      	adds	r2, r3, r7
9001a2e0:	6032      	str	r2, [r6, #0]
9001a2e2:	220e      	movs	r2, #14
9001a2e4:	fb02 f20c 	mul.w	r2, r2, ip
9001a2e8:	3203      	adds	r2, #3
9001a2ea:	f022 0203 	bic.w	r2, r2, #3
9001a2ee:	443a      	add	r2, r7
9001a2f0:	4f19      	ldr	r7, [pc, #100]	@ (9001a358 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001a2f2:	4413      	add	r3, r2
9001a2f4:	603b      	str	r3, [r7, #0]
9001a2f6:	2300      	movs	r3, #0
9001a2f8:	4f18      	ldr	r7, [pc, #96]	@ (9001a35c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001a2fa:	469c      	mov	ip, r3
9001a2fc:	803b      	strh	r3, [r7, #0]
9001a2fe:	4f18      	ldr	r7, [pc, #96]	@ (9001a360 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001a300:	683f      	ldr	r7, [r7, #0]
9001a302:	1aba      	subs	r2, r7, r2
9001a304:	4f17      	ldr	r7, [pc, #92]	@ (9001a364 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001a306:	603a      	str	r2, [r7, #0]
9001a308:	f64f 77ff 	movw	r7, #65535	@ 0xffff
9001a30c:	4a16      	ldr	r2, [pc, #88]	@ (9001a368 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001a30e:	8013      	strh	r3, [r2, #0]
9001a310:	428b      	cmp	r3, r1
9001a312:	d10d      	bne.n	9001a330 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001a314:	882d      	ldrh	r5, [r5, #0]
9001a316:	2300      	movs	r3, #0
9001a318:	6830      	ldr	r0, [r6, #0]
9001a31a:	240e      	movs	r4, #14
9001a31c:	429d      	cmp	r5, r3
9001a31e:	d90f      	bls.n	9001a340 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001a320:	fb04 0203 	mla	r2, r4, r3, r0
9001a324:	3301      	adds	r3, #1
9001a326:	7b11      	ldrb	r1, [r2, #12]
9001a328:	f36f 1145 	bfc	r1, #5, #1
9001a32c:	7311      	strb	r1, [r2, #12]
9001a32e:	e7f5      	b.n	9001a31c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001a330:	6822      	ldr	r2, [r4, #0]
9001a332:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001a336:	6802      	ldr	r2, [r0, #0]
9001a338:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001a33c:	3301      	adds	r3, #1
9001a33e:	e7e7      	b.n	9001a310 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001a340:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001a342:	bf00      	nop
9001a344:	24023440 	.word	0x24023440
9001a348:	2402345c 	.word	0x2402345c
9001a34c:	24023460 	.word	0x24023460
9001a350:	24023454 	.word	0x24023454
9001a354:	24023444 	.word	0x24023444
9001a358:	2402344c 	.word	0x2402344c
9001a35c:	2402345e 	.word	0x2402345e
9001a360:	24023448 	.word	0x24023448
9001a364:	24023458 	.word	0x24023458
9001a368:	24023450 	.word	0x24023450

9001a36c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001a36c:	4b06      	ldr	r3, [pc, #24]	@ (9001a388 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001a36e:	681b      	ldr	r3, [r3, #0]
9001a370:	b943      	cbnz	r3, 9001a384 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001a372:	b139      	cbz	r1, 9001a384 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001a374:	4b05      	ldr	r3, [pc, #20]	@ (9001a38c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001a376:	801a      	strh	r2, [r3, #0]
9001a378:	4b05      	ldr	r3, [pc, #20]	@ (9001a390 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001a37a:	6019      	str	r1, [r3, #0]
9001a37c:	4b05      	ldr	r3, [pc, #20]	@ (9001a394 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001a37e:	6018      	str	r0, [r3, #0]
9001a380:	f7ff bf96 	b.w	9001a2b0 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001a384:	4770      	bx	lr
9001a386:	bf00      	nop
9001a388:	2402344c 	.word	0x2402344c
9001a38c:	24023460 	.word	0x24023460
9001a390:	24023448 	.word	0x24023448
9001a394:	24023440 	.word	0x24023440

9001a398 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001a398:	b470      	push	{r4, r5, r6}
9001a39a:	4c07      	ldr	r4, [pc, #28]	@ (9001a3b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001a39c:	4605      	mov	r5, r0
9001a39e:	4610      	mov	r0, r2
9001a3a0:	9a03      	ldr	r2, [sp, #12]
9001a3a2:	6826      	ldr	r6, [r4, #0]
9001a3a4:	b936      	cbnz	r6, 9001a3b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001a3a6:	6025      	str	r5, [r4, #0]
9001a3a8:	4c04      	ldr	r4, [pc, #16]	@ (9001a3bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001a3aa:	8021      	strh	r1, [r4, #0]
9001a3ac:	4619      	mov	r1, r3
9001a3ae:	bc70      	pop	{r4, r5, r6}
9001a3b0:	f7ff bfdc 	b.w	9001a36c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001a3b4:	bc70      	pop	{r4, r5, r6}
9001a3b6:	4770      	bx	lr
9001a3b8:	24023464 	.word	0x24023464
9001a3bc:	2402345c 	.word	0x2402345c

9001a3c0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001a3c0:	4a12      	ldr	r2, [pc, #72]	@ (9001a40c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001a3c2:	8803      	ldrh	r3, [r0, #0]
9001a3c4:	8812      	ldrh	r2, [r2, #0]
9001a3c6:	4293      	cmp	r3, r2
9001a3c8:	d207      	bcs.n	9001a3da <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001a3ca:	4a11      	ldr	r2, [pc, #68]	@ (9001a410 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001a3cc:	2114      	movs	r1, #20
9001a3ce:	6812      	ldr	r2, [r2, #0]
9001a3d0:	fb01 2303 	mla	r3, r1, r3, r2
9001a3d4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001a3d8:	4770      	bx	lr
9001a3da:	490e      	ldr	r1, [pc, #56]	@ (9001a414 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001a3dc:	8809      	ldrh	r1, [r1, #0]
9001a3de:	4411      	add	r1, r2
9001a3e0:	428b      	cmp	r3, r1
9001a3e2:	da04      	bge.n	9001a3ee <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001a3e4:	1a9b      	subs	r3, r3, r2
9001a3e6:	4a0c      	ldr	r2, [pc, #48]	@ (9001a418 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001a3e8:	210e      	movs	r1, #14
9001a3ea:	6812      	ldr	r2, [r2, #0]
9001a3ec:	e7f0      	b.n	9001a3d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001a3ee:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001a3f2:	4293      	cmp	r3, r2
9001a3f4:	d108      	bne.n	9001a408 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001a3f6:	4b09      	ldr	r3, [pc, #36]	@ (9001a41c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001a3f8:	781b      	ldrb	r3, [r3, #0]
9001a3fa:	b91b      	cbnz	r3, 9001a404 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001a3fc:	4b08      	ldr	r3, [pc, #32]	@ (9001a420 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001a3fe:	f9b3 0000 	ldrsh.w	r0, [r3]
9001a402:	4770      	bx	lr
9001a404:	4b07      	ldr	r3, [pc, #28]	@ (9001a424 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001a406:	e7fa      	b.n	9001a3fe <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001a408:	2000      	movs	r0, #0
9001a40a:	4770      	bx	lr
9001a40c:	2402345c 	.word	0x2402345c
9001a410:	24023464 	.word	0x24023464
9001a414:	24023460 	.word	0x24023460
9001a418:	24023444 	.word	0x24023444
9001a41c:	240233cc 	.word	0x240233cc
9001a420:	240233ce 	.word	0x240233ce
9001a424:	240233d0 	.word	0x240233d0

9001a428 <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001a428:	4a12      	ldr	r2, [pc, #72]	@ (9001a474 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001a42a:	8803      	ldrh	r3, [r0, #0]
9001a42c:	8812      	ldrh	r2, [r2, #0]
9001a42e:	4293      	cmp	r3, r2
9001a430:	d207      	bcs.n	9001a442 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001a432:	4a11      	ldr	r2, [pc, #68]	@ (9001a478 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001a434:	2114      	movs	r1, #20
9001a436:	6812      	ldr	r2, [r2, #0]
9001a438:	fb01 2303 	mla	r3, r1, r3, r2
9001a43c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001a440:	4770      	bx	lr
9001a442:	490e      	ldr	r1, [pc, #56]	@ (9001a47c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001a444:	8809      	ldrh	r1, [r1, #0]
9001a446:	4411      	add	r1, r2
9001a448:	428b      	cmp	r3, r1
9001a44a:	da04      	bge.n	9001a456 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001a44c:	1a9b      	subs	r3, r3, r2
9001a44e:	4a0c      	ldr	r2, [pc, #48]	@ (9001a480 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001a450:	210e      	movs	r1, #14
9001a452:	6812      	ldr	r2, [r2, #0]
9001a454:	e7f0      	b.n	9001a438 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001a456:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001a45a:	4293      	cmp	r3, r2
9001a45c:	d108      	bne.n	9001a470 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001a45e:	4b09      	ldr	r3, [pc, #36]	@ (9001a484 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001a460:	781b      	ldrb	r3, [r3, #0]
9001a462:	b91b      	cbnz	r3, 9001a46c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001a464:	4b08      	ldr	r3, [pc, #32]	@ (9001a488 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001a466:	f9b3 0000 	ldrsh.w	r0, [r3]
9001a46a:	4770      	bx	lr
9001a46c:	4b07      	ldr	r3, [pc, #28]	@ (9001a48c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001a46e:	e7fa      	b.n	9001a466 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001a470:	2000      	movs	r0, #0
9001a472:	4770      	bx	lr
9001a474:	2402345c 	.word	0x2402345c
9001a478:	24023464 	.word	0x24023464
9001a47c:	24023460 	.word	0x24023460
9001a480:	24023444 	.word	0x24023444
9001a484:	240233cc 	.word	0x240233cc
9001a488:	240233d0 	.word	0x240233d0
9001a48c:	240233ce 	.word	0x240233ce

9001a490 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001a490:	4a22      	ldr	r2, [pc, #136]	@ (9001a51c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001a492:	b530      	push	{r4, r5, lr}
9001a494:	880b      	ldrh	r3, [r1, #0]
9001a496:	8812      	ldrh	r2, [r2, #0]
9001a498:	4293      	cmp	r3, r2
9001a49a:	d213      	bcs.n	9001a4c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001a49c:	4a20      	ldr	r2, [pc, #128]	@ (9001a520 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001a49e:	2114      	movs	r1, #20
9001a4a0:	6812      	ldr	r2, [r2, #0]
9001a4a2:	fb01 2303 	mla	r3, r1, r3, r2
9001a4a6:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001a4aa:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001a4ae:	8a1a      	ldrh	r2, [r3, #16]
9001a4b0:	8a5b      	ldrh	r3, [r3, #18]
9001a4b2:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001a4b6:	8004      	strh	r4, [r0, #0]
9001a4b8:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001a4bc:	8041      	strh	r1, [r0, #2]
9001a4be:	8082      	strh	r2, [r0, #4]
9001a4c0:	80c3      	strh	r3, [r0, #6]
9001a4c2:	e024      	b.n	9001a50e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
9001a4c4:	4917      	ldr	r1, [pc, #92]	@ (9001a524 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001a4c6:	8809      	ldrh	r1, [r1, #0]
9001a4c8:	4411      	add	r1, r2
9001a4ca:	428b      	cmp	r3, r1
9001a4cc:	da10      	bge.n	9001a4f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
9001a4ce:	1a9b      	subs	r3, r3, r2
9001a4d0:	220e      	movs	r2, #14
9001a4d2:	4353      	muls	r3, r2
9001a4d4:	4a14      	ldr	r2, [pc, #80]	@ (9001a528 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
9001a4d6:	6811      	ldr	r1, [r2, #0]
9001a4d8:	18ca      	adds	r2, r1, r3
9001a4da:	5ecd      	ldrsh	r5, [r1, r3]
9001a4dc:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
9001a4e0:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
9001a4e4:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
9001a4e8:	8005      	strh	r5, [r0, #0]
9001a4ea:	8044      	strh	r4, [r0, #2]
9001a4ec:	8081      	strh	r1, [r0, #4]
9001a4ee:	e7e7      	b.n	9001a4c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001a4f0:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001a4f4:	4293      	cmp	r3, r2
9001a4f6:	d10b      	bne.n	9001a510 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
9001a4f8:	4b0c      	ldr	r3, [pc, #48]	@ (9001a52c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
9001a4fa:	f9b3 1000 	ldrsh.w	r1, [r3]
9001a4fe:	4b0c      	ldr	r3, [pc, #48]	@ (9001a530 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
9001a500:	8081      	strh	r1, [r0, #4]
9001a502:	f9b3 2000 	ldrsh.w	r2, [r3]
9001a506:	2300      	movs	r3, #0
9001a508:	80c2      	strh	r2, [r0, #6]
9001a50a:	8003      	strh	r3, [r0, #0]
9001a50c:	8043      	strh	r3, [r0, #2]
9001a50e:	bd30      	pop	{r4, r5, pc}
9001a510:	2300      	movs	r3, #0
9001a512:	8003      	strh	r3, [r0, #0]
9001a514:	8043      	strh	r3, [r0, #2]
9001a516:	8083      	strh	r3, [r0, #4]
9001a518:	e7d2      	b.n	9001a4c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001a51a:	bf00      	nop
9001a51c:	2402345c 	.word	0x2402345c
9001a520:	24023464 	.word	0x24023464
9001a524:	24023460 	.word	0x24023460
9001a528:	24023444 	.word	0x24023444
9001a52c:	240233c8 	.word	0x240233c8
9001a530:	240233ca 	.word	0x240233ca

9001a534 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001a534:	4a17      	ldr	r2, [pc, #92]	@ (9001a594 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001a536:	8803      	ldrh	r3, [r0, #0]
9001a538:	8812      	ldrh	r2, [r2, #0]
9001a53a:	4293      	cmp	r3, r2
9001a53c:	d213      	bcs.n	9001a566 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001a53e:	4a16      	ldr	r2, [pc, #88]	@ (9001a598 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001a540:	2114      	movs	r1, #20
9001a542:	6812      	ldr	r2, [r2, #0]
9001a544:	fb01 2303 	mla	r3, r1, r3, r2
9001a548:	8a1a      	ldrh	r2, [r3, #16]
9001a54a:	8919      	ldrh	r1, [r3, #8]
9001a54c:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001a550:	428a      	cmp	r2, r1
9001a552:	db1d      	blt.n	9001a590 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001a554:	8a58      	ldrh	r0, [r3, #18]
9001a556:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001a55a:	895b      	ldrh	r3, [r3, #10]
9001a55c:	4298      	cmp	r0, r3
9001a55e:	bfac      	ite	ge
9001a560:	2000      	movge	r0, #0
9001a562:	2001      	movlt	r0, #1
9001a564:	4770      	bx	lr
9001a566:	490d      	ldr	r1, [pc, #52]	@ (9001a59c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001a568:	8809      	ldrh	r1, [r1, #0]
9001a56a:	4411      	add	r1, r2
9001a56c:	428b      	cmp	r3, r1
9001a56e:	da0d      	bge.n	9001a58c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001a570:	1a9b      	subs	r3, r3, r2
9001a572:	4a0b      	ldr	r2, [pc, #44]	@ (9001a5a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001a574:	210e      	movs	r1, #14
9001a576:	6812      	ldr	r2, [r2, #0]
9001a578:	fb01 2303 	mla	r3, r1, r3, r2
9001a57c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001a580:	891a      	ldrh	r2, [r3, #8]
9001a582:	4291      	cmp	r1, r2
9001a584:	db04      	blt.n	9001a590 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001a586:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001a58a:	e7e6      	b.n	9001a55a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001a58c:	2000      	movs	r0, #0
9001a58e:	4770      	bx	lr
9001a590:	2001      	movs	r0, #1
9001a592:	4770      	bx	lr
9001a594:	2402345c 	.word	0x2402345c
9001a598:	24023464 	.word	0x24023464
9001a59c:	24023460 	.word	0x24023460
9001a5a0:	24023444 	.word	0x24023444

9001a5a4 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001a5a4:	4a12      	ldr	r2, [pc, #72]	@ (9001a5f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001a5a6:	8803      	ldrh	r3, [r0, #0]
9001a5a8:	8811      	ldrh	r1, [r2, #0]
9001a5aa:	428b      	cmp	r3, r1
9001a5ac:	d20b      	bcs.n	9001a5c6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001a5ae:	4a11      	ldr	r2, [pc, #68]	@ (9001a5f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001a5b0:	6812      	ldr	r2, [r2, #0]
9001a5b2:	b112      	cbz	r2, 9001a5ba <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001a5b4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001a5b8:	b9c0      	cbnz	r0, 9001a5ec <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001a5ba:	4a0f      	ldr	r2, [pc, #60]	@ (9001a5f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001a5bc:	6811      	ldr	r1, [r2, #0]
9001a5be:	2214      	movs	r2, #20
9001a5c0:	4353      	muls	r3, r2
9001a5c2:	58c8      	ldr	r0, [r1, r3]
9001a5c4:	4770      	bx	lr
9001a5c6:	4a0d      	ldr	r2, [pc, #52]	@ (9001a5fc <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001a5c8:	8812      	ldrh	r2, [r2, #0]
9001a5ca:	440a      	add	r2, r1
9001a5cc:	4293      	cmp	r3, r2
9001a5ce:	da04      	bge.n	9001a5da <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001a5d0:	4a08      	ldr	r2, [pc, #32]	@ (9001a5f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001a5d2:	6812      	ldr	r2, [r2, #0]
9001a5d4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001a5d8:	4770      	bx	lr
9001a5da:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001a5de:	4293      	cmp	r3, r2
9001a5e0:	d103      	bne.n	9001a5ea <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001a5e2:	4b07      	ldr	r3, [pc, #28]	@ (9001a600 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001a5e4:	681b      	ldr	r3, [r3, #0]
9001a5e6:	6c58      	ldr	r0, [r3, #68]	@ 0x44
9001a5e8:	4770      	bx	lr
9001a5ea:	2000      	movs	r0, #0
9001a5ec:	4770      	bx	lr
9001a5ee:	bf00      	nop
9001a5f0:	2402345c 	.word	0x2402345c
9001a5f4:	24023440 	.word	0x24023440
9001a5f8:	24023464 	.word	0x24023464
9001a5fc:	24023460 	.word	0x24023460
9001a600:	240233d4 	.word	0x240233d4

9001a604 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001a604:	4b24      	ldr	r3, [pc, #144]	@ (9001a698 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001a606:	8802      	ldrh	r2, [r0, #0]
9001a608:	8818      	ldrh	r0, [r3, #0]
9001a60a:	4282      	cmp	r2, r0
9001a60c:	d221      	bcs.n	9001a652 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001a60e:	4b23      	ldr	r3, [pc, #140]	@ (9001a69c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001a610:	6819      	ldr	r1, [r3, #0]
9001a612:	2314      	movs	r3, #20
9001a614:	fb03 1302 	mla	r3, r3, r2, r1
9001a618:	6858      	ldr	r0, [r3, #4]
9001a61a:	2800      	cmp	r0, #0
9001a61c:	d03a      	beq.n	9001a694 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001a61e:	4920      	ldr	r1, [pc, #128]	@ (9001a6a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001a620:	6809      	ldr	r1, [r1, #0]
9001a622:	2900      	cmp	r1, #0
9001a624:	d036      	beq.n	9001a694 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001a626:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001a62a:	2900      	cmp	r1, #0
9001a62c:	d032      	beq.n	9001a694 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001a62e:	891a      	ldrh	r2, [r3, #8]
9001a630:	8958      	ldrh	r0, [r3, #10]
9001a632:	4350      	muls	r0, r2
9001a634:	7c5a      	ldrb	r2, [r3, #17]
9001a636:	7cdb      	ldrb	r3, [r3, #19]
9001a638:	0952      	lsrs	r2, r2, #5
9001a63a:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001a63e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001a642:	2b0b      	cmp	r3, #11
9001a644:	bf18      	it	ne
9001a646:	0040      	lslne	r0, r0, #1
9001a648:	3003      	adds	r0, #3
9001a64a:	f020 0003 	bic.w	r0, r0, #3
9001a64e:	4408      	add	r0, r1
9001a650:	4770      	bx	lr
9001a652:	4b14      	ldr	r3, [pc, #80]	@ (9001a6a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001a654:	881b      	ldrh	r3, [r3, #0]
9001a656:	4403      	add	r3, r0
9001a658:	429a      	cmp	r2, r3
9001a65a:	da1a      	bge.n	9001a692 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001a65c:	4b12      	ldr	r3, [pc, #72]	@ (9001a6a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001a65e:	1a10      	subs	r0, r2, r0
9001a660:	210e      	movs	r1, #14
9001a662:	681b      	ldr	r3, [r3, #0]
9001a664:	fb01 3000 	mla	r0, r1, r0, r3
9001a668:	7b03      	ldrb	r3, [r0, #12]
9001a66a:	f003 031f 	and.w	r3, r3, #31
9001a66e:	2b0b      	cmp	r3, #11
9001a670:	d10b      	bne.n	9001a68a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001a672:	8903      	ldrh	r3, [r0, #8]
9001a674:	8940      	ldrh	r0, [r0, #10]
9001a676:	4358      	muls	r0, r3
9001a678:	4b09      	ldr	r3, [pc, #36]	@ (9001a6a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001a67a:	3003      	adds	r0, #3
9001a67c:	6819      	ldr	r1, [r3, #0]
9001a67e:	f020 0303 	bic.w	r3, r0, #3
9001a682:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001a686:	4418      	add	r0, r3
9001a688:	4770      	bx	lr
9001a68a:	2b0d      	cmp	r3, #13
9001a68c:	d101      	bne.n	9001a692 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001a68e:	300d      	adds	r0, #13
9001a690:	4770      	bx	lr
9001a692:	2000      	movs	r0, #0
9001a694:	4770      	bx	lr
9001a696:	bf00      	nop
9001a698:	2402345c 	.word	0x2402345c
9001a69c:	24023464 	.word	0x24023464
9001a6a0:	24023440 	.word	0x24023440
9001a6a4:	24023460 	.word	0x24023460
9001a6a8:	24023444 	.word	0x24023444

9001a6ac <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001a6ac:	4b1f      	ldr	r3, [pc, #124]	@ (9001a72c <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
9001a6ae:	b510      	push	{r4, lr}
9001a6b0:	8802      	ldrh	r2, [r0, #0]
9001a6b2:	881b      	ldrh	r3, [r3, #0]
9001a6b4:	429a      	cmp	r2, r3
9001a6b6:	d21a      	bcs.n	9001a6ee <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
9001a6b8:	4b1d      	ldr	r3, [pc, #116]	@ (9001a730 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
9001a6ba:	2114      	movs	r1, #20
9001a6bc:	681b      	ldr	r3, [r3, #0]
9001a6be:	fb01 3102 	mla	r1, r1, r2, r3
9001a6c2:	7c4b      	ldrb	r3, [r1, #17]
9001a6c4:	0958      	lsrs	r0, r3, #5
9001a6c6:	7ccb      	ldrb	r3, [r1, #19]
9001a6c8:	491a      	ldr	r1, [pc, #104]	@ (9001a734 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
9001a6ca:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001a6ce:	6809      	ldr	r1, [r1, #0]
9001a6d0:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
9001a6d4:	b2d8      	uxtb	r0, r3
9001a6d6:	b149      	cbz	r1, 9001a6ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a6d8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001a6dc:	b132      	cbz	r2, 9001a6ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a6de:	2b0e      	cmp	r3, #14
9001a6e0:	d021      	beq.n	9001a726 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001a6e2:	280f      	cmp	r0, #15
9001a6e4:	d01d      	beq.n	9001a722 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
9001a6e6:	2810      	cmp	r0, #16
9001a6e8:	bf08      	it	eq
9001a6ea:	2002      	moveq	r0, #2
9001a6ec:	bd10      	pop	{r4, pc}
9001a6ee:	4912      	ldr	r1, [pc, #72]	@ (9001a738 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
9001a6f0:	8809      	ldrh	r1, [r1, #0]
9001a6f2:	4419      	add	r1, r3
9001a6f4:	428a      	cmp	r2, r1
9001a6f6:	da09      	bge.n	9001a70c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
9001a6f8:	1ad3      	subs	r3, r2, r3
9001a6fa:	4a10      	ldr	r2, [pc, #64]	@ (9001a73c <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
9001a6fc:	210e      	movs	r1, #14
9001a6fe:	6812      	ldr	r2, [r2, #0]
9001a700:	fb01 2303 	mla	r3, r1, r3, r2
9001a704:	7b18      	ldrb	r0, [r3, #12]
9001a706:	f000 001f 	and.w	r0, r0, #31
9001a70a:	e7ef      	b.n	9001a6ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a70c:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
9001a710:	429a      	cmp	r2, r3
9001a712:	d108      	bne.n	9001a726 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001a714:	f7f6 fa94 	bl	90010c40 <_ZN8touchgfx3HAL3lcdEv>
9001a718:	6803      	ldr	r3, [r0, #0]
9001a71a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001a71e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001a720:	4718      	bx	r3
9001a722:	2001      	movs	r0, #1
9001a724:	e7e2      	b.n	9001a6ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a726:	2000      	movs	r0, #0
9001a728:	e7e0      	b.n	9001a6ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a72a:	bf00      	nop
9001a72c:	2402345c 	.word	0x2402345c
9001a730:	24023464 	.word	0x24023464
9001a734:	24023440 	.word	0x24023440
9001a738:	24023460 	.word	0x24023460
9001a73c:	24023444 	.word	0x24023444

9001a740 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001a740:	2010      	movs	r0, #16
9001a742:	4770      	bx	lr

9001a744 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001a744:	4b02      	ldr	r3, [pc, #8]	@ (9001a750 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001a746:	8818      	ldrh	r0, [r3, #0]
9001a748:	0040      	lsls	r0, r0, #1
9001a74a:	b280      	uxth	r0, r0
9001a74c:	4770      	bx	lr
9001a74e:	bf00      	nop
9001a750:	240233ce 	.word	0x240233ce

9001a754 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001a754:	2bff      	cmp	r3, #255	@ 0xff
9001a756:	d05e      	beq.n	9001a816 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
9001a758:	2a0b      	cmp	r2, #11
9001a75a:	d058      	beq.n	9001a80e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001a75c:	d80e      	bhi.n	9001a77c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001a75e:	2a03      	cmp	r2, #3
9001a760:	d04d      	beq.n	9001a7fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
9001a762:	d804      	bhi.n	9001a76e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001a764:	2a01      	cmp	r2, #1
9001a766:	d04c      	beq.n	9001a802 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
9001a768:	d94d      	bls.n	9001a806 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
9001a76a:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
9001a76c:	e031      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a76e:	2a09      	cmp	r2, #9
9001a770:	d04d      	beq.n	9001a80e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001a772:	d84a      	bhi.n	9001a80a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001a774:	2a08      	cmp	r2, #8
9001a776:	d048      	beq.n	9001a80a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001a778:	2300      	movs	r3, #0
9001a77a:	e02a      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a77c:	2a2f      	cmp	r2, #47	@ 0x2f
9001a77e:	d02c      	beq.n	9001a7da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
9001a780:	d811      	bhi.n	9001a7a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
9001a782:	2a2d      	cmp	r2, #45	@ 0x2d
9001a784:	d018      	beq.n	9001a7b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
9001a786:	d831      	bhi.n	9001a7ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
9001a788:	2a2c      	cmp	r2, #44	@ 0x2c
9001a78a:	d1f5      	bne.n	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a78c:	684a      	ldr	r2, [r1, #4]
9001a78e:	7813      	ldrb	r3, [r2, #0]
9001a790:	7852      	ldrb	r2, [r2, #1]
9001a792:	2a00      	cmp	r2, #0
9001a794:	d1f0      	bne.n	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a796:	2b01      	cmp	r3, #1
9001a798:	d01d      	beq.n	9001a7d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001a79a:	2b00      	cmp	r3, #0
9001a79c:	d02d      	beq.n	9001a7fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001a79e:	2b02      	cmp	r3, #2
9001a7a0:	d1ea      	bne.n	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a7a2:	68c3      	ldr	r3, [r0, #12]
9001a7a4:	e015      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a7a6:	2a31      	cmp	r2, #49	@ 0x31
9001a7a8:	d004      	beq.n	9001a7b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
9001a7aa:	d332      	bcc.n	9001a812 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001a7ac:	2a32      	cmp	r2, #50	@ 0x32
9001a7ae:	d030      	beq.n	9001a812 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001a7b0:	2a33      	cmp	r2, #51	@ 0x33
9001a7b2:	d1e1      	bne.n	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a7b4:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9001a7b6:	e00c      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a7b8:	684a      	ldr	r2, [r1, #4]
9001a7ba:	7813      	ldrb	r3, [r2, #0]
9001a7bc:	7852      	ldrb	r2, [r2, #1]
9001a7be:	2a00      	cmp	r2, #0
9001a7c0:	d1da      	bne.n	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a7c2:	2b01      	cmp	r3, #1
9001a7c4:	d004      	beq.n	9001a7d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
9001a7c6:	d30f      	bcc.n	9001a7e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
9001a7c8:	2b02      	cmp	r3, #2
9001a7ca:	d1d5      	bne.n	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a7cc:	6943      	ldr	r3, [r0, #20]
9001a7ce:	e000      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a7d0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001a7d2:	4618      	mov	r0, r3
9001a7d4:	4770      	bx	lr
9001a7d6:	69c3      	ldr	r3, [r0, #28]
9001a7d8:	e7fb      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a7da:	684b      	ldr	r3, [r1, #4]
9001a7dc:	781a      	ldrb	r2, [r3, #0]
9001a7de:	785b      	ldrb	r3, [r3, #1]
9001a7e0:	2b00      	cmp	r3, #0
9001a7e2:	d1c9      	bne.n	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a7e4:	2a00      	cmp	r2, #0
9001a7e6:	d1f4      	bne.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a7e8:	6b43      	ldr	r3, [r0, #52]	@ 0x34
9001a7ea:	e7f2      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a7ec:	684b      	ldr	r3, [r1, #4]
9001a7ee:	781a      	ldrb	r2, [r3, #0]
9001a7f0:	785b      	ldrb	r3, [r3, #1]
9001a7f2:	2b00      	cmp	r3, #0
9001a7f4:	d1c0      	bne.n	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a7f6:	2a00      	cmp	r2, #0
9001a7f8:	d1eb      	bne.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a7fa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001a7fc:	e7e9      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a7fe:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
9001a800:	e7e7      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a802:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9001a804:	e7e5      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a806:	6c43      	ldr	r3, [r0, #68]	@ 0x44
9001a808:	e7e3      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a80a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9001a80c:	e7e1      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a80e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
9001a810:	e7df      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a812:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
9001a814:	e7dd      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a816:	2a0b      	cmp	r2, #11
9001a818:	d059      	beq.n	9001a8ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001a81a:	d80e      	bhi.n	9001a83a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
9001a81c:	2a03      	cmp	r2, #3
9001a81e:	d050      	beq.n	9001a8c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
9001a820:	d804      	bhi.n	9001a82c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
9001a822:	2a01      	cmp	r2, #1
9001a824:	d04f      	beq.n	9001a8c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
9001a826:	d950      	bls.n	9001a8ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
9001a828:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001a82a:	e7d2      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a82c:	2a09      	cmp	r2, #9
9001a82e:	d04e      	beq.n	9001a8ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001a830:	d801      	bhi.n	9001a836 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
9001a832:	2a08      	cmp	r2, #8
9001a834:	d1a0      	bne.n	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a836:	6e03      	ldr	r3, [r0, #96]	@ 0x60
9001a838:	e7cb      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a83a:	2a2f      	cmp	r2, #47	@ 0x2f
9001a83c:	d02d      	beq.n	9001a89a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
9001a83e:	d811      	bhi.n	9001a864 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001a840:	2a2d      	cmp	r2, #45	@ 0x2d
9001a842:	d018      	beq.n	9001a876 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
9001a844:	d833      	bhi.n	9001a8ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
9001a846:	2a2c      	cmp	r2, #44	@ 0x2c
9001a848:	d196      	bne.n	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a84a:	684a      	ldr	r2, [r1, #4]
9001a84c:	7813      	ldrb	r3, [r2, #0]
9001a84e:	7852      	ldrb	r2, [r2, #1]
9001a850:	2a00      	cmp	r2, #0
9001a852:	d191      	bne.n	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a854:	2b01      	cmp	r3, #1
9001a856:	d01e      	beq.n	9001a896 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001a858:	2b00      	cmp	r3, #0
9001a85a:	d030      	beq.n	9001a8be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
9001a85c:	2b02      	cmp	r3, #2
9001a85e:	d18b      	bne.n	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a860:	6903      	ldr	r3, [r0, #16]
9001a862:	e7b6      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a864:	2a31      	cmp	r2, #49	@ 0x31
9001a866:	d004      	beq.n	9001a872 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
9001a868:	d333      	bcc.n	9001a8d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001a86a:	2a32      	cmp	r2, #50	@ 0x32
9001a86c:	d031      	beq.n	9001a8d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001a86e:	2a33      	cmp	r2, #51	@ 0x33
9001a870:	d182      	bne.n	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a872:	6f83      	ldr	r3, [r0, #120]	@ 0x78
9001a874:	e7ad      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a876:	684a      	ldr	r2, [r1, #4]
9001a878:	7813      	ldrb	r3, [r2, #0]
9001a87a:	7852      	ldrb	r2, [r2, #1]
9001a87c:	2a00      	cmp	r2, #0
9001a87e:	f47f af7b 	bne.w	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a882:	2b01      	cmp	r3, #1
9001a884:	d005      	beq.n	9001a892 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001a886:	d310      	bcc.n	9001a8aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
9001a888:	2b02      	cmp	r3, #2
9001a88a:	f47f af75 	bne.w	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a88e:	6983      	ldr	r3, [r0, #24]
9001a890:	e79f      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a892:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001a894:	e79d      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a896:	6a03      	ldr	r3, [r0, #32]
9001a898:	e79b      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a89a:	684b      	ldr	r3, [r1, #4]
9001a89c:	781a      	ldrb	r2, [r3, #0]
9001a89e:	785b      	ldrb	r3, [r3, #1]
9001a8a0:	2b00      	cmp	r3, #0
9001a8a2:	f47f af69 	bne.w	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a8a6:	2a00      	cmp	r2, #0
9001a8a8:	d193      	bne.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a8aa:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9001a8ac:	e791      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a8ae:	684b      	ldr	r3, [r1, #4]
9001a8b0:	781a      	ldrb	r2, [r3, #0]
9001a8b2:	785b      	ldrb	r3, [r3, #1]
9001a8b4:	2b00      	cmp	r3, #0
9001a8b6:	f47f af5f 	bne.w	9001a778 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a8ba:	2a00      	cmp	r2, #0
9001a8bc:	d189      	bne.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a8be:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001a8c0:	e787      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a8c2:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9001a8c4:	e785      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a8c6:	6d83      	ldr	r3, [r0, #88]	@ 0x58
9001a8c8:	e783      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a8ca:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9001a8cc:	e781      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a8ce:	6e83      	ldr	r3, [r0, #104]	@ 0x68
9001a8d0:	e77f      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a8d2:	6f03      	ldr	r3, [r0, #112]	@ 0x70
9001a8d4:	e77d      	b.n	9001a7d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

9001a8d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a8d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a8da:	b087      	sub	sp, #28
9001a8dc:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001a8de:	9205      	str	r2, [sp, #20]
9001a8e0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001a8e4:	9101      	str	r1, [sp, #4]
9001a8e6:	9202      	str	r2, [sp, #8]
9001a8e8:	6841      	ldr	r1, [r0, #4]
9001a8ea:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001a8ee:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001a8f2:	fb01 2404 	mla	r4, r1, r4, r2
9001a8f6:	6802      	ldr	r2, [r0, #0]
9001a8f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a8fc:	f8de 2000 	ldr.w	r2, [lr]
9001a900:	9203      	str	r2, [sp, #12]
9001a902:	f8de 2004 	ldr.w	r2, [lr, #4]
9001a906:	3204      	adds	r2, #4
9001a908:	9204      	str	r2, [sp, #16]
9001a90a:	9a02      	ldr	r2, [sp, #8]
9001a90c:	43d6      	mvns	r6, r2
9001a90e:	b2f6      	uxtb	r6, r6
9001a910:	9a01      	ldr	r2, [sp, #4]
9001a912:	2a00      	cmp	r2, #0
9001a914:	dc03      	bgt.n	9001a91e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001a916:	9a05      	ldr	r2, [sp, #20]
9001a918:	2a00      	cmp	r2, #0
9001a91a:	f340 8129 	ble.w	9001ab70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001a91e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001a920:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001a924:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a928:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001a92a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001a92e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a932:	2b00      	cmp	r3, #0
9001a934:	dd0e      	ble.n	9001a954 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a936:	1408      	asrs	r0, r1, #16
9001a938:	d405      	bmi.n	9001a946 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a93a:	4560      	cmp	r0, ip
9001a93c:	da03      	bge.n	9001a946 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a93e:	1410      	asrs	r0, r2, #16
9001a940:	d401      	bmi.n	9001a946 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a942:	42b8      	cmp	r0, r7
9001a944:	db07      	blt.n	9001a956 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a946:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a948:	3b01      	subs	r3, #1
9001a94a:	3402      	adds	r4, #2
9001a94c:	4401      	add	r1, r0
9001a94e:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001a950:	4402      	add	r2, r0
9001a952:	e7ee      	b.n	9001a932 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001a954:	d071      	beq.n	9001aa3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a956:	1e58      	subs	r0, r3, #1
9001a958:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001a95a:	fb05 1500 	mla	r5, r5, r0, r1
9001a95e:	142d      	asrs	r5, r5, #16
9001a960:	d45f      	bmi.n	9001aa22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a962:	4565      	cmp	r5, ip
9001a964:	da5d      	bge.n	9001aa22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a966:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001a968:	fb05 2000 	mla	r0, r5, r0, r2
9001a96c:	1400      	asrs	r0, r0, #16
9001a96e:	d458      	bmi.n	9001aa22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a970:	42b8      	cmp	r0, r7
9001a972:	da56      	bge.n	9001aa22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a974:	4699      	mov	r9, r3
9001a976:	46a2      	mov	sl, r4
9001a978:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001a97c:	f1b9 0f00 	cmp.w	r9, #0
9001a980:	dd57      	ble.n	9001aa32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001a982:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001a986:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001a98a:	9803      	ldr	r0, [sp, #12]
9001a98c:	140d      	asrs	r5, r1, #16
9001a98e:	f109 39ff 	add.w	r9, r9, #4294967295
9001a992:	fb07 000c 	mla	r0, r7, ip, r0
9001a996:	5d40      	ldrb	r0, [r0, r5]
9001a998:	9d04      	ldr	r5, [sp, #16]
9001a99a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001a99e:	f8ba 5000 	ldrh.w	r5, [sl]
9001a9a2:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001a9a6:	122f      	asrs	r7, r5, #8
9001a9a8:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001a9ac:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a9b0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a9b4:	00ed      	lsls	r5, r5, #3
9001a9b6:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001a9ba:	fb17 f706 	smulbb	r7, r7, r6
9001a9be:	b2ed      	uxtb	r5, r5
9001a9c0:	fb18 f806 	smulbb	r8, r8, r6
9001a9c4:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001a9c8:	10c7      	asrs	r7, r0, #3
9001a9ca:	fb15 f506 	smulbb	r5, r5, r6
9001a9ce:	00c0      	lsls	r0, r0, #3
9001a9d0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a9d4:	fa1f fc8c 	uxth.w	ip, ip
9001a9d8:	b2c0      	uxtb	r0, r0
9001a9da:	fb07 870b 	mla	r7, r7, fp, r8
9001a9de:	fb00 500b 	mla	r0, r0, fp, r5
9001a9e2:	f10c 0501 	add.w	r5, ip, #1
9001a9e6:	b2bf      	uxth	r7, r7
9001a9e8:	b280      	uxth	r0, r0
9001a9ea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a9ee:	f107 0801 	add.w	r8, r7, #1
9001a9f2:	1c45      	adds	r5, r0, #1
9001a9f4:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001a9f8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a9fc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001aa00:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001aa02:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001aa06:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001aa0a:	4401      	add	r1, r0
9001aa0c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001aa10:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001aa12:	ea45 0c0c 	orr.w	ip, r5, ip
9001aa16:	4402      	add	r2, r0
9001aa18:	ea4c 0c08 	orr.w	ip, ip, r8
9001aa1c:	f82a cb02 	strh.w	ip, [sl], #2
9001aa20:	e7ac      	b.n	9001a97c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001aa22:	f04f 0800 	mov.w	r8, #0
9001aa26:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001aa2a:	eb03 0008 	add.w	r0, r3, r8
9001aa2e:	2800      	cmp	r0, #0
9001aa30:	dc41      	bgt.n	9001aab6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001aa32:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001aa36:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001aa3a:	9b01      	ldr	r3, [sp, #4]
9001aa3c:	2b00      	cmp	r3, #0
9001aa3e:	f340 8097 	ble.w	9001ab70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001aa42:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001aa46:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001aa48:	ee30 0a04 	vadd.f32	s0, s0, s8
9001aa4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001aa50:	eef0 6a62 	vmov.f32	s13, s5
9001aa54:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001aa58:	ee31 1a05 	vadd.f32	s2, s2, s10
9001aa5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001aa60:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001aa64:	eef0 6a43 	vmov.f32	s13, s6
9001aa68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001aa6c:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001aa70:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001aa74:	ee61 7a27 	vmul.f32	s15, s2, s15
9001aa78:	ee77 2a62 	vsub.f32	s5, s14, s5
9001aa7c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001aa80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001aa84:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001aa88:	ee12 2a90 	vmov	r2, s5
9001aa8c:	eef0 2a47 	vmov.f32	s5, s14
9001aa90:	fb92 f3f3 	sdiv	r3, r2, r3
9001aa94:	ee13 2a10 	vmov	r2, s6
9001aa98:	9313      	str	r3, [sp, #76]	@ 0x4c
9001aa9a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001aa9c:	eeb0 3a67 	vmov.f32	s6, s15
9001aaa0:	fb92 f3f3 	sdiv	r3, r2, r3
9001aaa4:	9314      	str	r3, [sp, #80]	@ 0x50
9001aaa6:	9b01      	ldr	r3, [sp, #4]
9001aaa8:	9a05      	ldr	r2, [sp, #20]
9001aaaa:	3b01      	subs	r3, #1
9001aaac:	9301      	str	r3, [sp, #4]
9001aaae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001aab0:	bf08      	it	eq
9001aab2:	4613      	moveq	r3, r2
9001aab4:	e72c      	b.n	9001a910 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001aab6:	140f      	asrs	r7, r1, #16
9001aab8:	d453      	bmi.n	9001ab62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001aaba:	f8de 5008 	ldr.w	r5, [lr, #8]
9001aabe:	42bd      	cmp	r5, r7
9001aac0:	dd4f      	ble.n	9001ab62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001aac2:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001aac6:	d44c      	bmi.n	9001ab62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001aac8:	f8de 000c 	ldr.w	r0, [lr, #12]
9001aacc:	4560      	cmp	r0, ip
9001aace:	dd48      	ble.n	9001ab62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001aad0:	9803      	ldr	r0, [sp, #12]
9001aad2:	b22d      	sxth	r5, r5
9001aad4:	fb0c 0505 	mla	r5, ip, r5, r0
9001aad8:	5de8      	ldrb	r0, [r5, r7]
9001aada:	9d04      	ldr	r5, [sp, #16]
9001aadc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001aae0:	f06f 0501 	mvn.w	r5, #1
9001aae4:	fb05 fb08 	mul.w	fp, r5, r8
9001aae8:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001aaec:	f834 500b 	ldrh.w	r5, [r4, fp]
9001aaf0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001aaf4:	122f      	asrs	r7, r5, #8
9001aaf6:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001aafa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001aafe:	00ed      	lsls	r5, r5, #3
9001ab00:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001ab04:	fb17 f706 	smulbb	r7, r7, r6
9001ab08:	b2ed      	uxtb	r5, r5
9001ab0a:	fb19 f906 	smulbb	r9, r9, r6
9001ab0e:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001ab12:	10c7      	asrs	r7, r0, #3
9001ab14:	fb15 f506 	smulbb	r5, r5, r6
9001ab18:	00c0      	lsls	r0, r0, #3
9001ab1a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ab1e:	fa1f fc8c 	uxth.w	ip, ip
9001ab22:	b2c0      	uxtb	r0, r0
9001ab24:	fb07 970a 	mla	r7, r7, sl, r9
9001ab28:	fb00 500a 	mla	r0, r0, sl, r5
9001ab2c:	f10c 0501 	add.w	r5, ip, #1
9001ab30:	b2bf      	uxth	r7, r7
9001ab32:	b280      	uxth	r0, r0
9001ab34:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001ab38:	f107 0901 	add.w	r9, r7, #1
9001ab3c:	1c45      	adds	r5, r0, #1
9001ab3e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001ab42:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001ab46:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001ab4a:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001ab4e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001ab52:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001ab56:	ea45 0c0c 	orr.w	ip, r5, ip
9001ab5a:	ea4c 0c09 	orr.w	ip, ip, r9
9001ab5e:	f824 c00b 	strh.w	ip, [r4, fp]
9001ab62:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001ab64:	f108 38ff 	add.w	r8, r8, #4294967295
9001ab68:	4401      	add	r1, r0
9001ab6a:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001ab6c:	4402      	add	r2, r0
9001ab6e:	e75c      	b.n	9001aa2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001ab70:	b007      	add	sp, #28
9001ab72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ab76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ab76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ab7a:	b085      	sub	sp, #20
9001ab7c:	4693      	mov	fp, r2
9001ab7e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ab82:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001ab84:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001ab86:	6870      	ldr	r0, [r6, #4]
9001ab88:	9100      	str	r1, [sp, #0]
9001ab8a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001ab8e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001ab92:	fb00 2404 	mla	r4, r0, r4, r2
9001ab96:	6832      	ldr	r2, [r6, #0]
9001ab98:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ab9c:	682a      	ldr	r2, [r5, #0]
9001ab9e:	9201      	str	r2, [sp, #4]
9001aba0:	686a      	ldr	r2, [r5, #4]
9001aba2:	3204      	adds	r2, #4
9001aba4:	9202      	str	r2, [sp, #8]
9001aba6:	9a00      	ldr	r2, [sp, #0]
9001aba8:	2a00      	cmp	r2, #0
9001abaa:	dc03      	bgt.n	9001abb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001abac:	f1bb 0f00 	cmp.w	fp, #0
9001abb0:	f340 80a0 	ble.w	9001acf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001abb4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001abb6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001abba:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001abbe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001abc0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001abc4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001abc8:	2b00      	cmp	r3, #0
9001abca:	dd0c      	ble.n	9001abe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001abcc:	1406      	asrs	r6, r0, #16
9001abce:	d405      	bmi.n	9001abdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001abd0:	454e      	cmp	r6, r9
9001abd2:	da03      	bge.n	9001abdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001abd4:	1416      	asrs	r6, r2, #16
9001abd6:	d401      	bmi.n	9001abdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001abd8:	4546      	cmp	r6, r8
9001abda:	db05      	blt.n	9001abe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001abdc:	4470      	add	r0, lr
9001abde:	4462      	add	r2, ip
9001abe0:	3b01      	subs	r3, #1
9001abe2:	3402      	adds	r4, #2
9001abe4:	e7f0      	b.n	9001abc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001abe6:	d00f      	beq.n	9001ac08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001abe8:	1e5e      	subs	r6, r3, #1
9001abea:	fb0e 0706 	mla	r7, lr, r6, r0
9001abee:	143f      	asrs	r7, r7, #16
9001abf0:	d541      	bpl.n	9001ac76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001abf2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001abf6:	4698      	mov	r8, r3
9001abf8:	9603      	str	r6, [sp, #12]
9001abfa:	f1b8 0f00 	cmp.w	r8, #0
9001abfe:	dc59      	bgt.n	9001acb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001ac00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ac04:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ac08:	9b00      	ldr	r3, [sp, #0]
9001ac0a:	2b00      	cmp	r3, #0
9001ac0c:	dd72      	ble.n	9001acf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001ac0e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ac12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ac14:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ac18:	eeb0 6a62 	vmov.f32	s12, s5
9001ac1c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ac20:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ac24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ac28:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001ac2c:	eeb0 6a43 	vmov.f32	s12, s6
9001ac30:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ac34:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001ac38:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ac3c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ac40:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ac44:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ac48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ac4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ac50:	ee12 2a90 	vmov	r2, s5
9001ac54:	eef0 2a47 	vmov.f32	s5, s14
9001ac58:	fb92 fef3 	sdiv	lr, r2, r3
9001ac5c:	ee13 2a10 	vmov	r2, s6
9001ac60:	eeb0 3a67 	vmov.f32	s6, s15
9001ac64:	fb92 fcf3 	sdiv	ip, r2, r3
9001ac68:	9b00      	ldr	r3, [sp, #0]
9001ac6a:	3b01      	subs	r3, #1
9001ac6c:	9300      	str	r3, [sp, #0]
9001ac6e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ac70:	bf08      	it	eq
9001ac72:	465b      	moveq	r3, fp
9001ac74:	e797      	b.n	9001aba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001ac76:	454f      	cmp	r7, r9
9001ac78:	dabb      	bge.n	9001abf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001ac7a:	fb0c 2606 	mla	r6, ip, r6, r2
9001ac7e:	1436      	asrs	r6, r6, #16
9001ac80:	d4b7      	bmi.n	9001abf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001ac82:	4546      	cmp	r6, r8
9001ac84:	dab5      	bge.n	9001abf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001ac86:	461e      	mov	r6, r3
9001ac88:	46a0      	mov	r8, r4
9001ac8a:	2e00      	cmp	r6, #0
9001ac8c:	ddb8      	ble.n	9001ac00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001ac8e:	1417      	asrs	r7, r2, #16
9001ac90:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001ac94:	9901      	ldr	r1, [sp, #4]
9001ac96:	ea4f 4920 	mov.w	r9, r0, asr #16
9001ac9a:	4462      	add	r2, ip
9001ac9c:	4470      	add	r0, lr
9001ac9e:	fb0a 1707 	mla	r7, sl, r7, r1
9001aca2:	9902      	ldr	r1, [sp, #8]
9001aca4:	3e01      	subs	r6, #1
9001aca6:	f817 7009 	ldrb.w	r7, [r7, r9]
9001acaa:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001acae:	f828 7b02 	strh.w	r7, [r8], #2
9001acb2:	e7ea      	b.n	9001ac8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001acb4:	ea5f 4920 	movs.w	r9, r0, asr #16
9001acb8:	d417      	bmi.n	9001acea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001acba:	68ae      	ldr	r6, [r5, #8]
9001acbc:	454e      	cmp	r6, r9
9001acbe:	dd14      	ble.n	9001acea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001acc0:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001acc4:	d411      	bmi.n	9001acea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001acc6:	68ef      	ldr	r7, [r5, #12]
9001acc8:	4557      	cmp	r7, sl
9001acca:	dd0e      	ble.n	9001acea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001accc:	9f01      	ldr	r7, [sp, #4]
9001acce:	b236      	sxth	r6, r6
9001acd0:	f06f 0101 	mvn.w	r1, #1
9001acd4:	fb0a 7606 	mla	r6, sl, r6, r7
9001acd8:	9f02      	ldr	r7, [sp, #8]
9001acda:	f816 6009 	ldrb.w	r6, [r6, r9]
9001acde:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001ace2:	fb01 f608 	mul.w	r6, r1, r8
9001ace6:	9903      	ldr	r1, [sp, #12]
9001ace8:	538f      	strh	r7, [r1, r6]
9001acea:	4470      	add	r0, lr
9001acec:	4462      	add	r2, ip
9001acee:	f108 38ff 	add.w	r8, r8, #4294967295
9001acf2:	e782      	b.n	9001abfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001acf4:	b005      	add	sp, #20
9001acf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001acfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001acfa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001acfe:	b087      	sub	sp, #28
9001ad00:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001ad02:	9205      	str	r2, [sp, #20]
9001ad04:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001ad08:	9102      	str	r1, [sp, #8]
9001ad0a:	9203      	str	r2, [sp, #12]
9001ad0c:	6861      	ldr	r1, [r4, #4]
9001ad0e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001ad12:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001ad16:	fb01 2000 	mla	r0, r1, r0, r2
9001ad1a:	6822      	ldr	r2, [r4, #0]
9001ad1c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001ad20:	9200      	str	r2, [sp, #0]
9001ad22:	f8dc 2000 	ldr.w	r2, [ip]
9001ad26:	9204      	str	r2, [sp, #16]
9001ad28:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001ad2c:	3204      	adds	r2, #4
9001ad2e:	9201      	str	r2, [sp, #4]
9001ad30:	9a03      	ldr	r2, [sp, #12]
9001ad32:	43d5      	mvns	r5, r2
9001ad34:	b2ed      	uxtb	r5, r5
9001ad36:	9a02      	ldr	r2, [sp, #8]
9001ad38:	2a00      	cmp	r2, #0
9001ad3a:	dc03      	bgt.n	9001ad44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001ad3c:	9a05      	ldr	r2, [sp, #20]
9001ad3e:	2a00      	cmp	r2, #0
9001ad40:	f340 812c 	ble.w	9001af9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001ad44:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001ad46:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001ad4a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ad4e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ad50:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001ad54:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001ad58:	2b00      	cmp	r3, #0
9001ad5a:	dd10      	ble.n	9001ad7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001ad5c:	140c      	asrs	r4, r1, #16
9001ad5e:	d405      	bmi.n	9001ad6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ad60:	4574      	cmp	r4, lr
9001ad62:	da03      	bge.n	9001ad6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ad64:	1414      	asrs	r4, r2, #16
9001ad66:	d401      	bmi.n	9001ad6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ad68:	42bc      	cmp	r4, r7
9001ad6a:	db09      	blt.n	9001ad80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001ad6c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001ad6e:	3b01      	subs	r3, #1
9001ad70:	9800      	ldr	r0, [sp, #0]
9001ad72:	4421      	add	r1, r4
9001ad74:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001ad76:	3002      	adds	r0, #2
9001ad78:	4422      	add	r2, r4
9001ad7a:	9000      	str	r0, [sp, #0]
9001ad7c:	e7ec      	b.n	9001ad58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001ad7e:	d071      	beq.n	9001ae64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001ad80:	1e5c      	subs	r4, r3, #1
9001ad82:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001ad84:	fb06 1604 	mla	r6, r6, r4, r1
9001ad88:	1436      	asrs	r6, r6, #16
9001ad8a:	d45d      	bmi.n	9001ae48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001ad8c:	4576      	cmp	r6, lr
9001ad8e:	da5b      	bge.n	9001ae48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001ad90:	9e14      	ldr	r6, [sp, #80]	@ 0x50
9001ad92:	fb06 2404 	mla	r4, r6, r4, r2
9001ad96:	1424      	asrs	r4, r4, #16
9001ad98:	d456      	bmi.n	9001ae48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001ad9a:	42bc      	cmp	r4, r7
9001ad9c:	da54      	bge.n	9001ae48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001ad9e:	4698      	mov	r8, r3
9001ada0:	f8dd 9000 	ldr.w	r9, [sp]
9001ada4:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001ada8:	f1b8 0f00 	cmp.w	r8, #0
9001adac:	dd54      	ble.n	9001ae58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001adae:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001adb2:	1414      	asrs	r4, r2, #16
9001adb4:	9804      	ldr	r0, [sp, #16]
9001adb6:	140e      	asrs	r6, r1, #16
9001adb8:	f108 38ff 	add.w	r8, r8, #4294967295
9001adbc:	fb07 0404 	mla	r4, r7, r4, r0
9001adc0:	9801      	ldr	r0, [sp, #4]
9001adc2:	f814 e006 	ldrb.w	lr, [r4, r6]
9001adc6:	f8b9 4000 	ldrh.w	r4, [r9]
9001adca:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001adce:	1227      	asrs	r7, r4, #8
9001add0:	eb00 0b0e 	add.w	fp, r0, lr
9001add4:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001add8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001addc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001adde:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001ade2:	f89b b001 	ldrb.w	fp, [fp, #1]
9001ade6:	4401      	add	r1, r0
9001ade8:	fb16 f60a 	smulbb	r6, r6, sl
9001adec:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001adee:	fb1b fb0a 	smulbb	fp, fp, sl
9001adf2:	fb07 6705 	mla	r7, r7, r5, r6
9001adf6:	10e6      	asrs	r6, r4, #3
9001adf8:	00e4      	lsls	r4, r4, #3
9001adfa:	4402      	add	r2, r0
9001adfc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ae00:	b2bf      	uxth	r7, r7
9001ae02:	b2e4      	uxtb	r4, r4
9001ae04:	fb06 b605 	mla	r6, r6, r5, fp
9001ae08:	fb14 f405 	smulbb	r4, r4, r5
9001ae0c:	b2b6      	uxth	r6, r6
9001ae0e:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001ae12:	1c7c      	adds	r4, r7, #1
9001ae14:	f106 0b01 	add.w	fp, r6, #1
9001ae18:	fa1f fe8e 	uxth.w	lr, lr
9001ae1c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001ae20:	f10e 0401 	add.w	r4, lr, #1
9001ae24:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001ae28:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ae2c:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001ae30:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001ae34:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001ae38:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001ae3c:	4327      	orrs	r7, r4
9001ae3e:	ea47 070b 	orr.w	r7, r7, fp
9001ae42:	f829 7b02 	strh.w	r7, [r9], #2
9001ae46:	e7af      	b.n	9001ada8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001ae48:	f04f 0e00 	mov.w	lr, #0
9001ae4c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001ae50:	eb03 040e 	add.w	r4, r3, lr
9001ae54:	2c00      	cmp	r4, #0
9001ae56:	dc43      	bgt.n	9001aee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001ae58:	9a00      	ldr	r2, [sp, #0]
9001ae5a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ae5e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001ae62:	9300      	str	r3, [sp, #0]
9001ae64:	9b02      	ldr	r3, [sp, #8]
9001ae66:	2b00      	cmp	r3, #0
9001ae68:	f340 8098 	ble.w	9001af9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001ae6c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001ae70:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ae72:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ae76:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ae7a:	eef0 6a62 	vmov.f32	s13, s5
9001ae7e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001ae82:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ae86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ae8a:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001ae8e:	eef0 6a43 	vmov.f32	s13, s6
9001ae92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ae96:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001ae9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ae9e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001aea2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001aea6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001aeaa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001aeae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001aeb2:	ee12 2a90 	vmov	r2, s5
9001aeb6:	eef0 2a47 	vmov.f32	s5, s14
9001aeba:	fb92 f3f3 	sdiv	r3, r2, r3
9001aebe:	ee13 2a10 	vmov	r2, s6
9001aec2:	9313      	str	r3, [sp, #76]	@ 0x4c
9001aec4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001aec6:	eeb0 3a67 	vmov.f32	s6, s15
9001aeca:	fb92 f3f3 	sdiv	r3, r2, r3
9001aece:	9314      	str	r3, [sp, #80]	@ 0x50
9001aed0:	9b02      	ldr	r3, [sp, #8]
9001aed2:	9a05      	ldr	r2, [sp, #20]
9001aed4:	3b01      	subs	r3, #1
9001aed6:	9302      	str	r3, [sp, #8]
9001aed8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001aeda:	bf08      	it	eq
9001aedc:	4613      	moveq	r3, r2
9001aede:	e72a      	b.n	9001ad36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001aee0:	140f      	asrs	r7, r1, #16
9001aee2:	d454      	bmi.n	9001af8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001aee4:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001aee8:	42be      	cmp	r6, r7
9001aeea:	dd50      	ble.n	9001af8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001aeec:	ea5f 4822 	movs.w	r8, r2, asr #16
9001aef0:	d44d      	bmi.n	9001af8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001aef2:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001aef6:	4544      	cmp	r4, r8
9001aef8:	dd49      	ble.n	9001af8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001aefa:	9c04      	ldr	r4, [sp, #16]
9001aefc:	b236      	sxth	r6, r6
9001aefe:	f06f 0001 	mvn.w	r0, #1
9001af02:	fb08 4606 	mla	r6, r8, r6, r4
9001af06:	9c01      	ldr	r4, [sp, #4]
9001af08:	fb00 fa0e 	mul.w	sl, r0, lr
9001af0c:	9800      	ldr	r0, [sp, #0]
9001af0e:	f816 8007 	ldrb.w	r8, [r6, r7]
9001af12:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001af16:	eb04 0b08 	add.w	fp, r4, r8
9001af1a:	f830 400a 	ldrh.w	r4, [r0, sl]
9001af1e:	9801      	ldr	r0, [sp, #4]
9001af20:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001af24:	1227      	asrs	r7, r4, #8
9001af26:	f89b b001 	ldrb.w	fp, [fp, #1]
9001af2a:	fb16 f609 	smulbb	r6, r6, r9
9001af2e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001af32:	f810 8008 	ldrb.w	r8, [r0, r8]
9001af36:	fb1b fb09 	smulbb	fp, fp, r9
9001af3a:	fb07 6705 	mla	r7, r7, r5, r6
9001af3e:	10e6      	asrs	r6, r4, #3
9001af40:	00e4      	lsls	r4, r4, #3
9001af42:	9800      	ldr	r0, [sp, #0]
9001af44:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001af48:	b2bf      	uxth	r7, r7
9001af4a:	b2e4      	uxtb	r4, r4
9001af4c:	fb06 b605 	mla	r6, r6, r5, fp
9001af50:	fb14 f405 	smulbb	r4, r4, r5
9001af54:	b2b6      	uxth	r6, r6
9001af56:	fb08 4809 	mla	r8, r8, r9, r4
9001af5a:	1c7c      	adds	r4, r7, #1
9001af5c:	f106 0b01 	add.w	fp, r6, #1
9001af60:	fa1f f888 	uxth.w	r8, r8
9001af64:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001af68:	f108 0401 	add.w	r4, r8, #1
9001af6c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001af70:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001af74:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001af78:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001af7c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001af80:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001af84:	4327      	orrs	r7, r4
9001af86:	ea47 070b 	orr.w	r7, r7, fp
9001af8a:	f820 700a 	strh.w	r7, [r0, sl]
9001af8e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001af90:	f10e 3eff 	add.w	lr, lr, #4294967295
9001af94:	4401      	add	r1, r0
9001af96:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001af98:	4402      	add	r2, r0
9001af9a:	e759      	b.n	9001ae50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001af9c:	b007      	add	sp, #28
9001af9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001afa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001afa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001afa8:	b085      	sub	sp, #20
9001afaa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001afae:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001afb0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001afb2:	9203      	str	r2, [sp, #12]
9001afb4:	6870      	ldr	r0, [r6, #4]
9001afb6:	686f      	ldr	r7, [r5, #4]
9001afb8:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
9001afbc:	3704      	adds	r7, #4
9001afbe:	9101      	str	r1, [sp, #4]
9001afc0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001afc4:	fb00 2404 	mla	r4, r0, r4, r2
9001afc8:	6832      	ldr	r2, [r6, #0]
9001afca:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001afce:	682a      	ldr	r2, [r5, #0]
9001afd0:	9202      	str	r2, [sp, #8]
9001afd2:	9a01      	ldr	r2, [sp, #4]
9001afd4:	2a00      	cmp	r2, #0
9001afd6:	dc03      	bgt.n	9001afe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001afd8:	9a03      	ldr	r2, [sp, #12]
9001afda:	2a00      	cmp	r2, #0
9001afdc:	f340 80cc 	ble.w	9001b178 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001afe0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001afe2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001afe6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001afea:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001afec:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001aff0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001aff4:	2b00      	cmp	r3, #0
9001aff6:	dd0d      	ble.n	9001b014 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001aff8:	1406      	asrs	r6, r0, #16
9001affa:	d405      	bmi.n	9001b008 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001affc:	454e      	cmp	r6, r9
9001affe:	da03      	bge.n	9001b008 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001b000:	1416      	asrs	r6, r2, #16
9001b002:	d401      	bmi.n	9001b008 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001b004:	4546      	cmp	r6, r8
9001b006:	db06      	blt.n	9001b016 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001b008:	9e12      	ldr	r6, [sp, #72]	@ 0x48
9001b00a:	4460      	add	r0, ip
9001b00c:	3b01      	subs	r3, #1
9001b00e:	3402      	adds	r4, #2
9001b010:	4432      	add	r2, r6
9001b012:	e7ef      	b.n	9001aff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001b014:	d00f      	beq.n	9001b036 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001b016:	1e5e      	subs	r6, r3, #1
9001b018:	fb0c 0e06 	mla	lr, ip, r6, r0
9001b01c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001b020:	d543      	bpl.n	9001b0aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001b022:	4698      	mov	r8, r3
9001b024:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001b028:	f1b8 0f00 	cmp.w	r8, #0
9001b02c:	dc71      	bgt.n	9001b112 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001b02e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b032:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b036:	9b01      	ldr	r3, [sp, #4]
9001b038:	2b00      	cmp	r3, #0
9001b03a:	f340 809d 	ble.w	9001b178 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001b03e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b042:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b044:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b048:	eeb0 6a62 	vmov.f32	s12, s5
9001b04c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b050:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b054:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b058:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001b05c:	eeb0 6a43 	vmov.f32	s12, s6
9001b060:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b064:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001b068:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b06c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b070:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b074:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b078:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b07c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b080:	ee12 2a90 	vmov	r2, s5
9001b084:	eef0 2a47 	vmov.f32	s5, s14
9001b088:	fb92 fcf3 	sdiv	ip, r2, r3
9001b08c:	ee13 2a10 	vmov	r2, s6
9001b090:	eeb0 3a67 	vmov.f32	s6, s15
9001b094:	fb92 f3f3 	sdiv	r3, r2, r3
9001b098:	9312      	str	r3, [sp, #72]	@ 0x48
9001b09a:	9b01      	ldr	r3, [sp, #4]
9001b09c:	9a03      	ldr	r2, [sp, #12]
9001b09e:	3b01      	subs	r3, #1
9001b0a0:	9301      	str	r3, [sp, #4]
9001b0a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b0a4:	bf08      	it	eq
9001b0a6:	4613      	moveq	r3, r2
9001b0a8:	e793      	b.n	9001afd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001b0aa:	45ce      	cmp	lr, r9
9001b0ac:	dab9      	bge.n	9001b022 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b0ae:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001b0b0:	fb01 2606 	mla	r6, r1, r6, r2
9001b0b4:	1436      	asrs	r6, r6, #16
9001b0b6:	d4b4      	bmi.n	9001b022 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b0b8:	4546      	cmp	r6, r8
9001b0ba:	dab2      	bge.n	9001b022 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b0bc:	4698      	mov	r8, r3
9001b0be:	46a2      	mov	sl, r4
9001b0c0:	f1b8 0f00 	cmp.w	r8, #0
9001b0c4:	ddb3      	ble.n	9001b02e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001b0c6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b0ca:	1416      	asrs	r6, r2, #16
9001b0cc:	9902      	ldr	r1, [sp, #8]
9001b0ce:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001b0d2:	f108 38ff 	add.w	r8, r8, #4294967295
9001b0d6:	4460      	add	r0, ip
9001b0d8:	fb09 1606 	mla	r6, r9, r6, r1
9001b0dc:	4928      	ldr	r1, [pc, #160]	@ (9001b180 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001b0de:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001b0e2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001b0e6:	eb07 0b0e 	add.w	fp, r7, lr
9001b0ea:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001b0ee:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001b0f2:	00f6      	lsls	r6, r6, #3
9001b0f4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001b0f8:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001b0fa:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001b0fe:	440a      	add	r2, r1
9001b100:	ea49 0606 	orr.w	r6, r9, r6
9001b104:	f817 900e 	ldrb.w	r9, [r7, lr]
9001b108:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001b10c:	f82a 6b02 	strh.w	r6, [sl], #2
9001b110:	e7d6      	b.n	9001b0c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001b112:	ea5f 4920 	movs.w	r9, r0, asr #16
9001b116:	d429      	bmi.n	9001b16c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b118:	68ae      	ldr	r6, [r5, #8]
9001b11a:	454e      	cmp	r6, r9
9001b11c:	dd26      	ble.n	9001b16c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b11e:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001b122:	d423      	bmi.n	9001b16c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b124:	68e9      	ldr	r1, [r5, #12]
9001b126:	4559      	cmp	r1, fp
9001b128:	dd20      	ble.n	9001b16c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001b12a:	fa0f fe86 	sxth.w	lr, r6
9001b12e:	9902      	ldr	r1, [sp, #8]
9001b130:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001b134:	f06f 0101 	mvn.w	r1, #1
9001b138:	f81e e009 	ldrb.w	lr, [lr, r9]
9001b13c:	fb01 f908 	mul.w	r9, r1, r8
9001b140:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
9001b144:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001b148:	eb07 060e 	add.w	r6, r7, lr
9001b14c:	f896 b002 	ldrb.w	fp, [r6, #2]
9001b150:	7876      	ldrb	r6, [r6, #1]
9001b152:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001b156:	00f6      	lsls	r6, r6, #3
9001b158:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001b15c:	ea4b 0606 	orr.w	r6, fp, r6
9001b160:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001b164:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001b168:	f82a 6009 	strh.w	r6, [sl, r9]
9001b16c:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001b16e:	4460      	add	r0, ip
9001b170:	f108 38ff 	add.w	r8, r8, #4294967295
9001b174:	440a      	add	r2, r1
9001b176:	e757      	b.n	9001b028 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001b178:	b005      	add	sp, #20
9001b17a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b17e:	bf00      	nop
9001b180:	fffff800 	.word	0xfffff800

9001b184 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b188:	b087      	sub	sp, #28
9001b18a:	468b      	mov	fp, r1
9001b18c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b190:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001b192:	9204      	str	r2, [sp, #16]
9001b194:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b198:	6841      	ldr	r1, [r0, #4]
9001b19a:	9205      	str	r2, [sp, #20]
9001b19c:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001b1a0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001b1a4:	fb01 2404 	mla	r4, r1, r4, r2
9001b1a8:	6802      	ldr	r2, [r0, #0]
9001b1aa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b1ae:	f8dc 2000 	ldr.w	r2, [ip]
9001b1b2:	9201      	str	r2, [sp, #4]
9001b1b4:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001b1b8:	3204      	adds	r2, #4
9001b1ba:	9202      	str	r2, [sp, #8]
9001b1bc:	f1bb 0f00 	cmp.w	fp, #0
9001b1c0:	dc03      	bgt.n	9001b1ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001b1c2:	9a04      	ldr	r2, [sp, #16]
9001b1c4:	2a00      	cmp	r2, #0
9001b1c6:	f340 8138 	ble.w	9001b43a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001b1ca:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b1cc:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001b1d0:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b1d4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b1d6:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001b1da:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b1de:	2b00      	cmp	r3, #0
9001b1e0:	dd0e      	ble.n	9001b200 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b1e2:	1402      	asrs	r2, r0, #16
9001b1e4:	d405      	bmi.n	9001b1f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001b1e6:	42ba      	cmp	r2, r7
9001b1e8:	da03      	bge.n	9001b1f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001b1ea:	140a      	asrs	r2, r1, #16
9001b1ec:	d401      	bmi.n	9001b1f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001b1ee:	42b2      	cmp	r2, r6
9001b1f0:	db07      	blt.n	9001b202 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b1f2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b1f4:	3b01      	subs	r3, #1
9001b1f6:	3402      	adds	r4, #2
9001b1f8:	4410      	add	r0, r2
9001b1fa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b1fc:	4411      	add	r1, r2
9001b1fe:	e7ee      	b.n	9001b1de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001b200:	d019      	beq.n	9001b236 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001b202:	1e5a      	subs	r2, r3, #1
9001b204:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b206:	fb05 0502 	mla	r5, r5, r2, r0
9001b20a:	142d      	asrs	r5, r5, #16
9001b20c:	d409      	bmi.n	9001b222 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b20e:	42bd      	cmp	r5, r7
9001b210:	da07      	bge.n	9001b222 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b212:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001b214:	fb05 1202 	mla	r2, r5, r2, r1
9001b218:	1412      	asrs	r2, r2, #16
9001b21a:	d402      	bmi.n	9001b222 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b21c:	42b2      	cmp	r2, r6
9001b21e:	f2c0 80ac 	blt.w	9001b37a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001b222:	f04f 0e00 	mov.w	lr, #0
9001b226:	eb03 020e 	add.w	r2, r3, lr
9001b22a:	2a00      	cmp	r2, #0
9001b22c:	dc3e      	bgt.n	9001b2ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001b22e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b232:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b236:	f1bb 0f00 	cmp.w	fp, #0
9001b23a:	f340 80fe 	ble.w	9001b43a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001b23e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b242:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b244:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b248:	f1bb 0b01 	subs.w	fp, fp, #1
9001b24c:	eeb0 6a62 	vmov.f32	s12, s5
9001b250:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b254:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b258:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b25c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001b260:	eeb0 6a43 	vmov.f32	s12, s6
9001b264:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b268:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001b26c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b270:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b274:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b278:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b27c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b280:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b284:	ee12 2a90 	vmov	r2, s5
9001b288:	eef0 2a47 	vmov.f32	s5, s14
9001b28c:	fb92 f3f3 	sdiv	r3, r2, r3
9001b290:	ee13 2a10 	vmov	r2, s6
9001b294:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b296:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b298:	eeb0 3a67 	vmov.f32	s6, s15
9001b29c:	fb92 f3f3 	sdiv	r3, r2, r3
9001b2a0:	9a04      	ldr	r2, [sp, #16]
9001b2a2:	9314      	str	r3, [sp, #80]	@ 0x50
9001b2a4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b2a6:	bf08      	it	eq
9001b2a8:	4613      	moveq	r3, r2
9001b2aa:	e787      	b.n	9001b1bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001b2ac:	1406      	asrs	r6, r0, #16
9001b2ae:	d45d      	bmi.n	9001b36c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001b2b0:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001b2b4:	42b5      	cmp	r5, r6
9001b2b6:	dd59      	ble.n	9001b36c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001b2b8:	140f      	asrs	r7, r1, #16
9001b2ba:	d457      	bmi.n	9001b36c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001b2bc:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001b2c0:	42ba      	cmp	r2, r7
9001b2c2:	dd53      	ble.n	9001b36c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001b2c4:	9a01      	ldr	r2, [sp, #4]
9001b2c6:	b22d      	sxth	r5, r5
9001b2c8:	fb07 2505 	mla	r5, r7, r5, r2
9001b2cc:	5daa      	ldrb	r2, [r5, r6]
9001b2ce:	9d02      	ldr	r5, [sp, #8]
9001b2d0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001b2d4:	0e2e      	lsrs	r6, r5, #24
9001b2d6:	d049      	beq.n	9001b36c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001b2d8:	f06f 0201 	mvn.w	r2, #1
9001b2dc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001b2e0:	fb02 f20e 	mul.w	r2, r2, lr
9001b2e4:	f834 8002 	ldrh.w	r8, [r4, r2]
9001b2e8:	9203      	str	r2, [sp, #12]
9001b2ea:	9a05      	ldr	r2, [sp, #20]
9001b2ec:	ea4f 2728 	mov.w	r7, r8, asr #8
9001b2f0:	4356      	muls	r6, r2
9001b2f2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b2f6:	1c72      	adds	r2, r6, #1
9001b2f8:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001b2fc:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b300:	b2ed      	uxtb	r5, r5
9001b302:	1212      	asrs	r2, r2, #8
9001b304:	fa1f f982 	uxth.w	r9, r2
9001b308:	43d2      	mvns	r2, r2
9001b30a:	fb16 f609 	smulbb	r6, r6, r9
9001b30e:	b2d2      	uxtb	r2, r2
9001b310:	fb15 f509 	smulbb	r5, r5, r9
9001b314:	fb07 6702 	mla	r7, r7, r2, r6
9001b318:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001b31c:	fb1a fa09 	smulbb	sl, sl, r9
9001b320:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b324:	b2bf      	uxth	r7, r7
9001b326:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b32a:	fa5f f888 	uxtb.w	r8, r8
9001b32e:	fb06 a602 	mla	r6, r6, r2, sl
9001b332:	fb08 5502 	mla	r5, r8, r2, r5
9001b336:	1c7a      	adds	r2, r7, #1
9001b338:	b2b6      	uxth	r6, r6
9001b33a:	b2ad      	uxth	r5, r5
9001b33c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001b340:	9a03      	ldr	r2, [sp, #12]
9001b342:	f105 0a01 	add.w	sl, r5, #1
9001b346:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b34a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b34e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b352:	ea4a 0707 	orr.w	r7, sl, r7
9001b356:	f106 0a01 	add.w	sl, r6, #1
9001b35a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b35e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b362:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b366:	ea47 070a 	orr.w	r7, r7, sl
9001b36a:	52a7      	strh	r7, [r4, r2]
9001b36c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b36e:	f10e 3eff 	add.w	lr, lr, #4294967295
9001b372:	4410      	add	r0, r2
9001b374:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b376:	4411      	add	r1, r2
9001b378:	e755      	b.n	9001b226 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001b37a:	f04f 0800 	mov.w	r8, #0
9001b37e:	eba3 0208 	sub.w	r2, r3, r8
9001b382:	2a00      	cmp	r2, #0
9001b384:	f77f af53 	ble.w	9001b22e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001b388:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001b38c:	140a      	asrs	r2, r1, #16
9001b38e:	9f01      	ldr	r7, [sp, #4]
9001b390:	1405      	asrs	r5, r0, #16
9001b392:	fb06 7202 	mla	r2, r6, r2, r7
9001b396:	5d52      	ldrb	r2, [r2, r5]
9001b398:	9d02      	ldr	r5, [sp, #8]
9001b39a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001b39e:	0e2e      	lsrs	r6, r5, #24
9001b3a0:	d044      	beq.n	9001b42c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001b3a2:	9a05      	ldr	r2, [sp, #20]
9001b3a4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001b3a8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001b3ac:	4356      	muls	r6, r2
9001b3ae:	ea4f 272e 	mov.w	r7, lr, asr #8
9001b3b2:	1c72      	adds	r2, r6, #1
9001b3b4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b3b8:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001b3bc:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b3c0:	b2ed      	uxtb	r5, r5
9001b3c2:	1212      	asrs	r2, r2, #8
9001b3c4:	fa1f f982 	uxth.w	r9, r2
9001b3c8:	43d2      	mvns	r2, r2
9001b3ca:	fb16 f609 	smulbb	r6, r6, r9
9001b3ce:	b2d2      	uxtb	r2, r2
9001b3d0:	fb15 f509 	smulbb	r5, r5, r9
9001b3d4:	fb07 6702 	mla	r7, r7, r2, r6
9001b3d8:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001b3dc:	fb1a fa09 	smulbb	sl, sl, r9
9001b3e0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b3e4:	b2bf      	uxth	r7, r7
9001b3e6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b3ea:	fa5f fe8e 	uxtb.w	lr, lr
9001b3ee:	fb06 a602 	mla	r6, r6, r2, sl
9001b3f2:	fb0e 5502 	mla	r5, lr, r2, r5
9001b3f6:	1c7a      	adds	r2, r7, #1
9001b3f8:	b2b6      	uxth	r6, r6
9001b3fa:	b2ad      	uxth	r5, r5
9001b3fc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001b400:	f105 0a01 	add.w	sl, r5, #1
9001b404:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b408:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b40c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b410:	ea4a 0707 	orr.w	r7, sl, r7
9001b414:	f106 0a01 	add.w	sl, r6, #1
9001b418:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b41c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b420:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b424:	ea47 070a 	orr.w	r7, r7, sl
9001b428:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001b42c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001b42e:	f108 0801 	add.w	r8, r8, #1
9001b432:	4410      	add	r0, r2
9001b434:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b436:	4411      	add	r1, r2
9001b438:	e7a1      	b.n	9001b37e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001b43a:	b007      	add	sp, #28
9001b43c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b440 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b444:	b085      	sub	sp, #20
9001b446:	468b      	mov	fp, r1
9001b448:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b44c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b44e:	9203      	str	r2, [sp, #12]
9001b450:	6841      	ldr	r1, [r0, #4]
9001b452:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001b456:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001b45a:	fb01 2404 	mla	r4, r1, r4, r2
9001b45e:	6802      	ldr	r2, [r0, #0]
9001b460:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b464:	f8de 2000 	ldr.w	r2, [lr]
9001b468:	9200      	str	r2, [sp, #0]
9001b46a:	f8de 2004 	ldr.w	r2, [lr, #4]
9001b46e:	3204      	adds	r2, #4
9001b470:	9201      	str	r2, [sp, #4]
9001b472:	f1bb 0f00 	cmp.w	fp, #0
9001b476:	dc03      	bgt.n	9001b480 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001b478:	9a03      	ldr	r2, [sp, #12]
9001b47a:	2a00      	cmp	r2, #0
9001b47c:	f340 8153 	ble.w	9001b726 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001b480:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001b482:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b486:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b48a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001b48c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001b490:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b494:	2b00      	cmp	r3, #0
9001b496:	dd0e      	ble.n	9001b4b6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b498:	1408      	asrs	r0, r1, #16
9001b49a:	d405      	bmi.n	9001b4a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b49c:	42b8      	cmp	r0, r7
9001b49e:	da03      	bge.n	9001b4a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b4a0:	1410      	asrs	r0, r2, #16
9001b4a2:	d401      	bmi.n	9001b4a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b4a4:	42b0      	cmp	r0, r6
9001b4a6:	db07      	blt.n	9001b4b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001b4a8:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b4aa:	3b01      	subs	r3, #1
9001b4ac:	3402      	adds	r4, #2
9001b4ae:	4401      	add	r1, r0
9001b4b0:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b4b2:	4402      	add	r2, r0
9001b4b4:	e7ee      	b.n	9001b494 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001b4b6:	d017      	beq.n	9001b4e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001b4b8:	1e58      	subs	r0, r3, #1
9001b4ba:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001b4bc:	fb05 1500 	mla	r5, r5, r0, r1
9001b4c0:	142d      	asrs	r5, r5, #16
9001b4c2:	d409      	bmi.n	9001b4d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b4c4:	42bd      	cmp	r5, r7
9001b4c6:	da07      	bge.n	9001b4d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b4c8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001b4ca:	fb05 2000 	mla	r0, r5, r0, r2
9001b4ce:	1400      	asrs	r0, r0, #16
9001b4d0:	d402      	bmi.n	9001b4d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b4d2:	42b0      	cmp	r0, r6
9001b4d4:	f2c0 80bc 	blt.w	9001b650 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001b4d8:	2600      	movs	r6, #0
9001b4da:	1998      	adds	r0, r3, r6
9001b4dc:	2800      	cmp	r0, #0
9001b4de:	dc3e      	bgt.n	9001b55e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001b4e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b4e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b4e8:	f1bb 0f00 	cmp.w	fp, #0
9001b4ec:	f340 811b 	ble.w	9001b726 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001b4f0:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b4f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b4f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b4fa:	f1bb 0b01 	subs.w	fp, fp, #1
9001b4fe:	eeb0 6a62 	vmov.f32	s12, s5
9001b502:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b506:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b50a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b50e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001b512:	eeb0 6a43 	vmov.f32	s12, s6
9001b516:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b51a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001b51e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b522:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b526:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b52a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b52e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b532:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b536:	ee12 2a90 	vmov	r2, s5
9001b53a:	eef0 2a47 	vmov.f32	s5, s14
9001b53e:	fb92 f3f3 	sdiv	r3, r2, r3
9001b542:	ee13 2a10 	vmov	r2, s6
9001b546:	9311      	str	r3, [sp, #68]	@ 0x44
9001b548:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b54a:	eeb0 3a67 	vmov.f32	s6, s15
9001b54e:	fb92 f3f3 	sdiv	r3, r2, r3
9001b552:	9a03      	ldr	r2, [sp, #12]
9001b554:	9312      	str	r3, [sp, #72]	@ 0x48
9001b556:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b558:	bf08      	it	eq
9001b55a:	4613      	moveq	r3, r2
9001b55c:	e789      	b.n	9001b472 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001b55e:	140f      	asrs	r7, r1, #16
9001b560:	d426      	bmi.n	9001b5b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b562:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b566:	42bd      	cmp	r5, r7
9001b568:	dd22      	ble.n	9001b5b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b56a:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b56e:	d41f      	bmi.n	9001b5b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b570:	f8de 000c 	ldr.w	r0, [lr, #12]
9001b574:	4560      	cmp	r0, ip
9001b576:	dd1b      	ble.n	9001b5b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b578:	9800      	ldr	r0, [sp, #0]
9001b57a:	b22d      	sxth	r5, r5
9001b57c:	fb0c 0505 	mla	r5, ip, r5, r0
9001b580:	5de8      	ldrb	r0, [r5, r7]
9001b582:	9d01      	ldr	r5, [sp, #4]
9001b584:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001b588:	0e07      	lsrs	r7, r0, #24
9001b58a:	2fff      	cmp	r7, #255	@ 0xff
9001b58c:	d116      	bne.n	9001b5bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b58e:	f06f 0501 	mvn.w	r5, #1
9001b592:	fb05 f706 	mul.w	r7, r5, r6
9001b596:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001b59a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001b59e:	0945      	lsrs	r5, r0, #5
9001b5a0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001b5a4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001b5a8:	ea4c 0505 	orr.w	r5, ip, r5
9001b5ac:	4305      	orrs	r5, r0
9001b5ae:	53e5      	strh	r5, [r4, r7]
9001b5b0:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b5b2:	3e01      	subs	r6, #1
9001b5b4:	4401      	add	r1, r0
9001b5b6:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b5b8:	4402      	add	r2, r0
9001b5ba:	e78e      	b.n	9001b4da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001b5bc:	b2fd      	uxtb	r5, r7
9001b5be:	2f00      	cmp	r7, #0
9001b5c0:	d0f6      	beq.n	9001b5b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b5c2:	f06f 0701 	mvn.w	r7, #1
9001b5c6:	fa1f f985 	uxth.w	r9, r5
9001b5ca:	43ed      	mvns	r5, r5
9001b5cc:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001b5d0:	4377      	muls	r7, r6
9001b5d2:	fb1a fa09 	smulbb	sl, sl, r9
9001b5d6:	b2ed      	uxtb	r5, r5
9001b5d8:	f834 8007 	ldrh.w	r8, [r4, r7]
9001b5dc:	9702      	str	r7, [sp, #8]
9001b5de:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001b5e2:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001b5e6:	fb17 f709 	smulbb	r7, r7, r9
9001b5ea:	b2c0      	uxtb	r0, r0
9001b5ec:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b5f0:	fb10 f009 	smulbb	r0, r0, r9
9001b5f4:	fb0c 7c05 	mla	ip, ip, r5, r7
9001b5f8:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001b5fc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b600:	fa1f fc8c 	uxth.w	ip, ip
9001b604:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b608:	fa5f f888 	uxtb.w	r8, r8
9001b60c:	fb07 a705 	mla	r7, r7, r5, sl
9001b610:	fb08 0005 	mla	r0, r8, r5, r0
9001b614:	f10c 0501 	add.w	r5, ip, #1
9001b618:	b2bf      	uxth	r7, r7
9001b61a:	b280      	uxth	r0, r0
9001b61c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b620:	f100 0a01 	add.w	sl, r0, #1
9001b624:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b628:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001b62c:	9802      	ldr	r0, [sp, #8]
9001b62e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b632:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b636:	f107 0a01 	add.w	sl, r7, #1
9001b63a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001b63e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b642:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b646:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b64a:	f824 c000 	strh.w	ip, [r4, r0]
9001b64e:	e7af      	b.n	9001b5b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001b650:	f04f 0800 	mov.w	r8, #0
9001b654:	eba3 0008 	sub.w	r0, r3, r8
9001b658:	2800      	cmp	r0, #0
9001b65a:	f77f af41 	ble.w	9001b4e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b65e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001b662:	1410      	asrs	r0, r2, #16
9001b664:	9f00      	ldr	r7, [sp, #0]
9001b666:	140d      	asrs	r5, r1, #16
9001b668:	fb06 7000 	mla	r0, r6, r0, r7
9001b66c:	5d40      	ldrb	r0, [r0, r5]
9001b66e:	9d01      	ldr	r5, [sp, #4]
9001b670:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001b674:	0e2e      	lsrs	r6, r5, #24
9001b676:	2eff      	cmp	r6, #255	@ 0xff
9001b678:	d112      	bne.n	9001b6a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001b67a:	482c      	ldr	r0, [pc, #176]	@ (9001b72c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001b67c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001b680:	0968      	lsrs	r0, r5, #5
9001b682:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001b686:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001b68a:	4330      	orrs	r0, r6
9001b68c:	4328      	orrs	r0, r5
9001b68e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001b692:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b694:	f108 0801 	add.w	r8, r8, #1
9001b698:	4401      	add	r1, r0
9001b69a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b69c:	4402      	add	r2, r0
9001b69e:	e7d9      	b.n	9001b654 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001b6a0:	b2f0      	uxtb	r0, r6
9001b6a2:	2e00      	cmp	r6, #0
9001b6a4:	d0f5      	beq.n	9001b692 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001b6a6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001b6aa:	fa1f f980 	uxth.w	r9, r0
9001b6ae:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b6b2:	43c0      	mvns	r0, r0
9001b6b4:	ea4f 272c 	mov.w	r7, ip, asr #8
9001b6b8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001b6bc:	fb16 f609 	smulbb	r6, r6, r9
9001b6c0:	b2c0      	uxtb	r0, r0
9001b6c2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b6c6:	b2ed      	uxtb	r5, r5
9001b6c8:	fb1a fa09 	smulbb	sl, sl, r9
9001b6cc:	fb07 6700 	mla	r7, r7, r0, r6
9001b6d0:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001b6d4:	fb15 f509 	smulbb	r5, r5, r9
9001b6d8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b6dc:	b2bf      	uxth	r7, r7
9001b6de:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b6e2:	fa5f fc8c 	uxtb.w	ip, ip
9001b6e6:	fb06 a600 	mla	r6, r6, r0, sl
9001b6ea:	fb0c 5500 	mla	r5, ip, r0, r5
9001b6ee:	1c78      	adds	r0, r7, #1
9001b6f0:	b2b6      	uxth	r6, r6
9001b6f2:	b2ad      	uxth	r5, r5
9001b6f4:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001b6f8:	f105 0a01 	add.w	sl, r5, #1
9001b6fc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b700:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b704:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b708:	ea4a 0707 	orr.w	r7, sl, r7
9001b70c:	f106 0a01 	add.w	sl, r6, #1
9001b710:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b714:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b718:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b71c:	ea47 070a 	orr.w	r7, r7, sl
9001b720:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001b724:	e7b5      	b.n	9001b692 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001b726:	b005      	add	sp, #20
9001b728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b72c:	fffff800 	.word	0xfffff800

9001b730 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b734:	b087      	sub	sp, #28
9001b736:	468b      	mov	fp, r1
9001b738:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b73c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001b73e:	9204      	str	r2, [sp, #16]
9001b740:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b744:	6861      	ldr	r1, [r4, #4]
9001b746:	9205      	str	r2, [sp, #20]
9001b748:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001b74c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001b750:	fb01 2000 	mla	r0, r1, r0, r2
9001b754:	6822      	ldr	r2, [r4, #0]
9001b756:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001b75a:	f8de 2000 	ldr.w	r2, [lr]
9001b75e:	9201      	str	r2, [sp, #4]
9001b760:	f8de 2004 	ldr.w	r2, [lr, #4]
9001b764:	9202      	str	r2, [sp, #8]
9001b766:	f1bb 0f00 	cmp.w	fp, #0
9001b76a:	dc03      	bgt.n	9001b774 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001b76c:	9a04      	ldr	r2, [sp, #16]
9001b76e:	2a00      	cmp	r2, #0
9001b770:	f340 8142 	ble.w	9001b9f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001b774:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b776:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b77a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b77e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b780:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001b784:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b788:	2b00      	cmp	r3, #0
9001b78a:	dd0e      	ble.n	9001b7aa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001b78c:	140c      	asrs	r4, r1, #16
9001b78e:	d405      	bmi.n	9001b79c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b790:	42bc      	cmp	r4, r7
9001b792:	da03      	bge.n	9001b79c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b794:	1414      	asrs	r4, r2, #16
9001b796:	d401      	bmi.n	9001b79c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b798:	42b4      	cmp	r4, r6
9001b79a:	db07      	blt.n	9001b7ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b79c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b79e:	3b01      	subs	r3, #1
9001b7a0:	3002      	adds	r0, #2
9001b7a2:	4421      	add	r1, r4
9001b7a4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001b7a6:	4422      	add	r2, r4
9001b7a8:	e7ee      	b.n	9001b788 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001b7aa:	d019      	beq.n	9001b7e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001b7ac:	1e5c      	subs	r4, r3, #1
9001b7ae:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b7b0:	fb05 1504 	mla	r5, r5, r4, r1
9001b7b4:	142d      	asrs	r5, r5, #16
9001b7b6:	d409      	bmi.n	9001b7cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b7b8:	42bd      	cmp	r5, r7
9001b7ba:	da07      	bge.n	9001b7cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b7bc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001b7be:	fb05 2404 	mla	r4, r5, r4, r2
9001b7c2:	1424      	asrs	r4, r4, #16
9001b7c4:	d402      	bmi.n	9001b7cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b7c6:	42b4      	cmp	r4, r6
9001b7c8:	f2c0 80b1 	blt.w	9001b92e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001b7cc:	f04f 0800 	mov.w	r8, #0
9001b7d0:	eb03 0408 	add.w	r4, r3, r8
9001b7d4:	2c00      	cmp	r4, #0
9001b7d6:	dc3e      	bgt.n	9001b856 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001b7d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b7dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b7e0:	f1bb 0f00 	cmp.w	fp, #0
9001b7e4:	f340 8108 	ble.w	9001b9f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001b7e8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b7ec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b7ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b7f2:	f1bb 0b01 	subs.w	fp, fp, #1
9001b7f6:	eeb0 6a62 	vmov.f32	s12, s5
9001b7fa:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b7fe:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b802:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b806:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001b80a:	eeb0 6a43 	vmov.f32	s12, s6
9001b80e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b812:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001b816:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b81a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b81e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b822:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b826:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b82a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b82e:	ee12 2a90 	vmov	r2, s5
9001b832:	eef0 2a47 	vmov.f32	s5, s14
9001b836:	fb92 f3f3 	sdiv	r3, r2, r3
9001b83a:	ee13 2a10 	vmov	r2, s6
9001b83e:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b840:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b842:	eeb0 3a67 	vmov.f32	s6, s15
9001b846:	fb92 f3f3 	sdiv	r3, r2, r3
9001b84a:	9a04      	ldr	r2, [sp, #16]
9001b84c:	9314      	str	r3, [sp, #80]	@ 0x50
9001b84e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b850:	bf08      	it	eq
9001b852:	4613      	moveq	r3, r2
9001b854:	e787      	b.n	9001b766 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001b856:	140e      	asrs	r6, r1, #16
9001b858:	d462      	bmi.n	9001b920 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b85a:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b85e:	42b5      	cmp	r5, r6
9001b860:	dd5e      	ble.n	9001b920 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b862:	1417      	asrs	r7, r2, #16
9001b864:	d45c      	bmi.n	9001b920 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b866:	f8de 400c 	ldr.w	r4, [lr, #12]
9001b86a:	42bc      	cmp	r4, r7
9001b86c:	dd58      	ble.n	9001b920 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b86e:	b22d      	sxth	r5, r5
9001b870:	9c02      	ldr	r4, [sp, #8]
9001b872:	fb07 6505 	mla	r5, r7, r5, r6
9001b876:	5d66      	ldrb	r6, [r4, r5]
9001b878:	2e00      	cmp	r6, #0
9001b87a:	d051      	beq.n	9001b920 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b87c:	9c01      	ldr	r4, [sp, #4]
9001b87e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001b882:	f06f 0401 	mvn.w	r4, #1
9001b886:	fb04 f408 	mul.w	r4, r4, r8
9001b88a:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001b88e:	5b05      	ldrh	r5, [r0, r4]
9001b890:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b894:	9403      	str	r4, [sp, #12]
9001b896:	9c05      	ldr	r4, [sp, #20]
9001b898:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b89c:	4366      	muls	r6, r4
9001b89e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001b8a2:	1c74      	adds	r4, r6, #1
9001b8a4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001b8a8:	122e      	asrs	r6, r5, #8
9001b8aa:	1224      	asrs	r4, r4, #8
9001b8ac:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001b8b0:	00ed      	lsls	r5, r5, #3
9001b8b2:	b2a7      	uxth	r7, r4
9001b8b4:	43e4      	mvns	r4, r4
9001b8b6:	b2ed      	uxtb	r5, r5
9001b8b8:	b2e4      	uxtb	r4, r4
9001b8ba:	fb16 f604 	smulbb	r6, r6, r4
9001b8be:	fb15 f504 	smulbb	r5, r5, r4
9001b8c2:	fb0c 6c07 	mla	ip, ip, r7, r6
9001b8c6:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001b8ca:	fb1a fa04 	smulbb	sl, sl, r4
9001b8ce:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001b8d2:	fa1f fc8c 	uxth.w	ip, ip
9001b8d6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b8da:	fa5f f989 	uxtb.w	r9, r9
9001b8de:	fb06 a607 	mla	r6, r6, r7, sl
9001b8e2:	f10c 0401 	add.w	r4, ip, #1
9001b8e6:	fb09 5507 	mla	r5, r9, r7, r5
9001b8ea:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001b8ee:	9c03      	ldr	r4, [sp, #12]
9001b8f0:	b2ad      	uxth	r5, r5
9001b8f2:	b2b6      	uxth	r6, r6
9001b8f4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b8f8:	f105 0a01 	add.w	sl, r5, #1
9001b8fc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b900:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b904:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b908:	f106 0a01 	add.w	sl, r6, #1
9001b90c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b910:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b914:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b918:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b91c:	f820 c004 	strh.w	ip, [r0, r4]
9001b920:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b922:	f108 38ff 	add.w	r8, r8, #4294967295
9001b926:	4421      	add	r1, r4
9001b928:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001b92a:	4422      	add	r2, r4
9001b92c:	e750      	b.n	9001b7d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b92e:	f04f 0900 	mov.w	r9, #0
9001b932:	eba3 0409 	sub.w	r4, r3, r9
9001b936:	2c00      	cmp	r4, #0
9001b938:	f77f af4e 	ble.w	9001b7d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001b93c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001b940:	140d      	asrs	r5, r1, #16
9001b942:	1414      	asrs	r4, r2, #16
9001b944:	fb06 5404 	mla	r4, r6, r4, r5
9001b948:	9d02      	ldr	r5, [sp, #8]
9001b94a:	5d2e      	ldrb	r6, [r5, r4]
9001b94c:	2e00      	cmp	r6, #0
9001b94e:	d04c      	beq.n	9001b9ea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001b950:	9d01      	ldr	r5, [sp, #4]
9001b952:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001b956:	9c05      	ldr	r4, [sp, #20]
9001b958:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001b95c:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001b960:	4366      	muls	r6, r4
9001b962:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b966:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b96a:	1c74      	adds	r4, r6, #1
9001b96c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001b970:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001b974:	122e      	asrs	r6, r5, #8
9001b976:	1224      	asrs	r4, r4, #8
9001b978:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001b97c:	00ed      	lsls	r5, r5, #3
9001b97e:	b2a7      	uxth	r7, r4
9001b980:	43e4      	mvns	r4, r4
9001b982:	b2ed      	uxtb	r5, r5
9001b984:	b2e4      	uxtb	r4, r4
9001b986:	fb16 f604 	smulbb	r6, r6, r4
9001b98a:	fb15 f504 	smulbb	r5, r5, r4
9001b98e:	fb0c 6c07 	mla	ip, ip, r7, r6
9001b992:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001b996:	fb1a fa04 	smulbb	sl, sl, r4
9001b99a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b99e:	fa1f fc8c 	uxth.w	ip, ip
9001b9a2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b9a6:	fa5f f888 	uxtb.w	r8, r8
9001b9aa:	fb06 a607 	mla	r6, r6, r7, sl
9001b9ae:	f10c 0401 	add.w	r4, ip, #1
9001b9b2:	fb08 5507 	mla	r5, r8, r7, r5
9001b9b6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001b9ba:	b2ad      	uxth	r5, r5
9001b9bc:	b2b6      	uxth	r6, r6
9001b9be:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b9c2:	f105 0a01 	add.w	sl, r5, #1
9001b9c6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b9ca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b9ce:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b9d2:	f106 0a01 	add.w	sl, r6, #1
9001b9d6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b9da:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b9de:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b9e2:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b9e6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001b9ea:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b9ec:	f109 0901 	add.w	r9, r9, #1
9001b9f0:	4421      	add	r1, r4
9001b9f2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001b9f4:	4422      	add	r2, r4
9001b9f6:	e79c      	b.n	9001b932 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001b9f8:	b007      	add	sp, #28
9001b9fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b9fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b9fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ba02:	b085      	sub	sp, #20
9001ba04:	468b      	mov	fp, r1
9001ba06:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ba0a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001ba0c:	9203      	str	r2, [sp, #12]
9001ba0e:	6861      	ldr	r1, [r4, #4]
9001ba10:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001ba14:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001ba18:	fb01 2000 	mla	r0, r1, r0, r2
9001ba1c:	6822      	ldr	r2, [r4, #0]
9001ba1e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001ba22:	f8d8 2000 	ldr.w	r2, [r8]
9001ba26:	9200      	str	r2, [sp, #0]
9001ba28:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001ba2c:	9201      	str	r2, [sp, #4]
9001ba2e:	f1bb 0f00 	cmp.w	fp, #0
9001ba32:	dc03      	bgt.n	9001ba3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001ba34:	9a03      	ldr	r2, [sp, #12]
9001ba36:	2a00      	cmp	r2, #0
9001ba38:	f340 8146 	ble.w	9001bcc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001ba3c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001ba3e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001ba42:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ba46:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001ba48:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001ba4c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001ba50:	2b00      	cmp	r3, #0
9001ba52:	dd0e      	ble.n	9001ba72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001ba54:	140c      	asrs	r4, r1, #16
9001ba56:	d405      	bmi.n	9001ba64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ba58:	42bc      	cmp	r4, r7
9001ba5a:	da03      	bge.n	9001ba64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ba5c:	1414      	asrs	r4, r2, #16
9001ba5e:	d401      	bmi.n	9001ba64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ba60:	42b4      	cmp	r4, r6
9001ba62:	db07      	blt.n	9001ba74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ba64:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001ba66:	3b01      	subs	r3, #1
9001ba68:	3002      	adds	r0, #2
9001ba6a:	4421      	add	r1, r4
9001ba6c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001ba6e:	4422      	add	r2, r4
9001ba70:	e7ee      	b.n	9001ba50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001ba72:	d017      	beq.n	9001baa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001ba74:	1e5c      	subs	r4, r3, #1
9001ba76:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001ba78:	fb05 1504 	mla	r5, r5, r4, r1
9001ba7c:	142d      	asrs	r5, r5, #16
9001ba7e:	d409      	bmi.n	9001ba94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ba80:	42bd      	cmp	r5, r7
9001ba82:	da07      	bge.n	9001ba94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ba84:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001ba86:	fb05 2404 	mla	r4, r5, r4, r2
9001ba8a:	1424      	asrs	r4, r4, #16
9001ba8c:	d402      	bmi.n	9001ba94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ba8e:	42b4      	cmp	r4, r6
9001ba90:	f2c0 80b3 	blt.w	9001bbfa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001ba94:	2600      	movs	r6, #0
9001ba96:	199c      	adds	r4, r3, r6
9001ba98:	2c00      	cmp	r4, #0
9001ba9a:	dc3e      	bgt.n	9001bb1a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001ba9c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001baa0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001baa4:	f1bb 0f00 	cmp.w	fp, #0
9001baa8:	f340 810e 	ble.w	9001bcc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001baac:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bab0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bab2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bab6:	f1bb 0b01 	subs.w	fp, fp, #1
9001baba:	eeb0 6a62 	vmov.f32	s12, s5
9001babe:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bac2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bac6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001baca:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001bace:	eeb0 6a43 	vmov.f32	s12, s6
9001bad2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bad6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001bada:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bade:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bae2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bae6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001baea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001baee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001baf2:	ee12 2a90 	vmov	r2, s5
9001baf6:	eef0 2a47 	vmov.f32	s5, s14
9001bafa:	fb92 f3f3 	sdiv	r3, r2, r3
9001bafe:	ee13 2a10 	vmov	r2, s6
9001bb02:	9311      	str	r3, [sp, #68]	@ 0x44
9001bb04:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bb06:	eeb0 3a67 	vmov.f32	s6, s15
9001bb0a:	fb92 f3f3 	sdiv	r3, r2, r3
9001bb0e:	9a03      	ldr	r2, [sp, #12]
9001bb10:	9312      	str	r3, [sp, #72]	@ 0x48
9001bb12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bb14:	bf08      	it	eq
9001bb16:	4613      	moveq	r3, r2
9001bb18:	e789      	b.n	9001ba2e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001bb1a:	140f      	asrs	r7, r1, #16
9001bb1c:	d418      	bmi.n	9001bb50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001bb1e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001bb22:	42bd      	cmp	r5, r7
9001bb24:	dd14      	ble.n	9001bb50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001bb26:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001bb2a:	d411      	bmi.n	9001bb50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001bb2c:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001bb30:	4564      	cmp	r4, ip
9001bb32:	dd0d      	ble.n	9001bb50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001bb34:	b22d      	sxth	r5, r5
9001bb36:	9c01      	ldr	r4, [sp, #4]
9001bb38:	fb0c 7505 	mla	r5, ip, r5, r7
9001bb3c:	5d64      	ldrb	r4, [r4, r5]
9001bb3e:	2cff      	cmp	r4, #255	@ 0xff
9001bb40:	d10c      	bne.n	9001bb5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001bb42:	9c00      	ldr	r4, [sp, #0]
9001bb44:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001bb48:	f06f 0401 	mvn.w	r4, #1
9001bb4c:	4374      	muls	r4, r6
9001bb4e:	5305      	strh	r5, [r0, r4]
9001bb50:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001bb52:	3e01      	subs	r6, #1
9001bb54:	4421      	add	r1, r4
9001bb56:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001bb58:	4422      	add	r2, r4
9001bb5a:	e79c      	b.n	9001ba96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001bb5c:	2c00      	cmp	r4, #0
9001bb5e:	d0f7      	beq.n	9001bb50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001bb60:	9f00      	ldr	r7, [sp, #0]
9001bb62:	fa1f fc84 	uxth.w	ip, r4
9001bb66:	43e4      	mvns	r4, r4
9001bb68:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001bb6c:	f06f 0501 	mvn.w	r5, #1
9001bb70:	b2e4      	uxtb	r4, r4
9001bb72:	4375      	muls	r5, r6
9001bb74:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001bb78:	9502      	str	r5, [sp, #8]
9001bb7a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001bb7e:	5b45      	ldrh	r5, [r0, r5]
9001bb80:	122f      	asrs	r7, r5, #8
9001bb82:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001bb86:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001bb8a:	00ed      	lsls	r5, r5, #3
9001bb8c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001bb90:	fb17 f704 	smulbb	r7, r7, r4
9001bb94:	b2ed      	uxtb	r5, r5
9001bb96:	fb1a fa04 	smulbb	sl, sl, r4
9001bb9a:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001bb9e:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001bba2:	fb15 f504 	smulbb	r5, r5, r4
9001bba6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001bbaa:	fa1f fe8e 	uxth.w	lr, lr
9001bbae:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001bbb2:	fa5f f989 	uxtb.w	r9, r9
9001bbb6:	fb07 a70c 	mla	r7, r7, ip, sl
9001bbba:	f10e 0401 	add.w	r4, lr, #1
9001bbbe:	fb09 550c 	mla	r5, r9, ip, r5
9001bbc2:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001bbc6:	9c02      	ldr	r4, [sp, #8]
9001bbc8:	b2ad      	uxth	r5, r5
9001bbca:	b2bf      	uxth	r7, r7
9001bbcc:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001bbd0:	f105 0a01 	add.w	sl, r5, #1
9001bbd4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001bbd8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bbdc:	ea4a 0e0e 	orr.w	lr, sl, lr
9001bbe0:	f107 0a01 	add.w	sl, r7, #1
9001bbe4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001bbe8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bbec:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bbf0:	ea4e 0e0a 	orr.w	lr, lr, sl
9001bbf4:	f820 e004 	strh.w	lr, [r0, r4]
9001bbf8:	e7aa      	b.n	9001bb50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001bbfa:	f04f 0900 	mov.w	r9, #0
9001bbfe:	eba3 0409 	sub.w	r4, r3, r9
9001bc02:	2c00      	cmp	r4, #0
9001bc04:	f77f af4a 	ble.w	9001ba9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001bc08:	1414      	asrs	r4, r2, #16
9001bc0a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001bc0e:	140d      	asrs	r5, r1, #16
9001bc10:	fb06 5504 	mla	r5, r6, r4, r5
9001bc14:	9c01      	ldr	r4, [sp, #4]
9001bc16:	5d64      	ldrb	r4, [r4, r5]
9001bc18:	2cff      	cmp	r4, #255	@ 0xff
9001bc1a:	d10b      	bne.n	9001bc34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001bc1c:	9c00      	ldr	r4, [sp, #0]
9001bc1e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001bc22:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001bc26:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001bc28:	f109 0901 	add.w	r9, r9, #1
9001bc2c:	4421      	add	r1, r4
9001bc2e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001bc30:	4422      	add	r2, r4
9001bc32:	e7e4      	b.n	9001bbfe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001bc34:	2c00      	cmp	r4, #0
9001bc36:	d0f6      	beq.n	9001bc26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001bc38:	9e00      	ldr	r6, [sp, #0]
9001bc3a:	b2a7      	uxth	r7, r4
9001bc3c:	43e4      	mvns	r4, r4
9001bc3e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001bc42:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001bc46:	b2e4      	uxtb	r4, r4
9001bc48:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001bc4c:	122e      	asrs	r6, r5, #8
9001bc4e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001bc52:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001bc56:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001bc5a:	00ed      	lsls	r5, r5, #3
9001bc5c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001bc60:	fb16 f604 	smulbb	r6, r6, r4
9001bc64:	b2ed      	uxtb	r5, r5
9001bc66:	fb1a fa04 	smulbb	sl, sl, r4
9001bc6a:	fb0c 6c07 	mla	ip, ip, r7, r6
9001bc6e:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001bc72:	fb15 f504 	smulbb	r5, r5, r4
9001bc76:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001bc7a:	fa1f fc8c 	uxth.w	ip, ip
9001bc7e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001bc82:	fa5f fe8e 	uxtb.w	lr, lr
9001bc86:	fb06 a607 	mla	r6, r6, r7, sl
9001bc8a:	f10c 0401 	add.w	r4, ip, #1
9001bc8e:	fb0e 5507 	mla	r5, lr, r7, r5
9001bc92:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001bc96:	b2ad      	uxth	r5, r5
9001bc98:	b2b6      	uxth	r6, r6
9001bc9a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001bc9e:	f105 0a01 	add.w	sl, r5, #1
9001bca2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001bca6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bcaa:	ea4a 0c0c 	orr.w	ip, sl, ip
9001bcae:	f106 0a01 	add.w	sl, r6, #1
9001bcb2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001bcb6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bcba:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bcbe:	ea4c 0c0a 	orr.w	ip, ip, sl
9001bcc2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001bcc6:	e7ae      	b.n	9001bc26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001bcc8:	b005      	add	sp, #20
9001bcca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001bcce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bcce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bcd2:	b085      	sub	sp, #20
9001bcd4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001bcd6:	9203      	str	r2, [sp, #12]
9001bcd8:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001bcdc:	9100      	str	r1, [sp, #0]
9001bcde:	9201      	str	r2, [sp, #4]
9001bce0:	6841      	ldr	r1, [r0, #4]
9001bce2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001bce6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001bcea:	fb01 2404 	mla	r4, r1, r4, r2
9001bcee:	6802      	ldr	r2, [r0, #0]
9001bcf0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bcf4:	f8de 2000 	ldr.w	r2, [lr]
9001bcf8:	9202      	str	r2, [sp, #8]
9001bcfa:	9a01      	ldr	r2, [sp, #4]
9001bcfc:	43d6      	mvns	r6, r2
9001bcfe:	b2f6      	uxtb	r6, r6
9001bd00:	9a00      	ldr	r2, [sp, #0]
9001bd02:	2a00      	cmp	r2, #0
9001bd04:	dc03      	bgt.n	9001bd0e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001bd06:	9a03      	ldr	r2, [sp, #12]
9001bd08:	2a00      	cmp	r2, #0
9001bd0a:	f340 8124 	ble.w	9001bf56 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001bd0e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001bd10:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001bd14:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001bd18:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001bd1a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001bd1e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001bd22:	2b00      	cmp	r3, #0
9001bd24:	dd0e      	ble.n	9001bd44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001bd26:	1408      	asrs	r0, r1, #16
9001bd28:	d405      	bmi.n	9001bd36 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001bd2a:	4560      	cmp	r0, ip
9001bd2c:	da03      	bge.n	9001bd36 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001bd2e:	1410      	asrs	r0, r2, #16
9001bd30:	d401      	bmi.n	9001bd36 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001bd32:	42b8      	cmp	r0, r7
9001bd34:	db07      	blt.n	9001bd46 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001bd36:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001bd38:	3b01      	subs	r3, #1
9001bd3a:	3402      	adds	r4, #2
9001bd3c:	4401      	add	r1, r0
9001bd3e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001bd40:	4402      	add	r2, r0
9001bd42:	e7ee      	b.n	9001bd22 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001bd44:	d06e      	beq.n	9001be24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001bd46:	1e58      	subs	r0, r3, #1
9001bd48:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001bd4a:	fb05 1500 	mla	r5, r5, r0, r1
9001bd4e:	142d      	asrs	r5, r5, #16
9001bd50:	d45c      	bmi.n	9001be0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001bd52:	4565      	cmp	r5, ip
9001bd54:	da5a      	bge.n	9001be0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001bd56:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001bd58:	fb05 2000 	mla	r0, r5, r0, r2
9001bd5c:	1400      	asrs	r0, r0, #16
9001bd5e:	d455      	bmi.n	9001be0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001bd60:	42b8      	cmp	r0, r7
9001bd62:	da53      	bge.n	9001be0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001bd64:	4699      	mov	r9, r3
9001bd66:	46a2      	mov	sl, r4
9001bd68:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001bd6c:	f1b9 0f00 	cmp.w	r9, #0
9001bd70:	dd54      	ble.n	9001be1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001bd72:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001bd76:	140d      	asrs	r5, r1, #16
9001bd78:	1410      	asrs	r0, r2, #16
9001bd7a:	f109 39ff 	add.w	r9, r9, #4294967295
9001bd7e:	fb07 5000 	mla	r0, r7, r0, r5
9001bd82:	9d02      	ldr	r5, [sp, #8]
9001bd84:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001bd88:	f8ba 5000 	ldrh.w	r5, [sl]
9001bd8c:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001bd90:	122f      	asrs	r7, r5, #8
9001bd92:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001bd96:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001bd9a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001bd9e:	00ed      	lsls	r5, r5, #3
9001bda0:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001bda4:	fb17 f706 	smulbb	r7, r7, r6
9001bda8:	b2ed      	uxtb	r5, r5
9001bdaa:	fb18 f806 	smulbb	r8, r8, r6
9001bdae:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001bdb2:	10c7      	asrs	r7, r0, #3
9001bdb4:	fb15 f506 	smulbb	r5, r5, r6
9001bdb8:	00c0      	lsls	r0, r0, #3
9001bdba:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001bdbe:	fa1f fc8c 	uxth.w	ip, ip
9001bdc2:	b2c0      	uxtb	r0, r0
9001bdc4:	fb07 870b 	mla	r7, r7, fp, r8
9001bdc8:	fb00 500b 	mla	r0, r0, fp, r5
9001bdcc:	f10c 0501 	add.w	r5, ip, #1
9001bdd0:	b2bf      	uxth	r7, r7
9001bdd2:	b280      	uxth	r0, r0
9001bdd4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bdd8:	f107 0801 	add.w	r8, r7, #1
9001bddc:	1c45      	adds	r5, r0, #1
9001bdde:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001bde2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001bde6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001bdea:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001bdec:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001bdf0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001bdf4:	4401      	add	r1, r0
9001bdf6:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001bdfa:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001bdfc:	ea45 0c0c 	orr.w	ip, r5, ip
9001be00:	4402      	add	r2, r0
9001be02:	ea4c 0c08 	orr.w	ip, ip, r8
9001be06:	f82a cb02 	strh.w	ip, [sl], #2
9001be0a:	e7af      	b.n	9001bd6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001be0c:	f04f 0800 	mov.w	r8, #0
9001be10:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001be14:	eb03 0008 	add.w	r0, r3, r8
9001be18:	2800      	cmp	r0, #0
9001be1a:	dc41      	bgt.n	9001bea0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001be1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001be20:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001be24:	9b00      	ldr	r3, [sp, #0]
9001be26:	2b00      	cmp	r3, #0
9001be28:	f340 8095 	ble.w	9001bf56 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001be2c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001be30:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001be32:	ee30 0a04 	vadd.f32	s0, s0, s8
9001be36:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001be3a:	eef0 6a62 	vmov.f32	s13, s5
9001be3e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001be42:	ee31 1a05 	vadd.f32	s2, s2, s10
9001be46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001be4a:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001be4e:	eef0 6a43 	vmov.f32	s13, s6
9001be52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001be56:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001be5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001be5e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001be62:	ee77 2a62 	vsub.f32	s5, s14, s5
9001be66:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001be6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001be6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001be72:	ee12 2a90 	vmov	r2, s5
9001be76:	eef0 2a47 	vmov.f32	s5, s14
9001be7a:	fb92 f3f3 	sdiv	r3, r2, r3
9001be7e:	ee13 2a10 	vmov	r2, s6
9001be82:	9311      	str	r3, [sp, #68]	@ 0x44
9001be84:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001be86:	eeb0 3a67 	vmov.f32	s6, s15
9001be8a:	fb92 f3f3 	sdiv	r3, r2, r3
9001be8e:	9312      	str	r3, [sp, #72]	@ 0x48
9001be90:	9b00      	ldr	r3, [sp, #0]
9001be92:	9a03      	ldr	r2, [sp, #12]
9001be94:	3b01      	subs	r3, #1
9001be96:	9300      	str	r3, [sp, #0]
9001be98:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001be9a:	bf08      	it	eq
9001be9c:	4613      	moveq	r3, r2
9001be9e:	e72f      	b.n	9001bd00 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001bea0:	140f      	asrs	r7, r1, #16
9001bea2:	d451      	bmi.n	9001bf48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001bea4:	f8de 5008 	ldr.w	r5, [lr, #8]
9001bea8:	42bd      	cmp	r5, r7
9001beaa:	dd4d      	ble.n	9001bf48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001beac:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001beb0:	d44a      	bmi.n	9001bf48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001beb2:	f8de 000c 	ldr.w	r0, [lr, #12]
9001beb6:	4560      	cmp	r0, ip
9001beb8:	dd46      	ble.n	9001bf48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001beba:	b22d      	sxth	r5, r5
9001bebc:	9802      	ldr	r0, [sp, #8]
9001bebe:	fb0c 7505 	mla	r5, ip, r5, r7
9001bec2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001bec6:	f06f 0501 	mvn.w	r5, #1
9001beca:	fb05 fb08 	mul.w	fp, r5, r8
9001bece:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001bed2:	f834 500b 	ldrh.w	r5, [r4, fp]
9001bed6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001beda:	122f      	asrs	r7, r5, #8
9001bedc:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001bee0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001bee4:	00ed      	lsls	r5, r5, #3
9001bee6:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001beea:	fb17 f706 	smulbb	r7, r7, r6
9001beee:	b2ed      	uxtb	r5, r5
9001bef0:	fb19 f906 	smulbb	r9, r9, r6
9001bef4:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001bef8:	10c7      	asrs	r7, r0, #3
9001befa:	fb15 f506 	smulbb	r5, r5, r6
9001befe:	00c0      	lsls	r0, r0, #3
9001bf00:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001bf04:	fa1f fc8c 	uxth.w	ip, ip
9001bf08:	b2c0      	uxtb	r0, r0
9001bf0a:	fb07 970a 	mla	r7, r7, sl, r9
9001bf0e:	fb00 500a 	mla	r0, r0, sl, r5
9001bf12:	f10c 0501 	add.w	r5, ip, #1
9001bf16:	b2bf      	uxth	r7, r7
9001bf18:	b280      	uxth	r0, r0
9001bf1a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bf1e:	f107 0901 	add.w	r9, r7, #1
9001bf22:	1c45      	adds	r5, r0, #1
9001bf24:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001bf28:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001bf2c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001bf30:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001bf34:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001bf38:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001bf3c:	ea45 0c0c 	orr.w	ip, r5, ip
9001bf40:	ea4c 0c09 	orr.w	ip, ip, r9
9001bf44:	f824 c00b 	strh.w	ip, [r4, fp]
9001bf48:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001bf4a:	f108 38ff 	add.w	r8, r8, #4294967295
9001bf4e:	4401      	add	r1, r0
9001bf50:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001bf52:	4402      	add	r2, r0
9001bf54:	e75e      	b.n	9001be14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001bf56:	b005      	add	sp, #20
9001bf58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001bf5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bf5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bf60:	b085      	sub	sp, #20
9001bf62:	4693      	mov	fp, r2
9001bf64:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001bf68:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001bf6a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001bf6c:	6870      	ldr	r0, [r6, #4]
9001bf6e:	9101      	str	r1, [sp, #4]
9001bf70:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001bf74:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001bf78:	fb00 2404 	mla	r4, r0, r4, r2
9001bf7c:	6832      	ldr	r2, [r6, #0]
9001bf7e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bf82:	682a      	ldr	r2, [r5, #0]
9001bf84:	9202      	str	r2, [sp, #8]
9001bf86:	9a01      	ldr	r2, [sp, #4]
9001bf88:	2a00      	cmp	r2, #0
9001bf8a:	dc03      	bgt.n	9001bf94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001bf8c:	f1bb 0f00 	cmp.w	fp, #0
9001bf90:	f340 809a 	ble.w	9001c0c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001bf94:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001bf96:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001bf9a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001bf9e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001bfa0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001bfa4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001bfa8:	2b00      	cmp	r3, #0
9001bfaa:	dd0c      	ble.n	9001bfc6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001bfac:	1406      	asrs	r6, r0, #16
9001bfae:	d405      	bmi.n	9001bfbc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001bfb0:	454e      	cmp	r6, r9
9001bfb2:	da03      	bge.n	9001bfbc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001bfb4:	1416      	asrs	r6, r2, #16
9001bfb6:	d401      	bmi.n	9001bfbc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001bfb8:	4546      	cmp	r6, r8
9001bfba:	db05      	blt.n	9001bfc8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001bfbc:	4470      	add	r0, lr
9001bfbe:	4462      	add	r2, ip
9001bfc0:	3b01      	subs	r3, #1
9001bfc2:	3402      	adds	r4, #2
9001bfc4:	e7f0      	b.n	9001bfa8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001bfc6:	d00f      	beq.n	9001bfe8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001bfc8:	1e5e      	subs	r6, r3, #1
9001bfca:	fb0e 0706 	mla	r7, lr, r6, r0
9001bfce:	143f      	asrs	r7, r7, #16
9001bfd0:	d541      	bpl.n	9001c056 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001bfd2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001bfd6:	4698      	mov	r8, r3
9001bfd8:	9603      	str	r6, [sp, #12]
9001bfda:	f1b8 0f00 	cmp.w	r8, #0
9001bfde:	dc56      	bgt.n	9001c08e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001bfe0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bfe4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bfe8:	9b01      	ldr	r3, [sp, #4]
9001bfea:	2b00      	cmp	r3, #0
9001bfec:	dd6c      	ble.n	9001c0c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001bfee:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bff2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bff4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bff8:	eeb0 6a62 	vmov.f32	s12, s5
9001bffc:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c000:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c004:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c008:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001c00c:	eeb0 6a43 	vmov.f32	s12, s6
9001c010:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c014:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001c018:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c01c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c020:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c024:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c028:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c02c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c030:	ee12 2a90 	vmov	r2, s5
9001c034:	eef0 2a47 	vmov.f32	s5, s14
9001c038:	fb92 fef3 	sdiv	lr, r2, r3
9001c03c:	ee13 2a10 	vmov	r2, s6
9001c040:	eeb0 3a67 	vmov.f32	s6, s15
9001c044:	fb92 fcf3 	sdiv	ip, r2, r3
9001c048:	9b01      	ldr	r3, [sp, #4]
9001c04a:	3b01      	subs	r3, #1
9001c04c:	9301      	str	r3, [sp, #4]
9001c04e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c050:	bf08      	it	eq
9001c052:	465b      	moveq	r3, fp
9001c054:	e797      	b.n	9001bf86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001c056:	454f      	cmp	r7, r9
9001c058:	dabb      	bge.n	9001bfd2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c05a:	fb0c 2606 	mla	r6, ip, r6, r2
9001c05e:	1436      	asrs	r6, r6, #16
9001c060:	d4b7      	bmi.n	9001bfd2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c062:	4546      	cmp	r6, r8
9001c064:	dab5      	bge.n	9001bfd2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c066:	461e      	mov	r6, r3
9001c068:	46a0      	mov	r8, r4
9001c06a:	2e00      	cmp	r6, #0
9001c06c:	ddb8      	ble.n	9001bfe0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c06e:	1417      	asrs	r7, r2, #16
9001c070:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001c074:	ea4f 4920 	mov.w	r9, r0, asr #16
9001c078:	9902      	ldr	r1, [sp, #8]
9001c07a:	4470      	add	r0, lr
9001c07c:	4462      	add	r2, ip
9001c07e:	fb0a 9707 	mla	r7, sl, r7, r9
9001c082:	3e01      	subs	r6, #1
9001c084:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001c088:	f828 7b02 	strh.w	r7, [r8], #2
9001c08c:	e7ed      	b.n	9001c06a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001c08e:	ea5f 4920 	movs.w	r9, r0, asr #16
9001c092:	d414      	bmi.n	9001c0be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c094:	68ae      	ldr	r6, [r5, #8]
9001c096:	454e      	cmp	r6, r9
9001c098:	dd11      	ble.n	9001c0be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c09a:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001c09e:	d40e      	bmi.n	9001c0be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c0a0:	68ef      	ldr	r7, [r5, #12]
9001c0a2:	4557      	cmp	r7, sl
9001c0a4:	dd0b      	ble.n	9001c0be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001c0a6:	b236      	sxth	r6, r6
9001c0a8:	f06f 0101 	mvn.w	r1, #1
9001c0ac:	9f02      	ldr	r7, [sp, #8]
9001c0ae:	fb0a 9606 	mla	r6, sl, r6, r9
9001c0b2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001c0b6:	fb01 f608 	mul.w	r6, r1, r8
9001c0ba:	9903      	ldr	r1, [sp, #12]
9001c0bc:	538f      	strh	r7, [r1, r6]
9001c0be:	4470      	add	r0, lr
9001c0c0:	4462      	add	r2, ip
9001c0c2:	f108 38ff 	add.w	r8, r8, #4294967295
9001c0c6:	e788      	b.n	9001bfda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c0c8:	b005      	add	sp, #20
9001c0ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c0ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c0ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c0d2:	b087      	sub	sp, #28
9001c0d4:	468b      	mov	fp, r1
9001c0d6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c0da:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001c0dc:	9203      	str	r2, [sp, #12]
9001c0de:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c0e2:	6841      	ldr	r1, [r0, #4]
9001c0e4:	9204      	str	r2, [sp, #16]
9001c0e6:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001c0ea:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001c0ee:	fb01 2505 	mla	r5, r1, r5, r2
9001c0f2:	6802      	ldr	r2, [r0, #0]
9001c0f4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001c0f8:	f8d9 2000 	ldr.w	r2, [r9]
9001c0fc:	9201      	str	r2, [sp, #4]
9001c0fe:	f1bb 0f00 	cmp.w	fp, #0
9001c102:	dc03      	bgt.n	9001c10c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001c104:	9a03      	ldr	r2, [sp, #12]
9001c106:	2a00      	cmp	r2, #0
9001c108:	f340 8158 	ble.w	9001c3bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001c10c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c10e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001c112:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c116:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c118:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001c11c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c120:	2b00      	cmp	r3, #0
9001c122:	dd0e      	ble.n	9001c142 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001c124:	1402      	asrs	r2, r0, #16
9001c126:	d405      	bmi.n	9001c134 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c128:	42ba      	cmp	r2, r7
9001c12a:	da03      	bge.n	9001c134 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c12c:	140a      	asrs	r2, r1, #16
9001c12e:	d401      	bmi.n	9001c134 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001c130:	42b2      	cmp	r2, r6
9001c132:	db07      	blt.n	9001c144 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c134:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c136:	3b01      	subs	r3, #1
9001c138:	3502      	adds	r5, #2
9001c13a:	4410      	add	r0, r2
9001c13c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c13e:	4411      	add	r1, r2
9001c140:	e7ee      	b.n	9001c120 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001c142:	d017      	beq.n	9001c174 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001c144:	1e5a      	subs	r2, r3, #1
9001c146:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001c148:	fb04 0402 	mla	r4, r4, r2, r0
9001c14c:	1424      	asrs	r4, r4, #16
9001c14e:	d409      	bmi.n	9001c164 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c150:	42bc      	cmp	r4, r7
9001c152:	da07      	bge.n	9001c164 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c154:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001c156:	fb04 1202 	mla	r2, r4, r2, r1
9001c15a:	1412      	asrs	r2, r2, #16
9001c15c:	d402      	bmi.n	9001c164 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001c15e:	42b2      	cmp	r2, r6
9001c160:	f2c0 80bf 	blt.w	9001c2e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001c164:	2700      	movs	r7, #0
9001c166:	19da      	adds	r2, r3, r7
9001c168:	2a00      	cmp	r2, #0
9001c16a:	dc3e      	bgt.n	9001c1ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001c16c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c170:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001c174:	f1bb 0f00 	cmp.w	fp, #0
9001c178:	f340 8120 	ble.w	9001c3bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001c17c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c180:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c182:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c186:	f1bb 0b01 	subs.w	fp, fp, #1
9001c18a:	eeb0 6a62 	vmov.f32	s12, s5
9001c18e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c192:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c196:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c19a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001c19e:	eeb0 6a43 	vmov.f32	s12, s6
9001c1a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c1a6:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001c1aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c1ae:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c1b2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c1b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c1ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c1be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c1c2:	ee12 2a90 	vmov	r2, s5
9001c1c6:	eef0 2a47 	vmov.f32	s5, s14
9001c1ca:	fb92 f3f3 	sdiv	r3, r2, r3
9001c1ce:	ee13 2a10 	vmov	r2, s6
9001c1d2:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c1d4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c1d6:	eeb0 3a67 	vmov.f32	s6, s15
9001c1da:	fb92 f3f3 	sdiv	r3, r2, r3
9001c1de:	9a03      	ldr	r2, [sp, #12]
9001c1e0:	9314      	str	r3, [sp, #80]	@ 0x50
9001c1e2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c1e4:	bf08      	it	eq
9001c1e6:	4613      	moveq	r3, r2
9001c1e8:	e789      	b.n	9001c0fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001c1ea:	1406      	asrs	r6, r0, #16
9001c1ec:	d42d      	bmi.n	9001c24a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c1ee:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001c1f2:	42b4      	cmp	r4, r6
9001c1f4:	dd29      	ble.n	9001c24a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c1f6:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001c1fa:	d426      	bmi.n	9001c24a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c1fc:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001c200:	4562      	cmp	r2, ip
9001c202:	dd22      	ble.n	9001c24a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c204:	b224      	sxth	r4, r4
9001c206:	9a01      	ldr	r2, [sp, #4]
9001c208:	fb0c 6404 	mla	r4, ip, r4, r6
9001c20c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001c210:	0e22      	lsrs	r2, r4, #24
9001c212:	d01a      	beq.n	9001c24a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c214:	9e04      	ldr	r6, [sp, #16]
9001c216:	4372      	muls	r2, r6
9001c218:	1c56      	adds	r6, r2, #1
9001c21a:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001c21e:	0a26      	lsrs	r6, r4, #8
9001c220:	1212      	asrs	r2, r2, #8
9001c222:	9605      	str	r6, [sp, #20]
9001c224:	2aff      	cmp	r2, #255	@ 0xff
9001c226:	d116      	bne.n	9001c256 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001c228:	f06f 0201 	mvn.w	r2, #1
9001c22c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001c230:	fb02 fc07 	mul.w	ip, r2, r7
9001c234:	0962      	lsrs	r2, r4, #5
9001c236:	f026 0607 	bic.w	r6, r6, #7
9001c23a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001c23e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c242:	4316      	orrs	r6, r2
9001c244:	4326      	orrs	r6, r4
9001c246:	f825 600c 	strh.w	r6, [r5, ip]
9001c24a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c24c:	3f01      	subs	r7, #1
9001c24e:	4410      	add	r0, r2
9001c250:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c252:	4411      	add	r1, r2
9001c254:	e787      	b.n	9001c166 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c256:	f06f 0601 	mvn.w	r6, #1
9001c25a:	fa1f fa82 	uxth.w	sl, r2
9001c25e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001c262:	43d2      	mvns	r2, r2
9001c264:	437e      	muls	r6, r7
9001c266:	b2e4      	uxtb	r4, r4
9001c268:	fb1c fc0a 	smulbb	ip, ip, sl
9001c26c:	b2d2      	uxtb	r2, r2
9001c26e:	f835 8006 	ldrh.w	r8, [r5, r6]
9001c272:	fb14 f40a 	smulbb	r4, r4, sl
9001c276:	9602      	str	r6, [sp, #8]
9001c278:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001c27c:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001c280:	fb16 f60a 	smulbb	r6, r6, sl
9001c284:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001c288:	fb0e ce02 	mla	lr, lr, r2, ip
9001c28c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001c290:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c294:	fa1f fe8e 	uxth.w	lr, lr
9001c298:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001c29c:	fa5f f888 	uxtb.w	r8, r8
9001c2a0:	fb0c 6c02 	mla	ip, ip, r2, r6
9001c2a4:	fb08 4402 	mla	r4, r8, r2, r4
9001c2a8:	f10e 0201 	add.w	r2, lr, #1
9001c2ac:	fa1f fc8c 	uxth.w	ip, ip
9001c2b0:	b2a4      	uxth	r4, r4
9001c2b2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001c2b6:	9a02      	ldr	r2, [sp, #8]
9001c2b8:	1c66      	adds	r6, r4, #1
9001c2ba:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001c2be:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001c2c2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001c2c6:	ea46 0e0e 	orr.w	lr, r6, lr
9001c2ca:	f10c 0601 	add.w	r6, ip, #1
9001c2ce:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001c2d2:	0976      	lsrs	r6, r6, #5
9001c2d4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001c2d8:	ea4e 0e06 	orr.w	lr, lr, r6
9001c2dc:	f825 e002 	strh.w	lr, [r5, r2]
9001c2e0:	e7b3      	b.n	9001c24a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c2e2:	f04f 0800 	mov.w	r8, #0
9001c2e6:	eba3 0208 	sub.w	r2, r3, r8
9001c2ea:	2a00      	cmp	r2, #0
9001c2ec:	f77f af3e 	ble.w	9001c16c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c2f0:	1404      	asrs	r4, r0, #16
9001c2f2:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001c2f6:	140a      	asrs	r2, r1, #16
9001c2f8:	fb06 4202 	mla	r2, r6, r2, r4
9001c2fc:	9c01      	ldr	r4, [sp, #4]
9001c2fe:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001c302:	0e22      	lsrs	r2, r4, #24
9001c304:	d015      	beq.n	9001c332 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001c306:	9e04      	ldr	r6, [sp, #16]
9001c308:	4372      	muls	r2, r6
9001c30a:	1c56      	adds	r6, r2, #1
9001c30c:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001c310:	0a26      	lsrs	r6, r4, #8
9001c312:	1212      	asrs	r2, r2, #8
9001c314:	2aff      	cmp	r2, #255	@ 0xff
9001c316:	d113      	bne.n	9001c340 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001c318:	0962      	lsrs	r2, r4, #5
9001c31a:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001c31e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001c322:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c326:	f026 0607 	bic.w	r6, r6, #7
9001c32a:	4316      	orrs	r6, r2
9001c32c:	4326      	orrs	r6, r4
9001c32e:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001c332:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c334:	f108 0801 	add.w	r8, r8, #1
9001c338:	4410      	add	r0, r2
9001c33a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c33c:	4411      	add	r1, r2
9001c33e:	e7d2      	b.n	9001c2e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001c340:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001c344:	fa1f fa82 	uxth.w	sl, r2
9001c348:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001c34c:	43d2      	mvns	r2, r2
9001c34e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001c352:	fb17 f70a 	smulbb	r7, r7, sl
9001c356:	b2d2      	uxtb	r2, r2
9001c358:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c35c:	b2e4      	uxtb	r4, r4
9001c35e:	b2f6      	uxtb	r6, r6
9001c360:	fb0c 7c02 	mla	ip, ip, r2, r7
9001c364:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001c368:	fb14 f40a 	smulbb	r4, r4, sl
9001c36c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c370:	fa1f fc8c 	uxth.w	ip, ip
9001c374:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c378:	fb16 f60a 	smulbb	r6, r6, sl
9001c37c:	fa5f fe8e 	uxtb.w	lr, lr
9001c380:	fb0e 4402 	mla	r4, lr, r2, r4
9001c384:	fb07 6702 	mla	r7, r7, r2, r6
9001c388:	f10c 0201 	add.w	r2, ip, #1
9001c38c:	b2a4      	uxth	r4, r4
9001c38e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001c392:	1c66      	adds	r6, r4, #1
9001c394:	b2bf      	uxth	r7, r7
9001c396:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c39a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001c39e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001c3a2:	ea46 0c0c 	orr.w	ip, r6, ip
9001c3a6:	1c7e      	adds	r6, r7, #1
9001c3a8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001c3ac:	0976      	lsrs	r6, r6, #5
9001c3ae:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001c3b2:	ea4c 0c06 	orr.w	ip, ip, r6
9001c3b6:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001c3ba:	e7ba      	b.n	9001c332 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001c3bc:	b007      	add	sp, #28
9001c3be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001c3c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c3c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c3c8:	b085      	sub	sp, #20
9001c3ca:	468b      	mov	fp, r1
9001c3cc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c3d0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c3d2:	9203      	str	r2, [sp, #12]
9001c3d4:	6841      	ldr	r1, [r0, #4]
9001c3d6:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001c3da:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001c3de:	fb01 2404 	mla	r4, r1, r4, r2
9001c3e2:	6802      	ldr	r2, [r0, #0]
9001c3e4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c3e8:	f8d8 2000 	ldr.w	r2, [r8]
9001c3ec:	9201      	str	r2, [sp, #4]
9001c3ee:	f1bb 0f00 	cmp.w	fp, #0
9001c3f2:	dc03      	bgt.n	9001c3fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001c3f4:	9a03      	ldr	r2, [sp, #12]
9001c3f6:	2a00      	cmp	r2, #0
9001c3f8:	f340 814f 	ble.w	9001c69a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001c3fc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001c3fe:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001c402:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c406:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c408:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001c40c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001c410:	2b00      	cmp	r3, #0
9001c412:	dd0e      	ble.n	9001c432 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c414:	1408      	asrs	r0, r1, #16
9001c416:	d405      	bmi.n	9001c424 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c418:	42b8      	cmp	r0, r7
9001c41a:	da03      	bge.n	9001c424 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c41c:	1410      	asrs	r0, r2, #16
9001c41e:	d401      	bmi.n	9001c424 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001c420:	42b0      	cmp	r0, r6
9001c422:	db07      	blt.n	9001c434 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c424:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c426:	3b01      	subs	r3, #1
9001c428:	3402      	adds	r4, #2
9001c42a:	4401      	add	r1, r0
9001c42c:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c42e:	4402      	add	r2, r0
9001c430:	e7ee      	b.n	9001c410 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001c432:	d017      	beq.n	9001c464 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c434:	1e58      	subs	r0, r3, #1
9001c436:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001c438:	fb05 1500 	mla	r5, r5, r0, r1
9001c43c:	142d      	asrs	r5, r5, #16
9001c43e:	d409      	bmi.n	9001c454 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001c440:	42bd      	cmp	r5, r7
9001c442:	da07      	bge.n	9001c454 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001c444:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001c446:	fb05 2000 	mla	r0, r5, r0, r2
9001c44a:	1400      	asrs	r0, r0, #16
9001c44c:	d402      	bmi.n	9001c454 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001c44e:	42b0      	cmp	r0, r6
9001c450:	f2c0 80ba 	blt.w	9001c5c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001c454:	2600      	movs	r6, #0
9001c456:	1998      	adds	r0, r3, r6
9001c458:	2800      	cmp	r0, #0
9001c45a:	dc3e      	bgt.n	9001c4da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001c45c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c460:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c464:	f1bb 0f00 	cmp.w	fp, #0
9001c468:	f340 8117 	ble.w	9001c69a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001c46c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c470:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c472:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c476:	f1bb 0b01 	subs.w	fp, fp, #1
9001c47a:	eeb0 6a62 	vmov.f32	s12, s5
9001c47e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c482:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c486:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c48a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001c48e:	eeb0 6a43 	vmov.f32	s12, s6
9001c492:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c496:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001c49a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c49e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c4a2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c4a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c4aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c4ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c4b2:	ee12 2a90 	vmov	r2, s5
9001c4b6:	eef0 2a47 	vmov.f32	s5, s14
9001c4ba:	fb92 f3f3 	sdiv	r3, r2, r3
9001c4be:	ee13 2a10 	vmov	r2, s6
9001c4c2:	9311      	str	r3, [sp, #68]	@ 0x44
9001c4c4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c4c6:	eeb0 3a67 	vmov.f32	s6, s15
9001c4ca:	fb92 f3f3 	sdiv	r3, r2, r3
9001c4ce:	9a03      	ldr	r2, [sp, #12]
9001c4d0:	9312      	str	r3, [sp, #72]	@ 0x48
9001c4d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001c4d4:	bf08      	it	eq
9001c4d6:	4613      	moveq	r3, r2
9001c4d8:	e789      	b.n	9001c3ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001c4da:	140f      	asrs	r7, r1, #16
9001c4dc:	d424      	bmi.n	9001c528 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c4de:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001c4e2:	42bd      	cmp	r5, r7
9001c4e4:	dd20      	ble.n	9001c528 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c4e6:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c4ea:	d41d      	bmi.n	9001c528 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c4ec:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001c4f0:	4560      	cmp	r0, ip
9001c4f2:	dd19      	ble.n	9001c528 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c4f4:	b22d      	sxth	r5, r5
9001c4f6:	9801      	ldr	r0, [sp, #4]
9001c4f8:	fb0c 7505 	mla	r5, ip, r5, r7
9001c4fc:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001c500:	0e07      	lsrs	r7, r0, #24
9001c502:	2fff      	cmp	r7, #255	@ 0xff
9001c504:	d116      	bne.n	9001c534 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c506:	f06f 0501 	mvn.w	r5, #1
9001c50a:	fb05 f706 	mul.w	r7, r5, r6
9001c50e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001c512:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001c516:	0945      	lsrs	r5, r0, #5
9001c518:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001c51c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001c520:	ea4c 0505 	orr.w	r5, ip, r5
9001c524:	4305      	orrs	r5, r0
9001c526:	53e5      	strh	r5, [r4, r7]
9001c528:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c52a:	3e01      	subs	r6, #1
9001c52c:	4401      	add	r1, r0
9001c52e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c530:	4402      	add	r2, r0
9001c532:	e790      	b.n	9001c456 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001c534:	b2fd      	uxtb	r5, r7
9001c536:	2f00      	cmp	r7, #0
9001c538:	d0f6      	beq.n	9001c528 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c53a:	f06f 0701 	mvn.w	r7, #1
9001c53e:	fa1f f985 	uxth.w	r9, r5
9001c542:	43ed      	mvns	r5, r5
9001c544:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001c548:	4377      	muls	r7, r6
9001c54a:	fb1a fa09 	smulbb	sl, sl, r9
9001c54e:	b2ed      	uxtb	r5, r5
9001c550:	f834 e007 	ldrh.w	lr, [r4, r7]
9001c554:	9702      	str	r7, [sp, #8]
9001c556:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001c55a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001c55e:	fb17 f709 	smulbb	r7, r7, r9
9001c562:	b2c0      	uxtb	r0, r0
9001c564:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c568:	fb10 f009 	smulbb	r0, r0, r9
9001c56c:	fb0c 7c05 	mla	ip, ip, r5, r7
9001c570:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001c574:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c578:	fa1f fc8c 	uxth.w	ip, ip
9001c57c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c580:	fa5f fe8e 	uxtb.w	lr, lr
9001c584:	fb07 a705 	mla	r7, r7, r5, sl
9001c588:	fb0e 0005 	mla	r0, lr, r5, r0
9001c58c:	f10c 0501 	add.w	r5, ip, #1
9001c590:	b2bf      	uxth	r7, r7
9001c592:	b280      	uxth	r0, r0
9001c594:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c598:	f100 0a01 	add.w	sl, r0, #1
9001c59c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c5a0:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001c5a4:	9802      	ldr	r0, [sp, #8]
9001c5a6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c5aa:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c5ae:	f107 0a01 	add.w	sl, r7, #1
9001c5b2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c5b6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c5ba:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c5be:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c5c2:	f824 c000 	strh.w	ip, [r4, r0]
9001c5c6:	e7af      	b.n	9001c528 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001c5c8:	f04f 0e00 	mov.w	lr, #0
9001c5cc:	eba3 000e 	sub.w	r0, r3, lr
9001c5d0:	2800      	cmp	r0, #0
9001c5d2:	f77f af43 	ble.w	9001c45c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c5d6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001c5da:	140d      	asrs	r5, r1, #16
9001c5dc:	1410      	asrs	r0, r2, #16
9001c5de:	fb06 5000 	mla	r0, r6, r0, r5
9001c5e2:	9d01      	ldr	r5, [sp, #4]
9001c5e4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001c5e8:	0e2e      	lsrs	r6, r5, #24
9001c5ea:	2eff      	cmp	r6, #255	@ 0xff
9001c5ec:	d112      	bne.n	9001c614 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001c5ee:	482c      	ldr	r0, [pc, #176]	@ (9001c6a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001c5f0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001c5f4:	0968      	lsrs	r0, r5, #5
9001c5f6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c5fa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001c5fe:	4330      	orrs	r0, r6
9001c600:	4328      	orrs	r0, r5
9001c602:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001c606:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001c608:	f10e 0e01 	add.w	lr, lr, #1
9001c60c:	4401      	add	r1, r0
9001c60e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001c610:	4402      	add	r2, r0
9001c612:	e7db      	b.n	9001c5cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001c614:	b2f0      	uxtb	r0, r6
9001c616:	2e00      	cmp	r6, #0
9001c618:	d0f5      	beq.n	9001c606 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001c61a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001c61e:	fa1f f980 	uxth.w	r9, r0
9001c622:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c626:	43c0      	mvns	r0, r0
9001c628:	ea4f 272c 	mov.w	r7, ip, asr #8
9001c62c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001c630:	fb16 f609 	smulbb	r6, r6, r9
9001c634:	b2c0      	uxtb	r0, r0
9001c636:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c63a:	b2ed      	uxtb	r5, r5
9001c63c:	fb1a fa09 	smulbb	sl, sl, r9
9001c640:	fb07 6700 	mla	r7, r7, r0, r6
9001c644:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001c648:	fb15 f509 	smulbb	r5, r5, r9
9001c64c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c650:	b2bf      	uxth	r7, r7
9001c652:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c656:	fa5f fc8c 	uxtb.w	ip, ip
9001c65a:	fb06 a600 	mla	r6, r6, r0, sl
9001c65e:	fb0c 5500 	mla	r5, ip, r0, r5
9001c662:	1c78      	adds	r0, r7, #1
9001c664:	b2b6      	uxth	r6, r6
9001c666:	b2ad      	uxth	r5, r5
9001c668:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001c66c:	f105 0a01 	add.w	sl, r5, #1
9001c670:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001c674:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c678:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c67c:	ea4a 0707 	orr.w	r7, sl, r7
9001c680:	f106 0a01 	add.w	sl, r6, #1
9001c684:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c688:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c68c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c690:	ea47 070a 	orr.w	r7, r7, sl
9001c694:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001c698:	e7b5      	b.n	9001c606 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001c69a:	b005      	add	sp, #20
9001c69c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c6a0:	fffff800 	.word	0xfffff800

9001c6a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c6a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c6a8:	b087      	sub	sp, #28
9001c6aa:	468b      	mov	fp, r1
9001c6ac:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c6b0:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001c6b2:	9203      	str	r2, [sp, #12]
9001c6b4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c6b8:	6841      	ldr	r1, [r0, #4]
9001c6ba:	9204      	str	r2, [sp, #16]
9001c6bc:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001c6c0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001c6c4:	fb01 2404 	mla	r4, r1, r4, r2
9001c6c8:	6802      	ldr	r2, [r0, #0]
9001c6ca:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c6ce:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001c6d2:	3201      	adds	r2, #1
9001c6d4:	f022 0201 	bic.w	r2, r2, #1
9001c6d8:	9200      	str	r2, [sp, #0]
9001c6da:	f8d9 2000 	ldr.w	r2, [r9]
9001c6de:	9201      	str	r2, [sp, #4]
9001c6e0:	f1bb 0f00 	cmp.w	fp, #0
9001c6e4:	dc03      	bgt.n	9001c6ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001c6e6:	9a03      	ldr	r2, [sp, #12]
9001c6e8:	2a00      	cmp	r2, #0
9001c6ea:	f340 816a 	ble.w	9001c9c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001c6ee:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c6f0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001c6f4:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c6f8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c6fa:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001c6fe:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c702:	2b00      	cmp	r3, #0
9001c704:	dd0e      	ble.n	9001c724 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001c706:	1402      	asrs	r2, r0, #16
9001c708:	d405      	bmi.n	9001c716 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c70a:	42ba      	cmp	r2, r7
9001c70c:	da03      	bge.n	9001c716 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c70e:	140a      	asrs	r2, r1, #16
9001c710:	d401      	bmi.n	9001c716 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c712:	42b2      	cmp	r2, r6
9001c714:	db07      	blt.n	9001c726 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001c716:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c718:	3b01      	subs	r3, #1
9001c71a:	3402      	adds	r4, #2
9001c71c:	4410      	add	r0, r2
9001c71e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c720:	4411      	add	r1, r2
9001c722:	e7ee      	b.n	9001c702 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001c724:	d017      	beq.n	9001c756 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001c726:	1e5a      	subs	r2, r3, #1
9001c728:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001c72a:	fb05 0502 	mla	r5, r5, r2, r0
9001c72e:	142d      	asrs	r5, r5, #16
9001c730:	d409      	bmi.n	9001c746 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c732:	42bd      	cmp	r5, r7
9001c734:	da07      	bge.n	9001c746 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c736:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001c738:	fb05 1202 	mla	r2, r5, r2, r1
9001c73c:	1412      	asrs	r2, r2, #16
9001c73e:	d402      	bmi.n	9001c746 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c740:	42b2      	cmp	r2, r6
9001c742:	f2c0 80c8 	blt.w	9001c8d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001c746:	2700      	movs	r7, #0
9001c748:	19da      	adds	r2, r3, r7
9001c74a:	2a00      	cmp	r2, #0
9001c74c:	dc3e      	bgt.n	9001c7cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001c74e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c752:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c756:	f1bb 0f00 	cmp.w	fp, #0
9001c75a:	f340 8132 	ble.w	9001c9c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001c75e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c762:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c764:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c768:	f1bb 0b01 	subs.w	fp, fp, #1
9001c76c:	eeb0 6a62 	vmov.f32	s12, s5
9001c770:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c774:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c778:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c77c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001c780:	eeb0 6a43 	vmov.f32	s12, s6
9001c784:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c788:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001c78c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c790:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c794:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c798:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c79c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c7a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c7a4:	ee12 2a90 	vmov	r2, s5
9001c7a8:	eef0 2a47 	vmov.f32	s5, s14
9001c7ac:	fb92 f3f3 	sdiv	r3, r2, r3
9001c7b0:	ee13 2a10 	vmov	r2, s6
9001c7b4:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c7b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c7b8:	eeb0 3a67 	vmov.f32	s6, s15
9001c7bc:	fb92 f3f3 	sdiv	r3, r2, r3
9001c7c0:	9a03      	ldr	r2, [sp, #12]
9001c7c2:	9314      	str	r3, [sp, #80]	@ 0x50
9001c7c4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c7c6:	bf08      	it	eq
9001c7c8:	4613      	moveq	r3, r2
9001c7ca:	e789      	b.n	9001c6e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001c7cc:	1405      	asrs	r5, r0, #16
9001c7ce:	d436      	bmi.n	9001c83e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c7d0:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001c7d4:	42aa      	cmp	r2, r5
9001c7d6:	dd32      	ble.n	9001c83e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c7d8:	140e      	asrs	r6, r1, #16
9001c7da:	d430      	bmi.n	9001c83e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c7dc:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001c7e0:	42b2      	cmp	r2, r6
9001c7e2:	dd2c      	ble.n	9001c83e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c7e4:	9a00      	ldr	r2, [sp, #0]
9001c7e6:	fb06 5502 	mla	r5, r6, r2, r5
9001c7ea:	9e01      	ldr	r6, [sp, #4]
9001c7ec:	086a      	lsrs	r2, r5, #1
9001c7ee:	5cb2      	ldrb	r2, [r6, r2]
9001c7f0:	07ee      	lsls	r6, r5, #31
9001c7f2:	bf54      	ite	pl
9001c7f4:	f002 020f 	andpl.w	r2, r2, #15
9001c7f8:	1112      	asrmi	r2, r2, #4
9001c7fa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c7fe:	b2d2      	uxtb	r2, r2
9001c800:	b1ea      	cbz	r2, 9001c83e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c802:	9d04      	ldr	r5, [sp, #16]
9001c804:	436a      	muls	r2, r5
9001c806:	1c55      	adds	r5, r2, #1
9001c808:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001c80c:	4d6e      	ldr	r5, [pc, #440]	@ (9001c9c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001c80e:	1212      	asrs	r2, r2, #8
9001c810:	682d      	ldr	r5, [r5, #0]
9001c812:	2aff      	cmp	r2, #255	@ 0xff
9001c814:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001c818:	9605      	str	r6, [sp, #20]
9001c81a:	d116      	bne.n	9001c84a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001c81c:	f06f 0201 	mvn.w	r2, #1
9001c820:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001c824:	fb02 fc07 	mul.w	ip, r2, r7
9001c828:	096a      	lsrs	r2, r5, #5
9001c82a:	f026 0607 	bic.w	r6, r6, #7
9001c82e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c832:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c836:	4316      	orrs	r6, r2
9001c838:	432e      	orrs	r6, r5
9001c83a:	f824 600c 	strh.w	r6, [r4, ip]
9001c83e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c840:	3f01      	subs	r7, #1
9001c842:	4410      	add	r0, r2
9001c844:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c846:	4411      	add	r1, r2
9001c848:	e77e      	b.n	9001c748 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001c84a:	f06f 0601 	mvn.w	r6, #1
9001c84e:	fa1f fa82 	uxth.w	sl, r2
9001c852:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001c856:	43d2      	mvns	r2, r2
9001c858:	437e      	muls	r6, r7
9001c85a:	b2ed      	uxtb	r5, r5
9001c85c:	fb1c fc0a 	smulbb	ip, ip, sl
9001c860:	b2d2      	uxtb	r2, r2
9001c862:	f834 8006 	ldrh.w	r8, [r4, r6]
9001c866:	fb15 f50a 	smulbb	r5, r5, sl
9001c86a:	9602      	str	r6, [sp, #8]
9001c86c:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001c870:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001c874:	fb16 f60a 	smulbb	r6, r6, sl
9001c878:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001c87c:	fb0e ce02 	mla	lr, lr, r2, ip
9001c880:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001c884:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c888:	fa1f fe8e 	uxth.w	lr, lr
9001c88c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001c890:	fa5f f888 	uxtb.w	r8, r8
9001c894:	fb0c 6c02 	mla	ip, ip, r2, r6
9001c898:	fb08 5502 	mla	r5, r8, r2, r5
9001c89c:	f10e 0201 	add.w	r2, lr, #1
9001c8a0:	fa1f fc8c 	uxth.w	ip, ip
9001c8a4:	b2ad      	uxth	r5, r5
9001c8a6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001c8aa:	9a02      	ldr	r2, [sp, #8]
9001c8ac:	1c6e      	adds	r6, r5, #1
9001c8ae:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001c8b2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001c8b6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001c8ba:	ea46 0e0e 	orr.w	lr, r6, lr
9001c8be:	f10c 0601 	add.w	r6, ip, #1
9001c8c2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001c8c6:	0976      	lsrs	r6, r6, #5
9001c8c8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001c8cc:	ea4e 0e06 	orr.w	lr, lr, r6
9001c8d0:	f824 e002 	strh.w	lr, [r4, r2]
9001c8d4:	e7b3      	b.n	9001c83e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c8d6:	f04f 0800 	mov.w	r8, #0
9001c8da:	eba3 0208 	sub.w	r2, r3, r8
9001c8de:	2a00      	cmp	r2, #0
9001c8e0:	f77f af35 	ble.w	9001c74e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001c8e4:	1402      	asrs	r2, r0, #16
9001c8e6:	9e00      	ldr	r6, [sp, #0]
9001c8e8:	140d      	asrs	r5, r1, #16
9001c8ea:	fb06 2505 	mla	r5, r6, r5, r2
9001c8ee:	9e01      	ldr	r6, [sp, #4]
9001c8f0:	086a      	lsrs	r2, r5, #1
9001c8f2:	07ed      	lsls	r5, r5, #31
9001c8f4:	5cb2      	ldrb	r2, [r6, r2]
9001c8f6:	bf54      	ite	pl
9001c8f8:	f002 020f 	andpl.w	r2, r2, #15
9001c8fc:	1112      	asrmi	r2, r2, #4
9001c8fe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c902:	b2d2      	uxtb	r2, r2
9001c904:	b1c2      	cbz	r2, 9001c938 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c906:	9d04      	ldr	r5, [sp, #16]
9001c908:	436a      	muls	r2, r5
9001c90a:	1c55      	adds	r5, r2, #1
9001c90c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001c910:	4d2d      	ldr	r5, [pc, #180]	@ (9001c9c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001c912:	1212      	asrs	r2, r2, #8
9001c914:	682e      	ldr	r6, [r5, #0]
9001c916:	2aff      	cmp	r2, #255	@ 0xff
9001c918:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001c91c:	d113      	bne.n	9001c946 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001c91e:	0972      	lsrs	r2, r6, #5
9001c920:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001c924:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001c928:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c92c:	f025 0507 	bic.w	r5, r5, #7
9001c930:	4315      	orrs	r5, r2
9001c932:	4335      	orrs	r5, r6
9001c934:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001c938:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c93a:	f108 0801 	add.w	r8, r8, #1
9001c93e:	4410      	add	r0, r2
9001c940:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c942:	4411      	add	r1, r2
9001c944:	e7c9      	b.n	9001c8da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001c946:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001c94a:	fa1f fa82 	uxth.w	sl, r2
9001c94e:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001c952:	43d2      	mvns	r2, r2
9001c954:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001c958:	fb17 f70a 	smulbb	r7, r7, sl
9001c95c:	b2d2      	uxtb	r2, r2
9001c95e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c962:	b2f6      	uxtb	r6, r6
9001c964:	b2ed      	uxtb	r5, r5
9001c966:	fb0c 7c02 	mla	ip, ip, r2, r7
9001c96a:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001c96e:	fb16 f60a 	smulbb	r6, r6, sl
9001c972:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c976:	fa1f fc8c 	uxth.w	ip, ip
9001c97a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c97e:	fb15 f50a 	smulbb	r5, r5, sl
9001c982:	fa5f fe8e 	uxtb.w	lr, lr
9001c986:	fb0e 6602 	mla	r6, lr, r2, r6
9001c98a:	fb07 5702 	mla	r7, r7, r2, r5
9001c98e:	f10c 0201 	add.w	r2, ip, #1
9001c992:	b2b6      	uxth	r6, r6
9001c994:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001c998:	1c75      	adds	r5, r6, #1
9001c99a:	b2bf      	uxth	r7, r7
9001c99c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c9a0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001c9a4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c9a8:	ea45 0c0c 	orr.w	ip, r5, ip
9001c9ac:	1c7d      	adds	r5, r7, #1
9001c9ae:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001c9b2:	096d      	lsrs	r5, r5, #5
9001c9b4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001c9b8:	ea4c 0c05 	orr.w	ip, ip, r5
9001c9bc:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001c9c0:	e7ba      	b.n	9001c938 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c9c2:	b007      	add	sp, #28
9001c9c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c9c8:	240233e4 	.word	0x240233e4

9001c9cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c9cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c9d0:	b087      	sub	sp, #28
9001c9d2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c9d6:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001cce0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001c9da:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001c9dc:	9101      	str	r1, [sp, #4]
9001c9de:	9205      	str	r2, [sp, #20]
9001c9e0:	6841      	ldr	r1, [r0, #4]
9001c9e2:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001c9e6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001c9ea:	fb01 2404 	mla	r4, r1, r4, r2
9001c9ee:	6802      	ldr	r2, [r0, #0]
9001c9f0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c9f4:	f8db 2008 	ldr.w	r2, [fp, #8]
9001c9f8:	3201      	adds	r2, #1
9001c9fa:	f022 0201 	bic.w	r2, r2, #1
9001c9fe:	9202      	str	r2, [sp, #8]
9001ca00:	f8db 2000 	ldr.w	r2, [fp]
9001ca04:	9203      	str	r2, [sp, #12]
9001ca06:	9a01      	ldr	r2, [sp, #4]
9001ca08:	2a00      	cmp	r2, #0
9001ca0a:	dc03      	bgt.n	9001ca14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001ca0c:	9a05      	ldr	r2, [sp, #20]
9001ca0e:	2a00      	cmp	r2, #0
9001ca10:	f340 8162 	ble.w	9001ccd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001ca14:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001ca16:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001ca1a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001ca1e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ca20:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001ca24:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ca28:	2b00      	cmp	r3, #0
9001ca2a:	dd0e      	ble.n	9001ca4a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ca2c:	1402      	asrs	r2, r0, #16
9001ca2e:	d405      	bmi.n	9001ca3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ca30:	42ba      	cmp	r2, r7
9001ca32:	da03      	bge.n	9001ca3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ca34:	140a      	asrs	r2, r1, #16
9001ca36:	d401      	bmi.n	9001ca3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ca38:	42b2      	cmp	r2, r6
9001ca3a:	db07      	blt.n	9001ca4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001ca3c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ca3e:	3b01      	subs	r3, #1
9001ca40:	3402      	adds	r4, #2
9001ca42:	4410      	add	r0, r2
9001ca44:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ca46:	4411      	add	r1, r2
9001ca48:	e7ee      	b.n	9001ca28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001ca4a:	d017      	beq.n	9001ca7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001ca4c:	1e5a      	subs	r2, r3, #1
9001ca4e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001ca50:	fb05 0502 	mla	r5, r5, r2, r0
9001ca54:	142d      	asrs	r5, r5, #16
9001ca56:	d409      	bmi.n	9001ca6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ca58:	42bd      	cmp	r5, r7
9001ca5a:	da07      	bge.n	9001ca6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ca5c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001ca5e:	fb05 1202 	mla	r2, r5, r2, r1
9001ca62:	1412      	asrs	r2, r2, #16
9001ca64:	d402      	bmi.n	9001ca6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ca66:	42b2      	cmp	r2, r6
9001ca68:	f2c0 80c3 	blt.w	9001cbf2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001ca6c:	2500      	movs	r5, #0
9001ca6e:	195a      	adds	r2, r3, r5
9001ca70:	2a00      	cmp	r2, #0
9001ca72:	dc3f      	bgt.n	9001caf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001ca74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ca78:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ca7c:	9b01      	ldr	r3, [sp, #4]
9001ca7e:	2b00      	cmp	r3, #0
9001ca80:	f340 812a 	ble.w	9001ccd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001ca84:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ca88:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ca8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ca8e:	eeb0 6a62 	vmov.f32	s12, s5
9001ca92:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ca96:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ca9a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ca9e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001caa2:	eeb0 6a43 	vmov.f32	s12, s6
9001caa6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001caaa:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001caae:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001cab2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001cab6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001caba:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cabe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cac2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cac6:	ee12 2a90 	vmov	r2, s5
9001caca:	eef0 2a47 	vmov.f32	s5, s14
9001cace:	fb92 f3f3 	sdiv	r3, r2, r3
9001cad2:	ee13 2a10 	vmov	r2, s6
9001cad6:	9313      	str	r3, [sp, #76]	@ 0x4c
9001cad8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cada:	eeb0 3a67 	vmov.f32	s6, s15
9001cade:	fb92 f3f3 	sdiv	r3, r2, r3
9001cae2:	9314      	str	r3, [sp, #80]	@ 0x50
9001cae4:	9b01      	ldr	r3, [sp, #4]
9001cae6:	9a05      	ldr	r2, [sp, #20]
9001cae8:	3b01      	subs	r3, #1
9001caea:	9301      	str	r3, [sp, #4]
9001caec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001caee:	bf08      	it	eq
9001caf0:	4613      	moveq	r3, r2
9001caf2:	e788      	b.n	9001ca06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001caf4:	1406      	asrs	r6, r0, #16
9001caf6:	d42c      	bmi.n	9001cb52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001caf8:	f8db 2008 	ldr.w	r2, [fp, #8]
9001cafc:	42b2      	cmp	r2, r6
9001cafe:	dd28      	ble.n	9001cb52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001cb00:	140f      	asrs	r7, r1, #16
9001cb02:	d426      	bmi.n	9001cb52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001cb04:	f8db 200c 	ldr.w	r2, [fp, #12]
9001cb08:	42ba      	cmp	r2, r7
9001cb0a:	dd22      	ble.n	9001cb52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001cb0c:	9a02      	ldr	r2, [sp, #8]
9001cb0e:	fb07 6602 	mla	r6, r7, r2, r6
9001cb12:	9f03      	ldr	r7, [sp, #12]
9001cb14:	0872      	lsrs	r2, r6, #1
9001cb16:	07f6      	lsls	r6, r6, #31
9001cb18:	5cba      	ldrb	r2, [r7, r2]
9001cb1a:	bf54      	ite	pl
9001cb1c:	f002 020f 	andpl.w	r2, r2, #15
9001cb20:	1112      	asrmi	r2, r2, #4
9001cb22:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001cb26:	b2d2      	uxtb	r2, r2
9001cb28:	2aff      	cmp	r2, #255	@ 0xff
9001cb2a:	d118      	bne.n	9001cb5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001cb2c:	f06f 0601 	mvn.w	r6, #1
9001cb30:	f8d8 2000 	ldr.w	r2, [r8]
9001cb34:	fb06 f705 	mul.w	r7, r6, r5
9001cb38:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001cb3c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001cb40:	0956      	lsrs	r6, r2, #5
9001cb42:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001cb46:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001cb4a:	ea4c 0606 	orr.w	r6, ip, r6
9001cb4e:	4316      	orrs	r6, r2
9001cb50:	53e6      	strh	r6, [r4, r7]
9001cb52:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001cb54:	3d01      	subs	r5, #1
9001cb56:	4410      	add	r0, r2
9001cb58:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001cb5a:	4411      	add	r1, r2
9001cb5c:	e787      	b.n	9001ca6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001cb5e:	2a00      	cmp	r2, #0
9001cb60:	d0f7      	beq.n	9001cb52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001cb62:	f06f 0601 	mvn.w	r6, #1
9001cb66:	f8d8 c000 	ldr.w	ip, [r8]
9001cb6a:	fa1f f982 	uxth.w	r9, r2
9001cb6e:	43d2      	mvns	r2, r2
9001cb70:	436e      	muls	r6, r5
9001cb72:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001cb76:	b2d2      	uxtb	r2, r2
9001cb78:	f834 e006 	ldrh.w	lr, [r4, r6]
9001cb7c:	fb1a fa09 	smulbb	sl, sl, r9
9001cb80:	9604      	str	r6, [sp, #16]
9001cb82:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001cb86:	ea4f 272e 	mov.w	r7, lr, asr #8
9001cb8a:	fb16 f609 	smulbb	r6, r6, r9
9001cb8e:	fa5f fc8c 	uxtb.w	ip, ip
9001cb92:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cb96:	fb1c fc09 	smulbb	ip, ip, r9
9001cb9a:	fb07 6702 	mla	r7, r7, r2, r6
9001cb9e:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001cba2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001cba6:	b2bf      	uxth	r7, r7
9001cba8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001cbac:	fa5f fe8e 	uxtb.w	lr, lr
9001cbb0:	fb06 a602 	mla	r6, r6, r2, sl
9001cbb4:	fb0e cc02 	mla	ip, lr, r2, ip
9001cbb8:	1c7a      	adds	r2, r7, #1
9001cbba:	b2b6      	uxth	r6, r6
9001cbbc:	fa1f fc8c 	uxth.w	ip, ip
9001cbc0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001cbc4:	9a04      	ldr	r2, [sp, #16]
9001cbc6:	f10c 0a01 	add.w	sl, ip, #1
9001cbca:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001cbce:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001cbd2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cbd6:	ea4a 0707 	orr.w	r7, sl, r7
9001cbda:	f106 0a01 	add.w	sl, r6, #1
9001cbde:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001cbe2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cbe6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001cbea:	ea47 070a 	orr.w	r7, r7, sl
9001cbee:	52a7      	strh	r7, [r4, r2]
9001cbf0:	e7af      	b.n	9001cb52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001cbf2:	f04f 0e00 	mov.w	lr, #0
9001cbf6:	eba3 020e 	sub.w	r2, r3, lr
9001cbfa:	2a00      	cmp	r2, #0
9001cbfc:	f77f af3a 	ble.w	9001ca74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001cc00:	1402      	asrs	r2, r0, #16
9001cc02:	9e02      	ldr	r6, [sp, #8]
9001cc04:	140d      	asrs	r5, r1, #16
9001cc06:	fb06 2505 	mla	r5, r6, r5, r2
9001cc0a:	9e03      	ldr	r6, [sp, #12]
9001cc0c:	086a      	lsrs	r2, r5, #1
9001cc0e:	07ed      	lsls	r5, r5, #31
9001cc10:	5cb2      	ldrb	r2, [r6, r2]
9001cc12:	bf54      	ite	pl
9001cc14:	f002 020f 	andpl.w	r2, r2, #15
9001cc18:	1112      	asrmi	r2, r2, #4
9001cc1a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001cc1e:	b2d2      	uxtb	r2, r2
9001cc20:	2aff      	cmp	r2, #255	@ 0xff
9001cc22:	d115      	bne.n	9001cc50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001cc24:	f8d8 5000 	ldr.w	r5, [r8]
9001cc28:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001cc2c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001cc30:	096a      	lsrs	r2, r5, #5
9001cc32:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001cc36:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001cc3a:	4332      	orrs	r2, r6
9001cc3c:	432a      	orrs	r2, r5
9001cc3e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001cc42:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001cc44:	f10e 0e01 	add.w	lr, lr, #1
9001cc48:	4410      	add	r0, r2
9001cc4a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001cc4c:	4411      	add	r1, r2
9001cc4e:	e7d2      	b.n	9001cbf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001cc50:	2a00      	cmp	r2, #0
9001cc52:	d0f6      	beq.n	9001cc42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001cc54:	f8d8 7000 	ldr.w	r7, [r8]
9001cc58:	fa1f f982 	uxth.w	r9, r2
9001cc5c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001cc60:	43d2      	mvns	r2, r2
9001cc62:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001cc66:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001cc6a:	ea4f 262c 	mov.w	r6, ip, asr #8
9001cc6e:	fb15 f509 	smulbb	r5, r5, r9
9001cc72:	b2d2      	uxtb	r2, r2
9001cc74:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001cc78:	b2ff      	uxtb	r7, r7
9001cc7a:	fb1a fa09 	smulbb	sl, sl, r9
9001cc7e:	fb06 5602 	mla	r6, r6, r2, r5
9001cc82:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001cc86:	fb17 f709 	smulbb	r7, r7, r9
9001cc8a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001cc8e:	b2b6      	uxth	r6, r6
9001cc90:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001cc94:	fa5f fc8c 	uxtb.w	ip, ip
9001cc98:	fb05 a502 	mla	r5, r5, r2, sl
9001cc9c:	fb0c 7702 	mla	r7, ip, r2, r7
9001cca0:	1c72      	adds	r2, r6, #1
9001cca2:	b2ad      	uxth	r5, r5
9001cca4:	b2bf      	uxth	r7, r7
9001cca6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001ccaa:	f107 0a01 	add.w	sl, r7, #1
9001ccae:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001ccb2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001ccb6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ccba:	ea4a 0606 	orr.w	r6, sl, r6
9001ccbe:	f105 0a01 	add.w	sl, r5, #1
9001ccc2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ccc6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ccca:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001ccce:	ea46 060a 	orr.w	r6, r6, sl
9001ccd2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001ccd6:	e7b4      	b.n	9001cc42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001ccd8:	b007      	add	sp, #28
9001ccda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ccde:	bf00      	nop
9001cce0:	240233e4 	.word	0x240233e4

9001cce4 <_ZN8touchgfx8LCD16bppD1Ev>:
9001cce4:	4770      	bx	lr

9001cce6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
9001cce6:	4770      	bx	lr

9001cce8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001cce8:	4770      	bx	lr

9001ccea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001ccea:	4770      	bx	lr

9001ccec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001ccec:	4770      	bx	lr

9001ccee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001ccee:	4770      	bx	lr

9001ccf0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001ccf0:	4770      	bx	lr

9001ccf2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001ccf2:	4770      	bx	lr

9001ccf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001ccf4:	4770      	bx	lr

9001ccf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001ccf6:	4770      	bx	lr

9001ccf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001ccf8:	4770      	bx	lr

9001ccfa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001ccfa:	4770      	bx	lr

9001ccfc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001ccfc:	4770      	bx	lr

9001ccfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001ccfe:	4770      	bx	lr

9001cd00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001cd00:	4770      	bx	lr

9001cd02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001cd02:	4770      	bx	lr

9001cd04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001cd04:	4770      	bx	lr

9001cd06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001cd06:	4770      	bx	lr

9001cd08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001cd08:	4770      	bx	lr

9001cd0a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001cd0a:	4770      	bx	lr

9001cd0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001cd0c:	4770      	bx	lr

9001cd0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001cd0e:	4770      	bx	lr

9001cd10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001cd10:	4770      	bx	lr

9001cd12 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001cd12:	4770      	bx	lr

9001cd14 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001cd14:	4770      	bx	lr

9001cd16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001cd16:	4770      	bx	lr

9001cd18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001cd18:	4770      	bx	lr

9001cd1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001cd1a:	4770      	bx	lr

9001cd1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001cd1c:	4770      	bx	lr

9001cd1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001cd1e:	4770      	bx	lr

9001cd20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001cd20:	4770      	bx	lr

9001cd22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001cd22:	4770      	bx	lr

9001cd24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001cd24:	4770      	bx	lr

9001cd26 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001cd26:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001cd2a:	b088      	sub	sp, #32
9001cd2c:	4606      	mov	r6, r0
9001cd2e:	4688      	mov	r8, r1
9001cd30:	4691      	mov	r9, r2
9001cd32:	ac08      	add	r4, sp, #32
9001cd34:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001cd38:	4620      	mov	r0, r4
9001cd3a:	f7fd fc33 	bl	9001a5a4 <_ZNK8touchgfx6Bitmap7getDataEv>
9001cd3e:	6833      	ldr	r3, [r6, #0]
9001cd40:	4605      	mov	r5, r0
9001cd42:	4620      	mov	r0, r4
9001cd44:	699f      	ldr	r7, [r3, #24]
9001cd46:	f7fd fb3b 	bl	9001a3c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001cd4a:	4682      	mov	sl, r0
9001cd4c:	4620      	mov	r0, r4
9001cd4e:	f7fd fb6b 	bl	9001a428 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001cd52:	9500      	str	r5, [sp, #0]
9001cd54:	464b      	mov	r3, r9
9001cd56:	4642      	mov	r2, r8
9001cd58:	4631      	mov	r1, r6
9001cd5a:	e9cd a001 	strd	sl, r0, [sp, #4]
9001cd5e:	a806      	add	r0, sp, #24
9001cd60:	47b8      	blx	r7
9001cd62:	4628      	mov	r0, r5
9001cd64:	b008      	add	sp, #32
9001cd66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001cd6c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001cd6c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001cd70:	2300      	movs	r3, #0
9001cd72:	9300      	str	r3, [sp, #0]
9001cd74:	4b3d      	ldr	r3, [pc, #244]	@ (9001ce6c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001cd76:	781b      	ldrb	r3, [r3, #0]
9001cd78:	2b00      	cmp	r3, #0
9001cd7a:	d137      	bne.n	9001cdec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001cd7c:	4a3c      	ldr	r2, [pc, #240]	@ (9001ce70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001cd7e:	f9b2 2000 	ldrsh.w	r2, [r2]
9001cd82:	f8ad 2004 	strh.w	r2, [sp, #4]
9001cd86:	2b00      	cmp	r3, #0
9001cd88:	d132      	bne.n	9001cdf0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001cd8a:	4b3a      	ldr	r3, [pc, #232]	@ (9001ce74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001cd8c:	f9b3 3000 	ldrsh.w	r3, [r3]
9001cd90:	ac02      	add	r4, sp, #8
9001cd92:	6808      	ldr	r0, [r1, #0]
9001cd94:	f8ad 3006 	strh.w	r3, [sp, #6]
9001cd98:	ab02      	add	r3, sp, #8
9001cd9a:	6849      	ldr	r1, [r1, #4]
9001cd9c:	4d36      	ldr	r5, [pc, #216]	@ (9001ce78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001cd9e:	c303      	stmia	r3!, {r0, r1}
9001cda0:	4669      	mov	r1, sp
9001cda2:	4620      	mov	r0, r4
9001cda4:	f7f9 fd8c 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cda8:	4668      	mov	r0, sp
9001cdaa:	f7f9 fd61 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cdae:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001cdb2:	f8bd 2000 	ldrh.w	r2, [sp]
9001cdb6:	462f      	mov	r7, r5
9001cdb8:	6828      	ldr	r0, [r5, #0]
9001cdba:	4413      	add	r3, r2
9001cdbc:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001cdc0:	f8ad 3008 	strh.w	r3, [sp, #8]
9001cdc4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001cdc8:	4413      	add	r3, r2
9001cdca:	f8ad 300a 	strh.w	r3, [sp, #10]
9001cdce:	6803      	ldr	r3, [r0, #0]
9001cdd0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001cdd2:	4798      	blx	r3
9001cdd4:	f010 0f01 	tst.w	r0, #1
9001cdd8:	d00c      	beq.n	9001cdf4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001cdda:	6828      	ldr	r0, [r5, #0]
9001cddc:	6803      	ldr	r3, [r0, #0]
9001cdde:	e894 0006 	ldmia.w	r4, {r1, r2}
9001cde2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001cde4:	4798      	blx	r3
9001cde6:	b004      	add	sp, #16
9001cde8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001cdec:	4a21      	ldr	r2, [pc, #132]	@ (9001ce74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001cdee:	e7c6      	b.n	9001cd7e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001cdf0:	4b1f      	ldr	r3, [pc, #124]	@ (9001ce70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001cdf2:	e7cb      	b.n	9001cd8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001cdf4:	6838      	ldr	r0, [r7, #0]
9001cdf6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001cdfa:	6803      	ldr	r3, [r0, #0]
9001cdfc:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001ce00:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001ce04:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ce06:	4798      	blx	r3
9001ce08:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001ce0c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001ce10:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001ce14:	fb16 3602 	smlabb	r6, r6, r2, r3
9001ce18:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001ce1c:	6838      	ldr	r0, [r7, #0]
9001ce1e:	6803      	ldr	r3, [r0, #0]
9001ce20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001ce22:	4798      	blx	r3
9001ce24:	4a12      	ldr	r2, [pc, #72]	@ (9001ce70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001ce26:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001ce2a:	8813      	ldrh	r3, [r2, #0]
9001ce2c:	4691      	mov	r9, r2
9001ce2e:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001ce32:	435d      	muls	r5, r3
9001ce34:	fb03 1404 	mla	r4, r3, r4, r1
9001ce38:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001ce3c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001ce40:	6838      	ldr	r0, [r7, #0]
9001ce42:	42ac      	cmp	r4, r5
9001ce44:	6803      	ldr	r3, [r0, #0]
9001ce46:	d20e      	bcs.n	9001ce66 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001ce48:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
9001ce4c:	4632      	mov	r2, r6
9001ce4e:	4643      	mov	r3, r8
9001ce50:	4621      	mov	r1, r4
9001ce52:	47d0      	blx	sl
9001ce54:	f8b9 3000 	ldrh.w	r3, [r9]
9001ce58:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ce5c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001ce60:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001ce64:	e7ec      	b.n	9001ce40 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001ce66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ce68:	4798      	blx	r3
9001ce6a:	e7bc      	b.n	9001cde6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001ce6c:	240233cc 	.word	0x240233cc
9001ce70:	240233ce 	.word	0x240233ce
9001ce74:	240233d0 	.word	0x240233d0
9001ce78:	240233d4 	.word	0x240233d4

9001ce7c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001ce7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ce80:	b08b      	sub	sp, #44	@ 0x2c
9001ce82:	460f      	mov	r7, r1
9001ce84:	4616      	mov	r6, r2
9001ce86:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001ce8a:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001ce8e:	f1bb 0f00 	cmp.w	fp, #0
9001ce92:	d04a      	beq.n	9001cf2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001ce94:	6810      	ldr	r0, [r2, #0]
9001ce96:	ad06      	add	r5, sp, #24
9001ce98:	6851      	ldr	r1, [r2, #4]
9001ce9a:	c503      	stmia	r5!, {r0, r1}
9001ce9c:	6818      	ldr	r0, [r3, #0]
9001ce9e:	ad08      	add	r5, sp, #32
9001cea0:	6859      	ldr	r1, [r3, #4]
9001cea2:	c503      	stmia	r5!, {r0, r1}
9001cea4:	a806      	add	r0, sp, #24
9001cea6:	f7f9 fce3 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ceaa:	4631      	mov	r1, r6
9001ceac:	a808      	add	r0, sp, #32
9001ceae:	f7f9 fd07 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ceb2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001ceb6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001ceba:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001cebe:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001cec2:	fb16 2103 	smlabb	r1, r6, r3, r2
9001cec6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001ceca:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001cece:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001ced2:	4f5f      	ldr	r7, [pc, #380]	@ (9001d050 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001ced4:	440a      	add	r2, r1
9001ced6:	6838      	ldr	r0, [r7, #0]
9001ced8:	46b9      	mov	r9, r7
9001ceda:	f8ad 2020 	strh.w	r2, [sp, #32]
9001cede:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001cee2:	4413      	add	r3, r2
9001cee4:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001cee8:	6803      	ldr	r3, [r0, #0]
9001ceea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001ceec:	4798      	blx	r3
9001ceee:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001cef2:	d11d      	bne.n	9001cf30 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001cef4:	b9fc      	cbnz	r4, 9001cf36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001cef6:	f010 0f01 	tst.w	r0, #1
9001cefa:	d01c      	beq.n	9001cf36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001cefc:	f8d9 0000 	ldr.w	r0, [r9]
9001cf00:	2700      	movs	r7, #0
9001cf02:	b2ad      	uxth	r5, r5
9001cf04:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001cf08:	6801      	ldr	r1, [r0, #0]
9001cf0a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001cf0e:	f8cd b00c 	str.w	fp, [sp, #12]
9001cf12:	9501      	str	r5, [sp, #4]
9001cf14:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001cf18:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001cf1c:	9402      	str	r4, [sp, #8]
9001cf1e:	fa1f f488 	uxth.w	r4, r8
9001cf22:	9400      	str	r4, [sp, #0]
9001cf24:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
9001cf26:	4631      	mov	r1, r6
9001cf28:	47a0      	blx	r4
9001cf2a:	b00b      	add	sp, #44	@ 0x2c
9001cf2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cf30:	f010 0f04 	tst.w	r0, #4
9001cf34:	e7e1      	b.n	9001cefa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001cf36:	f8d9 0000 	ldr.w	r0, [r9]
9001cf3a:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001cf3e:	6803      	ldr	r3, [r0, #0]
9001cf40:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001cf42:	4798      	blx	r3
9001cf44:	4b43      	ldr	r3, [pc, #268]	@ (9001d054 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001cf46:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001cf4a:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001cf4e:	881a      	ldrh	r2, [r3, #0]
9001cf50:	469a      	mov	sl, r3
9001cf52:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001cf56:	fb05 f502 	mul.w	r5, r5, r2
9001cf5a:	fb02 1404 	mla	r4, r2, r4, r1
9001cf5e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001cf62:	d059      	beq.n	9001d018 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001cf64:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001cf68:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001cf6c:	fa1f f28b 	uxth.w	r2, fp
9001cf70:	469e      	mov	lr, r3
9001cf72:	fa1f f989 	uxth.w	r9, r9
9001cf76:	42ac      	cmp	r4, r5
9001cf78:	d264      	bcs.n	9001d044 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001cf7a:	eb04 0a07 	add.w	sl, r4, r7
9001cf7e:	4554      	cmp	r4, sl
9001cf80:	d23d      	bcs.n	9001cffe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001cf82:	8821      	ldrh	r1, [r4, #0]
9001cf84:	f836 3b02 	ldrh.w	r3, [r6], #2
9001cf88:	1208      	asrs	r0, r1, #8
9001cf8a:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001cf8e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001cf92:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001cf96:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001cf9a:	00c9      	lsls	r1, r1, #3
9001cf9c:	fb10 f009 	smulbb	r0, r0, r9
9001cfa0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001cfa4:	b2c9      	uxtb	r1, r1
9001cfa6:	fb0c 0c02 	mla	ip, ip, r2, r0
9001cfaa:	10d8      	asrs	r0, r3, #3
9001cfac:	fb1b fb09 	smulbb	fp, fp, r9
9001cfb0:	00db      	lsls	r3, r3, #3
9001cfb2:	fa1f fc8c 	uxth.w	ip, ip
9001cfb6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001cfba:	fb11 f109 	smulbb	r1, r1, r9
9001cfbe:	b2db      	uxtb	r3, r3
9001cfc0:	fb00 b002 	mla	r0, r0, r2, fp
9001cfc4:	f10c 0b01 	add.w	fp, ip, #1
9001cfc8:	fb03 1302 	mla	r3, r3, r2, r1
9001cfcc:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001cfd0:	b29b      	uxth	r3, r3
9001cfd2:	b280      	uxth	r0, r0
9001cfd4:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001cfd8:	f103 0c01 	add.w	ip, r3, #1
9001cfdc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001cfe0:	1c43      	adds	r3, r0, #1
9001cfe2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001cfe6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001cfea:	0940      	lsrs	r0, r0, #5
9001cfec:	ea4c 0c0b 	orr.w	ip, ip, fp
9001cff0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001cff4:	ea4c 0c00 	orr.w	ip, ip, r0
9001cff8:	f824 cb02 	strh.w	ip, [r4], #2
9001cffc:	e7bf      	b.n	9001cf7e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001cffe:	f8be 3000 	ldrh.w	r3, [lr]
9001d002:	eba3 0308 	sub.w	r3, r3, r8
9001d006:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d00a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001d00e:	eba3 0308 	sub.w	r3, r3, r8
9001d012:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001d016:	e7ae      	b.n	9001cf76 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001d018:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001d01c:	f8d9 0000 	ldr.w	r0, [r9]
9001d020:	42ac      	cmp	r4, r5
9001d022:	6803      	ldr	r3, [r0, #0]
9001d024:	d20e      	bcs.n	9001d044 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001d026:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
9001d02a:	4632      	mov	r2, r6
9001d02c:	463b      	mov	r3, r7
9001d02e:	4621      	mov	r1, r4
9001d030:	47c0      	blx	r8
9001d032:	f8ba 3000 	ldrh.w	r3, [sl]
9001d036:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d03a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001d03e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001d042:	e7eb      	b.n	9001d01c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001d044:	4b02      	ldr	r3, [pc, #8]	@ (9001d050 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001d046:	6818      	ldr	r0, [r3, #0]
9001d048:	6803      	ldr	r3, [r0, #0]
9001d04a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d04c:	4798      	blx	r3
9001d04e:	e76c      	b.n	9001cf2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001d050:	240233d4 	.word	0x240233d4
9001d054:	240233ce 	.word	0x240233ce

9001d058 <_ZN8touchgfx8LCD16bppD0Ev>:
9001d058:	b510      	push	{r4, lr}
9001d05a:	4604      	mov	r4, r0
9001d05c:	218c      	movs	r1, #140	@ 0x8c
9001d05e:	f00c fa05 	bl	9002946c <_ZdlPvj>
9001d062:	4620      	mov	r0, r4
9001d064:	bd10      	pop	{r4, pc}

9001d066 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001d066:	b510      	push	{r4, lr}
9001d068:	4604      	mov	r4, r0
9001d06a:	2104      	movs	r1, #4
9001d06c:	f00c f9fe 	bl	9002946c <_ZdlPvj>
9001d070:	4620      	mov	r0, r4
9001d072:	bd10      	pop	{r4, pc}

9001d074 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001d074:	b510      	push	{r4, lr}
9001d076:	4604      	mov	r4, r0
9001d078:	2104      	movs	r1, #4
9001d07a:	f00c f9f7 	bl	9002946c <_ZdlPvj>
9001d07e:	4620      	mov	r0, r4
9001d080:	bd10      	pop	{r4, pc}

9001d082 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001d082:	b510      	push	{r4, lr}
9001d084:	4604      	mov	r4, r0
9001d086:	f640 0144 	movw	r1, #2116	@ 0x844
9001d08a:	f00c f9ef 	bl	9002946c <_ZdlPvj>
9001d08e:	4620      	mov	r0, r4
9001d090:	bd10      	pop	{r4, pc}

9001d092 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
9001d092:	b510      	push	{r4, lr}
9001d094:	4604      	mov	r4, r0
9001d096:	f44f 7182 	mov.w	r1, #260	@ 0x104
9001d09a:	f00c f9e7 	bl	9002946c <_ZdlPvj>
9001d09e:	4620      	mov	r0, r4
9001d0a0:	bd10      	pop	{r4, pc}

9001d0a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001d0a2:	b510      	push	{r4, lr}
9001d0a4:	4604      	mov	r4, r0
9001d0a6:	2104      	movs	r1, #4
9001d0a8:	f00c f9e0 	bl	9002946c <_ZdlPvj>
9001d0ac:	4620      	mov	r0, r4
9001d0ae:	bd10      	pop	{r4, pc}

9001d0b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001d0b0:	b510      	push	{r4, lr}
9001d0b2:	4604      	mov	r4, r0
9001d0b4:	2104      	movs	r1, #4
9001d0b6:	f00c f9d9 	bl	9002946c <_ZdlPvj>
9001d0ba:	4620      	mov	r0, r4
9001d0bc:	bd10      	pop	{r4, pc}

9001d0be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001d0be:	b510      	push	{r4, lr}
9001d0c0:	4604      	mov	r4, r0
9001d0c2:	2104      	movs	r1, #4
9001d0c4:	f00c f9d2 	bl	9002946c <_ZdlPvj>
9001d0c8:	4620      	mov	r0, r4
9001d0ca:	bd10      	pop	{r4, pc}

9001d0cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001d0cc:	b510      	push	{r4, lr}
9001d0ce:	4604      	mov	r4, r0
9001d0d0:	2104      	movs	r1, #4
9001d0d2:	f00c f9cb 	bl	9002946c <_ZdlPvj>
9001d0d6:	4620      	mov	r0, r4
9001d0d8:	bd10      	pop	{r4, pc}

9001d0da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001d0da:	b510      	push	{r4, lr}
9001d0dc:	4604      	mov	r4, r0
9001d0de:	2104      	movs	r1, #4
9001d0e0:	f00c f9c4 	bl	9002946c <_ZdlPvj>
9001d0e4:	4620      	mov	r0, r4
9001d0e6:	bd10      	pop	{r4, pc}

9001d0e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001d0e8:	b510      	push	{r4, lr}
9001d0ea:	4604      	mov	r4, r0
9001d0ec:	2104      	movs	r1, #4
9001d0ee:	f00c f9bd 	bl	9002946c <_ZdlPvj>
9001d0f2:	4620      	mov	r0, r4
9001d0f4:	bd10      	pop	{r4, pc}

9001d0f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001d0f6:	b510      	push	{r4, lr}
9001d0f8:	4604      	mov	r4, r0
9001d0fa:	2104      	movs	r1, #4
9001d0fc:	f00c f9b6 	bl	9002946c <_ZdlPvj>
9001d100:	4620      	mov	r0, r4
9001d102:	bd10      	pop	{r4, pc}

9001d104 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001d104:	b510      	push	{r4, lr}
9001d106:	4604      	mov	r4, r0
9001d108:	2104      	movs	r1, #4
9001d10a:	f00c f9af 	bl	9002946c <_ZdlPvj>
9001d10e:	4620      	mov	r0, r4
9001d110:	bd10      	pop	{r4, pc}

9001d112 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001d112:	b510      	push	{r4, lr}
9001d114:	4604      	mov	r4, r0
9001d116:	2104      	movs	r1, #4
9001d118:	f00c f9a8 	bl	9002946c <_ZdlPvj>
9001d11c:	4620      	mov	r0, r4
9001d11e:	bd10      	pop	{r4, pc}

9001d120 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001d120:	b510      	push	{r4, lr}
9001d122:	4604      	mov	r4, r0
9001d124:	2104      	movs	r1, #4
9001d126:	f00c f9a1 	bl	9002946c <_ZdlPvj>
9001d12a:	4620      	mov	r0, r4
9001d12c:	bd10      	pop	{r4, pc}

9001d12e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001d12e:	b510      	push	{r4, lr}
9001d130:	4604      	mov	r4, r0
9001d132:	2104      	movs	r1, #4
9001d134:	f00c f99a 	bl	9002946c <_ZdlPvj>
9001d138:	4620      	mov	r0, r4
9001d13a:	bd10      	pop	{r4, pc}

9001d13c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001d13c:	b510      	push	{r4, lr}
9001d13e:	4604      	mov	r4, r0
9001d140:	2104      	movs	r1, #4
9001d142:	f00c f993 	bl	9002946c <_ZdlPvj>
9001d146:	4620      	mov	r0, r4
9001d148:	bd10      	pop	{r4, pc}

9001d14a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001d14a:	b510      	push	{r4, lr}
9001d14c:	4604      	mov	r4, r0
9001d14e:	2104      	movs	r1, #4
9001d150:	f00c f98c 	bl	9002946c <_ZdlPvj>
9001d154:	4620      	mov	r0, r4
9001d156:	bd10      	pop	{r4, pc}

9001d158 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001d158:	b510      	push	{r4, lr}
9001d15a:	4604      	mov	r4, r0
9001d15c:	2104      	movs	r1, #4
9001d15e:	f00c f985 	bl	9002946c <_ZdlPvj>
9001d162:	4620      	mov	r0, r4
9001d164:	bd10      	pop	{r4, pc}

9001d166 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001d166:	b510      	push	{r4, lr}
9001d168:	4604      	mov	r4, r0
9001d16a:	2104      	movs	r1, #4
9001d16c:	f00c f97e 	bl	9002946c <_ZdlPvj>
9001d170:	4620      	mov	r0, r4
9001d172:	bd10      	pop	{r4, pc}

9001d174 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001d174:	b510      	push	{r4, lr}
9001d176:	4604      	mov	r4, r0
9001d178:	2104      	movs	r1, #4
9001d17a:	f00c f977 	bl	9002946c <_ZdlPvj>
9001d17e:	4620      	mov	r0, r4
9001d180:	bd10      	pop	{r4, pc}

9001d182 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001d182:	b510      	push	{r4, lr}
9001d184:	4604      	mov	r4, r0
9001d186:	2104      	movs	r1, #4
9001d188:	f00c f970 	bl	9002946c <_ZdlPvj>
9001d18c:	4620      	mov	r0, r4
9001d18e:	bd10      	pop	{r4, pc}

9001d190 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001d190:	b510      	push	{r4, lr}
9001d192:	4604      	mov	r4, r0
9001d194:	2104      	movs	r1, #4
9001d196:	f00c f969 	bl	9002946c <_ZdlPvj>
9001d19a:	4620      	mov	r0, r4
9001d19c:	bd10      	pop	{r4, pc}

9001d19e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001d19e:	b510      	push	{r4, lr}
9001d1a0:	4604      	mov	r4, r0
9001d1a2:	2104      	movs	r1, #4
9001d1a4:	f00c f962 	bl	9002946c <_ZdlPvj>
9001d1a8:	4620      	mov	r0, r4
9001d1aa:	bd10      	pop	{r4, pc}

9001d1ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001d1ac:	b510      	push	{r4, lr}
9001d1ae:	4604      	mov	r4, r0
9001d1b0:	2104      	movs	r1, #4
9001d1b2:	f00c f95b 	bl	9002946c <_ZdlPvj>
9001d1b6:	4620      	mov	r0, r4
9001d1b8:	bd10      	pop	{r4, pc}

9001d1ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001d1ba:	b510      	push	{r4, lr}
9001d1bc:	4604      	mov	r4, r0
9001d1be:	2104      	movs	r1, #4
9001d1c0:	f00c f954 	bl	9002946c <_ZdlPvj>
9001d1c4:	4620      	mov	r0, r4
9001d1c6:	bd10      	pop	{r4, pc}

9001d1c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001d1c8:	b510      	push	{r4, lr}
9001d1ca:	4604      	mov	r4, r0
9001d1cc:	2104      	movs	r1, #4
9001d1ce:	f00c f94d 	bl	9002946c <_ZdlPvj>
9001d1d2:	4620      	mov	r0, r4
9001d1d4:	bd10      	pop	{r4, pc}

9001d1d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001d1d6:	b510      	push	{r4, lr}
9001d1d8:	4604      	mov	r4, r0
9001d1da:	2104      	movs	r1, #4
9001d1dc:	f00c f946 	bl	9002946c <_ZdlPvj>
9001d1e0:	4620      	mov	r0, r4
9001d1e2:	bd10      	pop	{r4, pc}

9001d1e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001d1e4:	b510      	push	{r4, lr}
9001d1e6:	4604      	mov	r4, r0
9001d1e8:	2104      	movs	r1, #4
9001d1ea:	f00c f93f 	bl	9002946c <_ZdlPvj>
9001d1ee:	4620      	mov	r0, r4
9001d1f0:	bd10      	pop	{r4, pc}

9001d1f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001d1f2:	b510      	push	{r4, lr}
9001d1f4:	4604      	mov	r4, r0
9001d1f6:	2104      	movs	r1, #4
9001d1f8:	f00c f938 	bl	9002946c <_ZdlPvj>
9001d1fc:	4620      	mov	r0, r4
9001d1fe:	bd10      	pop	{r4, pc}

9001d200 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001d200:	b510      	push	{r4, lr}
9001d202:	4604      	mov	r4, r0
9001d204:	2104      	movs	r1, #4
9001d206:	f00c f931 	bl	9002946c <_ZdlPvj>
9001d20a:	4620      	mov	r0, r4
9001d20c:	bd10      	pop	{r4, pc}

9001d20e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001d20e:	b510      	push	{r4, lr}
9001d210:	4604      	mov	r4, r0
9001d212:	2104      	movs	r1, #4
9001d214:	f00c f92a 	bl	9002946c <_ZdlPvj>
9001d218:	4620      	mov	r0, r4
9001d21a:	bd10      	pop	{r4, pc}

9001d21c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001d21c:	b510      	push	{r4, lr}
9001d21e:	4604      	mov	r4, r0
9001d220:	2104      	movs	r1, #4
9001d222:	f00c f923 	bl	9002946c <_ZdlPvj>
9001d226:	4620      	mov	r0, r4
9001d228:	bd10      	pop	{r4, pc}
	...

9001d22c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
9001d22c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d230:	b08f      	sub	sp, #60	@ 0x3c
9001d232:	4616      	mov	r6, r2
9001d234:	4682      	mov	sl, r0
9001d236:	460d      	mov	r5, r1
9001d238:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
9001d23c:	9205      	str	r2, [sp, #20]
9001d23e:	2a00      	cmp	r2, #0
9001d240:	f000 82b7 	beq.w	9001d7b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
9001d244:	6830      	ldr	r0, [r6, #0]
9001d246:	ac0a      	add	r4, sp, #40	@ 0x28
9001d248:	6871      	ldr	r1, [r6, #4]
9001d24a:	c403      	stmia	r4!, {r0, r1}
9001d24c:	6818      	ldr	r0, [r3, #0]
9001d24e:	ac0c      	add	r4, sp, #48	@ 0x30
9001d250:	6859      	ldr	r1, [r3, #4]
9001d252:	c403      	stmia	r4!, {r0, r1}
9001d254:	a80a      	add	r0, sp, #40	@ 0x28
9001d256:	f7f9 fb0b 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d25a:	4631      	mov	r1, r6
9001d25c:	a80c      	add	r0, sp, #48	@ 0x30
9001d25e:	f7f9 fb2f 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d262:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001d266:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001d26a:	bfdb      	ittet	le
9001d26c:	b293      	uxthle	r3, r2
9001d26e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001d272:	2301      	movgt	r3, #1
9001d274:	fb91 f3f3 	sdivle	r3, r1, r3
9001d278:	9300      	str	r3, [sp, #0]
9001d27a:	f105 0308 	add.w	r3, r5, #8
9001d27e:	9900      	ldr	r1, [sp, #0]
9001d280:	9306      	str	r3, [sp, #24]
9001d282:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001d286:	440b      	add	r3, r1
9001d288:	3b01      	subs	r3, #1
9001d28a:	fb93 f3f1 	sdiv	r3, r3, r1
9001d28e:	3b01      	subs	r3, #1
9001d290:	9906      	ldr	r1, [sp, #24]
9001d292:	b29b      	uxth	r3, r3
9001d294:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001d298:	9900      	ldr	r1, [sp, #0]
9001d29a:	9307      	str	r3, [sp, #28]
9001d29c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001d2a0:	fb93 f0f1 	sdiv	r0, r3, r1
9001d2a4:	b284      	uxth	r4, r0
9001d2a6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001d2aa:	9402      	str	r4, [sp, #8]
9001d2ac:	9d02      	ldr	r5, [sp, #8]
9001d2ae:	9c00      	ldr	r4, [sp, #0]
9001d2b0:	fb05 3414 	mls	r4, r5, r4, r3
9001d2b4:	fb14 f402 	smulbb	r4, r4, r2
9001d2b8:	440c      	add	r4, r1
9001d2ba:	b2a4      	uxth	r4, r4
9001d2bc:	2d00      	cmp	r5, #0
9001d2be:	d06c      	beq.n	9001d39a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
9001d2c0:	1e6a      	subs	r2, r5, #1
9001d2c2:	9806      	ldr	r0, [sp, #24]
9001d2c4:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
9001d2c8:	9a07      	ldr	r2, [sp, #28]
9001d2ca:	ba36      	rev	r6, r6
9001d2cc:	4416      	add	r6, r2
9001d2ce:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001d2d2:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
9001d2d6:	4411      	add	r1, r2
9001d2d8:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001d2dc:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 9001d60c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
9001d2e0:	4413      	add	r3, r2
9001d2e2:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
9001d2e6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001d2ea:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001d2ee:	9301      	str	r3, [sp, #4]
9001d2f0:	4bc4      	ldr	r3, [pc, #784]	@ (9001d604 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
9001d2f2:	6818      	ldr	r0, [r3, #0]
9001d2f4:	6803      	ldr	r3, [r0, #0]
9001d2f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001d2f8:	4798      	blx	r3
9001d2fa:	4bc3      	ldr	r3, [pc, #780]	@ (9001d608 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
9001d2fc:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001d300:	881b      	ldrh	r3, [r3, #0]
9001d302:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
9001d306:	fb03 2808 	mla	r8, r3, r8, r2
9001d30a:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001d30e:	436b      	muls	r3, r5
9001d310:	2500      	movs	r5, #0
9001d312:	eb00 0848 	add.w	r8, r0, r8, lsl #1
9001d316:	4629      	mov	r1, r5
9001d318:	eb08 0343 	add.w	r3, r8, r3, lsl #1
9001d31c:	9309      	str	r3, [sp, #36]	@ 0x24
9001d31e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9001d322:	fb94 f3f3 	sdiv	r3, r4, r3
9001d326:	9304      	str	r3, [sp, #16]
9001d328:	f10a 0304 	add.w	r3, sl, #4
9001d32c:	4618      	mov	r0, r3
9001d32e:	9308      	str	r3, [sp, #32]
9001d330:	f00c feae 	bl	9002a090 <memset>
9001d334:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001d336:	4543      	cmp	r3, r8
9001d338:	f240 8236 	bls.w	9001d7a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
9001d33c:	2203      	movs	r2, #3
9001d33e:	2107      	movs	r1, #7
9001d340:	200b      	movs	r0, #11
9001d342:	2c00      	cmp	r4, #0
9001d344:	f000 8131 	beq.w	9001d5aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
9001d348:	7833      	ldrb	r3, [r6, #0]
9001d34a:	b2db      	uxtb	r3, r3
9001d34c:	2bfe      	cmp	r3, #254	@ 0xfe
9001d34e:	d126      	bne.n	9001d39e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
9001d350:	f896 e001 	ldrb.w	lr, [r6, #1]
9001d354:	3c01      	subs	r4, #1
9001d356:	f896 c002 	ldrb.w	ip, [r6, #2]
9001d35a:	1d37      	adds	r7, r6, #4
9001d35c:	fa5f fe8e 	uxtb.w	lr, lr
9001d360:	f896 b003 	ldrb.w	fp, [r6, #3]
9001d364:	fa5f fc8c 	uxtb.w	ip, ip
9001d368:	f36e 0507 	bfi	r5, lr, #0, #8
9001d36c:	fa5f fb8b 	uxtb.w	fp, fp
9001d370:	b2a4      	uxth	r4, r4
9001d372:	f36c 250f 	bfi	r5, ip, #8, #8
9001d376:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001d37a:	fb12 cc0b 	smlabb	ip, r2, fp, ip
9001d37e:	f36b 4517 	bfi	r5, fp, #16, #8
9001d382:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001d386:	0e2b      	lsrs	r3, r5, #24
9001d388:	fb10 c303 	smlabb	r3, r0, r3, ip
9001d38c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d390:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001d394:	605d      	str	r5, [r3, #4]
9001d396:	463e      	mov	r6, r7
9001d398:	e7d3      	b.n	9001d342 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
9001d39a:	9e07      	ldr	r6, [sp, #28]
9001d39c:	e797      	b.n	9001d2ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
9001d39e:	2bff      	cmp	r3, #255	@ 0xff
9001d3a0:	d127      	bne.n	9001d3f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
9001d3a2:	f896 c001 	ldrb.w	ip, [r6, #1]
9001d3a6:	3c01      	subs	r4, #1
9001d3a8:	78b3      	ldrb	r3, [r6, #2]
9001d3aa:	1d77      	adds	r7, r6, #5
9001d3ac:	fa5f fc8c 	uxtb.w	ip, ip
9001d3b0:	f896 e003 	ldrb.w	lr, [r6, #3]
9001d3b4:	b2db      	uxtb	r3, r3
9001d3b6:	f896 b004 	ldrb.w	fp, [r6, #4]
9001d3ba:	f36c 0507 	bfi	r5, ip, #0, #8
9001d3be:	fa5f fe8e 	uxtb.w	lr, lr
9001d3c2:	fa5f fb8b 	uxtb.w	fp, fp
9001d3c6:	f363 250f 	bfi	r5, r3, #8, #8
9001d3ca:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001d3ce:	b2a4      	uxth	r4, r4
9001d3d0:	fb12 330e 	smlabb	r3, r2, lr, r3
9001d3d4:	f36e 4517 	bfi	r5, lr, #16, #8
9001d3d8:	fb11 330c 	smlabb	r3, r1, ip, r3
9001d3dc:	f36b 651f 	bfi	r5, fp, #24, #8
9001d3e0:	fb10 3b0b 	smlabb	fp, r0, fp, r3
9001d3e4:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
9001d3e8:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
9001d3ec:	f8cb 5004 	str.w	r5, [fp, #4]
9001d3f0:	e7d1      	b.n	9001d396 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001d3f2:	ea5f 1ca3 	movs.w	ip, r3, asr #6
9001d3f6:	f106 0701 	add.w	r7, r6, #1
9001d3fa:	d107      	bne.n	9001d40c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
9001d3fc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d400:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001d404:	685d      	ldr	r5, [r3, #4]
9001d406:	3c01      	subs	r4, #1
9001d408:	b2a4      	uxth	r4, r4
9001d40a:	e7c4      	b.n	9001d396 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001d40c:	f1bc 0f01 	cmp.w	ip, #1
9001d410:	d12c      	bne.n	9001d46c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
9001d412:	f003 0e03 	and.w	lr, r3, #3
9001d416:	f003 0c0c 	and.w	ip, r3, #12
9001d41a:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001d41e:	f1ae 0e02 	sub.w	lr, lr, #2
9001d422:	f1ac 0c08 	sub.w	ip, ip, #8
9001d426:	3b02      	subs	r3, #2
9001d428:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
9001d42c:	fa5f fe8e 	uxtb.w	lr, lr
9001d430:	f36e 0507 	bfi	r5, lr, #0, #8
9001d434:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001d438:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
9001d43c:	f36c 250f 	bfi	r5, ip, #8, #8
9001d440:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001d444:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001d448:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001d44c:	b2db      	uxtb	r3, r3
9001d44e:	fb12 cc03 	smlabb	ip, r2, r3, ip
9001d452:	f363 4517 	bfi	r5, r3, #16, #8
9001d456:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001d45a:	0e2e      	lsrs	r6, r5, #24
9001d45c:	fb10 c606 	smlabb	r6, r0, r6, ip
9001d460:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
9001d464:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
9001d468:	6075      	str	r5, [r6, #4]
9001d46a:	e7cc      	b.n	9001d406 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
9001d46c:	f1bc 0f02 	cmp.w	ip, #2
9001d470:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d474:	d12a      	bne.n	9001d4cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
9001d476:	1cb7      	adds	r7, r6, #2
9001d478:	7876      	ldrb	r6, [r6, #1]
9001d47a:	3b20      	subs	r3, #32
9001d47c:	b2f6      	uxtb	r6, r6
9001d47e:	f006 0c0f 	and.w	ip, r6, #15
9001d482:	1136      	asrs	r6, r6, #4
9001d484:	f1ac 0c08 	sub.w	ip, ip, #8
9001d488:	3e08      	subs	r6, #8
9001d48a:	449c      	add	ip, r3
9001d48c:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
9001d490:	fa5f fc8c 	uxtb.w	ip, ip
9001d494:	f36c 0507 	bfi	r5, ip, #0, #8
9001d498:	f3c5 2e07 	ubfx	lr, r5, #8, #8
9001d49c:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
9001d4a0:	4433      	add	r3, r6
9001d4a2:	fa5f fe8e 	uxtb.w	lr, lr
9001d4a6:	f36e 250f 	bfi	r5, lr, #8, #8
9001d4aa:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
9001d4ae:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001d4b2:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001d4b6:	b2db      	uxtb	r3, r3
9001d4b8:	fb12 ee03 	smlabb	lr, r2, r3, lr
9001d4bc:	f363 4517 	bfi	r5, r3, #16, #8
9001d4c0:	fb11 ee0c 	smlabb	lr, r1, ip, lr
9001d4c4:	0e2e      	lsrs	r6, r5, #24
9001d4c6:	fb10 e606 	smlabb	r6, r0, r6, lr
9001d4ca:	e7c9      	b.n	9001d460 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
9001d4cc:	1c5e      	adds	r6, r3, #1
9001d4ce:	42a6      	cmp	r6, r4
9001d4d0:	dd4e      	ble.n	9001d570 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
9001d4d2:	1b36      	subs	r6, r6, r4
9001d4d4:	2e00      	cmp	r6, #0
9001d4d6:	dc4e      	bgt.n	9001d576 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
9001d4d8:	f8dd b004 	ldr.w	fp, [sp, #4]
9001d4dc:	2400      	movs	r4, #0
9001d4de:	f1bb 0f00 	cmp.w	fp, #0
9001d4e2:	f340 8122 	ble.w	9001d72a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
9001d4e6:	1c7b      	adds	r3, r7, #1
9001d4e8:	9303      	str	r3, [sp, #12]
9001d4ea:	783b      	ldrb	r3, [r7, #0]
9001d4ec:	b2db      	uxtb	r3, r3
9001d4ee:	2bfe      	cmp	r3, #254	@ 0xfe
9001d4f0:	d160      	bne.n	9001d5b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
9001d4f2:	7879      	ldrb	r1, [r7, #1]
9001d4f4:	1d3b      	adds	r3, r7, #4
9001d4f6:	78ba      	ldrb	r2, [r7, #2]
9001d4f8:	b2c9      	uxtb	r1, r1
9001d4fa:	78f8      	ldrb	r0, [r7, #3]
9001d4fc:	b2d2      	uxtb	r2, r2
9001d4fe:	9303      	str	r3, [sp, #12]
9001d500:	f361 0507 	bfi	r5, r1, #0, #8
9001d504:	b2c0      	uxtb	r0, r0
9001d506:	2303      	movs	r3, #3
9001d508:	f362 250f 	bfi	r5, r2, #8, #8
9001d50c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001d510:	fb13 2200 	smlabb	r2, r3, r0, r2
9001d514:	f360 4517 	bfi	r5, r0, #16, #8
9001d518:	2307      	movs	r3, #7
9001d51a:	0e2e      	lsrs	r6, r5, #24
9001d51c:	fb13 2101 	smlabb	r1, r3, r1, r2
9001d520:	230b      	movs	r3, #11
9001d522:	fb13 1306 	smlabb	r3, r3, r6, r1
9001d526:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d52a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001d52e:	605d      	str	r5, [r3, #4]
9001d530:	2601      	movs	r6, #1
9001d532:	4637      	mov	r7, r6
9001d534:	0e2b      	lsrs	r3, r5, #24
9001d536:	ebab 0b07 	sub.w	fp, fp, r7
9001d53a:	eba6 0607 	sub.w	r6, r6, r7
9001d53e:	f040 80d3 	bne.w	9001d6e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
9001d542:	b18c      	cbz	r4, 9001d568 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
9001d544:	4648      	mov	r0, r9
9001d546:	00a1      	lsls	r1, r4, #2
9001d548:	f7e5 f9e2 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001d54c:	9b05      	ldr	r3, [sp, #20]
9001d54e:	4622      	mov	r2, r4
9001d550:	4649      	mov	r1, r9
9001d552:	4640      	mov	r0, r8
9001d554:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001d558:	f7e5 fa48 	bl	900029ec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001d55c:	4b2b      	ldr	r3, [pc, #172]	@ (9001d60c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
9001d55e:	4a2c      	ldr	r2, [pc, #176]	@ (9001d610 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
9001d560:	4599      	cmp	r9, r3
9001d562:	bf08      	it	eq
9001d564:	4613      	moveq	r3, r2
9001d566:	4699      	mov	r9, r3
9001d568:	eb08 0847 	add.w	r8, r8, r7, lsl #1
9001d56c:	2400      	movs	r4, #0
9001d56e:	e0da      	b.n	9001d726 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
9001d570:	1ba6      	subs	r6, r4, r6
9001d572:	b2b4      	uxth	r4, r6
9001d574:	e70f      	b.n	9001d396 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001d576:	9b01      	ldr	r3, [sp, #4]
9001d578:	9a01      	ldr	r2, [sp, #4]
9001d57a:	42b3      	cmp	r3, r6
9001d57c:	bfa8      	it	ge
9001d57e:	4633      	movge	r3, r6
9001d580:	0e2c      	lsrs	r4, r5, #24
9001d582:	eba2 0b03 	sub.w	fp, r2, r3
9001d586:	eba6 0603 	sub.w	r6, r6, r3
9001d58a:	d00b      	beq.n	9001d5a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
9001d58c:	f1a9 0104 	sub.w	r1, r9, #4
9001d590:	461a      	mov	r2, r3
9001d592:	2a00      	cmp	r2, #0
9001d594:	dc02      	bgt.n	9001d59c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
9001d596:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001d59a:	e7a0      	b.n	9001d4de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001d59c:	f841 5f04 	str.w	r5, [r1, #4]!
9001d5a0:	3a01      	subs	r2, #1
9001d5a2:	e7f6      	b.n	9001d592 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
9001d5a4:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001d5a8:	e799      	b.n	9001d4de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001d5aa:	4637      	mov	r7, r6
9001d5ac:	f8dd b004 	ldr.w	fp, [sp, #4]
9001d5b0:	4626      	mov	r6, r4
9001d5b2:	e794      	b.n	9001d4de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001d5b4:	2bff      	cmp	r3, #255	@ 0xff
9001d5b6:	d11d      	bne.n	9001d5f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
9001d5b8:	7878      	ldrb	r0, [r7, #1]
9001d5ba:	1d7b      	adds	r3, r7, #5
9001d5bc:	78ba      	ldrb	r2, [r7, #2]
9001d5be:	b2c0      	uxtb	r0, r0
9001d5c0:	78fe      	ldrb	r6, [r7, #3]
9001d5c2:	b2d2      	uxtb	r2, r2
9001d5c4:	9303      	str	r3, [sp, #12]
9001d5c6:	f360 0507 	bfi	r5, r0, #0, #8
9001d5ca:	793b      	ldrb	r3, [r7, #4]
9001d5cc:	b2f6      	uxtb	r6, r6
9001d5ce:	b2d9      	uxtb	r1, r3
9001d5d0:	f362 250f 	bfi	r5, r2, #8, #8
9001d5d4:	2303      	movs	r3, #3
9001d5d6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001d5da:	f366 4517 	bfi	r5, r6, #16, #8
9001d5de:	fb13 2206 	smlabb	r2, r3, r6, r2
9001d5e2:	2307      	movs	r3, #7
9001d5e4:	f361 651f 	bfi	r5, r1, #24, #8
9001d5e8:	fb13 2000 	smlabb	r0, r3, r0, r2
9001d5ec:	230b      	movs	r3, #11
9001d5ee:	fb13 0301 	smlabb	r3, r3, r1, r0
9001d5f2:	e798      	b.n	9001d526 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
9001d5f4:	119e      	asrs	r6, r3, #6
9001d5f6:	d10d      	bne.n	9001d614 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
9001d5f8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d5fc:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001d600:	685d      	ldr	r5, [r3, #4]
9001d602:	e795      	b.n	9001d530 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001d604:	240233d4 	.word	0x240233d4
9001d608:	240233ce 	.word	0x240233ce
9001d60c:	240001a0 	.word	0x240001a0
9001d610:	240002a0 	.word	0x240002a0
9001d614:	2e01      	cmp	r6, #1
9001d616:	ea4f 6115 	mov.w	r1, r5, lsr #24
9001d61a:	d12b      	bne.n	9001d674 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
9001d61c:	f003 0003 	and.w	r0, r3, #3
9001d620:	f003 020c 	and.w	r2, r3, #12
9001d624:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001d628:	3802      	subs	r0, #2
9001d62a:	3a08      	subs	r2, #8
9001d62c:	1e9f      	subs	r7, r3, #2
9001d62e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
9001d632:	b2c0      	uxtb	r0, r0
9001d634:	f360 0507 	bfi	r5, r0, #0, #8
9001d638:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001d63c:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001d640:	f362 250f 	bfi	r5, r2, #8, #8
9001d644:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001d648:	f3c5 4307 	ubfx	r3, r5, #16, #8
9001d64c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
9001d650:	2703      	movs	r7, #3
9001d652:	b2db      	uxtb	r3, r3
9001d654:	fb17 2203 	smlabb	r2, r7, r3, r2
9001d658:	2707      	movs	r7, #7
9001d65a:	f363 4517 	bfi	r5, r3, #16, #8
9001d65e:	230b      	movs	r3, #11
9001d660:	fb17 2000 	smlabb	r0, r7, r0, r2
9001d664:	fb13 0101 	smlabb	r1, r3, r1, r0
9001d668:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001d66c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001d670:	604d      	str	r5, [r1, #4]
9001d672:	e75e      	b.n	9001d532 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
9001d674:	2e02      	cmp	r6, #2
9001d676:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d67a:	d12f      	bne.n	9001d6dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
9001d67c:	7878      	ldrb	r0, [r7, #1]
9001d67e:	1cba      	adds	r2, r7, #2
9001d680:	3b20      	subs	r3, #32
9001d682:	b2c0      	uxtb	r0, r0
9001d684:	9203      	str	r2, [sp, #12]
9001d686:	f000 020f 	and.w	r2, r0, #15
9001d68a:	1100      	asrs	r0, r0, #4
9001d68c:	3a08      	subs	r2, #8
9001d68e:	3808      	subs	r0, #8
9001d690:	441a      	add	r2, r3
9001d692:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
9001d696:	b2d2      	uxtb	r2, r2
9001d698:	f362 0507 	bfi	r5, r2, #0, #8
9001d69c:	f3c5 2607 	ubfx	r6, r5, #8, #8
9001d6a0:	eb06 0683 	add.w	r6, r6, r3, lsl #2
9001d6a4:	4403      	add	r3, r0
9001d6a6:	b2f6      	uxtb	r6, r6
9001d6a8:	f366 250f 	bfi	r5, r6, #8, #8
9001d6ac:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001d6b0:	f3c5 4007 	ubfx	r0, r5, #16, #8
9001d6b4:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001d6b8:	2003      	movs	r0, #3
9001d6ba:	b2db      	uxtb	r3, r3
9001d6bc:	fb10 6603 	smlabb	r6, r0, r3, r6
9001d6c0:	2007      	movs	r0, #7
9001d6c2:	f363 4517 	bfi	r5, r3, #16, #8
9001d6c6:	230b      	movs	r3, #11
9001d6c8:	fb10 6202 	smlabb	r2, r0, r2, r6
9001d6cc:	fb13 2101 	smlabb	r1, r3, r1, r2
9001d6d0:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001d6d4:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001d6d8:	604d      	str	r5, [r1, #4]
9001d6da:	e729      	b.n	9001d530 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001d6dc:	1c5e      	adds	r6, r3, #1
9001d6de:	465f      	mov	r7, fp
9001d6e0:	45b3      	cmp	fp, r6
9001d6e2:	bfa8      	it	ge
9001d6e4:	4637      	movge	r7, r6
9001d6e6:	e725      	b.n	9001d534 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
9001d6e8:	193b      	adds	r3, r7, r4
9001d6ea:	2b40      	cmp	r3, #64	@ 0x40
9001d6ec:	dd13      	ble.n	9001d716 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
9001d6ee:	4648      	mov	r0, r9
9001d6f0:	00a1      	lsls	r1, r4, #2
9001d6f2:	f7e5 f90d 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001d6f6:	4649      	mov	r1, r9
9001d6f8:	9b05      	ldr	r3, [sp, #20]
9001d6fa:	4622      	mov	r2, r4
9001d6fc:	4640      	mov	r0, r8
9001d6fe:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001d702:	f7e5 f973 	bl	900029ec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001d706:	4b2c      	ldr	r3, [pc, #176]	@ (9001d7b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
9001d708:	2400      	movs	r4, #0
9001d70a:	4599      	cmp	r9, r3
9001d70c:	bf0c      	ite	eq
9001d70e:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 9001d7c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
9001d712:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 9001d7b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
9001d716:	eb09 0284 	add.w	r2, r9, r4, lsl #2
9001d71a:	463b      	mov	r3, r7
9001d71c:	3b01      	subs	r3, #1
9001d71e:	f842 5b04 	str.w	r5, [r2], #4
9001d722:	d1fb      	bne.n	9001d71c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
9001d724:	443c      	add	r4, r7
9001d726:	9f03      	ldr	r7, [sp, #12]
9001d728:	e6d9      	b.n	9001d4de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001d72a:	b15c      	cbz	r4, 9001d744 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
9001d72c:	00a1      	lsls	r1, r4, #2
9001d72e:	4648      	mov	r0, r9
9001d730:	f7e5 f8ee 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001d734:	4640      	mov	r0, r8
9001d736:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001d73a:	9b05      	ldr	r3, [sp, #20]
9001d73c:	4622      	mov	r2, r4
9001d73e:	4649      	mov	r1, r9
9001d740:	f7e5 f954 	bl	900029ec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001d744:	4b1d      	ldr	r3, [pc, #116]	@ (9001d7bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
9001d746:	9a01      	ldr	r2, [sp, #4]
9001d748:	881b      	ldrh	r3, [r3, #0]
9001d74a:	1a9b      	subs	r3, r3, r2
9001d74c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001d750:	9b04      	ldr	r3, [sp, #16]
9001d752:	3301      	adds	r3, #1
9001d754:	9304      	str	r3, [sp, #16]
9001d756:	9a04      	ldr	r2, [sp, #16]
9001d758:	9b00      	ldr	r3, [sp, #0]
9001d75a:	4293      	cmp	r3, r2
9001d75c:	d11d      	bne.n	9001d79a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
9001d75e:	9b02      	ldr	r3, [sp, #8]
9001d760:	2500      	movs	r5, #0
9001d762:	9a02      	ldr	r2, [sp, #8]
9001d764:	f103 0b01 	add.w	fp, r3, #1
9001d768:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
9001d76c:	9b06      	ldr	r3, [sp, #24]
9001d76e:	4629      	mov	r1, r5
9001d770:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
9001d774:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001d778:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001d77c:	1ba4      	subs	r4, r4, r6
9001d77e:	9b07      	ldr	r3, [sp, #28]
9001d780:	ba3f      	rev	r7, r7
9001d782:	9808      	ldr	r0, [sp, #32]
9001d784:	b2a4      	uxth	r4, r4
9001d786:	441f      	add	r7, r3
9001d788:	f00c fc82 	bl	9002a090 <memset>
9001d78c:	f8cd b008 	str.w	fp, [sp, #8]
9001d790:	9504      	str	r5, [sp, #16]
9001d792:	f7e5 f8b3 	bl	900028fc <_ZN8touchgfx5paint8tearDownEv>
9001d796:	463e      	mov	r6, r7
9001d798:	e5cc      	b.n	9001d334 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
9001d79a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001d79e:	9b01      	ldr	r3, [sp, #4]
9001d7a0:	1ae4      	subs	r4, r4, r3
9001d7a2:	1ba4      	subs	r4, r4, r6
9001d7a4:	b2a4      	uxth	r4, r4
9001d7a6:	e7f4      	b.n	9001d792 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
9001d7a8:	4b05      	ldr	r3, [pc, #20]	@ (9001d7c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
9001d7aa:	6818      	ldr	r0, [r3, #0]
9001d7ac:	6803      	ldr	r3, [r0, #0]
9001d7ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d7b0:	4798      	blx	r3
9001d7b2:	b00f      	add	sp, #60	@ 0x3c
9001d7b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d7b8:	240001a0 	.word	0x240001a0
9001d7bc:	240233ce 	.word	0x240233ce
9001d7c0:	240233d4 	.word	0x240233d4
9001d7c4:	240002a0 	.word	0x240002a0

9001d7c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001d7c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d7cc:	b08f      	sub	sp, #60	@ 0x3c
9001d7ce:	461c      	mov	r4, r3
9001d7d0:	9205      	str	r2, [sp, #20]
9001d7d2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001d7d6:	9100      	str	r1, [sp, #0]
9001d7d8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001d7da:	9201      	str	r2, [sp, #4]
9001d7dc:	2a00      	cmp	r2, #0
9001d7de:	f000 8116 	beq.w	9001da0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001d7e2:	6820      	ldr	r0, [r4, #0]
9001d7e4:	aa0a      	add	r2, sp, #40	@ 0x28
9001d7e6:	6861      	ldr	r1, [r4, #4]
9001d7e8:	c203      	stmia	r2!, {r0, r1}
9001d7ea:	6818      	ldr	r0, [r3, #0]
9001d7ec:	aa0c      	add	r2, sp, #48	@ 0x30
9001d7ee:	6859      	ldr	r1, [r3, #4]
9001d7f0:	c203      	stmia	r2!, {r0, r1}
9001d7f2:	a80a      	add	r0, sp, #40	@ 0x28
9001d7f4:	f7f9 f83c 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d7f8:	4621      	mov	r1, r4
9001d7fa:	a80c      	add	r0, sp, #48	@ 0x30
9001d7fc:	f7f9 f860 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d800:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001d804:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001d808:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001d80c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001d810:	bfdb      	ittet	le
9001d812:	b2b3      	uxthle	r3, r6
9001d814:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001d818:	2301      	movgt	r3, #1
9001d81a:	fb92 f3f3 	sdivle	r3, r2, r3
9001d81e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001d822:	441d      	add	r5, r3
9001d824:	fb92 f1f3 	sdiv	r1, r2, r3
9001d828:	fa1f fc81 	uxth.w	ip, r1
9001d82c:	3d01      	subs	r5, #1
9001d82e:	fb0c 2413 	mls	r4, ip, r3, r2
9001d832:	4661      	mov	r1, ip
9001d834:	fb14 f406 	smulbb	r4, r4, r6
9001d838:	4404      	add	r4, r0
9001d83a:	fb95 f5f3 	sdiv	r5, r5, r3
9001d83e:	b2a4      	uxth	r4, r4
9001d840:	b131      	cbz	r1, 9001d850 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001d842:	9b05      	ldr	r3, [sp, #20]
9001d844:	9900      	ldr	r1, [sp, #0]
9001d846:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001d84a:	ba1b      	rev	r3, r3
9001d84c:	4419      	add	r1, r3
9001d84e:	9100      	str	r1, [sp, #0]
9001d850:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001d854:	b2ad      	uxth	r5, r5
9001d856:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001d85a:	4418      	add	r0, r3
9001d85c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001d860:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001d864:	00ad      	lsls	r5, r5, #2
9001d866:	441a      	add	r2, r3
9001d868:	4b6a      	ldr	r3, [pc, #424]	@ (9001da14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001d86a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001d86e:	6818      	ldr	r0, [r3, #0]
9001d870:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001d874:	6803      	ldr	r3, [r0, #0]
9001d876:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001d878:	4798      	blx	r3
9001d87a:	4967      	ldr	r1, [pc, #412]	@ (9001da18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001d87c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001d880:	2c00      	cmp	r4, #0
9001d882:	880b      	ldrh	r3, [r1, #0]
9001d884:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001d888:	bf0c      	ite	eq
9001d88a:	46c6      	moveq	lr, r8
9001d88c:	f04f 0e00 	movne.w	lr, #0
9001d890:	9109      	str	r1, [sp, #36]	@ 0x24
9001d892:	fb03 c202 	mla	r2, r3, r2, ip
9001d896:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001d89a:	4373      	muls	r3, r6
9001d89c:	fa1f fe8e 	uxth.w	lr, lr
9001d8a0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001d8a4:	9103      	str	r1, [sp, #12]
9001d8a6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d8aa:	9306      	str	r3, [sp, #24]
9001d8ac:	1d2b      	adds	r3, r5, #4
9001d8ae:	9307      	str	r3, [sp, #28]
9001d8b0:	9b01      	ldr	r3, [sp, #4]
9001d8b2:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001d8b6:	2300      	movs	r3, #0
9001d8b8:	b292      	uxth	r2, r2
9001d8ba:	9302      	str	r3, [sp, #8]
9001d8bc:	9204      	str	r2, [sp, #16]
9001d8be:	9a06      	ldr	r2, [sp, #24]
9001d8c0:	4282      	cmp	r2, r0
9001d8c2:	f240 809f 	bls.w	9001da04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001d8c6:	b963      	cbnz	r3, 9001d8e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001d8c8:	9b00      	ldr	r3, [sp, #0]
9001d8ca:	781a      	ldrb	r2, [r3, #0]
9001d8cc:	0993      	lsrs	r3, r2, #6
9001d8ce:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001d8d2:	9202      	str	r2, [sp, #8]
9001d8d4:	1e5a      	subs	r2, r3, #1
9001d8d6:	2a02      	cmp	r2, #2
9001d8d8:	d815      	bhi.n	9001d906 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001d8da:	9a00      	ldr	r2, [sp, #0]
9001d8dc:	b29b      	uxth	r3, r3
9001d8de:	3201      	adds	r2, #1
9001d8e0:	9200      	str	r2, [sp, #0]
9001d8e2:	b1b4      	cbz	r4, 9001d912 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001d8e4:	429c      	cmp	r4, r3
9001d8e6:	bf91      	iteee	ls
9001d8e8:	1b1c      	subls	r4, r3, r4
9001d8ea:	1ae4      	subhi	r4, r4, r3
9001d8ec:	4671      	movhi	r1, lr
9001d8ee:	f04f 0a00 	movhi.w	sl, #0
9001d8f2:	bf9b      	ittet	ls
9001d8f4:	fa1f fa84 	uxthls.w	sl, r4
9001d8f8:	2400      	movls	r4, #0
9001d8fa:	b2a4      	uxthhi	r4, r4
9001d8fc:	fa1f f188 	uxthls.w	r1, r8
9001d900:	4653      	mov	r3, sl
9001d902:	468e      	mov	lr, r1
9001d904:	e7db      	b.n	9001d8be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001d906:	9a00      	ldr	r2, [sp, #0]
9001d908:	9b00      	ldr	r3, [sp, #0]
9001d90a:	3202      	adds	r2, #2
9001d90c:	785b      	ldrb	r3, [r3, #1]
9001d90e:	9200      	str	r2, [sp, #0]
9001d910:	e7e7      	b.n	9001d8e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001d912:	2202      	movs	r2, #2
9001d914:	9907      	ldr	r1, [sp, #28]
9001d916:	4573      	cmp	r3, lr
9001d918:	4615      	mov	r5, r2
9001d91a:	9a02      	ldr	r2, [sp, #8]
9001d91c:	bf24      	itt	cs
9001d91e:	eba3 0a0e 	subcs.w	sl, r3, lr
9001d922:	46f1      	movcs	r9, lr
9001d924:	fb15 1202 	smlabb	r2, r5, r2, r1
9001d928:	9905      	ldr	r1, [sp, #20]
9001d92a:	bf34      	ite	cc
9001d92c:	4699      	movcc	r9, r3
9001d92e:	fa1f fa8a 	uxthcs.w	sl, sl
9001d932:	f831 c002 	ldrh.w	ip, [r1, r2]
9001d936:	bf38      	it	cc
9001d938:	ebae 0103 	subcc.w	r1, lr, r3
9001d93c:	9a01      	ldr	r2, [sp, #4]
9001d93e:	bf2e      	itee	cs
9001d940:	4621      	movcs	r1, r4
9001d942:	b289      	uxthcc	r1, r1
9001d944:	46a2      	movcc	sl, r4
9001d946:	2aff      	cmp	r2, #255	@ 0xff
9001d948:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001d94c:	d105      	bne.n	9001d95a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001d94e:	4481      	add	r9, r0
9001d950:	4581      	cmp	r9, r0
9001d952:	d045      	beq.n	9001d9e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001d954:	f820 cb02 	strh.w	ip, [r0], #2
9001d958:	e7fa      	b.n	9001d950 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001d95a:	ea4f 222c 	mov.w	r2, ip, asr #8
9001d95e:	9d03      	ldr	r5, [sp, #12]
9001d960:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001d964:	4481      	add	r9, r0
9001d966:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d96a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001d96e:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001d972:	fa5f fc8c 	uxtb.w	ip, ip
9001d976:	436a      	muls	r2, r5
9001d978:	fb0b fb05 	mul.w	fp, fp, r5
9001d97c:	fb0c fc05 	mul.w	ip, ip, r5
9001d980:	9208      	str	r2, [sp, #32]
9001d982:	4581      	cmp	r9, r0
9001d984:	d02c      	beq.n	9001d9e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001d986:	8802      	ldrh	r2, [r0, #0]
9001d988:	9d04      	ldr	r5, [sp, #16]
9001d98a:	1216      	asrs	r6, r2, #8
9001d98c:	9f04      	ldr	r7, [sp, #16]
9001d98e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d992:	fb16 f605 	smulbb	r6, r6, r5
9001d996:	9d08      	ldr	r5, [sp, #32]
9001d998:	442e      	add	r6, r5
9001d99a:	10d5      	asrs	r5, r2, #3
9001d99c:	00d2      	lsls	r2, r2, #3
9001d99e:	b2b6      	uxth	r6, r6
9001d9a0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001d9a4:	b2d2      	uxtb	r2, r2
9001d9a6:	fb15 f507 	smulbb	r5, r5, r7
9001d9aa:	fb12 f207 	smulbb	r2, r2, r7
9001d9ae:	1c77      	adds	r7, r6, #1
9001d9b0:	445d      	add	r5, fp
9001d9b2:	4462      	add	r2, ip
9001d9b4:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001d9b8:	b2ad      	uxth	r5, r5
9001d9ba:	b292      	uxth	r2, r2
9001d9bc:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001d9c0:	1c57      	adds	r7, r2, #1
9001d9c2:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001d9c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001d9ca:	4316      	orrs	r6, r2
9001d9cc:	1c6a      	adds	r2, r5, #1
9001d9ce:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001d9d2:	096d      	lsrs	r5, r5, #5
9001d9d4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001d9d8:	432e      	orrs	r6, r5
9001d9da:	f820 6b02 	strh.w	r6, [r0], #2
9001d9de:	e7d0      	b.n	9001d982 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001d9e0:	4573      	cmp	r3, lr
9001d9e2:	d38d      	bcc.n	9001d900 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001d9e4:	fa1f f188 	uxth.w	r1, r8
9001d9e8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001d9ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001d9ee:	1a64      	subs	r4, r4, r1
9001d9f0:	881b      	ldrh	r3, [r3, #0]
9001d9f2:	b2a4      	uxth	r4, r4
9001d9f4:	eba3 0308 	sub.w	r3, r3, r8
9001d9f8:	2c00      	cmp	r4, #0
9001d9fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d9fe:	bf18      	it	ne
9001da00:	2100      	movne	r1, #0
9001da02:	e77d      	b.n	9001d900 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001da04:	4b03      	ldr	r3, [pc, #12]	@ (9001da14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001da06:	6818      	ldr	r0, [r3, #0]
9001da08:	6803      	ldr	r3, [r0, #0]
9001da0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001da0c:	4798      	blx	r3
9001da0e:	b00f      	add	sp, #60	@ 0x3c
9001da10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001da14:	240233d4 	.word	0x240233d4
9001da18:	240233ce 	.word	0x240233ce

9001da1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001da1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001da20:	b09f      	sub	sp, #124	@ 0x7c
9001da22:	461d      	mov	r5, r3
9001da24:	4604      	mov	r4, r0
9001da26:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001da28:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001da2c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001da30:	9209      	str	r2, [sp, #36]	@ 0x24
9001da32:	2a00      	cmp	r2, #0
9001da34:	f000 81ed 	beq.w	9001de12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001da38:	6828      	ldr	r0, [r5, #0]
9001da3a:	aa1a      	add	r2, sp, #104	@ 0x68
9001da3c:	6869      	ldr	r1, [r5, #4]
9001da3e:	c203      	stmia	r2!, {r0, r1}
9001da40:	6818      	ldr	r0, [r3, #0]
9001da42:	aa1c      	add	r2, sp, #112	@ 0x70
9001da44:	6859      	ldr	r1, [r3, #4]
9001da46:	c203      	stmia	r2!, {r0, r1}
9001da48:	a81a      	add	r0, sp, #104	@ 0x68
9001da4a:	f7f8 ff11 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001da4e:	4629      	mov	r1, r5
9001da50:	a81c      	add	r0, sp, #112	@ 0x70
9001da52:	f7f8 ff35 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001da56:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001da5a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001da5e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001da62:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001da66:	bfdb      	ittet	le
9001da68:	b29a      	uxthle	r2, r3
9001da6a:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001da6e:	2201      	movgt	r2, #1
9001da70:	fb91 f2f2 	sdivle	r2, r1, r2
9001da74:	9202      	str	r2, [sp, #8]
9001da76:	9802      	ldr	r0, [sp, #8]
9001da78:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001da7c:	9902      	ldr	r1, [sp, #8]
9001da7e:	fb92 f0f0 	sdiv	r0, r2, r0
9001da82:	b280      	uxth	r0, r0
9001da84:	4488      	add	r8, r1
9001da86:	9010      	str	r0, [sp, #64]	@ 0x40
9001da88:	f108 38ff 	add.w	r8, r8, #4294967295
9001da8c:	9802      	ldr	r0, [sp, #8]
9001da8e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001da90:	fb05 2510 	mls	r5, r5, r0, r2
9001da94:	fb98 f8f1 	sdiv	r8, r8, r1
9001da98:	fb15 f503 	smulbb	r5, r5, r3
9001da9c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001daa0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001daa4:	f108 0801 	add.w	r8, r8, #1
9001daa8:	440d      	add	r5, r1
9001daaa:	4419      	add	r1, r3
9001daac:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001dab0:	fa1f f888 	uxth.w	r8, r8
9001dab4:	441a      	add	r2, r3
9001dab6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001daba:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001dabe:	b2ad      	uxth	r5, r5
9001dac0:	9304      	str	r3, [sp, #16]
9001dac2:	4b94      	ldr	r3, [pc, #592]	@ (9001dd14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001dac4:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001dac8:	6818      	ldr	r0, [r3, #0]
9001daca:	6803      	ldr	r3, [r0, #0]
9001dacc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001dace:	4798      	blx	r3
9001dad0:	4b91      	ldr	r3, [pc, #580]	@ (9001dd18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001dad2:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001dad6:	2d00      	cmp	r5, #0
9001dad8:	881a      	ldrh	r2, [r3, #0]
9001dada:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001dade:	fb02 f606 	mul.w	r6, r2, r6
9001dae2:	fb02 7101 	mla	r1, r2, r1, r7
9001dae6:	9318      	str	r3, [sp, #96]	@ 0x60
9001dae8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001daec:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001daf0:	f04f 0100 	mov.w	r1, #0
9001daf4:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001daf8:	930f      	str	r3, [sp, #60]	@ 0x3c
9001dafa:	4b88      	ldr	r3, [pc, #544]	@ (9001dd1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001dafc:	920a      	str	r2, [sp, #40]	@ 0x28
9001dafe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001db00:	eba3 0304 	sub.w	r3, r3, r4
9001db04:	910d      	str	r1, [sp, #52]	@ 0x34
9001db06:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001db0a:	9319      	str	r3, [sp, #100]	@ 0x64
9001db0c:	f108 0204 	add.w	r2, r8, #4
9001db10:	9211      	str	r2, [sp, #68]	@ 0x44
9001db12:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001db14:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001db18:	9215      	str	r2, [sp, #84]	@ 0x54
9001db1a:	9a04      	ldr	r2, [sp, #16]
9001db1c:	bf18      	it	ne
9001db1e:	2200      	movne	r2, #0
9001db20:	b292      	uxth	r2, r2
9001db22:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001db24:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001db26:	fa11 f383 	uxtah	r3, r1, r3
9001db2a:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001db2c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001db30:	3304      	adds	r3, #4
9001db32:	9306      	str	r3, [sp, #24]
9001db34:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001db36:	4283      	cmp	r3, r0
9001db38:	f240 8166 	bls.w	9001de08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001db3c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001db40:	f04f 0a01 	mov.w	sl, #1
9001db44:	9902      	ldr	r1, [sp, #8]
9001db46:	9e06      	ldr	r6, [sp, #24]
9001db48:	46d3      	mov	fp, sl
9001db4a:	4657      	mov	r7, sl
9001db4c:	7836      	ldrb	r6, [r6, #0]
9001db4e:	fbb5 f3f3 	udiv	r3, r5, r3
9001db52:	1acb      	subs	r3, r1, r3
9001db54:	9612      	str	r6, [sp, #72]	@ 0x48
9001db56:	3601      	adds	r6, #1
9001db58:	b29b      	uxth	r3, r3
9001db5a:	9605      	str	r6, [sp, #20]
9001db5c:	9316      	str	r3, [sp, #88]	@ 0x58
9001db5e:	9b06      	ldr	r3, [sp, #24]
9001db60:	7859      	ldrb	r1, [r3, #1]
9001db62:	789b      	ldrb	r3, [r3, #2]
9001db64:	021b      	lsls	r3, r3, #8
9001db66:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001db6a:	9906      	ldr	r1, [sp, #24]
9001db6c:	78c9      	ldrb	r1, [r1, #3]
9001db6e:	430b      	orrs	r3, r1
9001db70:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001db72:	4419      	add	r1, r3
9001db74:	1c4e      	adds	r6, r1, #1
9001db76:	7849      	ldrb	r1, [r1, #1]
9001db78:	9603      	str	r6, [sp, #12]
9001db7a:	0209      	lsls	r1, r1, #8
9001db7c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001db7e:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001db82:	5cf3      	ldrb	r3, [r6, r3]
9001db84:	4319      	orrs	r1, r3
9001db86:	b28b      	uxth	r3, r1
9001db88:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001db8c:	930c      	str	r3, [sp, #48]	@ 0x30
9001db8e:	2300      	movs	r3, #0
9001db90:	9307      	str	r3, [sp, #28]
9001db92:	469c      	mov	ip, r3
9001db94:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001db98:	930e      	str	r3, [sp, #56]	@ 0x38
9001db9a:	2d00      	cmp	r5, #0
9001db9c:	d07e      	beq.n	9001dc9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001db9e:	42af      	cmp	r7, r5
9001dba0:	d26e      	bcs.n	9001dc80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001dba2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001dba4:	1bed      	subs	r5, r5, r7
9001dba6:	9201      	str	r2, [sp, #4]
9001dba8:	4283      	cmp	r3, r0
9001dbaa:	b2ad      	uxth	r5, r5
9001dbac:	d802      	bhi.n	9001dbb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001dbae:	e073      	b.n	9001dc98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001dbb0:	2b00      	cmp	r3, #0
9001dbb2:	d15f      	bne.n	9001dc74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001dbb4:	9b03      	ldr	r3, [sp, #12]
9001dbb6:	f1cb 0207 	rsb	r2, fp, #7
9001dbba:	785b      	ldrb	r3, [r3, #1]
9001dbbc:	4093      	lsls	r3, r2
9001dbbe:	005b      	lsls	r3, r3, #1
9001dbc0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001dbc4:	9b03      	ldr	r3, [sp, #12]
9001dbc6:	781b      	ldrb	r3, [r3, #0]
9001dbc8:	fa43 f30b 	asr.w	r3, r3, fp
9001dbcc:	b2db      	uxtb	r3, r3
9001dbce:	4313      	orrs	r3, r2
9001dbd0:	f10b 0201 	add.w	r2, fp, #1
9001dbd4:	fa5f fb82 	uxtb.w	fp, r2
9001dbd8:	9a03      	ldr	r2, [sp, #12]
9001dbda:	b29f      	uxth	r7, r3
9001dbdc:	f1bb 0f08 	cmp.w	fp, #8
9001dbe0:	bf13      	iteet	ne
9001dbe2:	3201      	addne	r2, #1
9001dbe4:	3202      	addeq	r2, #2
9001dbe6:	f04f 0b00 	moveq.w	fp, #0
9001dbea:	9203      	strne	r2, [sp, #12]
9001dbec:	bf08      	it	eq
9001dbee:	9203      	streq	r2, [sp, #12]
9001dbf0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001dbf2:	42ba      	cmp	r2, r7
9001dbf4:	d309      	bcc.n	9001dc0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001dbf6:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001dbfa:	2301      	movs	r3, #1
9001dbfc:	9a05      	ldr	r2, [sp, #20]
9001dbfe:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
9001dc02:	d30e      	bcc.n	9001dc22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001dc04:	469a      	mov	sl, r3
9001dc06:	2600      	movs	r6, #0
9001dc08:	e035      	b.n	9001dc76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001dc0a:	9b05      	ldr	r3, [sp, #20]
9001dc0c:	429f      	cmp	r7, r3
9001dc0e:	d318      	bcc.n	9001dc42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001dc10:	eb04 030a 	add.w	r3, r4, sl
9001dc14:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
9001dc18:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9001dc1c:	f10a 0301 	add.w	r3, sl, #1
9001dc20:	b29b      	uxth	r3, r3
9001dc22:	9a05      	ldr	r2, [sp, #20]
9001dc24:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001dc28:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001dc2c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001dc2e:	7116      	strb	r6, [r2, #4]
9001dc30:	f10a 0601 	add.w	r6, sl, #1
9001dc34:	80d1      	strh	r1, [r2, #6]
9001dc36:	7156      	strb	r6, [r2, #5]
9001dc38:	9a05      	ldr	r2, [sp, #20]
9001dc3a:	3201      	adds	r2, #1
9001dc3c:	b292      	uxth	r2, r2
9001dc3e:	9205      	str	r2, [sp, #20]
9001dc40:	e7e0      	b.n	9001dc04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001dc42:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001dc46:	463a      	mov	r2, r7
9001dc48:	795b      	ldrb	r3, [r3, #5]
9001dc4a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001dc4e:	4426      	add	r6, r4
9001dc50:	9919      	ldr	r1, [sp, #100]	@ 0x64
9001dc52:	eb01 0c06 	add.w	ip, r1, r6
9001dc56:	f1bc 0f00 	cmp.w	ip, #0
9001dc5a:	dd07      	ble.n	9001dc6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001dc5c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001dc60:	f892 c004 	ldrb.w	ip, [r2, #4]
9001dc64:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001dc68:	88d2      	ldrh	r2, [r2, #6]
9001dc6a:	e7f1      	b.n	9001dc50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001dc6c:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001dc70:	b29b      	uxth	r3, r3
9001dc72:	e7c3      	b.n	9001dbfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001dc74:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001dc76:	970c      	str	r7, [sp, #48]	@ 0x30
9001dc78:	46b4      	mov	ip, r6
9001dc7a:	9a01      	ldr	r2, [sp, #4]
9001dc7c:	461f      	mov	r7, r3
9001dc7e:	e78c      	b.n	9001db9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001dc80:	1b7b      	subs	r3, r7, r5
9001dc82:	eb0c 0605 	add.w	r6, ip, r5
9001dc86:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001dc8a:	b29b      	uxth	r3, r3
9001dc8c:	b2b6      	uxth	r6, r6
9001dc8e:	9201      	str	r2, [sp, #4]
9001dc90:	2500      	movs	r5, #0
9001dc92:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001dc94:	4282      	cmp	r2, r0
9001dc96:	d88b      	bhi.n	9001dbb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001dc98:	9a01      	ldr	r2, [sp, #4]
9001dc9a:	e74b      	b.n	9001db34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001dc9c:	4297      	cmp	r7, r2
9001dc9e:	d332      	bcc.n	9001dd06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001dca0:	1abb      	subs	r3, r7, r2
9001dca2:	9208      	str	r2, [sp, #32]
9001dca4:	9501      	str	r5, [sp, #4]
9001dca6:	b29b      	uxth	r3, r3
9001dca8:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001dcaa:	29ff      	cmp	r1, #255	@ 0xff
9001dcac:	9908      	ldr	r1, [sp, #32]
9001dcae:	eb0c 0601 	add.w	r6, ip, r1
9001dcb2:	d135      	bne.n	9001dd20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001dcb4:	f1a0 0e02 	sub.w	lr, r0, #2
9001dcb8:	b2b6      	uxth	r6, r6
9001dcba:	45b4      	cmp	ip, r6
9001dcbc:	f040 808c 	bne.w	9001ddd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001dcc0:	9908      	ldr	r1, [sp, #32]
9001dcc2:	4297      	cmp	r7, r2
9001dcc4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001dcc8:	d3e2      	bcc.n	9001dc90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001dcca:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001dccc:	9904      	ldr	r1, [sp, #16]
9001dcce:	8812      	ldrh	r2, [r2, #0]
9001dcd0:	1a52      	subs	r2, r2, r1
9001dcd2:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001dcd4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001dcd8:	9a07      	ldr	r2, [sp, #28]
9001dcda:	3201      	adds	r2, #1
9001dcdc:	428a      	cmp	r2, r1
9001dcde:	9207      	str	r2, [sp, #28]
9001dce0:	f040 8087 	bne.w	9001ddf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001dce4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001dce8:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9001dcec:	9b04      	ldr	r3, [sp, #16]
9001dcee:	1bed      	subs	r5, r5, r7
9001dcf0:	b2ad      	uxth	r5, r5
9001dcf2:	2d00      	cmp	r5, #0
9001dcf4:	bf08      	it	eq
9001dcf6:	461a      	moveq	r2, r3
9001dcf8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001dcfa:	bf18      	it	ne
9001dcfc:	2200      	movne	r2, #0
9001dcfe:	3301      	adds	r3, #1
9001dd00:	b292      	uxth	r2, r2
9001dd02:	930d      	str	r3, [sp, #52]	@ 0x34
9001dd04:	e70d      	b.n	9001db22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001dd06:	1bd1      	subs	r1, r2, r7
9001dd08:	9708      	str	r7, [sp, #32]
9001dd0a:	b28b      	uxth	r3, r1
9001dd0c:	9301      	str	r3, [sp, #4]
9001dd0e:	462b      	mov	r3, r5
9001dd10:	e7ca      	b.n	9001dca8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001dd12:	bf00      	nop
9001dd14:	240233d4 	.word	0x240233d4
9001dd18:	240233ce 	.word	0x240233ce
9001dd1c:	fffff7fb 	.word	0xfffff7fb
9001dd20:	b2b6      	uxth	r6, r6
9001dd22:	900b      	str	r0, [sp, #44]	@ 0x2c
9001dd24:	45b4      	cmp	ip, r6
9001dd26:	d0cb      	beq.n	9001dcc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001dd28:	f10c 0101 	add.w	r1, ip, #1
9001dd2c:	44a4      	add	ip, r4
9001dd2e:	9117      	str	r1, [sp, #92]	@ 0x5c
9001dd30:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001dd34:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001dd36:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001dd3a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001dd3c:	ea4f 2825 	mov.w	r8, r5, asr #8
9001dd40:	f8b1 c000 	ldrh.w	ip, [r1]
9001dd44:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001dd46:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001dd4a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001dd4e:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001dd52:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001dd56:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001dd5a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001dd5e:	fb1e fe01 	smulbb	lr, lr, r1
9001dd62:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001dd64:	fa5f fc8c 	uxtb.w	ip, ip
9001dd68:	fb08 e801 	mla	r8, r8, r1, lr
9001dd6c:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001dd70:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001dd72:	00ed      	lsls	r5, r5, #3
9001dd74:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001dd78:	fa1f f888 	uxth.w	r8, r8
9001dd7c:	fb19 f901 	smulbb	r9, r9, r1
9001dd80:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001dd82:	b2ed      	uxtb	r5, r5
9001dd84:	fb0e 9e01 	mla	lr, lr, r1, r9
9001dd88:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001dd8a:	fb1c fc01 	smulbb	ip, ip, r1
9001dd8e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001dd90:	fa1f fe8e 	uxth.w	lr, lr
9001dd94:	fb05 c501 	mla	r5, r5, r1, ip
9001dd98:	f108 0c01 	add.w	ip, r8, #1
9001dd9c:	f10e 0901 	add.w	r9, lr, #1
9001dda0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001dda2:	b2ad      	uxth	r5, r5
9001dda4:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001dda8:	f105 0c01 	add.w	ip, r5, #1
9001ddac:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001ddb0:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001ddb4:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001ddb8:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001ddbc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001ddc0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001ddc4:	ea4c 0808 	orr.w	r8, ip, r8
9001ddc8:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
9001ddcc:	ea48 0809 	orr.w	r8, r8, r9
9001ddd0:	f821 8b02 	strh.w	r8, [r1], #2
9001ddd4:	910b      	str	r1, [sp, #44]	@ 0x2c
9001ddd6:	e7a5      	b.n	9001dd24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001ddd8:	f10c 0801 	add.w	r8, ip, #1
9001dddc:	44a4      	add	ip, r4
9001ddde:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001dde0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001dde4:	fa1f fc88 	uxth.w	ip, r8
9001dde8:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001ddec:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001ddf0:	e763      	b.n	9001dcba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001ddf2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ddf6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001ddfa:	1aad      	subs	r5, r5, r2
9001ddfc:	b2ad      	uxth	r5, r5
9001ddfe:	2d00      	cmp	r5, #0
9001de00:	bf18      	it	ne
9001de02:	2200      	movne	r2, #0
9001de04:	9201      	str	r2, [sp, #4]
9001de06:	e744      	b.n	9001dc92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001de08:	4b03      	ldr	r3, [pc, #12]	@ (9001de18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001de0a:	6818      	ldr	r0, [r3, #0]
9001de0c:	6803      	ldr	r3, [r0, #0]
9001de0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001de10:	4798      	blx	r3
9001de12:	b01f      	add	sp, #124	@ 0x7c
9001de14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001de18:	240233d4 	.word	0x240233d4

9001de1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
9001de1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001de20:	b093      	sub	sp, #76	@ 0x4c
9001de22:	4616      	mov	r6, r2
9001de24:	460d      	mov	r5, r1
9001de26:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
9001de2a:	9003      	str	r0, [sp, #12]
9001de2c:	9201      	str	r2, [sp, #4]
9001de2e:	2a00      	cmp	r2, #0
9001de30:	f000 8303 	beq.w	9001e43a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
9001de34:	6830      	ldr	r0, [r6, #0]
9001de36:	ac0e      	add	r4, sp, #56	@ 0x38
9001de38:	6871      	ldr	r1, [r6, #4]
9001de3a:	c403      	stmia	r4!, {r0, r1}
9001de3c:	6818      	ldr	r0, [r3, #0]
9001de3e:	ac10      	add	r4, sp, #64	@ 0x40
9001de40:	6859      	ldr	r1, [r3, #4]
9001de42:	c403      	stmia	r4!, {r0, r1}
9001de44:	a80e      	add	r0, sp, #56	@ 0x38
9001de46:	f7f8 fd13 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001de4a:	4631      	mov	r1, r6
9001de4c:	a810      	add	r0, sp, #64	@ 0x40
9001de4e:	f7f8 fd37 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001de52:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001de56:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001de5a:	bfdb      	ittet	le
9001de5c:	b293      	uxthle	r3, r2
9001de5e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001de62:	2301      	movgt	r3, #1
9001de64:	fb91 f3f3 	sdivle	r3, r1, r3
9001de68:	9304      	str	r3, [sp, #16]
9001de6a:	f105 0308 	add.w	r3, r5, #8
9001de6e:	9904      	ldr	r1, [sp, #16]
9001de70:	9308      	str	r3, [sp, #32]
9001de72:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
9001de76:	440b      	add	r3, r1
9001de78:	3b01      	subs	r3, #1
9001de7a:	fb93 f3f1 	sdiv	r3, r3, r1
9001de7e:	3b01      	subs	r3, #1
9001de80:	9908      	ldr	r1, [sp, #32]
9001de82:	b29b      	uxth	r3, r3
9001de84:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001de88:	9904      	ldr	r1, [sp, #16]
9001de8a:	9309      	str	r3, [sp, #36]	@ 0x24
9001de8c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001de90:	fb93 f0f1 	sdiv	r0, r3, r1
9001de94:	b284      	uxth	r4, r0
9001de96:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
9001de9a:	9405      	str	r4, [sp, #20]
9001de9c:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
9001dea0:	fb05 3914 	mls	r9, r5, r4, r3
9001dea4:	fb19 f902 	smulbb	r9, r9, r2
9001dea8:	4489      	add	r9, r1
9001deaa:	fa1f f989 	uxth.w	r9, r9
9001deae:	2d00      	cmp	r5, #0
9001deb0:	d05d      	beq.n	9001df6e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
9001deb2:	1e6a      	subs	r2, r5, #1
9001deb4:	9808      	ldr	r0, [sp, #32]
9001deb6:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
9001deba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001debc:	fa9a fa8a 	rev.w	sl, sl
9001dec0:	4492      	add	sl, r2
9001dec2:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
9001dec6:	f04f 0600 	mov.w	r6, #0
9001deca:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001dece:	4411      	add	r1, r2
9001ded0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001ded4:	4413      	add	r3, r2
9001ded6:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
9001deda:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001dede:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
9001dee2:	9302      	str	r3, [sp, #8]
9001dee4:	4bca      	ldr	r3, [pc, #808]	@ (9001e210 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
9001dee6:	6818      	ldr	r0, [r3, #0]
9001dee8:	6803      	ldr	r3, [r0, #0]
9001deea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001deec:	4798      	blx	r3
9001deee:	4bc9      	ldr	r3, [pc, #804]	@ (9001e214 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
9001def0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001def4:	2100      	movs	r1, #0
9001def6:	881b      	ldrh	r3, [r3, #0]
9001def8:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
9001defc:	fb03 2404 	mla	r4, r3, r4, r2
9001df00:	2280      	movs	r2, #128	@ 0x80
9001df02:	436b      	muls	r3, r5
9001df04:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001df08:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001df0c:	930d      	str	r3, [sp, #52]	@ 0x34
9001df0e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
9001df12:	fb99 f3f3 	sdiv	r3, r9, r3
9001df16:	9306      	str	r3, [sp, #24]
9001df18:	9b01      	ldr	r3, [sp, #4]
9001df1a:	43db      	mvns	r3, r3
9001df1c:	b2db      	uxtb	r3, r3
9001df1e:	930a      	str	r3, [sp, #40]	@ 0x28
9001df20:	9b03      	ldr	r3, [sp, #12]
9001df22:	3304      	adds	r3, #4
9001df24:	4618      	mov	r0, r3
9001df26:	930b      	str	r3, [sp, #44]	@ 0x2c
9001df28:	f00c f8b2 	bl	9002a090 <memset>
9001df2c:	4bba      	ldr	r3, [pc, #744]	@ (9001e218 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
9001df2e:	9300      	str	r3, [sp, #0]
9001df30:	2300      	movs	r3, #0
9001df32:	9307      	str	r3, [sp, #28]
9001df34:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001df36:	42a3      	cmp	r3, r4
9001df38:	f240 827a 	bls.w	9001e430 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
9001df3c:	f04f 0e07 	mov.w	lr, #7
9001df40:	f1b9 0f00 	cmp.w	r9, #0
9001df44:	f000 8159 	beq.w	9001e1fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
9001df48:	f89a 5000 	ldrb.w	r5, [sl]
9001df4c:	f10a 0701 	add.w	r7, sl, #1
9001df50:	b2ed      	uxtb	r5, r5
9001df52:	11aa      	asrs	r2, r5, #6
9001df54:	d10e      	bne.n	9001df74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
9001df56:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001df5a:	9b03      	ldr	r3, [sp, #12]
9001df5c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
9001df60:	88ae      	ldrh	r6, [r5, #4]
9001df62:	f109 39ff 	add.w	r9, r9, #4294967295
9001df66:	fa1f f989 	uxth.w	r9, r9
9001df6a:	46ba      	mov	sl, r7
9001df6c:	e7e8      	b.n	9001df40 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
9001df6e:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
9001df72:	e7a6      	b.n	9001dec2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
9001df74:	2a01      	cmp	r2, #1
9001df76:	d129      	bne.n	9001dfcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
9001df78:	f3c6 0304 	ubfx	r3, r6, #0, #5
9001df7c:	f005 0203 	and.w	r2, r5, #3
9001df80:	2103      	movs	r1, #3
9001df82:	3b02      	subs	r3, #2
9001df84:	4413      	add	r3, r2
9001df86:	f3c5 0281 	ubfx	r2, r5, #2, #2
9001df8a:	f3c5 1501 	ubfx	r5, r5, #4, #2
9001df8e:	f003 031f 	and.w	r3, r3, #31
9001df92:	3a02      	subs	r2, #2
9001df94:	3d02      	subs	r5, #2
9001df96:	f363 0604 	bfi	r6, r3, #0, #5
9001df9a:	eb02 1256 	add.w	r2, r2, r6, lsr #5
9001df9e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001dfa2:	f362 164a 	bfi	r6, r2, #5, #6
9001dfa6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001dfaa:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
9001dfae:	f005 051f 	and.w	r5, r5, #31
9001dfb2:	fb11 2205 	smlabb	r2, r1, r5, r2
9001dfb6:	f365 26cf 	bfi	r6, r5, #11, #5
9001dfba:	fb1e 2303 	smlabb	r3, lr, r3, r2
9001dfbe:	9a03      	ldr	r2, [sp, #12]
9001dfc0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001dfc4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001dfc8:	809e      	strh	r6, [r3, #4]
9001dfca:	e7ca      	b.n	9001df62 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
9001dfcc:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001dfd0:	2a02      	cmp	r2, #2
9001dfd2:	b2ab      	uxth	r3, r5
9001dfd4:	d136      	bne.n	9001e044 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
9001dfd6:	2101      	movs	r1, #1
9001dfd8:	fb12 1205 	smlabb	r2, r2, r5, r1
9001dfdc:	4492      	add	sl, r2
9001dfde:	463a      	mov	r2, r7
9001dfe0:	4552      	cmp	r2, sl
9001dfe2:	d01c      	beq.n	9001e01e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
9001dfe4:	4694      	mov	ip, r2
9001dfe6:	f04f 0b03 	mov.w	fp, #3
9001dfea:	f81c 1b02 	ldrb.w	r1, [ip], #2
9001dfee:	7852      	ldrb	r2, [r2, #1]
9001dff0:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
9001dff4:	f3c1 1045 	ubfx	r0, r1, #5, #6
9001dff8:	ea4f 28d1 	mov.w	r8, r1, lsr #11
9001dffc:	f001 021f 	and.w	r2, r1, #31
9001e000:	460e      	mov	r6, r1
9001e002:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001e006:	fb1b 0008 	smlabb	r0, fp, r8, r0
9001e00a:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001e00e:	9a03      	ldr	r2, [sp, #12]
9001e010:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001e014:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001e018:	4662      	mov	r2, ip
9001e01a:	8081      	strh	r1, [r0, #4]
9001e01c:	e7e0      	b.n	9001dfe0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
9001e01e:	4599      	cmp	r9, r3
9001e020:	d20b      	bcs.n	9001e03a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
9001e022:	eba5 0509 	sub.w	r5, r5, r9
9001e026:	eb07 0749 	add.w	r7, r7, r9, lsl #1
9001e02a:	2d00      	cmp	r5, #0
9001e02c:	f300 8208 	bgt.w	9001e440 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
9001e030:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001e034:	2301      	movs	r3, #1
9001e036:	9307      	str	r3, [sp, #28]
9001e038:	e00c      	b.n	9001e054 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e03a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9001e03e:	eba9 0903 	sub.w	r9, r9, r3
9001e042:	e790      	b.n	9001df66 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
9001e044:	4599      	cmp	r9, r3
9001e046:	d2fa      	bcs.n	9001e03e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
9001e048:	eba5 0509 	sub.w	r5, r5, r9
9001e04c:	2d00      	cmp	r5, #0
9001e04e:	dc1d      	bgt.n	9001e08c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
9001e050:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001e054:	f04f 0b00 	mov.w	fp, #0
9001e058:	f1b8 0f00 	cmp.w	r8, #0
9001e05c:	f340 81a0 	ble.w	9001e3a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
9001e060:	783b      	ldrb	r3, [r7, #0]
9001e062:	f107 0a01 	add.w	sl, r7, #1
9001e066:	b2db      	uxtb	r3, r3
9001e068:	119a      	asrs	r2, r3, #6
9001e06a:	f040 80d7 	bne.w	9001e21c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
9001e06e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e072:	9a03      	ldr	r2, [sp, #12]
9001e074:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001e078:	889e      	ldrh	r6, [r3, #4]
9001e07a:	9b01      	ldr	r3, [sp, #4]
9001e07c:	2bff      	cmp	r3, #255	@ 0xff
9001e07e:	f040 81e8 	bne.w	9001e452 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
9001e082:	8026      	strh	r6, [r4, #0]
9001e084:	f108 38ff 	add.w	r8, r8, #4294967295
9001e088:	3402      	adds	r4, #2
9001e08a:	e0be      	b.n	9001e20a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001e08c:	9b02      	ldr	r3, [sp, #8]
9001e08e:	9a02      	ldr	r2, [sp, #8]
9001e090:	42ab      	cmp	r3, r5
9001e092:	bfa8      	it	ge
9001e094:	462b      	movge	r3, r5
9001e096:	eba2 0803 	sub.w	r8, r2, r3
9001e09a:	9a07      	ldr	r2, [sp, #28]
9001e09c:	1aed      	subs	r5, r5, r3
9001e09e:	2a00      	cmp	r2, #0
9001e0a0:	d05a      	beq.n	9001e158 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
9001e0a2:	9a01      	ldr	r2, [sp, #4]
9001e0a4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001e0a8:	2aff      	cmp	r2, #255	@ 0xff
9001e0aa:	d049      	beq.n	9001e140 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001e0ac:	f8bd e004 	ldrh.w	lr, [sp, #4]
9001e0b0:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
9001e0b4:	42a3      	cmp	r3, r4
9001e0b6:	f240 80a5 	bls.w	9001e204 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001e0ba:	46bc      	mov	ip, r7
9001e0bc:	8820      	ldrh	r0, [r4, #0]
9001e0be:	f81c 2b02 	ldrb.w	r2, [ip], #2
9001e0c2:	ea4f 2a20 	mov.w	sl, r0, asr #8
9001e0c6:	7879      	ldrb	r1, [r7, #1]
9001e0c8:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9001e0cc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9001e0d0:	fb1a fa09 	smulbb	sl, sl, r9
9001e0d4:	b212      	sxth	r2, r2
9001e0d6:	b291      	uxth	r1, r2
9001e0d8:	00d2      	lsls	r2, r2, #3
9001e0da:	120f      	asrs	r7, r1, #8
9001e0dc:	10c9      	asrs	r1, r1, #3
9001e0de:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e0e2:	b2d2      	uxtb	r2, r2
9001e0e4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001e0e8:	fb07 a70e 	mla	r7, r7, lr, sl
9001e0ec:	ea4f 0ae0 	mov.w	sl, r0, asr #3
9001e0f0:	00c0      	lsls	r0, r0, #3
9001e0f2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001e0f6:	b2bf      	uxth	r7, r7
9001e0f8:	b2c0      	uxtb	r0, r0
9001e0fa:	fb1a fa09 	smulbb	sl, sl, r9
9001e0fe:	fb10 f009 	smulbb	r0, r0, r9
9001e102:	fb01 a10e 	mla	r1, r1, lr, sl
9001e106:	fb02 020e 	mla	r2, r2, lr, r0
9001e10a:	1c78      	adds	r0, r7, #1
9001e10c:	b289      	uxth	r1, r1
9001e10e:	b292      	uxth	r2, r2
9001e110:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001e114:	f101 0a01 	add.w	sl, r1, #1
9001e118:	1c50      	adds	r0, r2, #1
9001e11a:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
9001e11e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001e122:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001e126:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e12a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001e12e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e132:	4307      	orrs	r7, r0
9001e134:	ea47 070a 	orr.w	r7, r7, sl
9001e138:	f824 7b02 	strh.w	r7, [r4], #2
9001e13c:	4667      	mov	r7, ip
9001e13e:	e7b9      	b.n	9001e0b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
9001e140:	42a3      	cmp	r3, r4
9001e142:	d95f      	bls.n	9001e204 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001e144:	463a      	mov	r2, r7
9001e146:	f812 1b02 	ldrb.w	r1, [r2], #2
9001e14a:	7878      	ldrb	r0, [r7, #1]
9001e14c:	4617      	mov	r7, r2
9001e14e:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
9001e152:	f824 1b02 	strh.w	r1, [r4], #2
9001e156:	e7f3      	b.n	9001e140 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001e158:	9901      	ldr	r1, [sp, #4]
9001e15a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001e15e:	b2b2      	uxth	r2, r6
9001e160:	29ff      	cmp	r1, #255	@ 0xff
9001e162:	d044      	beq.n	9001e1ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001e164:	ea4f 2922 	mov.w	r9, r2, asr #8
9001e168:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001e16c:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001e170:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
9001e174:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
9001e178:	4608      	mov	r0, r1
9001e17a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001e17e:	fb09 f901 	mul.w	r9, r9, r1
9001e182:	fb0e fe01 	mul.w	lr, lr, r1
9001e186:	00d1      	lsls	r1, r2, #3
9001e188:	b2c9      	uxtb	r1, r1
9001e18a:	4341      	muls	r1, r0
9001e18c:	429c      	cmp	r4, r3
9001e18e:	f4bf af61 	bcs.w	9001e054 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e192:	8822      	ldrh	r2, [r4, #0]
9001e194:	1210      	asrs	r0, r2, #8
9001e196:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9001e19a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001e19e:	00d2      	lsls	r2, r2, #3
9001e1a0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001e1a4:	fb00 900a 	mla	r0, r0, sl, r9
9001e1a8:	b2d2      	uxtb	r2, r2
9001e1aa:	fb0c ec0a 	mla	ip, ip, sl, lr
9001e1ae:	b280      	uxth	r0, r0
9001e1b0:	fb02 120a 	mla	r2, r2, sl, r1
9001e1b4:	fa1f fc8c 	uxth.w	ip, ip
9001e1b8:	b292      	uxth	r2, r2
9001e1ba:	f100 0b01 	add.w	fp, r0, #1
9001e1be:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9001e1c2:	1c50      	adds	r0, r2, #1
9001e1c4:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001e1c8:	f10c 0201 	add.w	r2, ip, #1
9001e1cc:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001e1d0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001e1d4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001e1d8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001e1dc:	ea40 0b0b 	orr.w	fp, r0, fp
9001e1e0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9001e1e4:	ea4b 0b0c 	orr.w	fp, fp, ip
9001e1e8:	f824 bb02 	strh.w	fp, [r4], #2
9001e1ec:	e7ce      	b.n	9001e18c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
9001e1ee:	429c      	cmp	r4, r3
9001e1f0:	f4bf af30 	bcs.w	9001e054 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e1f4:	f824 2b02 	strh.w	r2, [r4], #2
9001e1f8:	e7f9      	b.n	9001e1ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001e1fa:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001e1fe:	4657      	mov	r7, sl
9001e200:	464d      	mov	r5, r9
9001e202:	e727      	b.n	9001e054 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001e204:	2300      	movs	r3, #0
9001e206:	e716      	b.n	9001e036 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
9001e208:	44bb      	add	fp, r7
9001e20a:	4657      	mov	r7, sl
9001e20c:	e724      	b.n	9001e058 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
9001e20e:	bf00      	nop
9001e210:	240233d4 	.word	0x240233d4
9001e214:	240233ce 	.word	0x240233ce
9001e218:	240001a0 	.word	0x240001a0
9001e21c:	2a01      	cmp	r2, #1
9001e21e:	d12a      	bne.n	9001e276 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
9001e220:	f3c6 0104 	ubfx	r1, r6, #0, #5
9001e224:	f003 0203 	and.w	r2, r3, #3
9001e228:	f3c3 0081 	ubfx	r0, r3, #2, #2
9001e22c:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001e230:	3902      	subs	r1, #2
9001e232:	3802      	subs	r0, #2
9001e234:	3b02      	subs	r3, #2
9001e236:	4411      	add	r1, r2
9001e238:	f001 011f 	and.w	r1, r1, #31
9001e23c:	f361 0604 	bfi	r6, r1, #0, #5
9001e240:	eb00 1056 	add.w	r0, r0, r6, lsr #5
9001e244:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001e248:	f360 164a 	bfi	r6, r0, #5, #6
9001e24c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001e250:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
9001e254:	f002 031f 	and.w	r3, r2, #31
9001e258:	2203      	movs	r2, #3
9001e25a:	f363 26cf 	bfi	r6, r3, #11, #5
9001e25e:	fb12 0303 	smlabb	r3, r2, r3, r0
9001e262:	2207      	movs	r2, #7
9001e264:	fb12 3301 	smlabb	r3, r2, r1, r3
9001e268:	9a03      	ldr	r2, [sp, #12]
9001e26a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001e26e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001e272:	809e      	strh	r6, [r3, #4]
9001e274:	e701      	b.n	9001e07a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
9001e276:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
9001e27a:	4647      	mov	r7, r8
9001e27c:	45a8      	cmp	r8, r5
9001e27e:	bfa8      	it	ge
9001e280:	462f      	movge	r7, r5
9001e282:	2a02      	cmp	r2, #2
9001e284:	d154      	bne.n	9001e330 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
9001e286:	9b01      	ldr	r3, [sp, #4]
9001e288:	2bff      	cmp	r3, #255	@ 0xff
9001e28a:	d01a      	beq.n	9001e2c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001e28c:	eb0b 0307 	add.w	r3, fp, r7
9001e290:	2b40      	cmp	r3, #64	@ 0x40
9001e292:	dd16      	ble.n	9001e2c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001e294:	ea4f 094b 	mov.w	r9, fp, lsl #1
9001e298:	9800      	ldr	r0, [sp, #0]
9001e29a:	4649      	mov	r1, r9
9001e29c:	f7e4 fb38 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001e2a0:	465a      	mov	r2, fp
9001e2a2:	9b01      	ldr	r3, [sp, #4]
9001e2a4:	4620      	mov	r0, r4
9001e2a6:	9900      	ldr	r1, [sp, #0]
9001e2a8:	444c      	add	r4, r9
9001e2aa:	f7e4 fb77 	bl	9000299c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001e2ae:	9b00      	ldr	r3, [sp, #0]
9001e2b0:	f04f 0b00 	mov.w	fp, #0
9001e2b4:	461a      	mov	r2, r3
9001e2b6:	4b6a      	ldr	r3, [pc, #424]	@ (9001e460 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001e2b8:	429a      	cmp	r2, r3
9001e2ba:	bf0c      	ite	eq
9001e2bc:	4b69      	ldreq	r3, [pc, #420]	@ (9001e464 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001e2be:	4b68      	ldrne	r3, [pc, #416]	@ (9001e460 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001e2c0:	9300      	str	r3, [sp, #0]
9001e2c2:	4652      	mov	r2, sl
9001e2c4:	2100      	movs	r1, #0
9001e2c6:	42a9      	cmp	r1, r5
9001e2c8:	da2c      	bge.n	9001e324 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
9001e2ca:	4694      	mov	ip, r2
9001e2cc:	f04f 0903 	mov.w	r9, #3
9001e2d0:	42b9      	cmp	r1, r7
9001e2d2:	f81c 3b02 	ldrb.w	r3, [ip], #2
9001e2d6:	7852      	ldrb	r2, [r2, #1]
9001e2d8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9001e2dc:	f3c3 1045 	ubfx	r0, r3, #5, #6
9001e2e0:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
9001e2e4:	f003 021f 	and.w	r2, r3, #31
9001e2e8:	461e      	mov	r6, r3
9001e2ea:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001e2ee:	fb19 000e 	smlabb	r0, r9, lr, r0
9001e2f2:	f04f 0e07 	mov.w	lr, #7
9001e2f6:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001e2fa:	9a03      	ldr	r2, [sp, #12]
9001e2fc:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001e300:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001e304:	8083      	strh	r3, [r0, #4]
9001e306:	da0a      	bge.n	9001e31e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
9001e308:	9a01      	ldr	r2, [sp, #4]
9001e30a:	2aff      	cmp	r2, #255	@ 0xff
9001e30c:	bf13      	iteet	ne
9001e30e:	9a00      	ldrne	r2, [sp, #0]
9001e310:	8023      	strheq	r3, [r4, #0]
9001e312:	3402      	addeq	r4, #2
9001e314:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
9001e318:	bf18      	it	ne
9001e31a:	f10b 0b01 	addne.w	fp, fp, #1
9001e31e:	3101      	adds	r1, #1
9001e320:	4662      	mov	r2, ip
9001e322:	e7d0      	b.n	9001e2c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
9001e324:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
9001e328:	eba8 0807 	sub.w	r8, r8, r7
9001e32c:	1bed      	subs	r5, r5, r7
9001e32e:	e76c      	b.n	9001e20a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001e330:	9b01      	ldr	r3, [sp, #4]
9001e332:	eba8 0807 	sub.w	r8, r8, r7
9001e336:	1bed      	subs	r5, r5, r7
9001e338:	fa1f f986 	uxth.w	r9, r6
9001e33c:	2bff      	cmp	r3, #255	@ 0xff
9001e33e:	d027      	beq.n	9001e390 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
9001e340:	eb0b 0307 	add.w	r3, fp, r7
9001e344:	2b40      	cmp	r3, #64	@ 0x40
9001e346:	dd18      	ble.n	9001e37a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
9001e348:	ea4f 034b 	mov.w	r3, fp, lsl #1
9001e34c:	9800      	ldr	r0, [sp, #0]
9001e34e:	4619      	mov	r1, r3
9001e350:	930c      	str	r3, [sp, #48]	@ 0x30
9001e352:	f7e4 fadd 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001e356:	465a      	mov	r2, fp
9001e358:	9b01      	ldr	r3, [sp, #4]
9001e35a:	4620      	mov	r0, r4
9001e35c:	9900      	ldr	r1, [sp, #0]
9001e35e:	f04f 0b00 	mov.w	fp, #0
9001e362:	f7e4 fb1b 	bl	9000299c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001e366:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001e368:	441c      	add	r4, r3
9001e36a:	9b00      	ldr	r3, [sp, #0]
9001e36c:	461a      	mov	r2, r3
9001e36e:	4b3c      	ldr	r3, [pc, #240]	@ (9001e460 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001e370:	429a      	cmp	r2, r3
9001e372:	bf0c      	ite	eq
9001e374:	4b3b      	ldreq	r3, [pc, #236]	@ (9001e464 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001e376:	4b3a      	ldrne	r3, [pc, #232]	@ (9001e460 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001e378:	9300      	str	r3, [sp, #0]
9001e37a:	9b00      	ldr	r3, [sp, #0]
9001e37c:	eb03 024b 	add.w	r2, r3, fp, lsl #1
9001e380:	463b      	mov	r3, r7
9001e382:	2b00      	cmp	r3, #0
9001e384:	f43f af40 	beq.w	9001e208 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
9001e388:	f822 9b02 	strh.w	r9, [r2], #2
9001e38c:	3b01      	subs	r3, #1
9001e38e:	e7f8      	b.n	9001e382 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
9001e390:	eb04 0747 	add.w	r7, r4, r7, lsl #1
9001e394:	42a7      	cmp	r7, r4
9001e396:	f67f af38 	bls.w	9001e20a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001e39a:	f824 9b02 	strh.w	r9, [r4], #2
9001e39e:	e7f9      	b.n	9001e394 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
9001e3a0:	f1bb 0f00 	cmp.w	fp, #0
9001e3a4:	d00c      	beq.n	9001e3c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
9001e3a6:	ea4f 084b 	mov.w	r8, fp, lsl #1
9001e3aa:	9800      	ldr	r0, [sp, #0]
9001e3ac:	4641      	mov	r1, r8
9001e3ae:	f7e4 faaf 	bl	90002910 <_ZN8touchgfx5paint9flushLineEPmi>
9001e3b2:	4620      	mov	r0, r4
9001e3b4:	4444      	add	r4, r8
9001e3b6:	9b01      	ldr	r3, [sp, #4]
9001e3b8:	465a      	mov	r2, fp
9001e3ba:	9900      	ldr	r1, [sp, #0]
9001e3bc:	f7e4 faee 	bl	9000299c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001e3c0:	4b29      	ldr	r3, [pc, #164]	@ (9001e468 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
9001e3c2:	9a02      	ldr	r2, [sp, #8]
9001e3c4:	881b      	ldrh	r3, [r3, #0]
9001e3c6:	1a9b      	subs	r3, r3, r2
9001e3c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e3cc:	9b06      	ldr	r3, [sp, #24]
9001e3ce:	3301      	adds	r3, #1
9001e3d0:	9306      	str	r3, [sp, #24]
9001e3d2:	9a06      	ldr	r2, [sp, #24]
9001e3d4:	9b04      	ldr	r3, [sp, #16]
9001e3d6:	4293      	cmp	r3, r2
9001e3d8:	d120      	bne.n	9001e41c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
9001e3da:	9b05      	ldr	r3, [sp, #20]
9001e3dc:	2100      	movs	r1, #0
9001e3de:	9a05      	ldr	r2, [sp, #20]
9001e3e0:	f04f 0600 	mov.w	r6, #0
9001e3e4:	f103 0801 	add.w	r8, r3, #1
9001e3e8:	9b08      	ldr	r3, [sp, #32]
9001e3ea:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
9001e3ee:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001e3f2:	2280      	movs	r2, #128	@ 0x80
9001e3f4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001e3f8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001e3fa:	ba3f      	rev	r7, r7
9001e3fc:	eba9 0905 	sub.w	r9, r9, r5
9001e400:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001e402:	441f      	add	r7, r3
9001e404:	f00b fe44 	bl	9002a090 <memset>
9001e408:	fa1f f989 	uxth.w	r9, r9
9001e40c:	2300      	movs	r3, #0
9001e40e:	f8cd 8014 	str.w	r8, [sp, #20]
9001e412:	9306      	str	r3, [sp, #24]
9001e414:	f7e4 fa72 	bl	900028fc <_ZN8touchgfx5paint8tearDownEv>
9001e418:	46ba      	mov	sl, r7
9001e41a:	e58b      	b.n	9001df34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
9001e41c:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
9001e420:	9b02      	ldr	r3, [sp, #8]
9001e422:	eba9 0903 	sub.w	r9, r9, r3
9001e426:	eba9 0505 	sub.w	r5, r9, r5
9001e42a:	fa1f f985 	uxth.w	r9, r5
9001e42e:	e7f1      	b.n	9001e414 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
9001e430:	4b0e      	ldr	r3, [pc, #56]	@ (9001e46c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
9001e432:	6818      	ldr	r0, [r3, #0]
9001e434:	6803      	ldr	r3, [r0, #0]
9001e436:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e438:	4798      	blx	r3
9001e43a:	b013      	add	sp, #76	@ 0x4c
9001e43c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e440:	9b02      	ldr	r3, [sp, #8]
9001e442:	9a02      	ldr	r2, [sp, #8]
9001e444:	42ab      	cmp	r3, r5
9001e446:	bfa8      	it	ge
9001e448:	462b      	movge	r3, r5
9001e44a:	eba2 0803 	sub.w	r8, r2, r3
9001e44e:	1aed      	subs	r5, r5, r3
9001e450:	e627      	b.n	9001e0a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
9001e452:	f108 38ff 	add.w	r8, r8, #4294967295
9001e456:	fa1f f986 	uxth.w	r9, r6
9001e45a:	2500      	movs	r5, #0
9001e45c:	2701      	movs	r7, #1
9001e45e:	e76f      	b.n	9001e340 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
9001e460:	240001a0 	.word	0x240001a0
9001e464:	240002a0 	.word	0x240002a0
9001e468:	240233ce 	.word	0x240233ce
9001e46c:	240233d4 	.word	0x240233d4

9001e470 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001e470:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e474:	b08f      	sub	sp, #60	@ 0x3c
9001e476:	461c      	mov	r4, r3
9001e478:	460f      	mov	r7, r1
9001e47a:	9203      	str	r2, [sp, #12]
9001e47c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001e480:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001e482:	9202      	str	r2, [sp, #8]
9001e484:	2a00      	cmp	r2, #0
9001e486:	f000 8128 	beq.w	9001e6da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001e48a:	6820      	ldr	r0, [r4, #0]
9001e48c:	aa0a      	add	r2, sp, #40	@ 0x28
9001e48e:	6861      	ldr	r1, [r4, #4]
9001e490:	c203      	stmia	r2!, {r0, r1}
9001e492:	6818      	ldr	r0, [r3, #0]
9001e494:	aa0c      	add	r2, sp, #48	@ 0x30
9001e496:	6859      	ldr	r1, [r3, #4]
9001e498:	c203      	stmia	r2!, {r0, r1}
9001e49a:	a80a      	add	r0, sp, #40	@ 0x28
9001e49c:	f7f8 f9e8 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e4a0:	4621      	mov	r1, r4
9001e4a2:	a80c      	add	r0, sp, #48	@ 0x30
9001e4a4:	f7f8 fa0c 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e4a8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001e4ac:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001e4b0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001e4b4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001e4b8:	bfdb      	ittet	le
9001e4ba:	b2b3      	uxthle	r3, r6
9001e4bc:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001e4c0:	2301      	movgt	r3, #1
9001e4c2:	fb92 f3f3 	sdivle	r3, r2, r3
9001e4c6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001e4ca:	441d      	add	r5, r3
9001e4cc:	fb92 f1f3 	sdiv	r1, r2, r3
9001e4d0:	fa1f fc81 	uxth.w	ip, r1
9001e4d4:	3d01      	subs	r5, #1
9001e4d6:	fb0c 2413 	mls	r4, ip, r3, r2
9001e4da:	4661      	mov	r1, ip
9001e4dc:	fb14 f406 	smulbb	r4, r4, r6
9001e4e0:	4404      	add	r4, r0
9001e4e2:	fb95 f5f3 	sdiv	r5, r5, r3
9001e4e6:	b2a4      	uxth	r4, r4
9001e4e8:	b121      	cbz	r1, 9001e4f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001e4ea:	9b03      	ldr	r3, [sp, #12]
9001e4ec:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001e4f0:	ba1b      	rev	r3, r3
9001e4f2:	441f      	add	r7, r3
9001e4f4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001e4f8:	b2ad      	uxth	r5, r5
9001e4fa:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9001e4fe:	4418      	add	r0, r3
9001e500:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001e504:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001e508:	00ad      	lsls	r5, r5, #2
9001e50a:	441a      	add	r2, r3
9001e50c:	4b74      	ldr	r3, [pc, #464]	@ (9001e6e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001e50e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001e512:	6818      	ldr	r0, [r3, #0]
9001e514:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001e518:	6803      	ldr	r3, [r0, #0]
9001e51a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e51c:	4798      	blx	r3
9001e51e:	4a71      	ldr	r2, [pc, #452]	@ (9001e6e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001e520:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9001e524:	2c00      	cmp	r4, #0
9001e526:	8813      	ldrh	r3, [r2, #0]
9001e528:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001e52c:	bf0c      	ite	eq
9001e52e:	46c8      	moveq	r8, r9
9001e530:	f04f 0800 	movne.w	r8, #0
9001e534:	9209      	str	r2, [sp, #36]	@ 0x24
9001e536:	fb03 c101 	mla	r1, r3, r1, ip
9001e53a:	4373      	muls	r3, r6
9001e53c:	fa1f f888 	uxth.w	r8, r8
9001e540:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e544:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e548:	9304      	str	r3, [sp, #16]
9001e54a:	1d2b      	adds	r3, r5, #4
9001e54c:	9305      	str	r3, [sp, #20]
9001e54e:	2300      	movs	r3, #0
9001e550:	9301      	str	r3, [sp, #4]
9001e552:	9a04      	ldr	r2, [sp, #16]
9001e554:	4282      	cmp	r2, r0
9001e556:	f240 80bb 	bls.w	9001e6d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001e55a:	b95b      	cbnz	r3, 9001e574 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001e55c:	783a      	ldrb	r2, [r7, #0]
9001e55e:	0993      	lsrs	r3, r2, #6
9001e560:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001e564:	9201      	str	r2, [sp, #4]
9001e566:	1e5a      	subs	r2, r3, #1
9001e568:	2a02      	cmp	r2, #2
9001e56a:	bf8d      	iteet	hi
9001e56c:	787b      	ldrbhi	r3, [r7, #1]
9001e56e:	3701      	addls	r7, #1
9001e570:	b29b      	uxthls	r3, r3
9001e572:	3702      	addhi	r7, #2
9001e574:	b184      	cbz	r4, 9001e598 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001e576:	429c      	cmp	r4, r3
9001e578:	bf91      	iteee	ls
9001e57a:	1b1c      	subls	r4, r3, r4
9001e57c:	1ae4      	subhi	r4, r4, r3
9001e57e:	46c4      	movhi	ip, r8
9001e580:	f04f 0a00 	movhi.w	sl, #0
9001e584:	bf9b      	ittet	ls
9001e586:	fa1f fa84 	uxthls.w	sl, r4
9001e58a:	2400      	movls	r4, #0
9001e58c:	b2a4      	uxthhi	r4, r4
9001e58e:	fa1f fc89 	uxthls.w	ip, r9
9001e592:	4653      	mov	r3, sl
9001e594:	46e0      	mov	r8, ip
9001e596:	e7dc      	b.n	9001e552 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001e598:	2204      	movs	r2, #4
9001e59a:	9905      	ldr	r1, [sp, #20]
9001e59c:	4543      	cmp	r3, r8
9001e59e:	4615      	mov	r5, r2
9001e5a0:	9a01      	ldr	r2, [sp, #4]
9001e5a2:	bf24      	itt	cs
9001e5a4:	eba3 0a08 	subcs.w	sl, r3, r8
9001e5a8:	46c6      	movcs	lr, r8
9001e5aa:	fb15 1202 	smlabb	r2, r5, r2, r1
9001e5ae:	9903      	ldr	r1, [sp, #12]
9001e5b0:	bf3c      	itt	cc
9001e5b2:	eba8 0c03 	subcc.w	ip, r8, r3
9001e5b6:	469e      	movcc	lr, r3
9001e5b8:	588a      	ldr	r2, [r1, r2]
9001e5ba:	bf26      	itte	cs
9001e5bc:	fa1f fa8a 	uxthcs.w	sl, sl
9001e5c0:	46a4      	movcs	ip, r4
9001e5c2:	fa1f fc8c 	uxthcc.w	ip, ip
9001e5c6:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001e5ca:	bf38      	it	cc
9001e5cc:	46a2      	movcc	sl, r4
9001e5ce:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001e5d2:	2900      	cmp	r1, #0
9001e5d4:	d066      	beq.n	9001e6a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001e5d6:	29ff      	cmp	r1, #255	@ 0xff
9001e5d8:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001e5dc:	d114      	bne.n	9001e608 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001e5de:	9d02      	ldr	r5, [sp, #8]
9001e5e0:	2dff      	cmp	r5, #255	@ 0xff
9001e5e2:	d111      	bne.n	9001e608 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001e5e4:	0951      	lsrs	r1, r2, #5
9001e5e6:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001e5ea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001e5ee:	4486      	add	lr, r0
9001e5f0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001e5f4:	f026 0607 	bic.w	r6, r6, #7
9001e5f8:	430e      	orrs	r6, r1
9001e5fa:	4316      	orrs	r6, r2
9001e5fc:	b2b6      	uxth	r6, r6
9001e5fe:	4586      	cmp	lr, r0
9001e600:	d051      	beq.n	9001e6a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001e602:	f820 6b02 	strh.w	r6, [r0], #2
9001e606:	e7fa      	b.n	9001e5fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001e608:	9d02      	ldr	r5, [sp, #8]
9001e60a:	b2f6      	uxtb	r6, r6
9001e60c:	4486      	add	lr, r0
9001e60e:	4369      	muls	r1, r5
9001e610:	1c4d      	adds	r5, r1, #1
9001e612:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001e616:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001e61a:	b2d2      	uxtb	r2, r2
9001e61c:	122d      	asrs	r5, r5, #8
9001e61e:	ea6f 0b05 	mvn.w	fp, r5
9001e622:	b2ad      	uxth	r5, r5
9001e624:	fb11 f105 	smulbb	r1, r1, r5
9001e628:	fa5f fb8b 	uxtb.w	fp, fp
9001e62c:	fb16 f605 	smulbb	r6, r6, r5
9001e630:	fb12 f205 	smulbb	r2, r2, r5
9001e634:	b289      	uxth	r1, r1
9001e636:	b2b6      	uxth	r6, r6
9001e638:	b292      	uxth	r2, r2
9001e63a:	9106      	str	r1, [sp, #24]
9001e63c:	9607      	str	r6, [sp, #28]
9001e63e:	9208      	str	r2, [sp, #32]
9001e640:	4586      	cmp	lr, r0
9001e642:	d030      	beq.n	9001e6a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001e644:	8802      	ldrh	r2, [r0, #0]
9001e646:	9906      	ldr	r1, [sp, #24]
9001e648:	1216      	asrs	r6, r2, #8
9001e64a:	10d5      	asrs	r5, r2, #3
9001e64c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e650:	00d2      	lsls	r2, r2, #3
9001e652:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001e656:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001e65a:	b2d2      	uxtb	r2, r2
9001e65c:	fb06 160b 	mla	r6, r6, fp, r1
9001e660:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001e664:	9907      	ldr	r1, [sp, #28]
9001e666:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001e66a:	b2b6      	uxth	r6, r6
9001e66c:	fb05 150b 	mla	r5, r5, fp, r1
9001e670:	9908      	ldr	r1, [sp, #32]
9001e672:	fb02 120b 	mla	r2, r2, fp, r1
9001e676:	1c71      	adds	r1, r6, #1
9001e678:	b2ad      	uxth	r5, r5
9001e67a:	b292      	uxth	r2, r2
9001e67c:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001e680:	1c51      	adds	r1, r2, #1
9001e682:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001e686:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001e68a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e68e:	4316      	orrs	r6, r2
9001e690:	1c6a      	adds	r2, r5, #1
9001e692:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001e696:	096d      	lsrs	r5, r5, #5
9001e698:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e69c:	432e      	orrs	r6, r5
9001e69e:	f820 6b02 	strh.w	r6, [r0], #2
9001e6a2:	e7cd      	b.n	9001e640 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001e6a4:	4470      	add	r0, lr
9001e6a6:	4543      	cmp	r3, r8
9001e6a8:	f4ff af73 	bcc.w	9001e592 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001e6ac:	fa1f fc89 	uxth.w	ip, r9
9001e6b0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001e6b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001e6b6:	eba4 040c 	sub.w	r4, r4, ip
9001e6ba:	881b      	ldrh	r3, [r3, #0]
9001e6bc:	b2a4      	uxth	r4, r4
9001e6be:	eba3 0309 	sub.w	r3, r3, r9
9001e6c2:	2c00      	cmp	r4, #0
9001e6c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e6c8:	bf18      	it	ne
9001e6ca:	f04f 0c00 	movne.w	ip, #0
9001e6ce:	e760      	b.n	9001e592 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001e6d0:	4b03      	ldr	r3, [pc, #12]	@ (9001e6e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001e6d2:	6818      	ldr	r0, [r3, #0]
9001e6d4:	6803      	ldr	r3, [r0, #0]
9001e6d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e6d8:	4798      	blx	r3
9001e6da:	b00f      	add	sp, #60	@ 0x3c
9001e6dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e6e0:	240233d4 	.word	0x240233d4
9001e6e4:	240233ce 	.word	0x240233ce

9001e6e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001e6e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e6ec:	b093      	sub	sp, #76	@ 0x4c
9001e6ee:	461c      	mov	r4, r3
9001e6f0:	9205      	str	r2, [sp, #20]
9001e6f2:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
9001e6f6:	9101      	str	r1, [sp, #4]
9001e6f8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001e6fa:	9202      	str	r2, [sp, #8]
9001e6fc:	2a00      	cmp	r2, #0
9001e6fe:	f000 812e 	beq.w	9001e95e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001e702:	6820      	ldr	r0, [r4, #0]
9001e704:	aa0e      	add	r2, sp, #56	@ 0x38
9001e706:	6861      	ldr	r1, [r4, #4]
9001e708:	c203      	stmia	r2!, {r0, r1}
9001e70a:	6818      	ldr	r0, [r3, #0]
9001e70c:	aa10      	add	r2, sp, #64	@ 0x40
9001e70e:	6859      	ldr	r1, [r3, #4]
9001e710:	c203      	stmia	r2!, {r0, r1}
9001e712:	a80e      	add	r0, sp, #56	@ 0x38
9001e714:	f7f8 f8ac 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e718:	4621      	mov	r1, r4
9001e71a:	a810      	add	r0, sp, #64	@ 0x40
9001e71c:	f7f8 f8d0 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e720:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001e724:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
9001e728:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001e72c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
9001e730:	bfdb      	ittet	le
9001e732:	b2b3      	uxthle	r3, r6
9001e734:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001e738:	2301      	movgt	r3, #1
9001e73a:	fb92 f3f3 	sdivle	r3, r2, r3
9001e73e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001e742:	441d      	add	r5, r3
9001e744:	fb92 f1f3 	sdiv	r1, r2, r3
9001e748:	fa1f fc81 	uxth.w	ip, r1
9001e74c:	3d01      	subs	r5, #1
9001e74e:	fb0c 2413 	mls	r4, ip, r3, r2
9001e752:	4661      	mov	r1, ip
9001e754:	fb14 f406 	smulbb	r4, r4, r6
9001e758:	4404      	add	r4, r0
9001e75a:	fb95 f5f3 	sdiv	r5, r5, r3
9001e75e:	b2a4      	uxth	r4, r4
9001e760:	b131      	cbz	r1, 9001e770 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001e762:	9b05      	ldr	r3, [sp, #20]
9001e764:	9901      	ldr	r1, [sp, #4]
9001e766:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001e76a:	ba1b      	rev	r3, r3
9001e76c:	4419      	add	r1, r3
9001e76e:	9101      	str	r1, [sp, #4]
9001e770:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001e774:	b2ad      	uxth	r5, r5
9001e776:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9001e77a:	4418      	add	r0, r3
9001e77c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
9001e780:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
9001e784:	00ad      	lsls	r5, r5, #2
9001e786:	441a      	add	r2, r3
9001e788:	4b76      	ldr	r3, [pc, #472]	@ (9001e964 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001e78a:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
9001e78e:	6818      	ldr	r0, [r3, #0]
9001e790:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
9001e794:	6803      	ldr	r3, [r0, #0]
9001e796:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001e798:	4798      	blx	r3
9001e79a:	4973      	ldr	r1, [pc, #460]	@ (9001e968 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001e79c:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
9001e7a0:	2c00      	cmp	r4, #0
9001e7a2:	880b      	ldrh	r3, [r1, #0]
9001e7a4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001e7a8:	910d      	str	r1, [sp, #52]	@ 0x34
9001e7aa:	fb03 c202 	mla	r2, r3, r2, ip
9001e7ae:	bf08      	it	eq
9001e7b0:	46dc      	moveq	ip, fp
9001e7b2:	fb03 f306 	mul.w	r3, r3, r6
9001e7b6:	bf18      	it	ne
9001e7b8:	f04f 0c00 	movne.w	ip, #0
9001e7bc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e7c0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001e7c4:	fa1f fc8c 	uxth.w	ip, ip
9001e7c8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e7cc:	9106      	str	r1, [sp, #24]
9001e7ce:	9308      	str	r3, [sp, #32]
9001e7d0:	1d2b      	adds	r3, r5, #4
9001e7d2:	9309      	str	r3, [sp, #36]	@ 0x24
9001e7d4:	9b02      	ldr	r3, [sp, #8]
9001e7d6:	43da      	mvns	r2, r3
9001e7d8:	2300      	movs	r3, #0
9001e7da:	b2d2      	uxtb	r2, r2
9001e7dc:	9303      	str	r3, [sp, #12]
9001e7de:	9207      	str	r2, [sp, #28]
9001e7e0:	9a08      	ldr	r2, [sp, #32]
9001e7e2:	4282      	cmp	r2, r0
9001e7e4:	f240 80b6 	bls.w	9001e954 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001e7e8:	b963      	cbnz	r3, 9001e804 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001e7ea:	9b01      	ldr	r3, [sp, #4]
9001e7ec:	781a      	ldrb	r2, [r3, #0]
9001e7ee:	0993      	lsrs	r3, r2, #6
9001e7f0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001e7f4:	9203      	str	r2, [sp, #12]
9001e7f6:	1e5a      	subs	r2, r3, #1
9001e7f8:	2a02      	cmp	r2, #2
9001e7fa:	d815      	bhi.n	9001e828 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001e7fc:	9a01      	ldr	r2, [sp, #4]
9001e7fe:	b29b      	uxth	r3, r3
9001e800:	3201      	adds	r2, #1
9001e802:	9201      	str	r2, [sp, #4]
9001e804:	b1b4      	cbz	r4, 9001e834 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001e806:	429c      	cmp	r4, r3
9001e808:	bf91      	iteee	ls
9001e80a:	1b1c      	subls	r4, r3, r4
9001e80c:	1ae4      	subhi	r4, r4, r3
9001e80e:	4666      	movhi	r6, ip
9001e810:	f04f 0800 	movhi.w	r8, #0
9001e814:	bf9b      	ittet	ls
9001e816:	fa1f f884 	uxthls.w	r8, r4
9001e81a:	2400      	movls	r4, #0
9001e81c:	b2a4      	uxthhi	r4, r4
9001e81e:	fa1f f68b 	uxthls.w	r6, fp
9001e822:	4643      	mov	r3, r8
9001e824:	46b4      	mov	ip, r6
9001e826:	e7db      	b.n	9001e7e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001e828:	9a01      	ldr	r2, [sp, #4]
9001e82a:	9b01      	ldr	r3, [sp, #4]
9001e82c:	3202      	adds	r2, #2
9001e82e:	785b      	ldrb	r3, [r3, #1]
9001e830:	9201      	str	r2, [sp, #4]
9001e832:	e7e7      	b.n	9001e804 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001e834:	2203      	movs	r2, #3
9001e836:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001e838:	4563      	cmp	r3, ip
9001e83a:	4615      	mov	r5, r2
9001e83c:	9a03      	ldr	r2, [sp, #12]
9001e83e:	bf2c      	ite	cs
9001e840:	eba3 080c 	subcs.w	r8, r3, ip
9001e844:	ebac 0603 	subcc.w	r6, ip, r3
9001e848:	fb15 1202 	smlabb	r2, r5, r2, r1
9001e84c:	9905      	ldr	r1, [sp, #20]
9001e84e:	bf24      	itt	cs
9001e850:	fa1f f888 	uxthcs.w	r8, r8
9001e854:	46e1      	movcs	r9, ip
9001e856:	eb01 0502 	add.w	r5, r1, r2
9001e85a:	9902      	ldr	r1, [sp, #8]
9001e85c:	bf2f      	iteee	cs
9001e85e:	4626      	movcs	r6, r4
9001e860:	b2b6      	uxthcc	r6, r6
9001e862:	4699      	movcc	r9, r3
9001e864:	46a0      	movcc	r8, r4
9001e866:	29ff      	cmp	r1, #255	@ 0xff
9001e868:	d04a      	beq.n	9001e900 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001e86a:	9f06      	ldr	r7, [sp, #24]
9001e86c:	46ca      	mov	sl, r9
9001e86e:	78a9      	ldrb	r1, [r5, #2]
9001e870:	9004      	str	r0, [sp, #16]
9001e872:	4379      	muls	r1, r7
9001e874:	910a      	str	r1, [sp, #40]	@ 0x28
9001e876:	7869      	ldrb	r1, [r5, #1]
9001e878:	4379      	muls	r1, r7
9001e87a:	910b      	str	r1, [sp, #44]	@ 0x2c
9001e87c:	9905      	ldr	r1, [sp, #20]
9001e87e:	5c8a      	ldrb	r2, [r1, r2]
9001e880:	437a      	muls	r2, r7
9001e882:	920c      	str	r2, [sp, #48]	@ 0x30
9001e884:	f1ba 0f00 	cmp.w	sl, #0
9001e888:	d03d      	beq.n	9001e906 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001e88a:	9a04      	ldr	r2, [sp, #16]
9001e88c:	f10a 3aff 	add.w	sl, sl, #4294967295
9001e890:	9f07      	ldr	r7, [sp, #28]
9001e892:	8812      	ldrh	r2, [r2, #0]
9001e894:	fa1f fa8a 	uxth.w	sl, sl
9001e898:	46be      	mov	lr, r7
9001e89a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9001e89c:	1215      	asrs	r5, r2, #8
9001e89e:	10d1      	asrs	r1, r2, #3
9001e8a0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001e8a4:	00d2      	lsls	r2, r2, #3
9001e8a6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001e8aa:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001e8ae:	b2d2      	uxtb	r2, r2
9001e8b0:	fb05 750e 	mla	r5, r5, lr, r7
9001e8b4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001e8b8:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9001e8ba:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001e8be:	b2ad      	uxth	r5, r5
9001e8c0:	fb01 710e 	mla	r1, r1, lr, r7
9001e8c4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001e8c6:	fb02 720e 	mla	r2, r2, lr, r7
9001e8ca:	f105 0e01 	add.w	lr, r5, #1
9001e8ce:	b289      	uxth	r1, r1
9001e8d0:	b292      	uxth	r2, r2
9001e8d2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001e8d6:	f102 0e01 	add.w	lr, r2, #1
9001e8da:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001e8de:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001e8e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e8e6:	4315      	orrs	r5, r2
9001e8e8:	1c4a      	adds	r2, r1, #1
9001e8ea:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001e8ee:	9a04      	ldr	r2, [sp, #16]
9001e8f0:	0949      	lsrs	r1, r1, #5
9001e8f2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001e8f6:	430d      	orrs	r5, r1
9001e8f8:	f822 5b02 	strh.w	r5, [r2], #2
9001e8fc:	9204      	str	r2, [sp, #16]
9001e8fe:	e7c1      	b.n	9001e884 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001e900:	4649      	mov	r1, r9
9001e902:	4686      	mov	lr, r0
9001e904:	b999      	cbnz	r1, 9001e92e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001e906:	4563      	cmp	r3, ip
9001e908:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001e90c:	d389      	bcc.n	9001e822 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001e90e:	fa1f f68b 	uxth.w	r6, fp
9001e912:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
9001e916:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e918:	1ba4      	subs	r4, r4, r6
9001e91a:	881b      	ldrh	r3, [r3, #0]
9001e91c:	b2a4      	uxth	r4, r4
9001e91e:	eba3 030b 	sub.w	r3, r3, fp
9001e922:	2c00      	cmp	r4, #0
9001e924:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e928:	bf18      	it	ne
9001e92a:	2600      	movne	r6, #0
9001e92c:	e779      	b.n	9001e822 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001e92e:	78aa      	ldrb	r2, [r5, #2]
9001e930:	3901      	subs	r1, #1
9001e932:	4f0e      	ldr	r7, [pc, #56]	@ (9001e96c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001e934:	b289      	uxth	r1, r1
9001e936:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001e93a:	786a      	ldrb	r2, [r5, #1]
9001e93c:	00d2      	lsls	r2, r2, #3
9001e93e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e942:	ea4a 0202 	orr.w	r2, sl, r2
9001e946:	f895 a000 	ldrb.w	sl, [r5]
9001e94a:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001e94e:	f82e 2b02 	strh.w	r2, [lr], #2
9001e952:	e7d7      	b.n	9001e904 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001e954:	4b03      	ldr	r3, [pc, #12]	@ (9001e964 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001e956:	6818      	ldr	r0, [r3, #0]
9001e958:	6803      	ldr	r3, [r0, #0]
9001e95a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e95c:	4798      	blx	r3
9001e95e:	b013      	add	sp, #76	@ 0x4c
9001e960:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e964:	240233d4 	.word	0x240233d4
9001e968:	240233ce 	.word	0x240233ce
9001e96c:	fffff800 	.word	0xfffff800

9001e970 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001e970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e974:	b09d      	sub	sp, #116	@ 0x74
9001e976:	461c      	mov	r4, r3
9001e978:	4683      	mov	fp, r0
9001e97a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001e97c:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
9001e980:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
9001e984:	920e      	str	r2, [sp, #56]	@ 0x38
9001e986:	2a00      	cmp	r2, #0
9001e988:	f000 81e4 	beq.w	9001ed54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001e98c:	6820      	ldr	r0, [r4, #0]
9001e98e:	aa18      	add	r2, sp, #96	@ 0x60
9001e990:	6861      	ldr	r1, [r4, #4]
9001e992:	c203      	stmia	r2!, {r0, r1}
9001e994:	6818      	ldr	r0, [r3, #0]
9001e996:	aa1a      	add	r2, sp, #104	@ 0x68
9001e998:	6859      	ldr	r1, [r3, #4]
9001e99a:	c203      	stmia	r2!, {r0, r1}
9001e99c:	a818      	add	r0, sp, #96	@ 0x60
9001e99e:	f7f7 ff67 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e9a2:	4621      	mov	r1, r4
9001e9a4:	a81a      	add	r0, sp, #104	@ 0x68
9001e9a6:	f7f7 ff8b 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e9aa:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
9001e9ae:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
9001e9b2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001e9b6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001e9ba:	bfdb      	ittet	le
9001e9bc:	b29a      	uxthle	r2, r3
9001e9be:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001e9c2:	2201      	movgt	r2, #1
9001e9c4:	fb91 f2f2 	sdivle	r2, r1, r2
9001e9c8:	9202      	str	r2, [sp, #8]
9001e9ca:	9802      	ldr	r0, [sp, #8]
9001e9cc:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
9001e9d0:	9902      	ldr	r1, [sp, #8]
9001e9d2:	fb92 f0f0 	sdiv	r0, r2, r0
9001e9d6:	b280      	uxth	r0, r0
9001e9d8:	440c      	add	r4, r1
9001e9da:	900f      	str	r0, [sp, #60]	@ 0x3c
9001e9dc:	3c01      	subs	r4, #1
9001e9de:	9802      	ldr	r0, [sp, #8]
9001e9e0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9001e9e2:	fb05 2510 	mls	r5, r5, r0, r2
9001e9e6:	fb94 f4f1 	sdiv	r4, r4, r1
9001e9ea:	fb15 f503 	smulbb	r5, r5, r3
9001e9ee:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
9001e9f2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
9001e9f6:	3401      	adds	r4, #1
9001e9f8:	440d      	add	r5, r1
9001e9fa:	4419      	add	r1, r3
9001e9fc:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
9001ea00:	b2a4      	uxth	r4, r4
9001ea02:	441a      	add	r2, r3
9001ea04:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001ea08:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
9001ea0c:	00a4      	lsls	r4, r4, #2
9001ea0e:	9306      	str	r3, [sp, #24]
9001ea10:	b2ad      	uxth	r5, r5
9001ea12:	4bb3      	ldr	r3, [pc, #716]	@ (9001ece0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001ea14:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
9001ea18:	6818      	ldr	r0, [r3, #0]
9001ea1a:	6803      	ldr	r3, [r0, #0]
9001ea1c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001ea1e:	4798      	blx	r3
9001ea20:	4bb0      	ldr	r3, [pc, #704]	@ (9001ece4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001ea22:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
9001ea26:	2d00      	cmp	r5, #0
9001ea28:	881a      	ldrh	r2, [r3, #0]
9001ea2a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
9001ea2e:	fb02 f606 	mul.w	r6, r2, r6
9001ea32:	fb02 7101 	mla	r1, r2, r1, r7
9001ea36:	9316      	str	r3, [sp, #88]	@ 0x58
9001ea38:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001ea3c:	4baa      	ldr	r3, [pc, #680]	@ (9001ece8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001ea3e:	bf18      	it	ne
9001ea40:	2100      	movne	r1, #0
9001ea42:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001ea46:	eba3 030b 	sub.w	r3, r3, fp
9001ea4a:	920a      	str	r2, [sp, #40]	@ 0x28
9001ea4c:	f104 0204 	add.w	r2, r4, #4
9001ea50:	9317      	str	r3, [sp, #92]	@ 0x5c
9001ea52:	9213      	str	r2, [sp, #76]	@ 0x4c
9001ea54:	9a06      	ldr	r2, [sp, #24]
9001ea56:	bf08      	it	eq
9001ea58:	4611      	moveq	r1, r2
9001ea5a:	2200      	movs	r2, #0
9001ea5c:	b289      	uxth	r1, r1
9001ea5e:	920d      	str	r2, [sp, #52]	@ 0x34
9001ea60:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001ea62:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001ea64:	fa12 f383 	uxtah	r3, r2, r3
9001ea68:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ea6a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001ea6e:	3304      	adds	r3, #4
9001ea70:	9308      	str	r3, [sp, #32]
9001ea72:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001ea74:	4543      	cmp	r3, r8
9001ea76:	f240 8168 	bls.w	9001ed4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001ea7a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
9001ea7e:	f04f 0e01 	mov.w	lr, #1
9001ea82:	9a02      	ldr	r2, [sp, #8]
9001ea84:	9808      	ldr	r0, [sp, #32]
9001ea86:	fbb5 f3f3 	udiv	r3, r5, r3
9001ea8a:	1ad3      	subs	r3, r2, r3
9001ea8c:	7800      	ldrb	r0, [r0, #0]
9001ea8e:	b29b      	uxth	r3, r3
9001ea90:	9010      	str	r0, [sp, #64]	@ 0x40
9001ea92:	3001      	adds	r0, #1
9001ea94:	9314      	str	r3, [sp, #80]	@ 0x50
9001ea96:	9b08      	ldr	r3, [sp, #32]
9001ea98:	9007      	str	r0, [sp, #28]
9001ea9a:	785a      	ldrb	r2, [r3, #1]
9001ea9c:	789b      	ldrb	r3, [r3, #2]
9001ea9e:	021b      	lsls	r3, r3, #8
9001eaa0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001eaa4:	9a08      	ldr	r2, [sp, #32]
9001eaa6:	78d2      	ldrb	r2, [r2, #3]
9001eaa8:	4313      	orrs	r3, r2
9001eaaa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001eaac:	441a      	add	r2, r3
9001eaae:	1c50      	adds	r0, r2, #1
9001eab0:	7852      	ldrb	r2, [r2, #1]
9001eab2:	9005      	str	r0, [sp, #20]
9001eab4:	0212      	lsls	r2, r2, #8
9001eab6:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001eab8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001eabc:	5cc3      	ldrb	r3, [r0, r3]
9001eabe:	431a      	orrs	r2, r3
9001eac0:	b293      	uxth	r3, r2
9001eac2:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
9001eac6:	930b      	str	r3, [sp, #44]	@ 0x2c
9001eac8:	2300      	movs	r3, #0
9001eaca:	9309      	str	r3, [sp, #36]	@ 0x24
9001eacc:	2301      	movs	r3, #1
9001eace:	9301      	str	r3, [sp, #4]
9001ead0:	9304      	str	r3, [sp, #16]
9001ead2:	2300      	movs	r3, #0
9001ead4:	9303      	str	r3, [sp, #12]
9001ead6:	2d00      	cmp	r5, #0
9001ead8:	d07d      	beq.n	9001ebd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001eada:	45ae      	cmp	lr, r5
9001eadc:	d26c      	bcs.n	9001ebb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001eade:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001eae0:	eba5 050e 	sub.w	r5, r5, lr
9001eae4:	460c      	mov	r4, r1
9001eae6:	4543      	cmp	r3, r8
9001eae8:	b2ad      	uxth	r5, r5
9001eaea:	d802      	bhi.n	9001eaf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001eaec:	e071      	b.n	9001ebd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001eaee:	2b00      	cmp	r3, #0
9001eaf0:	d15d      	bne.n	9001ebae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001eaf2:	9b05      	ldr	r3, [sp, #20]
9001eaf4:	9a04      	ldr	r2, [sp, #16]
9001eaf6:	785b      	ldrb	r3, [r3, #1]
9001eaf8:	f1c2 0207 	rsb	r2, r2, #7
9001eafc:	9904      	ldr	r1, [sp, #16]
9001eafe:	4093      	lsls	r3, r2
9001eb00:	005b      	lsls	r3, r3, #1
9001eb02:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001eb06:	9b05      	ldr	r3, [sp, #20]
9001eb08:	781b      	ldrb	r3, [r3, #0]
9001eb0a:	410b      	asrs	r3, r1
9001eb0c:	3101      	adds	r1, #1
9001eb0e:	b2c9      	uxtb	r1, r1
9001eb10:	b2db      	uxtb	r3, r3
9001eb12:	2908      	cmp	r1, #8
9001eb14:	9104      	str	r1, [sp, #16]
9001eb16:	9905      	ldr	r1, [sp, #20]
9001eb18:	ea43 0302 	orr.w	r3, r3, r2
9001eb1c:	bf0c      	ite	eq
9001eb1e:	3102      	addeq	r1, #2
9001eb20:	3101      	addne	r1, #1
9001eb22:	b29a      	uxth	r2, r3
9001eb24:	bf05      	ittet	eq
9001eb26:	9105      	streq	r1, [sp, #20]
9001eb28:	2100      	moveq	r1, #0
9001eb2a:	9105      	strne	r1, [sp, #20]
9001eb2c:	9104      	streq	r1, [sp, #16]
9001eb2e:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001eb30:	4291      	cmp	r1, r2
9001eb32:	d30a      	bcc.n	9001eb4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001eb34:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
9001eb38:	2301      	movs	r3, #1
9001eb3a:	9907      	ldr	r1, [sp, #28]
9001eb3c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001eb40:	d30f      	bcc.n	9001eb62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001eb42:	2100      	movs	r1, #0
9001eb44:	9301      	str	r3, [sp, #4]
9001eb46:	9103      	str	r1, [sp, #12]
9001eb48:	e032      	b.n	9001ebb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001eb4a:	9b07      	ldr	r3, [sp, #28]
9001eb4c:	429a      	cmp	r2, r3
9001eb4e:	d318      	bcc.n	9001eb82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001eb50:	9b01      	ldr	r3, [sp, #4]
9001eb52:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
9001eb56:	445b      	add	r3, fp
9001eb58:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001eb5c:	9b01      	ldr	r3, [sp, #4]
9001eb5e:	3301      	adds	r3, #1
9001eb60:	b29b      	uxth	r3, r3
9001eb62:	9907      	ldr	r1, [sp, #28]
9001eb64:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
9001eb68:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001eb6c:	7108      	strb	r0, [r1, #4]
9001eb6e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001eb70:	80c8      	strh	r0, [r1, #6]
9001eb72:	9801      	ldr	r0, [sp, #4]
9001eb74:	3001      	adds	r0, #1
9001eb76:	7148      	strb	r0, [r1, #5]
9001eb78:	9907      	ldr	r1, [sp, #28]
9001eb7a:	3101      	adds	r1, #1
9001eb7c:	b289      	uxth	r1, r1
9001eb7e:	9107      	str	r1, [sp, #28]
9001eb80:	e7df      	b.n	9001eb42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001eb82:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001eb86:	4611      	mov	r1, r2
9001eb88:	795b      	ldrb	r3, [r3, #5]
9001eb8a:	f603 0004 	addw	r0, r3, #2052	@ 0x804
9001eb8e:	4458      	add	r0, fp
9001eb90:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
9001eb92:	4406      	add	r6, r0
9001eb94:	2e00      	cmp	r6, #0
9001eb96:	dd06      	ble.n	9001eba6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001eb98:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001eb9c:	790e      	ldrb	r6, [r1, #4]
9001eb9e:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001eba2:	88c9      	ldrh	r1, [r1, #6]
9001eba4:	e7f4      	b.n	9001eb90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001eba6:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
9001ebaa:	b29b      	uxth	r3, r3
9001ebac:	e7c5      	b.n	9001eb3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001ebae:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001ebb0:	4621      	mov	r1, r4
9001ebb2:	920b      	str	r2, [sp, #44]	@ 0x2c
9001ebb4:	469e      	mov	lr, r3
9001ebb6:	e78e      	b.n	9001ead6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001ebb8:	9a03      	ldr	r2, [sp, #12]
9001ebba:	ebae 0305 	sub.w	r3, lr, r5
9001ebbe:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001ebc2:	442a      	add	r2, r5
9001ebc4:	b29b      	uxth	r3, r3
9001ebc6:	b292      	uxth	r2, r2
9001ebc8:	9203      	str	r2, [sp, #12]
9001ebca:	2500      	movs	r5, #0
9001ebcc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001ebce:	4542      	cmp	r2, r8
9001ebd0:	d88d      	bhi.n	9001eaee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001ebd2:	4621      	mov	r1, r4
9001ebd4:	e74d      	b.n	9001ea72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001ebd6:	458e      	cmp	lr, r1
9001ebd8:	f04f 0900 	mov.w	r9, #0
9001ebdc:	bf2b      	itete	cs
9001ebde:	ebae 0301 	subcs.w	r3, lr, r1
9001ebe2:	eba1 040e 	subcc.w	r4, r1, lr
9001ebe6:	462c      	movcs	r4, r5
9001ebe8:	462b      	movcc	r3, r5
9001ebea:	bf27      	ittee	cs
9001ebec:	b29b      	uxthcs	r3, r3
9001ebee:	910c      	strcs	r1, [sp, #48]	@ 0x30
9001ebf0:	b2a4      	uxthcc	r4, r4
9001ebf2:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
9001ebf6:	9a03      	ldr	r2, [sp, #12]
9001ebf8:	980c      	ldr	r0, [sp, #48]	@ 0x30
9001ebfa:	444a      	add	r2, r9
9001ebfc:	4548      	cmp	r0, r9
9001ebfe:	b292      	uxth	r2, r2
9001ec00:	d074      	beq.n	9001ecec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001ec02:	2004      	movs	r0, #4
9001ec04:	445a      	add	r2, fp
9001ec06:	4605      	mov	r5, r0
9001ec08:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
9001ec0c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001ec0e:	fb15 0202 	smlabb	r2, r5, r2, r0
9001ec12:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ec14:	5880      	ldr	r0, [r0, r2]
9001ec16:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001ec1a:	d014      	beq.n	9001ec46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001ec1c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001ec20:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001ec24:	d112      	bne.n	9001ec4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001ec26:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001ec28:	2aff      	cmp	r2, #255	@ 0xff
9001ec2a:	d10f      	bne.n	9001ec4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001ec2c:	0942      	lsrs	r2, r0, #5
9001ec2e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001ec32:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001ec36:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ec3a:	f025 0507 	bic.w	r5, r5, #7
9001ec3e:	4315      	orrs	r5, r2
9001ec40:	4305      	orrs	r5, r0
9001ec42:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001ec46:	f109 0901 	add.w	r9, r9, #1
9001ec4a:	e7d4      	b.n	9001ebf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001ec4c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001ec50:	b2ed      	uxtb	r5, r5
9001ec52:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001ec56:	ea4f 272c 	mov.w	r7, ip, asr #8
9001ec5a:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
9001ec5e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001ec62:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001ec66:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ec6a:	9215      	str	r2, [sp, #84]	@ 0x54
9001ec6c:	fa5f fc8c 	uxtb.w	ip, ip
9001ec70:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001ec72:	b2c0      	uxtb	r0, r0
9001ec74:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001ec78:	fb02 fa0a 	mul.w	sl, r2, sl
9001ec7c:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001ec80:	f10a 0201 	add.w	r2, sl, #1
9001ec84:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001ec88:	1212      	asrs	r2, r2, #8
9001ec8a:	fa1f fa82 	uxth.w	sl, r2
9001ec8e:	43d2      	mvns	r2, r2
9001ec90:	fb16 f60a 	smulbb	r6, r6, sl
9001ec94:	b2d2      	uxtb	r2, r2
9001ec96:	fb10 f00a 	smulbb	r0, r0, sl
9001ec9a:	fb07 6702 	mla	r7, r7, r2, r6
9001ec9e:	9e15      	ldr	r6, [sp, #84]	@ 0x54
9001eca0:	fb0c 0002 	mla	r0, ip, r2, r0
9001eca4:	fb15 f50a 	smulbb	r5, r5, sl
9001eca8:	b2bf      	uxth	r7, r7
9001ecaa:	b280      	uxth	r0, r0
9001ecac:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001ecb0:	fb06 5602 	mla	r6, r6, r2, r5
9001ecb4:	1c7a      	adds	r2, r7, #1
9001ecb6:	1c45      	adds	r5, r0, #1
9001ecb8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001ecbc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001ecc0:	b2b6      	uxth	r6, r6
9001ecc2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ecc6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001ecca:	432f      	orrs	r7, r5
9001eccc:	1c75      	adds	r5, r6, #1
9001ecce:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001ecd2:	096d      	lsrs	r5, r5, #5
9001ecd4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001ecd8:	432f      	orrs	r7, r5
9001ecda:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001ecde:	e7b2      	b.n	9001ec46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001ece0:	240233d4 	.word	0x240233d4
9001ece4:	240233ce 	.word	0x240233ce
9001ece8:	fffff7fb 	.word	0xfffff7fb
9001ecec:	9203      	str	r2, [sp, #12]
9001ecee:	458e      	cmp	lr, r1
9001ecf0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001ecf2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001ecf6:	f4ff af68 	bcc.w	9001ebca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001ecfa:	9a16      	ldr	r2, [sp, #88]	@ 0x58
9001ecfc:	9906      	ldr	r1, [sp, #24]
9001ecfe:	8812      	ldrh	r2, [r2, #0]
9001ed00:	1a52      	subs	r2, r2, r1
9001ed02:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001ed04:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001ed08:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001ed0a:	3201      	adds	r2, #1
9001ed0c:	428a      	cmp	r2, r1
9001ed0e:	9209      	str	r2, [sp, #36]	@ 0x24
9001ed10:	d111      	bne.n	9001ed36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001ed12:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
9001ed16:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
9001ed1a:	9b06      	ldr	r3, [sp, #24]
9001ed1c:	eba5 0509 	sub.w	r5, r5, r9
9001ed20:	b2ad      	uxth	r5, r5
9001ed22:	2d00      	cmp	r5, #0
9001ed24:	bf08      	it	eq
9001ed26:	4619      	moveq	r1, r3
9001ed28:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001ed2a:	bf18      	it	ne
9001ed2c:	2100      	movne	r1, #0
9001ed2e:	3301      	adds	r3, #1
9001ed30:	b289      	uxth	r1, r1
9001ed32:	930d      	str	r3, [sp, #52]	@ 0x34
9001ed34:	e694      	b.n	9001ea60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001ed36:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001ed3a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001ed3e:	1b2d      	subs	r5, r5, r4
9001ed40:	b2ad      	uxth	r5, r5
9001ed42:	2d00      	cmp	r5, #0
9001ed44:	bf18      	it	ne
9001ed46:	2400      	movne	r4, #0
9001ed48:	e740      	b.n	9001ebcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001ed4a:	4b04      	ldr	r3, [pc, #16]	@ (9001ed5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001ed4c:	6818      	ldr	r0, [r3, #0]
9001ed4e:	6803      	ldr	r3, [r0, #0]
9001ed50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ed52:	4798      	blx	r3
9001ed54:	b01d      	add	sp, #116	@ 0x74
9001ed56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ed5a:	bf00      	nop
9001ed5c:	240233d4 	.word	0x240233d4

9001ed60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001ed60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ed64:	b09f      	sub	sp, #124	@ 0x7c
9001ed66:	461d      	mov	r5, r3
9001ed68:	4604      	mov	r4, r0
9001ed6a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001ed6c:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001ed70:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001ed74:	920a      	str	r2, [sp, #40]	@ 0x28
9001ed76:	2a00      	cmp	r2, #0
9001ed78:	f000 81fe 	beq.w	9001f178 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001ed7c:	6828      	ldr	r0, [r5, #0]
9001ed7e:	aa1a      	add	r2, sp, #104	@ 0x68
9001ed80:	6869      	ldr	r1, [r5, #4]
9001ed82:	c203      	stmia	r2!, {r0, r1}
9001ed84:	6818      	ldr	r0, [r3, #0]
9001ed86:	aa1c      	add	r2, sp, #112	@ 0x70
9001ed88:	6859      	ldr	r1, [r3, #4]
9001ed8a:	c203      	stmia	r2!, {r0, r1}
9001ed8c:	a81a      	add	r0, sp, #104	@ 0x68
9001ed8e:	f7f7 fd6f 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ed92:	4629      	mov	r1, r5
9001ed94:	a81c      	add	r0, sp, #112	@ 0x70
9001ed96:	f7f7 fd93 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ed9a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001ed9e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001eda2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001eda6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
9001edaa:	bfdb      	ittet	le
9001edac:	b29a      	uxthle	r2, r3
9001edae:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001edb2:	2201      	movgt	r2, #1
9001edb4:	fb91 f2f2 	sdivle	r2, r1, r2
9001edb8:	9201      	str	r2, [sp, #4]
9001edba:	9801      	ldr	r0, [sp, #4]
9001edbc:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001edc0:	9901      	ldr	r1, [sp, #4]
9001edc2:	fb92 f0f0 	sdiv	r0, r2, r0
9001edc6:	b280      	uxth	r0, r0
9001edc8:	440e      	add	r6, r1
9001edca:	9010      	str	r0, [sp, #64]	@ 0x40
9001edcc:	3e01      	subs	r6, #1
9001edce:	9801      	ldr	r0, [sp, #4]
9001edd0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001edd2:	fb05 2510 	mls	r5, r5, r0, r2
9001edd6:	fb96 f6f1 	sdiv	r6, r6, r1
9001edda:	fb15 f503 	smulbb	r5, r5, r3
9001edde:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001ede2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001ede6:	3601      	adds	r6, #1
9001ede8:	440d      	add	r5, r1
9001edea:	4419      	add	r1, r3
9001edec:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001edf0:	b2b6      	uxth	r6, r6
9001edf2:	441a      	add	r2, r3
9001edf4:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001edf8:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001edfc:	b2ad      	uxth	r5, r5
9001edfe:	9304      	str	r3, [sp, #16]
9001ee00:	4b96      	ldr	r3, [pc, #600]	@ (9001f05c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001ee02:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001ee06:	6818      	ldr	r0, [r3, #0]
9001ee08:	6803      	ldr	r3, [r0, #0]
9001ee0a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001ee0c:	4798      	blx	r3
9001ee0e:	4b94      	ldr	r3, [pc, #592]	@ (9001f060 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001ee10:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001ee14:	2d00      	cmp	r5, #0
9001ee16:	881a      	ldrh	r2, [r3, #0]
9001ee18:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
9001ee1c:	fb02 f707 	mul.w	r7, r2, r7
9001ee20:	fb02 c101 	mla	r1, r2, r1, ip
9001ee24:	9318      	str	r3, [sp, #96]	@ 0x60
9001ee26:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001ee2a:	4b8e      	ldr	r3, [pc, #568]	@ (9001f064 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001ee2c:	bf18      	it	ne
9001ee2e:	2100      	movne	r1, #0
9001ee30:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001ee34:	eba3 0304 	sub.w	r3, r3, r4
9001ee38:	920b      	str	r2, [sp, #44]	@ 0x2c
9001ee3a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ee3c:	9319      	str	r3, [sp, #100]	@ 0x64
9001ee3e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001ee42:	f106 0204 	add.w	r2, r6, #4
9001ee46:	9206      	str	r2, [sp, #24]
9001ee48:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001ee4a:	ea6f 0202 	mvn.w	r2, r2
9001ee4e:	b2d2      	uxtb	r2, r2
9001ee50:	9215      	str	r2, [sp, #84]	@ 0x54
9001ee52:	9a04      	ldr	r2, [sp, #16]
9001ee54:	bf08      	it	eq
9001ee56:	4611      	moveq	r1, r2
9001ee58:	2200      	movs	r2, #0
9001ee5a:	b289      	uxth	r1, r1
9001ee5c:	920d      	str	r2, [sp, #52]	@ 0x34
9001ee5e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001ee60:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001ee62:	fa12 f383 	uxtah	r3, r2, r3
9001ee66:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ee68:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001ee6c:	3304      	adds	r3, #4
9001ee6e:	9307      	str	r3, [sp, #28]
9001ee70:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001ee72:	455b      	cmp	r3, fp
9001ee74:	f240 817b 	bls.w	9001f16e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001ee78:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001ee7c:	f04f 0801 	mov.w	r8, #1
9001ee80:	9a01      	ldr	r2, [sp, #4]
9001ee82:	9807      	ldr	r0, [sp, #28]
9001ee84:	46c4      	mov	ip, r8
9001ee86:	f8cd 8008 	str.w	r8, [sp, #8]
9001ee8a:	7800      	ldrb	r0, [r0, #0]
9001ee8c:	fbb5 f3f3 	udiv	r3, r5, r3
9001ee90:	1ad3      	subs	r3, r2, r3
9001ee92:	9011      	str	r0, [sp, #68]	@ 0x44
9001ee94:	3001      	adds	r0, #1
9001ee96:	b29b      	uxth	r3, r3
9001ee98:	9005      	str	r0, [sp, #20]
9001ee9a:	9316      	str	r3, [sp, #88]	@ 0x58
9001ee9c:	9b07      	ldr	r3, [sp, #28]
9001ee9e:	785a      	ldrb	r2, [r3, #1]
9001eea0:	789b      	ldrb	r3, [r3, #2]
9001eea2:	021b      	lsls	r3, r3, #8
9001eea4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001eea8:	9a07      	ldr	r2, [sp, #28]
9001eeaa:	78d2      	ldrb	r2, [r2, #3]
9001eeac:	4313      	orrs	r3, r2
9001eeae:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001eeb0:	441a      	add	r2, r3
9001eeb2:	1c50      	adds	r0, r2, #1
9001eeb4:	7852      	ldrb	r2, [r2, #1]
9001eeb6:	9003      	str	r0, [sp, #12]
9001eeb8:	0212      	lsls	r2, r2, #8
9001eeba:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001eebc:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001eec0:	5cc3      	ldrb	r3, [r0, r3]
9001eec2:	431a      	orrs	r2, r3
9001eec4:	b293      	uxth	r3, r2
9001eec6:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001eeca:	930c      	str	r3, [sp, #48]	@ 0x30
9001eecc:	2300      	movs	r3, #0
9001eece:	9308      	str	r3, [sp, #32]
9001eed0:	461a      	mov	r2, r3
9001eed2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001eed6:	930e      	str	r3, [sp, #56]	@ 0x38
9001eed8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001eedc:	930f      	str	r3, [sp, #60]	@ 0x3c
9001eede:	2d00      	cmp	r5, #0
9001eee0:	d07d      	beq.n	9001efde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001eee2:	45ac      	cmp	ip, r5
9001eee4:	d26d      	bcs.n	9001efc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001eee6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001eee8:	eba5 050c 	sub.w	r5, r5, ip
9001eeec:	4608      	mov	r0, r1
9001eeee:	455b      	cmp	r3, fp
9001eef0:	b2ad      	uxth	r5, r5
9001eef2:	d802      	bhi.n	9001eefa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001eef4:	e071      	b.n	9001efda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001eef6:	2b00      	cmp	r3, #0
9001eef8:	d15d      	bne.n	9001efb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001eefa:	9b03      	ldr	r3, [sp, #12]
9001eefc:	9a02      	ldr	r2, [sp, #8]
9001eefe:	785b      	ldrb	r3, [r3, #1]
9001ef00:	f1c2 0207 	rsb	r2, r2, #7
9001ef04:	9902      	ldr	r1, [sp, #8]
9001ef06:	4093      	lsls	r3, r2
9001ef08:	005b      	lsls	r3, r3, #1
9001ef0a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001ef0e:	9b03      	ldr	r3, [sp, #12]
9001ef10:	781b      	ldrb	r3, [r3, #0]
9001ef12:	410b      	asrs	r3, r1
9001ef14:	3101      	adds	r1, #1
9001ef16:	b2c9      	uxtb	r1, r1
9001ef18:	b2db      	uxtb	r3, r3
9001ef1a:	2908      	cmp	r1, #8
9001ef1c:	9102      	str	r1, [sp, #8]
9001ef1e:	9903      	ldr	r1, [sp, #12]
9001ef20:	ea43 0302 	orr.w	r3, r3, r2
9001ef24:	bf0c      	ite	eq
9001ef26:	3102      	addeq	r1, #2
9001ef28:	3101      	addne	r1, #1
9001ef2a:	b29a      	uxth	r2, r3
9001ef2c:	bf05      	ittet	eq
9001ef2e:	9103      	streq	r1, [sp, #12]
9001ef30:	2100      	moveq	r1, #0
9001ef32:	9103      	strne	r1, [sp, #12]
9001ef34:	9102      	streq	r1, [sp, #8]
9001ef36:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001ef38:	4291      	cmp	r1, r2
9001ef3a:	d30a      	bcc.n	9001ef52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001ef3c:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001ef40:	2301      	movs	r3, #1
9001ef42:	9905      	ldr	r1, [sp, #20]
9001ef44:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001ef48:	d30f      	bcc.n	9001ef6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001ef4a:	2100      	movs	r1, #0
9001ef4c:	4698      	mov	r8, r3
9001ef4e:	9100      	str	r1, [sp, #0]
9001ef50:	e032      	b.n	9001efb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001ef52:	9b05      	ldr	r3, [sp, #20]
9001ef54:	429a      	cmp	r2, r3
9001ef56:	d318      	bcc.n	9001ef8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001ef58:	eb04 0308 	add.w	r3, r4, r8
9001ef5c:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
9001ef60:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001ef64:	f108 0301 	add.w	r3, r8, #1
9001ef68:	b29b      	uxth	r3, r3
9001ef6a:	9905      	ldr	r1, [sp, #20]
9001ef6c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001ef70:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001ef74:	710e      	strb	r6, [r1, #4]
9001ef76:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9001ef78:	80ce      	strh	r6, [r1, #6]
9001ef7a:	f108 0601 	add.w	r6, r8, #1
9001ef7e:	714e      	strb	r6, [r1, #5]
9001ef80:	9905      	ldr	r1, [sp, #20]
9001ef82:	3101      	adds	r1, #1
9001ef84:	b289      	uxth	r1, r1
9001ef86:	9105      	str	r1, [sp, #20]
9001ef88:	e7df      	b.n	9001ef4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001ef8a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001ef8e:	4611      	mov	r1, r2
9001ef90:	795b      	ldrb	r3, [r3, #5]
9001ef92:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001ef96:	4426      	add	r6, r4
9001ef98:	9f19      	ldr	r7, [sp, #100]	@ 0x64
9001ef9a:	4437      	add	r7, r6
9001ef9c:	2f00      	cmp	r7, #0
9001ef9e:	dd06      	ble.n	9001efae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001efa0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001efa4:	790f      	ldrb	r7, [r1, #4]
9001efa6:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001efaa:	88c9      	ldrh	r1, [r1, #6]
9001efac:	e7f4      	b.n	9001ef98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001efae:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001efb2:	b29b      	uxth	r3, r3
9001efb4:	e7c5      	b.n	9001ef42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001efb6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001efb8:	920c      	str	r2, [sp, #48]	@ 0x30
9001efba:	4601      	mov	r1, r0
9001efbc:	9a00      	ldr	r2, [sp, #0]
9001efbe:	469c      	mov	ip, r3
9001efc0:	e78d      	b.n	9001eede <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001efc2:	ebac 0305 	sub.w	r3, ip, r5
9001efc6:	1957      	adds	r7, r2, r5
9001efc8:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001efcc:	b2ba      	uxth	r2, r7
9001efce:	b29b      	uxth	r3, r3
9001efd0:	9200      	str	r2, [sp, #0]
9001efd2:	2500      	movs	r5, #0
9001efd4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001efd6:	455a      	cmp	r2, fp
9001efd8:	d88d      	bhi.n	9001eef6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001efda:	4601      	mov	r1, r0
9001efdc:	e748      	b.n	9001ee70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001efde:	458c      	cmp	ip, r1
9001efe0:	bf27      	ittee	cs
9001efe2:	ebac 0301 	subcs.w	r3, ip, r1
9001efe6:	4628      	movcs	r0, r5
9001efe8:	eba1 000c 	subcc.w	r0, r1, ip
9001efec:	462b      	movcc	r3, r5
9001efee:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9001eff0:	bf27      	ittee	cs
9001eff2:	b29b      	uxthcs	r3, r3
9001eff4:	9109      	strcs	r1, [sp, #36]	@ 0x24
9001eff6:	b280      	uxthcc	r0, r0
9001eff8:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
9001effc:	2dff      	cmp	r5, #255	@ 0xff
9001effe:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9001f000:	eb02 0705 	add.w	r7, r2, r5
9001f004:	b2bd      	uxth	r5, r7
9001f006:	9500      	str	r5, [sp, #0]
9001f008:	d12e      	bne.n	9001f068 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001f00a:	465e      	mov	r6, fp
9001f00c:	9d00      	ldr	r5, [sp, #0]
9001f00e:	42aa      	cmp	r2, r5
9001f010:	f040 8083 	bne.w	9001f11a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001f014:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001f016:	458c      	cmp	ip, r1
9001f018:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001f01c:	d3d9      	bcc.n	9001efd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001f01e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001f020:	9904      	ldr	r1, [sp, #16]
9001f022:	8812      	ldrh	r2, [r2, #0]
9001f024:	1a52      	subs	r2, r2, r1
9001f026:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001f028:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001f02c:	9a08      	ldr	r2, [sp, #32]
9001f02e:	3201      	adds	r2, #1
9001f030:	428a      	cmp	r2, r1
9001f032:	9208      	str	r2, [sp, #32]
9001f034:	f040 8091 	bne.w	9001f15a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001f038:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001f03c:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
9001f040:	9b04      	ldr	r3, [sp, #16]
9001f042:	eba5 050c 	sub.w	r5, r5, ip
9001f046:	b2ad      	uxth	r5, r5
9001f048:	2d00      	cmp	r5, #0
9001f04a:	bf08      	it	eq
9001f04c:	4619      	moveq	r1, r3
9001f04e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f050:	bf18      	it	ne
9001f052:	2100      	movne	r1, #0
9001f054:	3301      	adds	r3, #1
9001f056:	b289      	uxth	r1, r1
9001f058:	930d      	str	r3, [sp, #52]	@ 0x34
9001f05a:	e700      	b.n	9001ee5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001f05c:	240233d4 	.word	0x240233d4
9001f060:	240233ce 	.word	0x240233ce
9001f064:	fffff7fb 	.word	0xfffff7fb
9001f068:	46d9      	mov	r9, fp
9001f06a:	9d00      	ldr	r5, [sp, #0]
9001f06c:	42aa      	cmp	r2, r5
9001f06e:	d0d1      	beq.n	9001f014 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001f070:	1c55      	adds	r5, r2, #1
9001f072:	4422      	add	r2, r4
9001f074:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
9001f078:	9a06      	ldr	r2, [sp, #24]
9001f07a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001f07e:	9517      	str	r5, [sp, #92]	@ 0x5c
9001f080:	4472      	add	r2, lr
9001f082:	9212      	str	r2, [sp, #72]	@ 0x48
9001f084:	f8b9 2000 	ldrh.w	r2, [r9]
9001f088:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001f08a:	1216      	asrs	r6, r2, #8
9001f08c:	f897 a002 	ldrb.w	sl, [r7, #2]
9001f090:	10d5      	asrs	r5, r2, #3
9001f092:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001f094:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f098:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f09c:	00d2      	lsls	r2, r2, #3
9001f09e:	fb1a fa07 	smulbb	sl, sl, r7
9001f0a2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f0a6:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001f0a8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f0ac:	b2d2      	uxtb	r2, r2
9001f0ae:	fb06 a607 	mla	r6, r6, r7, sl
9001f0b2:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001f0b4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f0b8:	f897 a001 	ldrb.w	sl, [r7, #1]
9001f0bc:	b2b6      	uxth	r6, r6
9001f0be:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001f0c0:	fb1a fa07 	smulbb	sl, sl, r7
9001f0c4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001f0c6:	fb05 a507 	mla	r5, r5, r7, sl
9001f0ca:	9f06      	ldr	r7, [sp, #24]
9001f0cc:	f106 0a01 	add.w	sl, r6, #1
9001f0d0:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001f0d4:	b2ad      	uxth	r5, r5
9001f0d6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001f0d8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001f0dc:	f105 0a01 	add.w	sl, r5, #1
9001f0e0:	fb1e fe07 	smulbb	lr, lr, r7
9001f0e4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001f0e6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f0ea:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001f0ee:	fb02 e207 	mla	r2, r2, r7, lr
9001f0f2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f0f6:	b292      	uxth	r2, r2
9001f0f8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f0fc:	f102 0e01 	add.w	lr, r2, #1
9001f100:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001f104:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001f108:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001f10c:	ea4e 0606 	orr.w	r6, lr, r6
9001f110:	ea46 060a 	orr.w	r6, r6, sl
9001f114:	f829 6b02 	strh.w	r6, [r9], #2
9001f118:	e7a7      	b.n	9001f06a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001f11a:	f102 0e01 	add.w	lr, r2, #1
9001f11e:	4422      	add	r2, r4
9001f120:	9f06      	ldr	r7, [sp, #24]
9001f122:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
9001f126:	9a06      	ldr	r2, [sp, #24]
9001f128:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f12c:	eb02 0a05 	add.w	sl, r2, r5
9001f130:	4a13      	ldr	r2, [pc, #76]	@ (9001f180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001f132:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001f136:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001f13a:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001f13e:	00d2      	lsls	r2, r2, #3
9001f140:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f144:	ea49 0202 	orr.w	r2, r9, r2
9001f148:	f817 9005 	ldrb.w	r9, [r7, r5]
9001f14c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001f150:	f826 2b02 	strh.w	r2, [r6], #2
9001f154:	fa1f f28e 	uxth.w	r2, lr
9001f158:	e758      	b.n	9001f00c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001f15a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001f15e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001f162:	1a2d      	subs	r5, r5, r0
9001f164:	b2ad      	uxth	r5, r5
9001f166:	2d00      	cmp	r5, #0
9001f168:	bf18      	it	ne
9001f16a:	2000      	movne	r0, #0
9001f16c:	e732      	b.n	9001efd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001f16e:	4b05      	ldr	r3, [pc, #20]	@ (9001f184 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001f170:	6818      	ldr	r0, [r3, #0]
9001f172:	6803      	ldr	r3, [r0, #0]
9001f174:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f176:	4798      	blx	r3
9001f178:	b01f      	add	sp, #124	@ 0x7c
9001f17a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f17e:	bf00      	nop
9001f180:	fffff800 	.word	0xfffff800
9001f184:	240233d4 	.word	0x240233d4

9001f188 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001f188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f18c:	b091      	sub	sp, #68	@ 0x44
9001f18e:	469b      	mov	fp, r3
9001f190:	4616      	mov	r6, r2
9001f192:	f9b3 2000 	ldrsh.w	r2, [r3]
9001f196:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
9001f19a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001f19e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
9001f1a2:	4604      	mov	r4, r0
9001f1a4:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001f1a8:	4640      	mov	r0, r8
9001f1aa:	460d      	mov	r5, r1
9001f1ac:	4659      	mov	r1, fp
9001f1ae:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001f1b2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001f1b6:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
9001f1ba:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
9001f1be:	f7f1 fa5b 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
9001f1c2:	4631      	mov	r1, r6
9001f1c4:	4640      	mov	r0, r8
9001f1c6:	f7f1 fa57 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
9001f1ca:	4b74      	ldr	r3, [pc, #464]	@ (9001f39c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001f1cc:	8818      	ldrh	r0, [r3, #0]
9001f1ce:	4b74      	ldr	r3, [pc, #464]	@ (9001f3a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001f1d0:	b202      	sxth	r2, r0
9001f1d2:	8819      	ldrh	r1, [r3, #0]
9001f1d4:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001f1d8:	b20e      	sxth	r6, r1
9001f1da:	2b00      	cmp	r3, #0
9001f1dc:	da07      	bge.n	9001f1ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001f1de:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
9001f1e2:	4463      	add	r3, ip
9001f1e4:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
9001f1e8:	2300      	movs	r3, #0
9001f1ea:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
9001f1ee:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001f1f2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001f1f6:	1ad2      	subs	r2, r2, r3
9001f1f8:	4594      	cmp	ip, r2
9001f1fa:	bfc4      	itt	gt
9001f1fc:	1ac2      	subgt	r2, r0, r3
9001f1fe:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
9001f202:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001f206:	2a00      	cmp	r2, #0
9001f208:	da07      	bge.n	9001f21a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001f20a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9001f20e:	4462      	add	r2, ip
9001f210:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001f214:	2200      	movs	r2, #0
9001f216:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001f21a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9001f21e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001f222:	eba6 060a 	sub.w	r6, r6, sl
9001f226:	42b2      	cmp	r2, r6
9001f228:	bfc4      	itt	gt
9001f22a:	eba1 020a 	subgt.w	r2, r1, sl
9001f22e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
9001f232:	4a5c      	ldr	r2, [pc, #368]	@ (9001f3a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001f234:	7812      	ldrb	r2, [r2, #0]
9001f236:	b9a2      	cbnz	r2, 9001f262 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001f238:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001f23c:	4286      	cmp	r6, r0
9001f23e:	4640      	mov	r0, r8
9001f240:	9303      	str	r3, [sp, #12]
9001f242:	bf14      	ite	ne
9001f244:	2600      	movne	r6, #0
9001f246:	2601      	moveq	r6, #1
9001f248:	f7f1 fa59 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
9001f24c:	9b03      	ldr	r3, [sp, #12]
9001f24e:	b160      	cbz	r0, 9001f26a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001f250:	2300      	movs	r3, #0
9001f252:	8023      	strh	r3, [r4, #0]
9001f254:	8063      	strh	r3, [r4, #2]
9001f256:	80a3      	strh	r3, [r4, #4]
9001f258:	4620      	mov	r0, r4
9001f25a:	80e3      	strh	r3, [r4, #6]
9001f25c:	b011      	add	sp, #68	@ 0x44
9001f25e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f262:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001f266:	428e      	cmp	r6, r1
9001f268:	e7e9      	b.n	9001f23e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001f26a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001f26e:	a90e      	add	r1, sp, #56	@ 0x38
9001f270:	900e      	str	r0, [sp, #56]	@ 0x38
9001f272:	a80c      	add	r0, sp, #48	@ 0x30
9001f274:	9205      	str	r2, [sp, #20]
9001f276:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001f27a:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
9001f27e:	9206      	str	r2, [sp, #24]
9001f280:	f8bb 2000 	ldrh.w	r2, [fp]
9001f284:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
9001f288:	1a9b      	subs	r3, r3, r2
9001f28a:	b21b      	sxth	r3, r3
9001f28c:	9303      	str	r3, [sp, #12]
9001f28e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001f292:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9001f3ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001f296:	ebaa 0a03 	sub.w	sl, sl, r3
9001f29a:	fa0f f38a 	sxth.w	r3, sl
9001f29e:	9304      	str	r3, [sp, #16]
9001f2a0:	9b03      	ldr	r3, [sp, #12]
9001f2a2:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
9001f2a6:	9b04      	ldr	r3, [sp, #16]
9001f2a8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001f2ac:	9b05      	ldr	r3, [sp, #20]
9001f2ae:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001f2b2:	9b06      	ldr	r3, [sp, #24]
9001f2b4:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001f2b8:	f7f7 fb02 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f2bc:	4640      	mov	r0, r8
9001f2be:	f7f7 fad7 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f2c2:	a80e      	add	r0, sp, #56	@ 0x38
9001f2c4:	f7f7 fad4 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f2c8:	4b37      	ldr	r3, [pc, #220]	@ (9001f3a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001f2ca:	4628      	mov	r0, r5
9001f2cc:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
9001f2d0:	881b      	ldrh	r3, [r3, #0]
9001f2d2:	9307      	str	r3, [sp, #28]
9001f2d4:	682b      	ldr	r3, [r5, #0]
9001f2d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f2d8:	4798      	blx	r3
9001f2da:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
9001f2de:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001f2e2:	4681      	mov	r9, r0
9001f2e4:	f8db 0000 	ldr.w	r0, [fp]
9001f2e8:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001f2ec:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9001f2ee:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001f2f2:	6803      	ldr	r3, [r0, #0]
9001f2f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f2f6:	4798      	blx	r3
9001f2f8:	4607      	mov	r7, r0
9001f2fa:	f8db 0000 	ldr.w	r0, [fp]
9001f2fe:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
9001f302:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001f306:	6803      	ldr	r3, [r0, #0]
9001f308:	9109      	str	r1, [sp, #36]	@ 0x24
9001f30a:	9208      	str	r2, [sp, #32]
9001f30c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001f30e:	4798      	blx	r3
9001f310:	f010 0f01 	tst.w	r0, #1
9001f314:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001f318:	d012      	beq.n	9001f340 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001f31a:	f8db 0000 	ldr.w	r0, [fp]
9001f31e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
9001f322:	6803      	ldr	r3, [r0, #0]
9001f324:	9200      	str	r2, [sp, #0]
9001f326:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
9001f328:	462b      	mov	r3, r5
9001f32a:	e898 0006 	ldmia.w	r8, {r1, r2}
9001f32e:	47b0      	blx	r6
9001f330:	9b03      	ldr	r3, [sp, #12]
9001f332:	8023      	strh	r3, [r4, #0]
9001f334:	9b04      	ldr	r3, [sp, #16]
9001f336:	8063      	strh	r3, [r4, #2]
9001f338:	9b05      	ldr	r3, [sp, #20]
9001f33a:	80a3      	strh	r3, [r4, #4]
9001f33c:	9b06      	ldr	r3, [sp, #24]
9001f33e:	e78b      	b.n	9001f258 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001f340:	fb09 f202 	mul.w	r2, r9, r2
9001f344:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
9001f348:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001f34c:	440f      	add	r7, r1
9001f34e:	b166      	cbz	r6, 9001f36a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001f350:	9a07      	ldr	r2, [sp, #28]
9001f352:	4592      	cmp	sl, r2
9001f354:	d109      	bne.n	9001f36a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001f356:	f8db 0000 	ldr.w	r0, [fp]
9001f35a:	fb09 f303 	mul.w	r3, r9, r3
9001f35e:	4629      	mov	r1, r5
9001f360:	6802      	ldr	r2, [r0, #0]
9001f362:	6b56      	ldr	r6, [r2, #52]	@ 0x34
9001f364:	463a      	mov	r2, r7
9001f366:	47b0      	blx	r6
9001f368:	e7e2      	b.n	9001f330 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001f36a:	fb0a f303 	mul.w	r3, sl, r3
9001f36e:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001f372:	f8df b038 	ldr.w	fp, [pc, #56]	@ 9001f3ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001f376:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001f37a:	4545      	cmp	r5, r8
9001f37c:	d2d8      	bcs.n	9001f330 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001f37e:	f8db 0000 	ldr.w	r0, [fp]
9001f382:	4629      	mov	r1, r5
9001f384:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001f388:	4435      	add	r5, r6
9001f38a:	6802      	ldr	r2, [r0, #0]
9001f38c:	005b      	lsls	r3, r3, #1
9001f38e:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
9001f392:	463a      	mov	r2, r7
9001f394:	47d0      	blx	sl
9001f396:	444f      	add	r7, r9
9001f398:	e7ef      	b.n	9001f37a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001f39a:	bf00      	nop
9001f39c:	240233c8 	.word	0x240233c8
9001f3a0:	240233ca 	.word	0x240233ca
9001f3a4:	240233cc 	.word	0x240233cc
9001f3a8:	240233ce 	.word	0x240233ce
9001f3ac:	240233d4 	.word	0x240233d4

9001f3b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001f3b0:	b5f0      	push	{r4, r5, r6, r7, lr}
9001f3b2:	4606      	mov	r6, r0
9001f3b4:	b087      	sub	sp, #28
9001f3b6:	460c      	mov	r4, r1
9001f3b8:	4617      	mov	r7, r2
9001f3ba:	461d      	mov	r5, r3
9001f3bc:	b333      	cbz	r3, 9001f40c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001f3be:	4608      	mov	r0, r1
9001f3c0:	f7f1 f99d 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
9001f3c4:	bb10      	cbnz	r0, 9001f40c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001f3c6:	6820      	ldr	r0, [r4, #0]
9001f3c8:	ab04      	add	r3, sp, #16
9001f3ca:	6861      	ldr	r1, [r4, #4]
9001f3cc:	4c1b      	ldr	r4, [pc, #108]	@ (9001f43c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001f3ce:	c303      	stmia	r3!, {r0, r1}
9001f3d0:	a804      	add	r0, sp, #16
9001f3d2:	f7f7 fa4d 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f3d6:	6820      	ldr	r0, [r4, #0]
9001f3d8:	6803      	ldr	r3, [r0, #0]
9001f3da:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001f3dc:	4798      	blx	r3
9001f3de:	2dff      	cmp	r5, #255	@ 0xff
9001f3e0:	d016      	beq.n	9001f410 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001f3e2:	f010 0f08 	tst.w	r0, #8
9001f3e6:	6820      	ldr	r0, [r4, #0]
9001f3e8:	d015      	beq.n	9001f416 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001f3ea:	2400      	movs	r4, #0
9001f3ec:	6801      	ldr	r1, [r0, #0]
9001f3ee:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001f3f2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001f3f6:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001f3fa:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001f3fe:	9401      	str	r4, [sp, #4]
9001f400:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001f404:	9400      	str	r4, [sp, #0]
9001f406:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
9001f408:	4639      	mov	r1, r7
9001f40a:	47a0      	blx	r4
9001f40c:	b007      	add	sp, #28
9001f40e:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001f410:	f010 0f02 	tst.w	r0, #2
9001f414:	e7e7      	b.n	9001f3e6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001f416:	6803      	ldr	r3, [r0, #0]
9001f418:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f41a:	4798      	blx	r3
9001f41c:	4b08      	ldr	r3, [pc, #32]	@ (9001f440 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001f41e:	4601      	mov	r1, r0
9001f420:	4630      	mov	r0, r6
9001f422:	881a      	ldrh	r2, [r3, #0]
9001f424:	6833      	ldr	r3, [r6, #0]
9001f426:	e9cd 7500 	strd	r7, r5, [sp]
9001f42a:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
9001f42c:	ab04      	add	r3, sp, #16
9001f42e:	47a8      	blx	r5
9001f430:	6820      	ldr	r0, [r4, #0]
9001f432:	6803      	ldr	r3, [r0, #0]
9001f434:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f436:	4798      	blx	r3
9001f438:	e7e8      	b.n	9001f40c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001f43a:	bf00      	nop
9001f43c:	240233d4 	.word	0x240233d4
9001f440:	240233ce 	.word	0x240233ce

9001f444 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001f444:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001f448:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
9001f44c:	4688      	mov	r8, r1
9001f44e:	4614      	mov	r4, r2
9001f450:	461d      	mov	r5, r3
9001f452:	9e08      	ldr	r6, [sp, #32]
9001f454:	2f00      	cmp	r7, #0
9001f456:	f000 80ab 	beq.w	9001f5b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f45a:	4618      	mov	r0, r3
9001f45c:	f7f1 f94f 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
9001f460:	2800      	cmp	r0, #0
9001f462:	f040 80a5 	bne.w	9001f5b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f466:	f9b5 1000 	ldrsh.w	r1, [r5]
9001f46a:	2fff      	cmp	r7, #255	@ 0xff
9001f46c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001f470:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001f474:	fb04 1303 	mla	r3, r4, r3, r1
9001f478:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001f47c:	eba4 0200 	sub.w	r2, r4, r0
9001f480:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001f484:	fb04 f505 	mul.w	r5, r4, r5
9001f488:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001f48c:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001f490:	d04a      	beq.n	9001f528 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001f492:	b2bc      	uxth	r4, r7
9001f494:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
9001f498:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001f49c:	fa5f f788 	uxtb.w	r7, r8
9001f4a0:	b2f3      	uxtb	r3, r6
9001f4a2:	0040      	lsls	r0, r0, #1
9001f4a4:	fb0e fe04 	mul.w	lr, lr, r4
9001f4a8:	4367      	muls	r7, r4
9001f4aa:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001f4ae:	4363      	muls	r3, r4
9001f4b0:	fa1f fc8c 	uxth.w	ip, ip
9001f4b4:	42a9      	cmp	r1, r5
9001f4b6:	d27b      	bcs.n	9001f5b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f4b8:	eb01 0900 	add.w	r9, r1, r0
9001f4bc:	4549      	cmp	r1, r9
9001f4be:	d231      	bcs.n	9001f524 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001f4c0:	880a      	ldrh	r2, [r1, #0]
9001f4c2:	1214      	asrs	r4, r2, #8
9001f4c4:	10d6      	asrs	r6, r2, #3
9001f4c6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9001f4ca:	00d2      	lsls	r2, r2, #3
9001f4cc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001f4d0:	b2d2      	uxtb	r2, r2
9001f4d2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001f4d6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f4da:	fb14 f40c 	smulbb	r4, r4, ip
9001f4de:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001f4e2:	fb12 f20c 	smulbb	r2, r2, ip
9001f4e6:	fb16 f60c 	smulbb	r6, r6, ip
9001f4ea:	4474      	add	r4, lr
9001f4ec:	441a      	add	r2, r3
9001f4ee:	b2a4      	uxth	r4, r4
9001f4f0:	443e      	add	r6, r7
9001f4f2:	b292      	uxth	r2, r2
9001f4f4:	f104 0a01 	add.w	sl, r4, #1
9001f4f8:	b2b6      	uxth	r6, r6
9001f4fa:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001f4fe:	f102 0a01 	add.w	sl, r2, #1
9001f502:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001f506:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9001f50a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f50e:	4322      	orrs	r2, r4
9001f510:	1c74      	adds	r4, r6, #1
9001f512:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001f516:	0976      	lsrs	r6, r6, #5
9001f518:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001f51c:	4332      	orrs	r2, r6
9001f51e:	f821 2b02 	strh.w	r2, [r1], #2
9001f522:	e7cb      	b.n	9001f4bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001f524:	4441      	add	r1, r8
9001f526:	e7c5      	b.n	9001f4b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001f528:	0973      	lsrs	r3, r6, #5
9001f52a:	4f22      	ldr	r7, [pc, #136]	@ (9001f5b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001f52c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001f530:	ea08 0707 	and.w	r7, r8, r7
9001f534:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001f538:	433b      	orrs	r3, r7
9001f53a:	07e7      	lsls	r7, r4, #31
9001f53c:	ea43 0306 	orr.w	r3, r3, r6
9001f540:	b29b      	uxth	r3, r3
9001f542:	d50b      	bpl.n	9001f55c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001f544:	0040      	lsls	r0, r0, #1
9001f546:	0052      	lsls	r2, r2, #1
9001f548:	42a9      	cmp	r1, r5
9001f54a:	d231      	bcs.n	9001f5b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f54c:	180c      	adds	r4, r1, r0
9001f54e:	42a1      	cmp	r1, r4
9001f550:	d202      	bcs.n	9001f558 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001f552:	f821 3b02 	strh.w	r3, [r1], #2
9001f556:	e7fa      	b.n	9001f54e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001f558:	4411      	add	r1, r2
9001f55a:	e7f5      	b.n	9001f548 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001f55c:	078e      	lsls	r6, r1, #30
9001f55e:	d008      	beq.n	9001f572 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001f560:	0066      	lsls	r6, r4, #1
9001f562:	460a      	mov	r2, r1
9001f564:	42aa      	cmp	r2, r5
9001f566:	d202      	bcs.n	9001f56e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001f568:	8013      	strh	r3, [r2, #0]
9001f56a:	4432      	add	r2, r6
9001f56c:	e7fa      	b.n	9001f564 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001f56e:	3102      	adds	r1, #2
9001f570:	3801      	subs	r0, #1
9001f572:	07c2      	lsls	r2, r0, #31
9001f574:	d50b      	bpl.n	9001f58e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001f576:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
9001f57a:	0066      	lsls	r6, r4, #1
9001f57c:	3a01      	subs	r2, #1
9001f57e:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001f582:	42aa      	cmp	r2, r5
9001f584:	d202      	bcs.n	9001f58c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001f586:	8013      	strh	r3, [r2, #0]
9001f588:	4432      	add	r2, r6
9001f58a:	e7fa      	b.n	9001f582 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001f58c:	3801      	subs	r0, #1
9001f58e:	b178      	cbz	r0, 9001f5b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f590:	1040      	asrs	r0, r0, #1
9001f592:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001f596:	0080      	lsls	r0, r0, #2
9001f598:	0064      	lsls	r4, r4, #1
9001f59a:	42a9      	cmp	r1, r5
9001f59c:	d208      	bcs.n	9001f5b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f59e:	180e      	adds	r6, r1, r0
9001f5a0:	460a      	mov	r2, r1
9001f5a2:	42b2      	cmp	r2, r6
9001f5a4:	d202      	bcs.n	9001f5ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001f5a6:	f842 3b04 	str.w	r3, [r2], #4
9001f5aa:	e7fa      	b.n	9001f5a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001f5ac:	4421      	add	r1, r4
9001f5ae:	e7f4      	b.n	9001f59a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001f5b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001f5b4:	00fff800 	.word	0x00fff800

9001f5b8 <_ZN8touchgfx8LCD16bppC1Ev>:
9001f5b8:	2200      	movs	r2, #0
9001f5ba:	4912      	ldr	r1, [pc, #72]	@ (9001f604 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001f5bc:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001f5c0:	6001      	str	r1, [r0, #0]
9001f5c2:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001f5c6:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001f5ca:	e9c0 2207 	strd	r2, r2, [r0, #28]
9001f5ce:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
9001f5d2:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
9001f5d6:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
9001f5da:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
9001f5de:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
9001f5e2:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
9001f5e6:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
9001f5ea:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
9001f5ee:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
9001f5f2:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
9001f5f6:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
9001f5fa:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
9001f5fe:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
9001f602:	4770      	bx	lr
9001f604:	9002e028 	.word	0x9002e028

9001f608 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001f608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f60c:	b08d      	sub	sp, #52	@ 0x34
9001f60e:	460d      	mov	r5, r1
9001f610:	4604      	mov	r4, r0
9001f612:	4699      	mov	r9, r3
9001f614:	6808      	ldr	r0, [r1, #0]
9001f616:	ab08      	add	r3, sp, #32
9001f618:	6849      	ldr	r1, [r1, #4]
9001f61a:	c303      	stmia	r3!, {r0, r1}
9001f61c:	6810      	ldr	r0, [r2, #0]
9001f61e:	ab0a      	add	r3, sp, #40	@ 0x28
9001f620:	6851      	ldr	r1, [r2, #4]
9001f622:	c303      	stmia	r3!, {r0, r1}
9001f624:	a808      	add	r0, sp, #32
9001f626:	f7f7 f923 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f62a:	4629      	mov	r1, r5
9001f62c:	a80a      	add	r0, sp, #40	@ 0x28
9001f62e:	4d67      	ldr	r5, [pc, #412]	@ (9001f7cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001f630:	f7f7 f946 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f634:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
9001f638:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
9001f63c:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
9001f640:	6828      	ldr	r0, [r5, #0]
9001f642:	fb11 2103 	smlabb	r1, r1, r3, r2
9001f646:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
9001f64a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001f64e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001f652:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001f656:	440a      	add	r2, r1
9001f658:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001f65c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
9001f660:	4413      	add	r3, r2
9001f662:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001f666:	6803      	ldr	r3, [r0, #0]
9001f668:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001f66a:	4798      	blx	r3
9001f66c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001f670:	d119      	bne.n	9001f6a6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001f672:	f010 0f20 	tst.w	r0, #32
9001f676:	6828      	ldr	r0, [r5, #0]
9001f678:	d018      	beq.n	9001f6ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001f67a:	2500      	movs	r5, #0
9001f67c:	6801      	ldr	r1, [r0, #0]
9001f67e:	b2b6      	uxth	r6, r6
9001f680:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001f684:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001f688:	9601      	str	r6, [sp, #4]
9001f68a:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001f68e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
9001f692:	9502      	str	r5, [sp, #8]
9001f694:	fa1f f588 	uxth.w	r5, r8
9001f698:	9500      	str	r5, [sp, #0]
9001f69a:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
9001f69c:	4621      	mov	r1, r4
9001f69e:	47a8      	blx	r5
9001f6a0:	b00d      	add	sp, #52	@ 0x34
9001f6a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f6a6:	f010 0f40 	tst.w	r0, #64	@ 0x40
9001f6aa:	e7e4      	b.n	9001f676 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001f6ac:	6803      	ldr	r3, [r0, #0]
9001f6ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f6b0:	4798      	blx	r3
9001f6b2:	4947      	ldr	r1, [pc, #284]	@ (9001f7d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001f6b4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001f6b8:	880b      	ldrh	r3, [r1, #0]
9001f6ba:	468a      	mov	sl, r1
9001f6bc:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
9001f6c0:	fb03 5202 	mla	r2, r3, r2, r5
9001f6c4:	4373      	muls	r3, r6
9001f6c6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f6ca:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f6ce:	9307      	str	r3, [sp, #28]
9001f6d0:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001f6d4:	9306      	str	r3, [sp, #24]
9001f6d6:	9b07      	ldr	r3, [sp, #28]
9001f6d8:	4298      	cmp	r0, r3
9001f6da:	d270      	bcs.n	9001f7be <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001f6dc:	9b06      	ldr	r3, [sp, #24]
9001f6de:	4621      	mov	r1, r4
9001f6e0:	eb00 0b03 	add.w	fp, r0, r3
9001f6e4:	4558      	cmp	r0, fp
9001f6e6:	d25d      	bcs.n	9001f7a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001f6e8:	f851 4b04 	ldr.w	r4, [r1], #4
9001f6ec:	0e23      	lsrs	r3, r4, #24
9001f6ee:	d014      	beq.n	9001f71a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001f6f0:	2bff      	cmp	r3, #255	@ 0xff
9001f6f2:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001f6f6:	d112      	bne.n	9001f71e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001f6f8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001f6fc:	d10f      	bne.n	9001f71e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001f6fe:	0963      	lsrs	r3, r4, #5
9001f700:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
9001f704:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001f708:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001f70c:	f02c 0c07 	bic.w	ip, ip, #7
9001f710:	ea43 0c0c 	orr.w	ip, r3, ip
9001f714:	ea4c 0404 	orr.w	r4, ip, r4
9001f718:	8004      	strh	r4, [r0, #0]
9001f71a:	3002      	adds	r0, #2
9001f71c:	e7e2      	b.n	9001f6e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001f71e:	fb09 f303 	mul.w	r3, r9, r3
9001f722:	8807      	ldrh	r7, [r0, #0]
9001f724:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001f728:	fa5f fc8c 	uxtb.w	ip, ip
9001f72c:	1c5a      	adds	r2, r3, #1
9001f72e:	123e      	asrs	r6, r7, #8
9001f730:	10fd      	asrs	r5, r7, #3
9001f732:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001f736:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f73a:	00ff      	lsls	r7, r7, #3
9001f73c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f740:	1212      	asrs	r2, r2, #8
9001f742:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f746:	b293      	uxth	r3, r2
9001f748:	43d2      	mvns	r2, r2
9001f74a:	b2ff      	uxtb	r7, r7
9001f74c:	fb1e fe03 	smulbb	lr, lr, r3
9001f750:	b2d2      	uxtb	r2, r2
9001f752:	fb1c fc03 	smulbb	ip, ip, r3
9001f756:	b2e4      	uxtb	r4, r4
9001f758:	fb06 e602 	mla	r6, r6, r2, lr
9001f75c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f760:	fb14 f403 	smulbb	r4, r4, r3
9001f764:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001f768:	b2b6      	uxth	r6, r6
9001f76a:	fb05 c502 	mla	r5, r5, r2, ip
9001f76e:	fb07 4702 	mla	r7, r7, r2, r4
9001f772:	f106 0e01 	add.w	lr, r6, #1
9001f776:	b2ad      	uxth	r5, r5
9001f778:	b2bf      	uxth	r7, r7
9001f77a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001f77e:	f105 0c01 	add.w	ip, r5, #1
9001f782:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
9001f786:	1c7e      	adds	r6, r7, #1
9001f788:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001f78c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001f790:	096d      	lsrs	r5, r5, #5
9001f792:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001f796:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f79a:	ea46 060e 	orr.w	r6, r6, lr
9001f79e:	432e      	orrs	r6, r5
9001f7a0:	8006      	strh	r6, [r0, #0]
9001f7a2:	e7ba      	b.n	9001f71a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001f7a4:	f8ba 3000 	ldrh.w	r3, [sl]
9001f7a8:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
9001f7ac:	eba3 0308 	sub.w	r3, r3, r8
9001f7b0:	eba4 0408 	sub.w	r4, r4, r8
9001f7b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f7b8:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001f7bc:	e78b      	b.n	9001f6d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001f7be:	4b03      	ldr	r3, [pc, #12]	@ (9001f7cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001f7c0:	6818      	ldr	r0, [r3, #0]
9001f7c2:	6803      	ldr	r3, [r0, #0]
9001f7c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f7c6:	4798      	blx	r3
9001f7c8:	e76a      	b.n	9001f6a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001f7ca:	bf00      	nop
9001f7cc:	240233d4 	.word	0x240233d4
9001f7d0:	240233ce 	.word	0x240233ce

9001f7d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001f7d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001f7d8:	b085      	sub	sp, #20
9001f7da:	6810      	ldr	r0, [r2, #0]
9001f7dc:	460c      	mov	r4, r1
9001f7de:	6851      	ldr	r1, [r2, #4]
9001f7e0:	466d      	mov	r5, sp
9001f7e2:	4616      	mov	r6, r2
9001f7e4:	c503      	stmia	r5!, {r0, r1}
9001f7e6:	6818      	ldr	r0, [r3, #0]
9001f7e8:	6859      	ldr	r1, [r3, #4]
9001f7ea:	c503      	stmia	r5!, {r0, r1}
9001f7ec:	4668      	mov	r0, sp
9001f7ee:	4d2e      	ldr	r5, [pc, #184]	@ (9001f8a8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001f7f0:	f7f7 f83e 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f7f4:	4631      	mov	r1, r6
9001f7f6:	a802      	add	r0, sp, #8
9001f7f8:	4e2c      	ldr	r6, [pc, #176]	@ (9001f8ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001f7fa:	f7f7 f861 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f7fe:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001f802:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001f806:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001f80a:	6828      	ldr	r0, [r5, #0]
9001f80c:	fb11 2103 	smlabb	r1, r1, r3, r2
9001f810:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001f814:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001f818:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001f81c:	f8bd 1000 	ldrh.w	r1, [sp]
9001f820:	440a      	add	r2, r1
9001f822:	f8ad 2008 	strh.w	r2, [sp, #8]
9001f826:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001f82a:	4413      	add	r3, r2
9001f82c:	f8ad 300a 	strh.w	r3, [sp, #10]
9001f830:	6803      	ldr	r3, [r0, #0]
9001f832:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f834:	4798      	blx	r3
9001f836:	8833      	ldrh	r3, [r6, #0]
9001f838:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001f83c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001f840:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001f844:	f8df e068 	ldr.w	lr, [pc, #104]	@ 9001f8b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001f848:	fb03 1202 	mla	r2, r3, r2, r1
9001f84c:	fb08 f303 	mul.w	r3, r8, r3
9001f850:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f854:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f858:	4298      	cmp	r0, r3
9001f85a:	d21d      	bcs.n	9001f898 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001f85c:	eb00 080c 	add.w	r8, r0, ip
9001f860:	4540      	cmp	r0, r8
9001f862:	d20f      	bcs.n	9001f884 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001f864:	f854 1b04 	ldr.w	r1, [r4], #4
9001f868:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001f86c:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001f870:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001f874:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001f878:	ea42 0209 	orr.w	r2, r2, r9
9001f87c:	430a      	orrs	r2, r1
9001f87e:	f820 2b02 	strh.w	r2, [r0], #2
9001f882:	e7ed      	b.n	9001f860 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001f884:	8832      	ldrh	r2, [r6, #0]
9001f886:	1bd2      	subs	r2, r2, r7
9001f888:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f88c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001f890:	1bd2      	subs	r2, r2, r7
9001f892:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001f896:	e7df      	b.n	9001f858 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001f898:	6828      	ldr	r0, [r5, #0]
9001f89a:	6803      	ldr	r3, [r0, #0]
9001f89c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f89e:	4798      	blx	r3
9001f8a0:	b005      	add	sp, #20
9001f8a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001f8a6:	bf00      	nop
9001f8a8:	240233d4 	.word	0x240233d4
9001f8ac:	240233ce 	.word	0x240233ce
9001f8b0:	fffff800 	.word	0xfffff800

9001f8b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001f8b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001f8b8:	b08e      	sub	sp, #56	@ 0x38
9001f8ba:	460e      	mov	r6, r1
9001f8bc:	4604      	mov	r4, r0
9001f8be:	461d      	mov	r5, r3
9001f8c0:	6808      	ldr	r0, [r1, #0]
9001f8c2:	ab0a      	add	r3, sp, #40	@ 0x28
9001f8c4:	6849      	ldr	r1, [r1, #4]
9001f8c6:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 9001fa9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001f8ca:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 9001faa0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001f8ce:	c303      	stmia	r3!, {r0, r1}
9001f8d0:	6810      	ldr	r0, [r2, #0]
9001f8d2:	ab0c      	add	r3, sp, #48	@ 0x30
9001f8d4:	6851      	ldr	r1, [r2, #4]
9001f8d6:	c303      	stmia	r3!, {r0, r1}
9001f8d8:	a80a      	add	r0, sp, #40	@ 0x28
9001f8da:	f7f6 ffc9 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f8de:	4631      	mov	r1, r6
9001f8e0:	a80c      	add	r0, sp, #48	@ 0x30
9001f8e2:	f7f6 ffed 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f8e6:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001f8ea:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001f8ee:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001f8f2:	f8d8 0000 	ldr.w	r0, [r8]
9001f8f6:	fb11 2103 	smlabb	r1, r1, r3, r2
9001f8fa:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
9001f8fe:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001f902:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001f906:	440c      	add	r4, r1
9001f908:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
9001f90c:	440a      	add	r2, r1
9001f90e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9001f912:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001f916:	4413      	add	r3, r2
9001f918:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001f91c:	6803      	ldr	r3, [r0, #0]
9001f91e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001f920:	4798      	blx	r3
9001f922:	2dff      	cmp	r5, #255	@ 0xff
9001f924:	d124      	bne.n	9001f970 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001f926:	f010 0f01 	tst.w	r0, #1
9001f92a:	f8d8 0000 	ldr.w	r0, [r8]
9001f92e:	d022      	beq.n	9001f976 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001f930:	2100      	movs	r1, #0
9001f932:	f04f 0e01 	mov.w	lr, #1
9001f936:	f8d0 c000 	ldr.w	ip, [r0]
9001f93a:	b2b6      	uxth	r6, r6
9001f93c:	f8cd e018 	str.w	lr, [sp, #24]
9001f940:	b2bf      	uxth	r7, r7
9001f942:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
9001f946:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
9001f94a:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001f94e:	f8b9 e000 	ldrh.w	lr, [r9]
9001f952:	9503      	str	r5, [sp, #12]
9001f954:	9601      	str	r6, [sp, #4]
9001f956:	9700      	str	r7, [sp, #0]
9001f958:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001f95c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001f960:	9102      	str	r1, [sp, #8]
9001f962:	4621      	mov	r1, r4
9001f964:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
9001f968:	47a8      	blx	r5
9001f96a:	b00e      	add	sp, #56	@ 0x38
9001f96c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001f970:	f010 0f04 	tst.w	r0, #4
9001f974:	e7d9      	b.n	9001f92a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001f976:	6803      	ldr	r3, [r0, #0]
9001f978:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f97a:	4798      	blx	r3
9001f97c:	f8b9 3000 	ldrh.w	r3, [r9]
9001f980:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001f984:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001f988:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
9001f98c:	435e      	muls	r6, r3
9001f98e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001f992:	2dff      	cmp	r5, #255	@ 0xff
9001f994:	fb03 1202 	mla	r2, r3, r2, r1
9001f998:	ebac 0c07 	sub.w	ip, ip, r7
9001f99c:	eba3 0707 	sub.w	r7, r3, r7
9001f9a0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f9a4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001f9a8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001f9ac:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001f9b0:	d049      	beq.n	9001fa46 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001f9b2:	43eb      	mvns	r3, r5
9001f9b4:	fa1f f985 	uxth.w	r9, r5
9001f9b8:	b2db      	uxtb	r3, r3
9001f9ba:	42b0      	cmp	r0, r6
9001f9bc:	d266      	bcs.n	9001fa8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001f9be:	eb00 0a0e 	add.w	sl, r0, lr
9001f9c2:	4550      	cmp	r0, sl
9001f9c4:	4621      	mov	r1, r4
9001f9c6:	f104 0403 	add.w	r4, r4, #3
9001f9ca:	d25b      	bcs.n	9001fa84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001f9cc:	8802      	ldrh	r2, [r0, #0]
9001f9ce:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001f9d2:	ea4f 2822 	mov.w	r8, r2, asr #8
9001f9d6:	fb11 f109 	smulbb	r1, r1, r9
9001f9da:	10d5      	asrs	r5, r2, #3
9001f9dc:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001f9e0:	00d2      	lsls	r2, r2, #3
9001f9e2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f9e6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001f9ea:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f9ee:	fb08 1803 	mla	r8, r8, r3, r1
9001f9f2:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001f9f6:	b2d2      	uxtb	r2, r2
9001f9f8:	fb11 f109 	smulbb	r1, r1, r9
9001f9fc:	fa1f f888 	uxth.w	r8, r8
9001fa00:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001fa04:	fb05 1503 	mla	r5, r5, r3, r1
9001fa08:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001fa0c:	fb11 f109 	smulbb	r1, r1, r9
9001fa10:	b2ad      	uxth	r5, r5
9001fa12:	fb02 1203 	mla	r2, r2, r3, r1
9001fa16:	f108 0101 	add.w	r1, r8, #1
9001fa1a:	b292      	uxth	r2, r2
9001fa1c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001fa20:	1c51      	adds	r1, r2, #1
9001fa22:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001fa26:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001fa2a:	1c69      	adds	r1, r5, #1
9001fa2c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001fa30:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001fa34:	096d      	lsrs	r5, r5, #5
9001fa36:	ea42 0208 	orr.w	r2, r2, r8
9001fa3a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001fa3e:	432a      	orrs	r2, r5
9001fa40:	f820 2b02 	strh.w	r2, [r0], #2
9001fa44:	e7bd      	b.n	9001f9c2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001fa46:	4a14      	ldr	r2, [pc, #80]	@ (9001fa98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001fa48:	42b0      	cmp	r0, r6
9001fa4a:	d21f      	bcs.n	9001fa8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001fa4c:	eb00 050e 	add.w	r5, r0, lr
9001fa50:	42a8      	cmp	r0, r5
9001fa52:	4621      	mov	r1, r4
9001fa54:	f104 0403 	add.w	r4, r4, #3
9001fa58:	d210      	bcs.n	9001fa7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001fa5a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001fa5e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001fa62:	00db      	lsls	r3, r3, #3
9001fa64:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001fa68:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001fa6c:	430b      	orrs	r3, r1
9001fa6e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001fa72:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001fa76:	f820 3b02 	strh.w	r3, [r0], #2
9001fa7a:	e7e9      	b.n	9001fa50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001fa7c:	4438      	add	r0, r7
9001fa7e:	eb01 040c 	add.w	r4, r1, ip
9001fa82:	e7e1      	b.n	9001fa48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001fa84:	4438      	add	r0, r7
9001fa86:	eb01 040c 	add.w	r4, r1, ip
9001fa8a:	e796      	b.n	9001f9ba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001fa8c:	4b03      	ldr	r3, [pc, #12]	@ (9001fa9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001fa8e:	6818      	ldr	r0, [r3, #0]
9001fa90:	6803      	ldr	r3, [r0, #0]
9001fa92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fa94:	4798      	blx	r3
9001fa96:	e768      	b.n	9001f96a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001fa98:	fffff800 	.word	0xfffff800
9001fa9c:	240233d4 	.word	0x240233d4
9001faa0:	240233ce 	.word	0x240233ce

9001faa4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001faa4:	b4f0      	push	{r4, r5, r6, r7}
9001faa6:	4616      	mov	r6, r2
9001faa8:	461c      	mov	r4, r3
9001faaa:	460d      	mov	r5, r1
9001faac:	9a04      	ldr	r2, [sp, #16]
9001faae:	2e01      	cmp	r6, #1
9001fab0:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001fab4:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001fab8:	d012      	beq.n	9001fae0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001faba:	d303      	bcc.n	9001fac4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001fabc:	2e02      	cmp	r6, #2
9001fabe:	d00a      	beq.n	9001fad6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001fac0:	bcf0      	pop	{r4, r5, r6, r7}
9001fac2:	4770      	bx	lr
9001fac4:	6805      	ldr	r5, [r0, #0]
9001fac6:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001faca:	68ed      	ldr	r5, [r5, #12]
9001facc:	4613      	mov	r3, r2
9001face:	4622      	mov	r2, r4
9001fad0:	46ac      	mov	ip, r5
9001fad2:	bcf0      	pop	{r4, r5, r6, r7}
9001fad4:	4760      	bx	ip
9001fad6:	4621      	mov	r1, r4
9001fad8:	4628      	mov	r0, r5
9001fada:	bcf0      	pop	{r4, r5, r6, r7}
9001fadc:	f7ff bd94 	b.w	9001f608 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001fae0:	4621      	mov	r1, r4
9001fae2:	4628      	mov	r0, r5
9001fae4:	bcf0      	pop	{r4, r5, r6, r7}
9001fae6:	f7ff bee5 	b.w	9001f8b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001faec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001faec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001faf0:	b093      	sub	sp, #76	@ 0x4c
9001faf2:	4681      	mov	r9, r0
9001faf4:	4688      	mov	r8, r1
9001faf6:	6810      	ldr	r0, [r2, #0]
9001faf8:	6851      	ldr	r1, [r2, #4]
9001fafa:	ac0e      	add	r4, sp, #56	@ 0x38
9001fafc:	4616      	mov	r6, r2
9001fafe:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
9001fb02:	4f6b      	ldr	r7, [pc, #428]	@ (9001fcb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001fb04:	c403      	stmia	r4!, {r0, r1}
9001fb06:	6818      	ldr	r0, [r3, #0]
9001fb08:	ac10      	add	r4, sp, #64	@ 0x40
9001fb0a:	6859      	ldr	r1, [r3, #4]
9001fb0c:	c403      	stmia	r4!, {r0, r1}
9001fb0e:	a80e      	add	r0, sp, #56	@ 0x38
9001fb10:	f7f6 feae 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fb14:	4631      	mov	r1, r6
9001fb16:	a810      	add	r0, sp, #64	@ 0x40
9001fb18:	4e66      	ldr	r6, [pc, #408]	@ (9001fcb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001fb1a:	f7f6 fed1 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fb1e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001fb22:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001fb26:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
9001fb2a:	6830      	ldr	r0, [r6, #0]
9001fb2c:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fb30:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
9001fb34:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001fb38:	4489      	add	r9, r1
9001fb3a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
9001fb3e:	440a      	add	r2, r1
9001fb40:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
9001fb44:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001fb48:	4413      	add	r3, r2
9001fb4a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001fb4e:	6803      	ldr	r3, [r0, #0]
9001fb50:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001fb52:	4798      	blx	r3
9001fb54:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001fb58:	6830      	ldr	r0, [r6, #0]
9001fb5a:	d01d      	beq.n	9001fb98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001fb5c:	2200      	movs	r2, #0
9001fb5e:	6801      	ldr	r1, [r0, #0]
9001fb60:	b2a4      	uxth	r4, r4
9001fb62:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
9001fb66:	b2ad      	uxth	r5, r5
9001fb68:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001fb6c:	220b      	movs	r2, #11
9001fb6e:	9207      	str	r2, [sp, #28]
9001fb70:	883a      	ldrh	r2, [r7, #0]
9001fb72:	9502      	str	r5, [sp, #8]
9001fb74:	9206      	str	r2, [sp, #24]
9001fb76:	2201      	movs	r2, #1
9001fb78:	9401      	str	r4, [sp, #4]
9001fb7a:	e9cd a204 	strd	sl, r2, [sp, #16]
9001fb7e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
9001fb82:	9203      	str	r2, [sp, #12]
9001fb84:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
9001fb88:	9200      	str	r2, [sp, #0]
9001fb8a:	4642      	mov	r2, r8
9001fb8c:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
9001fb8e:	4649      	mov	r1, r9
9001fb90:	47a0      	blx	r4
9001fb92:	b013      	add	sp, #76	@ 0x4c
9001fb94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fb98:	6803      	ldr	r3, [r0, #0]
9001fb9a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001fb9c:	4798      	blx	r3
9001fb9e:	883b      	ldrh	r3, [r7, #0]
9001fba0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001fba4:	f04f 0e04 	mov.w	lr, #4
9001fba8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
9001fbac:	435d      	muls	r5, r3
9001fbae:	fb03 1202 	mla	r2, r3, r2, r1
9001fbb2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fbb6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001fbba:	920c      	str	r2, [sp, #48]	@ 0x30
9001fbbc:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001fbc0:	1b12      	subs	r2, r2, r4
9001fbc2:	920d      	str	r2, [sp, #52]	@ 0x34
9001fbc4:	0062      	lsls	r2, r4, #1
9001fbc6:	1b1c      	subs	r4, r3, r4
9001fbc8:	920a      	str	r2, [sp, #40]	@ 0x28
9001fbca:	0063      	lsls	r3, r4, #1
9001fbcc:	930b      	str	r3, [sp, #44]	@ 0x2c
9001fbce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001fbd0:	4298      	cmp	r0, r3
9001fbd2:	d266      	bcs.n	9001fca2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001fbd4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001fbd6:	eb00 0b03 	add.w	fp, r0, r3
9001fbda:	4558      	cmp	r0, fp
9001fbdc:	d25c      	bcs.n	9001fc98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001fbde:	f819 3b01 	ldrb.w	r3, [r9], #1
9001fbe2:	fb1e e303 	smlabb	r3, lr, r3, lr
9001fbe6:	f858 2003 	ldr.w	r2, [r8, r3]
9001fbea:	0e11      	lsrs	r1, r2, #24
9001fbec:	d012      	beq.n	9001fc14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001fbee:	29ff      	cmp	r1, #255	@ 0xff
9001fbf0:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001fbf4:	d110      	bne.n	9001fc18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001fbf6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001fbfa:	d10d      	bne.n	9001fc18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001fbfc:	0953      	lsrs	r3, r2, #5
9001fbfe:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
9001fc02:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001fc06:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001fc0a:	f027 0707 	bic.w	r7, r7, #7
9001fc0e:	431f      	orrs	r7, r3
9001fc10:	433a      	orrs	r2, r7
9001fc12:	8002      	strh	r2, [r0, #0]
9001fc14:	3002      	adds	r0, #2
9001fc16:	e7e0      	b.n	9001fbda <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001fc18:	fb0a f101 	mul.w	r1, sl, r1
9001fc1c:	8806      	ldrh	r6, [r0, #0]
9001fc1e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001fc22:	b2d2      	uxtb	r2, r2
9001fc24:	1c4b      	adds	r3, r1, #1
9001fc26:	1235      	asrs	r5, r6, #8
9001fc28:	10f4      	asrs	r4, r6, #3
9001fc2a:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001fc2e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001fc32:	00f6      	lsls	r6, r6, #3
9001fc34:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
9001fc38:	121b      	asrs	r3, r3, #8
9001fc3a:	b2f6      	uxtb	r6, r6
9001fc3c:	b299      	uxth	r1, r3
9001fc3e:	43db      	mvns	r3, r3
9001fc40:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001fc44:	fb1c fc01 	smulbb	ip, ip, r1
9001fc48:	b2db      	uxtb	r3, r3
9001fc4a:	fb12 f201 	smulbb	r2, r2, r1
9001fc4e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001fc52:	fb05 c503 	mla	r5, r5, r3, ip
9001fc56:	b2ff      	uxtb	r7, r7
9001fc58:	fb06 2203 	mla	r2, r6, r3, r2
9001fc5c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001fc60:	fb17 f701 	smulbb	r7, r7, r1
9001fc64:	b2ad      	uxth	r5, r5
9001fc66:	b292      	uxth	r2, r2
9001fc68:	fb04 7403 	mla	r4, r4, r3, r7
9001fc6c:	f105 0c01 	add.w	ip, r5, #1
9001fc70:	1c57      	adds	r7, r2, #1
9001fc72:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001fc76:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001fc7a:	b2a4      	uxth	r4, r4
9001fc7c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001fc80:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001fc84:	433d      	orrs	r5, r7
9001fc86:	1c67      	adds	r7, r4, #1
9001fc88:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001fc8c:	0964      	lsrs	r4, r4, #5
9001fc8e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9001fc92:	4325      	orrs	r5, r4
9001fc94:	8005      	strh	r5, [r0, #0]
9001fc96:	e7bd      	b.n	9001fc14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001fc98:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001fc9a:	4418      	add	r0, r3
9001fc9c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001fc9e:	4499      	add	r9, r3
9001fca0:	e795      	b.n	9001fbce <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001fca2:	4b04      	ldr	r3, [pc, #16]	@ (9001fcb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001fca4:	6818      	ldr	r0, [r3, #0]
9001fca6:	6803      	ldr	r3, [r0, #0]
9001fca8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fcaa:	4798      	blx	r3
9001fcac:	e771      	b.n	9001fb92 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001fcae:	bf00      	nop
9001fcb0:	240233ce 	.word	0x240233ce
9001fcb4:	240233d4 	.word	0x240233d4

9001fcb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001fcb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fcbc:	b087      	sub	sp, #28
9001fcbe:	4680      	mov	r8, r0
9001fcc0:	460d      	mov	r5, r1
9001fcc2:	4614      	mov	r4, r2
9001fcc4:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
9001fcc8:	2e00      	cmp	r6, #0
9001fcca:	f000 80b9 	beq.w	9001fe40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001fcce:	6810      	ldr	r0, [r2, #0]
9001fcd0:	af02      	add	r7, sp, #8
9001fcd2:	6851      	ldr	r1, [r2, #4]
9001fcd4:	c703      	stmia	r7!, {r0, r1}
9001fcd6:	6818      	ldr	r0, [r3, #0]
9001fcd8:	af04      	add	r7, sp, #16
9001fcda:	6859      	ldr	r1, [r3, #4]
9001fcdc:	c703      	stmia	r7!, {r0, r1}
9001fcde:	a802      	add	r0, sp, #8
9001fce0:	f7f6 fdc6 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fce4:	4621      	mov	r1, r4
9001fce6:	a804      	add	r0, sp, #16
9001fce8:	f7f6 fdea 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fcec:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001fcf0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001fcf4:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001fcf8:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001fcfc:	fb14 2103 	smlabb	r1, r4, r3, r2
9001fd00:	eb08 0401 	add.w	r4, r8, r1
9001fd04:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001fd08:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001fd0c:	440a      	add	r2, r1
9001fd0e:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001fd12:	f8ad 2010 	strh.w	r2, [sp, #16]
9001fd16:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001fd1a:	4413      	add	r3, r2
9001fd1c:	f8ad 3012 	strh.w	r3, [sp, #18]
9001fd20:	4b49      	ldr	r3, [pc, #292]	@ (9001fe48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001fd22:	6818      	ldr	r0, [r3, #0]
9001fd24:	6803      	ldr	r3, [r0, #0]
9001fd26:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001fd28:	4798      	blx	r3
9001fd2a:	4b48      	ldr	r3, [pc, #288]	@ (9001fe4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001fd2c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001fd30:	2eff      	cmp	r6, #255	@ 0xff
9001fd32:	881a      	ldrh	r2, [r3, #0]
9001fd34:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001fd38:	fb02 c101 	mla	r1, r2, r1, ip
9001fd3c:	fb02 f207 	mul.w	r2, r2, r7
9001fd40:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001fd44:	f105 0104 	add.w	r1, r5, #4
9001fd48:	461d      	mov	r5, r3
9001fd4a:	d05a      	beq.n	9001fe02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001fd4c:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
9001fd50:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001fd54:	b2b6      	uxth	r6, r6
9001fd56:	9301      	str	r3, [sp, #4]
9001fd58:	fa1f fe8e 	uxth.w	lr, lr
9001fd5c:	4282      	cmp	r2, r0
9001fd5e:	d96a      	bls.n	9001fe36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001fd60:	eb00 0b0a 	add.w	fp, r0, sl
9001fd64:	4583      	cmp	fp, r0
9001fd66:	d940      	bls.n	9001fdea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001fd68:	8805      	ldrh	r5, [r0, #0]
9001fd6a:	f814 3b01 	ldrb.w	r3, [r4], #1
9001fd6e:	122f      	asrs	r7, r5, #8
9001fd70:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001fd74:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001fd78:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001fd7c:	00ed      	lsls	r5, r5, #3
9001fd7e:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001fd82:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001fd86:	fb17 f70e 	smulbb	r7, r7, lr
9001fd8a:	b2ed      	uxtb	r5, r5
9001fd8c:	fb19 f90e 	smulbb	r9, r9, lr
9001fd90:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001fd94:	fb15 f50e 	smulbb	r5, r5, lr
9001fd98:	fb0c 7c06 	mla	ip, ip, r6, r7
9001fd9c:	10df      	asrs	r7, r3, #3
9001fd9e:	00db      	lsls	r3, r3, #3
9001fda0:	fa1f fc8c 	uxth.w	ip, ip
9001fda4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001fda8:	b2db      	uxtb	r3, r3
9001fdaa:	fb07 9706 	mla	r7, r7, r6, r9
9001fdae:	f10c 0901 	add.w	r9, ip, #1
9001fdb2:	fb03 5306 	mla	r3, r3, r6, r5
9001fdb6:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001fdba:	b29b      	uxth	r3, r3
9001fdbc:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
9001fdc0:	b2bf      	uxth	r7, r7
9001fdc2:	f103 0c01 	add.w	ip, r3, #1
9001fdc6:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001fdca:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001fdce:	ea4c 0c09 	orr.w	ip, ip, r9
9001fdd2:	f107 0901 	add.w	r9, r7, #1
9001fdd6:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001fdda:	097f      	lsrs	r7, r7, #5
9001fddc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9001fde0:	ea4c 0c07 	orr.w	ip, ip, r7
9001fde4:	f820 cb02 	strh.w	ip, [r0], #2
9001fde8:	e7bc      	b.n	9001fd64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001fdea:	9b01      	ldr	r3, [sp, #4]
9001fdec:	881b      	ldrh	r3, [r3, #0]
9001fdee:	eba3 0308 	sub.w	r3, r3, r8
9001fdf2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fdf6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001fdfa:	eba3 0308 	sub.w	r3, r3, r8
9001fdfe:	441c      	add	r4, r3
9001fe00:	e7ac      	b.n	9001fd5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001fe02:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001fe06:	4282      	cmp	r2, r0
9001fe08:	d915      	bls.n	9001fe36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001fe0a:	eb00 060a 	add.w	r6, r0, sl
9001fe0e:	4286      	cmp	r6, r0
9001fe10:	d906      	bls.n	9001fe20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001fe12:	f814 3b01 	ldrb.w	r3, [r4], #1
9001fe16:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001fe1a:	f820 3b02 	strh.w	r3, [r0], #2
9001fe1e:	e7f6      	b.n	9001fe0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001fe20:	882b      	ldrh	r3, [r5, #0]
9001fe22:	eba3 0308 	sub.w	r3, r3, r8
9001fe26:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fe2a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001fe2e:	eba3 0308 	sub.w	r3, r3, r8
9001fe32:	441c      	add	r4, r3
9001fe34:	e7e7      	b.n	9001fe06 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001fe36:	4b04      	ldr	r3, [pc, #16]	@ (9001fe48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001fe38:	6818      	ldr	r0, [r3, #0]
9001fe3a:	6803      	ldr	r3, [r0, #0]
9001fe3c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fe3e:	4798      	blx	r3
9001fe40:	b007      	add	sp, #28
9001fe42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fe46:	bf00      	nop
9001fe48:	240233d4 	.word	0x240233d4
9001fe4c:	240233ce 	.word	0x240233ce

9001fe50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001fe50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fe54:	b091      	sub	sp, #68	@ 0x44
9001fe56:	4680      	mov	r8, r0
9001fe58:	460f      	mov	r7, r1
9001fe5a:	4614      	mov	r4, r2
9001fe5c:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
9001fe60:	2d00      	cmp	r5, #0
9001fe62:	d051      	beq.n	9001ff08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001fe64:	6810      	ldr	r0, [r2, #0]
9001fe66:	ae0c      	add	r6, sp, #48	@ 0x30
9001fe68:	6851      	ldr	r1, [r2, #4]
9001fe6a:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 9002006c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001fe6e:	c603      	stmia	r6!, {r0, r1}
9001fe70:	6818      	ldr	r0, [r3, #0]
9001fe72:	ae0e      	add	r6, sp, #56	@ 0x38
9001fe74:	6859      	ldr	r1, [r3, #4]
9001fe76:	c603      	stmia	r6!, {r0, r1}
9001fe78:	a80c      	add	r0, sp, #48	@ 0x30
9001fe7a:	f7f6 fcf9 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fe7e:	4621      	mov	r1, r4
9001fe80:	a80e      	add	r0, sp, #56	@ 0x38
9001fe82:	f7f6 fd1d 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fe86:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
9001fe8a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9001fe8e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9001fe92:	f8d9 0000 	ldr.w	r0, [r9]
9001fe96:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fe9a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001fe9e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
9001fea2:	eb08 0401 	add.w	r4, r8, r1
9001fea6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001feaa:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 90020070 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001feae:	440a      	add	r2, r1
9001feb0:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
9001feb4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
9001feb8:	4413      	add	r3, r2
9001feba:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
9001febe:	6803      	ldr	r3, [r0, #0]
9001fec0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001fec2:	4798      	blx	r3
9001fec4:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001fec8:	f8d9 0000 	ldr.w	r0, [r9]
9001fecc:	d01f      	beq.n	9001ff0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001fece:	2200      	movs	r2, #0
9001fed0:	6801      	ldr	r1, [r0, #0]
9001fed2:	b2b6      	uxth	r6, r6
9001fed4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001fed8:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001fedc:	220b      	movs	r2, #11
9001fede:	9207      	str	r2, [sp, #28]
9001fee0:	f8b8 2000 	ldrh.w	r2, [r8]
9001fee4:	9601      	str	r6, [sp, #4]
9001fee6:	9206      	str	r2, [sp, #24]
9001fee8:	2201      	movs	r2, #1
9001feea:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001feee:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
9001fef2:	9203      	str	r2, [sp, #12]
9001fef4:	fa1f f28a 	uxth.w	r2, sl
9001fef8:	9202      	str	r2, [sp, #8]
9001fefa:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001fefe:	9200      	str	r2, [sp, #0]
9001ff00:	463a      	mov	r2, r7
9001ff02:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
9001ff04:	4621      	mov	r1, r4
9001ff06:	47a8      	blx	r5
9001ff08:	b011      	add	sp, #68	@ 0x44
9001ff0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ff0e:	6803      	ldr	r3, [r0, #0]
9001ff10:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001ff14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001ff16:	4798      	blx	r3
9001ff18:	f8b8 2000 	ldrh.w	r2, [r8]
9001ff1c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9001ff20:	2dff      	cmp	r5, #255	@ 0xff
9001ff22:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
9001ff26:	fb0a fa02 	mul.w	sl, sl, r2
9001ff2a:	fb02 1303 	mla	r3, r2, r3, r1
9001ff2e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ff32:	d062      	beq.n	9001fffa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001ff34:	ea6f 0c05 	mvn.w	ip, r5
9001ff38:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001ff3c:	b2ad      	uxth	r5, r5
9001ff3e:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
9001ff42:	fa5f fc8c 	uxtb.w	ip, ip
9001ff46:	930a      	str	r3, [sp, #40]	@ 0x28
9001ff48:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001ff4a:	4298      	cmp	r0, r3
9001ff4c:	f080 8085 	bcs.w	9002005a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001ff50:	eb00 0b09 	add.w	fp, r0, r9
9001ff54:	4558      	cmp	r0, fp
9001ff56:	d246      	bcs.n	9001ffe6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001ff58:	f814 eb01 	ldrb.w	lr, [r4], #1
9001ff5c:	2303      	movs	r3, #3
9001ff5e:	2204      	movs	r2, #4
9001ff60:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001ff64:	8803      	ldrh	r3, [r0, #0]
9001ff66:	eb07 0a0e 	add.w	sl, r7, lr
9001ff6a:	1219      	asrs	r1, r3, #8
9001ff6c:	10da      	asrs	r2, r3, #3
9001ff6e:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001ff72:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001ff76:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9001ff7a:	00db      	lsls	r3, r3, #3
9001ff7c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9001ff80:	fb18 f805 	smulbb	r8, r8, r5
9001ff84:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001ff88:	fb1e fe05 	smulbb	lr, lr, r5
9001ff8c:	b2db      	uxtb	r3, r3
9001ff8e:	fb01 810c 	mla	r1, r1, ip, r8
9001ff92:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001ff96:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001ff9a:	fb18 f805 	smulbb	r8, r8, r5
9001ff9e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001ffa2:	b289      	uxth	r1, r1
9001ffa4:	fb02 820c 	mla	r2, r2, ip, r8
9001ffa8:	fb03 e30c 	mla	r3, r3, ip, lr
9001ffac:	f101 0801 	add.w	r8, r1, #1
9001ffb0:	b292      	uxth	r2, r2
9001ffb2:	b29b      	uxth	r3, r3
9001ffb4:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001ffb8:	f102 0801 	add.w	r8, r2, #1
9001ffbc:	f103 0e01 	add.w	lr, r3, #1
9001ffc0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001ffc4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9001ffc8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001ffcc:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001ffd0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001ffd4:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001ffd8:	ea4e 0101 	orr.w	r1, lr, r1
9001ffdc:	ea41 0108 	orr.w	r1, r1, r8
9001ffe0:	f820 1b02 	strh.w	r1, [r0], #2
9001ffe4:	e7b6      	b.n	9001ff54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001ffe6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001ffe8:	881b      	ldrh	r3, [r3, #0]
9001ffea:	1b9b      	subs	r3, r3, r6
9001ffec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fff0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001fff4:	1b9b      	subs	r3, r3, r6
9001fff6:	441c      	add	r4, r3
9001fff8:	e7a6      	b.n	9001ff48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001fffa:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001fffe:	2203      	movs	r2, #3
90020000:	2504      	movs	r5, #4
90020002:	4919      	ldr	r1, [pc, #100]	@ (90020068 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90020004:	4550      	cmp	r0, sl
90020006:	d228      	bcs.n	9002005a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90020008:	eb00 0c09 	add.w	ip, r0, r9
9002000c:	4560      	cmp	r0, ip
9002000e:	4623      	mov	r3, r4
90020010:	d219      	bcs.n	90020046 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
90020012:	f893 e000 	ldrb.w	lr, [r3]
90020016:	3401      	adds	r4, #1
90020018:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9002001c:	eb07 0b0e 	add.w	fp, r7, lr
90020020:	f817 e00e 	ldrb.w	lr, [r7, lr]
90020024:	f89b 3002 	ldrb.w	r3, [fp, #2]
90020028:	f89b b001 	ldrb.w	fp, [fp, #1]
9002002c:	ea01 2303 	and.w	r3, r1, r3, lsl #8
90020030:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
90020034:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90020038:	ea43 030b 	orr.w	r3, r3, fp
9002003c:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
90020040:	f820 3b02 	strh.w	r3, [r0], #2
90020044:	e7e2      	b.n	9002000c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
90020046:	f8b8 3000 	ldrh.w	r3, [r8]
9002004a:	1b9b      	subs	r3, r3, r6
9002004c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020050:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90020054:	1b9b      	subs	r3, r3, r6
90020056:	441c      	add	r4, r3
90020058:	e7d4      	b.n	90020004 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9002005a:	4b04      	ldr	r3, [pc, #16]	@ (9002006c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9002005c:	6818      	ldr	r0, [r3, #0]
9002005e:	6803      	ldr	r3, [r0, #0]
90020060:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020062:	4798      	blx	r3
90020064:	e750      	b.n	9001ff08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90020066:	bf00      	nop
90020068:	fffff800 	.word	0xfffff800
9002006c:	240233d4 	.word	0x240233d4
90020070:	240233ce 	.word	0x240233ce

90020074 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
90020074:	b4f0      	push	{r4, r5, r6, r7}
90020076:	460c      	mov	r4, r1
90020078:	4611      	mov	r1, r2
9002007a:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002007e:	461a      	mov	r2, r3
90020080:	780f      	ldrb	r7, [r1, #0]
90020082:	9b04      	ldr	r3, [sp, #16]
90020084:	2f01      	cmp	r7, #1
90020086:	784e      	ldrb	r6, [r1, #1]
90020088:	d038      	beq.n	900200fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
9002008a:	d31f      	bcc.n	900200cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
9002008c:	2f02      	cmp	r7, #2
9002008e:	d14d      	bne.n	9002012c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020090:	2e03      	cmp	r6, #3
90020092:	d84b      	bhi.n	9002012c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020094:	e8df f006 	tbb	[pc, r6]
90020098:	17140702 	.word	0x17140702
9002009c:	9504      	str	r5, [sp, #16]
9002009e:	4620      	mov	r0, r4
900200a0:	bcf0      	pop	{r4, r5, r6, r7}
900200a2:	f7ff be09 	b.w	9001fcb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
900200a6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
900200a8:	2800      	cmp	r0, #0
900200aa:	d03f      	beq.n	9002012c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900200ac:	6806      	ldr	r6, [r0, #0]
900200ae:	e9cd 3504 	strd	r3, r5, [sp, #16]
900200b2:	68b5      	ldr	r5, [r6, #8]
900200b4:	4613      	mov	r3, r2
900200b6:	46ac      	mov	ip, r5
900200b8:	460a      	mov	r2, r1
900200ba:	4621      	mov	r1, r4
900200bc:	bcf0      	pop	{r4, r5, r6, r7}
900200be:	4760      	bx	ip
900200c0:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
900200c4:	e7f0      	b.n	900200a8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
900200c6:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
900200ca:	e7ed      	b.n	900200a8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
900200cc:	2e03      	cmp	r6, #3
900200ce:	d82d      	bhi.n	9002012c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900200d0:	e8df f006 	tbb	[pc, r6]
900200d4:	110e0702 	.word	0x110e0702
900200d8:	9504      	str	r5, [sp, #16]
900200da:	4620      	mov	r0, r4
900200dc:	bcf0      	pop	{r4, r5, r6, r7}
900200de:	f7ff bd05 	b.w	9001faec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
900200e2:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
900200e4:	b310      	cbz	r0, 9002012c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900200e6:	6806      	ldr	r6, [r0, #0]
900200e8:	e9cd 3504 	strd	r3, r5, [sp, #16]
900200ec:	68f5      	ldr	r5, [r6, #12]
900200ee:	e7e1      	b.n	900200b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
900200f0:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
900200f4:	e7f6      	b.n	900200e4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
900200f6:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
900200fa:	e7f3      	b.n	900200e4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
900200fc:	2e03      	cmp	r6, #3
900200fe:	d815      	bhi.n	9002012c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020100:	e8df f006 	tbb	[pc, r6]
90020104:	110e0702 	.word	0x110e0702
90020108:	9504      	str	r5, [sp, #16]
9002010a:	4620      	mov	r0, r4
9002010c:	bcf0      	pop	{r4, r5, r6, r7}
9002010e:	f7ff be9f 	b.w	9001fe50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
90020112:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90020114:	b150      	cbz	r0, 9002012c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90020116:	6806      	ldr	r6, [r0, #0]
90020118:	e9cd 3504 	strd	r3, r5, [sp, #16]
9002011c:	6935      	ldr	r5, [r6, #16]
9002011e:	e7c9      	b.n	900200b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020120:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90020124:	e7f6      	b.n	90020114 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90020126:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9002012a:	e7f3      	b.n	90020114 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9002012c:	bcf0      	pop	{r4, r5, r6, r7}
9002012e:	4770      	bx	lr

90020130 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
90020130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020134:	b087      	sub	sp, #28
90020136:	4604      	mov	r4, r0
90020138:	460e      	mov	r6, r1
9002013a:	6810      	ldr	r0, [r2, #0]
9002013c:	6851      	ldr	r1, [r2, #4]
9002013e:	ad02      	add	r5, sp, #8
90020140:	4617      	mov	r7, r2
90020142:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
90020146:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 90020378 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9002014a:	c503      	stmia	r5!, {r0, r1}
9002014c:	6818      	ldr	r0, [r3, #0]
9002014e:	ad04      	add	r5, sp, #16
90020150:	6859      	ldr	r1, [r3, #4]
90020152:	c503      	stmia	r5!, {r0, r1}
90020154:	a802      	add	r0, sp, #8
90020156:	f7f6 fb8b 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002015a:	4639      	mov	r1, r7
9002015c:	a804      	add	r0, sp, #16
9002015e:	f7f6 fbaf 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020162:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90020166:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9002016a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9002016e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90020172:	fb11 2103 	smlabb	r1, r1, r3, r2
90020176:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9002017a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9002017e:	440e      	add	r6, r1
90020180:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020184:	440a      	add	r2, r1
90020186:	f8ad 2010 	strh.w	r2, [sp, #16]
9002018a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9002018e:	4413      	add	r3, r2
90020190:	f8ad 3012 	strh.w	r3, [sp, #18]
90020194:	4b77      	ldr	r3, [pc, #476]	@ (90020374 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90020196:	6818      	ldr	r0, [r3, #0]
90020198:	6803      	ldr	r3, [r0, #0]
9002019a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002019c:	4798      	blx	r3
9002019e:	f8b9 b000 	ldrh.w	fp, [r9]
900201a2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900201a6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900201aa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900201ae:	fb05 f50b 	mul.w	r5, r5, fp
900201b2:	fb0b 2303 	mla	r3, fp, r3, r2
900201b6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900201ba:	ea4f 0348 	mov.w	r3, r8, lsl #1
900201be:	9300      	str	r3, [sp, #0]
900201c0:	d069      	beq.n	90020296 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
900201c2:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
900201c6:	4558      	cmp	r0, fp
900201c8:	f080 80cc 	bcs.w	90020364 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
900201cc:	9b00      	ldr	r3, [sp, #0]
900201ce:	4631      	mov	r1, r6
900201d0:	18c3      	adds	r3, r0, r3
900201d2:	9301      	str	r3, [sp, #4]
900201d4:	9b01      	ldr	r3, [sp, #4]
900201d6:	4298      	cmp	r0, r3
900201d8:	d24f      	bcs.n	9002027a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
900201da:	f811 2b01 	ldrb.w	r2, [r1], #1
900201de:	2a00      	cmp	r2, #0
900201e0:	d048      	beq.n	90020274 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
900201e2:	fb0a f202 	mul.w	r2, sl, r2
900201e6:	1c53      	adds	r3, r2, #1
900201e8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900201ec:	121b      	asrs	r3, r3, #8
900201ee:	d041      	beq.n	90020274 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
900201f0:	8802      	ldrh	r2, [r0, #0]
900201f2:	b29e      	uxth	r6, r3
900201f4:	f8b4 c000 	ldrh.w	ip, [r4]
900201f8:	43db      	mvns	r3, r3
900201fa:	1215      	asrs	r5, r2, #8
900201fc:	b2db      	uxtb	r3, r3
900201fe:	ea4f 272c 	mov.w	r7, ip, asr #8
90020202:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90020206:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9002020a:	fb15 f503 	smulbb	r5, r5, r3
9002020e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90020212:	00d2      	lsls	r2, r2, #3
90020214:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90020218:	fb07 5706 	mla	r7, r7, r6, r5
9002021c:	ea4f 05ec 	mov.w	r5, ip, asr #3
90020220:	b2d2      	uxtb	r2, r2
90020222:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90020226:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9002022a:	fb1e fe03 	smulbb	lr, lr, r3
9002022e:	b2bf      	uxth	r7, r7
90020230:	fb12 f203 	smulbb	r2, r2, r3
90020234:	fa5f fc8c 	uxtb.w	ip, ip
90020238:	fb05 e506 	mla	r5, r5, r6, lr
9002023c:	f107 0e01 	add.w	lr, r7, #1
90020240:	fb0c 2c06 	mla	ip, ip, r6, r2
90020244:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
90020248:	fa1f fc8c 	uxth.w	ip, ip
9002024c:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
90020250:	b2ad      	uxth	r5, r5
90020252:	f10c 0701 	add.w	r7, ip, #1
90020256:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002025a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002025e:	ea47 070e 	orr.w	r7, r7, lr
90020262:	f105 0e01 	add.w	lr, r5, #1
90020266:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9002026a:	096d      	lsrs	r5, r5, #5
9002026c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90020270:	432f      	orrs	r7, r5
90020272:	8007      	strh	r7, [r0, #0]
90020274:	3002      	adds	r0, #2
90020276:	3402      	adds	r4, #2
90020278:	e7ac      	b.n	900201d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9002027a:	f8b9 3000 	ldrh.w	r3, [r9]
9002027e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90020282:	eba3 0308 	sub.w	r3, r3, r8
90020286:	eba6 0608 	sub.w	r6, r6, r8
9002028a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002028e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90020292:	440e      	add	r6, r1
90020294:	e797      	b.n	900201c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
90020296:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9002029a:	42a8      	cmp	r0, r5
9002029c:	d262      	bcs.n	90020364 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9002029e:	9b00      	ldr	r3, [sp, #0]
900202a0:	4631      	mov	r1, r6
900202a2:	eb00 0b03 	add.w	fp, r0, r3
900202a6:	4558      	cmp	r0, fp
900202a8:	d24e      	bcs.n	90020348 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
900202aa:	f811 3b01 	ldrb.w	r3, [r1], #1
900202ae:	b12b      	cbz	r3, 900202bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
900202b0:	2bff      	cmp	r3, #255	@ 0xff
900202b2:	f8b4 e000 	ldrh.w	lr, [r4]
900202b6:	d104      	bne.n	900202c2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
900202b8:	f8a0 e000 	strh.w	lr, [r0]
900202bc:	3002      	adds	r0, #2
900202be:	3402      	adds	r4, #2
900202c0:	e7f1      	b.n	900202a6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
900202c2:	8802      	ldrh	r2, [r0, #0]
900202c4:	b29f      	uxth	r7, r3
900202c6:	43db      	mvns	r3, r3
900202c8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
900202cc:	1216      	asrs	r6, r2, #8
900202ce:	b2db      	uxtb	r3, r3
900202d0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900202d4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900202d8:	ea4f 0ae2 	mov.w	sl, r2, asr #3
900202dc:	00d2      	lsls	r2, r2, #3
900202de:	fb16 f603 	smulbb	r6, r6, r3
900202e2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
900202e6:	b2d2      	uxtb	r2, r2
900202e8:	fb0c 6c07 	mla	ip, ip, r7, r6
900202ec:	ea4f 06ee 	mov.w	r6, lr, asr #3
900202f0:	fb1a fa03 	smulbb	sl, sl, r3
900202f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900202f8:	fa1f fc8c 	uxth.w	ip, ip
900202fc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90020300:	fb12 f303 	smulbb	r3, r2, r3
90020304:	fa5f fe8e 	uxtb.w	lr, lr
90020308:	fb06 a607 	mla	r6, r6, r7, sl
9002030c:	f10c 0201 	add.w	r2, ip, #1
90020310:	fb0e 3307 	mla	r3, lr, r7, r3
90020314:	b2b6      	uxth	r6, r6
90020316:	b29b      	uxth	r3, r3
90020318:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9002031c:	f106 0a01 	add.w	sl, r6, #1
90020320:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
90020324:	f103 0c01 	add.w	ip, r3, #1
90020328:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9002032c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90020330:	0976      	lsrs	r6, r6, #5
90020332:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020336:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9002033a:	ea4c 0c02 	orr.w	ip, ip, r2
9002033e:	ea4c 0c06 	orr.w	ip, ip, r6
90020342:	f8a0 c000 	strh.w	ip, [r0]
90020346:	e7b9      	b.n	900202bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90020348:	f8b9 3000 	ldrh.w	r3, [r9]
9002034c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90020350:	eba3 0308 	sub.w	r3, r3, r8
90020354:	eba6 0608 	sub.w	r6, r6, r8
90020358:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002035c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90020360:	440e      	add	r6, r1
90020362:	e79a      	b.n	9002029a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
90020364:	4b03      	ldr	r3, [pc, #12]	@ (90020374 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90020366:	6818      	ldr	r0, [r3, #0]
90020368:	6803      	ldr	r3, [r0, #0]
9002036a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002036c:	4798      	blx	r3
9002036e:	b007      	add	sp, #28
90020370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020374:	240233d4 	.word	0x240233d4
90020378:	240233ce 	.word	0x240233ce

9002037c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9002037c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020380:	b089      	sub	sp, #36	@ 0x24
90020382:	4607      	mov	r7, r0
90020384:	4688      	mov	r8, r1
90020386:	4692      	mov	sl, r2
90020388:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
9002038c:	4699      	mov	r9, r3
9002038e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90020390:	2e00      	cmp	r6, #0
90020392:	d048      	beq.n	90020426 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020394:	4608      	mov	r0, r1
90020396:	f7fa f813 	bl	9001a3c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9002039a:	4605      	mov	r5, r0
9002039c:	4640      	mov	r0, r8
9002039e:	f7fa f843 	bl	9001a428 <_ZNK8touchgfx6Bitmap9getHeightEv>
900203a2:	f8ad 000e 	strh.w	r0, [sp, #14]
900203a6:	4640      	mov	r0, r8
900203a8:	f8ad a008 	strh.w	sl, [sp, #8]
900203ac:	f8ad 500c 	strh.w	r5, [sp, #12]
900203b0:	f8ad 900a 	strh.w	r9, [sp, #10]
900203b4:	f7fa f8f6 	bl	9001a5a4 <_ZNK8touchgfx6Bitmap7getDataEv>
900203b8:	4605      	mov	r5, r0
900203ba:	4640      	mov	r0, r8
900203bc:	f7fa f922 	bl	9001a604 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
900203c0:	4682      	mov	sl, r0
900203c2:	4640      	mov	r0, r8
900203c4:	f7fa f972 	bl	9001a6ac <_ZNK8touchgfx6Bitmap9getFormatEv>
900203c8:	2810      	cmp	r0, #16
900203ca:	d82c      	bhi.n	90020426 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900203cc:	e8df f010 	tbh	[pc, r0, lsl #1]
900203d0:	00ba00ca 	.word	0x00ba00ca
900203d4:	002b0011 	.word	0x002b0011
900203d8:	002b002b 	.word	0x002b002b
900203dc:	002b002b 	.word	0x002b002b
900203e0:	002b002b 	.word	0x002b002b
900203e4:	00c1002b 	.word	0x00c1002b
900203e8:	002b002b 	.word	0x002b002b
900203ec:	002b0180 	.word	0x002b0180
900203f0:	0173      	.short	0x0173
900203f2:	4bbc      	ldr	r3, [pc, #752]	@ (900206e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
900203f4:	6818      	ldr	r0, [r3, #0]
900203f6:	6803      	ldr	r3, [r0, #0]
900203f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900203fa:	4798      	blx	r3
900203fc:	2eff      	cmp	r6, #255	@ 0xff
900203fe:	d101      	bne.n	90020404 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90020400:	0683      	lsls	r3, r0, #26
90020402:	d506      	bpl.n	90020412 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
90020404:	4633      	mov	r3, r6
90020406:	4622      	mov	r2, r4
90020408:	a902      	add	r1, sp, #8
9002040a:	4628      	mov	r0, r5
9002040c:	f7ff f8fc 	bl	9001f608 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020410:	e009      	b.n	90020426 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020412:	4640      	mov	r0, r8
90020414:	f7fa f88e 	bl	9001a534 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90020418:	b940      	cbnz	r0, 9002042c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
9002041a:	4623      	mov	r3, r4
9002041c:	aa02      	add	r2, sp, #8
9002041e:	4629      	mov	r1, r5
90020420:	4638      	mov	r0, r7
90020422:	f7ff f9d7 	bl	9001f7d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90020426:	b009      	add	sp, #36	@ 0x24
90020428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002042c:	f10d 0918 	add.w	r9, sp, #24
90020430:	4641      	mov	r1, r8
90020432:	f10d 0810 	add.w	r8, sp, #16
90020436:	4648      	mov	r0, r9
90020438:	f7fa f82a 	bl	9001a490 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9002043c:	e899 0003 	ldmia.w	r9, {r0, r1}
90020440:	e888 0003 	stmia.w	r8, {r0, r1}
90020444:	4640      	mov	r0, r8
90020446:	4621      	mov	r1, r4
90020448:	f7f0 f916 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
9002044c:	4640      	mov	r0, r8
9002044e:	f7f0 f956 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
90020452:	2800      	cmp	r0, #0
90020454:	d1d6      	bne.n	90020404 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90020456:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9002045a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9002045e:	4293      	cmp	r3, r2
90020460:	dd12      	ble.n	90020488 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
90020462:	1a9b      	subs	r3, r3, r2
90020464:	f9b4 0000 	ldrsh.w	r0, [r4]
90020468:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002046c:	f8ad 0018 	strh.w	r0, [sp, #24]
90020470:	4628      	mov	r0, r5
90020472:	f8ad 201a 	strh.w	r2, [sp, #26]
90020476:	464a      	mov	r2, r9
90020478:	f8ad 101c 	strh.w	r1, [sp, #28]
9002047c:	a902      	add	r1, sp, #8
9002047e:	f8ad 301e 	strh.w	r3, [sp, #30]
90020482:	4633      	mov	r3, r6
90020484:	f7ff f8c0 	bl	9001f608 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020488:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9002048c:	f9b4 2000 	ldrsh.w	r2, [r4]
90020490:	4293      	cmp	r3, r2
90020492:	dd12      	ble.n	900204ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
90020494:	1a9b      	subs	r3, r3, r2
90020496:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9002049a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9002049e:	f8ad 2018 	strh.w	r2, [sp, #24]
900204a2:	464a      	mov	r2, r9
900204a4:	f8ad 001a 	strh.w	r0, [sp, #26]
900204a8:	4628      	mov	r0, r5
900204aa:	f8ad 301c 	strh.w	r3, [sp, #28]
900204ae:	23ff      	movs	r3, #255	@ 0xff
900204b0:	f8ad 101e 	strh.w	r1, [sp, #30]
900204b4:	a902      	add	r1, sp, #8
900204b6:	f7ff f8a7 	bl	9001f608 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900204ba:	4643      	mov	r3, r8
900204bc:	aa02      	add	r2, sp, #8
900204be:	4629      	mov	r1, r5
900204c0:	4638      	mov	r0, r7
900204c2:	f7ff f987 	bl	9001f7d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
900204c6:	88a2      	ldrh	r2, [r4, #4]
900204c8:	8823      	ldrh	r3, [r4, #0]
900204ca:	f8bd 1014 	ldrh.w	r1, [sp, #20]
900204ce:	4413      	add	r3, r2
900204d0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
900204d4:	440a      	add	r2, r1
900204d6:	b29b      	uxth	r3, r3
900204d8:	b292      	uxth	r2, r2
900204da:	b218      	sxth	r0, r3
900204dc:	b211      	sxth	r1, r2
900204de:	4288      	cmp	r0, r1
900204e0:	dd12      	ble.n	90020508 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
900204e2:	1a9b      	subs	r3, r3, r2
900204e4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
900204e8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
900204ec:	464a      	mov	r2, r9
900204ee:	f8ad 1018 	strh.w	r1, [sp, #24]
900204f2:	a902      	add	r1, sp, #8
900204f4:	f8ad 301c 	strh.w	r3, [sp, #28]
900204f8:	23ff      	movs	r3, #255	@ 0xff
900204fa:	f8ad 001e 	strh.w	r0, [sp, #30]
900204fe:	4628      	mov	r0, r5
90020500:	f8ad 601a 	strh.w	r6, [sp, #26]
90020504:	f7ff f880 	bl	9001f608 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020508:	88e2      	ldrh	r2, [r4, #6]
9002050a:	8863      	ldrh	r3, [r4, #2]
9002050c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90020510:	4413      	add	r3, r2
90020512:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90020516:	440a      	add	r2, r1
90020518:	b29b      	uxth	r3, r3
9002051a:	b292      	uxth	r2, r2
9002051c:	b218      	sxth	r0, r3
9002051e:	b211      	sxth	r1, r2
90020520:	4288      	cmp	r0, r1
90020522:	dd80      	ble.n	90020426 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020524:	1a9b      	subs	r3, r3, r2
90020526:	f9b4 6000 	ldrsh.w	r6, [r4]
9002052a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002052e:	464a      	mov	r2, r9
90020530:	f8ad 301e 	strh.w	r3, [sp, #30]
90020534:	23ff      	movs	r3, #255	@ 0xff
90020536:	f8ad 6018 	strh.w	r6, [sp, #24]
9002053a:	f8ad 101a 	strh.w	r1, [sp, #26]
9002053e:	f8ad 001c 	strh.w	r0, [sp, #28]
90020542:	e761      	b.n	90020408 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
90020544:	4633      	mov	r3, r6
90020546:	4622      	mov	r2, r4
90020548:	a902      	add	r1, sp, #8
9002054a:	4628      	mov	r0, r5
9002054c:	f7ff f9b2 	bl	9001f8b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
90020550:	e769      	b.n	90020426 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020552:	e9cd 4600 	strd	r4, r6, [sp]
90020556:	ab02      	add	r3, sp, #8
90020558:	4652      	mov	r2, sl
9002055a:	4629      	mov	r1, r5
9002055c:	4638      	mov	r0, r7
9002055e:	f7ff fd89 	bl	90020074 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
90020562:	e760      	b.n	90020426 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020564:	4640      	mov	r0, r8
90020566:	f7f9 ffe5 	bl	9001a534 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9002056a:	b948      	cbnz	r0, 90020580 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
9002056c:	683b      	ldr	r3, [r7, #0]
9002056e:	aa02      	add	r2, sp, #8
90020570:	4629      	mov	r1, r5
90020572:	e9cd 6000 	strd	r6, r0, [sp]
90020576:	4638      	mov	r0, r7
90020578:	68de      	ldr	r6, [r3, #12]
9002057a:	4623      	mov	r3, r4
9002057c:	47b0      	blx	r6
9002057e:	e752      	b.n	90020426 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020580:	f10d 0918 	add.w	r9, sp, #24
90020584:	4641      	mov	r1, r8
90020586:	f10d 0810 	add.w	r8, sp, #16
9002058a:	4648      	mov	r0, r9
9002058c:	f7f9 ff80 	bl	9001a490 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90020590:	e899 0003 	ldmia.w	r9, {r0, r1}
90020594:	e888 0003 	stmia.w	r8, {r0, r1}
90020598:	4640      	mov	r0, r8
9002059a:	4621      	mov	r1, r4
9002059c:	f7f0 f86c 	bl	90010678 <_ZN8touchgfx4RectaNERKS0_>
900205a0:	4640      	mov	r0, r8
900205a2:	f7f0 f8ac 	bl	900106fe <_ZNK8touchgfx4Rect7isEmptyEv>
900205a6:	b138      	cbz	r0, 900205b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
900205a8:	4623      	mov	r3, r4
900205aa:	9600      	str	r6, [sp, #0]
900205ac:	aa02      	add	r2, sp, #8
900205ae:	4651      	mov	r1, sl
900205b0:	4628      	mov	r0, r5
900205b2:	f7ff fdbd 	bl	90020130 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
900205b6:	e736      	b.n	90020426 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900205b8:	683b      	ldr	r3, [r7, #0]
900205ba:	aa02      	add	r2, sp, #8
900205bc:	4629      	mov	r1, r5
900205be:	e9cd 6000 	strd	r6, r0, [sp]
900205c2:	4638      	mov	r0, r7
900205c4:	f8d3 b00c 	ldr.w	fp, [r3, #12]
900205c8:	4643      	mov	r3, r8
900205ca:	47d8      	blx	fp
900205cc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900205d0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900205d4:	4293      	cmp	r3, r2
900205d6:	dd13      	ble.n	90020600 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
900205d8:	f9b4 0000 	ldrsh.w	r0, [r4]
900205dc:	1a9b      	subs	r3, r3, r2
900205de:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900205e2:	f8ad 0018 	strh.w	r0, [sp, #24]
900205e6:	4628      	mov	r0, r5
900205e8:	f8ad 201a 	strh.w	r2, [sp, #26]
900205ec:	aa02      	add	r2, sp, #8
900205ee:	f8ad 101c 	strh.w	r1, [sp, #28]
900205f2:	4651      	mov	r1, sl
900205f4:	f8ad 301e 	strh.w	r3, [sp, #30]
900205f8:	464b      	mov	r3, r9
900205fa:	9600      	str	r6, [sp, #0]
900205fc:	f7ff fd98 	bl	90020130 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020600:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90020604:	f9b4 2000 	ldrsh.w	r2, [r4]
90020608:	4293      	cmp	r3, r2
9002060a:	dd13      	ble.n	90020634 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
9002060c:	1a9b      	subs	r3, r3, r2
9002060e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90020612:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90020616:	f8ad 2018 	strh.w	r2, [sp, #24]
9002061a:	aa02      	add	r2, sp, #8
9002061c:	f8ad 001a 	strh.w	r0, [sp, #26]
90020620:	4628      	mov	r0, r5
90020622:	f8ad 301c 	strh.w	r3, [sp, #28]
90020626:	464b      	mov	r3, r9
90020628:	f8ad 101e 	strh.w	r1, [sp, #30]
9002062c:	4651      	mov	r1, sl
9002062e:	9600      	str	r6, [sp, #0]
90020630:	f7ff fd7e 	bl	90020130 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020634:	88a2      	ldrh	r2, [r4, #4]
90020636:	8823      	ldrh	r3, [r4, #0]
90020638:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9002063c:	4413      	add	r3, r2
9002063e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020642:	440a      	add	r2, r1
90020644:	b29b      	uxth	r3, r3
90020646:	b292      	uxth	r2, r2
90020648:	b218      	sxth	r0, r3
9002064a:	b211      	sxth	r1, r2
9002064c:	4288      	cmp	r0, r1
9002064e:	dd13      	ble.n	90020678 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
90020650:	1a9b      	subs	r3, r3, r2
90020652:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90020656:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9002065a:	aa02      	add	r2, sp, #8
9002065c:	f8ad 1018 	strh.w	r1, [sp, #24]
90020660:	4651      	mov	r1, sl
90020662:	f8ad 301c 	strh.w	r3, [sp, #28]
90020666:	464b      	mov	r3, r9
90020668:	f8ad 001e 	strh.w	r0, [sp, #30]
9002066c:	4628      	mov	r0, r5
9002066e:	9600      	str	r6, [sp, #0]
90020670:	f8ad 701a 	strh.w	r7, [sp, #26]
90020674:	f7ff fd5c 	bl	90020130 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020678:	88e2      	ldrh	r2, [r4, #6]
9002067a:	8863      	ldrh	r3, [r4, #2]
9002067c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90020680:	4413      	add	r3, r2
90020682:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90020686:	440a      	add	r2, r1
90020688:	b29b      	uxth	r3, r3
9002068a:	b292      	uxth	r2, r2
9002068c:	b218      	sxth	r0, r3
9002068e:	b211      	sxth	r1, r2
90020690:	4288      	cmp	r0, r1
90020692:	f77f aec8 	ble.w	90020426 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020696:	f9b4 7000 	ldrsh.w	r7, [r4]
9002069a:	1a9b      	subs	r3, r3, r2
9002069c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900206a0:	f8ad 301e 	strh.w	r3, [sp, #30]
900206a4:	464b      	mov	r3, r9
900206a6:	f8ad 7018 	strh.w	r7, [sp, #24]
900206aa:	f8ad 101a 	strh.w	r1, [sp, #26]
900206ae:	f8ad 001c 	strh.w	r0, [sp, #28]
900206b2:	9600      	str	r6, [sp, #0]
900206b4:	e77a      	b.n	900205ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
900206b6:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
900206ba:	2800      	cmp	r0, #0
900206bc:	f43f aeb3 	beq.w	90020426 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900206c0:	6803      	ldr	r3, [r0, #0]
900206c2:	9600      	str	r6, [sp, #0]
900206c4:	68de      	ldr	r6, [r3, #12]
900206c6:	4623      	mov	r3, r4
900206c8:	aa02      	add	r2, sp, #8
900206ca:	4629      	mov	r1, r5
900206cc:	47b0      	blx	r6
900206ce:	e6aa      	b.n	90020426 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900206d0:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
900206d4:	2800      	cmp	r0, #0
900206d6:	f43f aea6 	beq.w	90020426 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900206da:	6803      	ldr	r3, [r0, #0]
900206dc:	9600      	str	r6, [sp, #0]
900206de:	689e      	ldr	r6, [r3, #8]
900206e0:	e7f1      	b.n	900206c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
900206e2:	bf00      	nop
900206e4:	240233d4 	.word	0x240233d4

900206e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
900206e8:	b180      	cbz	r0, 9002070c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
900206ea:	2903      	cmp	r1, #3
900206ec:	d81c      	bhi.n	90020728 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
900206ee:	e8df f001 	tbb	[pc, r1]
900206f2:	1d02      	.short	0x1d02
900206f4:	1f08      	.short	0x1f08
900206f6:	4b10      	ldr	r3, [pc, #64]	@ (90020738 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
900206f8:	8818      	ldrh	r0, [r3, #0]
900206fa:	f3c0 000e 	ubfx	r0, r0, #0, #15
900206fe:	4240      	negs	r0, r0
90020700:	4770      	bx	lr
90020702:	4b0d      	ldr	r3, [pc, #52]	@ (90020738 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020704:	8818      	ldrh	r0, [r3, #0]
90020706:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002070a:	4770      	bx	lr
9002070c:	2903      	cmp	r1, #3
9002070e:	d80b      	bhi.n	90020728 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020710:	a301      	add	r3, pc, #4	@ (adr r3, 90020718 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
90020712:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90020716:	bf00      	nop
90020718:	9002072d 	.word	0x9002072d
9002071c:	90020703 	.word	0x90020703
90020720:	90020731 	.word	0x90020731
90020724:	900206f7 	.word	0x900206f7
90020728:	2000      	movs	r0, #0
9002072a:	4770      	bx	lr
9002072c:	2001      	movs	r0, #1
9002072e:	4770      	bx	lr
90020730:	f04f 30ff 	mov.w	r0, #4294967295
90020734:	4770      	bx	lr
90020736:	bf00      	nop
90020738:	240233ce 	.word	0x240233ce

9002073c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9002073c:	b180      	cbz	r0, 90020760 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9002073e:	2903      	cmp	r1, #3
90020740:	d81c      	bhi.n	9002077c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020742:	e8df f001 	tbb	[pc, r1]
90020746:	021d      	.short	0x021d
90020748:	071f      	.short	0x071f
9002074a:	4b10      	ldr	r3, [pc, #64]	@ (9002078c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9002074c:	8818      	ldrh	r0, [r3, #0]
9002074e:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020752:	4770      	bx	lr
90020754:	4b0d      	ldr	r3, [pc, #52]	@ (9002078c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90020756:	8818      	ldrh	r0, [r3, #0]
90020758:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002075c:	4240      	negs	r0, r0
9002075e:	4770      	bx	lr
90020760:	2903      	cmp	r1, #3
90020762:	d80b      	bhi.n	9002077c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020764:	a301      	add	r3, pc, #4	@ (adr r3, 9002076c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
90020766:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9002076a:	bf00      	nop
9002076c:	9002074b 	.word	0x9002074b
90020770:	90020785 	.word	0x90020785
90020774:	90020755 	.word	0x90020755
90020778:	90020781 	.word	0x90020781
9002077c:	2000      	movs	r0, #0
9002077e:	4770      	bx	lr
90020780:	2001      	movs	r0, #1
90020782:	4770      	bx	lr
90020784:	f04f 30ff 	mov.w	r0, #4294967295
90020788:	4770      	bx	lr
9002078a:	bf00      	nop
9002078c:	240233ce 	.word	0x240233ce

90020790 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
90020790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020794:	b099      	sub	sp, #100	@ 0x64
90020796:	910b      	str	r1, [sp, #44]	@ 0x2c
90020798:	a914      	add	r1, sp, #80	@ 0x50
9002079a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
9002079e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
900207a2:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
900207a6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
900207aa:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
900207ae:	e881 000c 	stmia.w	r1, {r2, r3}
900207b2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
900207b6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
900207ba:	9309      	str	r3, [sp, #36]	@ 0x24
900207bc:	f891 900d 	ldrb.w	r9, [r1, #13]
900207c0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
900207c4:	ea4f 1749 	mov.w	r7, r9, lsl #5
900207c8:	9310      	str	r3, [sp, #64]	@ 0x40
900207ca:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
900207ce:	930c      	str	r3, [sp, #48]	@ 0x30
900207d0:	f407 7380 	and.w	r3, r7, #256	@ 0x100
900207d4:	798f      	ldrb	r7, [r1, #6]
900207d6:	431f      	orrs	r7, r3
900207d8:	f000 8195 	beq.w	90020b06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
900207dc:	ea4f 1909 	mov.w	r9, r9, lsl #4
900207e0:	f409 7380 	and.w	r3, r9, #256	@ 0x100
900207e4:	f891 9007 	ldrb.w	r9, [r1, #7]
900207e8:	ea59 0903 	orrs.w	r9, r9, r3
900207ec:	f000 818b 	beq.w	90020b06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
900207f0:	f991 3009 	ldrsb.w	r3, [r1, #9]
900207f4:	b29b      	uxth	r3, r3
900207f6:	2d00      	cmp	r5, #0
900207f8:	f000 812e 	beq.w	90020a58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
900207fc:	1aed      	subs	r5, r5, r3
900207fe:	b2ad      	uxth	r5, r5
90020800:	042b      	lsls	r3, r5, #16
90020802:	d502      	bpl.n	9002080a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90020804:	1b64      	subs	r4, r4, r5
90020806:	2500      	movs	r5, #0
90020808:	b224      	sxth	r4, r4
9002080a:	f9b2 1000 	ldrsh.w	r1, [r2]
9002080e:	a814      	add	r0, sp, #80	@ 0x50
90020810:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
90020814:	428c      	cmp	r4, r1
90020816:	b28b      	uxth	r3, r1
90020818:	bfbf      	itttt	lt
9002081a:	18ed      	addlt	r5, r5, r3
9002081c:	1b2c      	sublt	r4, r5, r4
9002081e:	b2a5      	uxthlt	r5, r4
90020820:	460c      	movlt	r4, r1
90020822:	8891      	ldrh	r1, [r2, #4]
90020824:	440b      	add	r3, r1
90020826:	4621      	mov	r1, r4
90020828:	b21b      	sxth	r3, r3
9002082a:	930f      	str	r3, [sp, #60]	@ 0x3c
9002082c:	88d3      	ldrh	r3, [r2, #6]
9002082e:	8852      	ldrh	r2, [r2, #2]
90020830:	4413      	add	r3, r2
90020832:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90020834:	b21b      	sxth	r3, r3
90020836:	930d      	str	r3, [sp, #52]	@ 0x34
90020838:	4bbd      	ldr	r3, [pc, #756]	@ (90020b30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
9002083a:	f893 b000 	ldrb.w	fp, [r3]
9002083e:	f10b 3cff 	add.w	ip, fp, #4294967295
90020842:	f1dc 0300 	rsbs	r3, ip, #0
90020846:	eb43 030c 	adc.w	r3, r3, ip
9002084a:	930e      	str	r3, [sp, #56]	@ 0x38
9002084c:	4653      	mov	r3, sl
9002084e:	f7f5 fe84 	bl	9001655a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
90020852:	4621      	mov	r1, r4
90020854:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
90020858:	4653      	mov	r3, sl
9002085a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002085c:	a814      	add	r0, sp, #80	@ 0x50
9002085e:	f7f5 fe99 	bl	90016594 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
90020862:	a918      	add	r1, sp, #96	@ 0x60
90020864:	f821 0d02 	strh.w	r0, [r1, #-2]!
90020868:	a817      	add	r0, sp, #92	@ 0x5c
9002086a:	f7f5 ffbf 	bl	900167ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
9002086e:	f1ba 0f00 	cmp.w	sl, #0
90020872:	f040 80f4 	bne.w	90020a5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
90020876:	f1bb 0f01 	cmp.w	fp, #1
9002087a:	f040 80f8 	bne.w	90020a6e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
9002087e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020880:	2b00      	cmp	r3, #0
90020882:	f040 8145 	bne.w	90020b10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
90020886:	b2ba      	uxth	r2, r7
90020888:	b905      	cbnz	r5, 9002088c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9002088a:	b16e      	cbz	r6, 900208a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
9002088c:	fb06 5302 	mla	r3, r6, r2, r5
90020890:	9828      	ldr	r0, [sp, #160]	@ 0xa0
90020892:	4631      	mov	r1, r6
90020894:	fb08 f303 	mul.w	r3, r8, r3
90020898:	f003 0607 	and.w	r6, r3, #7
9002089c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
900208a0:	9328      	str	r3, [sp, #160]	@ 0xa0
900208a2:	eba9 0301 	sub.w	r3, r9, r1
900208a6:	930a      	str	r3, [sp, #40]	@ 0x28
900208a8:	4651      	mov	r1, sl
900208aa:	980e      	ldr	r0, [sp, #56]	@ 0x38
900208ac:	f7ff ff1c 	bl	900206e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
900208b0:	4681      	mov	r9, r0
900208b2:	980e      	ldr	r0, [sp, #56]	@ 0x38
900208b4:	f7ff ff42 	bl	9002073c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
900208b8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900208ba:	9909      	ldr	r1, [sp, #36]	@ 0x24
900208bc:	4683      	mov	fp, r0
900208be:	eba3 0a01 	sub.w	sl, r3, r1
900208c2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900208c4:	459a      	cmp	sl, r3
900208c6:	bfa8      	it	ge
900208c8:	469a      	movge	sl, r3
900208ca:	f1ba 0f00 	cmp.w	sl, #0
900208ce:	f340 811a 	ble.w	90020b06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
900208d2:	1b64      	subs	r4, r4, r5
900208d4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900208d6:	1b1c      	subs	r4, r3, r4
900208d8:	42bc      	cmp	r4, r7
900208da:	bfd4      	ite	le
900208dc:	ebc5 0504 	rsble	r5, r5, r4
900208e0:	ebc5 0507 	rsbgt	r5, r5, r7
900208e4:	2d00      	cmp	r5, #0
900208e6:	f340 810e 	ble.w	90020b06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
900208ea:	1b52      	subs	r2, r2, r5
900208ec:	fb08 f302 	mul.w	r3, r8, r2
900208f0:	930f      	str	r3, [sp, #60]	@ 0x3c
900208f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900208f4:	2b00      	cmp	r3, #0
900208f6:	f040 8116 	bne.w	90020b26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
900208fa:	4b8e      	ldr	r3, [pc, #568]	@ (90020b34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
900208fc:	6818      	ldr	r0, [r3, #0]
900208fe:	6803      	ldr	r3, [r0, #0]
90020900:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90020902:	4798      	blx	r3
90020904:	2301      	movs	r3, #1
90020906:	4a8c      	ldr	r2, [pc, #560]	@ (90020b38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
90020908:	fa03 f308 	lsl.w	r3, r3, r8
9002090c:	8811      	ldrh	r1, [r2, #0]
9002090e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
90020912:	3b01      	subs	r3, #1
90020914:	b2db      	uxtb	r3, r3
90020916:	930e      	str	r3, [sp, #56]	@ 0x38
90020918:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
9002091c:	fb01 2303 	mla	r3, r1, r3, r2
90020920:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90020924:	930a      	str	r3, [sp, #40]	@ 0x28
90020926:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90020928:	f3c3 4307 	ubfx	r3, r3, #16, #8
9002092c:	9313      	str	r3, [sp, #76]	@ 0x4c
9002092e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90020930:	0a19      	lsrs	r1, r3, #8
90020932:	b2cb      	uxtb	r3, r1
90020934:	9312      	str	r3, [sp, #72]	@ 0x48
90020936:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90020938:	b2db      	uxtb	r3, r3
9002093a:	9311      	str	r3, [sp, #68]	@ 0x44
9002093c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002093e:	095a      	lsrs	r2, r3, #5
90020940:	4b7e      	ldr	r3, [pc, #504]	@ (90020b3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
90020942:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90020946:	400b      	ands	r3, r1
90020948:	4313      	orrs	r3, r2
9002094a:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
9002094c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90020950:	4313      	orrs	r3, r2
90020952:	b29b      	uxth	r3, r3
90020954:	9310      	str	r3, [sp, #64]	@ 0x40
90020956:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90020958:	781a      	ldrb	r2, [r3, #0]
9002095a:	ea4f 0349 	mov.w	r3, r9, lsl #1
9002095e:	fb05 b919 	mls	r9, r5, r9, fp
90020962:	4132      	asrs	r2, r6
90020964:	fb03 fb05 	mul.w	fp, r3, r5
90020968:	930d      	str	r3, [sp, #52]	@ 0x34
9002096a:	b2d2      	uxtb	r2, r2
9002096c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
90020970:	f11a 3aff 	adds.w	sl, sl, #4294967295
90020974:	f0c0 80f5 	bcc.w	90020b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
90020978:	46ae      	mov	lr, r5
9002097a:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
9002097e:	f11e 3eff 	adds.w	lr, lr, #4294967295
90020982:	f0c0 80dd 	bcc.w	90020b40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
90020986:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90020988:	4013      	ands	r3, r2
9002098a:	d055      	beq.n	90020a38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
9002098c:	20ff      	movs	r0, #255	@ 0xff
9002098e:	990e      	ldr	r1, [sp, #56]	@ 0x38
90020990:	fb90 f1f1 	sdiv	r1, r0, r1
90020994:	434b      	muls	r3, r1
90020996:	2bfe      	cmp	r3, #254	@ 0xfe
90020998:	dd03      	ble.n	900209a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
9002099a:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002099c:	4281      	cmp	r1, r0
9002099e:	f000 80c4 	beq.w	90020b2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
900209a2:	990c      	ldr	r1, [sp, #48]	@ 0x30
900209a4:	f8bc 4000 	ldrh.w	r4, [ip]
900209a8:	fb11 f303 	smulbb	r3, r1, r3
900209ac:	1220      	asrs	r0, r4, #8
900209ae:	b29b      	uxth	r3, r3
900209b0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900209b4:	1c59      	adds	r1, r3, #1
900209b6:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
900209ba:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900209be:	10e1      	asrs	r1, r4, #3
900209c0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900209c4:	00e4      	lsls	r4, r4, #3
900209c6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900209ca:	b29f      	uxth	r7, r3
900209cc:	43db      	mvns	r3, r3
900209ce:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
900209d2:	b2db      	uxtb	r3, r3
900209d4:	b2e4      	uxtb	r4, r4
900209d6:	9309      	str	r3, [sp, #36]	@ 0x24
900209d8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900209da:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
900209de:	fb13 f907 	smulbb	r9, r3, r7
900209e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900209e4:	fb00 9003 	mla	r0, r0, r3, r9
900209e8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
900209ea:	fb13 f907 	smulbb	r9, r3, r7
900209ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900209f0:	b280      	uxth	r0, r0
900209f2:	fb01 9103 	mla	r1, r1, r3, r9
900209f6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900209f8:	fb13 f707 	smulbb	r7, r3, r7
900209fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900209fe:	b289      	uxth	r1, r1
90020a00:	fb04 7403 	mla	r4, r4, r3, r7
90020a04:	1c43      	adds	r3, r0, #1
90020a06:	b2a4      	uxth	r4, r4
90020a08:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90020a0c:	f104 0901 	add.w	r9, r4, #1
90020a10:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90020a14:	eb09 2914 	add.w	r9, r9, r4, lsr #8
90020a18:	f3c9 29c4 	ubfx	r9, r9, #11, #5
90020a1c:	ea49 0000 	orr.w	r0, r9, r0
90020a20:	f101 0901 	add.w	r9, r1, #1
90020a24:	eb09 2911 	add.w	r9, r9, r1, lsr #8
90020a28:	ea4f 1959 	mov.w	r9, r9, lsr #5
90020a2c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90020a30:	ea40 0009 	orr.w	r0, r0, r9
90020a34:	f8ac 0000 	strh.w	r0, [ip]
90020a38:	4446      	add	r6, r8
90020a3a:	b2b6      	uxth	r6, r6
90020a3c:	2e07      	cmp	r6, #7
90020a3e:	bf89      	itett	hi
90020a40:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
90020a42:	fa42 f208 	asrls.w	r2, r2, r8
90020a46:	2600      	movhi	r6, #0
90020a48:	785a      	ldrbhi	r2, [r3, #1]
90020a4a:	bf8a      	itet	hi
90020a4c:	3301      	addhi	r3, #1
90020a4e:	b2d2      	uxtbls	r2, r2
90020a50:	9328      	strhi	r3, [sp, #160]	@ 0xa0
90020a52:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020a54:	449c      	add	ip, r3
90020a56:	e792      	b.n	9002097e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
90020a58:	441c      	add	r4, r3
90020a5a:	b224      	sxth	r4, r4
90020a5c:	e6d5      	b.n	9002080a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90020a5e:	f1ba 0f01 	cmp.w	sl, #1
90020a62:	f47f af0c 	bne.w	9002087e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020a66:	f1bb 0f01 	cmp.w	fp, #1
90020a6a:	f47f af08 	bne.w	9002087e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020a6e:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 90020b34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
90020a72:	f8db 0000 	ldr.w	r0, [fp]
90020a76:	6803      	ldr	r3, [r0, #0]
90020a78:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90020a7a:	4798      	blx	r3
90020a7c:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
90020a80:	465a      	mov	r2, fp
90020a82:	d006      	beq.n	90020a92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
90020a84:	f1b8 0f04 	cmp.w	r8, #4
90020a88:	d140      	bne.n	90020b0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
90020a8a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020a8c:	3300      	adds	r3, #0
90020a8e:	bf18      	it	ne
90020a90:	2301      	movne	r3, #1
90020a92:	0580      	lsls	r0, r0, #22
90020a94:	d56e      	bpl.n	90020b74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
90020a96:	f1b8 0f08 	cmp.w	r8, #8
90020a9a:	d16b      	bne.n	90020b74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
90020a9c:	2b00      	cmp	r3, #0
90020a9e:	bf0c      	ite	eq
90020aa0:	f44f 7100 	moveq.w	r1, #512	@ 0x200
90020aa4:	f44f 7180 	movne.w	r1, #256	@ 0x100
90020aa8:	2d00      	cmp	r5, #0
90020aaa:	f47f aee8 	bne.w	9002087e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020aae:	2e00      	cmp	r6, #0
90020ab0:	f47f aee5 	bne.w	9002087e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020ab4:	19e3      	adds	r3, r4, r7
90020ab6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90020ab8:	4283      	cmp	r3, r0
90020aba:	f73f aee0 	bgt.w	9002087e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020abe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020ac0:	980d      	ldr	r0, [sp, #52]	@ 0x34
90020ac2:	444b      	add	r3, r9
90020ac4:	4283      	cmp	r3, r0
90020ac6:	f73f aeda 	bgt.w	9002087e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020aca:	b2bf      	uxth	r7, r7
90020acc:	f1b8 0f08 	cmp.w	r8, #8
90020ad0:	6810      	ldr	r0, [r2, #0]
90020ad2:	f04f 0500 	mov.w	r5, #0
90020ad6:	bf18      	it	ne
90020ad8:	3701      	addne	r7, #1
90020ada:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
90020ade:	6804      	ldr	r4, [r0, #0]
90020ae0:	bf18      	it	ne
90020ae2:	f027 0701 	bicne.w	r7, r7, #1
90020ae6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90020aea:	e9cd 1505 	strd	r1, r5, [sp, #20]
90020aee:	990c      	ldr	r1, [sp, #48]	@ 0x30
90020af0:	bf18      	it	ne
90020af2:	b2bf      	uxthne	r7, r7
90020af4:	9104      	str	r1, [sp, #16]
90020af6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90020af8:	e9cd 7900 	strd	r7, r9, [sp]
90020afc:	e9cd 7102 	strd	r7, r1, [sp, #8]
90020b00:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90020b02:	6d64      	ldr	r4, [r4, #84]	@ 0x54
90020b04:	47a0      	blx	r4
90020b06:	b019      	add	sp, #100	@ 0x64
90020b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020b0c:	2300      	movs	r3, #0
90020b0e:	e7c0      	b.n	90020a92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
90020b10:	2208      	movs	r2, #8
90020b12:	fb92 f3f8 	sdiv	r3, r2, r8
90020b16:	1e5a      	subs	r2, r3, #1
90020b18:	443a      	add	r2, r7
90020b1a:	fb92 f2f3 	sdiv	r2, r2, r3
90020b1e:	fb12 f203 	smulbb	r2, r2, r3
90020b22:	b292      	uxth	r2, r2
90020b24:	e6b0      	b.n	90020888 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
90020b26:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90020b28:	e6ec      	b.n	90020904 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
90020b2a:	9810      	ldr	r0, [sp, #64]	@ 0x40
90020b2c:	e782      	b.n	90020a34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
90020b2e:	bf00      	nop
90020b30:	240233cc 	.word	0x240233cc
90020b34:	240233d4 	.word	0x240233d4
90020b38:	240233ce 	.word	0x240233ce
90020b3c:	00fff800 	.word	0x00fff800
90020b40:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90020b42:	b153      	cbz	r3, 90020b5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
90020b44:	441e      	add	r6, r3
90020b46:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90020b48:	b2b6      	uxth	r6, r6
90020b4a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
90020b4e:	f006 0607 	and.w	r6, r6, #7
90020b52:	781a      	ldrb	r2, [r3, #0]
90020b54:	9328      	str	r3, [sp, #160]	@ 0xa0
90020b56:	4132      	asrs	r2, r6
90020b58:	b2d2      	uxtb	r2, r2
90020b5a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020b5c:	445b      	add	r3, fp
90020b5e:	930a      	str	r3, [sp, #40]	@ 0x28
90020b60:	e706      	b.n	90020970 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
90020b62:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90020b64:	2b00      	cmp	r3, #0
90020b66:	d1ce      	bne.n	90020b06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020b68:	4b05      	ldr	r3, [pc, #20]	@ (90020b80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
90020b6a:	6818      	ldr	r0, [r3, #0]
90020b6c:	6803      	ldr	r3, [r0, #0]
90020b6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020b70:	4798      	blx	r3
90020b72:	e7c8      	b.n	90020b06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020b74:	2b00      	cmp	r3, #0
90020b76:	f43f ae82 	beq.w	9002087e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020b7a:	f44f 7180 	mov.w	r1, #256	@ 0x100
90020b7e:	e793      	b.n	90020aa8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
90020b80:	240233d4 	.word	0x240233d4

90020b84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
90020b84:	b538      	push	{r3, r4, r5, lr}
90020b86:	4c15      	ldr	r4, [pc, #84]	@ (90020bdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
90020b88:	4605      	mov	r5, r0
90020b8a:	7823      	ldrb	r3, [r4, #0]
90020b8c:	f3bf 8f5b 	dmb	ish
90020b90:	07da      	lsls	r2, r3, #31
90020b92:	d40b      	bmi.n	90020bac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90020b94:	4620      	mov	r0, r4
90020b96:	f008 fc6b 	bl	90029470 <__cxa_guard_acquire>
90020b9a:	b138      	cbz	r0, 90020bac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90020b9c:	4620      	mov	r0, r4
90020b9e:	f008 fc73 	bl	90029488 <__cxa_guard_release>
90020ba2:	4a0f      	ldr	r2, [pc, #60]	@ (90020be0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90020ba4:	490f      	ldr	r1, [pc, #60]	@ (90020be4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
90020ba6:	4810      	ldr	r0, [pc, #64]	@ (90020be8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90020ba8:	f008 fc5b 	bl	90029462 <__aeabi_atexit>
90020bac:	4c0f      	ldr	r4, [pc, #60]	@ (90020bec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
90020bae:	7823      	ldrb	r3, [r4, #0]
90020bb0:	f3bf 8f5b 	dmb	ish
90020bb4:	07db      	lsls	r3, r3, #31
90020bb6:	d40b      	bmi.n	90020bd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90020bb8:	4620      	mov	r0, r4
90020bba:	f008 fc59 	bl	90029470 <__cxa_guard_acquire>
90020bbe:	b138      	cbz	r0, 90020bd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90020bc0:	4620      	mov	r0, r4
90020bc2:	f008 fc61 	bl	90029488 <__cxa_guard_release>
90020bc6:	4a06      	ldr	r2, [pc, #24]	@ (90020be0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90020bc8:	4909      	ldr	r1, [pc, #36]	@ (90020bf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
90020bca:	480a      	ldr	r0, [pc, #40]	@ (90020bf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90020bcc:	f008 fc49 	bl	90029462 <__aeabi_atexit>
90020bd0:	4b05      	ldr	r3, [pc, #20]	@ (90020be8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90020bd2:	616b      	str	r3, [r5, #20]
90020bd4:	4b07      	ldr	r3, [pc, #28]	@ (90020bf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90020bd6:	61ab      	str	r3, [r5, #24]
90020bd8:	bd38      	pop	{r3, r4, r5, pc}
90020bda:	bf00      	nop
90020bdc:	240234b8 	.word	0x240234b8
90020be0:	24000000 	.word	0x24000000
90020be4:	9001cd21 	.word	0x9001cd21
90020be8:	240000f4 	.word	0x240000f4
90020bec:	240234bc 	.word	0x240234bc
90020bf0:	9001cd1f 	.word	0x9001cd1f
90020bf4:	240000f8 	.word	0x240000f8

90020bf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
90020bf8:	b538      	push	{r3, r4, r5, lr}
90020bfa:	4c15      	ldr	r4, [pc, #84]	@ (90020c50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
90020bfc:	4605      	mov	r5, r0
90020bfe:	7823      	ldrb	r3, [r4, #0]
90020c00:	f3bf 8f5b 	dmb	ish
90020c04:	07da      	lsls	r2, r3, #31
90020c06:	d40b      	bmi.n	90020c20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90020c08:	4620      	mov	r0, r4
90020c0a:	f008 fc31 	bl	90029470 <__cxa_guard_acquire>
90020c0e:	b138      	cbz	r0, 90020c20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90020c10:	4620      	mov	r0, r4
90020c12:	f008 fc39 	bl	90029488 <__cxa_guard_release>
90020c16:	4a0f      	ldr	r2, [pc, #60]	@ (90020c54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90020c18:	490f      	ldr	r1, [pc, #60]	@ (90020c58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
90020c1a:	4810      	ldr	r0, [pc, #64]	@ (90020c5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90020c1c:	f008 fc21 	bl	90029462 <__aeabi_atexit>
90020c20:	4c0f      	ldr	r4, [pc, #60]	@ (90020c60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
90020c22:	7823      	ldrb	r3, [r4, #0]
90020c24:	f3bf 8f5b 	dmb	ish
90020c28:	07db      	lsls	r3, r3, #31
90020c2a:	d40b      	bmi.n	90020c44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90020c2c:	4620      	mov	r0, r4
90020c2e:	f008 fc1f 	bl	90029470 <__cxa_guard_acquire>
90020c32:	b138      	cbz	r0, 90020c44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90020c34:	4620      	mov	r0, r4
90020c36:	f008 fc27 	bl	90029488 <__cxa_guard_release>
90020c3a:	4a06      	ldr	r2, [pc, #24]	@ (90020c54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90020c3c:	4909      	ldr	r1, [pc, #36]	@ (90020c64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
90020c3e:	480a      	ldr	r0, [pc, #40]	@ (90020c68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90020c40:	f008 fc0f 	bl	90029462 <__aeabi_atexit>
90020c44:	4b05      	ldr	r3, [pc, #20]	@ (90020c5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90020c46:	60eb      	str	r3, [r5, #12]
90020c48:	4b07      	ldr	r3, [pc, #28]	@ (90020c68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90020c4a:	612b      	str	r3, [r5, #16]
90020c4c:	bd38      	pop	{r3, r4, r5, pc}
90020c4e:	bf00      	nop
90020c50:	24023490 	.word	0x24023490
90020c54:	24000000 	.word	0x24000000
90020c58:	9001cd25 	.word	0x9001cd25
90020c5c:	240000cc 	.word	0x240000cc
90020c60:	24023494 	.word	0x24023494
90020c64:	9001cd23 	.word	0x9001cd23
90020c68:	240000d0 	.word	0x240000d0

90020c6c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
90020c6c:	b510      	push	{r4, lr}
90020c6e:	4604      	mov	r4, r0
90020c70:	f7ff ff88 	bl	90020b84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
90020c74:	4620      	mov	r0, r4
90020c76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020c7a:	f7ff bfbd 	b.w	90020bf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

90020c80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
90020c80:	b538      	push	{r3, r4, r5, lr}
90020c82:	4c15      	ldr	r4, [pc, #84]	@ (90020cd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
90020c84:	4605      	mov	r5, r0
90020c86:	7823      	ldrb	r3, [r4, #0]
90020c88:	f3bf 8f5b 	dmb	ish
90020c8c:	07da      	lsls	r2, r3, #31
90020c8e:	d40b      	bmi.n	90020ca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90020c90:	4620      	mov	r0, r4
90020c92:	f008 fbed 	bl	90029470 <__cxa_guard_acquire>
90020c96:	b138      	cbz	r0, 90020ca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90020c98:	4620      	mov	r0, r4
90020c9a:	f008 fbf5 	bl	90029488 <__cxa_guard_release>
90020c9e:	4a0f      	ldr	r2, [pc, #60]	@ (90020cdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90020ca0:	490f      	ldr	r1, [pc, #60]	@ (90020ce0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
90020ca2:	4810      	ldr	r0, [pc, #64]	@ (90020ce4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90020ca4:	f008 fbdd 	bl	90029462 <__aeabi_atexit>
90020ca8:	4c0f      	ldr	r4, [pc, #60]	@ (90020ce8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
90020caa:	7823      	ldrb	r3, [r4, #0]
90020cac:	f3bf 8f5b 	dmb	ish
90020cb0:	07db      	lsls	r3, r3, #31
90020cb2:	d40b      	bmi.n	90020ccc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90020cb4:	4620      	mov	r0, r4
90020cb6:	f008 fbdb 	bl	90029470 <__cxa_guard_acquire>
90020cba:	b138      	cbz	r0, 90020ccc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90020cbc:	4620      	mov	r0, r4
90020cbe:	f008 fbe3 	bl	90029488 <__cxa_guard_release>
90020cc2:	4a06      	ldr	r2, [pc, #24]	@ (90020cdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90020cc4:	4909      	ldr	r1, [pc, #36]	@ (90020cec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
90020cc6:	480a      	ldr	r0, [pc, #40]	@ (90020cf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90020cc8:	f008 fbcb 	bl	90029462 <__aeabi_atexit>
90020ccc:	4b05      	ldr	r3, [pc, #20]	@ (90020ce4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90020cce:	626b      	str	r3, [r5, #36]	@ 0x24
90020cd0:	4b07      	ldr	r3, [pc, #28]	@ (90020cf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90020cd2:	62ab      	str	r3, [r5, #40]	@ 0x28
90020cd4:	bd38      	pop	{r3, r4, r5, pc}
90020cd6:	bf00      	nop
90020cd8:	240234c0 	.word	0x240234c0
90020cdc:	24000000 	.word	0x24000000
90020ce0:	9001cd19 	.word	0x9001cd19
90020ce4:	240000fc 	.word	0x240000fc
90020ce8:	240234c4 	.word	0x240234c4
90020cec:	9001cd17 	.word	0x9001cd17
90020cf0:	24000100 	.word	0x24000100

90020cf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
90020cf4:	b538      	push	{r3, r4, r5, lr}
90020cf6:	4c15      	ldr	r4, [pc, #84]	@ (90020d4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
90020cf8:	4605      	mov	r5, r0
90020cfa:	7823      	ldrb	r3, [r4, #0]
90020cfc:	f3bf 8f5b 	dmb	ish
90020d00:	07da      	lsls	r2, r3, #31
90020d02:	d40b      	bmi.n	90020d1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90020d04:	4620      	mov	r0, r4
90020d06:	f008 fbb3 	bl	90029470 <__cxa_guard_acquire>
90020d0a:	b138      	cbz	r0, 90020d1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90020d0c:	4620      	mov	r0, r4
90020d0e:	f008 fbbb 	bl	90029488 <__cxa_guard_release>
90020d12:	4a0f      	ldr	r2, [pc, #60]	@ (90020d50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90020d14:	490f      	ldr	r1, [pc, #60]	@ (90020d54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
90020d16:	4810      	ldr	r0, [pc, #64]	@ (90020d58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90020d18:	f008 fba3 	bl	90029462 <__aeabi_atexit>
90020d1c:	4c0f      	ldr	r4, [pc, #60]	@ (90020d5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
90020d1e:	7823      	ldrb	r3, [r4, #0]
90020d20:	f3bf 8f5b 	dmb	ish
90020d24:	07db      	lsls	r3, r3, #31
90020d26:	d40b      	bmi.n	90020d40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90020d28:	4620      	mov	r0, r4
90020d2a:	f008 fba1 	bl	90029470 <__cxa_guard_acquire>
90020d2e:	b138      	cbz	r0, 90020d40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90020d30:	4620      	mov	r0, r4
90020d32:	f008 fba9 	bl	90029488 <__cxa_guard_release>
90020d36:	4a06      	ldr	r2, [pc, #24]	@ (90020d50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90020d38:	4909      	ldr	r1, [pc, #36]	@ (90020d60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
90020d3a:	480a      	ldr	r0, [pc, #40]	@ (90020d64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90020d3c:	f008 fb91 	bl	90029462 <__aeabi_atexit>
90020d40:	4b05      	ldr	r3, [pc, #20]	@ (90020d58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90020d42:	61eb      	str	r3, [r5, #28]
90020d44:	4b07      	ldr	r3, [pc, #28]	@ (90020d64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90020d46:	622b      	str	r3, [r5, #32]
90020d48:	bd38      	pop	{r3, r4, r5, pc}
90020d4a:	bf00      	nop
90020d4c:	24023498 	.word	0x24023498
90020d50:	24000000 	.word	0x24000000
90020d54:	9001cd1d 	.word	0x9001cd1d
90020d58:	240000d4 	.word	0x240000d4
90020d5c:	2402349c 	.word	0x2402349c
90020d60:	9001cd1b 	.word	0x9001cd1b
90020d64:	240000d8 	.word	0x240000d8

90020d68 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
90020d68:	b510      	push	{r4, lr}
90020d6a:	4604      	mov	r4, r0
90020d6c:	f7ff ff88 	bl	90020c80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
90020d70:	4620      	mov	r0, r4
90020d72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020d76:	f7ff bfbd 	b.w	90020cf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

90020d7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
90020d7c:	b538      	push	{r3, r4, r5, lr}
90020d7e:	4c15      	ldr	r4, [pc, #84]	@ (90020dd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
90020d80:	4605      	mov	r5, r0
90020d82:	7823      	ldrb	r3, [r4, #0]
90020d84:	f3bf 8f5b 	dmb	ish
90020d88:	07da      	lsls	r2, r3, #31
90020d8a:	d40b      	bmi.n	90020da4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90020d8c:	4620      	mov	r0, r4
90020d8e:	f008 fb6f 	bl	90029470 <__cxa_guard_acquire>
90020d92:	b138      	cbz	r0, 90020da4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90020d94:	4620      	mov	r0, r4
90020d96:	f008 fb77 	bl	90029488 <__cxa_guard_release>
90020d9a:	4a0f      	ldr	r2, [pc, #60]	@ (90020dd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90020d9c:	490f      	ldr	r1, [pc, #60]	@ (90020ddc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
90020d9e:	4810      	ldr	r0, [pc, #64]	@ (90020de0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90020da0:	f008 fb5f 	bl	90029462 <__aeabi_atexit>
90020da4:	4c0f      	ldr	r4, [pc, #60]	@ (90020de4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
90020da6:	7823      	ldrb	r3, [r4, #0]
90020da8:	f3bf 8f5b 	dmb	ish
90020dac:	07db      	lsls	r3, r3, #31
90020dae:	d40b      	bmi.n	90020dc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90020db0:	4620      	mov	r0, r4
90020db2:	f008 fb5d 	bl	90029470 <__cxa_guard_acquire>
90020db6:	b138      	cbz	r0, 90020dc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90020db8:	4620      	mov	r0, r4
90020dba:	f008 fb65 	bl	90029488 <__cxa_guard_release>
90020dbe:	4a06      	ldr	r2, [pc, #24]	@ (90020dd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90020dc0:	4909      	ldr	r1, [pc, #36]	@ (90020de8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
90020dc2:	480a      	ldr	r0, [pc, #40]	@ (90020dec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90020dc4:	f008 fb4d 	bl	90029462 <__aeabi_atexit>
90020dc8:	4b05      	ldr	r3, [pc, #20]	@ (90020de0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90020dca:	636b      	str	r3, [r5, #52]	@ 0x34
90020dcc:	4b07      	ldr	r3, [pc, #28]	@ (90020dec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90020dce:	63ab      	str	r3, [r5, #56]	@ 0x38
90020dd0:	bd38      	pop	{r3, r4, r5, pc}
90020dd2:	bf00      	nop
90020dd4:	240234d0 	.word	0x240234d0
90020dd8:	24000000 	.word	0x24000000
90020ddc:	9001cd11 	.word	0x9001cd11
90020de0:	2400010c 	.word	0x2400010c
90020de4:	240234d4 	.word	0x240234d4
90020de8:	9001cd0f 	.word	0x9001cd0f
90020dec:	24000110 	.word	0x24000110

90020df0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
90020df0:	b538      	push	{r3, r4, r5, lr}
90020df2:	4c15      	ldr	r4, [pc, #84]	@ (90020e48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
90020df4:	4605      	mov	r5, r0
90020df6:	7823      	ldrb	r3, [r4, #0]
90020df8:	f3bf 8f5b 	dmb	ish
90020dfc:	07da      	lsls	r2, r3, #31
90020dfe:	d40b      	bmi.n	90020e18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90020e00:	4620      	mov	r0, r4
90020e02:	f008 fb35 	bl	90029470 <__cxa_guard_acquire>
90020e06:	b138      	cbz	r0, 90020e18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90020e08:	4620      	mov	r0, r4
90020e0a:	f008 fb3d 	bl	90029488 <__cxa_guard_release>
90020e0e:	4a0f      	ldr	r2, [pc, #60]	@ (90020e4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90020e10:	490f      	ldr	r1, [pc, #60]	@ (90020e50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
90020e12:	4810      	ldr	r0, [pc, #64]	@ (90020e54 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90020e14:	f008 fb25 	bl	90029462 <__aeabi_atexit>
90020e18:	4c0f      	ldr	r4, [pc, #60]	@ (90020e58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
90020e1a:	7823      	ldrb	r3, [r4, #0]
90020e1c:	f3bf 8f5b 	dmb	ish
90020e20:	07db      	lsls	r3, r3, #31
90020e22:	d40b      	bmi.n	90020e3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90020e24:	4620      	mov	r0, r4
90020e26:	f008 fb23 	bl	90029470 <__cxa_guard_acquire>
90020e2a:	b138      	cbz	r0, 90020e3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90020e2c:	4620      	mov	r0, r4
90020e2e:	f008 fb2b 	bl	90029488 <__cxa_guard_release>
90020e32:	4a06      	ldr	r2, [pc, #24]	@ (90020e4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90020e34:	4909      	ldr	r1, [pc, #36]	@ (90020e5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
90020e36:	480a      	ldr	r0, [pc, #40]	@ (90020e60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90020e38:	f008 fb13 	bl	90029462 <__aeabi_atexit>
90020e3c:	4b05      	ldr	r3, [pc, #20]	@ (90020e54 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90020e3e:	62eb      	str	r3, [r5, #44]	@ 0x2c
90020e40:	4b07      	ldr	r3, [pc, #28]	@ (90020e60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90020e42:	632b      	str	r3, [r5, #48]	@ 0x30
90020e44:	bd38      	pop	{r3, r4, r5, pc}
90020e46:	bf00      	nop
90020e48:	240234a0 	.word	0x240234a0
90020e4c:	24000000 	.word	0x24000000
90020e50:	9001cd15 	.word	0x9001cd15
90020e54:	240000dc 	.word	0x240000dc
90020e58:	240234a4 	.word	0x240234a4
90020e5c:	9001cd13 	.word	0x9001cd13
90020e60:	240000e0 	.word	0x240000e0

90020e64 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
90020e64:	b510      	push	{r4, lr}
90020e66:	4604      	mov	r4, r0
90020e68:	f7ff ff88 	bl	90020d7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
90020e6c:	4620      	mov	r0, r4
90020e6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020e72:	f7ff bfbd 	b.w	90020df0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

90020e78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
90020e78:	b538      	push	{r3, r4, r5, lr}
90020e7a:	4c15      	ldr	r4, [pc, #84]	@ (90020ed0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
90020e7c:	4605      	mov	r5, r0
90020e7e:	7823      	ldrb	r3, [r4, #0]
90020e80:	f3bf 8f5b 	dmb	ish
90020e84:	07da      	lsls	r2, r3, #31
90020e86:	d40b      	bmi.n	90020ea0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90020e88:	4620      	mov	r0, r4
90020e8a:	f008 faf1 	bl	90029470 <__cxa_guard_acquire>
90020e8e:	b138      	cbz	r0, 90020ea0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90020e90:	4620      	mov	r0, r4
90020e92:	f008 faf9 	bl	90029488 <__cxa_guard_release>
90020e96:	4a0f      	ldr	r2, [pc, #60]	@ (90020ed4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90020e98:	490f      	ldr	r1, [pc, #60]	@ (90020ed8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
90020e9a:	4810      	ldr	r0, [pc, #64]	@ (90020edc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90020e9c:	f008 fae1 	bl	90029462 <__aeabi_atexit>
90020ea0:	4c0f      	ldr	r4, [pc, #60]	@ (90020ee0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
90020ea2:	7823      	ldrb	r3, [r4, #0]
90020ea4:	f3bf 8f5b 	dmb	ish
90020ea8:	07db      	lsls	r3, r3, #31
90020eaa:	d40b      	bmi.n	90020ec4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90020eac:	4620      	mov	r0, r4
90020eae:	f008 fadf 	bl	90029470 <__cxa_guard_acquire>
90020eb2:	b138      	cbz	r0, 90020ec4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90020eb4:	4620      	mov	r0, r4
90020eb6:	f008 fae7 	bl	90029488 <__cxa_guard_release>
90020eba:	4a06      	ldr	r2, [pc, #24]	@ (90020ed4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90020ebc:	4909      	ldr	r1, [pc, #36]	@ (90020ee4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
90020ebe:	480a      	ldr	r0, [pc, #40]	@ (90020ee8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90020ec0:	f008 facf 	bl	90029462 <__aeabi_atexit>
90020ec4:	4b05      	ldr	r3, [pc, #20]	@ (90020edc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90020ec6:	656b      	str	r3, [r5, #84]	@ 0x54
90020ec8:	4b07      	ldr	r3, [pc, #28]	@ (90020ee8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90020eca:	65ab      	str	r3, [r5, #88]	@ 0x58
90020ecc:	bd38      	pop	{r3, r4, r5, pc}
90020ece:	bf00      	nop
90020ed0:	240234d8 	.word	0x240234d8
90020ed4:	24000000 	.word	0x24000000
90020ed8:	9001cd01 	.word	0x9001cd01
90020edc:	24000114 	.word	0x24000114
90020ee0:	240234dc 	.word	0x240234dc
90020ee4:	9001ccff 	.word	0x9001ccff
90020ee8:	24000118 	.word	0x24000118

90020eec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
90020eec:	b538      	push	{r3, r4, r5, lr}
90020eee:	4c15      	ldr	r4, [pc, #84]	@ (90020f44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
90020ef0:	4605      	mov	r5, r0
90020ef2:	7823      	ldrb	r3, [r4, #0]
90020ef4:	f3bf 8f5b 	dmb	ish
90020ef8:	07da      	lsls	r2, r3, #31
90020efa:	d40b      	bmi.n	90020f14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90020efc:	4620      	mov	r0, r4
90020efe:	f008 fab7 	bl	90029470 <__cxa_guard_acquire>
90020f02:	b138      	cbz	r0, 90020f14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90020f04:	4620      	mov	r0, r4
90020f06:	f008 fabf 	bl	90029488 <__cxa_guard_release>
90020f0a:	4a0f      	ldr	r2, [pc, #60]	@ (90020f48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90020f0c:	490f      	ldr	r1, [pc, #60]	@ (90020f4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
90020f0e:	4810      	ldr	r0, [pc, #64]	@ (90020f50 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90020f10:	f008 faa7 	bl	90029462 <__aeabi_atexit>
90020f14:	4c0f      	ldr	r4, [pc, #60]	@ (90020f54 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
90020f16:	7823      	ldrb	r3, [r4, #0]
90020f18:	f3bf 8f5b 	dmb	ish
90020f1c:	07db      	lsls	r3, r3, #31
90020f1e:	d40b      	bmi.n	90020f38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90020f20:	4620      	mov	r0, r4
90020f22:	f008 faa5 	bl	90029470 <__cxa_guard_acquire>
90020f26:	b138      	cbz	r0, 90020f38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90020f28:	4620      	mov	r0, r4
90020f2a:	f008 faad 	bl	90029488 <__cxa_guard_release>
90020f2e:	4a06      	ldr	r2, [pc, #24]	@ (90020f48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90020f30:	4909      	ldr	r1, [pc, #36]	@ (90020f58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
90020f32:	480a      	ldr	r0, [pc, #40]	@ (90020f5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90020f34:	f008 fa95 	bl	90029462 <__aeabi_atexit>
90020f38:	4b05      	ldr	r3, [pc, #20]	@ (90020f50 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90020f3a:	64eb      	str	r3, [r5, #76]	@ 0x4c
90020f3c:	4b07      	ldr	r3, [pc, #28]	@ (90020f5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90020f3e:	652b      	str	r3, [r5, #80]	@ 0x50
90020f40:	bd38      	pop	{r3, r4, r5, pc}
90020f42:	bf00      	nop
90020f44:	240234e0 	.word	0x240234e0
90020f48:	24000000 	.word	0x24000000
90020f4c:	9001cd05 	.word	0x9001cd05
90020f50:	2400011c 	.word	0x2400011c
90020f54:	240234e4 	.word	0x240234e4
90020f58:	9001cd03 	.word	0x9001cd03
90020f5c:	24000120 	.word	0x24000120

90020f60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
90020f60:	b538      	push	{r3, r4, r5, lr}
90020f62:	4c15      	ldr	r4, [pc, #84]	@ (90020fb8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90020f64:	4605      	mov	r5, r0
90020f66:	7823      	ldrb	r3, [r4, #0]
90020f68:	f3bf 8f5b 	dmb	ish
90020f6c:	07da      	lsls	r2, r3, #31
90020f6e:	d40b      	bmi.n	90020f88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90020f70:	4620      	mov	r0, r4
90020f72:	f008 fa7d 	bl	90029470 <__cxa_guard_acquire>
90020f76:	b138      	cbz	r0, 90020f88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90020f78:	4620      	mov	r0, r4
90020f7a:	f008 fa85 	bl	90029488 <__cxa_guard_release>
90020f7e:	4a0f      	ldr	r2, [pc, #60]	@ (90020fbc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90020f80:	490f      	ldr	r1, [pc, #60]	@ (90020fc0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
90020f82:	4810      	ldr	r0, [pc, #64]	@ (90020fc4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90020f84:	f008 fa6d 	bl	90029462 <__aeabi_atexit>
90020f88:	4c0f      	ldr	r4, [pc, #60]	@ (90020fc8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
90020f8a:	7823      	ldrb	r3, [r4, #0]
90020f8c:	f3bf 8f5b 	dmb	ish
90020f90:	07db      	lsls	r3, r3, #31
90020f92:	d40b      	bmi.n	90020fac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90020f94:	4620      	mov	r0, r4
90020f96:	f008 fa6b 	bl	90029470 <__cxa_guard_acquire>
90020f9a:	b138      	cbz	r0, 90020fac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90020f9c:	4620      	mov	r0, r4
90020f9e:	f008 fa73 	bl	90029488 <__cxa_guard_release>
90020fa2:	4a06      	ldr	r2, [pc, #24]	@ (90020fbc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90020fa4:	4909      	ldr	r1, [pc, #36]	@ (90020fcc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
90020fa6:	480a      	ldr	r0, [pc, #40]	@ (90020fd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90020fa8:	f008 fa5b 	bl	90029462 <__aeabi_atexit>
90020fac:	4b05      	ldr	r3, [pc, #20]	@ (90020fc4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90020fae:	646b      	str	r3, [r5, #68]	@ 0x44
90020fb0:	4b07      	ldr	r3, [pc, #28]	@ (90020fd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90020fb2:	64ab      	str	r3, [r5, #72]	@ 0x48
90020fb4:	bd38      	pop	{r3, r4, r5, pc}
90020fb6:	bf00      	nop
90020fb8:	240234a8 	.word	0x240234a8
90020fbc:	24000000 	.word	0x24000000
90020fc0:	9001cd09 	.word	0x9001cd09
90020fc4:	240000e4 	.word	0x240000e4
90020fc8:	240234ac 	.word	0x240234ac
90020fcc:	9001cd07 	.word	0x9001cd07
90020fd0:	240000e8 	.word	0x240000e8

90020fd4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90020fd4:	b538      	push	{r3, r4, r5, lr}
90020fd6:	4c15      	ldr	r4, [pc, #84]	@ (9002102c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
90020fd8:	4605      	mov	r5, r0
90020fda:	7823      	ldrb	r3, [r4, #0]
90020fdc:	f3bf 8f5b 	dmb	ish
90020fe0:	07da      	lsls	r2, r3, #31
90020fe2:	d40b      	bmi.n	90020ffc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90020fe4:	4620      	mov	r0, r4
90020fe6:	f008 fa43 	bl	90029470 <__cxa_guard_acquire>
90020fea:	b138      	cbz	r0, 90020ffc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90020fec:	4620      	mov	r0, r4
90020fee:	f008 fa4b 	bl	90029488 <__cxa_guard_release>
90020ff2:	4a0f      	ldr	r2, [pc, #60]	@ (90021030 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90020ff4:	490f      	ldr	r1, [pc, #60]	@ (90021034 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
90020ff6:	4810      	ldr	r0, [pc, #64]	@ (90021038 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90020ff8:	f008 fa33 	bl	90029462 <__aeabi_atexit>
90020ffc:	4c0f      	ldr	r4, [pc, #60]	@ (9002103c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
90020ffe:	7823      	ldrb	r3, [r4, #0]
90021000:	f3bf 8f5b 	dmb	ish
90021004:	07db      	lsls	r3, r3, #31
90021006:	d40b      	bmi.n	90021020 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90021008:	4620      	mov	r0, r4
9002100a:	f008 fa31 	bl	90029470 <__cxa_guard_acquire>
9002100e:	b138      	cbz	r0, 90021020 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90021010:	4620      	mov	r0, r4
90021012:	f008 fa39 	bl	90029488 <__cxa_guard_release>
90021016:	4a06      	ldr	r2, [pc, #24]	@ (90021030 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90021018:	4909      	ldr	r1, [pc, #36]	@ (90021040 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9002101a:	480a      	ldr	r0, [pc, #40]	@ (90021044 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9002101c:	f008 fa21 	bl	90029462 <__aeabi_atexit>
90021020:	4b05      	ldr	r3, [pc, #20]	@ (90021038 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90021022:	63eb      	str	r3, [r5, #60]	@ 0x3c
90021024:	4b07      	ldr	r3, [pc, #28]	@ (90021044 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90021026:	642b      	str	r3, [r5, #64]	@ 0x40
90021028:	bd38      	pop	{r3, r4, r5, pc}
9002102a:	bf00      	nop
9002102c:	240234c8 	.word	0x240234c8
90021030:	24000000 	.word	0x24000000
90021034:	9001cd0d 	.word	0x9001cd0d
90021038:	24000104 	.word	0x24000104
9002103c:	240234cc 	.word	0x240234cc
90021040:	9001cd0b 	.word	0x9001cd0b
90021044:	24000108 	.word	0x24000108

90021048 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
90021048:	b510      	push	{r4, lr}
9002104a:	4604      	mov	r4, r0
9002104c:	f7ff ff14 	bl	90020e78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90021050:	4620      	mov	r0, r4
90021052:	f7ff ff85 	bl	90020f60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
90021056:	4620      	mov	r0, r4
90021058:	f7ff ff48 	bl	90020eec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
9002105c:	4620      	mov	r0, r4
9002105e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021062:	f7ff bfb7 	b.w	90020fd4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

90021068 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
90021068:	b538      	push	{r3, r4, r5, lr}
9002106a:	4c15      	ldr	r4, [pc, #84]	@ (900210c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
9002106c:	4605      	mov	r5, r0
9002106e:	7823      	ldrb	r3, [r4, #0]
90021070:	f3bf 8f5b 	dmb	ish
90021074:	07da      	lsls	r2, r3, #31
90021076:	d40b      	bmi.n	90021090 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90021078:	4620      	mov	r0, r4
9002107a:	f008 f9f9 	bl	90029470 <__cxa_guard_acquire>
9002107e:	b138      	cbz	r0, 90021090 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90021080:	4620      	mov	r0, r4
90021082:	f008 fa01 	bl	90029488 <__cxa_guard_release>
90021086:	4a0f      	ldr	r2, [pc, #60]	@ (900210c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90021088:	490f      	ldr	r1, [pc, #60]	@ (900210c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9002108a:	4810      	ldr	r0, [pc, #64]	@ (900210cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9002108c:	f008 f9e9 	bl	90029462 <__aeabi_atexit>
90021090:	4c0f      	ldr	r4, [pc, #60]	@ (900210d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90021092:	7823      	ldrb	r3, [r4, #0]
90021094:	f3bf 8f5b 	dmb	ish
90021098:	07db      	lsls	r3, r3, #31
9002109a:	d40b      	bmi.n	900210b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9002109c:	4620      	mov	r0, r4
9002109e:	f008 f9e7 	bl	90029470 <__cxa_guard_acquire>
900210a2:	b138      	cbz	r0, 900210b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
900210a4:	4620      	mov	r0, r4
900210a6:	f008 f9ef 	bl	90029488 <__cxa_guard_release>
900210aa:	4a06      	ldr	r2, [pc, #24]	@ (900210c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
900210ac:	4909      	ldr	r1, [pc, #36]	@ (900210d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
900210ae:	480a      	ldr	r0, [pc, #40]	@ (900210d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
900210b0:	f008 f9d7 	bl	90029462 <__aeabi_atexit>
900210b4:	4b05      	ldr	r3, [pc, #20]	@ (900210cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
900210b6:	666b      	str	r3, [r5, #100]	@ 0x64
900210b8:	4b07      	ldr	r3, [pc, #28]	@ (900210d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
900210ba:	66ab      	str	r3, [r5, #104]	@ 0x68
900210bc:	bd38      	pop	{r3, r4, r5, pc}
900210be:	bf00      	nop
900210c0:	240234b0 	.word	0x240234b0
900210c4:	24000000 	.word	0x24000000
900210c8:	9001ccf9 	.word	0x9001ccf9
900210cc:	240000ec 	.word	0x240000ec
900210d0:	240234b4 	.word	0x240234b4
900210d4:	9001ccf7 	.word	0x9001ccf7
900210d8:	240000f0 	.word	0x240000f0

900210dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
900210dc:	b538      	push	{r3, r4, r5, lr}
900210de:	4c15      	ldr	r4, [pc, #84]	@ (90021134 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
900210e0:	4605      	mov	r5, r0
900210e2:	7823      	ldrb	r3, [r4, #0]
900210e4:	f3bf 8f5b 	dmb	ish
900210e8:	07da      	lsls	r2, r3, #31
900210ea:	d40b      	bmi.n	90021104 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
900210ec:	4620      	mov	r0, r4
900210ee:	f008 f9bf 	bl	90029470 <__cxa_guard_acquire>
900210f2:	b138      	cbz	r0, 90021104 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
900210f4:	4620      	mov	r0, r4
900210f6:	f008 f9c7 	bl	90029488 <__cxa_guard_release>
900210fa:	4a0f      	ldr	r2, [pc, #60]	@ (90021138 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
900210fc:	490f      	ldr	r1, [pc, #60]	@ (9002113c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
900210fe:	4810      	ldr	r0, [pc, #64]	@ (90021140 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90021100:	f008 f9af 	bl	90029462 <__aeabi_atexit>
90021104:	4c0f      	ldr	r4, [pc, #60]	@ (90021144 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
90021106:	7823      	ldrb	r3, [r4, #0]
90021108:	f3bf 8f5b 	dmb	ish
9002110c:	07db      	lsls	r3, r3, #31
9002110e:	d40b      	bmi.n	90021128 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90021110:	4620      	mov	r0, r4
90021112:	f008 f9ad 	bl	90029470 <__cxa_guard_acquire>
90021116:	b138      	cbz	r0, 90021128 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90021118:	4620      	mov	r0, r4
9002111a:	f008 f9b5 	bl	90029488 <__cxa_guard_release>
9002111e:	4a06      	ldr	r2, [pc, #24]	@ (90021138 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90021120:	4909      	ldr	r1, [pc, #36]	@ (90021148 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90021122:	480a      	ldr	r0, [pc, #40]	@ (9002114c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90021124:	f008 f99d 	bl	90029462 <__aeabi_atexit>
90021128:	4b05      	ldr	r3, [pc, #20]	@ (90021140 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9002112a:	65eb      	str	r3, [r5, #92]	@ 0x5c
9002112c:	4b07      	ldr	r3, [pc, #28]	@ (9002114c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9002112e:	662b      	str	r3, [r5, #96]	@ 0x60
90021130:	bd38      	pop	{r3, r4, r5, pc}
90021132:	bf00      	nop
90021134:	24023488 	.word	0x24023488
90021138:	24000000 	.word	0x24000000
9002113c:	9001ccfd 	.word	0x9001ccfd
90021140:	240000c4 	.word	0x240000c4
90021144:	2402348c 	.word	0x2402348c
90021148:	9001ccfb 	.word	0x9001ccfb
9002114c:	240000c8 	.word	0x240000c8

90021150 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90021150:	b510      	push	{r4, lr}
90021152:	4604      	mov	r4, r0
90021154:	f7ff ff88 	bl	90021068 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
90021158:	4620      	mov	r0, r4
9002115a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002115e:	f7ff bfbd 	b.w	900210dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90021164 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90021164:	b538      	push	{r3, r4, r5, lr}
90021166:	4c15      	ldr	r4, [pc, #84]	@ (900211bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
90021168:	4605      	mov	r5, r0
9002116a:	7823      	ldrb	r3, [r4, #0]
9002116c:	f3bf 8f5b 	dmb	ish
90021170:	07da      	lsls	r2, r3, #31
90021172:	d40b      	bmi.n	9002118c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90021174:	4620      	mov	r0, r4
90021176:	f008 f97b 	bl	90029470 <__cxa_guard_acquire>
9002117a:	b138      	cbz	r0, 9002118c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9002117c:	4620      	mov	r0, r4
9002117e:	f008 f983 	bl	90029488 <__cxa_guard_release>
90021182:	4a0f      	ldr	r2, [pc, #60]	@ (900211c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90021184:	490f      	ldr	r1, [pc, #60]	@ (900211c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
90021186:	4810      	ldr	r0, [pc, #64]	@ (900211c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90021188:	f008 f96b 	bl	90029462 <__aeabi_atexit>
9002118c:	4c0f      	ldr	r4, [pc, #60]	@ (900211cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
9002118e:	7823      	ldrb	r3, [r4, #0]
90021190:	f3bf 8f5b 	dmb	ish
90021194:	07db      	lsls	r3, r3, #31
90021196:	d40b      	bmi.n	900211b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90021198:	4620      	mov	r0, r4
9002119a:	f008 f969 	bl	90029470 <__cxa_guard_acquire>
9002119e:	b138      	cbz	r0, 900211b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
900211a0:	4620      	mov	r0, r4
900211a2:	f008 f971 	bl	90029488 <__cxa_guard_release>
900211a6:	4a06      	ldr	r2, [pc, #24]	@ (900211c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
900211a8:	4909      	ldr	r1, [pc, #36]	@ (900211d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
900211aa:	480a      	ldr	r0, [pc, #40]	@ (900211d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
900211ac:	f008 f959 	bl	90029462 <__aeabi_atexit>
900211b0:	4b05      	ldr	r3, [pc, #20]	@ (900211c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
900211b2:	676b      	str	r3, [r5, #116]	@ 0x74
900211b4:	4b07      	ldr	r3, [pc, #28]	@ (900211d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
900211b6:	67ab      	str	r3, [r5, #120]	@ 0x78
900211b8:	bd38      	pop	{r3, r4, r5, pc}
900211ba:	bf00      	nop
900211bc:	24023480 	.word	0x24023480
900211c0:	24000000 	.word	0x24000000
900211c4:	9001ccf1 	.word	0x9001ccf1
900211c8:	240000bc 	.word	0x240000bc
900211cc:	24023484 	.word	0x24023484
900211d0:	9001ccef 	.word	0x9001ccef
900211d4:	240000c0 	.word	0x240000c0

900211d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
900211d8:	b538      	push	{r3, r4, r5, lr}
900211da:	4c15      	ldr	r4, [pc, #84]	@ (90021230 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
900211dc:	4605      	mov	r5, r0
900211de:	7823      	ldrb	r3, [r4, #0]
900211e0:	f3bf 8f5b 	dmb	ish
900211e4:	07da      	lsls	r2, r3, #31
900211e6:	d40b      	bmi.n	90021200 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
900211e8:	4620      	mov	r0, r4
900211ea:	f008 f941 	bl	90029470 <__cxa_guard_acquire>
900211ee:	b138      	cbz	r0, 90021200 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
900211f0:	4620      	mov	r0, r4
900211f2:	f008 f949 	bl	90029488 <__cxa_guard_release>
900211f6:	4a0f      	ldr	r2, [pc, #60]	@ (90021234 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
900211f8:	490f      	ldr	r1, [pc, #60]	@ (90021238 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
900211fa:	4810      	ldr	r0, [pc, #64]	@ (9002123c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
900211fc:	f008 f931 	bl	90029462 <__aeabi_atexit>
90021200:	4c0f      	ldr	r4, [pc, #60]	@ (90021240 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90021202:	7823      	ldrb	r3, [r4, #0]
90021204:	f3bf 8f5b 	dmb	ish
90021208:	07db      	lsls	r3, r3, #31
9002120a:	d40b      	bmi.n	90021224 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9002120c:	4620      	mov	r0, r4
9002120e:	f008 f92f 	bl	90029470 <__cxa_guard_acquire>
90021212:	b138      	cbz	r0, 90021224 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90021214:	4620      	mov	r0, r4
90021216:	f008 f937 	bl	90029488 <__cxa_guard_release>
9002121a:	4a06      	ldr	r2, [pc, #24]	@ (90021234 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9002121c:	4909      	ldr	r1, [pc, #36]	@ (90021244 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9002121e:	480a      	ldr	r0, [pc, #40]	@ (90021248 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90021220:	f008 f91f 	bl	90029462 <__aeabi_atexit>
90021224:	4b05      	ldr	r3, [pc, #20]	@ (9002123c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90021226:	66eb      	str	r3, [r5, #108]	@ 0x6c
90021228:	4b07      	ldr	r3, [pc, #28]	@ (90021248 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9002122a:	672b      	str	r3, [r5, #112]	@ 0x70
9002122c:	bd38      	pop	{r3, r4, r5, pc}
9002122e:	bf00      	nop
90021230:	24023478 	.word	0x24023478
90021234:	24000000 	.word	0x24000000
90021238:	9001ccf5 	.word	0x9001ccf5
9002123c:	240000b4 	.word	0x240000b4
90021240:	2402347c 	.word	0x2402347c
90021244:	9001ccf3 	.word	0x9001ccf3
90021248:	240000b8 	.word	0x240000b8

9002124c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
9002124c:	b510      	push	{r4, lr}
9002124e:	4604      	mov	r4, r0
90021250:	f7ff ff88 	bl	90021164 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90021254:	4620      	mov	r0, r4
90021256:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002125a:	f7ff bfbd 	b.w	900211d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

9002125e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
9002125e:	b510      	push	{r4, lr}
90021260:	4604      	mov	r4, r0
90021262:	f7ff fff3 	bl	9002124c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
90021266:	4620      	mov	r0, r4
90021268:	f7ff ff72 	bl	90021150 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
9002126c:	4620      	mov	r0, r4
9002126e:	f7ff fdf9 	bl	90020e64 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
90021272:	4620      	mov	r0, r4
90021274:	f7ff fcfa 	bl	90020c6c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
90021278:	4620      	mov	r0, r4
9002127a:	f7ff fd75 	bl	90020d68 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
9002127e:	4620      	mov	r0, r4
90021280:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021284:	f7ff bee0 	b.w	90021048 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

90021288 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
90021288:	b538      	push	{r3, r4, r5, lr}
9002128a:	4c0b      	ldr	r4, [pc, #44]	@ (900212b8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
9002128c:	4605      	mov	r5, r0
9002128e:	7823      	ldrb	r3, [r4, #0]
90021290:	f3bf 8f5b 	dmb	ish
90021294:	07db      	lsls	r3, r3, #31
90021296:	d40b      	bmi.n	900212b0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90021298:	4620      	mov	r0, r4
9002129a:	f008 f8e9 	bl	90029470 <__cxa_guard_acquire>
9002129e:	b138      	cbz	r0, 900212b0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
900212a0:	4620      	mov	r0, r4
900212a2:	f008 f8f1 	bl	90029488 <__cxa_guard_release>
900212a6:	4a05      	ldr	r2, [pc, #20]	@ (900212bc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
900212a8:	4905      	ldr	r1, [pc, #20]	@ (900212c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
900212aa:	4806      	ldr	r0, [pc, #24]	@ (900212c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
900212ac:	f008 f8d9 	bl	90029462 <__aeabi_atexit>
900212b0:	4b04      	ldr	r3, [pc, #16]	@ (900212c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
900212b2:	67eb      	str	r3, [r5, #124]	@ 0x7c
900212b4:	bd38      	pop	{r3, r4, r5, pc}
900212b6:	bf00      	nop
900212b8:	2402346c 	.word	0x2402346c
900212bc:	24000000 	.word	0x24000000
900212c0:	9001cced 	.word	0x9001cced
900212c4:	240000ac 	.word	0x240000ac

900212c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
900212c8:	b538      	push	{r3, r4, r5, lr}
900212ca:	4c0b      	ldr	r4, [pc, #44]	@ (900212f8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
900212cc:	4605      	mov	r5, r0
900212ce:	7823      	ldrb	r3, [r4, #0]
900212d0:	f3bf 8f5b 	dmb	ish
900212d4:	07db      	lsls	r3, r3, #31
900212d6:	d40b      	bmi.n	900212f0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
900212d8:	4620      	mov	r0, r4
900212da:	f008 f8c9 	bl	90029470 <__cxa_guard_acquire>
900212de:	b138      	cbz	r0, 900212f0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
900212e0:	4620      	mov	r0, r4
900212e2:	f008 f8d1 	bl	90029488 <__cxa_guard_release>
900212e6:	4a05      	ldr	r2, [pc, #20]	@ (900212fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
900212e8:	4905      	ldr	r1, [pc, #20]	@ (90021300 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
900212ea:	4806      	ldr	r0, [pc, #24]	@ (90021304 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
900212ec:	f008 f8b9 	bl	90029462 <__aeabi_atexit>
900212f0:	4b04      	ldr	r3, [pc, #16]	@ (90021304 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
900212f2:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
900212f6:	bd38      	pop	{r3, r4, r5, pc}
900212f8:	24023470 	.word	0x24023470
900212fc:	24000000 	.word	0x24000000
90021300:	9001cceb 	.word	0x9001cceb
90021304:	240000b0 	.word	0x240000b0

90021308 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
90021308:	b570      	push	{r4, r5, r6, lr}
9002130a:	4d0d      	ldr	r5, [pc, #52]	@ (90021340 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
9002130c:	4606      	mov	r6, r0
9002130e:	4c0d      	ldr	r4, [pc, #52]	@ (90021344 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
90021310:	782b      	ldrb	r3, [r5, #0]
90021312:	f3bf 8f5b 	dmb	ish
90021316:	f013 0f01 	tst.w	r3, #1
9002131a:	d10d      	bne.n	90021338 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9002131c:	4628      	mov	r0, r5
9002131e:	f008 f8a7 	bl	90029470 <__cxa_guard_acquire>
90021322:	b148      	cbz	r0, 90021338 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90021324:	4b08      	ldr	r3, [pc, #32]	@ (90021348 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
90021326:	4628      	mov	r0, r5
90021328:	6023      	str	r3, [r4, #0]
9002132a:	f008 f8ad 	bl	90029488 <__cxa_guard_release>
9002132e:	4a07      	ldr	r2, [pc, #28]	@ (9002134c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
90021330:	4620      	mov	r0, r4
90021332:	4907      	ldr	r1, [pc, #28]	@ (90021350 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
90021334:	f008 f895 	bl	90029462 <__aeabi_atexit>
90021338:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
9002133c:	bd70      	pop	{r4, r5, r6, pc}
9002133e:	bf00      	nop
90021340:	24023474 	.word	0x24023474
90021344:	240235ec 	.word	0x240235ec
90021348:	9002ddc4 	.word	0x9002ddc4
9002134c:	24000000 	.word	0x24000000
90021350:	9001cce9 	.word	0x9001cce9

90021354 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
90021354:	b510      	push	{r4, lr}
90021356:	4604      	mov	r4, r0
90021358:	f7ff ff96 	bl	90021288 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
9002135c:	4620      	mov	r0, r4
9002135e:	f7ff ffb3 	bl	900212c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
90021362:	4620      	mov	r0, r4
90021364:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021368:	f7ff bfce 	b.w	90021308 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

9002136c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
9002136c:	b570      	push	{r4, r5, r6, lr}
9002136e:	4d0d      	ldr	r5, [pc, #52]	@ (900213a4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
90021370:	4606      	mov	r6, r0
90021372:	4c0d      	ldr	r4, [pc, #52]	@ (900213a8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
90021374:	782b      	ldrb	r3, [r5, #0]
90021376:	f3bf 8f5b 	dmb	ish
9002137a:	f013 0f01 	tst.w	r3, #1
9002137e:	d10d      	bne.n	9002139c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90021380:	4628      	mov	r0, r5
90021382:	f008 f875 	bl	90029470 <__cxa_guard_acquire>
90021386:	b148      	cbz	r0, 9002139c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90021388:	4b08      	ldr	r3, [pc, #32]	@ (900213ac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
9002138a:	4628      	mov	r0, r5
9002138c:	6023      	str	r3, [r4, #0]
9002138e:	f008 f87b 	bl	90029488 <__cxa_guard_release>
90021392:	4a07      	ldr	r2, [pc, #28]	@ (900213b0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
90021394:	4620      	mov	r0, r4
90021396:	4907      	ldr	r1, [pc, #28]	@ (900213b4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
90021398:	f008 f863 	bl	90029462 <__aeabi_atexit>
9002139c:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
900213a0:	bd70      	pop	{r4, r5, r6, pc}
900213a2:	bf00      	nop
900213a4:	24023468 	.word	0x24023468
900213a8:	240234e8 	.word	0x240234e8
900213ac:	9002dde0 	.word	0x9002dde0
900213b0:	24000000 	.word	0x24000000
900213b4:	9001cce7 	.word	0x9001cce7

900213b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
900213b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900213bc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
900213c0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
900213c4:	2d00      	cmp	r5, #0
900213c6:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
900213ca:	fb05 4c0e 	mla	ip, r5, lr, r4
900213ce:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
900213d2:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
900213d6:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
900213da:	eb02 0a0c 	add.w	sl, r2, ip
900213de:	8808      	ldrh	r0, [r1, #0]
900213e0:	f2c0 80b0 	blt.w	90021544 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
900213e4:	45ab      	cmp	fp, r5
900213e6:	f340 80ad 	ble.w	90021544 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
900213ea:	2c00      	cmp	r4, #0
900213ec:	f2c0 80a8 	blt.w	90021540 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
900213f0:	45a6      	cmp	lr, r4
900213f2:	f340 80a5 	ble.w	90021540 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
900213f6:	f812 200c 	ldrb.w	r2, [r2, ip]
900213fa:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
900213fe:	1c62      	adds	r2, r4, #1
90021400:	f100 80a3 	bmi.w	9002154a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021404:	4596      	cmp	lr, r2
90021406:	f340 80a0 	ble.w	9002154a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9002140a:	f1b9 0f00 	cmp.w	r9, #0
9002140e:	f000 809c 	beq.w	9002154a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021412:	f89a 2001 	ldrb.w	r2, [sl, #1]
90021416:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9002141a:	3501      	adds	r5, #1
9002141c:	f100 8099 	bmi.w	90021552 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021420:	45ab      	cmp	fp, r5
90021422:	f340 8096 	ble.w	90021552 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021426:	2f00      	cmp	r7, #0
90021428:	f000 8093 	beq.w	90021552 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9002142c:	2c00      	cmp	r4, #0
9002142e:	f2c0 808e 	blt.w	9002154e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90021432:	45a6      	cmp	lr, r4
90021434:	f340 808b 	ble.w	9002154e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90021438:	f81a 200e 	ldrb.w	r2, [sl, lr]
9002143c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90021440:	3401      	adds	r4, #1
90021442:	f100 8089 	bmi.w	90021558 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021446:	45a6      	cmp	lr, r4
90021448:	f340 8086 	ble.w	90021558 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9002144c:	f1b9 0f00 	cmp.w	r9, #0
90021450:	f000 8082 	beq.w	90021558 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90021454:	44d6      	add	lr, sl
90021456:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002145a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
9002145e:	ea4f 4408 	mov.w	r4, r8, lsl #16
90021462:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90021466:	fb19 fe07 	smulbb	lr, r9, r7
9002146a:	f1c7 0210 	rsb	r2, r7, #16
9002146e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90021472:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90021476:	eba2 0209 	sub.w	r2, r2, r9
9002147a:	ea44 0808 	orr.w	r8, r4, r8
9002147e:	ea4f 440c 	mov.w	r4, ip, lsl #16
90021482:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90021486:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9002148a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9002148e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90021492:	ea44 0c0c 	orr.w	ip, r4, ip
90021496:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9002149a:	fb04 f40c 	mul.w	r4, r4, ip
9002149e:	fb02 4808 	mla	r8, r2, r8, r4
900214a2:	041a      	lsls	r2, r3, #16
900214a4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900214a8:	b2b4      	uxth	r4, r6
900214aa:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900214ae:	43f6      	mvns	r6, r6
900214b0:	4313      	orrs	r3, r2
900214b2:	042a      	lsls	r2, r5, #16
900214b4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900214b8:	b2f6      	uxtb	r6, r6
900214ba:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900214be:	fb0e 8303 	mla	r3, lr, r3, r8
900214c2:	432a      	orrs	r2, r5
900214c4:	fb07 3202 	mla	r2, r7, r2, r3
900214c8:	10c7      	asrs	r7, r0, #3
900214ca:	0d53      	lsrs	r3, r2, #21
900214cc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900214d0:	0952      	lsrs	r2, r2, #5
900214d2:	fb17 f706 	smulbb	r7, r7, r6
900214d6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900214da:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900214de:	431a      	orrs	r2, r3
900214e0:	b293      	uxth	r3, r2
900214e2:	1202      	asrs	r2, r0, #8
900214e4:	121d      	asrs	r5, r3, #8
900214e6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900214ea:	00c0      	lsls	r0, r0, #3
900214ec:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900214f0:	fb12 f206 	smulbb	r2, r2, r6
900214f4:	b2c0      	uxtb	r0, r0
900214f6:	fb05 2504 	mla	r5, r5, r4, r2
900214fa:	10da      	asrs	r2, r3, #3
900214fc:	fb10 f006 	smulbb	r0, r0, r6
90021500:	00db      	lsls	r3, r3, #3
90021502:	b2ad      	uxth	r5, r5
90021504:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90021508:	b2db      	uxtb	r3, r3
9002150a:	fb02 7204 	mla	r2, r2, r4, r7
9002150e:	fb03 0004 	mla	r0, r3, r4, r0
90021512:	1c6b      	adds	r3, r5, #1
90021514:	b292      	uxth	r2, r2
90021516:	b280      	uxth	r0, r0
90021518:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002151c:	1c43      	adds	r3, r0, #1
9002151e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90021522:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90021526:	1c50      	adds	r0, r2, #1
90021528:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002152c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021530:	0952      	lsrs	r2, r2, #5
90021532:	432b      	orrs	r3, r5
90021534:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90021538:	4313      	orrs	r3, r2
9002153a:	800b      	strh	r3, [r1, #0]
9002153c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021540:	4680      	mov	r8, r0
90021542:	e75c      	b.n	900213fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90021544:	4684      	mov	ip, r0
90021546:	4680      	mov	r8, r0
90021548:	e767      	b.n	9002141a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9002154a:	4684      	mov	ip, r0
9002154c:	e765      	b.n	9002141a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9002154e:	4605      	mov	r5, r0
90021550:	e776      	b.n	90021440 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90021552:	4603      	mov	r3, r0
90021554:	4605      	mov	r5, r0
90021556:	e782      	b.n	9002145e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
90021558:	4603      	mov	r3, r0
9002155a:	e780      	b.n	9002145e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

9002155c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002155c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021560:	b099      	sub	sp, #100	@ 0x64
90021562:	9215      	str	r2, [sp, #84]	@ 0x54
90021564:	9309      	str	r3, [sp, #36]	@ 0x24
90021566:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
90021568:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
9002156c:	9016      	str	r0, [sp, #88]	@ 0x58
9002156e:	930d      	str	r3, [sp, #52]	@ 0x34
90021570:	6850      	ldr	r0, [r2, #4]
90021572:	910c      	str	r1, [sp, #48]	@ 0x30
90021574:	6812      	ldr	r2, [r2, #0]
90021576:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
9002157a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
9002157e:	fb00 1303 	mla	r3, r0, r3, r1
90021582:	eb02 0843 	add.w	r8, r2, r3, lsl #1
90021586:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021588:	681b      	ldr	r3, [r3, #0]
9002158a:	930b      	str	r3, [sp, #44]	@ 0x2c
9002158c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9002158e:	685e      	ldr	r6, [r3, #4]
90021590:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021592:	3604      	adds	r6, #4
90021594:	43db      	mvns	r3, r3
90021596:	b2db      	uxtb	r3, r3
90021598:	930a      	str	r3, [sp, #40]	@ 0x28
9002159a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002159c:	2b00      	cmp	r3, #0
9002159e:	dc03      	bgt.n	900215a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900215a0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
900215a2:	2b00      	cmp	r3, #0
900215a4:	f340 8225 	ble.w	900219f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
900215a8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900215aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900215ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900215b2:	1e48      	subs	r0, r1, #1
900215b4:	1e57      	subs	r7, r2, #1
900215b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900215b8:	2b00      	cmp	r3, #0
900215ba:	f340 80e3 	ble.w	90021784 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
900215be:	ea5f 4c2a 	movs.w	ip, sl, asr #16
900215c2:	ea4f 4325 	mov.w	r3, r5, asr #16
900215c6:	d406      	bmi.n	900215d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900215c8:	4584      	cmp	ip, r0
900215ca:	da04      	bge.n	900215d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900215cc:	2b00      	cmp	r3, #0
900215ce:	db02      	blt.n	900215d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900215d0:	42bb      	cmp	r3, r7
900215d2:	f2c0 80d8 	blt.w	90021786 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
900215d6:	f11c 0c01 	adds.w	ip, ip, #1
900215da:	f100 80c9 	bmi.w	90021770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900215de:	4561      	cmp	r1, ip
900215e0:	f2c0 80c6 	blt.w	90021770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900215e4:	3301      	adds	r3, #1
900215e6:	f100 80c3 	bmi.w	90021770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900215ea:	429a      	cmp	r2, r3
900215ec:	f2c0 80c0 	blt.w	90021770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900215f0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
900215f4:	4647      	mov	r7, r8
900215f6:	f1bb 0f00 	cmp.w	fp, #0
900215fa:	f340 80e3 	ble.w	900217c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
900215fe:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
90021600:	ea4f 4c25 	mov.w	ip, r5, asr #16
90021604:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021606:	f3ca 3003 	ubfx	r0, sl, #12, #4
9002160a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002160e:	ea5f 422a 	movs.w	r2, sl, asr #16
90021612:	f3c5 3103 	ubfx	r1, r5, #12, #4
90021616:	689b      	ldr	r3, [r3, #8]
90021618:	f100 8121 	bmi.w	9002185e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002161c:	f103 39ff 	add.w	r9, r3, #4294967295
90021620:	454a      	cmp	r2, r9
90021622:	f280 811c 	bge.w	9002185e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021626:	f1bc 0f00 	cmp.w	ip, #0
9002162a:	f2c0 8118 	blt.w	9002185e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002162e:	f10e 39ff 	add.w	r9, lr, #4294967295
90021632:	45cc      	cmp	ip, r9
90021634:	f280 8113 	bge.w	9002185e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021638:	b21b      	sxth	r3, r3
9002163a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002163c:	fb0c 2203 	mla	r2, ip, r3, r2
90021640:	eb04 0902 	add.w	r9, r4, r2
90021644:	5ca2      	ldrb	r2, [r4, r2]
90021646:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9002164a:	2800      	cmp	r0, #0
9002164c:	f000 80fe 	beq.w	9002184c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90021650:	f899 2001 	ldrb.w	r2, [r9, #1]
90021654:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90021658:	9211      	str	r2, [sp, #68]	@ 0x44
9002165a:	b151      	cbz	r1, 90021672 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002165c:	eb09 0203 	add.w	r2, r9, r3
90021660:	f819 3003 	ldrb.w	r3, [r9, r3]
90021664:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021668:	930f      	str	r3, [sp, #60]	@ 0x3c
9002166a:	7853      	ldrb	r3, [r2, #1]
9002166c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021670:	9312      	str	r3, [sp, #72]	@ 0x48
90021672:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021674:	fb10 f201 	smulbb	r2, r0, r1
90021678:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9002167a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002167e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021682:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90021686:	10d2      	asrs	r2, r2, #3
90021688:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002168c:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90021690:	ea4c 0c03 	orr.w	ip, ip, r3
90021694:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90021696:	041b      	lsls	r3, r3, #16
90021698:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002169c:	4323      	orrs	r3, r4
9002169e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900216a0:	4353      	muls	r3, r2
900216a2:	fb09 330c 	mla	r3, r9, ip, r3
900216a6:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
900216aa:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900216ae:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900216b2:	ea4c 0e0e 	orr.w	lr, ip, lr
900216b6:	f1c1 0c10 	rsb	ip, r1, #16
900216ba:	ebac 0c00 	sub.w	ip, ip, r0
900216be:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
900216c2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
900216c6:	fb0c 3c0e 	mla	ip, ip, lr, r3
900216ca:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900216cc:	0418      	lsls	r0, r3, #16
900216ce:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900216d2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900216d6:	4318      	orrs	r0, r3
900216d8:	fb02 c200 	mla	r2, r2, r0, ip
900216dc:	8838      	ldrh	r0, [r7, #0]
900216de:	0d53      	lsrs	r3, r2, #21
900216e0:	0952      	lsrs	r2, r2, #5
900216e2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900216e6:	1201      	asrs	r1, r0, #8
900216e8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900216ec:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900216f0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900216f4:	00c0      	lsls	r0, r0, #3
900216f6:	431a      	orrs	r2, r3
900216f8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
900216fc:	fb11 f104 	smulbb	r1, r1, r4
90021700:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90021704:	b292      	uxth	r2, r2
90021706:	fb1e fe04 	smulbb	lr, lr, r4
9002170a:	b2c0      	uxtb	r0, r0
9002170c:	ea4f 2c22 	mov.w	ip, r2, asr #8
90021710:	fb10 f004 	smulbb	r0, r0, r4
90021714:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90021718:	fb0c 1c03 	mla	ip, ip, r3, r1
9002171c:	10d1      	asrs	r1, r2, #3
9002171e:	00d2      	lsls	r2, r2, #3
90021720:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90021724:	fa1f fc8c 	uxth.w	ip, ip
90021728:	b2d2      	uxtb	r2, r2
9002172a:	fb01 e103 	mla	r1, r1, r3, lr
9002172e:	fb02 0303 	mla	r3, r2, r3, r0
90021732:	b289      	uxth	r1, r1
90021734:	b29a      	uxth	r2, r3
90021736:	f10c 0301 	add.w	r3, ip, #1
9002173a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9002173e:	1c53      	adds	r3, r2, #1
90021740:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021744:	1c4a      	adds	r2, r1, #1
90021746:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9002174a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002174e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021752:	0949      	lsrs	r1, r1, #5
90021754:	ea43 030c 	orr.w	r3, r3, ip
90021758:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002175c:	430b      	orrs	r3, r1
9002175e:	803b      	strh	r3, [r7, #0]
90021760:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021762:	3702      	adds	r7, #2
90021764:	f10b 3bff 	add.w	fp, fp, #4294967295
90021768:	449a      	add	sl, r3
9002176a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002176c:	441d      	add	r5, r3
9002176e:	e742      	b.n	900215f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021770:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021772:	f108 0802 	add.w	r8, r8, #2
90021776:	449a      	add	sl, r3
90021778:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002177a:	441d      	add	r5, r3
9002177c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002177e:	3b01      	subs	r3, #1
90021780:	9309      	str	r3, [sp, #36]	@ 0x24
90021782:	e718      	b.n	900215b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90021784:	d023      	beq.n	900217ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90021786:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021788:	9825      	ldr	r0, [sp, #148]	@ 0x94
9002178a:	3b01      	subs	r3, #1
9002178c:	fb00 a003 	mla	r0, r0, r3, sl
90021790:	1400      	asrs	r0, r0, #16
90021792:	f53f af2d 	bmi.w	900215f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021796:	3901      	subs	r1, #1
90021798:	4288      	cmp	r0, r1
9002179a:	f6bf af29 	bge.w	900215f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9002179e:	9926      	ldr	r1, [sp, #152]	@ 0x98
900217a0:	fb01 5303 	mla	r3, r1, r3, r5
900217a4:	141b      	asrs	r3, r3, #16
900217a6:	f53f af23 	bmi.w	900215f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900217aa:	3a01      	subs	r2, #1
900217ac:	4293      	cmp	r3, r2
900217ae:	f6bf af1f 	bge.w	900215f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900217b2:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
900217b6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
900217ba:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
900217be:	f1be 0f00 	cmp.w	lr, #0
900217c2:	dc6c      	bgt.n	9002189e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900217c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900217c6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900217ca:	eb08 0844 	add.w	r8, r8, r4, lsl #1
900217ce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900217d0:	2b00      	cmp	r3, #0
900217d2:	f340 810e 	ble.w	900219f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
900217d6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900217da:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900217dc:	ee30 0a04 	vadd.f32	s0, s0, s8
900217e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
900217e4:	eef0 6a62 	vmov.f32	s13, s5
900217e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
900217ec:	ee31 1a05 	vadd.f32	s2, s2, s10
900217f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900217f4:	ee16 aa90 	vmov	sl, s13
900217f8:	eef0 6a43 	vmov.f32	s13, s6
900217fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021800:	ee16 5a90 	vmov	r5, s13
90021804:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021808:	ee61 7a27 	vmul.f32	s15, s2, s15
9002180c:	ee77 2a62 	vsub.f32	s5, s14, s5
90021810:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021814:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021818:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002181c:	ee12 2a90 	vmov	r2, s5
90021820:	eef0 2a47 	vmov.f32	s5, s14
90021824:	fb92 f3f3 	sdiv	r3, r2, r3
90021828:	ee13 2a10 	vmov	r2, s6
9002182c:	9325      	str	r3, [sp, #148]	@ 0x94
9002182e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021830:	eeb0 3a67 	vmov.f32	s6, s15
90021834:	fb92 f3f3 	sdiv	r3, r2, r3
90021838:	9326      	str	r3, [sp, #152]	@ 0x98
9002183a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002183c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
9002183e:	3b01      	subs	r3, #1
90021840:	930c      	str	r3, [sp, #48]	@ 0x30
90021842:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021844:	bf08      	it	eq
90021846:	4613      	moveq	r3, r2
90021848:	9309      	str	r3, [sp, #36]	@ 0x24
9002184a:	e6a6      	b.n	9002159a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9002184c:	2900      	cmp	r1, #0
9002184e:	f43f af10 	beq.w	90021672 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021852:	f819 3003 	ldrb.w	r3, [r9, r3]
90021856:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002185a:	930f      	str	r3, [sp, #60]	@ 0x3c
9002185c:	e709      	b.n	90021672 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002185e:	f112 0901 	adds.w	r9, r2, #1
90021862:	f53f af7d 	bmi.w	90021760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021866:	454b      	cmp	r3, r9
90021868:	f6ff af7a 	blt.w	90021760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002186c:	f11c 0901 	adds.w	r9, ip, #1
90021870:	f53f af76 	bmi.w	90021760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021874:	45ce      	cmp	lr, r9
90021876:	f6ff af73 	blt.w	90021760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002187a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002187c:	b21b      	sxth	r3, r3
9002187e:	9202      	str	r2, [sp, #8]
90021880:	fa0f f28e 	sxth.w	r2, lr
90021884:	9300      	str	r3, [sp, #0]
90021886:	4633      	mov	r3, r6
90021888:	9201      	str	r2, [sp, #4]
9002188a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002188c:	e9cd 1405 	strd	r1, r4, [sp, #20]
90021890:	e9cd c003 	strd	ip, r0, [sp, #12]
90021894:	4639      	mov	r1, r7
90021896:	9816      	ldr	r0, [sp, #88]	@ 0x58
90021898:	f7ff fd8e 	bl	900213b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
9002189c:	e760      	b.n	90021760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002189e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900218a0:	ea4f 422a 	mov.w	r2, sl, asr #16
900218a4:	1429      	asrs	r1, r5, #16
900218a6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900218a8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900218ac:	f3ca 3c03 	ubfx	ip, sl, #12, #4
900218b0:	f3c5 3003 	ubfx	r0, r5, #12, #4
900218b4:	fb03 2101 	mla	r1, r3, r1, r2
900218b8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900218ba:	440a      	add	r2, r1
900218bc:	5c61      	ldrb	r1, [r4, r1]
900218be:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
900218c2:	f1bc 0f00 	cmp.w	ip, #0
900218c6:	f000 808c 	beq.w	900219e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
900218ca:	7857      	ldrb	r7, [r2, #1]
900218cc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
900218d0:	9413      	str	r4, [sp, #76]	@ 0x4c
900218d2:	b140      	cbz	r0, 900218e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900218d4:	18d7      	adds	r7, r2, r3
900218d6:	5cd3      	ldrb	r3, [r2, r3]
900218d8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900218dc:	9310      	str	r3, [sp, #64]	@ 0x40
900218de:	787b      	ldrb	r3, [r7, #1]
900218e0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900218e4:	9314      	str	r3, [sp, #80]	@ 0x50
900218e6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900218e8:	fb1c f200 	smulbb	r2, ip, r0
900218ec:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900218ee:	f10e 3eff 	add.w	lr, lr, #4294967295
900218f2:	041f      	lsls	r7, r3, #16
900218f4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900218f8:	10d2      	asrs	r2, r2, #3
900218fa:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
900218fe:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
90021902:	431f      	orrs	r7, r3
90021904:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
90021908:	9317      	str	r3, [sp, #92]	@ 0x5c
9002190a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
9002190c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
9002190e:	041b      	lsls	r3, r3, #16
90021910:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021914:	ea43 030b 	orr.w	r3, r3, fp
90021918:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002191c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90021920:	4353      	muls	r3, r2
90021922:	fb04 3707 	mla	r7, r4, r7, r3
90021926:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9002192a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002192c:	ea43 0b01 	orr.w	fp, r3, r1
90021930:	f1c0 0110 	rsb	r1, r0, #16
90021934:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90021936:	eba1 0c0c 	sub.w	ip, r1, ip
9002193a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9002193e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90021942:	fb0c 770b 	mla	r7, ip, fp, r7
90021946:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002194a:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
9002194e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021952:	ea4c 0c0b 	orr.w	ip, ip, fp
90021956:	fb02 770c 	mla	r7, r2, ip, r7
9002195a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002195c:	0d79      	lsrs	r1, r7, #21
9002195e:	8812      	ldrh	r2, [r2, #0]
90021960:	097f      	lsrs	r7, r7, #5
90021962:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90021966:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9002196a:	430f      	orrs	r7, r1
9002196c:	1211      	asrs	r1, r2, #8
9002196e:	b2bb      	uxth	r3, r7
90021970:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90021974:	10d7      	asrs	r7, r2, #3
90021976:	fb11 f104 	smulbb	r1, r1, r4
9002197a:	1218      	asrs	r0, r3, #8
9002197c:	00d2      	lsls	r2, r2, #3
9002197e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90021982:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90021986:	fb17 f704 	smulbb	r7, r7, r4
9002198a:	b2d2      	uxtb	r2, r2
9002198c:	fb00 1009 	mla	r0, r0, r9, r1
90021990:	10d9      	asrs	r1, r3, #3
90021992:	fb12 f204 	smulbb	r2, r2, r4
90021996:	00db      	lsls	r3, r3, #3
90021998:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002199c:	b280      	uxth	r0, r0
9002199e:	b2db      	uxtb	r3, r3
900219a0:	fb01 7109 	mla	r1, r1, r9, r7
900219a4:	fb03 2309 	mla	r3, r3, r9, r2
900219a8:	1c42      	adds	r2, r0, #1
900219aa:	b289      	uxth	r1, r1
900219ac:	b29b      	uxth	r3, r3
900219ae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900219b2:	1c4f      	adds	r7, r1, #1
900219b4:	1c5a      	adds	r2, r3, #1
900219b6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900219ba:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900219be:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900219c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900219c4:	0949      	lsrs	r1, r1, #5
900219c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900219ca:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900219ce:	4310      	orrs	r0, r2
900219d0:	4308      	orrs	r0, r1
900219d2:	f823 0b02 	strh.w	r0, [r3], #2
900219d6:	930e      	str	r3, [sp, #56]	@ 0x38
900219d8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900219da:	449a      	add	sl, r3
900219dc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900219de:	441d      	add	r5, r3
900219e0:	e6ed      	b.n	900217be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
900219e2:	2800      	cmp	r0, #0
900219e4:	f43f af7f 	beq.w	900218e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900219e8:	5cd3      	ldrb	r3, [r2, r3]
900219ea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900219ee:	9310      	str	r3, [sp, #64]	@ 0x40
900219f0:	e779      	b.n	900218e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900219f2:	b019      	add	sp, #100	@ 0x64
900219f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900219f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
900219f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900219fc:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
90021a00:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90021a04:	f1b8 0f00 	cmp.w	r8, #0
90021a08:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
90021a0c:	fb08 470e 	mla	r7, r8, lr, r4
90021a10:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
90021a14:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90021a18:	eb02 0907 	add.w	r9, r2, r7
90021a1c:	8808      	ldrh	r0, [r1, #0]
90021a1e:	db67      	blt.n	90021af0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90021a20:	45c2      	cmp	sl, r8
90021a22:	dd65      	ble.n	90021af0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90021a24:	2c00      	cmp	r4, #0
90021a26:	db61      	blt.n	90021aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90021a28:	45a6      	cmp	lr, r4
90021a2a:	dd5f      	ble.n	90021aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90021a2c:	5dd2      	ldrb	r2, [r2, r7]
90021a2e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90021a32:	1c62      	adds	r2, r4, #1
90021a34:	d45f      	bmi.n	90021af6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90021a36:	4596      	cmp	lr, r2
90021a38:	dd5d      	ble.n	90021af6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90021a3a:	2d00      	cmp	r5, #0
90021a3c:	d05b      	beq.n	90021af6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90021a3e:	f899 2001 	ldrb.w	r2, [r9, #1]
90021a42:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90021a46:	f118 0801 	adds.w	r8, r8, #1
90021a4a:	d458      	bmi.n	90021afe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021a4c:	45c2      	cmp	sl, r8
90021a4e:	dd56      	ble.n	90021afe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021a50:	2e00      	cmp	r6, #0
90021a52:	d054      	beq.n	90021afe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021a54:	2c00      	cmp	r4, #0
90021a56:	db50      	blt.n	90021afa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90021a58:	45a6      	cmp	lr, r4
90021a5a:	dd4e      	ble.n	90021afa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90021a5c:	f819 200e 	ldrb.w	r2, [r9, lr]
90021a60:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90021a64:	3401      	adds	r4, #1
90021a66:	d407      	bmi.n	90021a78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90021a68:	45a6      	cmp	lr, r4
90021a6a:	dd05      	ble.n	90021a78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90021a6c:	b125      	cbz	r5, 90021a78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90021a6e:	44ce      	add	lr, r9
90021a70:	f89e 0001 	ldrb.w	r0, [lr, #1]
90021a74:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90021a78:	fb15 f406 	smulbb	r4, r5, r6
90021a7c:	ea4f 430c 	mov.w	r3, ip, lsl #16
90021a80:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90021a84:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90021a88:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021a8c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90021a90:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90021a94:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90021a98:	ea43 0c0c 	orr.w	ip, r3, ip
90021a9c:	f1c6 0310 	rsb	r3, r6, #16
90021aa0:	ea4e 0707 	orr.w	r7, lr, r7
90021aa4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90021aa8:	1b5b      	subs	r3, r3, r5
90021aaa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90021aae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90021ab2:	437d      	muls	r5, r7
90021ab4:	fb03 5c0c 	mla	ip, r3, ip, r5
90021ab8:	0403      	lsls	r3, r0, #16
90021aba:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90021abe:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021ac2:	4318      	orrs	r0, r3
90021ac4:	0413      	lsls	r3, r2, #16
90021ac6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90021aca:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021ace:	fb04 c000 	mla	r0, r4, r0, ip
90021ad2:	4313      	orrs	r3, r2
90021ad4:	fb06 0003 	mla	r0, r6, r3, r0
90021ad8:	0d43      	lsrs	r3, r0, #21
90021ada:	0940      	lsrs	r0, r0, #5
90021adc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021ae0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90021ae4:	4318      	orrs	r0, r3
90021ae6:	8008      	strh	r0, [r1, #0]
90021ae8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90021aec:	4684      	mov	ip, r0
90021aee:	e7a0      	b.n	90021a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
90021af0:	4607      	mov	r7, r0
90021af2:	4684      	mov	ip, r0
90021af4:	e7a7      	b.n	90021a46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90021af6:	4607      	mov	r7, r0
90021af8:	e7a5      	b.n	90021a46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90021afa:	4602      	mov	r2, r0
90021afc:	e7b2      	b.n	90021a64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
90021afe:	4602      	mov	r2, r0
90021b00:	e7ba      	b.n	90021a78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90021b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021b02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021b06:	b093      	sub	sp, #76	@ 0x4c
90021b08:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90021b0c:	920f      	str	r2, [sp, #60]	@ 0x3c
90021b0e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90021b10:	9010      	str	r0, [sp, #64]	@ 0x40
90021b12:	9108      	str	r1, [sp, #32]
90021b14:	6850      	ldr	r0, [r2, #4]
90021b16:	9306      	str	r3, [sp, #24]
90021b18:	6812      	ldr	r2, [r2, #0]
90021b1a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90021b1e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90021b22:	fb00 1303 	mla	r3, r0, r3, r1
90021b26:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90021b2a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021b2c:	681b      	ldr	r3, [r3, #0]
90021b2e:	9307      	str	r3, [sp, #28]
90021b30:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021b32:	685f      	ldr	r7, [r3, #4]
90021b34:	3704      	adds	r7, #4
90021b36:	9b08      	ldr	r3, [sp, #32]
90021b38:	2b00      	cmp	r3, #0
90021b3a:	dc03      	bgt.n	90021b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90021b3c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90021b3e:	2b00      	cmp	r3, #0
90021b40:	f340 81b2 	ble.w	90021ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90021b44:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021b46:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021b4a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021b4e:	1e48      	subs	r0, r1, #1
90021b50:	f102 3cff 	add.w	ip, r2, #4294967295
90021b54:	9b06      	ldr	r3, [sp, #24]
90021b56:	2b00      	cmp	r3, #0
90021b58:	f340 80a9 	ble.w	90021cae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90021b5c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90021b60:	ea4f 4326 	mov.w	r3, r6, asr #16
90021b64:	d406      	bmi.n	90021b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90021b66:	4586      	cmp	lr, r0
90021b68:	da04      	bge.n	90021b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90021b6a:	2b00      	cmp	r3, #0
90021b6c:	db02      	blt.n	90021b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90021b6e:	4563      	cmp	r3, ip
90021b70:	f2c0 809e 	blt.w	90021cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90021b74:	f11e 0e01 	adds.w	lr, lr, #1
90021b78:	f100 808f 	bmi.w	90021c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021b7c:	4571      	cmp	r1, lr
90021b7e:	f2c0 808c 	blt.w	90021c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021b82:	3301      	adds	r3, #1
90021b84:	f100 8089 	bmi.w	90021c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021b88:	429a      	cmp	r2, r3
90021b8a:	f2c0 8086 	blt.w	90021c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021b8e:	f8dd b018 	ldr.w	fp, [sp, #24]
90021b92:	46c8      	mov	r8, r9
90021b94:	f1bb 0f00 	cmp.w	fp, #0
90021b98:	f340 80a6 	ble.w	90021ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90021b9c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
90021b9e:	ea4f 4c26 	mov.w	ip, r6, asr #16
90021ba2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021ba4:	f3c4 3003 	ubfx	r0, r4, #12, #4
90021ba8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90021bac:	1422      	asrs	r2, r4, #16
90021bae:	f3c6 3103 	ubfx	r1, r6, #12, #4
90021bb2:	689b      	ldr	r3, [r3, #8]
90021bb4:	f100 80e3 	bmi.w	90021d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90021bb8:	f103 3aff 	add.w	sl, r3, #4294967295
90021bbc:	4552      	cmp	r2, sl
90021bbe:	f280 80de 	bge.w	90021d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90021bc2:	f1bc 0f00 	cmp.w	ip, #0
90021bc6:	f2c0 80da 	blt.w	90021d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90021bca:	f10e 3aff 	add.w	sl, lr, #4294967295
90021bce:	45d4      	cmp	ip, sl
90021bd0:	f280 80d5 	bge.w	90021d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90021bd4:	b21b      	sxth	r3, r3
90021bd6:	9d07      	ldr	r5, [sp, #28]
90021bd8:	fb0c 2203 	mla	r2, ip, r3, r2
90021bdc:	eb05 0a02 	add.w	sl, r5, r2
90021be0:	5caa      	ldrb	r2, [r5, r2]
90021be2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
90021be6:	2800      	cmp	r0, #0
90021be8:	f000 80c0 	beq.w	90021d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
90021bec:	f89a 2001 	ldrb.w	r2, [sl, #1]
90021bf0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
90021bf4:	920b      	str	r2, [sp, #44]	@ 0x2c
90021bf6:	b151      	cbz	r1, 90021c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90021bf8:	eb0a 0203 	add.w	r2, sl, r3
90021bfc:	f81a 3003 	ldrb.w	r3, [sl, r3]
90021c00:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90021c04:	9309      	str	r3, [sp, #36]	@ 0x24
90021c06:	7853      	ldrb	r3, [r2, #1]
90021c08:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90021c0c:	930c      	str	r3, [sp, #48]	@ 0x30
90021c0e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021c10:	fb10 f201 	smulbb	r2, r0, r1
90021c14:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90021c16:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021c1a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021c1e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90021c22:	10d2      	asrs	r2, r2, #3
90021c24:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021c28:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
90021c2c:	ea4c 0c03 	orr.w	ip, ip, r3
90021c30:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021c32:	041b      	lsls	r3, r3, #16
90021c34:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021c38:	432b      	orrs	r3, r5
90021c3a:	4353      	muls	r3, r2
90021c3c:	fb0a 330c 	mla	r3, sl, ip, r3
90021c40:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90021c44:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90021c48:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021c4c:	ea4c 0e0e 	orr.w	lr, ip, lr
90021c50:	f1c1 0c10 	rsb	ip, r1, #16
90021c54:	ebac 0c00 	sub.w	ip, ip, r0
90021c58:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90021c5c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90021c60:	fb0c 3c0e 	mla	ip, ip, lr, r3
90021c64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021c66:	0418      	lsls	r0, r3, #16
90021c68:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021c6c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90021c70:	4318      	orrs	r0, r3
90021c72:	fb02 c200 	mla	r2, r2, r0, ip
90021c76:	0d53      	lsrs	r3, r2, #21
90021c78:	0952      	lsrs	r2, r2, #5
90021c7a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021c7e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90021c82:	431a      	orrs	r2, r3
90021c84:	f8a8 2000 	strh.w	r2, [r8]
90021c88:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90021c8a:	f108 0802 	add.w	r8, r8, #2
90021c8e:	f10b 3bff 	add.w	fp, fp, #4294967295
90021c92:	441c      	add	r4, r3
90021c94:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021c96:	441e      	add	r6, r3
90021c98:	e77c      	b.n	90021b94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021c9a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90021c9c:	f109 0902 	add.w	r9, r9, #2
90021ca0:	441c      	add	r4, r3
90021ca2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021ca4:	441e      	add	r6, r3
90021ca6:	9b06      	ldr	r3, [sp, #24]
90021ca8:	3b01      	subs	r3, #1
90021caa:	9306      	str	r3, [sp, #24]
90021cac:	e752      	b.n	90021b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90021cae:	d020      	beq.n	90021cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90021cb0:	9b06      	ldr	r3, [sp, #24]
90021cb2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90021cb4:	3b01      	subs	r3, #1
90021cb6:	fb00 4003 	mla	r0, r0, r3, r4
90021cba:	1400      	asrs	r0, r0, #16
90021cbc:	f53f af67 	bmi.w	90021b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90021cc0:	3901      	subs	r1, #1
90021cc2:	4288      	cmp	r0, r1
90021cc4:	f6bf af63 	bge.w	90021b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90021cc8:	9920      	ldr	r1, [sp, #128]	@ 0x80
90021cca:	fb01 6303 	mla	r3, r1, r3, r6
90021cce:	141b      	asrs	r3, r3, #16
90021cd0:	f53f af5d 	bmi.w	90021b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90021cd4:	3a01      	subs	r2, #1
90021cd6:	4293      	cmp	r3, r2
90021cd8:	f6bf af59 	bge.w	90021b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90021cdc:	f8dd 8018 	ldr.w	r8, [sp, #24]
90021ce0:	46ca      	mov	sl, r9
90021ce2:	f1b8 0f00 	cmp.w	r8, #0
90021ce6:	dc67      	bgt.n	90021db8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90021ce8:	9b06      	ldr	r3, [sp, #24]
90021cea:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90021cee:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90021cf2:	9b08      	ldr	r3, [sp, #32]
90021cf4:	2b00      	cmp	r3, #0
90021cf6:	f340 80d7 	ble.w	90021ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90021cfa:	ee30 0a04 	vadd.f32	s0, s0, s8
90021cfe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90021d00:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021d04:	eeb0 6a62 	vmov.f32	s12, s5
90021d08:	eec6 7a80 	vdiv.f32	s15, s13, s0
90021d0c:	ee31 1a05 	vadd.f32	s2, s2, s10
90021d10:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90021d14:	ee16 4a10 	vmov	r4, s12
90021d18:	eeb0 6a43 	vmov.f32	s12, s6
90021d1c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90021d20:	ee16 6a10 	vmov	r6, s12
90021d24:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021d28:	ee61 7a27 	vmul.f32	s15, s2, s15
90021d2c:	ee77 2a62 	vsub.f32	s5, s14, s5
90021d30:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021d34:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021d38:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021d3c:	ee12 2a90 	vmov	r2, s5
90021d40:	eef0 2a47 	vmov.f32	s5, s14
90021d44:	fb92 f3f3 	sdiv	r3, r2, r3
90021d48:	ee13 2a10 	vmov	r2, s6
90021d4c:	931f      	str	r3, [sp, #124]	@ 0x7c
90021d4e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90021d50:	eeb0 3a67 	vmov.f32	s6, s15
90021d54:	fb92 f3f3 	sdiv	r3, r2, r3
90021d58:	9320      	str	r3, [sp, #128]	@ 0x80
90021d5a:	9b08      	ldr	r3, [sp, #32]
90021d5c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90021d5e:	3b01      	subs	r3, #1
90021d60:	9308      	str	r3, [sp, #32]
90021d62:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90021d64:	bf08      	it	eq
90021d66:	4613      	moveq	r3, r2
90021d68:	9306      	str	r3, [sp, #24]
90021d6a:	e6e4      	b.n	90021b36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90021d6c:	2900      	cmp	r1, #0
90021d6e:	f43f af4e 	beq.w	90021c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90021d72:	f81a 3003 	ldrb.w	r3, [sl, r3]
90021d76:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90021d7a:	9309      	str	r3, [sp, #36]	@ 0x24
90021d7c:	e747      	b.n	90021c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90021d7e:	f112 0a01 	adds.w	sl, r2, #1
90021d82:	d481      	bmi.n	90021c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90021d84:	4553      	cmp	r3, sl
90021d86:	f6ff af7f 	blt.w	90021c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90021d8a:	f11c 0a01 	adds.w	sl, ip, #1
90021d8e:	f53f af7b 	bmi.w	90021c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90021d92:	45d6      	cmp	lr, sl
90021d94:	f6ff af78 	blt.w	90021c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90021d98:	b21b      	sxth	r3, r3
90021d9a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
90021d9e:	fa0f f28e 	sxth.w	r2, lr
90021da2:	9300      	str	r3, [sp, #0]
90021da4:	463b      	mov	r3, r7
90021da6:	9201      	str	r2, [sp, #4]
90021da8:	9a07      	ldr	r2, [sp, #28]
90021daa:	e9cd 0104 	strd	r0, r1, [sp, #16]
90021dae:	4641      	mov	r1, r8
90021db0:	9810      	ldr	r0, [sp, #64]	@ 0x40
90021db2:	f7ff fe21 	bl	900219f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90021db6:	e767      	b.n	90021c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90021db8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021dba:	1422      	asrs	r2, r4, #16
90021dbc:	1431      	asrs	r1, r6, #16
90021dbe:	9d07      	ldr	r5, [sp, #28]
90021dc0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90021dc4:	f3c4 3e03 	ubfx	lr, r4, #12, #4
90021dc8:	f3c6 3003 	ubfx	r0, r6, #12, #4
90021dcc:	fb03 2101 	mla	r1, r3, r1, r2
90021dd0:	9a07      	ldr	r2, [sp, #28]
90021dd2:	440a      	add	r2, r1
90021dd4:	5c69      	ldrb	r1, [r5, r1]
90021dd6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
90021dda:	f1be 0f00 	cmp.w	lr, #0
90021dde:	d05c      	beq.n	90021e9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
90021de0:	f892 c001 	ldrb.w	ip, [r2, #1]
90021de4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
90021de8:	950d      	str	r5, [sp, #52]	@ 0x34
90021dea:	b150      	cbz	r0, 90021e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90021dec:	eb02 0c03 	add.w	ip, r2, r3
90021df0:	5cd3      	ldrb	r3, [r2, r3]
90021df2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90021df6:	930a      	str	r3, [sp, #40]	@ 0x28
90021df8:	f89c 3001 	ldrb.w	r3, [ip, #1]
90021dfc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90021e00:	930e      	str	r3, [sp, #56]	@ 0x38
90021e02:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021e04:	fb1e f200 	smulbb	r2, lr, r0
90021e08:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90021e0a:	f108 38ff 	add.w	r8, r8, #4294967295
90021e0e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021e12:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021e16:	10d2      	asrs	r2, r2, #3
90021e18:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
90021e1c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021e20:	ea4c 0c03 	orr.w	ip, ip, r3
90021e24:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90021e28:	9311      	str	r3, [sp, #68]	@ 0x44
90021e2a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90021e2c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90021e2e:	041b      	lsls	r3, r3, #16
90021e30:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021e34:	ea43 030b 	orr.w	r3, r3, fp
90021e38:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90021e3c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90021e40:	4353      	muls	r3, r2
90021e42:	fb05 3c0c 	mla	ip, r5, ip, r3
90021e46:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
90021e4a:	ea43 0b01 	orr.w	fp, r3, r1
90021e4e:	f1c0 0110 	rsb	r1, r0, #16
90021e52:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021e54:	eba1 0e0e 	sub.w	lr, r1, lr
90021e58:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90021e5c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90021e60:	fb0e cc0b 	mla	ip, lr, fp, ip
90021e64:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90021e68:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
90021e6c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90021e70:	ea4b 0e0e 	orr.w	lr, fp, lr
90021e74:	fb02 cc0e 	mla	ip, r2, lr, ip
90021e78:	ea4f 535c 	mov.w	r3, ip, lsr #21
90021e7c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90021e80:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021e84:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90021e88:	ea43 0c0c 	orr.w	ip, r3, ip
90021e8c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90021e8e:	441c      	add	r4, r3
90021e90:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021e92:	f82a cb02 	strh.w	ip, [sl], #2
90021e96:	441e      	add	r6, r3
90021e98:	e723      	b.n	90021ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90021e9a:	2800      	cmp	r0, #0
90021e9c:	d0b1      	beq.n	90021e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90021e9e:	5cd3      	ldrb	r3, [r2, r3]
90021ea0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90021ea4:	930a      	str	r3, [sp, #40]	@ 0x28
90021ea6:	e7ac      	b.n	90021e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90021ea8:	b013      	add	sp, #76	@ 0x4c
90021eaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021eae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
90021eae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021eb2:	880d      	ldrh	r5, [r1, #0]
90021eb4:	b087      	sub	sp, #28
90021eb6:	10ef      	asrs	r7, r5, #3
90021eb8:	9103      	str	r1, [sp, #12]
90021eba:	ea4f 2a25 	mov.w	sl, r5, asr #8
90021ebe:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
90021ec2:	00ed      	lsls	r5, r5, #3
90021ec4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90021ec8:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
90021ecc:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
90021ed0:	b2ed      	uxtb	r5, r5
90021ed2:	9701      	str	r7, [sp, #4]
90021ed4:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
90021ed8:	9502      	str	r5, [sp, #8]
90021eda:	9d01      	ldr	r5, [sp, #4]
90021edc:	9902      	ldr	r1, [sp, #8]
90021ede:	022d      	lsls	r5, r5, #8
90021ee0:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
90021ee4:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
90021ee8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90021eec:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
90021ef0:	430d      	orrs	r5, r1
90021ef2:	fb06 0709 	mla	r7, r6, r9, r0
90021ef6:	2e00      	cmp	r6, #0
90021ef8:	9505      	str	r5, [sp, #20]
90021efa:	eb02 0c07 	add.w	ip, r2, r7
90021efe:	f2c0 80b6 	blt.w	9002206e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90021f02:	45b3      	cmp	fp, r6
90021f04:	f340 80b3 	ble.w	9002206e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90021f08:	2800      	cmp	r0, #0
90021f0a:	f2c0 80ae 	blt.w	9002206a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90021f0e:	4581      	cmp	r9, r0
90021f10:	f340 80ab 	ble.w	9002206a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90021f14:	5dd7      	ldrb	r7, [r2, r7]
90021f16:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90021f1a:	441f      	add	r7, r3
90021f1c:	1c42      	adds	r2, r0, #1
90021f1e:	f100 80a9 	bmi.w	90022074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90021f22:	4591      	cmp	r9, r2
90021f24:	f340 80a6 	ble.w	90022074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90021f28:	2c00      	cmp	r4, #0
90021f2a:	f000 80a3 	beq.w	90022074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90021f2e:	f89c 5001 	ldrb.w	r5, [ip, #1]
90021f32:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90021f36:	441d      	add	r5, r3
90021f38:	3601      	adds	r6, #1
90021f3a:	f100 809f 	bmi.w	9002207c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90021f3e:	45b3      	cmp	fp, r6
90021f40:	f340 809c 	ble.w	9002207c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90021f44:	f1be 0f00 	cmp.w	lr, #0
90021f48:	f000 8098 	beq.w	9002207c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90021f4c:	2800      	cmp	r0, #0
90021f4e:	f2c0 8093 	blt.w	90022078 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90021f52:	4581      	cmp	r9, r0
90021f54:	f340 8090 	ble.w	90022078 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90021f58:	f81c 6009 	ldrb.w	r6, [ip, r9]
90021f5c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90021f60:	441e      	add	r6, r3
90021f62:	3001      	adds	r0, #1
90021f64:	f100 808d 	bmi.w	90022082 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90021f68:	4581      	cmp	r9, r0
90021f6a:	f340 808a 	ble.w	90022082 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90021f6e:	2c00      	cmp	r4, #0
90021f70:	f000 8087 	beq.w	90022082 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90021f74:	44e1      	add	r9, ip
90021f76:	f899 2001 	ldrb.w	r2, [r9, #1]
90021f7a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021f7e:	4413      	add	r3, r2
90021f80:	b2a4      	uxth	r4, r4
90021f82:	f897 c002 	ldrb.w	ip, [r7, #2]
90021f86:	fa1f fe8e 	uxth.w	lr, lr
90021f8a:	9901      	ldr	r1, [sp, #4]
90021f8c:	fb04 fb0e 	mul.w	fp, r4, lr
90021f90:	0124      	lsls	r4, r4, #4
90021f92:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
90021f96:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
90021f9a:	eba4 040b 	sub.w	r4, r4, fp
90021f9e:	fa1f f08e 	uxth.w	r0, lr
90021fa2:	b2a2      	uxth	r2, r4
90021fa4:	78ac      	ldrb	r4, [r5, #2]
90021fa6:	eba9 0900 	sub.w	r9, r9, r0
90021faa:	fa1f fe88 	uxth.w	lr, r8
90021fae:	4354      	muls	r4, r2
90021fb0:	ea6f 0808 	mvn.w	r8, r8
90021fb4:	fa1f f989 	uxth.w	r9, r9
90021fb8:	fa5f f888 	uxtb.w	r8, r8
90021fbc:	fb09 440c 	mla	r4, r9, ip, r4
90021fc0:	f896 c002 	ldrb.w	ip, [r6, #2]
90021fc4:	fb1a fa08 	smulbb	sl, sl, r8
90021fc8:	fb00 440c 	mla	r4, r0, ip, r4
90021fcc:	f893 c002 	ldrb.w	ip, [r3, #2]
90021fd0:	fb0b 4c0c 	mla	ip, fp, ip, r4
90021fd4:	787c      	ldrb	r4, [r7, #1]
90021fd6:	783f      	ldrb	r7, [r7, #0]
90021fd8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90021fdc:	fb0c ac0e 	mla	ip, ip, lr, sl
90021fe0:	f895 a001 	ldrb.w	sl, [r5, #1]
90021fe4:	782d      	ldrb	r5, [r5, #0]
90021fe6:	fb02 fa0a 	mul.w	sl, r2, sl
90021fea:	fa1f fc8c 	uxth.w	ip, ip
90021fee:	436a      	muls	r2, r5
90021ff0:	7835      	ldrb	r5, [r6, #0]
90021ff2:	fb09 aa04 	mla	sl, r9, r4, sl
90021ff6:	7874      	ldrb	r4, [r6, #1]
90021ff8:	fb09 2207 	mla	r2, r9, r7, r2
90021ffc:	fb00 aa04 	mla	sl, r0, r4, sl
90022000:	785c      	ldrb	r4, [r3, #1]
90022002:	fb00 2005 	mla	r0, r0, r5, r2
90022006:	781b      	ldrb	r3, [r3, #0]
90022008:	fb0b a404 	mla	r4, fp, r4, sl
9002200c:	fb11 fa08 	smulbb	sl, r1, r8
90022010:	fb0b 0b03 	mla	fp, fp, r3, r0
90022014:	9b02      	ldr	r3, [sp, #8]
90022016:	f3c4 2407 	ubfx	r4, r4, #8, #8
9002201a:	fb13 f808 	smulbb	r8, r3, r8
9002201e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90022022:	fb04 a40e 	mla	r4, r4, lr, sl
90022026:	f10c 0301 	add.w	r3, ip, #1
9002202a:	fb0b 8e0e 	mla	lr, fp, lr, r8
9002202e:	b2a4      	uxth	r4, r4
90022030:	fa1f fe8e 	uxth.w	lr, lr
90022034:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90022038:	f104 0a01 	add.w	sl, r4, #1
9002203c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
90022040:	f10e 0c01 	add.w	ip, lr, #1
90022044:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90022048:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002204c:	0964      	lsrs	r4, r4, #5
9002204e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90022052:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90022056:	ea4c 0c03 	orr.w	ip, ip, r3
9002205a:	9b03      	ldr	r3, [sp, #12]
9002205c:	ea4c 0c04 	orr.w	ip, ip, r4
90022060:	f8a3 c000 	strh.w	ip, [r3]
90022064:	b007      	add	sp, #28
90022066:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002206a:	af05      	add	r7, sp, #20
9002206c:	e756      	b.n	90021f1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
9002206e:	ad05      	add	r5, sp, #20
90022070:	462f      	mov	r7, r5
90022072:	e761      	b.n	90021f38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90022074:	ad05      	add	r5, sp, #20
90022076:	e75f      	b.n	90021f38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90022078:	ae05      	add	r6, sp, #20
9002207a:	e772      	b.n	90021f62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
9002207c:	ab05      	add	r3, sp, #20
9002207e:	461e      	mov	r6, r3
90022080:	e77e      	b.n	90021f80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90022082:	ab05      	add	r3, sp, #20
90022084:	e77c      	b.n	90021f80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

90022086 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022086:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002208a:	b095      	sub	sp, #84	@ 0x54
9002208c:	9212      	str	r2, [sp, #72]	@ 0x48
9002208e:	9309      	str	r3, [sp, #36]	@ 0x24
90022090:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90022092:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
90022096:	9013      	str	r0, [sp, #76]	@ 0x4c
90022098:	930f      	str	r3, [sp, #60]	@ 0x3c
9002209a:	6850      	ldr	r0, [r2, #4]
9002209c:	910e      	str	r1, [sp, #56]	@ 0x38
9002209e:	6812      	ldr	r2, [r2, #0]
900220a0:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
900220a4:	fb00 1303 	mla	r3, r0, r3, r1
900220a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900220ac:	930a      	str	r3, [sp, #40]	@ 0x28
900220ae:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900220b0:	681b      	ldr	r3, [r3, #0]
900220b2:	930d      	str	r3, [sp, #52]	@ 0x34
900220b4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900220b6:	685c      	ldr	r4, [r3, #4]
900220b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900220ba:	3404      	adds	r4, #4
900220bc:	43db      	mvns	r3, r3
900220be:	b2db      	uxtb	r3, r3
900220c0:	930b      	str	r3, [sp, #44]	@ 0x2c
900220c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900220c4:	2b00      	cmp	r3, #0
900220c6:	dc03      	bgt.n	900220d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900220c8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
900220ca:	2b00      	cmp	r3, #0
900220cc:	f340 8255 	ble.w	9002257a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
900220d0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900220d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900220d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900220da:	1e48      	subs	r0, r1, #1
900220dc:	1e55      	subs	r5, r2, #1
900220de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900220e0:	2b00      	cmp	r3, #0
900220e2:	f340 80f9 	ble.w	900222d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
900220e6:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
900220e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900220ea:	1436      	asrs	r6, r6, #16
900220ec:	ea4f 4323 	mov.w	r3, r3, asr #16
900220f0:	d406      	bmi.n	90022100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900220f2:	4286      	cmp	r6, r0
900220f4:	da04      	bge.n	90022100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900220f6:	2b00      	cmp	r3, #0
900220f8:	db02      	blt.n	90022100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900220fa:	42ab      	cmp	r3, r5
900220fc:	f2c0 80ed 	blt.w	900222da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90022100:	3601      	adds	r6, #1
90022102:	f100 80da 	bmi.w	900222ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022106:	42b1      	cmp	r1, r6
90022108:	f2c0 80d7 	blt.w	900222ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002210c:	3301      	adds	r3, #1
9002210e:	f100 80d4 	bmi.w	900222ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022112:	429a      	cmp	r2, r3
90022114:	f2c0 80d1 	blt.w	900222ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022118:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002211a:	9311      	str	r3, [sp, #68]	@ 0x44
9002211c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002211e:	930c      	str	r3, [sp, #48]	@ 0x30
90022120:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022122:	2b00      	cmp	r3, #0
90022124:	f340 80fa 	ble.w	9002231c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90022128:	9826      	ldr	r0, [sp, #152]	@ 0x98
9002212a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002212c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9002212e:	68c6      	ldr	r6, [r0, #12]
90022130:	141d      	asrs	r5, r3, #16
90022132:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90022134:	f3c2 3103 	ubfx	r1, r2, #12, #4
90022138:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002213a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
9002213c:	1400      	asrs	r0, r0, #16
9002213e:	f3c3 3303 	ubfx	r3, r3, #12, #4
90022142:	6892      	ldr	r2, [r2, #8]
90022144:	f100 813e 	bmi.w	900223c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022148:	1e57      	subs	r7, r2, #1
9002214a:	42b8      	cmp	r0, r7
9002214c:	f280 813a 	bge.w	900223c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022150:	2d00      	cmp	r5, #0
90022152:	f2c0 8137 	blt.w	900223c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90022156:	1e77      	subs	r7, r6, #1
90022158:	42bd      	cmp	r5, r7
9002215a:	f280 8133 	bge.w	900223c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002215e:	b212      	sxth	r2, r2
90022160:	fb05 0002 	mla	r0, r5, r2, r0
90022164:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90022166:	f815 a000 	ldrb.w	sl, [r5, r0]
9002216a:	182e      	adds	r6, r5, r0
9002216c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90022170:	eb04 050a 	add.w	r5, r4, sl
90022174:	2b00      	cmp	r3, #0
90022176:	f000 8117 	beq.w	900223a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
9002217a:	f896 c001 	ldrb.w	ip, [r6, #1]
9002217e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90022182:	44a4      	add	ip, r4
90022184:	2900      	cmp	r1, #0
90022186:	f000 8117 	beq.w	900223b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
9002218a:	18b0      	adds	r0, r6, r2
9002218c:	5cb2      	ldrb	r2, [r6, r2]
9002218e:	7840      	ldrb	r0, [r0, #1]
90022190:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022194:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022198:	4422      	add	r2, r4
9002219a:	4420      	add	r0, r4
9002219c:	b29b      	uxth	r3, r3
9002219e:	f89c 7002 	ldrb.w	r7, [ip, #2]
900221a2:	b289      	uxth	r1, r1
900221a4:	f895 b002 	ldrb.w	fp, [r5, #2]
900221a8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
900221aa:	fb03 f901 	mul.w	r9, r3, r1
900221ae:	011b      	lsls	r3, r3, #4
900221b0:	f8b6 e000 	ldrh.w	lr, [r6]
900221b4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900221b8:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
900221bc:	eba3 0309 	sub.w	r3, r3, r9
900221c0:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
900221c4:	b289      	uxth	r1, r1
900221c6:	f814 a00a 	ldrb.w	sl, [r4, sl]
900221ca:	b29b      	uxth	r3, r3
900221cc:	eba8 0801 	sub.w	r8, r8, r1
900221d0:	435f      	muls	r7, r3
900221d2:	fa1f f888 	uxth.w	r8, r8
900221d6:	9310      	str	r3, [sp, #64]	@ 0x40
900221d8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900221da:	fb08 770b 	mla	r7, r8, fp, r7
900221de:	f892 b002 	ldrb.w	fp, [r2, #2]
900221e2:	fb01 770b 	mla	r7, r1, fp, r7
900221e6:	f890 b002 	ldrb.w	fp, [r0, #2]
900221ea:	fb09 770b 	mla	r7, r9, fp, r7
900221ee:	ea4f 2b2e 	mov.w	fp, lr, asr #8
900221f2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
900221f6:	f3c7 2707 	ubfx	r7, r7, #8, #8
900221fa:	fb1b fb03 	smulbb	fp, fp, r3
900221fe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022200:	fb07 b706 	mla	r7, r7, r6, fp
90022204:	f895 b001 	ldrb.w	fp, [r5, #1]
90022208:	f89c 5001 	ldrb.w	r5, [ip, #1]
9002220c:	f89c c000 	ldrb.w	ip, [ip]
90022210:	b2bf      	uxth	r7, r7
90022212:	435d      	muls	r5, r3
90022214:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022216:	fb08 550b 	mla	r5, r8, fp, r5
9002221a:	f892 b001 	ldrb.w	fp, [r2, #1]
9002221e:	fb01 550b 	mla	r5, r1, fp, r5
90022222:	f890 b001 	ldrb.w	fp, [r0, #1]
90022226:	fb09 550b 	mla	r5, r9, fp, r5
9002222a:	ea4f 0bee 	mov.w	fp, lr, asr #3
9002222e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90022232:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90022236:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002223a:	fa5f fe8e 	uxtb.w	lr, lr
9002223e:	fb1b fb03 	smulbb	fp, fp, r3
90022242:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022244:	fb03 f30c 	mul.w	r3, r3, ip
90022248:	f892 c000 	ldrb.w	ip, [r2]
9002224c:	fb05 b506 	mla	r5, r5, r6, fp
90022250:	fb08 330a 	mla	r3, r8, sl, r3
90022254:	b2ad      	uxth	r5, r5
90022256:	fb01 330c 	mla	r3, r1, ip, r3
9002225a:	f890 c000 	ldrb.w	ip, [r0]
9002225e:	f105 0b01 	add.w	fp, r5, #1
90022262:	fb09 3c0c 	mla	ip, r9, ip, r3
90022266:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022268:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9002226c:	fb1e fe03 	smulbb	lr, lr, r3
90022270:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90022274:	1c7b      	adds	r3, r7, #1
90022276:	096d      	lsrs	r5, r5, #5
90022278:	fb0c e606 	mla	r6, ip, r6, lr
9002227c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90022280:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022284:	b2b6      	uxth	r6, r6
90022286:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
9002228a:	1c77      	adds	r7, r6, #1
9002228c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90022290:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022294:	431f      	orrs	r7, r3
90022296:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022298:	433d      	orrs	r5, r7
9002229a:	801d      	strh	r5, [r3, #0]
9002229c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002229e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900222a0:	3302      	adds	r3, #2
900222a2:	930c      	str	r3, [sp, #48]	@ 0x30
900222a4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900222a6:	4413      	add	r3, r2
900222a8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900222aa:	931f      	str	r3, [sp, #124]	@ 0x7c
900222ac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900222ae:	4413      	add	r3, r2
900222b0:	9320      	str	r3, [sp, #128]	@ 0x80
900222b2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900222b4:	3b01      	subs	r3, #1
900222b6:	9311      	str	r3, [sp, #68]	@ 0x44
900222b8:	e732      	b.n	90022120 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900222ba:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900222bc:	9e21      	ldr	r6, [sp, #132]	@ 0x84
900222be:	4433      	add	r3, r6
900222c0:	9e22      	ldr	r6, [sp, #136]	@ 0x88
900222c2:	931f      	str	r3, [sp, #124]	@ 0x7c
900222c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900222c6:	4433      	add	r3, r6
900222c8:	9320      	str	r3, [sp, #128]	@ 0x80
900222ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900222cc:	3b01      	subs	r3, #1
900222ce:	9309      	str	r3, [sp, #36]	@ 0x24
900222d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900222d2:	3302      	adds	r3, #2
900222d4:	930a      	str	r3, [sp, #40]	@ 0x28
900222d6:	e702      	b.n	900220de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900222d8:	d027      	beq.n	9002232a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
900222da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900222dc:	9821      	ldr	r0, [sp, #132]	@ 0x84
900222de:	3b01      	subs	r3, #1
900222e0:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
900222e2:	fb00 5003 	mla	r0, r0, r3, r5
900222e6:	1400      	asrs	r0, r0, #16
900222e8:	f53f af16 	bmi.w	90022118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900222ec:	3901      	subs	r1, #1
900222ee:	4288      	cmp	r0, r1
900222f0:	f6bf af12 	bge.w	90022118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900222f4:	9922      	ldr	r1, [sp, #136]	@ 0x88
900222f6:	9820      	ldr	r0, [sp, #128]	@ 0x80
900222f8:	fb01 0303 	mla	r3, r1, r3, r0
900222fc:	141b      	asrs	r3, r3, #16
900222fe:	f53f af0b 	bmi.w	90022118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022302:	3a01      	subs	r2, #1
90022304:	4293      	cmp	r3, r2
90022306:	f6bf af07 	bge.w	90022118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002230a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002230c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
90022310:	9311      	str	r3, [sp, #68]	@ 0x44
90022312:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022314:	930c      	str	r3, [sp, #48]	@ 0x30
90022316:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022318:	2b00      	cmp	r3, #0
9002231a:	dc70      	bgt.n	900223fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
9002231c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002231e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90022320:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90022324:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022328:	930a      	str	r3, [sp, #40]	@ 0x28
9002232a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002232c:	2b00      	cmp	r3, #0
9002232e:	f340 8124 	ble.w	9002257a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90022332:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90022336:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90022338:	ee30 0a04 	vadd.f32	s0, s0, s8
9002233c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022340:	eef0 6a62 	vmov.f32	s13, s5
90022344:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022348:	ee31 1a05 	vadd.f32	s2, s2, s10
9002234c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022350:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90022354:	eef0 6a43 	vmov.f32	s13, s6
90022358:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002235c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90022360:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022364:	ee61 7a27 	vmul.f32	s15, s2, s15
90022368:	ee77 2a62 	vsub.f32	s5, s14, s5
9002236c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022370:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022374:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022378:	ee12 2a90 	vmov	r2, s5
9002237c:	eef0 2a47 	vmov.f32	s5, s14
90022380:	fb92 f3f3 	sdiv	r3, r2, r3
90022384:	ee13 2a10 	vmov	r2, s6
90022388:	9321      	str	r3, [sp, #132]	@ 0x84
9002238a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002238c:	eeb0 3a67 	vmov.f32	s6, s15
90022390:	fb92 f3f3 	sdiv	r3, r2, r3
90022394:	9322      	str	r3, [sp, #136]	@ 0x88
90022396:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022398:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9002239a:	3b01      	subs	r3, #1
9002239c:	930e      	str	r3, [sp, #56]	@ 0x38
9002239e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900223a0:	bf08      	it	eq
900223a2:	4613      	moveq	r3, r2
900223a4:	9309      	str	r3, [sp, #36]	@ 0x24
900223a6:	e68c      	b.n	900220c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900223a8:	b149      	cbz	r1, 900223be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
900223aa:	5cb2      	ldrb	r2, [r6, r2]
900223ac:	4628      	mov	r0, r5
900223ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900223b2:	4422      	add	r2, r4
900223b4:	46ac      	mov	ip, r5
900223b6:	e6f1      	b.n	9002219c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900223b8:	4628      	mov	r0, r5
900223ba:	462a      	mov	r2, r5
900223bc:	e6ee      	b.n	9002219c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900223be:	4628      	mov	r0, r5
900223c0:	462a      	mov	r2, r5
900223c2:	e7f7      	b.n	900223b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
900223c4:	1c47      	adds	r7, r0, #1
900223c6:	f53f af69 	bmi.w	9002229c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900223ca:	42ba      	cmp	r2, r7
900223cc:	f6ff af66 	blt.w	9002229c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900223d0:	1c6f      	adds	r7, r5, #1
900223d2:	f53f af63 	bmi.w	9002229c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900223d6:	42be      	cmp	r6, r7
900223d8:	f6ff af60 	blt.w	9002229c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900223dc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900223de:	b236      	sxth	r6, r6
900223e0:	b212      	sxth	r2, r2
900223e2:	9002      	str	r0, [sp, #8]
900223e4:	9601      	str	r6, [sp, #4]
900223e6:	9200      	str	r2, [sp, #0]
900223e8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900223ea:	e9cd 1705 	strd	r1, r7, [sp, #20]
900223ee:	e9cd 5303 	strd	r5, r3, [sp, #12]
900223f2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
900223f6:	4623      	mov	r3, r4
900223f8:	f7ff fd59 	bl	90021eae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
900223fc:	e74e      	b.n	9002229c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900223fe:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90022400:	9820      	ldr	r0, [sp, #128]	@ 0x80
90022402:	f3c2 3103 	ubfx	r1, r2, #12, #4
90022406:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90022408:	9a26      	ldr	r2, [sp, #152]	@ 0x98
9002240a:	1400      	asrs	r0, r0, #16
9002240c:	142d      	asrs	r5, r5, #16
9002240e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022410:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90022414:	f3c3 3303 	ubfx	r3, r3, #12, #4
90022418:	fb02 5000 	mla	r0, r2, r0, r5
9002241c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002241e:	f815 9000 	ldrb.w	r9, [r5, r0]
90022422:	182e      	adds	r6, r5, r0
90022424:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90022428:	eb04 0509 	add.w	r5, r4, r9
9002242c:	2b00      	cmp	r3, #0
9002242e:	f000 8096 	beq.w	9002255e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90022432:	7877      	ldrb	r7, [r6, #1]
90022434:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022438:	4427      	add	r7, r4
9002243a:	2900      	cmp	r1, #0
9002243c:	f000 8097 	beq.w	9002256e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90022440:	18b0      	adds	r0, r6, r2
90022442:	5cb2      	ldrb	r2, [r6, r2]
90022444:	7840      	ldrb	r0, [r0, #1]
90022446:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002244a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002244e:	4422      	add	r2, r4
90022450:	4420      	add	r0, r4
90022452:	b29b      	uxth	r3, r3
90022454:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90022456:	b289      	uxth	r1, r1
90022458:	f895 b002 	ldrb.w	fp, [r5, #2]
9002245c:	f8b6 c000 	ldrh.w	ip, [r6]
90022460:	fb03 f801 	mul.w	r8, r3, r1
90022464:	011b      	lsls	r3, r3, #4
90022466:	78be      	ldrb	r6, [r7, #2]
90022468:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
9002246c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90022470:	eba3 0308 	sub.w	r3, r3, r8
90022474:	f814 9009 	ldrb.w	r9, [r4, r9]
90022478:	b289      	uxth	r1, r1
9002247a:	b29b      	uxth	r3, r3
9002247c:	ebae 0e01 	sub.w	lr, lr, r1
90022480:	435e      	muls	r6, r3
90022482:	fa1f fe8e 	uxth.w	lr, lr
90022486:	9310      	str	r3, [sp, #64]	@ 0x40
90022488:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002248a:	fb0e 660b 	mla	r6, lr, fp, r6
9002248e:	f892 b002 	ldrb.w	fp, [r2, #2]
90022492:	fb01 660b 	mla	r6, r1, fp, r6
90022496:	f890 b002 	ldrb.w	fp, [r0, #2]
9002249a:	fb08 660b 	mla	r6, r8, fp, r6
9002249e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
900224a2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
900224a6:	f3c6 2607 	ubfx	r6, r6, #8, #8
900224aa:	fb1b fb03 	smulbb	fp, fp, r3
900224ae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900224b0:	fb06 b60a 	mla	r6, r6, sl, fp
900224b4:	f895 b001 	ldrb.w	fp, [r5, #1]
900224b8:	787d      	ldrb	r5, [r7, #1]
900224ba:	783f      	ldrb	r7, [r7, #0]
900224bc:	b2b6      	uxth	r6, r6
900224be:	435d      	muls	r5, r3
900224c0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900224c2:	fb0e 550b 	mla	r5, lr, fp, r5
900224c6:	f892 b001 	ldrb.w	fp, [r2, #1]
900224ca:	fb01 550b 	mla	r5, r1, fp, r5
900224ce:	f890 b001 	ldrb.w	fp, [r0, #1]
900224d2:	fb08 550b 	mla	r5, r8, fp, r5
900224d6:	ea4f 0bec 	mov.w	fp, ip, asr #3
900224da:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900224de:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
900224e2:	f3c5 2507 	ubfx	r5, r5, #8, #8
900224e6:	fa5f fc8c 	uxtb.w	ip, ip
900224ea:	fb1b fb03 	smulbb	fp, fp, r3
900224ee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900224f0:	437b      	muls	r3, r7
900224f2:	7817      	ldrb	r7, [r2, #0]
900224f4:	fb05 b50a 	mla	r5, r5, sl, fp
900224f8:	fb0e 3309 	mla	r3, lr, r9, r3
900224fc:	b2ad      	uxth	r5, r5
900224fe:	fb01 3307 	mla	r3, r1, r7, r3
90022502:	7807      	ldrb	r7, [r0, #0]
90022504:	f105 0b01 	add.w	fp, r5, #1
90022508:	fb08 3707 	mla	r7, r8, r7, r3
9002250c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002250e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90022512:	fb1c fc03 	smulbb	ip, ip, r3
90022516:	f3c7 2707 	ubfx	r7, r7, #8, #8
9002251a:	1c73      	adds	r3, r6, #1
9002251c:	096d      	lsrs	r5, r5, #5
9002251e:	fb07 c70a 	mla	r7, r7, sl, ip
90022522:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90022526:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002252a:	b2bf      	uxth	r7, r7
9002252c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002252e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90022532:	1c7a      	adds	r2, r7, #1
90022534:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90022538:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002253c:	4316      	orrs	r6, r2
9002253e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90022540:	432e      	orrs	r6, r5
90022542:	f823 6b02 	strh.w	r6, [r3], #2
90022546:	930c      	str	r3, [sp, #48]	@ 0x30
90022548:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002254a:	4413      	add	r3, r2
9002254c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9002254e:	931f      	str	r3, [sp, #124]	@ 0x7c
90022550:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022552:	4413      	add	r3, r2
90022554:	9320      	str	r3, [sp, #128]	@ 0x80
90022556:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022558:	3b01      	subs	r3, #1
9002255a:	9311      	str	r3, [sp, #68]	@ 0x44
9002255c:	e6db      	b.n	90022316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
9002255e:	b149      	cbz	r1, 90022574 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90022560:	5cb2      	ldrb	r2, [r6, r2]
90022562:	4628      	mov	r0, r5
90022564:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022568:	4422      	add	r2, r4
9002256a:	462f      	mov	r7, r5
9002256c:	e771      	b.n	90022452 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9002256e:	4628      	mov	r0, r5
90022570:	462a      	mov	r2, r5
90022572:	e76e      	b.n	90022452 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90022574:	4628      	mov	r0, r5
90022576:	462a      	mov	r2, r5
90022578:	e7f7      	b.n	9002256a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002257a:	b015      	add	sp, #84	@ 0x54
9002257c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90022580:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022584:	880f      	ldrh	r7, [r1, #0]
90022586:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
9002258a:	023c      	lsls	r4, r7, #8
9002258c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90022590:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
90022594:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
90022598:	017c      	lsls	r4, r7, #5
9002259a:	00ff      	lsls	r7, r7, #3
9002259c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900225a0:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
900225a4:	b2ff      	uxtb	r7, r7
900225a6:	ea4b 0404 	orr.w	r4, fp, r4
900225aa:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
900225ae:	4327      	orrs	r7, r4
900225b0:	fb05 ca0e 	mla	sl, r5, lr, ip
900225b4:	2d00      	cmp	r5, #0
900225b6:	9701      	str	r7, [sp, #4]
900225b8:	eb02 080a 	add.w	r8, r2, sl
900225bc:	db7e      	blt.n	900226bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
900225be:	45a9      	cmp	r9, r5
900225c0:	dd7c      	ble.n	900226bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
900225c2:	f1bc 0f00 	cmp.w	ip, #0
900225c6:	db77      	blt.n	900226b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
900225c8:	45e6      	cmp	lr, ip
900225ca:	dd75      	ble.n	900226b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
900225cc:	f812 700a 	ldrb.w	r7, [r2, sl]
900225d0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
900225d4:	441f      	add	r7, r3
900225d6:	f11c 0201 	adds.w	r2, ip, #1
900225da:	d472      	bmi.n	900226c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900225dc:	4596      	cmp	lr, r2
900225de:	dd70      	ble.n	900226c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900225e0:	2800      	cmp	r0, #0
900225e2:	d06e      	beq.n	900226c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900225e4:	f898 4001 	ldrb.w	r4, [r8, #1]
900225e8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
900225ec:	441c      	add	r4, r3
900225ee:	3501      	adds	r5, #1
900225f0:	d46b      	bmi.n	900226ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900225f2:	45a9      	cmp	r9, r5
900225f4:	dd69      	ble.n	900226ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900225f6:	2e00      	cmp	r6, #0
900225f8:	d067      	beq.n	900226ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
900225fa:	f1bc 0f00 	cmp.w	ip, #0
900225fe:	db62      	blt.n	900226c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90022600:	45e6      	cmp	lr, ip
90022602:	dd60      	ble.n	900226c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90022604:	f818 500e 	ldrb.w	r5, [r8, lr]
90022608:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9002260c:	441d      	add	r5, r3
9002260e:	f11c 0201 	adds.w	r2, ip, #1
90022612:	d45d      	bmi.n	900226d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022614:	4596      	cmp	lr, r2
90022616:	dd5b      	ble.n	900226d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022618:	2800      	cmp	r0, #0
9002261a:	d059      	beq.n	900226d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9002261c:	44c6      	add	lr, r8
9002261e:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022622:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022626:	4413      	add	r3, r2
90022628:	b280      	uxth	r0, r0
9002262a:	f897 e002 	ldrb.w	lr, [r7, #2]
9002262e:	b2b2      	uxth	r2, r6
90022630:	f897 9000 	ldrb.w	r9, [r7]
90022634:	787f      	ldrb	r7, [r7, #1]
90022636:	fb00 f602 	mul.w	r6, r0, r2
9002263a:	0100      	lsls	r0, r0, #4
9002263c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90022640:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
90022644:	1b80      	subs	r0, r0, r6
90022646:	fa1f fc82 	uxth.w	ip, r2
9002264a:	b282      	uxth	r2, r0
9002264c:	78a0      	ldrb	r0, [r4, #2]
9002264e:	eba8 080c 	sub.w	r8, r8, ip
90022652:	4350      	muls	r0, r2
90022654:	fa1f f888 	uxth.w	r8, r8
90022658:	fb08 0e0e 	mla	lr, r8, lr, r0
9002265c:	78a8      	ldrb	r0, [r5, #2]
9002265e:	fb0c e000 	mla	r0, ip, r0, lr
90022662:	f893 e002 	ldrb.w	lr, [r3, #2]
90022666:	fb06 0e0e 	mla	lr, r6, lr, r0
9002266a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
9002266e:	f894 e000 	ldrb.w	lr, [r4]
90022672:	fb02 fe0e 	mul.w	lr, r2, lr
90022676:	fb08 e909 	mla	r9, r8, r9, lr
9002267a:	f895 e000 	ldrb.w	lr, [r5]
9002267e:	fb0c 990e 	mla	r9, ip, lr, r9
90022682:	f893 e000 	ldrb.w	lr, [r3]
90022686:	785b      	ldrb	r3, [r3, #1]
90022688:	fb06 9e0e 	mla	lr, r6, lr, r9
9002268c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90022690:	ea4e 0e00 	orr.w	lr, lr, r0
90022694:	7860      	ldrb	r0, [r4, #1]
90022696:	4350      	muls	r0, r2
90022698:	786a      	ldrb	r2, [r5, #1]
9002269a:	fb08 0007 	mla	r0, r8, r7, r0
9002269e:	fb0c 0202 	mla	r2, ip, r2, r0
900226a2:	fb06 2303 	mla	r3, r6, r3, r2
900226a6:	095b      	lsrs	r3, r3, #5
900226a8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900226ac:	ea4e 0303 	orr.w	r3, lr, r3
900226b0:	800b      	strh	r3, [r1, #0]
900226b2:	b003      	add	sp, #12
900226b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900226b8:	af01      	add	r7, sp, #4
900226ba:	e78c      	b.n	900225d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
900226bc:	ac01      	add	r4, sp, #4
900226be:	4627      	mov	r7, r4
900226c0:	e795      	b.n	900225ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
900226c2:	ac01      	add	r4, sp, #4
900226c4:	e793      	b.n	900225ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
900226c6:	ad01      	add	r5, sp, #4
900226c8:	e7a1      	b.n	9002260e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
900226ca:	ab01      	add	r3, sp, #4
900226cc:	461d      	mov	r5, r3
900226ce:	e7ab      	b.n	90022628 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
900226d0:	ab01      	add	r3, sp, #4
900226d2:	e7a9      	b.n	90022628 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

900226d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900226d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900226d8:	b08f      	sub	sp, #60	@ 0x3c
900226da:	920c      	str	r2, [sp, #48]	@ 0x30
900226dc:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
900226de:	900d      	str	r0, [sp, #52]	@ 0x34
900226e0:	910a      	str	r1, [sp, #40]	@ 0x28
900226e2:	6850      	ldr	r0, [r2, #4]
900226e4:	9306      	str	r3, [sp, #24]
900226e6:	6812      	ldr	r2, [r2, #0]
900226e8:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
900226ec:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
900226f0:	fb00 1303 	mla	r3, r0, r3, r1
900226f4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900226f8:	9307      	str	r3, [sp, #28]
900226fa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900226fc:	681b      	ldr	r3, [r3, #0]
900226fe:	9308      	str	r3, [sp, #32]
90022700:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022702:	685c      	ldr	r4, [r3, #4]
90022704:	3404      	adds	r4, #4
90022706:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022708:	2b00      	cmp	r3, #0
9002270a:	dc03      	bgt.n	90022714 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9002270c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002270e:	2b00      	cmp	r3, #0
90022710:	f340 81d5 	ble.w	90022abe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90022714:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022716:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002271a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002271e:	1e48      	subs	r0, r1, #1
90022720:	1e56      	subs	r6, r2, #1
90022722:	9b06      	ldr	r3, [sp, #24]
90022724:	2b00      	cmp	r3, #0
90022726:	f340 80b6 	ble.w	90022896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002272a:	ea5f 472b 	movs.w	r7, fp, asr #16
9002272e:	ea4f 4325 	mov.w	r3, r5, asr #16
90022732:	d406      	bmi.n	90022742 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022734:	4287      	cmp	r7, r0
90022736:	da04      	bge.n	90022742 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022738:	2b00      	cmp	r3, #0
9002273a:	db02      	blt.n	90022742 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9002273c:	42b3      	cmp	r3, r6
9002273e:	f2c0 80ab 	blt.w	90022898 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90022742:	3701      	adds	r7, #1
90022744:	f100 809c 	bmi.w	90022880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022748:	42b9      	cmp	r1, r7
9002274a:	f2c0 8099 	blt.w	90022880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002274e:	3301      	adds	r3, #1
90022750:	f100 8096 	bmi.w	90022880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022754:	429a      	cmp	r2, r3
90022756:	f2c0 8093 	blt.w	90022880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002275a:	9b06      	ldr	r3, [sp, #24]
9002275c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002275e:	9b07      	ldr	r3, [sp, #28]
90022760:	9309      	str	r3, [sp, #36]	@ 0x24
90022762:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022764:	2b00      	cmp	r3, #0
90022766:	f340 80b4 	ble.w	900228d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9002276a:	9820      	ldr	r0, [sp, #128]	@ 0x80
9002276c:	142e      	asrs	r6, r5, #16
9002276e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90022770:	f3cb 3303 	ubfx	r3, fp, #12, #4
90022774:	68c7      	ldr	r7, [r0, #12]
90022776:	ea5f 402b 	movs.w	r0, fp, asr #16
9002277a:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002277e:	6892      	ldr	r2, [r2, #8]
90022780:	f100 80fb 	bmi.w	9002297a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022784:	f102 3cff 	add.w	ip, r2, #4294967295
90022788:	4560      	cmp	r0, ip
9002278a:	f280 80f6 	bge.w	9002297a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9002278e:	2e00      	cmp	r6, #0
90022790:	f2c0 80f3 	blt.w	9002297a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022794:	f107 3cff 	add.w	ip, r7, #4294967295
90022798:	4566      	cmp	r6, ip
9002279a:	f280 80ee 	bge.w	9002297a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9002279e:	b212      	sxth	r2, r2
900227a0:	fb06 0002 	mla	r0, r6, r2, r0
900227a4:	9e08      	ldr	r6, [sp, #32]
900227a6:	1837      	adds	r7, r6, r0
900227a8:	5c30      	ldrb	r0, [r6, r0]
900227aa:	eb00 0840 	add.w	r8, r0, r0, lsl #1
900227ae:	eb04 0c08 	add.w	ip, r4, r8
900227b2:	2b00      	cmp	r3, #0
900227b4:	f000 80d3 	beq.w	9002295e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
900227b8:	787e      	ldrb	r6, [r7, #1]
900227ba:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900227be:	4426      	add	r6, r4
900227c0:	2900      	cmp	r1, #0
900227c2:	f000 80d4 	beq.w	9002296e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
900227c6:	18b8      	adds	r0, r7, r2
900227c8:	5cba      	ldrb	r2, [r7, r2]
900227ca:	7840      	ldrb	r0, [r0, #1]
900227cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900227d0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900227d4:	4422      	add	r2, r4
900227d6:	4420      	add	r0, r4
900227d8:	b29b      	uxth	r3, r3
900227da:	78b7      	ldrb	r7, [r6, #2]
900227dc:	b289      	uxth	r1, r1
900227de:	f89c a002 	ldrb.w	sl, [ip, #2]
900227e2:	f89c c001 	ldrb.w	ip, [ip, #1]
900227e6:	fb03 f901 	mul.w	r9, r3, r1
900227ea:	011b      	lsls	r3, r3, #4
900227ec:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900227f0:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
900227f4:	eba3 0309 	sub.w	r3, r3, r9
900227f8:	b289      	uxth	r1, r1
900227fa:	b29b      	uxth	r3, r3
900227fc:	ebae 0e01 	sub.w	lr, lr, r1
90022800:	435f      	muls	r7, r3
90022802:	fa1f fe8e 	uxth.w	lr, lr
90022806:	fb0e 770a 	mla	r7, lr, sl, r7
9002280a:	f892 a002 	ldrb.w	sl, [r2, #2]
9002280e:	fb01 770a 	mla	r7, r1, sl, r7
90022812:	f890 a002 	ldrb.w	sl, [r0, #2]
90022816:	fb09 7a0a 	mla	sl, r9, sl, r7
9002281a:	f814 7008 	ldrb.w	r7, [r4, r8]
9002281e:	f896 8000 	ldrb.w	r8, [r6]
90022822:	7876      	ldrb	r6, [r6, #1]
90022824:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90022828:	fb03 f808 	mul.w	r8, r3, r8
9002282c:	4373      	muls	r3, r6
9002282e:	fb0e 8807 	mla	r8, lr, r7, r8
90022832:	7817      	ldrb	r7, [r2, #0]
90022834:	fb0e 330c 	mla	r3, lr, ip, r3
90022838:	fb01 8807 	mla	r8, r1, r7, r8
9002283c:	7807      	ldrb	r7, [r0, #0]
9002283e:	fb09 8707 	mla	r7, r9, r7, r8
90022842:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022846:	ea47 070a 	orr.w	r7, r7, sl
9002284a:	f892 a001 	ldrb.w	sl, [r2, #1]
9002284e:	fb01 310a 	mla	r1, r1, sl, r3
90022852:	f890 a001 	ldrb.w	sl, [r0, #1]
90022856:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022858:	fb09 1a0a 	mla	sl, r9, sl, r1
9002285c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90022860:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90022864:	ea47 070a 	orr.w	r7, r7, sl
90022868:	801f      	strh	r7, [r3, #0]
9002286a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002286c:	3302      	adds	r3, #2
9002286e:	9309      	str	r3, [sp, #36]	@ 0x24
90022870:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022872:	449b      	add	fp, r3
90022874:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022876:	441d      	add	r5, r3
90022878:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002287a:	3b01      	subs	r3, #1
9002287c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002287e:	e770      	b.n	90022762 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90022880:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022882:	449b      	add	fp, r3
90022884:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022886:	441d      	add	r5, r3
90022888:	9b06      	ldr	r3, [sp, #24]
9002288a:	3b01      	subs	r3, #1
9002288c:	9306      	str	r3, [sp, #24]
9002288e:	9b07      	ldr	r3, [sp, #28]
90022890:	3302      	adds	r3, #2
90022892:	9307      	str	r3, [sp, #28]
90022894:	e745      	b.n	90022722 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90022896:	d023      	beq.n	900228e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90022898:	9b06      	ldr	r3, [sp, #24]
9002289a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
9002289c:	3b01      	subs	r3, #1
9002289e:	fb00 b003 	mla	r0, r0, r3, fp
900228a2:	1400      	asrs	r0, r0, #16
900228a4:	f53f af59 	bmi.w	9002275a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900228a8:	3901      	subs	r1, #1
900228aa:	4288      	cmp	r0, r1
900228ac:	f6bf af55 	bge.w	9002275a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900228b0:	991c      	ldr	r1, [sp, #112]	@ 0x70
900228b2:	fb01 5303 	mla	r3, r1, r3, r5
900228b6:	141b      	asrs	r3, r3, #16
900228b8:	f53f af4f 	bmi.w	9002275a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900228bc:	3a01      	subs	r2, #1
900228be:	4293      	cmp	r3, r2
900228c0:	f6bf af4b 	bge.w	9002275a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900228c4:	9b06      	ldr	r3, [sp, #24]
900228c6:	9309      	str	r3, [sp, #36]	@ 0x24
900228c8:	9b07      	ldr	r3, [sp, #28]
900228ca:	930b      	str	r3, [sp, #44]	@ 0x2c
900228cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900228ce:	2b00      	cmp	r3, #0
900228d0:	dc70      	bgt.n	900229b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
900228d2:	9b06      	ldr	r3, [sp, #24]
900228d4:	9a07      	ldr	r2, [sp, #28]
900228d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900228da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900228de:	9307      	str	r3, [sp, #28]
900228e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900228e2:	2b00      	cmp	r3, #0
900228e4:	f340 80eb 	ble.w	90022abe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900228e8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900228ec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900228ee:	ee30 0a04 	vadd.f32	s0, s0, s8
900228f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900228f6:	eef0 6a62 	vmov.f32	s13, s5
900228fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
900228fe:	ee31 1a05 	vadd.f32	s2, s2, s10
90022902:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022906:	ee16 ba90 	vmov	fp, s13
9002290a:	eef0 6a43 	vmov.f32	s13, s6
9002290e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022912:	ee16 5a90 	vmov	r5, s13
90022916:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002291a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002291e:	ee77 2a62 	vsub.f32	s5, s14, s5
90022922:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022926:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002292a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002292e:	ee12 2a90 	vmov	r2, s5
90022932:	eef0 2a47 	vmov.f32	s5, s14
90022936:	fb92 f3f3 	sdiv	r3, r2, r3
9002293a:	ee13 2a10 	vmov	r2, s6
9002293e:	931b      	str	r3, [sp, #108]	@ 0x6c
90022940:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90022942:	eeb0 3a67 	vmov.f32	s6, s15
90022946:	fb92 f3f3 	sdiv	r3, r2, r3
9002294a:	931c      	str	r3, [sp, #112]	@ 0x70
9002294c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002294e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90022950:	3b01      	subs	r3, #1
90022952:	930a      	str	r3, [sp, #40]	@ 0x28
90022954:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90022956:	bf08      	it	eq
90022958:	4613      	moveq	r3, r2
9002295a:	9306      	str	r3, [sp, #24]
9002295c:	e6d3      	b.n	90022706 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9002295e:	b149      	cbz	r1, 90022974 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90022960:	5cba      	ldrb	r2, [r7, r2]
90022962:	4660      	mov	r0, ip
90022964:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022968:	4422      	add	r2, r4
9002296a:	4666      	mov	r6, ip
9002296c:	e734      	b.n	900227d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9002296e:	4660      	mov	r0, ip
90022970:	4662      	mov	r2, ip
90022972:	e731      	b.n	900227d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90022974:	4660      	mov	r0, ip
90022976:	4662      	mov	r2, ip
90022978:	e7f7      	b.n	9002296a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9002297a:	f110 0c01 	adds.w	ip, r0, #1
9002297e:	f53f af74 	bmi.w	9002286a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022982:	4562      	cmp	r2, ip
90022984:	f6ff af71 	blt.w	9002286a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022988:	f116 0c01 	adds.w	ip, r6, #1
9002298c:	f53f af6d 	bmi.w	9002286a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022990:	4567      	cmp	r7, ip
90022992:	f6ff af6a 	blt.w	9002286a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022996:	b23f      	sxth	r7, r7
90022998:	b212      	sxth	r2, r2
9002299a:	9701      	str	r7, [sp, #4]
9002299c:	9200      	str	r2, [sp, #0]
9002299e:	e9cd 3104 	strd	r3, r1, [sp, #16]
900229a2:	e9cd 0602 	strd	r0, r6, [sp, #8]
900229a6:	4623      	mov	r3, r4
900229a8:	980d      	ldr	r0, [sp, #52]	@ 0x34
900229aa:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
900229ae:	f7ff fde7 	bl	90022580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
900229b2:	e75a      	b.n	9002286a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900229b4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900229b6:	ea4f 462b 	mov.w	r6, fp, asr #16
900229ba:	1428      	asrs	r0, r5, #16
900229bc:	f3cb 3303 	ubfx	r3, fp, #12, #4
900229c0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
900229c4:	f3c5 3103 	ubfx	r1, r5, #12, #4
900229c8:	fb02 6000 	mla	r0, r2, r0, r6
900229cc:	9e08      	ldr	r6, [sp, #32]
900229ce:	f816 8000 	ldrb.w	r8, [r6, r0]
900229d2:	1837      	adds	r7, r6, r0
900229d4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
900229d8:	eb04 0c08 	add.w	ip, r4, r8
900229dc:	2b00      	cmp	r3, #0
900229de:	d060      	beq.n	90022aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
900229e0:	787e      	ldrb	r6, [r7, #1]
900229e2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900229e6:	4426      	add	r6, r4
900229e8:	2900      	cmp	r1, #0
900229ea:	d062      	beq.n	90022ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
900229ec:	18b8      	adds	r0, r7, r2
900229ee:	5cba      	ldrb	r2, [r7, r2]
900229f0:	7840      	ldrb	r0, [r0, #1]
900229f2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900229f6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900229fa:	4422      	add	r2, r4
900229fc:	4420      	add	r0, r4
900229fe:	b29b      	uxth	r3, r3
90022a00:	78b7      	ldrb	r7, [r6, #2]
90022a02:	b289      	uxth	r1, r1
90022a04:	f89c a002 	ldrb.w	sl, [ip, #2]
90022a08:	f89c c001 	ldrb.w	ip, [ip, #1]
90022a0c:	fb03 f901 	mul.w	r9, r3, r1
90022a10:	011b      	lsls	r3, r3, #4
90022a12:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022a16:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90022a1a:	eba3 0309 	sub.w	r3, r3, r9
90022a1e:	b289      	uxth	r1, r1
90022a20:	b29b      	uxth	r3, r3
90022a22:	ebae 0e01 	sub.w	lr, lr, r1
90022a26:	435f      	muls	r7, r3
90022a28:	fa1f fe8e 	uxth.w	lr, lr
90022a2c:	fb0e 770a 	mla	r7, lr, sl, r7
90022a30:	f892 a002 	ldrb.w	sl, [r2, #2]
90022a34:	fb01 770a 	mla	r7, r1, sl, r7
90022a38:	f890 a002 	ldrb.w	sl, [r0, #2]
90022a3c:	fb09 7a0a 	mla	sl, r9, sl, r7
90022a40:	f814 7008 	ldrb.w	r7, [r4, r8]
90022a44:	f896 8000 	ldrb.w	r8, [r6]
90022a48:	7876      	ldrb	r6, [r6, #1]
90022a4a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90022a4e:	fb03 f808 	mul.w	r8, r3, r8
90022a52:	4373      	muls	r3, r6
90022a54:	7856      	ldrb	r6, [r2, #1]
90022a56:	fb0e 8807 	mla	r8, lr, r7, r8
90022a5a:	7817      	ldrb	r7, [r2, #0]
90022a5c:	fb0e 330c 	mla	r3, lr, ip, r3
90022a60:	fb01 8807 	mla	r8, r1, r7, r8
90022a64:	7807      	ldrb	r7, [r0, #0]
90022a66:	fb01 3306 	mla	r3, r1, r6, r3
90022a6a:	fb09 8707 	mla	r7, r9, r7, r8
90022a6e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022a72:	ea47 070a 	orr.w	r7, r7, sl
90022a76:	f890 a001 	ldrb.w	sl, [r0, #1]
90022a7a:	fb09 3a0a 	mla	sl, r9, sl, r3
90022a7e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022a80:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90022a84:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90022a88:	ea47 070a 	orr.w	r7, r7, sl
90022a8c:	f823 7b02 	strh.w	r7, [r3], #2
90022a90:	930b      	str	r3, [sp, #44]	@ 0x2c
90022a92:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022a94:	449b      	add	fp, r3
90022a96:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022a98:	441d      	add	r5, r3
90022a9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022a9c:	3b01      	subs	r3, #1
90022a9e:	9309      	str	r3, [sp, #36]	@ 0x24
90022aa0:	e714      	b.n	900228cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90022aa2:	b149      	cbz	r1, 90022ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90022aa4:	5cba      	ldrb	r2, [r7, r2]
90022aa6:	4660      	mov	r0, ip
90022aa8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022aac:	4422      	add	r2, r4
90022aae:	4666      	mov	r6, ip
90022ab0:	e7a5      	b.n	900229fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90022ab2:	4660      	mov	r0, ip
90022ab4:	4662      	mov	r2, ip
90022ab6:	e7a2      	b.n	900229fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90022ab8:	4660      	mov	r0, ip
90022aba:	4662      	mov	r2, ip
90022abc:	e7f7      	b.n	90022aae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90022abe:	b00f      	add	sp, #60	@ 0x3c
90022ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022ac4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90022ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022ac8:	b085      	sub	sp, #20
90022aca:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
90022ace:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
90022ad2:	9102      	str	r1, [sp, #8]
90022ad4:	2c00      	cmp	r4, #0
90022ad6:	fb04 710c 	mla	r1, r4, ip, r7
90022ada:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
90022ade:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
90022ae2:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90022ae6:	eb02 0e01 	add.w	lr, r2, r1
90022aea:	f2c0 8122 	blt.w	90022d32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90022aee:	45a0      	cmp	r8, r4
90022af0:	f340 811f 	ble.w	90022d32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90022af4:	2f00      	cmp	r7, #0
90022af6:	f2c0 811a 	blt.w	90022d2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90022afa:	45bc      	cmp	ip, r7
90022afc:	f340 8117 	ble.w	90022d2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90022b00:	5c52      	ldrb	r2, [r2, r1]
90022b02:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90022b06:	1c7a      	adds	r2, r7, #1
90022b08:	f100 8116 	bmi.w	90022d38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90022b0c:	4594      	cmp	ip, r2
90022b0e:	f340 8113 	ble.w	90022d38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90022b12:	2e00      	cmp	r6, #0
90022b14:	f000 8112 	beq.w	90022d3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90022b18:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022b1c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90022b20:	3401      	adds	r4, #1
90022b22:	f100 810f 	bmi.w	90022d44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90022b26:	45a0      	cmp	r8, r4
90022b28:	f340 810c 	ble.w	90022d44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90022b2c:	2800      	cmp	r0, #0
90022b2e:	f000 810c 	beq.w	90022d4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90022b32:	2f00      	cmp	r7, #0
90022b34:	f2c0 8104 	blt.w	90022d40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90022b38:	45bc      	cmp	ip, r7
90022b3a:	f340 8101 	ble.w	90022d40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90022b3e:	f81e 200c 	ldrb.w	r2, [lr, ip]
90022b42:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90022b46:	3701      	adds	r7, #1
90022b48:	f100 8102 	bmi.w	90022d50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90022b4c:	45bc      	cmp	ip, r7
90022b4e:	f340 80ff 	ble.w	90022d50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90022b52:	2e00      	cmp	r6, #0
90022b54:	f000 80fe 	beq.w	90022d54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90022b58:	44f4      	add	ip, lr
90022b5a:	f89c 2001 	ldrb.w	r2, [ip, #1]
90022b5e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90022b62:	b2b6      	uxth	r6, r6
90022b64:	b280      	uxth	r0, r0
90022b66:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90022b6a:	fb00 fe06 	mul.w	lr, r0, r6
90022b6e:	0136      	lsls	r6, r6, #4
90022b70:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90022b74:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90022b78:	eba6 070e 	sub.w	r7, r6, lr
90022b7c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90022b80:	ea4f 6914 	mov.w	r9, r4, lsr #24
90022b84:	b280      	uxth	r0, r0
90022b86:	b2bf      	uxth	r7, r7
90022b88:	1a1b      	subs	r3, r3, r0
90022b8a:	ea4f 6812 	mov.w	r8, r2, lsr #24
90022b8e:	fb0a f607 	mul.w	r6, sl, r7
90022b92:	b29b      	uxth	r3, r3
90022b94:	fb0b 6603 	mla	r6, fp, r3, r6
90022b98:	fb00 6609 	mla	r6, r0, r9, r6
90022b9c:	fb0e 6608 	mla	r6, lr, r8, r6
90022ba0:	f3c6 2607 	ubfx	r6, r6, #8, #8
90022ba4:	9600      	str	r6, [sp, #0]
90022ba6:	2e00      	cmp	r6, #0
90022ba8:	f000 80be 	beq.w	90022d28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
90022bac:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90022bb0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90022bb4:	9e02      	ldr	r6, [sp, #8]
90022bb6:	fb0b fc0c 	mul.w	ip, fp, ip
90022bba:	fb0b f505 	mul.w	r5, fp, r5
90022bbe:	8836      	ldrh	r6, [r6, #0]
90022bc0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90022bc4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90022bc8:	9501      	str	r5, [sp, #4]
90022bca:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90022bce:	44dc      	add	ip, fp
90022bd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022bd4:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90022bd8:	9503      	str	r5, [sp, #12]
90022bda:	9d01      	ldr	r5, [sp, #4]
90022bdc:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90022be0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90022be4:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90022be8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90022bec:	fb0a fc0c 	mul.w	ip, sl, ip
90022bf0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90022bf4:	fb0a fa01 	mul.w	sl, sl, r1
90022bf8:	ea4f 251c 	mov.w	r5, ip, lsr #8
90022bfc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90022c00:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90022c04:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90022c08:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90022c0c:	4465      	add	r5, ip
90022c0e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90022c12:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90022c16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022c1a:	fb09 fc0c 	mul.w	ip, r9, ip
90022c1e:	0a2d      	lsrs	r5, r5, #8
90022c20:	fb09 f904 	mul.w	r9, r9, r4
90022c24:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022c28:	ea4f 211c 	mov.w	r1, ip, lsr #8
90022c2c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90022c30:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90022c34:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90022c38:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90022c3c:	437d      	muls	r5, r7
90022c3e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90022c42:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90022c46:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90022c4a:	4461      	add	r1, ip
90022c4c:	fb08 f404 	mul.w	r4, r8, r4
90022c50:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022c54:	fb08 f802 	mul.w	r8, r8, r2
90022c58:	0a09      	lsrs	r1, r1, #8
90022c5a:	0a22      	lsrs	r2, r4, #8
90022c5c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90022c60:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90022c64:	fb07 f70a 	mul.w	r7, r7, sl
90022c68:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90022c6c:	4414      	add	r4, r2
90022c6e:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90022c72:	0a24      	lsrs	r4, r4, #8
90022c74:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90022c78:	9a03      	ldr	r2, [sp, #12]
90022c7a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90022c7e:	fb02 5503 	mla	r5, r2, r3, r5
90022c82:	ea4f 2818 	mov.w	r8, r8, lsr #8
90022c86:	9a00      	ldr	r2, [sp, #0]
90022c88:	fb04 540e 	mla	r4, r4, lr, r5
90022c8c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90022c90:	1235      	asrs	r5, r6, #8
90022c92:	fb01 4100 	mla	r1, r1, r0, r4
90022c96:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90022c9a:	0a09      	lsrs	r1, r1, #8
90022c9c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90022ca0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90022ca4:	fb03 7101 	mla	r1, r3, r1, r7
90022ca8:	fb0e 1e08 	mla	lr, lr, r8, r1
90022cac:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90022cb0:	fb00 e101 	mla	r1, r0, r1, lr
90022cb4:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90022cb8:	b287      	uxth	r7, r0
90022cba:	0a09      	lsrs	r1, r1, #8
90022cbc:	437a      	muls	r2, r7
90022cbe:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90022cc2:	1c53      	adds	r3, r2, #1
90022cc4:	4321      	orrs	r1, r4
90022cc6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022cca:	0c0a      	lsrs	r2, r1, #16
90022ccc:	f3c1 2407 	ubfx	r4, r1, #8, #8
90022cd0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90022cd4:	b2c8      	uxtb	r0, r1
90022cd6:	fb12 f207 	smulbb	r2, r2, r7
90022cda:	fb14 f407 	smulbb	r4, r4, r7
90022cde:	b2db      	uxtb	r3, r3
90022ce0:	fb10 f007 	smulbb	r0, r0, r7
90022ce4:	fb05 2503 	mla	r5, r5, r3, r2
90022ce8:	10f2      	asrs	r2, r6, #3
90022cea:	00f6      	lsls	r6, r6, #3
90022cec:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90022cf0:	b2ad      	uxth	r5, r5
90022cf2:	b2f6      	uxtb	r6, r6
90022cf4:	fb02 4203 	mla	r2, r2, r3, r4
90022cf8:	fb06 0303 	mla	r3, r6, r3, r0
90022cfc:	b294      	uxth	r4, r2
90022cfe:	b299      	uxth	r1, r3
90022d00:	1c6b      	adds	r3, r5, #1
90022d02:	1c62      	adds	r2, r4, #1
90022d04:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022d08:	1c4b      	adds	r3, r1, #1
90022d0a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90022d0e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90022d12:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90022d16:	0952      	lsrs	r2, r2, #5
90022d18:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022d1c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022d20:	432b      	orrs	r3, r5
90022d22:	4313      	orrs	r3, r2
90022d24:	9a02      	ldr	r2, [sp, #8]
90022d26:	8013      	strh	r3, [r2, #0]
90022d28:	b005      	add	sp, #20
90022d2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022d2e:	2500      	movs	r5, #0
90022d30:	e6e9      	b.n	90022b06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90022d32:	2100      	movs	r1, #0
90022d34:	460d      	mov	r5, r1
90022d36:	e6f3      	b.n	90022b20 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90022d38:	2100      	movs	r1, #0
90022d3a:	e6f1      	b.n	90022b20 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90022d3c:	4631      	mov	r1, r6
90022d3e:	e6ef      	b.n	90022b20 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90022d40:	2400      	movs	r4, #0
90022d42:	e700      	b.n	90022b46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90022d44:	2200      	movs	r2, #0
90022d46:	4614      	mov	r4, r2
90022d48:	e70b      	b.n	90022b62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90022d4a:	4602      	mov	r2, r0
90022d4c:	4604      	mov	r4, r0
90022d4e:	e708      	b.n	90022b62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90022d50:	2200      	movs	r2, #0
90022d52:	e706      	b.n	90022b62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90022d54:	4632      	mov	r2, r6
90022d56:	e704      	b.n	90022b62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90022d58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022d58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022d5c:	b09f      	sub	sp, #124	@ 0x7c
90022d5e:	921b      	str	r2, [sp, #108]	@ 0x6c
90022d60:	9309      	str	r3, [sp, #36]	@ 0x24
90022d62:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90022d64:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
90022d68:	901d      	str	r0, [sp, #116]	@ 0x74
90022d6a:	931c      	str	r3, [sp, #112]	@ 0x70
90022d6c:	6850      	ldr	r0, [r2, #4]
90022d6e:	9119      	str	r1, [sp, #100]	@ 0x64
90022d70:	6812      	ldr	r2, [r2, #0]
90022d72:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90022d74:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
90022d78:	fb00 1303 	mla	r3, r0, r3, r1
90022d7c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022d80:	930c      	str	r3, [sp, #48]	@ 0x30
90022d82:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90022d84:	681b      	ldr	r3, [r3, #0]
90022d86:	9312      	str	r3, [sp, #72]	@ 0x48
90022d88:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90022d8a:	685e      	ldr	r6, [r3, #4]
90022d8c:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
90022d90:	3604      	adds	r6, #4
90022d92:	930d      	str	r3, [sp, #52]	@ 0x34
90022d94:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90022d96:	2b00      	cmp	r3, #0
90022d98:	dc03      	bgt.n	90022da2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90022d9a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022d9c:	2b00      	cmp	r3, #0
90022d9e:	f340 8387 	ble.w	900234b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90022da2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90022da4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022da8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022dac:	1e48      	subs	r0, r1, #1
90022dae:	1e57      	subs	r7, r2, #1
90022db0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022db2:	2b00      	cmp	r3, #0
90022db4:	f340 8194 	ble.w	900230e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90022db8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90022dba:	142b      	asrs	r3, r5, #16
90022dbc:	ea5f 4c24 	movs.w	ip, r4, asr #16
90022dc0:	d406      	bmi.n	90022dd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90022dc2:	4584      	cmp	ip, r0
90022dc4:	da04      	bge.n	90022dd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90022dc6:	2b00      	cmp	r3, #0
90022dc8:	db02      	blt.n	90022dd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90022dca:	42bb      	cmp	r3, r7
90022dcc:	f2c0 8189 	blt.w	900230e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022dd0:	f11c 0c01 	adds.w	ip, ip, #1
90022dd4:	f100 8177 	bmi.w	900230c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90022dd8:	4561      	cmp	r1, ip
90022dda:	f2c0 8174 	blt.w	900230c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90022dde:	3301      	adds	r3, #1
90022de0:	f100 8171 	bmi.w	900230c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90022de4:	429a      	cmp	r2, r3
90022de6:	f2c0 816e 	blt.w	900230c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90022dea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022dec:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
90022dee:	931a      	str	r3, [sp, #104]	@ 0x68
90022df0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90022df2:	2b00      	cmp	r3, #0
90022df4:	f340 8193 	ble.w	9002311e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
90022df8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90022dfa:	ea4f 4c25 	mov.w	ip, r5, asr #16
90022dfe:	f3c5 3103 	ubfx	r1, r5, #12, #4
90022e02:	f3c3 3203 	ubfx	r2, r3, #12, #4
90022e06:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90022e08:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90022e0c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90022e0e:	141b      	asrs	r3, r3, #16
90022e10:	f100 81d6 	bmi.w	900231c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90022e14:	f100 38ff 	add.w	r8, r0, #4294967295
90022e18:	4543      	cmp	r3, r8
90022e1a:	f280 81d1 	bge.w	900231c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90022e1e:	f1bc 0f00 	cmp.w	ip, #0
90022e22:	f2c0 81cd 	blt.w	900231c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90022e26:	f10e 38ff 	add.w	r8, lr, #4294967295
90022e2a:	45c4      	cmp	ip, r8
90022e2c:	f280 81c8 	bge.w	900231c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90022e30:	b200      	sxth	r0, r0
90022e32:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90022e34:	fb0c 3300 	mla	r3, ip, r0, r3
90022e38:	eb04 0803 	add.w	r8, r4, r3
90022e3c:	5ce3      	ldrb	r3, [r4, r3]
90022e3e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90022e42:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90022e46:	2a00      	cmp	r2, #0
90022e48:	f000 81af 	beq.w	900231aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022e4c:	f898 c001 	ldrb.w	ip, [r8, #1]
90022e50:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90022e54:	940e      	str	r4, [sp, #56]	@ 0x38
90022e56:	0e24      	lsrs	r4, r4, #24
90022e58:	9415      	str	r4, [sp, #84]	@ 0x54
90022e5a:	b179      	cbz	r1, 90022e7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90022e5c:	eb08 0c00 	add.w	ip, r8, r0
90022e60:	f818 0000 	ldrb.w	r0, [r8, r0]
90022e64:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90022e68:	900a      	str	r0, [sp, #40]	@ 0x28
90022e6a:	0e00      	lsrs	r0, r0, #24
90022e6c:	9013      	str	r0, [sp, #76]	@ 0x4c
90022e6e:	f89c 0001 	ldrb.w	r0, [ip, #1]
90022e72:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90022e76:	900f      	str	r0, [sp, #60]	@ 0x3c
90022e78:	0e00      	lsrs	r0, r0, #24
90022e7a:	9016      	str	r0, [sp, #88]	@ 0x58
90022e7c:	b292      	uxth	r2, r2
90022e7e:	9815      	ldr	r0, [sp, #84]	@ 0x54
90022e80:	b289      	uxth	r1, r1
90022e82:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022e84:	fb02 f901 	mul.w	r9, r2, r1
90022e88:	0112      	lsls	r2, r2, #4
90022e8a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022e8e:	eba2 0809 	sub.w	r8, r2, r9
90022e92:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90022e96:	b289      	uxth	r1, r1
90022e98:	fa1f f888 	uxth.w	r8, r8
90022e9c:	1a52      	subs	r2, r2, r1
90022e9e:	fb08 f000 	mul.w	r0, r8, r0
90022ea2:	b292      	uxth	r2, r2
90022ea4:	fb02 000e 	mla	r0, r2, lr, r0
90022ea8:	fb01 0004 	mla	r0, r1, r4, r0
90022eac:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90022eae:	fb09 0004 	mla	r0, r9, r4, r0
90022eb2:	f3c0 2007 	ubfx	r0, r0, #8, #8
90022eb6:	2800      	cmp	r0, #0
90022eb8:	f000 80fa 	beq.w	900230b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022ebc:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90022ec0:	d01b      	beq.n	90022efa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90022ec2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90022ec6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90022eca:	fb0e fa0a 	mul.w	sl, lr, sl
90022ece:	fb0e fe03 	mul.w	lr, lr, r3
90022ed2:	ea4f 231a 	mov.w	r3, sl, lsr #8
90022ed6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90022eda:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90022ede:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90022ee2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90022ee6:	4453      	add	r3, sl
90022ee8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022eec:	0a1b      	lsrs	r3, r3, #8
90022eee:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90022ef2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90022ef6:	ea43 030c 	orr.w	r3, r3, ip
90022efa:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90022efc:	2cff      	cmp	r4, #255	@ 0xff
90022efe:	d021      	beq.n	90022f44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90022f00:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90022f02:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90022f06:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90022f08:	fb04 fb0b 	mul.w	fp, r4, fp
90022f0c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90022f0e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022f12:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90022f14:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90022f18:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90022f1c:	fb04 fa0a 	mul.w	sl, r4, sl
90022f20:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022f24:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90022f28:	44de      	add	lr, fp
90022f2a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90022f2e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022f32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022f36:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022f3a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022f3e:	ea4e 040a 	orr.w	r4, lr, sl
90022f42:	940e      	str	r4, [sp, #56]	@ 0x38
90022f44:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022f46:	2cff      	cmp	r4, #255	@ 0xff
90022f48:	d021      	beq.n	90022f8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90022f4a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022f4c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90022f50:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022f52:	fb04 fb0b 	mul.w	fp, r4, fp
90022f56:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022f58:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022f5c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022f5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90022f62:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90022f66:	fb04 fa0a 	mul.w	sl, r4, sl
90022f6a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022f6e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90022f72:	44de      	add	lr, fp
90022f74:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90022f78:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022f7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022f80:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022f84:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022f88:	ea4e 040a 	orr.w	r4, lr, sl
90022f8c:	940a      	str	r4, [sp, #40]	@ 0x28
90022f8e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90022f90:	2cff      	cmp	r4, #255	@ 0xff
90022f92:	d021      	beq.n	90022fd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90022f94:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90022f96:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90022f9a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90022f9c:	fb04 fb0b 	mul.w	fp, r4, fp
90022fa0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90022fa2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022fa6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90022fa8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90022fac:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90022fb0:	fb04 fa0a 	mul.w	sl, r4, sl
90022fb4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022fb8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90022fbc:	44de      	add	lr, fp
90022fbe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90022fc2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022fc6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022fca:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022fce:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022fd2:	ea4e 040a 	orr.w	r4, lr, sl
90022fd6:	940f      	str	r4, [sp, #60]	@ 0x3c
90022fd8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90022fda:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90022fde:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90022fe2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90022fe6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022fe8:	fb08 fc0c 	mul.w	ip, r8, ip
90022fec:	fb02 cc0e 	mla	ip, r2, lr, ip
90022ff0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90022ff4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90022ff6:	fb01 cc0e 	mla	ip, r1, lr, ip
90022ffa:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90022ffe:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023000:	fb09 cc0e 	mla	ip, r9, lr, ip
90023004:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90023008:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002300a:	fb08 f80e 	mul.w	r8, r8, lr
9002300e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023012:	fb02 8303 	mla	r3, r2, r3, r8
90023016:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90023018:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002301c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90023020:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90023022:	fb01 330a 	mla	r3, r1, sl, r3
90023026:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
9002302a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9002302c:	fb09 3901 	mla	r9, r9, r1, r3
90023030:	883b      	ldrh	r3, [r7, #0]
90023032:	4342      	muls	r2, r0
90023034:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023038:	1c50      	adds	r0, r2, #1
9002303a:	1219      	asrs	r1, r3, #8
9002303c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90023040:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90023044:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90023048:	ea4c 0c09 	orr.w	ip, ip, r9
9002304c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90023050:	ea4f 421c 	mov.w	r2, ip, lsr #16
90023054:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90023058:	b2c0      	uxtb	r0, r0
9002305a:	fb12 f204 	smulbb	r2, r2, r4
9002305e:	fa5f fc8c 	uxtb.w	ip, ip
90023062:	fb1e fe04 	smulbb	lr, lr, r4
90023066:	fb01 2100 	mla	r1, r1, r0, r2
9002306a:	10da      	asrs	r2, r3, #3
9002306c:	fb1c fc04 	smulbb	ip, ip, r4
90023070:	00db      	lsls	r3, r3, #3
90023072:	b289      	uxth	r1, r1
90023074:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90023078:	b2db      	uxtb	r3, r3
9002307a:	fb02 e200 	mla	r2, r2, r0, lr
9002307e:	fb03 c300 	mla	r3, r3, r0, ip
90023082:	b292      	uxth	r2, r2
90023084:	fa1f fc83 	uxth.w	ip, r3
90023088:	1c4b      	adds	r3, r1, #1
9002308a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002308e:	f10c 0301 	add.w	r3, ip, #1
90023092:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90023096:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002309a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002309e:	430b      	orrs	r3, r1
900230a0:	1c51      	adds	r1, r2, #1
900230a2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900230a6:	0952      	lsrs	r2, r2, #5
900230a8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900230ac:	4313      	orrs	r3, r2
900230ae:	803b      	strh	r3, [r7, #0]
900230b0:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
900230b2:	3702      	adds	r7, #2
900230b4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900230b6:	441a      	add	r2, r3
900230b8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900230ba:	441d      	add	r5, r3
900230bc:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900230be:	9229      	str	r2, [sp, #164]	@ 0xa4
900230c0:	3b01      	subs	r3, #1
900230c2:	931a      	str	r3, [sp, #104]	@ 0x68
900230c4:	e694      	b.n	90022df0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900230c6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
900230c8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900230ca:	441c      	add	r4, r3
900230cc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900230ce:	441d      	add	r5, r3
900230d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900230d2:	9429      	str	r4, [sp, #164]	@ 0xa4
900230d4:	3b01      	subs	r3, #1
900230d6:	9309      	str	r3, [sp, #36]	@ 0x24
900230d8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900230da:	3302      	adds	r3, #2
900230dc:	930c      	str	r3, [sp, #48]	@ 0x30
900230de:	e667      	b.n	90022db0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900230e0:	d024      	beq.n	9002312c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
900230e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900230e4:	982b      	ldr	r0, [sp, #172]	@ 0xac
900230e6:	3b01      	subs	r3, #1
900230e8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900230ea:	fb00 4003 	mla	r0, r0, r3, r4
900230ee:	1400      	asrs	r0, r0, #16
900230f0:	f53f ae7b 	bmi.w	90022dea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900230f4:	3901      	subs	r1, #1
900230f6:	4288      	cmp	r0, r1
900230f8:	f6bf ae77 	bge.w	90022dea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900230fc:	992c      	ldr	r1, [sp, #176]	@ 0xb0
900230fe:	fb01 5303 	mla	r3, r1, r3, r5
90023102:	141b      	asrs	r3, r3, #16
90023104:	f53f ae71 	bmi.w	90022dea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023108:	3a01      	subs	r2, #1
9002310a:	4293      	cmp	r3, r2
9002310c:	f6bf ae6d 	bge.w	90022dea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023110:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90023114:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
90023118:	f1bb 0f00 	cmp.w	fp, #0
9002311c:	dc70      	bgt.n	90023200 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
9002311e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023120:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023124:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023126:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002312a:	930c      	str	r3, [sp, #48]	@ 0x30
9002312c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002312e:	2b00      	cmp	r3, #0
90023130:	f340 81be 	ble.w	900234b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90023134:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90023138:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002313a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002313e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023142:	eef0 6a62 	vmov.f32	s13, s5
90023146:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002314a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002314e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023152:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
90023156:	eef0 6a43 	vmov.f32	s13, s6
9002315a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002315e:	ee16 5a90 	vmov	r5, s13
90023162:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023166:	ee61 7a27 	vmul.f32	s15, s2, s15
9002316a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002316e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023172:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023176:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002317a:	ee12 2a90 	vmov	r2, s5
9002317e:	eef0 2a47 	vmov.f32	s5, s14
90023182:	fb92 f3f3 	sdiv	r3, r2, r3
90023186:	ee13 2a10 	vmov	r2, s6
9002318a:	932b      	str	r3, [sp, #172]	@ 0xac
9002318c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002318e:	eeb0 3a67 	vmov.f32	s6, s15
90023192:	fb92 f3f3 	sdiv	r3, r2, r3
90023196:	932c      	str	r3, [sp, #176]	@ 0xb0
90023198:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002319a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
9002319c:	3b01      	subs	r3, #1
9002319e:	9319      	str	r3, [sp, #100]	@ 0x64
900231a0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900231a2:	bf08      	it	eq
900231a4:	4613      	moveq	r3, r2
900231a6:	9309      	str	r3, [sp, #36]	@ 0x24
900231a8:	e5f4      	b.n	90022d94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900231aa:	2900      	cmp	r1, #0
900231ac:	f43f ae66 	beq.w	90022e7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900231b0:	f818 0000 	ldrb.w	r0, [r8, r0]
900231b4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900231b8:	900a      	str	r0, [sp, #40]	@ 0x28
900231ba:	0e00      	lsrs	r0, r0, #24
900231bc:	9013      	str	r0, [sp, #76]	@ 0x4c
900231be:	e65d      	b.n	90022e7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900231c0:	f113 0801 	adds.w	r8, r3, #1
900231c4:	f53f af74 	bmi.w	900230b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900231c8:	4540      	cmp	r0, r8
900231ca:	f6ff af71 	blt.w	900230b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900231ce:	f11c 0801 	adds.w	r8, ip, #1
900231d2:	f53f af6d 	bmi.w	900230b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900231d6:	45c6      	cmp	lr, r8
900231d8:	f6ff af6a 	blt.w	900230b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900231dc:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
900231de:	b200      	sxth	r0, r0
900231e0:	9302      	str	r3, [sp, #8]
900231e2:	fa0f f38e 	sxth.w	r3, lr
900231e6:	9000      	str	r0, [sp, #0]
900231e8:	9301      	str	r3, [sp, #4]
900231ea:	4633      	mov	r3, r6
900231ec:	981d      	ldr	r0, [sp, #116]	@ 0x74
900231ee:	e9cd 1405 	strd	r1, r4, [sp, #20]
900231f2:	e9cd c203 	strd	ip, r2, [sp, #12]
900231f6:	4639      	mov	r1, r7
900231f8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900231fa:	f7ff fc63 	bl	90022ac4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
900231fe:	e757      	b.n	900230b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023200:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90023202:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023206:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90023208:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002320c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
9002320e:	1427      	asrs	r7, r4, #16
90023210:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90023212:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023216:	142b      	asrs	r3, r5, #16
90023218:	fb01 7303 	mla	r3, r1, r3, r7
9002321c:	18e7      	adds	r7, r4, r3
9002321e:	5ce3      	ldrb	r3, [r4, r3]
90023220:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023224:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023228:	2a00      	cmp	r2, #0
9002322a:	f000 8137 	beq.w	9002349c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
9002322e:	f897 e001 	ldrb.w	lr, [r7, #1]
90023232:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90023236:	9410      	str	r4, [sp, #64]	@ 0x40
90023238:	0e24      	lsrs	r4, r4, #24
9002323a:	9417      	str	r4, [sp, #92]	@ 0x5c
9002323c:	b170      	cbz	r0, 9002325c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9002323e:	eb07 0e01 	add.w	lr, r7, r1
90023242:	5c79      	ldrb	r1, [r7, r1]
90023244:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023248:	910b      	str	r1, [sp, #44]	@ 0x2c
9002324a:	0e09      	lsrs	r1, r1, #24
9002324c:	9114      	str	r1, [sp, #80]	@ 0x50
9002324e:	f89e 1001 	ldrb.w	r1, [lr, #1]
90023252:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023256:	9111      	str	r1, [sp, #68]	@ 0x44
90023258:	0e09      	lsrs	r1, r1, #24
9002325a:	9118      	str	r1, [sp, #96]	@ 0x60
9002325c:	b292      	uxth	r2, r2
9002325e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90023260:	b280      	uxth	r0, r0
90023262:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023264:	fb02 f800 	mul.w	r8, r2, r0
90023268:	0112      	lsls	r2, r2, #4
9002326a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
9002326e:	eba2 0e08 	sub.w	lr, r2, r8
90023272:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90023276:	b280      	uxth	r0, r0
90023278:	fa1f fe8e 	uxth.w	lr, lr
9002327c:	1a12      	subs	r2, r2, r0
9002327e:	fb0e f101 	mul.w	r1, lr, r1
90023282:	b292      	uxth	r2, r2
90023284:	fb02 110c 	mla	r1, r2, ip, r1
90023288:	fb00 1104 	mla	r1, r0, r4, r1
9002328c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
9002328e:	fb08 1104 	mla	r1, r8, r4, r1
90023292:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023296:	2900      	cmp	r1, #0
90023298:	f000 80f5 	beq.w	90023486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
9002329c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900232a0:	d019      	beq.n	900232d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
900232a2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900232a6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900232aa:	fb0c fa0a 	mul.w	sl, ip, sl
900232ae:	fb0c fc03 	mul.w	ip, ip, r3
900232b2:	ea4f 231a 	mov.w	r3, sl, lsr #8
900232b6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900232ba:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900232be:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900232c2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900232c6:	4453      	add	r3, sl
900232c8:	0a3f      	lsrs	r7, r7, #8
900232ca:	0a1b      	lsrs	r3, r3, #8
900232cc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900232d0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900232d4:	433b      	orrs	r3, r7
900232d6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900232d8:	2cff      	cmp	r4, #255	@ 0xff
900232da:	d020      	beq.n	9002331e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
900232dc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900232de:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900232e2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900232e4:	4367      	muls	r7, r4
900232e6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900232e8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900232ec:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900232f0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900232f2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900232f6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900232fa:	fb04 fa0a 	mul.w	sl, r4, sl
900232fe:	44bc      	add	ip, r7
90023300:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023304:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023308:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002330c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023310:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023314:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023318:	ea4c 040a 	orr.w	r4, ip, sl
9002331c:	9410      	str	r4, [sp, #64]	@ 0x40
9002331e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023320:	2cff      	cmp	r4, #255	@ 0xff
90023322:	d020      	beq.n	90023366 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90023324:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023326:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002332a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002332c:	4367      	muls	r7, r4
9002332e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023330:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023334:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023338:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002333a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002333e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023342:	fb04 fa0a 	mul.w	sl, r4, sl
90023346:	44bc      	add	ip, r7
90023348:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002334c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023350:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023354:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023358:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002335c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023360:	ea4c 040a 	orr.w	r4, ip, sl
90023364:	940b      	str	r4, [sp, #44]	@ 0x2c
90023366:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023368:	2cff      	cmp	r4, #255	@ 0xff
9002336a:	d020      	beq.n	900233ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
9002336c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9002336e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023372:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023374:	4367      	muls	r7, r4
90023376:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023378:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002337c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023380:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90023382:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023386:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002338a:	fb04 fa0a 	mul.w	sl, r4, sl
9002338e:	44bc      	add	ip, r7
90023390:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023394:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023398:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002339c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900233a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900233a4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900233a8:	ea4c 040a 	orr.w	r4, ip, sl
900233ac:	9411      	str	r4, [sp, #68]	@ 0x44
900233ae:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900233b0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900233b4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900233b8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900233bc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900233be:	fb0e f707 	mul.w	r7, lr, r7
900233c2:	fb02 770c 	mla	r7, r2, ip, r7
900233c6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900233ca:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900233cc:	fb00 770c 	mla	r7, r0, ip, r7
900233d0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900233d4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900233d6:	fb08 770c 	mla	r7, r8, ip, r7
900233da:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
900233de:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900233e0:	fb0e fe0c 	mul.w	lr, lr, ip
900233e4:	0a3f      	lsrs	r7, r7, #8
900233e6:	fb02 e303 	mla	r3, r2, r3, lr
900233ea:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900233ec:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900233f0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900233f4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900233f6:	fb00 330a 	mla	r3, r0, sl, r3
900233fa:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
900233fe:	f8b9 0000 	ldrh.w	r0, [r9]
90023402:	fb08 3c0c 	mla	ip, r8, ip, r3
90023406:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90023408:	1202      	asrs	r2, r0, #8
9002340a:	434b      	muls	r3, r1
9002340c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023410:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90023414:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90023418:	1c59      	adds	r1, r3, #1
9002341a:	ea47 070c 	orr.w	r7, r7, ip
9002341e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90023422:	0c3b      	lsrs	r3, r7, #16
90023424:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90023428:	f3c7 2c07 	ubfx	ip, r7, #8, #8
9002342c:	b2ff      	uxtb	r7, r7
9002342e:	fb13 f304 	smulbb	r3, r3, r4
90023432:	b2c9      	uxtb	r1, r1
90023434:	fb1c fc04 	smulbb	ip, ip, r4
90023438:	fb02 3201 	mla	r2, r2, r1, r3
9002343c:	10c3      	asrs	r3, r0, #3
9002343e:	fb17 f704 	smulbb	r7, r7, r4
90023442:	00c0      	lsls	r0, r0, #3
90023444:	b292      	uxth	r2, r2
90023446:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002344a:	b2c0      	uxtb	r0, r0
9002344c:	fb03 c301 	mla	r3, r3, r1, ip
90023450:	f102 0c01 	add.w	ip, r2, #1
90023454:	fb00 7001 	mla	r0, r0, r1, r7
90023458:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
9002345c:	b280      	uxth	r0, r0
9002345e:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
90023462:	b29b      	uxth	r3, r3
90023464:	1c42      	adds	r2, r0, #1
90023466:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9002346a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002346e:	ea42 020c 	orr.w	r2, r2, ip
90023472:	f103 0c01 	add.w	ip, r3, #1
90023476:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9002347a:	095b      	lsrs	r3, r3, #5
9002347c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023480:	431a      	orrs	r2, r3
90023482:	f8a9 2000 	strh.w	r2, [r9]
90023486:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90023488:	f109 0902 	add.w	r9, r9, #2
9002348c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9002348e:	f10b 3bff 	add.w	fp, fp, #4294967295
90023492:	441a      	add	r2, r3
90023494:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023496:	9229      	str	r2, [sp, #164]	@ 0xa4
90023498:	441d      	add	r5, r3
9002349a:	e63d      	b.n	90023118 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
9002349c:	2800      	cmp	r0, #0
9002349e:	f43f aedd 	beq.w	9002325c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900234a2:	5c79      	ldrb	r1, [r7, r1]
900234a4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900234a8:	910b      	str	r1, [sp, #44]	@ 0x2c
900234aa:	0e09      	lsrs	r1, r1, #24
900234ac:	9114      	str	r1, [sp, #80]	@ 0x50
900234ae:	e6d5      	b.n	9002325c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900234b0:	b01f      	add	sp, #124	@ 0x7c
900234b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900234b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
900234b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900234ba:	b089      	sub	sp, #36	@ 0x24
900234bc:	9101      	str	r1, [sp, #4]
900234be:	9801      	ldr	r0, [sp, #4]
900234c0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
900234c4:	8800      	ldrh	r0, [r0, #0]
900234c6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
900234ca:	1206      	asrs	r6, r0, #8
900234cc:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
900234d0:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
900234d4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900234d8:	9602      	str	r6, [sp, #8]
900234da:	10c6      	asrs	r6, r0, #3
900234dc:	00c0      	lsls	r0, r0, #3
900234de:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900234e2:	b2c0      	uxtb	r0, r0
900234e4:	9603      	str	r6, [sp, #12]
900234e6:	9004      	str	r0, [sp, #16]
900234e8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
900234ec:	fb07 100c 	mla	r0, r7, ip, r1
900234f0:	2f00      	cmp	r7, #0
900234f2:	eb02 0e00 	add.w	lr, r2, r0
900234f6:	f2c0 810a 	blt.w	9002370e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900234fa:	45b8      	cmp	r8, r7
900234fc:	f340 8107 	ble.w	9002370e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90023500:	2900      	cmp	r1, #0
90023502:	f2c0 8102 	blt.w	9002370a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90023506:	458c      	cmp	ip, r1
90023508:	f340 80ff 	ble.w	9002370a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
9002350c:	5c12      	ldrb	r2, [r2, r0]
9002350e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90023512:	1c4a      	adds	r2, r1, #1
90023514:	f100 80fe 	bmi.w	90023714 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90023518:	4594      	cmp	ip, r2
9002351a:	f340 80fb 	ble.w	90023714 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
9002351e:	2d00      	cmp	r5, #0
90023520:	f000 80fa 	beq.w	90023718 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90023524:	f89e 2001 	ldrb.w	r2, [lr, #1]
90023528:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
9002352c:	3701      	adds	r7, #1
9002352e:	f100 80f7 	bmi.w	90023720 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90023532:	45b8      	cmp	r8, r7
90023534:	f340 80f4 	ble.w	90023720 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90023538:	2c00      	cmp	r4, #0
9002353a:	f000 80f4 	beq.w	90023726 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
9002353e:	2900      	cmp	r1, #0
90023540:	eb0e 020c 	add.w	r2, lr, ip
90023544:	f2c0 80ea 	blt.w	9002371c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90023548:	458c      	cmp	ip, r1
9002354a:	f340 80e7 	ble.w	9002371c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
9002354e:	f81e 700c 	ldrb.w	r7, [lr, ip]
90023552:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90023556:	3101      	adds	r1, #1
90023558:	f100 80e8 	bmi.w	9002372c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
9002355c:	458c      	cmp	ip, r1
9002355e:	f340 80e5 	ble.w	9002372c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90023562:	2d00      	cmp	r5, #0
90023564:	f000 80e4 	beq.w	90023730 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90023568:	7852      	ldrb	r2, [r2, #1]
9002356a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
9002356e:	0e0b      	lsrs	r3, r1, #24
90023570:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90023574:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90023578:	9300      	str	r3, [sp, #0]
9002357a:	b2a4      	uxth	r4, r4
9002357c:	b2ab      	uxth	r3, r5
9002357e:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
90023582:	ea4f 6b16 	mov.w	fp, r6, lsr #24
90023586:	fb03 f904 	mul.w	r9, r3, r4
9002358a:	011b      	lsls	r3, r3, #4
9002358c:	fb0a f505 	mul.w	r5, sl, r5
90023590:	ea4f 6817 	mov.w	r8, r7, lsr #24
90023594:	eba3 0e09 	sub.w	lr, r3, r9
90023598:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
9002359c:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
900235a0:	0a28      	lsrs	r0, r5, #8
900235a2:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
900235a6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900235aa:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900235ae:	fb0a f303 	mul.w	r3, sl, r3
900235b2:	fb08 f707 	mul.w	r7, r8, r7
900235b6:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
900235ba:	4405      	add	r5, r0
900235bc:	fb08 fc0c 	mul.w	ip, r8, ip
900235c0:	b2a4      	uxth	r4, r4
900235c2:	0a2d      	lsrs	r5, r5, #8
900235c4:	fa1f fe8e 	uxth.w	lr, lr
900235c8:	1b12      	subs	r2, r2, r4
900235ca:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
900235ce:	b292      	uxth	r2, r2
900235d0:	9005      	str	r0, [sp, #20]
900235d2:	f503 7080 	add.w	r0, r3, #256	@ 0x100
900235d6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900235da:	ea4f 201c 	mov.w	r0, ip, lsr #8
900235de:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900235e2:	0a1b      	lsrs	r3, r3, #8
900235e4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900235e8:	9306      	str	r3, [sp, #24]
900235ea:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
900235ee:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
900235f2:	4460      	add	r0, ip
900235f4:	fb0b f303 	mul.w	r3, fp, r3
900235f8:	fb0b f606 	mul.w	r6, fp, r6
900235fc:	0a00      	lsrs	r0, r0, #8
900235fe:	0a1d      	lsrs	r5, r3, #8
90023600:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
90023604:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90023608:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002360c:	441d      	add	r5, r3
9002360e:	f506 7380 	add.w	r3, r6, #256	@ 0x100
90023612:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90023616:	f507 7380 	add.w	r3, r7, #256	@ 0x100
9002361a:	0a2d      	lsrs	r5, r5, #8
9002361c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90023620:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
90023624:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023628:	0a36      	lsrs	r6, r6, #8
9002362a:	0a1b      	lsrs	r3, r3, #8
9002362c:	fb05 f50e 	mul.w	r5, r5, lr
90023630:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90023634:	9307      	str	r3, [sp, #28]
90023636:	0e0b      	lsrs	r3, r1, #24
90023638:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002363c:	fb0e f606 	mul.w	r6, lr, r6
90023640:	435f      	muls	r7, r3
90023642:	4359      	muls	r1, r3
90023644:	9b05      	ldr	r3, [sp, #20]
90023646:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002364a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002364e:	fb03 5502 	mla	r5, r3, r2, r5
90023652:	9b06      	ldr	r3, [sp, #24]
90023654:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023658:	fb0e fe0b 	mul.w	lr, lr, fp
9002365c:	44bc      	add	ip, r7
9002365e:	f501 7780 	add.w	r7, r1, #256	@ 0x100
90023662:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023666:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9002366a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002366e:	0a09      	lsrs	r1, r1, #8
90023670:	fb0c 5509 	mla	r5, ip, r9, r5
90023674:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90023678:	fb00 5504 	mla	r5, r0, r4, r5
9002367c:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
90023680:	9b07      	ldr	r3, [sp, #28]
90023682:	fb02 6000 	mla	r0, r2, r0, r6
90023686:	0a2d      	lsrs	r5, r5, #8
90023688:	fb02 e20a 	mla	r2, r2, sl, lr
9002368c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023690:	fb09 0001 	mla	r0, r9, r1, r0
90023694:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023698:	fb04 0003 	mla	r0, r4, r3, r0
9002369c:	9b00      	ldr	r3, [sp, #0]
9002369e:	fb04 2408 	mla	r4, r4, r8, r2
900236a2:	9a04      	ldr	r2, [sp, #16]
900236a4:	0a00      	lsrs	r0, r0, #8
900236a6:	fb09 4903 	mla	r9, r9, r3, r4
900236aa:	9b02      	ldr	r3, [sp, #8]
900236ac:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
900236b0:	ea6f 2929 	mvn.w	r9, r9, asr #8
900236b4:	4305      	orrs	r5, r0
900236b6:	fa5f f989 	uxtb.w	r9, r9
900236ba:	fb03 f109 	mul.w	r1, r3, r9
900236be:	9b03      	ldr	r3, [sp, #12]
900236c0:	fb03 f309 	mul.w	r3, r3, r9
900236c4:	fb02 f909 	mul.w	r9, r2, r9
900236c8:	1c4a      	adds	r2, r1, #1
900236ca:	1c58      	adds	r0, r3, #1
900236cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900236d0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900236d4:	0c2a      	lsrs	r2, r5, #16
900236d6:	0a2b      	lsrs	r3, r5, #8
900236d8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
900236dc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900236e0:	0212      	lsls	r2, r2, #8
900236e2:	00db      	lsls	r3, r3, #3
900236e4:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
900236e8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900236ec:	4313      	orrs	r3, r2
900236ee:	f109 0201 	add.w	r2, r9, #1
900236f2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
900236f6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
900236fa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900236fe:	431d      	orrs	r5, r3
90023700:	9b01      	ldr	r3, [sp, #4]
90023702:	801d      	strh	r5, [r3, #0]
90023704:	b009      	add	sp, #36	@ 0x24
90023706:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002370a:	2000      	movs	r0, #0
9002370c:	e701      	b.n	90023512 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
9002370e:	2600      	movs	r6, #0
90023710:	4630      	mov	r0, r6
90023712:	e70b      	b.n	9002352c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023714:	2600      	movs	r6, #0
90023716:	e709      	b.n	9002352c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023718:	462e      	mov	r6, r5
9002371a:	e707      	b.n	9002352c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
9002371c:	2700      	movs	r7, #0
9002371e:	e71a      	b.n	90023556 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90023720:	2100      	movs	r1, #0
90023722:	460f      	mov	r7, r1
90023724:	e723      	b.n	9002356e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023726:	4621      	mov	r1, r4
90023728:	4627      	mov	r7, r4
9002372a:	e720      	b.n	9002356e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
9002372c:	2100      	movs	r1, #0
9002372e:	e71e      	b.n	9002356e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023730:	4629      	mov	r1, r5
90023732:	e71c      	b.n	9002356e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90023734 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023738:	b09b      	sub	sp, #108	@ 0x6c
9002373a:	9218      	str	r2, [sp, #96]	@ 0x60
9002373c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9002373e:	9019      	str	r0, [sp, #100]	@ 0x64
90023740:	9116      	str	r1, [sp, #88]	@ 0x58
90023742:	6850      	ldr	r0, [r2, #4]
90023744:	9307      	str	r3, [sp, #28]
90023746:	6812      	ldr	r2, [r2, #0]
90023748:	9d26      	ldr	r5, [sp, #152]	@ 0x98
9002374a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
9002374e:	fb00 1303 	mla	r3, r0, r3, r1
90023752:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023756:	930a      	str	r3, [sp, #40]	@ 0x28
90023758:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002375a:	681b      	ldr	r3, [r3, #0]
9002375c:	930f      	str	r3, [sp, #60]	@ 0x3c
9002375e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023760:	685e      	ldr	r6, [r3, #4]
90023762:	3604      	adds	r6, #4
90023764:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90023766:	2b00      	cmp	r3, #0
90023768:	dc03      	bgt.n	90023772 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9002376a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002376c:	2b00      	cmp	r3, #0
9002376e:	f340 8373 	ble.w	90023e58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90023772:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023774:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023778:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002377c:	1e48      	subs	r0, r1, #1
9002377e:	1e57      	subs	r7, r2, #1
90023780:	9b07      	ldr	r3, [sp, #28]
90023782:	2b00      	cmp	r3, #0
90023784:	f340 818f 	ble.w	90023aa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90023788:	9c25      	ldr	r4, [sp, #148]	@ 0x94
9002378a:	142b      	asrs	r3, r5, #16
9002378c:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023790:	d406      	bmi.n	900237a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023792:	4584      	cmp	ip, r0
90023794:	da04      	bge.n	900237a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023796:	2b00      	cmp	r3, #0
90023798:	db02      	blt.n	900237a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002379a:	42bb      	cmp	r3, r7
9002379c:	f2c0 8184 	blt.w	90023aa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
900237a0:	f11c 0c01 	adds.w	ip, ip, #1
900237a4:	f100 8172 	bmi.w	90023a8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900237a8:	4561      	cmp	r1, ip
900237aa:	f2c0 816f 	blt.w	90023a8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900237ae:	3301      	adds	r3, #1
900237b0:	f100 816c 	bmi.w	90023a8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900237b4:	429a      	cmp	r2, r3
900237b6:	f2c0 8169 	blt.w	90023a8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900237ba:	9b07      	ldr	r3, [sp, #28]
900237bc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900237be:	9317      	str	r3, [sp, #92]	@ 0x5c
900237c0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900237c2:	2b00      	cmp	r3, #0
900237c4:	f340 818e 	ble.w	90023ae4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
900237c8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900237ca:	ea4f 4c25 	mov.w	ip, r5, asr #16
900237ce:	f3c5 3003 	ubfx	r0, r5, #12, #4
900237d2:	f3c3 3203 	ubfx	r2, r3, #12, #4
900237d6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900237d8:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
900237dc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900237de:	141b      	asrs	r3, r3, #16
900237e0:	f100 81d1 	bmi.w	90023b86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900237e4:	f101 38ff 	add.w	r8, r1, #4294967295
900237e8:	4543      	cmp	r3, r8
900237ea:	f280 81cc 	bge.w	90023b86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900237ee:	f1bc 0f00 	cmp.w	ip, #0
900237f2:	f2c0 81c8 	blt.w	90023b86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900237f6:	f10e 38ff 	add.w	r8, lr, #4294967295
900237fa:	45c4      	cmp	ip, r8
900237fc:	f280 81c3 	bge.w	90023b86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023800:	b209      	sxth	r1, r1
90023802:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023804:	fb0c 3301 	mla	r3, ip, r1, r3
90023808:	eb04 0803 	add.w	r8, r4, r3
9002380c:	5ce3      	ldrb	r3, [r4, r3]
9002380e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023812:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90023816:	2a00      	cmp	r2, #0
90023818:	f000 81aa 	beq.w	90023b70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
9002381c:	f898 c001 	ldrb.w	ip, [r8, #1]
90023820:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90023824:	940b      	str	r4, [sp, #44]	@ 0x2c
90023826:	0e24      	lsrs	r4, r4, #24
90023828:	9412      	str	r4, [sp, #72]	@ 0x48
9002382a:	b178      	cbz	r0, 9002384c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002382c:	eb08 0c01 	add.w	ip, r8, r1
90023830:	f818 1001 	ldrb.w	r1, [r8, r1]
90023834:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023838:	9108      	str	r1, [sp, #32]
9002383a:	0e09      	lsrs	r1, r1, #24
9002383c:	9110      	str	r1, [sp, #64]	@ 0x40
9002383e:	f89c 1001 	ldrb.w	r1, [ip, #1]
90023842:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023846:	910c      	str	r1, [sp, #48]	@ 0x30
90023848:	0e09      	lsrs	r1, r1, #24
9002384a:	9113      	str	r1, [sp, #76]	@ 0x4c
9002384c:	b292      	uxth	r2, r2
9002384e:	9912      	ldr	r1, [sp, #72]	@ 0x48
90023850:	b280      	uxth	r0, r0
90023852:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023854:	fb02 f900 	mul.w	r9, r2, r0
90023858:	0112      	lsls	r2, r2, #4
9002385a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002385e:	eba2 0809 	sub.w	r8, r2, r9
90023862:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90023866:	b280      	uxth	r0, r0
90023868:	fa1f f888 	uxth.w	r8, r8
9002386c:	1a12      	subs	r2, r2, r0
9002386e:	fb08 f101 	mul.w	r1, r8, r1
90023872:	b292      	uxth	r2, r2
90023874:	fb02 110e 	mla	r1, r2, lr, r1
90023878:	fb00 1104 	mla	r1, r0, r4, r1
9002387c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002387e:	fb09 1104 	mla	r1, r9, r4, r1
90023882:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023886:	2900      	cmp	r1, #0
90023888:	f000 80f5 	beq.w	90023a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002388c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90023890:	d01b      	beq.n	900238ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023892:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90023896:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002389a:	fb0e fa0a 	mul.w	sl, lr, sl
9002389e:	fb0e fe03 	mul.w	lr, lr, r3
900238a2:	ea4f 231a 	mov.w	r3, sl, lsr #8
900238a6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900238aa:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900238ae:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900238b2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900238b6:	4453      	add	r3, sl
900238b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900238bc:	0a1b      	lsrs	r3, r3, #8
900238be:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900238c2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900238c6:	ea43 030c 	orr.w	r3, r3, ip
900238ca:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900238cc:	2cff      	cmp	r4, #255	@ 0xff
900238ce:	d021      	beq.n	90023914 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900238d0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900238d2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900238d6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900238d8:	fb04 fb0b 	mul.w	fp, r4, fp
900238dc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900238de:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900238e2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900238e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900238e8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900238ec:	fb04 fa0a 	mul.w	sl, r4, sl
900238f0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900238f4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900238f8:	44de      	add	lr, fp
900238fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900238fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023902:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023906:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002390a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002390e:	ea4e 040a 	orr.w	r4, lr, sl
90023912:	940b      	str	r4, [sp, #44]	@ 0x2c
90023914:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023916:	2cff      	cmp	r4, #255	@ 0xff
90023918:	d021      	beq.n	9002395e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002391a:	9c08      	ldr	r4, [sp, #32]
9002391c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023920:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023922:	fb04 fb0b 	mul.w	fp, r4, fp
90023926:	9c08      	ldr	r4, [sp, #32]
90023928:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002392c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002392e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023932:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023936:	fb04 fa0a 	mul.w	sl, r4, sl
9002393a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002393e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023942:	44de      	add	lr, fp
90023944:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023948:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002394c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023950:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023954:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023958:	ea4e 040a 	orr.w	r4, lr, sl
9002395c:	9408      	str	r4, [sp, #32]
9002395e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023960:	2cff      	cmp	r4, #255	@ 0xff
90023962:	d021      	beq.n	900239a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90023964:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90023966:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002396a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002396c:	fb04 fb0b 	mul.w	fp, r4, fp
90023970:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90023972:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023976:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023978:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002397c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023980:	fb04 fa0a 	mul.w	sl, r4, sl
90023984:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023988:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002398c:	44de      	add	lr, fp
9002398e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023992:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023996:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002399a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002399e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900239a2:	ea4e 040a 	orr.w	r4, lr, sl
900239a6:	940c      	str	r4, [sp, #48]	@ 0x30
900239a8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900239aa:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
900239ae:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900239b2:	43c9      	mvns	r1, r1
900239b4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900239b8:	9c08      	ldr	r4, [sp, #32]
900239ba:	fb08 fc0c 	mul.w	ip, r8, ip
900239be:	fb02 cc0e 	mla	ip, r2, lr, ip
900239c2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900239c6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900239c8:	fb00 cc0e 	mla	ip, r0, lr, ip
900239cc:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900239d0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900239d2:	fb09 cc0e 	mla	ip, r9, lr, ip
900239d6:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
900239da:	fb08 f80e 	mul.w	r8, r8, lr
900239de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900239e2:	fa5f fe81 	uxtb.w	lr, r1
900239e6:	fb02 8303 	mla	r3, r2, r3, r8
900239ea:	9a08      	ldr	r2, [sp, #32]
900239ec:	f8b7 8000 	ldrh.w	r8, [r7]
900239f0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900239f4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900239f8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900239fa:	ea4f 01c8 	mov.w	r1, r8, lsl #3
900239fe:	fb00 330a 	mla	r3, r0, sl, r3
90023a02:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
90023a06:	ea4f 2228 	mov.w	r2, r8, asr #8
90023a0a:	fb09 3900 	mla	r9, r9, r0, r3
90023a0e:	ea4f 00e8 	mov.w	r0, r8, asr #3
90023a12:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90023a16:	b2c9      	uxtb	r1, r1
90023a18:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023a1c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90023a20:	fb02 f20e 	mul.w	r2, r2, lr
90023a24:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90023a28:	fb00 f00e 	mul.w	r0, r0, lr
90023a2c:	1c53      	adds	r3, r2, #1
90023a2e:	fb01 f10e 	mul.w	r1, r1, lr
90023a32:	ea4c 0c09 	orr.w	ip, ip, r9
90023a36:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90023a3a:	ea4f 431c 	mov.w	r3, ip, lsr #16
90023a3e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023a42:	4a60      	ldr	r2, [pc, #384]	@ (90023bc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90023a44:	b2db      	uxtb	r3, r3
90023a46:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90023a4a:	1c43      	adds	r3, r0, #1
90023a4c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90023a50:	ea4f 231c 	mov.w	r3, ip, lsr #8
90023a54:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023a58:	00db      	lsls	r3, r3, #3
90023a5a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023a5e:	4313      	orrs	r3, r2
90023a60:	1c4a      	adds	r2, r1, #1
90023a62:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023a66:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90023a6a:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90023a6e:	ea4c 0c03 	orr.w	ip, ip, r3
90023a72:	f8a7 c000 	strh.w	ip, [r7]
90023a76:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90023a78:	3702      	adds	r7, #2
90023a7a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90023a7c:	441a      	add	r2, r3
90023a7e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023a80:	441d      	add	r5, r3
90023a82:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90023a84:	9225      	str	r2, [sp, #148]	@ 0x94
90023a86:	3b01      	subs	r3, #1
90023a88:	9317      	str	r3, [sp, #92]	@ 0x5c
90023a8a:	e699      	b.n	900237c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90023a8c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90023a8e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90023a90:	441c      	add	r4, r3
90023a92:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023a94:	441d      	add	r5, r3
90023a96:	9b07      	ldr	r3, [sp, #28]
90023a98:	9425      	str	r4, [sp, #148]	@ 0x94
90023a9a:	3b01      	subs	r3, #1
90023a9c:	9307      	str	r3, [sp, #28]
90023a9e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023aa0:	3302      	adds	r3, #2
90023aa2:	930a      	str	r3, [sp, #40]	@ 0x28
90023aa4:	e66c      	b.n	90023780 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90023aa6:	d024      	beq.n	90023af2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90023aa8:	9b07      	ldr	r3, [sp, #28]
90023aaa:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90023aac:	3b01      	subs	r3, #1
90023aae:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90023ab0:	fb00 4003 	mla	r0, r0, r3, r4
90023ab4:	1400      	asrs	r0, r0, #16
90023ab6:	f53f ae80 	bmi.w	900237ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023aba:	3901      	subs	r1, #1
90023abc:	4288      	cmp	r0, r1
90023abe:	f6bf ae7c 	bge.w	900237ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023ac2:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90023ac4:	fb01 5303 	mla	r3, r1, r3, r5
90023ac8:	141b      	asrs	r3, r3, #16
90023aca:	f53f ae76 	bmi.w	900237ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023ace:	3a01      	subs	r2, #1
90023ad0:	4293      	cmp	r3, r2
90023ad2:	f6bf ae72 	bge.w	900237ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023ad6:	f8dd b01c 	ldr.w	fp, [sp, #28]
90023ada:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90023ade:	f1bb 0f00 	cmp.w	fp, #0
90023ae2:	dc71      	bgt.n	90023bc8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023ae4:	9b07      	ldr	r3, [sp, #28]
90023ae6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023aea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023aec:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90023af0:	930a      	str	r3, [sp, #40]	@ 0x28
90023af2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90023af4:	2b00      	cmp	r3, #0
90023af6:	f340 81af 	ble.w	90023e58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90023afa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90023afe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023b00:	ee30 0a04 	vadd.f32	s0, s0, s8
90023b04:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023b08:	eef0 6a62 	vmov.f32	s13, s5
90023b0c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023b10:	ee31 1a05 	vadd.f32	s2, s2, s10
90023b14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023b18:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
90023b1c:	eef0 6a43 	vmov.f32	s13, s6
90023b20:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023b24:	ee16 5a90 	vmov	r5, s13
90023b28:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023b2c:	ee61 7a27 	vmul.f32	s15, s2, s15
90023b30:	ee77 2a62 	vsub.f32	s5, s14, s5
90023b34:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023b38:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023b3c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023b40:	ee12 2a90 	vmov	r2, s5
90023b44:	eef0 2a47 	vmov.f32	s5, s14
90023b48:	fb92 f3f3 	sdiv	r3, r2, r3
90023b4c:	ee13 2a10 	vmov	r2, s6
90023b50:	9327      	str	r3, [sp, #156]	@ 0x9c
90023b52:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023b54:	eeb0 3a67 	vmov.f32	s6, s15
90023b58:	fb92 f3f3 	sdiv	r3, r2, r3
90023b5c:	9328      	str	r3, [sp, #160]	@ 0xa0
90023b5e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90023b60:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90023b62:	3b01      	subs	r3, #1
90023b64:	9316      	str	r3, [sp, #88]	@ 0x58
90023b66:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023b68:	bf08      	it	eq
90023b6a:	4613      	moveq	r3, r2
90023b6c:	9307      	str	r3, [sp, #28]
90023b6e:	e5f9      	b.n	90023764 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90023b70:	2800      	cmp	r0, #0
90023b72:	f43f ae6b 	beq.w	9002384c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023b76:	f818 1001 	ldrb.w	r1, [r8, r1]
90023b7a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023b7e:	9108      	str	r1, [sp, #32]
90023b80:	0e09      	lsrs	r1, r1, #24
90023b82:	9110      	str	r1, [sp, #64]	@ 0x40
90023b84:	e662      	b.n	9002384c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023b86:	f113 0801 	adds.w	r8, r3, #1
90023b8a:	f53f af74 	bmi.w	90023a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023b8e:	4541      	cmp	r1, r8
90023b90:	f6ff af71 	blt.w	90023a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023b94:	f11c 0801 	adds.w	r8, ip, #1
90023b98:	f53f af6d 	bmi.w	90023a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023b9c:	45c6      	cmp	lr, r8
90023b9e:	f6ff af6a 	blt.w	90023a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023ba2:	b209      	sxth	r1, r1
90023ba4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90023ba8:	fa0f f38e 	sxth.w	r3, lr
90023bac:	9100      	str	r1, [sp, #0]
90023bae:	4639      	mov	r1, r7
90023bb0:	9301      	str	r3, [sp, #4]
90023bb2:	4633      	mov	r3, r6
90023bb4:	e9cd 2004 	strd	r2, r0, [sp, #16]
90023bb8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90023bba:	9819      	ldr	r0, [sp, #100]	@ 0x64
90023bbc:	f7ff fc7b 	bl	900234b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90023bc0:	e759      	b.n	90023a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023bc2:	bf00      	nop
90023bc4:	fffff800 	.word	0xfffff800
90023bc8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023bca:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023bce:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90023bd0:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023bd4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023bd6:	1427      	asrs	r7, r4, #16
90023bd8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023bda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023bde:	142b      	asrs	r3, r5, #16
90023be0:	fb01 7303 	mla	r3, r1, r3, r7
90023be4:	18e7      	adds	r7, r4, r3
90023be6:	5ce3      	ldrb	r3, [r4, r3]
90023be8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023bec:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023bf0:	2a00      	cmp	r2, #0
90023bf2:	f000 8127 	beq.w	90023e44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90023bf6:	f897 e001 	ldrb.w	lr, [r7, #1]
90023bfa:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90023bfe:	940d      	str	r4, [sp, #52]	@ 0x34
90023c00:	0e24      	lsrs	r4, r4, #24
90023c02:	9414      	str	r4, [sp, #80]	@ 0x50
90023c04:	b170      	cbz	r0, 90023c24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90023c06:	eb07 0e01 	add.w	lr, r7, r1
90023c0a:	5c79      	ldrb	r1, [r7, r1]
90023c0c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023c10:	9109      	str	r1, [sp, #36]	@ 0x24
90023c12:	0e09      	lsrs	r1, r1, #24
90023c14:	9111      	str	r1, [sp, #68]	@ 0x44
90023c16:	f89e 1001 	ldrb.w	r1, [lr, #1]
90023c1a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023c1e:	910e      	str	r1, [sp, #56]	@ 0x38
90023c20:	0e09      	lsrs	r1, r1, #24
90023c22:	9115      	str	r1, [sp, #84]	@ 0x54
90023c24:	b292      	uxth	r2, r2
90023c26:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023c28:	b280      	uxth	r0, r0
90023c2a:	fb02 f800 	mul.w	r8, r2, r0
90023c2e:	0112      	lsls	r2, r2, #4
90023c30:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90023c34:	eba2 0e08 	sub.w	lr, r2, r8
90023c38:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90023c3c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90023c3e:	b280      	uxth	r0, r0
90023c40:	fa1f fe8e 	uxth.w	lr, lr
90023c44:	1a09      	subs	r1, r1, r0
90023c46:	fb0e f202 	mul.w	r2, lr, r2
90023c4a:	b289      	uxth	r1, r1
90023c4c:	fb01 220c 	mla	r2, r1, ip, r2
90023c50:	fb00 2204 	mla	r2, r0, r4, r2
90023c54:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023c56:	fb08 2204 	mla	r2, r8, r4, r2
90023c5a:	f3c2 2207 	ubfx	r2, r2, #8, #8
90023c5e:	2a00      	cmp	r2, #0
90023c60:	f000 80e5 	beq.w	90023e2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90023c64:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90023c68:	d019      	beq.n	90023c9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90023c6a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90023c6e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023c72:	fb0c fa0a 	mul.w	sl, ip, sl
90023c76:	fb0c fc03 	mul.w	ip, ip, r3
90023c7a:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023c7e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90023c82:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90023c86:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023c8a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90023c8e:	4453      	add	r3, sl
90023c90:	0a3f      	lsrs	r7, r7, #8
90023c92:	0a1b      	lsrs	r3, r3, #8
90023c94:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90023c98:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90023c9c:	433b      	orrs	r3, r7
90023c9e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023ca0:	2cff      	cmp	r4, #255	@ 0xff
90023ca2:	d020      	beq.n	90023ce6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90023ca4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023ca6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023caa:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023cac:	4367      	muls	r7, r4
90023cae:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023cb0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023cb4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023cb8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023cba:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023cbe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023cc2:	fb04 fa0a 	mul.w	sl, r4, sl
90023cc6:	44bc      	add	ip, r7
90023cc8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023ccc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023cd0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023cd4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023cd8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023cdc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023ce0:	ea4c 040a 	orr.w	r4, ip, sl
90023ce4:	940d      	str	r4, [sp, #52]	@ 0x34
90023ce6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023ce8:	2cff      	cmp	r4, #255	@ 0xff
90023cea:	d020      	beq.n	90023d2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90023cec:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90023cee:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023cf2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023cf4:	4367      	muls	r7, r4
90023cf6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90023cf8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023cfc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023d00:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023d02:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023d06:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023d0a:	fb04 fa0a 	mul.w	sl, r4, sl
90023d0e:	44bc      	add	ip, r7
90023d10:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023d14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023d18:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023d1c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023d20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023d24:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023d28:	ea4c 040a 	orr.w	r4, ip, sl
90023d2c:	9409      	str	r4, [sp, #36]	@ 0x24
90023d2e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023d30:	2cff      	cmp	r4, #255	@ 0xff
90023d32:	d020      	beq.n	90023d76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90023d34:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023d36:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023d3a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023d3c:	4367      	muls	r7, r4
90023d3e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023d40:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023d44:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023d48:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023d4a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023d4e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023d52:	fb04 fa0a 	mul.w	sl, r4, sl
90023d56:	44bc      	add	ip, r7
90023d58:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023d5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023d60:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023d64:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023d68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023d6c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023d70:	ea4c 040a 	orr.w	r4, ip, sl
90023d74:	940e      	str	r4, [sp, #56]	@ 0x38
90023d76:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023d78:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90023d7c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023d80:	43d2      	mvns	r2, r2
90023d82:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023d86:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90023d88:	b2d2      	uxtb	r2, r2
90023d8a:	fb0e f707 	mul.w	r7, lr, r7
90023d8e:	fb01 770c 	mla	r7, r1, ip, r7
90023d92:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023d96:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023d98:	fb00 770c 	mla	r7, r0, ip, r7
90023d9c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023da0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023da2:	fb08 770c 	mla	r7, r8, ip, r7
90023da6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90023daa:	fb0e fe0c 	mul.w	lr, lr, ip
90023dae:	0a3f      	lsrs	r7, r7, #8
90023db0:	fb01 e303 	mla	r3, r1, r3, lr
90023db4:	9909      	ldr	r1, [sp, #36]	@ 0x24
90023db6:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90023dba:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90023dbe:	990e      	ldr	r1, [sp, #56]	@ 0x38
90023dc0:	fb00 330a 	mla	r3, r0, sl, r3
90023dc4:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90023dc8:	fb08 3c0c 	mla	ip, r8, ip, r3
90023dcc:	f8b9 3000 	ldrh.w	r3, [r9]
90023dd0:	1218      	asrs	r0, r3, #8
90023dd2:	10d9      	asrs	r1, r3, #3
90023dd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023dd8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90023ddc:	00db      	lsls	r3, r3, #3
90023dde:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90023de2:	4350      	muls	r0, r2
90023de4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90023de8:	b2db      	uxtb	r3, r3
90023dea:	4351      	muls	r1, r2
90023dec:	ea47 070c 	orr.w	r7, r7, ip
90023df0:	4353      	muls	r3, r2
90023df2:	1c42      	adds	r2, r0, #1
90023df4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90023df8:	0c3a      	lsrs	r2, r7, #16
90023dfa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90023dfe:	4a18      	ldr	r2, [pc, #96]	@ (90023e60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90023e00:	b2c0      	uxtb	r0, r0
90023e02:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90023e06:	1c4a      	adds	r2, r1, #1
90023e08:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023e0c:	0a3a      	lsrs	r2, r7, #8
90023e0e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023e12:	00c9      	lsls	r1, r1, #3
90023e14:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023e18:	4301      	orrs	r1, r0
90023e1a:	1c58      	adds	r0, r3, #1
90023e1c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90023e20:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90023e24:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90023e28:	4308      	orrs	r0, r1
90023e2a:	f8a9 0000 	strh.w	r0, [r9]
90023e2e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90023e30:	f109 0902 	add.w	r9, r9, #2
90023e34:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90023e36:	f10b 3bff 	add.w	fp, fp, #4294967295
90023e3a:	441a      	add	r2, r3
90023e3c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023e3e:	9225      	str	r2, [sp, #148]	@ 0x94
90023e40:	441d      	add	r5, r3
90023e42:	e64c      	b.n	90023ade <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90023e44:	2800      	cmp	r0, #0
90023e46:	f43f aeed 	beq.w	90023c24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90023e4a:	5c79      	ldrb	r1, [r7, r1]
90023e4c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023e50:	9109      	str	r1, [sp, #36]	@ 0x24
90023e52:	0e09      	lsrs	r1, r1, #24
90023e54:	9111      	str	r1, [sp, #68]	@ 0x44
90023e56:	e6e5      	b.n	90023c24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90023e58:	b01b      	add	sp, #108	@ 0x6c
90023e5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023e5e:	bf00      	nop
90023e60:	fffff800 	.word	0xfffff800

90023e64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90023e64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023e68:	b085      	sub	sp, #20
90023e6a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90023e6e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90023e72:	2800      	cmp	r0, #0
90023e74:	9103      	str	r1, [sp, #12]
90023e76:	fb00 7406 	mla	r4, r0, r6, r7
90023e7a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90023e7e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90023e82:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90023e86:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90023e8a:	eb03 0904 	add.w	r9, r3, r4
90023e8e:	9501      	str	r5, [sp, #4]
90023e90:	f2c0 8150 	blt.w	90024134 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90023e94:	4583      	cmp	fp, r0
90023e96:	f340 814d 	ble.w	90024134 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90023e9a:	2f00      	cmp	r7, #0
90023e9c:	f2c0 8146 	blt.w	9002412c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90023ea0:	42be      	cmp	r6, r7
90023ea2:	f340 8143 	ble.w	9002412c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90023ea6:	f813 c004 	ldrb.w	ip, [r3, r4]
90023eaa:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90023eae:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90023eb2:	ea4f 02ec 	mov.w	r2, ip, asr #3
90023eb6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90023eba:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023ebe:	4355      	muls	r5, r2
90023ec0:	fb0c f203 	mul.w	r2, ip, r3
90023ec4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90023ec8:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90023ecc:	441d      	add	r5, r3
90023ece:	f102 0320 	add.w	r3, r2, #32
90023ed2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023ed6:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90023eda:	0a1b      	lsrs	r3, r3, #8
90023edc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023ee0:	431c      	orrs	r4, r3
90023ee2:	1c7b      	adds	r3, r7, #1
90023ee4:	f100 812b 	bmi.w	9002413e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90023ee8:	429e      	cmp	r6, r3
90023eea:	f340 8128 	ble.w	9002413e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90023eee:	2900      	cmp	r1, #0
90023ef0:	f000 8128 	beq.w	90024144 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90023ef4:	9a01      	ldr	r2, [sp, #4]
90023ef6:	f899 3001 	ldrb.w	r3, [r9, #1]
90023efa:	8855      	ldrh	r5, [r2, #2]
90023efc:	ea4f 08e3 	mov.w	r8, r3, asr #3
90023f00:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90023f04:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90023f08:	fb08 f802 	mul.w	r8, r8, r2
90023f0c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90023f10:	435d      	muls	r5, r3
90023f12:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90023f16:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023f1a:	44d0      	add	r8, sl
90023f1c:	f105 0a20 	add.w	sl, r5, #32
90023f20:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90023f24:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90023f28:	0a2d      	lsrs	r5, r5, #8
90023f2a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90023f2e:	432a      	orrs	r2, r5
90023f30:	3001      	adds	r0, #1
90023f32:	f100 810d 	bmi.w	90024150 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90023f36:	4583      	cmp	fp, r0
90023f38:	f340 810a 	ble.w	90024150 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90023f3c:	f1be 0f00 	cmp.w	lr, #0
90023f40:	f000 810b 	beq.w	9002415a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90023f44:	2f00      	cmp	r7, #0
90023f46:	f2c0 8100 	blt.w	9002414a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90023f4a:	42be      	cmp	r6, r7
90023f4c:	f340 80fd 	ble.w	9002414a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90023f50:	9801      	ldr	r0, [sp, #4]
90023f52:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90023f56:	f819 5006 	ldrb.w	r5, [r9, r6]
90023f5a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90023f5e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90023f62:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90023f66:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90023f6a:	fb0a fa00 	mul.w	sl, sl, r0
90023f6e:	fb05 f808 	mul.w	r8, r5, r8
90023f72:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90023f76:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90023f7a:	4482      	add	sl, r0
90023f7c:	f108 0020 	add.w	r0, r8, #32
90023f80:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90023f84:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90023f88:	0a00      	lsrs	r0, r0, #8
90023f8a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023f8e:	ea4b 0b00 	orr.w	fp, fp, r0
90023f92:	3701      	adds	r7, #1
90023f94:	f100 80e6 	bmi.w	90024164 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90023f98:	42be      	cmp	r6, r7
90023f9a:	f340 80e3 	ble.w	90024164 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90023f9e:	2900      	cmp	r1, #0
90023fa0:	f000 80e3 	beq.w	9002416a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90023fa4:	3601      	adds	r6, #1
90023fa6:	9801      	ldr	r0, [sp, #4]
90023fa8:	f819 7006 	ldrb.w	r7, [r9, r6]
90023fac:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90023fb0:	ea4f 09e7 	mov.w	r9, r7, asr #3
90023fb4:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90023fb8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023fbc:	fb09 f906 	mul.w	r9, r9, r6
90023fc0:	fb07 f800 	mul.w	r8, r7, r0
90023fc4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90023fc8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90023fcc:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90023fd0:	44d1      	add	r9, sl
90023fd2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90023fd6:	f108 0020 	add.w	r0, r8, #32
90023fda:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90023fde:	0a00      	lsrs	r0, r0, #8
90023fe0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023fe4:	4330      	orrs	r0, r6
90023fe6:	b28e      	uxth	r6, r1
90023fe8:	fa1f f98e 	uxth.w	r9, lr
90023fec:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90023ff0:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90023ff4:	fb06 f809 	mul.w	r8, r6, r9
90023ff8:	0136      	lsls	r6, r6, #4
90023ffa:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023ffe:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90024002:	9601      	str	r6, [sp, #4]
90024004:	ea4a 0404 	orr.w	r4, sl, r4
90024008:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002400c:	fa1f f689 	uxth.w	r6, r9
90024010:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024014:	fb11 f90e 	smulbb	r9, r1, lr
90024018:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002401c:	9602      	str	r6, [sp, #8]
9002401e:	4626      	mov	r6, r4
90024020:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90024024:	f1ce 0410 	rsb	r4, lr, #16
90024028:	ea4a 0202 	orr.w	r2, sl, r2
9002402c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024030:	1a64      	subs	r4, r4, r1
90024032:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90024036:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002403a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002403e:	434a      	muls	r2, r1
90024040:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90024044:	ea4a 0000 	orr.w	r0, sl, r0
90024048:	9903      	ldr	r1, [sp, #12]
9002404a:	fb04 2406 	mla	r4, r4, r6, r2
9002404e:	9e02      	ldr	r6, [sp, #8]
90024050:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90024054:	fb09 4200 	mla	r2, r9, r0, r4
90024058:	ea4f 440b 	mov.w	r4, fp, lsl #16
9002405c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90024060:	8808      	ldrh	r0, [r1, #0]
90024062:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90024066:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
9002406a:	ea44 0b0b 	orr.w	fp, r4, fp
9002406e:	9c01      	ldr	r4, [sp, #4]
90024070:	b289      	uxth	r1, r1
90024072:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
90024076:	fb0e 2e0b 	mla	lr, lr, fp, r2
9002407a:	1ba4      	subs	r4, r4, r6
9002407c:	9e01      	ldr	r6, [sp, #4]
9002407e:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024082:	eba6 0608 	sub.w	r6, r6, r8
90024086:	b2a4      	uxth	r4, r4
90024088:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9002408c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024090:	b2b6      	uxth	r6, r6
90024092:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024096:	4373      	muls	r3, r6
90024098:	ea42 0e0e 	orr.w	lr, r2, lr
9002409c:	fb0c 3304 	mla	r3, ip, r4, r3
900240a0:	9c02      	ldr	r4, [sp, #8]
900240a2:	fa1f f28e 	uxth.w	r2, lr
900240a6:	fb04 3505 	mla	r5, r4, r5, r3
900240aa:	10d4      	asrs	r4, r2, #3
900240ac:	fb08 5707 	mla	r7, r8, r7, r5
900240b0:	1215      	asrs	r5, r2, #8
900240b2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
900240b6:	00d2      	lsls	r2, r2, #3
900240b8:	f3c7 2707 	ubfx	r7, r7, #8, #8
900240bc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900240c0:	b2d2      	uxtb	r2, r2
900240c2:	434f      	muls	r7, r1
900240c4:	1c7b      	adds	r3, r7, #1
900240c6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900240ca:	1203      	asrs	r3, r0, #8
900240cc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
900240d0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900240d4:	b2ff      	uxtb	r7, r7
900240d6:	fb13 f307 	smulbb	r3, r3, r7
900240da:	fb05 3501 	mla	r5, r5, r1, r3
900240de:	10c3      	asrs	r3, r0, #3
900240e0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
900240e4:	b2ad      	uxth	r5, r5
900240e6:	fb13 f307 	smulbb	r3, r3, r7
900240ea:	fb04 3401 	mla	r4, r4, r1, r3
900240ee:	00c3      	lsls	r3, r0, #3
900240f0:	b2db      	uxtb	r3, r3
900240f2:	b2a4      	uxth	r4, r4
900240f4:	fb13 f307 	smulbb	r3, r3, r7
900240f8:	fb02 3101 	mla	r1, r2, r1, r3
900240fc:	1c6b      	adds	r3, r5, #1
900240fe:	1c62      	adds	r2, r4, #1
90024100:	b289      	uxth	r1, r1
90024102:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024106:	1c4b      	adds	r3, r1, #1
90024108:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002410c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024110:	9a03      	ldr	r2, [sp, #12]
90024112:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90024116:	0964      	lsrs	r4, r4, #5
90024118:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002411c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90024120:	432b      	orrs	r3, r5
90024122:	4323      	orrs	r3, r4
90024124:	8013      	strh	r3, [r2, #0]
90024126:	b005      	add	sp, #20
90024128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002412c:	f04f 0c00 	mov.w	ip, #0
90024130:	4664      	mov	r4, ip
90024132:	e6d6      	b.n	90023ee2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90024134:	2300      	movs	r3, #0
90024136:	469c      	mov	ip, r3
90024138:	461a      	mov	r2, r3
9002413a:	461c      	mov	r4, r3
9002413c:	e6f8      	b.n	90023f30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002413e:	2300      	movs	r3, #0
90024140:	461a      	mov	r2, r3
90024142:	e6f5      	b.n	90023f30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90024144:	460b      	mov	r3, r1
90024146:	460a      	mov	r2, r1
90024148:	e6f2      	b.n	90023f30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002414a:	2500      	movs	r5, #0
9002414c:	46ab      	mov	fp, r5
9002414e:	e720      	b.n	90023f92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90024150:	2700      	movs	r7, #0
90024152:	463d      	mov	r5, r7
90024154:	4638      	mov	r0, r7
90024156:	46bb      	mov	fp, r7
90024158:	e745      	b.n	90023fe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002415a:	4677      	mov	r7, lr
9002415c:	4675      	mov	r5, lr
9002415e:	4670      	mov	r0, lr
90024160:	46f3      	mov	fp, lr
90024162:	e740      	b.n	90023fe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90024164:	2700      	movs	r7, #0
90024166:	4638      	mov	r0, r7
90024168:	e73d      	b.n	90023fe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002416a:	460f      	mov	r7, r1
9002416c:	4608      	mov	r0, r1
9002416e:	e73a      	b.n	90023fe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90024170 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024174:	b097      	sub	sp, #92	@ 0x5c
90024176:	9214      	str	r2, [sp, #80]	@ 0x50
90024178:	9308      	str	r3, [sp, #32]
9002417a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
9002417c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90024180:	9015      	str	r0, [sp, #84]	@ 0x54
90024182:	9312      	str	r3, [sp, #72]	@ 0x48
90024184:	6850      	ldr	r0, [r2, #4]
90024186:	9111      	str	r1, [sp, #68]	@ 0x44
90024188:	6812      	ldr	r2, [r2, #0]
9002418a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
9002418e:	fb00 1303 	mla	r3, r0, r3, r1
90024192:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024196:	9309      	str	r3, [sp, #36]	@ 0x24
90024198:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002419a:	681b      	ldr	r3, [r3, #0]
9002419c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002419e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900241a0:	685b      	ldr	r3, [r3, #4]
900241a2:	930c      	str	r3, [sp, #48]	@ 0x30
900241a4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900241a8:	930a      	str	r3, [sp, #40]	@ 0x28
900241aa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900241ac:	2b00      	cmp	r3, #0
900241ae:	dc03      	bgt.n	900241b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900241b0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
900241b2:	2b00      	cmp	r3, #0
900241b4:	f340 83cd 	ble.w	90024952 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900241b8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900241ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900241be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900241c2:	1e48      	subs	r0, r1, #1
900241c4:	1e55      	subs	r5, r2, #1
900241c6:	9b08      	ldr	r3, [sp, #32]
900241c8:	2b00      	cmp	r3, #0
900241ca:	f340 81a5 	ble.w	90024518 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
900241ce:	9e21      	ldr	r6, [sp, #132]	@ 0x84
900241d0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900241d2:	1436      	asrs	r6, r6, #16
900241d4:	ea4f 4323 	mov.w	r3, r3, asr #16
900241d8:	d406      	bmi.n	900241e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900241da:	4286      	cmp	r6, r0
900241dc:	da04      	bge.n	900241e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900241de:	2b00      	cmp	r3, #0
900241e0:	db02      	blt.n	900241e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900241e2:	42ab      	cmp	r3, r5
900241e4:	f2c0 8199 	blt.w	9002451a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
900241e8:	3601      	adds	r6, #1
900241ea:	f100 8186 	bmi.w	900244fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900241ee:	42b1      	cmp	r1, r6
900241f0:	f2c0 8183 	blt.w	900244fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900241f4:	3301      	adds	r3, #1
900241f6:	f100 8180 	bmi.w	900244fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900241fa:	429a      	cmp	r2, r3
900241fc:	f2c0 817d 	blt.w	900244fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024200:	9b08      	ldr	r3, [sp, #32]
90024202:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90024206:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90024208:	9313      	str	r3, [sp, #76]	@ 0x4c
9002420a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9002420c:	2b00      	cmp	r3, #0
9002420e:	f340 81a6 	ble.w	9002455e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90024212:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024214:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90024216:	1418      	asrs	r0, r3, #16
90024218:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002421a:	142d      	asrs	r5, r5, #16
9002421c:	f3c3 3103 	ubfx	r1, r3, #12, #4
90024220:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90024222:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90024226:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024228:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
9002422c:	f100 81fa 	bmi.w	90024624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024230:	f102 3eff 	add.w	lr, r2, #4294967295
90024234:	4575      	cmp	r5, lr
90024236:	f280 81f5 	bge.w	90024624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002423a:	2800      	cmp	r0, #0
9002423c:	f2c0 81f2 	blt.w	90024624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024240:	f103 3eff 	add.w	lr, r3, #4294967295
90024244:	4570      	cmp	r0, lr
90024246:	f280 81ed 	bge.w	90024624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002424a:	b212      	sxth	r2, r2
9002424c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002424e:	fa1f fe81 	uxth.w	lr, r1
90024252:	fb00 5002 	mla	r0, r0, r2, r5
90024256:	ea4f 150e 	mov.w	r5, lr, lsl #4
9002425a:	eb03 0a00 	add.w	sl, r3, r0
9002425e:	f813 9000 	ldrb.w	r9, [r3, r0]
90024262:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90024266:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002426a:	b29b      	uxth	r3, r3
9002426c:	f1bc 0f00 	cmp.w	ip, #0
90024270:	f000 81bb 	beq.w	900245ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90024274:	f81a 4002 	ldrb.w	r4, [sl, r2]
90024278:	eb0a 0b02 	add.w	fp, sl, r2
9002427c:	fa1f fa8c 	uxth.w	sl, ip
90024280:	940d      	str	r4, [sp, #52]	@ 0x34
90024282:	fb0a fe0e 	mul.w	lr, sl, lr
90024286:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002428a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002428e:	eba5 050e 	sub.w	r5, r5, lr
90024292:	940e      	str	r4, [sp, #56]	@ 0x38
90024294:	fa1f fa8a 	uxth.w	sl, sl
90024298:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002429a:	b2ad      	uxth	r5, r5
9002429c:	eba3 030a 	sub.w	r3, r3, sl
900242a0:	fb08 f505 	mul.w	r5, r8, r5
900242a4:	b29b      	uxth	r3, r3
900242a6:	fb09 5303 	mla	r3, r9, r3, r5
900242aa:	fb0a 3304 	mla	r3, sl, r4, r3
900242ae:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900242b0:	fb0e 3304 	mla	r3, lr, r4, r3
900242b4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900242b8:	2b00      	cmp	r3, #0
900242ba:	f000 8111 	beq.w	900244e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900242be:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900242c0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900242c4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900242c8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900242cc:	f000 8192 	beq.w	900245f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
900242d0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900242d4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900242d8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900242dc:	fb0a fe0e 	mul.w	lr, sl, lr
900242e0:	fb09 f000 	mul.w	r0, r9, r0
900242e4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900242e8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900242ec:	f100 0b20 	add.w	fp, r0, #32
900242f0:	44ce      	add	lr, r9
900242f2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900242f6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900242fa:	ea4f 2919 	mov.w	r9, r9, lsr #8
900242fe:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90024302:	ea4e 0909 	orr.w	r9, lr, r9
90024306:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
9002430a:	8868      	ldrh	r0, [r5, #2]
9002430c:	d019      	beq.n	90024342 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9002430e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90024312:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024316:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002431a:	fb0a fe0e 	mul.w	lr, sl, lr
9002431e:	fb08 f800 	mul.w	r8, r8, r0
90024322:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90024326:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
9002432a:	f108 0b20 	add.w	fp, r8, #32
9002432e:	4486      	add	lr, r0
90024330:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90024334:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024338:	0a00      	lsrs	r0, r0, #8
9002433a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002433e:	ea4e 0000 	orr.w	r0, lr, r0
90024342:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90024346:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002434a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002434e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024352:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90024356:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002435a:	ea4e 0909 	orr.w	r9, lr, r9
9002435e:	ea4a 0000 	orr.w	r0, sl, r0
90024362:	f1bc 0f00 	cmp.w	ip, #0
90024366:	f000 8147 	beq.w	900245f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
9002436a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
9002436e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024370:	3a01      	subs	r2, #1
90024372:	2cff      	cmp	r4, #255	@ 0xff
90024374:	ea4f 0242 	mov.w	r2, r2, lsl #1
90024378:	f102 0202 	add.w	r2, r2, #2
9002437c:	eb05 0e02 	add.w	lr, r5, r2
90024380:	5aaa      	ldrh	r2, [r5, r2]
90024382:	d018      	beq.n	900243b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90024384:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90024388:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002438c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024390:	fb04 fa02 	mul.w	sl, r4, r2
90024394:	fb08 f805 	mul.w	r8, r8, r5
90024398:	f10a 0520 	add.w	r5, sl, #32
9002439c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
900243a0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900243a4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900243a8:	4442      	add	r2, r8
900243aa:	0a2d      	lsrs	r5, r5, #8
900243ac:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900243b0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900243b4:	432a      	orrs	r2, r5
900243b6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900243b8:	f8be 5002 	ldrh.w	r5, [lr, #2]
900243bc:	2cff      	cmp	r4, #255	@ 0xff
900243be:	d01a      	beq.n	900243f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
900243c0:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
900243c4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900243c8:	ea4f 08e4 	mov.w	r8, r4, asr #3
900243cc:	fb04 fa05 	mul.w	sl, r4, r5
900243d0:	fb08 f80e 	mul.w	r8, r8, lr
900243d4:	f10a 0e20 	add.w	lr, sl, #32
900243d8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900243dc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900243e0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900243e4:	4445      	add	r5, r8
900243e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900243ea:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900243ee:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
900243f2:	ea45 050e 	orr.w	r5, r5, lr
900243f6:	fb1c fe01 	smulbb	lr, ip, r1
900243fa:	f1cc 0810 	rsb	r8, ip, #16
900243fe:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024402:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024406:	ea4f 0eee 	mov.w	lr, lr, asr #3
9002440a:	eba8 0801 	sub.w	r8, r8, r1
9002440e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90024412:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024416:	ebce 0141 	rsb	r1, lr, r1, lsl #1
9002441a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9002441e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90024422:	ea4a 0202 	orr.w	r2, sl, r2
90024426:	4341      	muls	r1, r0
90024428:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
9002442c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90024430:	fb09 1108 	mla	r1, r9, r8, r1
90024434:	ea4b 0505 	orr.w	r5, fp, r5
90024438:	fb0c 1102 	mla	r1, ip, r2, r1
9002443c:	fb0e 1e05 	mla	lr, lr, r5, r1
90024440:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024444:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024448:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002444c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024450:	ea42 0e0e 	orr.w	lr, r2, lr
90024454:	fa1f f28e 	uxth.w	r2, lr
90024458:	2bff      	cmp	r3, #255	@ 0xff
9002445a:	d103      	bne.n	90024464 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002445c:	9912      	ldr	r1, [sp, #72]	@ 0x48
9002445e:	29ff      	cmp	r1, #255	@ 0xff
90024460:	f000 80de 	beq.w	90024620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90024464:	990a      	ldr	r1, [sp, #40]	@ 0x28
90024466:	1215      	asrs	r5, r2, #8
90024468:	8838      	ldrh	r0, [r7, #0]
9002446a:	434b      	muls	r3, r1
9002446c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024470:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024472:	f103 0c01 	add.w	ip, r3, #1
90024476:	eb0c 2323 	add.w	r3, ip, r3, asr #8
9002447a:	ea6f 2323 	mvn.w	r3, r3, asr #8
9002447e:	fa5f fc83 	uxtb.w	ip, r3
90024482:	1203      	asrs	r3, r0, #8
90024484:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90024488:	fb13 f30c 	smulbb	r3, r3, ip
9002448c:	fb05 3501 	mla	r5, r5, r1, r3
90024490:	10c3      	asrs	r3, r0, #3
90024492:	10d1      	asrs	r1, r2, #3
90024494:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90024498:	00d2      	lsls	r2, r2, #3
9002449a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002449e:	b2ad      	uxth	r5, r5
900244a0:	fb13 f30c 	smulbb	r3, r3, ip
900244a4:	b2d2      	uxtb	r2, r2
900244a6:	fb01 3104 	mla	r1, r1, r4, r3
900244aa:	00c3      	lsls	r3, r0, #3
900244ac:	b2db      	uxtb	r3, r3
900244ae:	b289      	uxth	r1, r1
900244b0:	fb13 f30c 	smulbb	r3, r3, ip
900244b4:	fb02 3304 	mla	r3, r2, r4, r3
900244b8:	b29a      	uxth	r2, r3
900244ba:	1c6b      	adds	r3, r5, #1
900244bc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900244c0:	1c53      	adds	r3, r2, #1
900244c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900244c6:	1c4a      	adds	r2, r1, #1
900244c8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900244cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900244d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900244d4:	0949      	lsrs	r1, r1, #5
900244d6:	432b      	orrs	r3, r5
900244d8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900244dc:	430b      	orrs	r3, r1
900244de:	803b      	strh	r3, [r7, #0]
900244e0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900244e2:	3702      	adds	r7, #2
900244e4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900244e6:	4413      	add	r3, r2
900244e8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900244ea:	9321      	str	r3, [sp, #132]	@ 0x84
900244ec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900244ee:	441a      	add	r2, r3
900244f0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900244f2:	3b01      	subs	r3, #1
900244f4:	9222      	str	r2, [sp, #136]	@ 0x88
900244f6:	9313      	str	r3, [sp, #76]	@ 0x4c
900244f8:	e687      	b.n	9002420a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900244fa:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900244fc:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
900244fe:	9c22      	ldr	r4, [sp, #136]	@ 0x88
90024500:	4433      	add	r3, r6
90024502:	9321      	str	r3, [sp, #132]	@ 0x84
90024504:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024506:	441c      	add	r4, r3
90024508:	9b08      	ldr	r3, [sp, #32]
9002450a:	3b01      	subs	r3, #1
9002450c:	9422      	str	r4, [sp, #136]	@ 0x88
9002450e:	9308      	str	r3, [sp, #32]
90024510:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024512:	3302      	adds	r3, #2
90024514:	9309      	str	r3, [sp, #36]	@ 0x24
90024516:	e656      	b.n	900241c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90024518:	d028      	beq.n	9002456c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
9002451a:	9b08      	ldr	r3, [sp, #32]
9002451c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
9002451e:	3b01      	subs	r3, #1
90024520:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90024522:	fb00 5003 	mla	r0, r0, r3, r5
90024526:	1400      	asrs	r0, r0, #16
90024528:	f53f ae6a 	bmi.w	90024200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002452c:	3901      	subs	r1, #1
9002452e:	4288      	cmp	r0, r1
90024530:	f6bf ae66 	bge.w	90024200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024534:	9924      	ldr	r1, [sp, #144]	@ 0x90
90024536:	9822      	ldr	r0, [sp, #136]	@ 0x88
90024538:	fb01 0303 	mla	r3, r1, r3, r0
9002453c:	141b      	asrs	r3, r3, #16
9002453e:	f53f ae5f 	bmi.w	90024200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90024542:	3a01      	subs	r2, #1
90024544:	4293      	cmp	r3, r2
90024546:	f6bf ae5b 	bge.w	90024200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002454a:	9b08      	ldr	r3, [sp, #32]
9002454c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90024550:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90024554:	9313      	str	r3, [sp, #76]	@ 0x4c
90024556:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90024558:	2b00      	cmp	r3, #0
9002455a:	f300 8082 	bgt.w	90024662 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
9002455e:	9b08      	ldr	r3, [sp, #32]
90024560:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90024564:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024566:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002456a:	9309      	str	r3, [sp, #36]	@ 0x24
9002456c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002456e:	2b00      	cmp	r3, #0
90024570:	f340 81ef 	ble.w	90024952 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90024574:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024578:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002457a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002457e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024582:	eef0 6a62 	vmov.f32	s13, s5
90024586:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002458a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002458e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024592:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
90024596:	eef0 6a43 	vmov.f32	s13, s6
9002459a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002459e:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
900245a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900245a6:	ee61 7a27 	vmul.f32	s15, s2, s15
900245aa:	ee77 2a62 	vsub.f32	s5, s14, s5
900245ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
900245b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900245b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900245ba:	ee12 2a90 	vmov	r2, s5
900245be:	eef0 2a47 	vmov.f32	s5, s14
900245c2:	fb92 f3f3 	sdiv	r3, r2, r3
900245c6:	ee13 2a10 	vmov	r2, s6
900245ca:	9323      	str	r3, [sp, #140]	@ 0x8c
900245cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900245ce:	eeb0 3a67 	vmov.f32	s6, s15
900245d2:	fb92 f3f3 	sdiv	r3, r2, r3
900245d6:	9324      	str	r3, [sp, #144]	@ 0x90
900245d8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900245da:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900245dc:	3b01      	subs	r3, #1
900245de:	9311      	str	r3, [sp, #68]	@ 0x44
900245e0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900245e2:	bf08      	it	eq
900245e4:	4613      	moveq	r3, r2
900245e6:	9308      	str	r3, [sp, #32]
900245e8:	e5df      	b.n	900241aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900245ea:	fb08 f505 	mul.w	r5, r8, r5
900245ee:	fb09 5303 	mla	r3, r9, r3, r5
900245f2:	e65f      	b.n	900242b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
900245f4:	4681      	mov	r9, r0
900245f6:	e686      	b.n	90024306 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900245f8:	f1c1 0210 	rsb	r2, r1, #16
900245fc:	4341      	muls	r1, r0
900245fe:	fb09 1902 	mla	r9, r9, r2, r1
90024602:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024606:	ea4f 5259 	mov.w	r2, r9, lsr #21
9002460a:	ea4f 1959 	mov.w	r9, r9, lsr #5
9002460e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024612:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024616:	ea42 0909 	orr.w	r9, r2, r9
9002461a:	fa1f f289 	uxth.w	r2, r9
9002461e:	e71b      	b.n	90024458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90024620:	803a      	strh	r2, [r7, #0]
90024622:	e75d      	b.n	900244e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024624:	f115 0e01 	adds.w	lr, r5, #1
90024628:	f53f af5a 	bmi.w	900244e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002462c:	4572      	cmp	r2, lr
9002462e:	f6ff af57 	blt.w	900244e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024632:	f110 0e01 	adds.w	lr, r0, #1
90024636:	f53f af53 	bmi.w	900244e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002463a:	4573      	cmp	r3, lr
9002463c:	f6ff af50 	blt.w	900244e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024640:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90024642:	b21b      	sxth	r3, r3
90024644:	b212      	sxth	r2, r2
90024646:	9502      	str	r5, [sp, #8]
90024648:	9301      	str	r3, [sp, #4]
9002464a:	9200      	str	r2, [sp, #0]
9002464c:	e9cd 0103 	strd	r0, r1, [sp, #12]
90024650:	e9cd c405 	strd	ip, r4, [sp, #20]
90024654:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90024658:	4639      	mov	r1, r7
9002465a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9002465c:	f7ff fc02 	bl	90023e64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90024660:	e73e      	b.n	900244e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024662:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024664:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024668:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002466a:	f3c3 3503 	ubfx	r5, r3, #12, #4
9002466e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024670:	fa1f fc82 	uxth.w	ip, r2
90024674:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024678:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002467a:	ea4f 100c 	mov.w	r0, ip, lsl #4
9002467e:	141f      	asrs	r7, r3, #16
90024680:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024682:	141b      	asrs	r3, r3, #16
90024684:	fb01 3707 	mla	r7, r1, r7, r3
90024688:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002468a:	eb03 0a07 	add.w	sl, r3, r7
9002468e:	f813 9007 	ldrb.w	r9, [r3, r7]
90024692:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90024696:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002469a:	b29b      	uxth	r3, r3
9002469c:	2d00      	cmp	r5, #0
9002469e:	f000 813d 	beq.w	9002491c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
900246a2:	f81a 4001 	ldrb.w	r4, [sl, r1]
900246a6:	eb0a 0b01 	add.w	fp, sl, r1
900246aa:	fa1f fa85 	uxth.w	sl, r5
900246ae:	940f      	str	r4, [sp, #60]	@ 0x3c
900246b0:	fb0a fc0c 	mul.w	ip, sl, ip
900246b4:	f89b 4001 	ldrb.w	r4, [fp, #1]
900246b8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
900246bc:	eba0 000c 	sub.w	r0, r0, ip
900246c0:	9410      	str	r4, [sp, #64]	@ 0x40
900246c2:	fa1f fa8a 	uxth.w	sl, sl
900246c6:	b280      	uxth	r0, r0
900246c8:	eba3 030a 	sub.w	r3, r3, sl
900246cc:	fb08 f000 	mul.w	r0, r8, r0
900246d0:	b29b      	uxth	r3, r3
900246d2:	fb09 0303 	mla	r3, r9, r3, r0
900246d6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900246d8:	fb0a 3300 	mla	r3, sl, r0, r3
900246dc:	fb0c 3304 	mla	r3, ip, r4, r3
900246e0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900246e4:	2b00      	cmp	r3, #0
900246e6:	f000 810b 	beq.w	90024900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
900246ea:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900246ec:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900246f0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900246f2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900246f6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900246fa:	f000 8114 	beq.w	90024926 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
900246fe:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90024702:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024706:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002470a:	fb0a fc0c 	mul.w	ip, sl, ip
9002470e:	fb09 f707 	mul.w	r7, r9, r7
90024712:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90024716:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002471a:	f107 0b20 	add.w	fp, r7, #32
9002471e:	44cc      	add	ip, r9
90024720:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90024724:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024728:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002472c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90024730:	ea4c 0909 	orr.w	r9, ip, r9
90024734:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90024738:	8847      	ldrh	r7, [r0, #2]
9002473a:	d019      	beq.n	90024770 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
9002473c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90024740:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024744:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024748:	fb0a fc0c 	mul.w	ip, sl, ip
9002474c:	fb08 f807 	mul.w	r8, r8, r7
90024750:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90024754:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90024758:	f108 0b20 	add.w	fp, r8, #32
9002475c:	44bc      	add	ip, r7
9002475e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90024762:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024766:	0a3f      	lsrs	r7, r7, #8
90024768:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002476c:	ea4c 0707 	orr.w	r7, ip, r7
90024770:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90024774:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024778:	ea4f 4a07 	mov.w	sl, r7, lsl #16
9002477c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90024780:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90024784:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024788:	ea4c 0909 	orr.w	r9, ip, r9
9002478c:	ea4a 0707 	orr.w	r7, sl, r7
90024790:	2d00      	cmp	r5, #0
90024792:	f000 80ca 	beq.w	9002492a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90024796:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
9002479a:	3901      	subs	r1, #1
9002479c:	0049      	lsls	r1, r1, #1
9002479e:	3102      	adds	r1, #2
900247a0:	eb00 0c01 	add.w	ip, r0, r1
900247a4:	5a41      	ldrh	r1, [r0, r1]
900247a6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900247a8:	28ff      	cmp	r0, #255	@ 0xff
900247aa:	d019      	beq.n	900247e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
900247ac:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
900247b0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900247b2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900247b6:	ea4f 08e4 	mov.w	r8, r4, asr #3
900247ba:	fb04 fa01 	mul.w	sl, r4, r1
900247be:	fb08 f800 	mul.w	r8, r8, r0
900247c2:	f10a 0020 	add.w	r0, sl, #32
900247c6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900247ca:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900247ce:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900247d2:	4441      	add	r1, r8
900247d4:	0a00      	lsrs	r0, r0, #8
900247d6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900247da:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900247de:	4301      	orrs	r1, r0
900247e0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900247e2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900247e6:	2cff      	cmp	r4, #255	@ 0xff
900247e8:	d01a      	beq.n	90024820 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
900247ea:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
900247ee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900247f2:	ea4f 08e4 	mov.w	r8, r4, asr #3
900247f6:	fb04 fa00 	mul.w	sl, r4, r0
900247fa:	fb08 f80c 	mul.w	r8, r8, ip
900247fe:	f10a 0c20 	add.w	ip, sl, #32
90024802:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90024806:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002480a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
9002480e:	4440      	add	r0, r8
90024810:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024814:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90024818:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9002481c:	ea40 000c 	orr.w	r0, r0, ip
90024820:	fb15 fc02 	smulbb	ip, r5, r2
90024824:	f1c5 0810 	rsb	r8, r5, #16
90024828:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9002482c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90024830:	ea4f 0cec 	mov.w	ip, ip, asr #3
90024834:	eba8 0802 	sub.w	r8, r8, r2
90024838:	ea4f 4b00 	mov.w	fp, r0, lsl #16
9002483c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024840:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90024844:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024848:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
9002484c:	ea4a 0101 	orr.w	r1, sl, r1
90024850:	437a      	muls	r2, r7
90024852:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90024856:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002485a:	fb09 2208 	mla	r2, r9, r8, r2
9002485e:	ea4b 0000 	orr.w	r0, fp, r0
90024862:	fb05 2201 	mla	r2, r5, r1, r2
90024866:	fb0c 2200 	mla	r2, ip, r0, r2
9002486a:	0d57      	lsrs	r7, r2, #21
9002486c:	0952      	lsrs	r2, r2, #5
9002486e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024872:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024876:	433a      	orrs	r2, r7
90024878:	2bff      	cmp	r3, #255	@ 0xff
9002487a:	b292      	uxth	r2, r2
9002487c:	d102      	bne.n	90024884 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
9002487e:	9912      	ldr	r1, [sp, #72]	@ 0x48
90024880:	29ff      	cmp	r1, #255	@ 0xff
90024882:	d063      	beq.n	9002494c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90024884:	980a      	ldr	r0, [sp, #40]	@ 0x28
90024886:	1215      	asrs	r5, r2, #8
90024888:	f8be 1000 	ldrh.w	r1, [lr]
9002488c:	4343      	muls	r3, r0
9002488e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024890:	10cf      	asrs	r7, r1, #3
90024892:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024896:	1c58      	adds	r0, r3, #1
90024898:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002489c:	eb00 2323 	add.w	r3, r0, r3, asr #8
900248a0:	1208      	asrs	r0, r1, #8
900248a2:	ea6f 2323 	mvn.w	r3, r3, asr #8
900248a6:	00c9      	lsls	r1, r1, #3
900248a8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900248ac:	b2db      	uxtb	r3, r3
900248ae:	b2c9      	uxtb	r1, r1
900248b0:	fb10 f003 	smulbb	r0, r0, r3
900248b4:	fb11 f103 	smulbb	r1, r1, r3
900248b8:	fb05 0504 	mla	r5, r5, r4, r0
900248bc:	10d0      	asrs	r0, r2, #3
900248be:	fb17 f703 	smulbb	r7, r7, r3
900248c2:	00d2      	lsls	r2, r2, #3
900248c4:	b2ad      	uxth	r5, r5
900248c6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900248ca:	b2d2      	uxtb	r2, r2
900248cc:	fb00 7004 	mla	r0, r0, r4, r7
900248d0:	1c6b      	adds	r3, r5, #1
900248d2:	fb02 1204 	mla	r2, r2, r4, r1
900248d6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900248da:	b292      	uxth	r2, r2
900248dc:	b280      	uxth	r0, r0
900248de:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900248e2:	1c57      	adds	r7, r2, #1
900248e4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900248e8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900248ec:	433d      	orrs	r5, r7
900248ee:	1c47      	adds	r7, r0, #1
900248f0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
900248f4:	097f      	lsrs	r7, r7, #5
900248f6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900248fa:	433d      	orrs	r5, r7
900248fc:	f8ae 5000 	strh.w	r5, [lr]
90024900:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024902:	f10e 0e02 	add.w	lr, lr, #2
90024906:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90024908:	4413      	add	r3, r2
9002490a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9002490c:	9321      	str	r3, [sp, #132]	@ 0x84
9002490e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024910:	441a      	add	r2, r3
90024912:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90024914:	3b01      	subs	r3, #1
90024916:	9222      	str	r2, [sp, #136]	@ 0x88
90024918:	9313      	str	r3, [sp, #76]	@ 0x4c
9002491a:	e61c      	b.n	90024556 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
9002491c:	fb08 f000 	mul.w	r0, r8, r0
90024920:	fb09 0303 	mla	r3, r9, r3, r0
90024924:	e6dc      	b.n	900246e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90024926:	46b9      	mov	r9, r7
90024928:	e704      	b.n	90024734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
9002492a:	f1c2 0110 	rsb	r1, r2, #16
9002492e:	437a      	muls	r2, r7
90024930:	fb09 2901 	mla	r9, r9, r1, r2
90024934:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024938:	ea4f 5059 	mov.w	r0, r9, lsr #21
9002493c:	ea4f 1259 	mov.w	r2, r9, lsr #5
90024940:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024944:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024948:	4302      	orrs	r2, r0
9002494a:	e795      	b.n	90024878 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
9002494c:	f8ae 2000 	strh.w	r2, [lr]
90024950:	e7d6      	b.n	90024900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90024952:	b017      	add	sp, #92	@ 0x5c
90024954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024958 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90024958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002495c:	b085      	sub	sp, #20
9002495e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90024962:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90024966:	2800      	cmp	r0, #0
90024968:	9103      	str	r1, [sp, #12]
9002496a:	fb00 7406 	mla	r4, r0, r6, r7
9002496e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90024972:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90024976:	eb03 0544 	add.w	r5, r3, r4, lsl #1
9002497a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
9002497e:	eb02 0904 	add.w	r9, r2, r4
90024982:	9501      	str	r5, [sp, #4]
90024984:	f2c0 8141 	blt.w	90024c0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90024988:	4583      	cmp	fp, r0
9002498a:	f340 813e 	ble.w	90024c0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
9002498e:	2f00      	cmp	r7, #0
90024990:	f2c0 8137 	blt.w	90024c02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90024994:	42be      	cmp	r6, r7
90024996:	f340 8134 	ble.w	90024c02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
9002499a:	f812 c004 	ldrb.w	ip, [r2, r4]
9002499e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
900249a2:	f64f 041f 	movw	r4, #63519	@ 0xf81f
900249a6:	ea4f 02ec 	mov.w	r2, ip, asr #3
900249aa:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
900249ae:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900249b2:	4355      	muls	r5, r2
900249b4:	fb0c f203 	mul.w	r2, ip, r3
900249b8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900249bc:	f605 0501 	addw	r5, r5, #2049	@ 0x801
900249c0:	441d      	add	r5, r3
900249c2:	f102 0320 	add.w	r3, r2, #32
900249c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900249ca:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900249ce:	0a1b      	lsrs	r3, r3, #8
900249d0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900249d4:	431c      	orrs	r4, r3
900249d6:	1c7b      	adds	r3, r7, #1
900249d8:	f100 811c 	bmi.w	90024c14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900249dc:	429e      	cmp	r6, r3
900249de:	f340 8119 	ble.w	90024c14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900249e2:	2900      	cmp	r1, #0
900249e4:	f000 8119 	beq.w	90024c1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
900249e8:	9a01      	ldr	r2, [sp, #4]
900249ea:	f899 3001 	ldrb.w	r3, [r9, #1]
900249ee:	8855      	ldrh	r5, [r2, #2]
900249f0:	ea4f 08e3 	mov.w	r8, r3, asr #3
900249f4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
900249f8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900249fc:	fb08 f802 	mul.w	r8, r8, r2
90024a00:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90024a04:	435d      	muls	r5, r3
90024a06:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90024a0a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024a0e:	44d0      	add	r8, sl
90024a10:	f105 0a20 	add.w	sl, r5, #32
90024a14:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90024a18:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90024a1c:	0a2d      	lsrs	r5, r5, #8
90024a1e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024a22:	432a      	orrs	r2, r5
90024a24:	3001      	adds	r0, #1
90024a26:	f100 80fe 	bmi.w	90024c26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90024a2a:	4583      	cmp	fp, r0
90024a2c:	f340 80fb 	ble.w	90024c26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90024a30:	f1be 0f00 	cmp.w	lr, #0
90024a34:	f000 80fc 	beq.w	90024c30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90024a38:	2f00      	cmp	r7, #0
90024a3a:	f2c0 80f1 	blt.w	90024c20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90024a3e:	42be      	cmp	r6, r7
90024a40:	f340 80ee 	ble.w	90024c20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90024a44:	9801      	ldr	r0, [sp, #4]
90024a46:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90024a4a:	f819 5006 	ldrb.w	r5, [r9, r6]
90024a4e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90024a52:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90024a56:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90024a5a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90024a5e:	fb0a fa00 	mul.w	sl, sl, r0
90024a62:	fb05 f808 	mul.w	r8, r5, r8
90024a66:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90024a6a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90024a6e:	4482      	add	sl, r0
90024a70:	f108 0020 	add.w	r0, r8, #32
90024a74:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024a78:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90024a7c:	0a00      	lsrs	r0, r0, #8
90024a7e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024a82:	ea4b 0b00 	orr.w	fp, fp, r0
90024a86:	3701      	adds	r7, #1
90024a88:	f100 80d7 	bmi.w	90024c3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90024a8c:	42be      	cmp	r6, r7
90024a8e:	f340 80d4 	ble.w	90024c3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90024a92:	2900      	cmp	r1, #0
90024a94:	f000 80d4 	beq.w	90024c40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90024a98:	3601      	adds	r6, #1
90024a9a:	9801      	ldr	r0, [sp, #4]
90024a9c:	f819 7006 	ldrb.w	r7, [r9, r6]
90024aa0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90024aa4:	ea4f 09e7 	mov.w	r9, r7, asr #3
90024aa8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90024aac:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024ab0:	fb09 f906 	mul.w	r9, r9, r6
90024ab4:	fb07 f800 	mul.w	r8, r7, r0
90024ab8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90024abc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90024ac0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90024ac4:	44d1      	add	r9, sl
90024ac6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90024aca:	f108 0020 	add.w	r0, r8, #32
90024ace:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024ad2:	0a00      	lsrs	r0, r0, #8
90024ad4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024ad8:	4330      	orrs	r0, r6
90024ada:	b28e      	uxth	r6, r1
90024adc:	fa1f f98e 	uxth.w	r9, lr
90024ae0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90024ae4:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90024ae8:	fb06 f809 	mul.w	r8, r6, r9
90024aec:	0136      	lsls	r6, r6, #4
90024aee:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024af2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90024af6:	9601      	str	r6, [sp, #4]
90024af8:	ea4a 0404 	orr.w	r4, sl, r4
90024afc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024b00:	fa1f f689 	uxth.w	r6, r9
90024b04:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024b08:	fb11 f90e 	smulbb	r9, r1, lr
90024b0c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024b10:	9602      	str	r6, [sp, #8]
90024b12:	4626      	mov	r6, r4
90024b14:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90024b18:	f1ce 0410 	rsb	r4, lr, #16
90024b1c:	ea4a 0202 	orr.w	r2, sl, r2
90024b20:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024b24:	1a64      	subs	r4, r4, r1
90024b26:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90024b2a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024b2e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024b32:	434a      	muls	r2, r1
90024b34:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90024b38:	ea4a 0000 	orr.w	r0, sl, r0
90024b3c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90024b40:	fb04 2406 	mla	r4, r4, r6, r2
90024b44:	9903      	ldr	r1, [sp, #12]
90024b46:	fb09 4200 	mla	r2, r9, r0, r4
90024b4a:	ea4f 440b 	mov.w	r4, fp, lsl #16
90024b4e:	9801      	ldr	r0, [sp, #4]
90024b50:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90024b54:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90024b58:	8809      	ldrh	r1, [r1, #0]
90024b5a:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
90024b5e:	ea44 0b0b 	orr.w	fp, r4, fp
90024b62:	9c02      	ldr	r4, [sp, #8]
90024b64:	1b00      	subs	r0, r0, r4
90024b66:	9c01      	ldr	r4, [sp, #4]
90024b68:	fb0e 2e0b 	mla	lr, lr, fp, r2
90024b6c:	eba4 0608 	sub.w	r6, r4, r8
90024b70:	b280      	uxth	r0, r0
90024b72:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024b76:	b2b6      	uxth	r6, r6
90024b78:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024b7c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024b80:	4373      	muls	r3, r6
90024b82:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024b86:	fb0c 3300 	mla	r3, ip, r0, r3
90024b8a:	9802      	ldr	r0, [sp, #8]
90024b8c:	ea42 0e0e 	orr.w	lr, r2, lr
90024b90:	fb00 3505 	mla	r5, r0, r5, r3
90024b94:	120b      	asrs	r3, r1, #8
90024b96:	10c8      	asrs	r0, r1, #3
90024b98:	fb08 5707 	mla	r7, r8, r7, r5
90024b9c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90024ba0:	00c9      	lsls	r1, r1, #3
90024ba2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90024ba6:	ea6f 2727 	mvn.w	r7, r7, asr #8
90024baa:	fa1f f28e 	uxth.w	r2, lr
90024bae:	b2c9      	uxtb	r1, r1
90024bb0:	b2ff      	uxtb	r7, r7
90024bb2:	437b      	muls	r3, r7
90024bb4:	4378      	muls	r0, r7
90024bb6:	434f      	muls	r7, r1
90024bb8:	1c59      	adds	r1, r3, #1
90024bba:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90024bbe:	1213      	asrs	r3, r2, #8
90024bc0:	f023 0307 	bic.w	r3, r3, #7
90024bc4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90024bc8:	1c41      	adds	r1, r0, #1
90024bca:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90024bce:	10d1      	asrs	r1, r2, #3
90024bd0:	021b      	lsls	r3, r3, #8
90024bd2:	f021 0103 	bic.w	r1, r1, #3
90024bd6:	00d2      	lsls	r2, r2, #3
90024bd8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
90024bdc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90024be0:	00c9      	lsls	r1, r1, #3
90024be2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024be6:	430b      	orrs	r3, r1
90024be8:	1c79      	adds	r1, r7, #1
90024bea:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90024bee:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90024bf2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024bf6:	431a      	orrs	r2, r3
90024bf8:	9b03      	ldr	r3, [sp, #12]
90024bfa:	801a      	strh	r2, [r3, #0]
90024bfc:	b005      	add	sp, #20
90024bfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024c02:	f04f 0c00 	mov.w	ip, #0
90024c06:	4664      	mov	r4, ip
90024c08:	e6e5      	b.n	900249d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90024c0a:	2300      	movs	r3, #0
90024c0c:	469c      	mov	ip, r3
90024c0e:	461a      	mov	r2, r3
90024c10:	461c      	mov	r4, r3
90024c12:	e707      	b.n	90024a24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90024c14:	2300      	movs	r3, #0
90024c16:	461a      	mov	r2, r3
90024c18:	e704      	b.n	90024a24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90024c1a:	460b      	mov	r3, r1
90024c1c:	460a      	mov	r2, r1
90024c1e:	e701      	b.n	90024a24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90024c20:	2500      	movs	r5, #0
90024c22:	46ab      	mov	fp, r5
90024c24:	e72f      	b.n	90024a86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90024c26:	2700      	movs	r7, #0
90024c28:	463d      	mov	r5, r7
90024c2a:	4638      	mov	r0, r7
90024c2c:	46bb      	mov	fp, r7
90024c2e:	e754      	b.n	90024ada <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90024c30:	4677      	mov	r7, lr
90024c32:	4675      	mov	r5, lr
90024c34:	4670      	mov	r0, lr
90024c36:	46f3      	mov	fp, lr
90024c38:	e74f      	b.n	90024ada <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90024c3a:	2700      	movs	r7, #0
90024c3c:	4638      	mov	r0, r7
90024c3e:	e74c      	b.n	90024ada <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90024c40:	460f      	mov	r7, r1
90024c42:	4608      	mov	r0, r1
90024c44:	e749      	b.n	90024ada <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90024c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024c48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024c4c:	b093      	sub	sp, #76	@ 0x4c
90024c4e:	9210      	str	r2, [sp, #64]	@ 0x40
90024c50:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90024c52:	9011      	str	r0, [sp, #68]	@ 0x44
90024c54:	910e      	str	r1, [sp, #56]	@ 0x38
90024c56:	6850      	ldr	r0, [r2, #4]
90024c58:	9306      	str	r3, [sp, #24]
90024c5a:	6812      	ldr	r2, [r2, #0]
90024c5c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90024c60:	fb00 1303 	mla	r3, r0, r3, r1
90024c64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024c68:	9307      	str	r3, [sp, #28]
90024c6a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024c6c:	681b      	ldr	r3, [r3, #0]
90024c6e:	9308      	str	r3, [sp, #32]
90024c70:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024c72:	685b      	ldr	r3, [r3, #4]
90024c74:	9309      	str	r3, [sp, #36]	@ 0x24
90024c76:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024c78:	2b00      	cmp	r3, #0
90024c7a:	dc03      	bgt.n	90024c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90024c7c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024c7e:	2b00      	cmp	r3, #0
90024c80:	f340 83b6 	ble.w	900253f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90024c84:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024c86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024c8a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024c8e:	1e48      	subs	r0, r1, #1
90024c90:	1e55      	subs	r5, r2, #1
90024c92:	9b06      	ldr	r3, [sp, #24]
90024c94:	2b00      	cmp	r3, #0
90024c96:	f340 8165 	ble.w	90024f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90024c9a:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
90024c9c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024c9e:	1436      	asrs	r6, r6, #16
90024ca0:	ea4f 4323 	mov.w	r3, r3, asr #16
90024ca4:	d406      	bmi.n	90024cb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90024ca6:	4286      	cmp	r6, r0
90024ca8:	da04      	bge.n	90024cb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90024caa:	2b00      	cmp	r3, #0
90024cac:	db02      	blt.n	90024cb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90024cae:	42ab      	cmp	r3, r5
90024cb0:	f2c0 8159 	blt.w	90024f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90024cb4:	3601      	adds	r6, #1
90024cb6:	f100 8146 	bmi.w	90024f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90024cba:	42b1      	cmp	r1, r6
90024cbc:	f2c0 8143 	blt.w	90024f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90024cc0:	3301      	adds	r3, #1
90024cc2:	f100 8140 	bmi.w	90024f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90024cc6:	429a      	cmp	r2, r3
90024cc8:	f2c0 813d 	blt.w	90024f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90024ccc:	9b06      	ldr	r3, [sp, #24]
90024cce:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90024cd2:	9f07      	ldr	r7, [sp, #28]
90024cd4:	930f      	str	r3, [sp, #60]	@ 0x3c
90024cd6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90024cd8:	2b00      	cmp	r3, #0
90024cda:	f340 8166 	ble.w	90024faa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024cde:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024ce0:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90024ce2:	1418      	asrs	r0, r3, #16
90024ce4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90024ce6:	142d      	asrs	r5, r5, #16
90024ce8:	f3c3 3103 	ubfx	r1, r3, #12, #4
90024cec:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024cee:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90024cf2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024cf4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90024cf8:	f100 81f0 	bmi.w	900250dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90024cfc:	f102 3eff 	add.w	lr, r2, #4294967295
90024d00:	4575      	cmp	r5, lr
90024d02:	f280 81eb 	bge.w	900250dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90024d06:	2800      	cmp	r0, #0
90024d08:	f2c0 81e8 	blt.w	900250dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90024d0c:	f103 3eff 	add.w	lr, r3, #4294967295
90024d10:	4570      	cmp	r0, lr
90024d12:	f280 81e3 	bge.w	900250dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90024d16:	b212      	sxth	r2, r2
90024d18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024d1a:	fa1f fe81 	uxth.w	lr, r1
90024d1e:	fb00 5002 	mla	r0, r0, r2, r5
90024d22:	ea4f 150e 	mov.w	r5, lr, lsl #4
90024d26:	eb03 0a00 	add.w	sl, r3, r0
90024d2a:	f813 9000 	ldrb.w	r9, [r3, r0]
90024d2e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90024d32:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024d36:	b29b      	uxth	r3, r3
90024d38:	f1bc 0f00 	cmp.w	ip, #0
90024d3c:	f000 817b 	beq.w	90025036 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90024d40:	f81a 4002 	ldrb.w	r4, [sl, r2]
90024d44:	eb0a 0b02 	add.w	fp, sl, r2
90024d48:	fa1f fa8c 	uxth.w	sl, ip
90024d4c:	940a      	str	r4, [sp, #40]	@ 0x28
90024d4e:	fb0a fe0e 	mul.w	lr, sl, lr
90024d52:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024d56:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90024d5a:	eba5 050e 	sub.w	r5, r5, lr
90024d5e:	940b      	str	r4, [sp, #44]	@ 0x2c
90024d60:	fa1f fa8a 	uxth.w	sl, sl
90024d64:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024d66:	b2ad      	uxth	r5, r5
90024d68:	eba3 030a 	sub.w	r3, r3, sl
90024d6c:	fb08 f505 	mul.w	r5, r8, r5
90024d70:	b29b      	uxth	r3, r3
90024d72:	fb09 5303 	mla	r3, r9, r3, r5
90024d76:	fb0a 3304 	mla	r3, sl, r4, r3
90024d7a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024d7c:	fb0e 3304 	mla	r3, lr, r4, r3
90024d80:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024d84:	2b00      	cmp	r3, #0
90024d86:	f000 80d1 	beq.w	90024f2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90024d8a:	9c08      	ldr	r4, [sp, #32]
90024d8c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90024d90:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90024d94:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90024d98:	f000 8152 	beq.w	90025040 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90024d9c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90024da0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024da4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024da8:	fb0a fe0e 	mul.w	lr, sl, lr
90024dac:	fb09 f000 	mul.w	r0, r9, r0
90024db0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90024db4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90024db8:	f100 0b20 	add.w	fp, r0, #32
90024dbc:	44ce      	add	lr, r9
90024dbe:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90024dc2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024dc6:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024dca:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90024dce:	ea4e 0909 	orr.w	r9, lr, r9
90024dd2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90024dd6:	8868      	ldrh	r0, [r5, #2]
90024dd8:	d019      	beq.n	90024e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90024dda:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90024dde:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024de2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024de6:	fb0a fe0e 	mul.w	lr, sl, lr
90024dea:	fb08 f800 	mul.w	r8, r8, r0
90024dee:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90024df2:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90024df6:	f108 0b20 	add.w	fp, r8, #32
90024dfa:	4486      	add	lr, r0
90024dfc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90024e00:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024e04:	0a00      	lsrs	r0, r0, #8
90024e06:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024e0a:	ea4e 0000 	orr.w	r0, lr, r0
90024e0e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90024e12:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024e16:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024e1a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024e1e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90024e22:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024e26:	ea4e 0909 	orr.w	r9, lr, r9
90024e2a:	ea4a 0000 	orr.w	r0, sl, r0
90024e2e:	f1bc 0f00 	cmp.w	ip, #0
90024e32:	f000 8107 	beq.w	90025044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90024e36:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90024e3a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024e3c:	3a01      	subs	r2, #1
90024e3e:	2cff      	cmp	r4, #255	@ 0xff
90024e40:	ea4f 0242 	mov.w	r2, r2, lsl #1
90024e44:	f102 0202 	add.w	r2, r2, #2
90024e48:	eb05 0e02 	add.w	lr, r5, r2
90024e4c:	5aaa      	ldrh	r2, [r5, r2]
90024e4e:	d018      	beq.n	90024e82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90024e50:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90024e54:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024e58:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024e5c:	fb04 fa02 	mul.w	sl, r4, r2
90024e60:	fb08 f805 	mul.w	r8, r8, r5
90024e64:	f10a 0520 	add.w	r5, sl, #32
90024e68:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90024e6c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024e70:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90024e74:	4442      	add	r2, r8
90024e76:	0a2d      	lsrs	r5, r5, #8
90024e78:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90024e7c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024e80:	432a      	orrs	r2, r5
90024e82:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024e84:	f8be 5002 	ldrh.w	r5, [lr, #2]
90024e88:	2cff      	cmp	r4, #255	@ 0xff
90024e8a:	d01a      	beq.n	90024ec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90024e8c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90024e90:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024e94:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024e98:	fb04 fa05 	mul.w	sl, r4, r5
90024e9c:	fb08 f80e 	mul.w	r8, r8, lr
90024ea0:	f10a 0e20 	add.w	lr, sl, #32
90024ea4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90024ea8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024eac:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90024eb0:	4445      	add	r5, r8
90024eb2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024eb6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90024eba:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90024ebe:	ea45 050e 	orr.w	r5, r5, lr
90024ec2:	fb1c fe01 	smulbb	lr, ip, r1
90024ec6:	f1cc 0810 	rsb	r8, ip, #16
90024eca:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024ece:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024ed2:	ea4f 0eee 	mov.w	lr, lr, asr #3
90024ed6:	eba8 0801 	sub.w	r8, r8, r1
90024eda:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90024ede:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024ee2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90024ee6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90024eea:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90024eee:	ea4a 0202 	orr.w	r2, sl, r2
90024ef2:	4341      	muls	r1, r0
90024ef4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90024ef8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90024efc:	fb09 1108 	mla	r1, r9, r8, r1
90024f00:	ea4b 0505 	orr.w	r5, fp, r5
90024f04:	fb0c 1102 	mla	r1, ip, r2, r1
90024f08:	fb0e 1e05 	mla	lr, lr, r5, r1
90024f0c:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024f10:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024f14:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024f18:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024f1c:	ea42 0e0e 	orr.w	lr, r2, lr
90024f20:	fa1f f28e 	uxth.w	r2, lr
90024f24:	2bff      	cmp	r3, #255	@ 0xff
90024f26:	f040 80a1 	bne.w	9002506c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90024f2a:	803a      	strh	r2, [r7, #0]
90024f2c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90024f2e:	3702      	adds	r7, #2
90024f30:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90024f32:	4413      	add	r3, r2
90024f34:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90024f36:	931d      	str	r3, [sp, #116]	@ 0x74
90024f38:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024f3a:	441a      	add	r2, r3
90024f3c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90024f3e:	3b01      	subs	r3, #1
90024f40:	921e      	str	r2, [sp, #120]	@ 0x78
90024f42:	930f      	str	r3, [sp, #60]	@ 0x3c
90024f44:	e6c7      	b.n	90024cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024f46:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90024f48:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90024f4a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
90024f4c:	4433      	add	r3, r6
90024f4e:	931d      	str	r3, [sp, #116]	@ 0x74
90024f50:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024f52:	441c      	add	r4, r3
90024f54:	9b06      	ldr	r3, [sp, #24]
90024f56:	3b01      	subs	r3, #1
90024f58:	941e      	str	r4, [sp, #120]	@ 0x78
90024f5a:	9306      	str	r3, [sp, #24]
90024f5c:	9b07      	ldr	r3, [sp, #28]
90024f5e:	3302      	adds	r3, #2
90024f60:	9307      	str	r3, [sp, #28]
90024f62:	e696      	b.n	90024c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90024f64:	d028      	beq.n	90024fb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024f66:	9b06      	ldr	r3, [sp, #24]
90024f68:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90024f6a:	3b01      	subs	r3, #1
90024f6c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90024f6e:	fb00 5003 	mla	r0, r0, r3, r5
90024f72:	1400      	asrs	r0, r0, #16
90024f74:	f53f aeaa 	bmi.w	90024ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90024f78:	3901      	subs	r1, #1
90024f7a:	4288      	cmp	r0, r1
90024f7c:	f6bf aea6 	bge.w	90024ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90024f80:	9920      	ldr	r1, [sp, #128]	@ 0x80
90024f82:	981e      	ldr	r0, [sp, #120]	@ 0x78
90024f84:	fb01 0303 	mla	r3, r1, r3, r0
90024f88:	141b      	asrs	r3, r3, #16
90024f8a:	f53f ae9f 	bmi.w	90024ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90024f8e:	3a01      	subs	r2, #1
90024f90:	4293      	cmp	r3, r2
90024f92:	f6bf ae9b 	bge.w	90024ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90024f96:	9b06      	ldr	r3, [sp, #24]
90024f98:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90024f9c:	f8dd e01c 	ldr.w	lr, [sp, #28]
90024fa0:	930f      	str	r3, [sp, #60]	@ 0x3c
90024fa2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90024fa4:	2b00      	cmp	r3, #0
90024fa6:	f300 80b6 	bgt.w	90025116 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90024faa:	9b06      	ldr	r3, [sp, #24]
90024fac:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90024fb0:	9b07      	ldr	r3, [sp, #28]
90024fb2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90024fb6:	9307      	str	r3, [sp, #28]
90024fb8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024fba:	2b00      	cmp	r3, #0
90024fbc:	f340 8218 	ble.w	900253f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90024fc0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024fc4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024fc6:	ee30 0a04 	vadd.f32	s0, s0, s8
90024fca:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024fce:	eef0 6a62 	vmov.f32	s13, s5
90024fd2:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024fd6:	ee31 1a05 	vadd.f32	s2, s2, s10
90024fda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024fde:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
90024fe2:	eef0 6a43 	vmov.f32	s13, s6
90024fe6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024fea:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
90024fee:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024ff2:	ee61 7a27 	vmul.f32	s15, s2, s15
90024ff6:	ee77 2a62 	vsub.f32	s5, s14, s5
90024ffa:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024ffe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025002:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025006:	ee12 2a90 	vmov	r2, s5
9002500a:	eef0 2a47 	vmov.f32	s5, s14
9002500e:	fb92 f3f3 	sdiv	r3, r2, r3
90025012:	ee13 2a10 	vmov	r2, s6
90025016:	931f      	str	r3, [sp, #124]	@ 0x7c
90025018:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002501a:	eeb0 3a67 	vmov.f32	s6, s15
9002501e:	fb92 f3f3 	sdiv	r3, r2, r3
90025022:	9320      	str	r3, [sp, #128]	@ 0x80
90025024:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90025026:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90025028:	3b01      	subs	r3, #1
9002502a:	930e      	str	r3, [sp, #56]	@ 0x38
9002502c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002502e:	bf08      	it	eq
90025030:	4613      	moveq	r3, r2
90025032:	9306      	str	r3, [sp, #24]
90025034:	e61f      	b.n	90024c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90025036:	fb08 f505 	mul.w	r5, r8, r5
9002503a:	fb09 5303 	mla	r3, r9, r3, r5
9002503e:	e69f      	b.n	90024d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90025040:	4681      	mov	r9, r0
90025042:	e6c6      	b.n	90024dd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90025044:	f1c1 0210 	rsb	r2, r1, #16
90025048:	4341      	muls	r1, r0
9002504a:	fb09 1902 	mla	r9, r9, r2, r1
9002504e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90025052:	ea4f 5259 	mov.w	r2, r9, lsr #21
90025056:	ea4f 1959 	mov.w	r9, r9, lsr #5
9002505a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002505e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90025062:	ea42 0909 	orr.w	r9, r2, r9
90025066:	fa1f f289 	uxth.w	r2, r9
9002506a:	e75b      	b.n	90024f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
9002506c:	f8b7 c000 	ldrh.w	ip, [r7]
90025070:	43db      	mvns	r3, r3
90025072:	ea4f 202c 	mov.w	r0, ip, asr #8
90025076:	fa5f fe83 	uxtb.w	lr, r3
9002507a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002507e:	ea4f 05ec 	mov.w	r5, ip, asr #3
90025082:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90025086:	fb00 f00e 	mul.w	r0, r0, lr
9002508a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9002508e:	b2db      	uxtb	r3, r3
90025090:	1c41      	adds	r1, r0, #1
90025092:	fb05 f50e 	mul.w	r5, r5, lr
90025096:	fb03 f30e 	mul.w	r3, r3, lr
9002509a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002509e:	1211      	asrs	r1, r2, #8
900250a0:	f021 0107 	bic.w	r1, r1, #7
900250a4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900250a8:	48d3      	ldr	r0, [pc, #844]	@ (900253f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
900250aa:	b2c9      	uxtb	r1, r1
900250ac:	ea00 2001 	and.w	r0, r0, r1, lsl #8
900250b0:	1c69      	adds	r1, r5, #1
900250b2:	eb01 2515 	add.w	r5, r1, r5, lsr #8
900250b6:	10d1      	asrs	r1, r2, #3
900250b8:	00d2      	lsls	r2, r2, #3
900250ba:	f021 0103 	bic.w	r1, r1, #3
900250be:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900250c2:	00c9      	lsls	r1, r1, #3
900250c4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900250c8:	4301      	orrs	r1, r0
900250ca:	1c58      	adds	r0, r3, #1
900250cc:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900250d0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900250d4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900250d8:	430a      	orrs	r2, r1
900250da:	e726      	b.n	90024f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
900250dc:	f115 0e01 	adds.w	lr, r5, #1
900250e0:	f53f af24 	bmi.w	90024f2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900250e4:	4572      	cmp	r2, lr
900250e6:	f6ff af21 	blt.w	90024f2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900250ea:	f110 0e01 	adds.w	lr, r0, #1
900250ee:	f53f af1d 	bmi.w	90024f2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900250f2:	4573      	cmp	r3, lr
900250f4:	f6ff af1a 	blt.w	90024f2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900250f8:	b21b      	sxth	r3, r3
900250fa:	b212      	sxth	r2, r2
900250fc:	9301      	str	r3, [sp, #4]
900250fe:	9200      	str	r2, [sp, #0]
90025100:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90025104:	e9cd 5002 	strd	r5, r0, [sp, #8]
90025108:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
9002510c:	4639      	mov	r1, r7
9002510e:	9811      	ldr	r0, [sp, #68]	@ 0x44
90025110:	f7ff fc22 	bl	90024958 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90025114:	e70a      	b.n	90024f2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025116:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025118:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002511c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002511e:	f3c3 3503 	ubfx	r5, r3, #12, #4
90025122:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025124:	fa1f fc82 	uxth.w	ip, r2
90025128:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002512c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002512e:	ea4f 100c 	mov.w	r0, ip, lsl #4
90025132:	141f      	asrs	r7, r3, #16
90025134:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025136:	141b      	asrs	r3, r3, #16
90025138:	fb01 3707 	mla	r7, r1, r7, r3
9002513c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002513e:	eb03 0a07 	add.w	sl, r3, r7
90025142:	f813 9007 	ldrb.w	r9, [r3, r7]
90025146:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
9002514a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002514e:	b29b      	uxth	r3, r3
90025150:	2d00      	cmp	r5, #0
90025152:	f000 80fe 	beq.w	90025352 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90025156:	f81a 4001 	ldrb.w	r4, [sl, r1]
9002515a:	eb0a 0b01 	add.w	fp, sl, r1
9002515e:	fa1f fa85 	uxth.w	sl, r5
90025162:	940c      	str	r4, [sp, #48]	@ 0x30
90025164:	fb0a fc0c 	mul.w	ip, sl, ip
90025168:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002516c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90025170:	eba0 000c 	sub.w	r0, r0, ip
90025174:	940d      	str	r4, [sp, #52]	@ 0x34
90025176:	fa1f fa8a 	uxth.w	sl, sl
9002517a:	b280      	uxth	r0, r0
9002517c:	eba3 030a 	sub.w	r3, r3, sl
90025180:	fb08 f000 	mul.w	r0, r8, r0
90025184:	b29b      	uxth	r3, r3
90025186:	fb09 0303 	mla	r3, r9, r3, r0
9002518a:	980c      	ldr	r0, [sp, #48]	@ 0x30
9002518c:	fb0a 3300 	mla	r3, sl, r0, r3
90025190:	fb0c 3304 	mla	r3, ip, r4, r3
90025194:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025198:	2b00      	cmp	r3, #0
9002519a:	f000 80cc 	beq.w	90025336 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
9002519e:	9808      	ldr	r0, [sp, #32]
900251a0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900251a4:	9c08      	ldr	r4, [sp, #32]
900251a6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900251aa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900251ae:	f000 80d5 	beq.w	9002535c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
900251b2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900251b6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900251ba:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900251be:	fb0a fc0c 	mul.w	ip, sl, ip
900251c2:	fb09 f707 	mul.w	r7, r9, r7
900251c6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900251ca:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900251ce:	f107 0b20 	add.w	fp, r7, #32
900251d2:	44cc      	add	ip, r9
900251d4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900251d8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900251dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
900251e0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900251e4:	ea4c 0909 	orr.w	r9, ip, r9
900251e8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900251ec:	8847      	ldrh	r7, [r0, #2]
900251ee:	d019      	beq.n	90025224 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
900251f0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900251f4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900251f8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900251fc:	fb0a fc0c 	mul.w	ip, sl, ip
90025200:	fb08 f807 	mul.w	r8, r8, r7
90025204:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90025208:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002520c:	f108 0b20 	add.w	fp, r8, #32
90025210:	44bc      	add	ip, r7
90025212:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90025216:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002521a:	0a3f      	lsrs	r7, r7, #8
9002521c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025220:	ea4c 0707 	orr.w	r7, ip, r7
90025224:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90025228:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002522c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90025230:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90025234:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90025238:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002523c:	ea4c 0909 	orr.w	r9, ip, r9
90025240:	ea4a 0707 	orr.w	r7, sl, r7
90025244:	2d00      	cmp	r5, #0
90025246:	f000 808b 	beq.w	90025360 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
9002524a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
9002524e:	3901      	subs	r1, #1
90025250:	0049      	lsls	r1, r1, #1
90025252:	3102      	adds	r1, #2
90025254:	eb00 0c01 	add.w	ip, r0, r1
90025258:	5a41      	ldrh	r1, [r0, r1]
9002525a:	980c      	ldr	r0, [sp, #48]	@ 0x30
9002525c:	28ff      	cmp	r0, #255	@ 0xff
9002525e:	d019      	beq.n	90025294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90025260:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90025264:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90025266:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002526a:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002526e:	fb04 fa01 	mul.w	sl, r4, r1
90025272:	fb08 f800 	mul.w	r8, r8, r0
90025276:	f10a 0020 	add.w	r0, sl, #32
9002527a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
9002527e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90025282:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90025286:	4441      	add	r1, r8
90025288:	0a00      	lsrs	r0, r0, #8
9002528a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
9002528e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025292:	4301      	orrs	r1, r0
90025294:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025296:	f8bc 0002 	ldrh.w	r0, [ip, #2]
9002529a:	2cff      	cmp	r4, #255	@ 0xff
9002529c:	d01a      	beq.n	900252d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
9002529e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
900252a2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900252a6:	ea4f 08e4 	mov.w	r8, r4, asr #3
900252aa:	fb04 fa00 	mul.w	sl, r4, r0
900252ae:	fb08 f80c 	mul.w	r8, r8, ip
900252b2:	f10a 0c20 	add.w	ip, sl, #32
900252b6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
900252ba:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900252be:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
900252c2:	4440      	add	r0, r8
900252c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900252c8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900252cc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900252d0:	ea40 000c 	orr.w	r0, r0, ip
900252d4:	fb15 fc02 	smulbb	ip, r5, r2
900252d8:	f1c5 0810 	rsb	r8, r5, #16
900252dc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900252e0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900252e4:	ea4f 0cec 	mov.w	ip, ip, asr #3
900252e8:	eba8 0802 	sub.w	r8, r8, r2
900252ec:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900252f0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900252f4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
900252f8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900252fc:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90025300:	ea4a 0101 	orr.w	r1, sl, r1
90025304:	437a      	muls	r2, r7
90025306:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002530a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002530e:	fb09 2208 	mla	r2, r9, r8, r2
90025312:	ea4b 0000 	orr.w	r0, fp, r0
90025316:	fb05 2201 	mla	r2, r5, r1, r2
9002531a:	fb0c 2200 	mla	r2, ip, r0, r2
9002531e:	0d57      	lsrs	r7, r2, #21
90025320:	0952      	lsrs	r2, r2, #5
90025322:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90025326:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002532a:	433a      	orrs	r2, r7
9002532c:	2bff      	cmp	r3, #255	@ 0xff
9002532e:	b292      	uxth	r2, r2
90025330:	d127      	bne.n	90025382 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90025332:	f8ae 2000 	strh.w	r2, [lr]
90025336:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025338:	f10e 0e02 	add.w	lr, lr, #2
9002533c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
9002533e:	4413      	add	r3, r2
90025340:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90025342:	931d      	str	r3, [sp, #116]	@ 0x74
90025344:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025346:	441a      	add	r2, r3
90025348:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002534a:	3b01      	subs	r3, #1
9002534c:	921e      	str	r2, [sp, #120]	@ 0x78
9002534e:	930f      	str	r3, [sp, #60]	@ 0x3c
90025350:	e627      	b.n	90024fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90025352:	fb08 f000 	mul.w	r0, r8, r0
90025356:	fb09 0303 	mla	r3, r9, r3, r0
9002535a:	e71b      	b.n	90025194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
9002535c:	46b9      	mov	r9, r7
9002535e:	e743      	b.n	900251e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90025360:	f1c2 0110 	rsb	r1, r2, #16
90025364:	437a      	muls	r2, r7
90025366:	fb09 2901 	mla	r9, r9, r1, r2
9002536a:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002536e:	ea4f 5059 	mov.w	r0, r9, lsr #21
90025372:	ea4f 1259 	mov.w	r2, r9, lsr #5
90025376:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002537a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002537e:	4302      	orrs	r2, r0
90025380:	e7d4      	b.n	9002532c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90025382:	f8be 7000 	ldrh.w	r7, [lr]
90025386:	43db      	mvns	r3, r3
90025388:	4c1b      	ldr	r4, [pc, #108]	@ (900253f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
9002538a:	1238      	asrs	r0, r7, #8
9002538c:	fa5f fc83 	uxtb.w	ip, r3
90025390:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025394:	10fd      	asrs	r5, r7, #3
90025396:	00fb      	lsls	r3, r7, #3
90025398:	fb00 f00c 	mul.w	r0, r0, ip
9002539c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900253a0:	b2db      	uxtb	r3, r3
900253a2:	fb05 f10c 	mul.w	r1, r5, ip
900253a6:	1c45      	adds	r5, r0, #1
900253a8:	fb03 f30c 	mul.w	r3, r3, ip
900253ac:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900253b0:	1215      	asrs	r5, r2, #8
900253b2:	f025 0507 	bic.w	r5, r5, #7
900253b6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900253ba:	1c4d      	adds	r5, r1, #1
900253bc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900253c0:	10d1      	asrs	r1, r2, #3
900253c2:	b2c0      	uxtb	r0, r0
900253c4:	f021 0103 	bic.w	r1, r1, #3
900253c8:	00d2      	lsls	r2, r2, #3
900253ca:	ea04 2000 	and.w	r0, r4, r0, lsl #8
900253ce:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900253d2:	00c9      	lsls	r1, r1, #3
900253d4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900253d8:	4308      	orrs	r0, r1
900253da:	1c59      	adds	r1, r3, #1
900253dc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900253e0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900253e4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
900253e8:	4318      	orrs	r0, r3
900253ea:	f8ae 0000 	strh.w	r0, [lr]
900253ee:	e7a2      	b.n	90025336 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
900253f0:	b013      	add	sp, #76	@ 0x4c
900253f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900253f6:	bf00      	nop
900253f8:	fffff800 	.word	0xfffff800

900253fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
900253fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90025400:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
90025404:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90025408:	fb05 4c03 	mla	ip, r5, r3, r4
9002540c:	2d00      	cmp	r5, #0
9002540e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
90025412:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90025416:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
9002541a:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
9002541e:	8808      	ldrh	r0, [r1, #0]
90025420:	f2c0 80a7 	blt.w	90025572 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90025424:	45aa      	cmp	sl, r5
90025426:	f340 80a4 	ble.w	90025572 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
9002542a:	2c00      	cmp	r4, #0
9002542c:	f2c0 809f 	blt.w	9002556e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90025430:	42a3      	cmp	r3, r4
90025432:	f340 809c 	ble.w	9002556e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90025436:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
9002543a:	1c62      	adds	r2, r4, #1
9002543c:	f100 809c 	bmi.w	90025578 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025440:	4293      	cmp	r3, r2
90025442:	f340 8099 	ble.w	90025578 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90025446:	f1b9 0f00 	cmp.w	r9, #0
9002544a:	f000 8095 	beq.w	90025578 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002544e:	f8be c002 	ldrh.w	ip, [lr, #2]
90025452:	3501      	adds	r5, #1
90025454:	f100 8094 	bmi.w	90025580 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025458:	45aa      	cmp	sl, r5
9002545a:	f340 8091 	ble.w	90025580 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
9002545e:	2f00      	cmp	r7, #0
90025460:	f000 808e 	beq.w	90025580 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90025464:	2c00      	cmp	r4, #0
90025466:	f2c0 8089 	blt.w	9002557c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
9002546a:	42a3      	cmp	r3, r4
9002546c:	f340 8086 	ble.w	9002557c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90025470:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90025474:	3401      	adds	r4, #1
90025476:	f100 8086 	bmi.w	90025586 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002547a:	42a3      	cmp	r3, r4
9002547c:	f340 8083 	ble.w	90025586 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025480:	f1b9 0f00 	cmp.w	r9, #0
90025484:	d07f      	beq.n	90025586 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90025486:	3301      	adds	r3, #1
90025488:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
9002548c:	ea4f 4408 	mov.w	r4, r8, lsl #16
90025490:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90025494:	fb19 fe07 	smulbb	lr, r9, r7
90025498:	f1c7 0210 	rsb	r2, r7, #16
9002549c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
900254a0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
900254a4:	eba2 0209 	sub.w	r2, r2, r9
900254a8:	ea44 0808 	orr.w	r8, r4, r8
900254ac:	ea4f 440c 	mov.w	r4, ip, lsl #16
900254b0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900254b4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
900254b8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
900254bc:	ebce 0747 	rsb	r7, lr, r7, lsl #1
900254c0:	ea44 0c0c 	orr.w	ip, r4, ip
900254c4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
900254c8:	fb04 f40c 	mul.w	r4, r4, ip
900254cc:	fb02 4808 	mla	r8, r2, r8, r4
900254d0:	041a      	lsls	r2, r3, #16
900254d2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900254d6:	b2b4      	uxth	r4, r6
900254d8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900254dc:	43f6      	mvns	r6, r6
900254de:	4313      	orrs	r3, r2
900254e0:	042a      	lsls	r2, r5, #16
900254e2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900254e6:	b2f6      	uxtb	r6, r6
900254e8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900254ec:	fb0e 8303 	mla	r3, lr, r3, r8
900254f0:	432a      	orrs	r2, r5
900254f2:	fb07 3202 	mla	r2, r7, r2, r3
900254f6:	10c7      	asrs	r7, r0, #3
900254f8:	0d53      	lsrs	r3, r2, #21
900254fa:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900254fe:	0952      	lsrs	r2, r2, #5
90025500:	fb17 f706 	smulbb	r7, r7, r6
90025504:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025508:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002550c:	431a      	orrs	r2, r3
9002550e:	b293      	uxth	r3, r2
90025510:	1202      	asrs	r2, r0, #8
90025512:	121d      	asrs	r5, r3, #8
90025514:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90025518:	00c0      	lsls	r0, r0, #3
9002551a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002551e:	fb12 f206 	smulbb	r2, r2, r6
90025522:	b2c0      	uxtb	r0, r0
90025524:	fb05 2504 	mla	r5, r5, r4, r2
90025528:	10da      	asrs	r2, r3, #3
9002552a:	fb10 f006 	smulbb	r0, r0, r6
9002552e:	00db      	lsls	r3, r3, #3
90025530:	b2ad      	uxth	r5, r5
90025532:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025536:	b2db      	uxtb	r3, r3
90025538:	fb02 7204 	mla	r2, r2, r4, r7
9002553c:	fb03 0004 	mla	r0, r3, r4, r0
90025540:	1c6b      	adds	r3, r5, #1
90025542:	b292      	uxth	r2, r2
90025544:	b280      	uxth	r0, r0
90025546:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002554a:	1c43      	adds	r3, r0, #1
9002554c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90025550:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90025554:	1c50      	adds	r0, r2, #1
90025556:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002555a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002555e:	0952      	lsrs	r2, r2, #5
90025560:	432b      	orrs	r3, r5
90025562:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025566:	4313      	orrs	r3, r2
90025568:	800b      	strh	r3, [r1, #0]
9002556a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002556e:	4680      	mov	r8, r0
90025570:	e763      	b.n	9002543a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90025572:	4684      	mov	ip, r0
90025574:	4680      	mov	r8, r0
90025576:	e76c      	b.n	90025452 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90025578:	4684      	mov	ip, r0
9002557a:	e76a      	b.n	90025452 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
9002557c:	4605      	mov	r5, r0
9002557e:	e779      	b.n	90025474 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90025580:	4603      	mov	r3, r0
90025582:	4605      	mov	r5, r0
90025584:	e782      	b.n	9002548c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
90025586:	4603      	mov	r3, r0
90025588:	e780      	b.n	9002548c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

9002558a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002558a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002558e:	b093      	sub	sp, #76	@ 0x4c
90025590:	461d      	mov	r5, r3
90025592:	9210      	str	r2, [sp, #64]	@ 0x40
90025594:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90025596:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
9002559a:	910a      	str	r1, [sp, #40]	@ 0x28
9002559c:	920b      	str	r2, [sp, #44]	@ 0x2c
9002559e:	6859      	ldr	r1, [r3, #4]
900255a0:	681b      	ldr	r3, [r3, #0]
900255a2:	9011      	str	r0, [sp, #68]	@ 0x44
900255a4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
900255a8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
900255ac:	fb01 2707 	mla	r7, r1, r7, r2
900255b0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
900255b4:	9307      	str	r3, [sp, #28]
900255b6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900255b8:	681b      	ldr	r3, [r3, #0]
900255ba:	9309      	str	r3, [sp, #36]	@ 0x24
900255bc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900255be:	43db      	mvns	r3, r3
900255c0:	b2db      	uxtb	r3, r3
900255c2:	9308      	str	r3, [sp, #32]
900255c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900255c6:	2b00      	cmp	r3, #0
900255c8:	dc03      	bgt.n	900255d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900255ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900255cc:	2b00      	cmp	r3, #0
900255ce:	f340 8205 	ble.w	900259dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900255d2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900255d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900255d8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900255dc:	1e48      	subs	r0, r1, #1
900255de:	f102 3cff 	add.w	ip, r2, #4294967295
900255e2:	2d00      	cmp	r5, #0
900255e4:	f340 80da 	ble.w	9002579c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
900255e8:	ea5f 4e24 	movs.w	lr, r4, asr #16
900255ec:	ea4f 4326 	mov.w	r3, r6, asr #16
900255f0:	d406      	bmi.n	90025600 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900255f2:	4586      	cmp	lr, r0
900255f4:	da04      	bge.n	90025600 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900255f6:	2b00      	cmp	r3, #0
900255f8:	db02      	blt.n	90025600 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900255fa:	4563      	cmp	r3, ip
900255fc:	f2c0 80cf 	blt.w	9002579e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90025600:	f11e 0e01 	adds.w	lr, lr, #1
90025604:	f100 80c1 	bmi.w	9002578a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025608:	4571      	cmp	r1, lr
9002560a:	f2c0 80be 	blt.w	9002578a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002560e:	3301      	adds	r3, #1
90025610:	f100 80bb 	bmi.w	9002578a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025614:	429a      	cmp	r2, r3
90025616:	f2c0 80b8 	blt.w	9002578a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002561a:	46a9      	mov	r9, r5
9002561c:	f8dd 801c 	ldr.w	r8, [sp, #28]
90025620:	f1b9 0f00 	cmp.w	r9, #0
90025624:	f340 80d8 	ble.w	900257d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90025628:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002562a:	1421      	asrs	r1, r4, #16
9002562c:	ea4f 4026 	mov.w	r0, r6, asr #16
90025630:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025634:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90025638:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
9002563c:	f100 8112 	bmi.w	90025864 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025640:	f10e 3aff 	add.w	sl, lr, #4294967295
90025644:	4551      	cmp	r1, sl
90025646:	f280 810d 	bge.w	90025864 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002564a:	2800      	cmp	r0, #0
9002564c:	f2c0 810a 	blt.w	90025864 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025650:	f103 3aff 	add.w	sl, r3, #4294967295
90025654:	4550      	cmp	r0, sl
90025656:	f280 8105 	bge.w	90025864 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002565a:	fa0f f38e 	sxth.w	r3, lr
9002565e:	fb00 1103 	mla	r1, r0, r3, r1
90025662:	9809      	ldr	r0, [sp, #36]	@ 0x24
90025664:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90025668:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
9002566c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90025670:	f1bc 0f00 	cmp.w	ip, #0
90025674:	d007      	beq.n	90025686 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90025676:	005b      	lsls	r3, r3, #1
90025678:	eb0a 0003 	add.w	r0, sl, r3
9002567c:	f83a 3003 	ldrh.w	r3, [sl, r3]
90025680:	930c      	str	r3, [sp, #48]	@ 0x30
90025682:	8843      	ldrh	r3, [r0, #2]
90025684:	930d      	str	r3, [sp, #52]	@ 0x34
90025686:	ea4f 400e 	mov.w	r0, lr, lsl #16
9002568a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002568e:	fb12 f30c 	smulbb	r3, r2, ip
90025692:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025696:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002569a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9002569e:	10db      	asrs	r3, r3, #3
900256a0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900256a4:	ea40 000e 	orr.w	r0, r0, lr
900256a8:	f1cc 0e10 	rsb	lr, ip, #16
900256ac:	ea4a 0101 	orr.w	r1, sl, r1
900256b0:	9f08      	ldr	r7, [sp, #32]
900256b2:	ebae 0e02 	sub.w	lr, lr, r2
900256b6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900256ba:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900256be:	4351      	muls	r1, r2
900256c0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
900256c2:	fb0e 1e00 	mla	lr, lr, r0, r1
900256c6:	990c      	ldr	r1, [sp, #48]	@ 0x30
900256c8:	0410      	lsls	r0, r2, #16
900256ca:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900256ce:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900256d2:	4310      	orrs	r0, r2
900256d4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900256d6:	0412      	lsls	r2, r2, #16
900256d8:	fb03 e000 	mla	r0, r3, r0, lr
900256dc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
900256e0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900256e4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900256e8:	ea42 020e 	orr.w	r2, r2, lr
900256ec:	fb03 0302 	mla	r3, r3, r2, r0
900256f0:	f8b8 0000 	ldrh.w	r0, [r8]
900256f4:	0d5a      	lsrs	r2, r3, #21
900256f6:	095b      	lsrs	r3, r3, #5
900256f8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900256fc:	1201      	asrs	r1, r0, #8
900256fe:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90025702:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90025706:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002570a:	00c0      	lsls	r0, r0, #3
9002570c:	4313      	orrs	r3, r2
9002570e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90025712:	fb11 f107 	smulbb	r1, r1, r7
90025716:	b2c0      	uxtb	r0, r0
90025718:	b29b      	uxth	r3, r3
9002571a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9002571e:	fb10 f007 	smulbb	r0, r0, r7
90025722:	fb1e fe07 	smulbb	lr, lr, r7
90025726:	ea4f 2c23 	mov.w	ip, r3, asr #8
9002572a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9002572e:	fb0c 1c02 	mla	ip, ip, r2, r1
90025732:	10d9      	asrs	r1, r3, #3
90025734:	00db      	lsls	r3, r3, #3
90025736:	fa1f fc8c 	uxth.w	ip, ip
9002573a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002573e:	b2db      	uxtb	r3, r3
90025740:	fb01 e102 	mla	r1, r1, r2, lr
90025744:	fb03 0302 	mla	r3, r3, r2, r0
90025748:	b289      	uxth	r1, r1
9002574a:	b29a      	uxth	r2, r3
9002574c:	f10c 0301 	add.w	r3, ip, #1
90025750:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90025754:	1c53      	adds	r3, r2, #1
90025756:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002575a:	1c4a      	adds	r2, r1, #1
9002575c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90025760:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025764:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025768:	0949      	lsrs	r1, r1, #5
9002576a:	ea43 030c 	orr.w	r3, r3, ip
9002576e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025772:	430b      	orrs	r3, r1
90025774:	f8a8 3000 	strh.w	r3, [r8]
90025778:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002577a:	f108 0802 	add.w	r8, r8, #2
9002577e:	f109 39ff 	add.w	r9, r9, #4294967295
90025782:	441c      	add	r4, r3
90025784:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025786:	441e      	add	r6, r3
90025788:	e74a      	b.n	90025620 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9002578a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002578c:	3d01      	subs	r5, #1
9002578e:	441c      	add	r4, r3
90025790:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025792:	441e      	add	r6, r3
90025794:	9b07      	ldr	r3, [sp, #28]
90025796:	3302      	adds	r3, #2
90025798:	9307      	str	r3, [sp, #28]
9002579a:	e722      	b.n	900255e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002579c:	d022      	beq.n	900257e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
9002579e:	1e6b      	subs	r3, r5, #1
900257a0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900257a2:	fb00 4003 	mla	r0, r0, r3, r4
900257a6:	1400      	asrs	r0, r0, #16
900257a8:	f53f af37 	bmi.w	9002561a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900257ac:	3901      	subs	r1, #1
900257ae:	4288      	cmp	r0, r1
900257b0:	f6bf af33 	bge.w	9002561a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900257b4:	9920      	ldr	r1, [sp, #128]	@ 0x80
900257b6:	fb01 6303 	mla	r3, r1, r3, r6
900257ba:	141b      	asrs	r3, r3, #16
900257bc:	f53f af2d 	bmi.w	9002561a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900257c0:	3a01      	subs	r2, #1
900257c2:	4293      	cmp	r3, r2
900257c4:	f6bf af29 	bge.w	9002561a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900257c8:	46a8      	mov	r8, r5
900257ca:	f8dd 901c 	ldr.w	r9, [sp, #28]
900257ce:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
900257d2:	f1b8 0f00 	cmp.w	r8, #0
900257d6:	dc60      	bgt.n	9002589a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
900257d8:	9b07      	ldr	r3, [sp, #28]
900257da:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900257de:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900257e2:	9307      	str	r3, [sp, #28]
900257e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900257e6:	2b00      	cmp	r3, #0
900257e8:	f340 80f8 	ble.w	900259dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900257ec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900257f0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900257f2:	ee30 0a04 	vadd.f32	s0, s0, s8
900257f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900257fa:	eef0 6a62 	vmov.f32	s13, s5
900257fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025802:	ee31 1a05 	vadd.f32	s2, s2, s10
90025806:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002580a:	ee16 4a90 	vmov	r4, s13
9002580e:	eef0 6a43 	vmov.f32	s13, s6
90025812:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025816:	ee16 6a90 	vmov	r6, s13
9002581a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002581e:	ee61 7a27 	vmul.f32	s15, s2, s15
90025822:	ee77 2a62 	vsub.f32	s5, s14, s5
90025826:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002582a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002582e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025832:	ee12 2a90 	vmov	r2, s5
90025836:	eef0 2a47 	vmov.f32	s5, s14
9002583a:	fb92 f3f3 	sdiv	r3, r2, r3
9002583e:	ee13 2a10 	vmov	r2, s6
90025842:	931f      	str	r3, [sp, #124]	@ 0x7c
90025844:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025846:	eeb0 3a67 	vmov.f32	s6, s15
9002584a:	fb92 f3f3 	sdiv	r3, r2, r3
9002584e:	9320      	str	r3, [sp, #128]	@ 0x80
90025850:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025852:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90025854:	3b01      	subs	r3, #1
90025856:	930a      	str	r3, [sp, #40]	@ 0x28
90025858:	bf08      	it	eq
9002585a:	4615      	moveq	r5, r2
9002585c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002585e:	bf18      	it	ne
90025860:	461d      	movne	r5, r3
90025862:	e6af      	b.n	900255c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90025864:	f111 0a01 	adds.w	sl, r1, #1
90025868:	d486      	bmi.n	90025778 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002586a:	45d6      	cmp	lr, sl
9002586c:	db84      	blt.n	90025778 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002586e:	f110 0a01 	adds.w	sl, r0, #1
90025872:	d481      	bmi.n	90025778 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025874:	4553      	cmp	r3, sl
90025876:	f6ff af7f 	blt.w	90025778 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002587a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9002587c:	b21b      	sxth	r3, r3
9002587e:	9101      	str	r1, [sp, #4]
90025880:	4641      	mov	r1, r8
90025882:	9300      	str	r3, [sp, #0]
90025884:	fa0f f38e 	sxth.w	r3, lr
90025888:	e9cd 0202 	strd	r0, r2, [sp, #8]
9002588c:	e9cd c704 	strd	ip, r7, [sp, #16]
90025890:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90025892:	9811      	ldr	r0, [sp, #68]	@ 0x44
90025894:	f7ff fdb2 	bl	900253fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90025898:	e76e      	b.n	90025778 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002589a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002589c:	1430      	asrs	r0, r6, #16
9002589e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900258a0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
900258a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900258a8:	1423      	asrs	r3, r4, #16
900258aa:	f3c4 3203 	ubfx	r2, r4, #12, #4
900258ae:	fb01 3000 	mla	r0, r1, r0, r3
900258b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900258b4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
900258b8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
900258bc:	8858      	ldrh	r0, [r3, #2]
900258be:	f1be 0f00 	cmp.w	lr, #0
900258c2:	d00b      	beq.n	900258dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900258c4:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
900258c8:	3901      	subs	r1, #1
900258ca:	0049      	lsls	r1, r1, #1
900258cc:	3102      	adds	r1, #2
900258ce:	eb03 0b01 	add.w	fp, r3, r1
900258d2:	5a5b      	ldrh	r3, [r3, r1]
900258d4:	930e      	str	r3, [sp, #56]	@ 0x38
900258d6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900258da:	930f      	str	r3, [sp, #60]	@ 0x3c
900258dc:	ea4f 410c 	mov.w	r1, ip, lsl #16
900258e0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900258e4:	fb12 f30e 	smulbb	r3, r2, lr
900258e8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900258ec:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
900258f0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900258f4:	10db      	asrs	r3, r3, #3
900258f6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900258fa:	ea41 010c 	orr.w	r1, r1, ip
900258fe:	f1ce 0c10 	rsb	ip, lr, #16
90025902:	ea4b 0000 	orr.w	r0, fp, r0
90025906:	9f08      	ldr	r7, [sp, #32]
90025908:	ebac 0c02 	sub.w	ip, ip, r2
9002590c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025910:	f108 38ff 	add.w	r8, r8, #4294967295
90025914:	4350      	muls	r0, r2
90025916:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
9002591a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002591c:	fb0c 0c01 	mla	ip, ip, r1, r0
90025920:	980e      	ldr	r0, [sp, #56]	@ 0x38
90025922:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90025926:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
9002592a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002592c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025930:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025934:	0412      	lsls	r2, r2, #16
90025936:	ea4b 0101 	orr.w	r1, fp, r1
9002593a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002593e:	fb03 c101 	mla	r1, r3, r1, ip
90025942:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90025946:	4302      	orrs	r2, r0
90025948:	fb03 1202 	mla	r2, r3, r2, r1
9002594c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90025950:	0952      	lsrs	r2, r2, #5
90025952:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90025956:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
9002595a:	f8b9 2000 	ldrh.w	r2, [r9]
9002595e:	ea4b 0303 	orr.w	r3, fp, r3
90025962:	1211      	asrs	r1, r2, #8
90025964:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90025968:	b29b      	uxth	r3, r3
9002596a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002596e:	00d2      	lsls	r2, r2, #3
90025970:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90025974:	fb11 f107 	smulbb	r1, r1, r7
90025978:	1218      	asrs	r0, r3, #8
9002597a:	fb1c fc07 	smulbb	ip, ip, r7
9002597e:	b2d2      	uxtb	r2, r2
90025980:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025984:	fb12 f207 	smulbb	r2, r2, r7
90025988:	fb00 100a 	mla	r0, r0, sl, r1
9002598c:	10d9      	asrs	r1, r3, #3
9002598e:	00db      	lsls	r3, r3, #3
90025990:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90025994:	b280      	uxth	r0, r0
90025996:	b2db      	uxtb	r3, r3
90025998:	fb01 c10a 	mla	r1, r1, sl, ip
9002599c:	fb03 230a 	mla	r3, r3, sl, r2
900259a0:	1c42      	adds	r2, r0, #1
900259a2:	b289      	uxth	r1, r1
900259a4:	b29b      	uxth	r3, r3
900259a6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900259aa:	f101 0c01 	add.w	ip, r1, #1
900259ae:	1c5a      	adds	r2, r3, #1
900259b0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900259b4:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900259b8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900259bc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900259be:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900259c2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900259c6:	441c      	add	r4, r3
900259c8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900259cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900259ce:	4310      	orrs	r0, r2
900259d0:	441e      	add	r6, r3
900259d2:	ea40 000c 	orr.w	r0, r0, ip
900259d6:	f829 0b02 	strh.w	r0, [r9], #2
900259da:	e6fa      	b.n	900257d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
900259dc:	b013      	add	sp, #76	@ 0x4c
900259de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900259e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
900259e2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900259e6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
900259ea:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
900259ee:	fb0e 4703 	mla	r7, lr, r3, r4
900259f2:	f1be 0f00 	cmp.w	lr, #0
900259f6:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
900259fa:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
900259fe:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90025a02:	8808      	ldrh	r0, [r1, #0]
90025a04:	db60      	blt.n	90025ac8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90025a06:	45f1      	cmp	r9, lr
90025a08:	dd5e      	ble.n	90025ac8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90025a0a:	2c00      	cmp	r4, #0
90025a0c:	db5a      	blt.n	90025ac4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90025a0e:	42a3      	cmp	r3, r4
90025a10:	dd58      	ble.n	90025ac4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90025a12:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90025a16:	1c62      	adds	r2, r4, #1
90025a18:	d459      	bmi.n	90025ace <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90025a1a:	4293      	cmp	r3, r2
90025a1c:	dd57      	ble.n	90025ace <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90025a1e:	2d00      	cmp	r5, #0
90025a20:	d055      	beq.n	90025ace <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90025a22:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90025a26:	f11e 0e01 	adds.w	lr, lr, #1
90025a2a:	d454      	bmi.n	90025ad6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025a2c:	45f1      	cmp	r9, lr
90025a2e:	dd52      	ble.n	90025ad6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025a30:	2e00      	cmp	r6, #0
90025a32:	d050      	beq.n	90025ad6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025a34:	2c00      	cmp	r4, #0
90025a36:	db4c      	blt.n	90025ad2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90025a38:	42a3      	cmp	r3, r4
90025a3a:	dd4a      	ble.n	90025ad2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90025a3c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90025a40:	3401      	adds	r4, #1
90025a42:	d405      	bmi.n	90025a50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025a44:	42a3      	cmp	r3, r4
90025a46:	dd03      	ble.n	90025a50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025a48:	b115      	cbz	r5, 90025a50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025a4a:	3301      	adds	r3, #1
90025a4c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90025a50:	fb15 f406 	smulbb	r4, r5, r6
90025a54:	ea4f 430c 	mov.w	r3, ip, lsl #16
90025a58:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90025a5c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90025a60:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90025a64:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90025a68:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90025a6c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90025a70:	ea43 0c0c 	orr.w	ip, r3, ip
90025a74:	f1c6 0310 	rsb	r3, r6, #16
90025a78:	ea4e 0707 	orr.w	r7, lr, r7
90025a7c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90025a80:	1b5b      	subs	r3, r3, r5
90025a82:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90025a86:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90025a8a:	437d      	muls	r5, r7
90025a8c:	fb03 5c0c 	mla	ip, r3, ip, r5
90025a90:	0403      	lsls	r3, r0, #16
90025a92:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025a96:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90025a9a:	4318      	orrs	r0, r3
90025a9c:	0413      	lsls	r3, r2, #16
90025a9e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025aa2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90025aa6:	fb04 c000 	mla	r0, r4, r0, ip
90025aaa:	4313      	orrs	r3, r2
90025aac:	fb06 0003 	mla	r0, r6, r3, r0
90025ab0:	0d43      	lsrs	r3, r0, #21
90025ab2:	0940      	lsrs	r0, r0, #5
90025ab4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025ab8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025abc:	4318      	orrs	r0, r3
90025abe:	8008      	strh	r0, [r1, #0]
90025ac0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90025ac4:	4684      	mov	ip, r0
90025ac6:	e7a6      	b.n	90025a16 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90025ac8:	4607      	mov	r7, r0
90025aca:	4684      	mov	ip, r0
90025acc:	e7ab      	b.n	90025a26 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90025ace:	4607      	mov	r7, r0
90025ad0:	e7a9      	b.n	90025a26 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90025ad2:	4602      	mov	r2, r0
90025ad4:	e7b4      	b.n	90025a40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90025ad6:	4602      	mov	r2, r0
90025ad8:	e7ba      	b.n	90025a50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

90025ada <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025ada:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025ade:	b08f      	sub	sp, #60	@ 0x3c
90025ae0:	461d      	mov	r5, r3
90025ae2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90025ae4:	9107      	str	r1, [sp, #28]
90025ae6:	920c      	str	r2, [sp, #48]	@ 0x30
90025ae8:	6859      	ldr	r1, [r3, #4]
90025aea:	681b      	ldr	r3, [r3, #0]
90025aec:	900d      	str	r0, [sp, #52]	@ 0x34
90025aee:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
90025af2:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
90025af6:	fb01 2707 	mla	r7, r1, r7, r2
90025afa:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90025afe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025b00:	f8d3 8000 	ldr.w	r8, [r3]
90025b04:	9b07      	ldr	r3, [sp, #28]
90025b06:	2b00      	cmp	r3, #0
90025b08:	dc03      	bgt.n	90025b12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90025b0a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90025b0c:	2b00      	cmp	r3, #0
90025b0e:	f340 8182 	ble.w	90025e16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90025b12:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025b14:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025b18:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025b1c:	1e48      	subs	r0, r1, #1
90025b1e:	f102 3cff 	add.w	ip, r2, #4294967295
90025b22:	2d00      	cmp	r5, #0
90025b24:	f340 809b 	ble.w	90025c5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90025b28:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025b2c:	ea4f 4326 	mov.w	r3, r6, asr #16
90025b30:	d406      	bmi.n	90025b40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025b32:	4586      	cmp	lr, r0
90025b34:	da04      	bge.n	90025b40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025b36:	2b00      	cmp	r3, #0
90025b38:	db02      	blt.n	90025b40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025b3a:	4563      	cmp	r3, ip
90025b3c:	f2c0 8090 	blt.w	90025c60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90025b40:	f11e 0e01 	adds.w	lr, lr, #1
90025b44:	f100 8084 	bmi.w	90025c50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025b48:	4571      	cmp	r1, lr
90025b4a:	f2c0 8081 	blt.w	90025c50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025b4e:	3301      	adds	r3, #1
90025b50:	d47e      	bmi.n	90025c50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025b52:	429a      	cmp	r2, r3
90025b54:	db7c      	blt.n	90025c50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025b56:	46aa      	mov	sl, r5
90025b58:	46b9      	mov	r9, r7
90025b5a:	f1ba 0f00 	cmp.w	sl, #0
90025b5e:	f340 8099 	ble.w	90025c94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90025b62:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025b64:	1421      	asrs	r1, r4, #16
90025b66:	ea4f 4026 	mov.w	r0, r6, asr #16
90025b6a:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025b6e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90025b72:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90025b76:	f100 80d1 	bmi.w	90025d1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025b7a:	f10e 3bff 	add.w	fp, lr, #4294967295
90025b7e:	4559      	cmp	r1, fp
90025b80:	f280 80cc 	bge.w	90025d1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025b84:	2800      	cmp	r0, #0
90025b86:	f2c0 80c9 	blt.w	90025d1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025b8a:	f103 3bff 	add.w	fp, r3, #4294967295
90025b8e:	4558      	cmp	r0, fp
90025b90:	f280 80c4 	bge.w	90025d1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025b94:	fa0f fe8e 	sxth.w	lr, lr
90025b98:	fb00 110e 	mla	r1, r0, lr, r1
90025b9c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90025ba0:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90025ba4:	8841      	ldrh	r1, [r0, #2]
90025ba6:	f1bc 0f00 	cmp.w	ip, #0
90025baa:	d00b      	beq.n	90025bc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90025bac:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
90025bb0:	3b01      	subs	r3, #1
90025bb2:	005b      	lsls	r3, r3, #1
90025bb4:	3302      	adds	r3, #2
90025bb6:	eb00 0e03 	add.w	lr, r0, r3
90025bba:	5ac3      	ldrh	r3, [r0, r3]
90025bbc:	9308      	str	r3, [sp, #32]
90025bbe:	f8be 3002 	ldrh.w	r3, [lr, #2]
90025bc2:	9309      	str	r3, [sp, #36]	@ 0x24
90025bc4:	ea4f 400b 	mov.w	r0, fp, lsl #16
90025bc8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90025bcc:	fb12 f30c 	smulbb	r3, r2, ip
90025bd0:	f1cc 0e10 	rsb	lr, ip, #16
90025bd4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90025bd8:	10db      	asrs	r3, r3, #3
90025bda:	ebae 0e02 	sub.w	lr, lr, r2
90025bde:	ea40 000b 	orr.w	r0, r0, fp
90025be2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90025be6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90025bea:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025bee:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025bf2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90025bf6:	ea4b 0101 	orr.w	r1, fp, r1
90025bfa:	4351      	muls	r1, r2
90025bfc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90025bfe:	fb0e 1e00 	mla	lr, lr, r0, r1
90025c02:	0410      	lsls	r0, r2, #16
90025c04:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025c08:	9908      	ldr	r1, [sp, #32]
90025c0a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90025c0e:	4310      	orrs	r0, r2
90025c10:	9a08      	ldr	r2, [sp, #32]
90025c12:	0412      	lsls	r2, r2, #16
90025c14:	fb03 e000 	mla	r0, r3, r0, lr
90025c18:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
90025c1c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90025c20:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90025c24:	ea42 020e 	orr.w	r2, r2, lr
90025c28:	fb03 0302 	mla	r3, r3, r2, r0
90025c2c:	0d5a      	lsrs	r2, r3, #21
90025c2e:	095b      	lsrs	r3, r3, #5
90025c30:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025c34:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90025c38:	4313      	orrs	r3, r2
90025c3a:	f8a9 3000 	strh.w	r3, [r9]
90025c3e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90025c40:	f109 0902 	add.w	r9, r9, #2
90025c44:	f10a 3aff 	add.w	sl, sl, #4294967295
90025c48:	441c      	add	r4, r3
90025c4a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025c4c:	441e      	add	r6, r3
90025c4e:	e784      	b.n	90025b5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90025c50:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90025c52:	3d01      	subs	r5, #1
90025c54:	3702      	adds	r7, #2
90025c56:	441c      	add	r4, r3
90025c58:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025c5a:	441e      	add	r6, r3
90025c5c:	e761      	b.n	90025b22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025c5e:	d01d      	beq.n	90025c9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025c60:	1e6b      	subs	r3, r5, #1
90025c62:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90025c64:	fb00 4003 	mla	r0, r0, r3, r4
90025c68:	1400      	asrs	r0, r0, #16
90025c6a:	f53f af74 	bmi.w	90025b56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025c6e:	3901      	subs	r1, #1
90025c70:	4288      	cmp	r0, r1
90025c72:	f6bf af70 	bge.w	90025b56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025c76:	991c      	ldr	r1, [sp, #112]	@ 0x70
90025c78:	fb01 6303 	mla	r3, r1, r3, r6
90025c7c:	141b      	asrs	r3, r3, #16
90025c7e:	f53f af6a 	bmi.w	90025b56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025c82:	3a01      	subs	r2, #1
90025c84:	4293      	cmp	r3, r2
90025c86:	f6bf af66 	bge.w	90025b56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025c8a:	46a9      	mov	r9, r5
90025c8c:	46ba      	mov	sl, r7
90025c8e:	f1b9 0f00 	cmp.w	r9, #0
90025c92:	dc5b      	bgt.n	90025d4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90025c94:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90025c98:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90025c9c:	9b07      	ldr	r3, [sp, #28]
90025c9e:	2b00      	cmp	r3, #0
90025ca0:	f340 80b9 	ble.w	90025e16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90025ca4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025ca8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025caa:	ee30 0a04 	vadd.f32	s0, s0, s8
90025cae:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025cb2:	eef0 6a62 	vmov.f32	s13, s5
90025cb6:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025cba:	ee31 1a05 	vadd.f32	s2, s2, s10
90025cbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025cc2:	ee16 4a90 	vmov	r4, s13
90025cc6:	eef0 6a43 	vmov.f32	s13, s6
90025cca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025cce:	ee16 6a90 	vmov	r6, s13
90025cd2:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025cd6:	ee61 7a27 	vmul.f32	s15, s2, s15
90025cda:	ee77 2a62 	vsub.f32	s5, s14, s5
90025cde:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025ce2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025ce6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025cea:	ee12 2a90 	vmov	r2, s5
90025cee:	eef0 2a47 	vmov.f32	s5, s14
90025cf2:	fb92 f3f3 	sdiv	r3, r2, r3
90025cf6:	ee13 2a10 	vmov	r2, s6
90025cfa:	931b      	str	r3, [sp, #108]	@ 0x6c
90025cfc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025cfe:	eeb0 3a67 	vmov.f32	s6, s15
90025d02:	fb92 f3f3 	sdiv	r3, r2, r3
90025d06:	931c      	str	r3, [sp, #112]	@ 0x70
90025d08:	9b07      	ldr	r3, [sp, #28]
90025d0a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90025d0c:	3b01      	subs	r3, #1
90025d0e:	9307      	str	r3, [sp, #28]
90025d10:	bf08      	it	eq
90025d12:	4615      	moveq	r5, r2
90025d14:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025d16:	bf18      	it	ne
90025d18:	461d      	movne	r5, r3
90025d1a:	e6f3      	b.n	90025b04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90025d1c:	f111 0b01 	adds.w	fp, r1, #1
90025d20:	d48d      	bmi.n	90025c3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025d22:	45de      	cmp	lr, fp
90025d24:	db8b      	blt.n	90025c3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025d26:	f110 0b01 	adds.w	fp, r0, #1
90025d2a:	d488      	bmi.n	90025c3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025d2c:	455b      	cmp	r3, fp
90025d2e:	db86      	blt.n	90025c3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025d30:	b21b      	sxth	r3, r3
90025d32:	e9cd 1001 	strd	r1, r0, [sp, #4]
90025d36:	e9cd 2c03 	strd	r2, ip, [sp, #12]
90025d3a:	9300      	str	r3, [sp, #0]
90025d3c:	4642      	mov	r2, r8
90025d3e:	fa0f f38e 	sxth.w	r3, lr
90025d42:	4649      	mov	r1, r9
90025d44:	980d      	ldr	r0, [sp, #52]	@ 0x34
90025d46:	f7ff fe4c 	bl	900259e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
90025d4a:	e778      	b.n	90025c3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025d4c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025d4e:	1420      	asrs	r0, r4, #16
90025d50:	1431      	asrs	r1, r6, #16
90025d52:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90025d56:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90025d5a:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025d5e:	fb03 0101 	mla	r1, r3, r1, r0
90025d62:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90025d66:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
90025d6a:	8841      	ldrh	r1, [r0, #2]
90025d6c:	f1be 0f00 	cmp.w	lr, #0
90025d70:	d00b      	beq.n	90025d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90025d72:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90025d76:	3b01      	subs	r3, #1
90025d78:	005b      	lsls	r3, r3, #1
90025d7a:	3302      	adds	r3, #2
90025d7c:	eb00 0b03 	add.w	fp, r0, r3
90025d80:	5ac3      	ldrh	r3, [r0, r3]
90025d82:	930a      	str	r3, [sp, #40]	@ 0x28
90025d84:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90025d88:	930b      	str	r3, [sp, #44]	@ 0x2c
90025d8a:	ea4f 400c 	mov.w	r0, ip, lsl #16
90025d8e:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90025d92:	fb12 f30e 	smulbb	r3, r2, lr
90025d96:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90025d9a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90025d9e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90025da2:	10db      	asrs	r3, r3, #3
90025da4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025da8:	ea40 000c 	orr.w	r0, r0, ip
90025dac:	f1ce 0c10 	rsb	ip, lr, #16
90025db0:	ea4b 0101 	orr.w	r1, fp, r1
90025db4:	f109 39ff 	add.w	r9, r9, #4294967295
90025db8:	ebac 0c02 	sub.w	ip, ip, r2
90025dbc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025dc0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90025dc4:	4351      	muls	r1, r2
90025dc6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90025dc8:	fb0c 1c00 	mla	ip, ip, r0, r1
90025dcc:	990a      	ldr	r1, [sp, #40]	@ 0x28
90025dce:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90025dd2:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
90025dd6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90025dd8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025ddc:	0412      	lsls	r2, r2, #16
90025dde:	ea4b 0000 	orr.w	r0, fp, r0
90025de2:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
90025de6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90025dea:	fb03 c000 	mla	r0, r3, r0, ip
90025dee:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90025df2:	ea42 0b0b 	orr.w	fp, r2, fp
90025df6:	fb03 000b 	mla	r0, r3, fp, r0
90025dfa:	0d43      	lsrs	r3, r0, #21
90025dfc:	0940      	lsrs	r0, r0, #5
90025dfe:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025e02:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025e06:	4318      	orrs	r0, r3
90025e08:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90025e0a:	441c      	add	r4, r3
90025e0c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025e0e:	f82a 0b02 	strh.w	r0, [sl], #2
90025e12:	441e      	add	r6, r3
90025e14:	e73b      	b.n	90025c8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90025e16:	b00f      	add	sp, #60	@ 0x3c
90025e18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025e1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90025e1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025e20:	b085      	sub	sp, #20
90025e22:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90025e26:	9102      	str	r1, [sp, #8]
90025e28:	2c00      	cmp	r4, #0
90025e2a:	fb04 7103 	mla	r1, r4, r3, r7
90025e2e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90025e32:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90025e36:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90025e3a:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90025e3e:	f2c0 811b 	blt.w	90026078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90025e42:	45a6      	cmp	lr, r4
90025e44:	f340 8118 	ble.w	90026078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90025e48:	2f00      	cmp	r7, #0
90025e4a:	f2c0 8113 	blt.w	90026074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90025e4e:	42bb      	cmp	r3, r7
90025e50:	f340 8110 	ble.w	90026074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90025e54:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90025e58:	1c7a      	adds	r2, r7, #1
90025e5a:	f100 8110 	bmi.w	9002607e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90025e5e:	4293      	cmp	r3, r2
90025e60:	f340 810d 	ble.w	9002607e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90025e64:	2e00      	cmp	r6, #0
90025e66:	f000 810c 	beq.w	90026082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90025e6a:	f8dc 1004 	ldr.w	r1, [ip, #4]
90025e6e:	3401      	adds	r4, #1
90025e70:	f100 810b 	bmi.w	9002608a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90025e74:	45a6      	cmp	lr, r4
90025e76:	f340 8108 	ble.w	9002608a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90025e7a:	2800      	cmp	r0, #0
90025e7c:	f000 8108 	beq.w	90026090 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90025e80:	2f00      	cmp	r7, #0
90025e82:	f2c0 8100 	blt.w	90026086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90025e86:	42bb      	cmp	r3, r7
90025e88:	f340 80fd 	ble.w	90026086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90025e8c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90025e90:	3701      	adds	r7, #1
90025e92:	f100 8100 	bmi.w	90026096 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90025e96:	42bb      	cmp	r3, r7
90025e98:	f340 80fd 	ble.w	90026096 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90025e9c:	2e00      	cmp	r6, #0
90025e9e:	f000 80fc 	beq.w	9002609a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90025ea2:	3301      	adds	r3, #1
90025ea4:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90025ea8:	b2b6      	uxth	r6, r6
90025eaa:	b280      	uxth	r0, r0
90025eac:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90025eb0:	fb00 fe06 	mul.w	lr, r0, r6
90025eb4:	0136      	lsls	r6, r6, #4
90025eb6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90025eba:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90025ebe:	eba6 070e 	sub.w	r7, r6, lr
90025ec2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90025ec6:	ea4f 6914 	mov.w	r9, r4, lsr #24
90025eca:	b280      	uxth	r0, r0
90025ecc:	b2bf      	uxth	r7, r7
90025ece:	1a1b      	subs	r3, r3, r0
90025ed0:	ea4f 6812 	mov.w	r8, r2, lsr #24
90025ed4:	fb0a f607 	mul.w	r6, sl, r7
90025ed8:	b29b      	uxth	r3, r3
90025eda:	fb0b 6603 	mla	r6, fp, r3, r6
90025ede:	fb00 6609 	mla	r6, r0, r9, r6
90025ee2:	fb0e 6608 	mla	r6, lr, r8, r6
90025ee6:	f3c6 2607 	ubfx	r6, r6, #8, #8
90025eea:	9600      	str	r6, [sp, #0]
90025eec:	2e00      	cmp	r6, #0
90025eee:	f000 80be 	beq.w	9002606e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90025ef2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90025ef6:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90025efa:	9e02      	ldr	r6, [sp, #8]
90025efc:	fb0b fc0c 	mul.w	ip, fp, ip
90025f00:	fb0b f505 	mul.w	r5, fp, r5
90025f04:	8836      	ldrh	r6, [r6, #0]
90025f06:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90025f0a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025f0e:	9501      	str	r5, [sp, #4]
90025f10:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90025f14:	44dc      	add	ip, fp
90025f16:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025f1a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90025f1e:	9503      	str	r5, [sp, #12]
90025f20:	9d01      	ldr	r5, [sp, #4]
90025f22:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90025f26:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90025f2a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90025f2e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90025f32:	fb0a fc0c 	mul.w	ip, sl, ip
90025f36:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90025f3a:	fb0a fa01 	mul.w	sl, sl, r1
90025f3e:	ea4f 251c 	mov.w	r5, ip, lsr #8
90025f42:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025f46:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90025f4a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025f4e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90025f52:	4465      	add	r5, ip
90025f54:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90025f58:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90025f5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025f60:	fb09 fc0c 	mul.w	ip, r9, ip
90025f64:	0a2d      	lsrs	r5, r5, #8
90025f66:	fb09 f904 	mul.w	r9, r9, r4
90025f6a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025f6e:	ea4f 211c 	mov.w	r1, ip, lsr #8
90025f72:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025f76:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90025f7a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025f7e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90025f82:	437d      	muls	r5, r7
90025f84:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90025f88:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90025f8c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90025f90:	4461      	add	r1, ip
90025f92:	fb08 f404 	mul.w	r4, r8, r4
90025f96:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025f9a:	fb08 f802 	mul.w	r8, r8, r2
90025f9e:	0a09      	lsrs	r1, r1, #8
90025fa0:	0a22      	lsrs	r2, r4, #8
90025fa2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90025fa6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90025faa:	fb07 f70a 	mul.w	r7, r7, sl
90025fae:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90025fb2:	4414      	add	r4, r2
90025fb4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90025fb8:	0a24      	lsrs	r4, r4, #8
90025fba:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90025fbe:	9a03      	ldr	r2, [sp, #12]
90025fc0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90025fc4:	fb02 5503 	mla	r5, r2, r3, r5
90025fc8:	ea4f 2818 	mov.w	r8, r8, lsr #8
90025fcc:	9a00      	ldr	r2, [sp, #0]
90025fce:	fb04 540e 	mla	r4, r4, lr, r5
90025fd2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90025fd6:	1235      	asrs	r5, r6, #8
90025fd8:	fb01 4100 	mla	r1, r1, r0, r4
90025fdc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90025fe0:	0a09      	lsrs	r1, r1, #8
90025fe2:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90025fe6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90025fea:	fb03 7101 	mla	r1, r3, r1, r7
90025fee:	fb0e 1e08 	mla	lr, lr, r8, r1
90025ff2:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90025ff6:	fb00 e101 	mla	r1, r0, r1, lr
90025ffa:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90025ffe:	b287      	uxth	r7, r0
90026000:	0a09      	lsrs	r1, r1, #8
90026002:	437a      	muls	r2, r7
90026004:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90026008:	1c53      	adds	r3, r2, #1
9002600a:	4321      	orrs	r1, r4
9002600c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026010:	0c0a      	lsrs	r2, r1, #16
90026012:	f3c1 2407 	ubfx	r4, r1, #8, #8
90026016:	ea6f 2313 	mvn.w	r3, r3, lsr #8
9002601a:	b2c8      	uxtb	r0, r1
9002601c:	fb12 f207 	smulbb	r2, r2, r7
90026020:	fb14 f407 	smulbb	r4, r4, r7
90026024:	b2db      	uxtb	r3, r3
90026026:	fb10 f007 	smulbb	r0, r0, r7
9002602a:	fb05 2503 	mla	r5, r5, r3, r2
9002602e:	10f2      	asrs	r2, r6, #3
90026030:	00f6      	lsls	r6, r6, #3
90026032:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90026036:	b2ad      	uxth	r5, r5
90026038:	b2f6      	uxtb	r6, r6
9002603a:	fb02 4203 	mla	r2, r2, r3, r4
9002603e:	fb06 0303 	mla	r3, r6, r3, r0
90026042:	b294      	uxth	r4, r2
90026044:	b299      	uxth	r1, r3
90026046:	1c6b      	adds	r3, r5, #1
90026048:	1c62      	adds	r2, r4, #1
9002604a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002604e:	1c4b      	adds	r3, r1, #1
90026050:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90026054:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90026058:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002605c:	0952      	lsrs	r2, r2, #5
9002605e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026062:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026066:	432b      	orrs	r3, r5
90026068:	4313      	orrs	r3, r2
9002606a:	9a02      	ldr	r2, [sp, #8]
9002606c:	8013      	strh	r3, [r2, #0]
9002606e:	b005      	add	sp, #20
90026070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026074:	2500      	movs	r5, #0
90026076:	e6ef      	b.n	90025e58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90026078:	2100      	movs	r1, #0
9002607a:	460d      	mov	r5, r1
9002607c:	e6f7      	b.n	90025e6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002607e:	2100      	movs	r1, #0
90026080:	e6f5      	b.n	90025e6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026082:	4631      	mov	r1, r6
90026084:	e6f3      	b.n	90025e6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90026086:	2400      	movs	r4, #0
90026088:	e702      	b.n	90025e90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
9002608a:	2200      	movs	r2, #0
9002608c:	4614      	mov	r4, r2
9002608e:	e70b      	b.n	90025ea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026090:	4602      	mov	r2, r0
90026092:	4604      	mov	r4, r0
90026094:	e708      	b.n	90025ea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026096:	2200      	movs	r2, #0
90026098:	e706      	b.n	90025ea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002609a:	4632      	mov	r2, r6
9002609c:	e704      	b.n	90025ea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

9002609e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002609e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900260a2:	b09d      	sub	sp, #116	@ 0x74
900260a4:	9219      	str	r2, [sp, #100]	@ 0x64
900260a6:	9307      	str	r3, [sp, #28]
900260a8:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
900260aa:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
900260ae:	901b      	str	r0, [sp, #108]	@ 0x6c
900260b0:	931a      	str	r3, [sp, #104]	@ 0x68
900260b2:	6850      	ldr	r0, [r2, #4]
900260b4:	9117      	str	r1, [sp, #92]	@ 0x5c
900260b6:	6812      	ldr	r2, [r2, #0]
900260b8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
900260bc:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
900260c0:	fb00 1303 	mla	r3, r0, r3, r1
900260c4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900260c8:	930a      	str	r3, [sp, #40]	@ 0x28
900260ca:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900260cc:	681b      	ldr	r3, [r3, #0]
900260ce:	9310      	str	r3, [sp, #64]	@ 0x40
900260d0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
900260d4:	930b      	str	r3, [sp, #44]	@ 0x2c
900260d6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900260d8:	2b00      	cmp	r3, #0
900260da:	dc03      	bgt.n	900260e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
900260dc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900260de:	2b00      	cmp	r3, #0
900260e0:	f340 8375 	ble.w	900267ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
900260e4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900260e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900260ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900260ee:	1e48      	subs	r0, r1, #1
900260f0:	1e57      	subs	r7, r2, #1
900260f2:	9b07      	ldr	r3, [sp, #28]
900260f4:	2b00      	cmp	r3, #0
900260f6:	f340 818e 	ble.w	90026416 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
900260fa:	ea5f 4c24 	movs.w	ip, r4, asr #16
900260fe:	ea4f 4326 	mov.w	r3, r6, asr #16
90026102:	d406      	bmi.n	90026112 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026104:	4584      	cmp	ip, r0
90026106:	da04      	bge.n	90026112 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026108:	2b00      	cmp	r3, #0
9002610a:	db02      	blt.n	90026112 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9002610c:	42bb      	cmp	r3, r7
9002610e:	f2c0 8183 	blt.w	90026418 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90026112:	f11c 0c01 	adds.w	ip, ip, #1
90026116:	f100 8173 	bmi.w	90026400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002611a:	4561      	cmp	r1, ip
9002611c:	f2c0 8170 	blt.w	90026400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026120:	3301      	adds	r3, #1
90026122:	f100 816d 	bmi.w	90026400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026126:	429a      	cmp	r2, r3
90026128:	f2c0 816a 	blt.w	90026400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002612c:	9b07      	ldr	r3, [sp, #28]
9002612e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90026130:	9318      	str	r3, [sp, #96]	@ 0x60
90026132:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026134:	2b00      	cmp	r3, #0
90026136:	f340 818c 	ble.w	90026452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
9002613a:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
9002613c:	ea4f 4c26 	mov.w	ip, r6, asr #16
90026140:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90026142:	f3c4 3003 	ubfx	r0, r4, #12, #4
90026146:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002614a:	1422      	asrs	r2, r4, #16
9002614c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90026150:	689b      	ldr	r3, [r3, #8]
90026152:	f100 81cd 	bmi.w	900264f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026156:	f103 38ff 	add.w	r8, r3, #4294967295
9002615a:	4542      	cmp	r2, r8
9002615c:	f280 81c8 	bge.w	900264f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026160:	f1bc 0f00 	cmp.w	ip, #0
90026164:	f2c0 81c4 	blt.w	900264f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026168:	f10e 38ff 	add.w	r8, lr, #4294967295
9002616c:	45c4      	cmp	ip, r8
9002616e:	f280 81bf 	bge.w	900264f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90026172:	b21b      	sxth	r3, r3
90026174:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026176:	fb0c 2203 	mla	r2, ip, r3, r2
9002617a:	eb05 0882 	add.w	r8, r5, r2, lsl #2
9002617e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90026182:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90026186:	2800      	cmp	r0, #0
90026188:	f000 81a9 	beq.w	900264de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
9002618c:	f8d8 5004 	ldr.w	r5, [r8, #4]
90026190:	950c      	str	r5, [sp, #48]	@ 0x30
90026192:	0e2d      	lsrs	r5, r5, #24
90026194:	9513      	str	r5, [sp, #76]	@ 0x4c
90026196:	b181      	cbz	r1, 900261ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026198:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
9002619c:	3b01      	subs	r3, #1
9002619e:	009b      	lsls	r3, r3, #2
900261a0:	3304      	adds	r3, #4
900261a2:	eb08 0c03 	add.w	ip, r8, r3
900261a6:	f858 3003 	ldr.w	r3, [r8, r3]
900261aa:	9308      	str	r3, [sp, #32]
900261ac:	0e1b      	lsrs	r3, r3, #24
900261ae:	9311      	str	r3, [sp, #68]	@ 0x44
900261b0:	f8dc 3004 	ldr.w	r3, [ip, #4]
900261b4:	930d      	str	r3, [sp, #52]	@ 0x34
900261b6:	0e1b      	lsrs	r3, r3, #24
900261b8:	9314      	str	r3, [sp, #80]	@ 0x50
900261ba:	b280      	uxth	r0, r0
900261bc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900261be:	b289      	uxth	r1, r1
900261c0:	fb00 f901 	mul.w	r9, r0, r1
900261c4:	0100      	lsls	r0, r0, #4
900261c6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900261ca:	eba0 0809 	sub.w	r8, r0, r9
900261ce:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
900261d2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900261d4:	b289      	uxth	r1, r1
900261d6:	fa1f f888 	uxth.w	r8, r8
900261da:	1a5b      	subs	r3, r3, r1
900261dc:	fb08 f000 	mul.w	r0, r8, r0
900261e0:	b29b      	uxth	r3, r3
900261e2:	fb03 000e 	mla	r0, r3, lr, r0
900261e6:	fb01 0005 	mla	r0, r1, r5, r0
900261ea:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900261ec:	fb09 0005 	mla	r0, r9, r5, r0
900261f0:	f3c0 2007 	ubfx	r0, r0, #8, #8
900261f4:	2800      	cmp	r0, #0
900261f6:	f000 80fa 	beq.w	900263ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900261fa:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900261fe:	d01b      	beq.n	90026238 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90026200:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90026204:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026208:	fb0e fa0a 	mul.w	sl, lr, sl
9002620c:	fb0e fe02 	mul.w	lr, lr, r2
90026210:	ea4f 221a 	mov.w	r2, sl, lsr #8
90026214:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90026218:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002621c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026220:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90026224:	4452      	add	r2, sl
90026226:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002622a:	0a12      	lsrs	r2, r2, #8
9002622c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90026230:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026234:	ea42 020c 	orr.w	r2, r2, ip
90026238:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002623a:	2dff      	cmp	r5, #255	@ 0xff
9002623c:	d021      	beq.n	90026282 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
9002623e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026240:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026244:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026246:	fb05 fb0b 	mul.w	fp, r5, fp
9002624a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002624c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026250:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026252:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026256:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002625a:	fb05 fa0a 	mul.w	sl, r5, sl
9002625e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026262:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026266:	44de      	add	lr, fp
90026268:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002626c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026270:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026274:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026278:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002627c:	ea4e 050a 	orr.w	r5, lr, sl
90026280:	950c      	str	r5, [sp, #48]	@ 0x30
90026282:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026284:	2dff      	cmp	r5, #255	@ 0xff
90026286:	d021      	beq.n	900262cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90026288:	9d08      	ldr	r5, [sp, #32]
9002628a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
9002628e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026290:	fb05 fb0b 	mul.w	fp, r5, fp
90026294:	9d08      	ldr	r5, [sp, #32]
90026296:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002629a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002629c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900262a0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900262a4:	fb05 fa0a 	mul.w	sl, r5, sl
900262a8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900262ac:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900262b0:	44de      	add	lr, fp
900262b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900262b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900262ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900262be:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900262c2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900262c6:	ea4e 050a 	orr.w	r5, lr, sl
900262ca:	9508      	str	r5, [sp, #32]
900262cc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900262ce:	2dff      	cmp	r5, #255	@ 0xff
900262d0:	d021      	beq.n	90026316 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
900262d2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900262d4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900262d8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900262da:	fb05 fb0b 	mul.w	fp, r5, fp
900262de:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900262e0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900262e4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900262e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900262ea:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900262ee:	fb05 fa0a 	mul.w	sl, r5, sl
900262f2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900262f6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900262fa:	44de      	add	lr, fp
900262fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026300:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026304:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026308:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002630c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026310:	ea4e 050a 	orr.w	r5, lr, sl
90026314:	950d      	str	r5, [sp, #52]	@ 0x34
90026316:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026318:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
9002631c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026320:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026324:	9d08      	ldr	r5, [sp, #32]
90026326:	fb08 fc0c 	mul.w	ip, r8, ip
9002632a:	fb03 cc0e 	mla	ip, r3, lr, ip
9002632e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90026332:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026334:	fb01 cc0e 	mla	ip, r1, lr, ip
90026338:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
9002633c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002633e:	fb09 cc0e 	mla	ip, r9, lr, ip
90026342:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90026346:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026348:	fb08 f80e 	mul.w	r8, r8, lr
9002634c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026350:	fb03 8202 	mla	r2, r3, r2, r8
90026354:	9b08      	ldr	r3, [sp, #32]
90026356:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002635a:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
9002635e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90026360:	fb01 220a 	mla	r2, r1, sl, r2
90026364:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
90026368:	883b      	ldrh	r3, [r7, #0]
9002636a:	fb09 2901 	mla	r9, r9, r1, r2
9002636e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90026370:	1219      	asrs	r1, r3, #8
90026372:	4342      	muls	r2, r0
90026374:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026378:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002637c:	1c50      	adds	r0, r2, #1
9002637e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90026382:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90026386:	ea4c 0c09 	orr.w	ip, ip, r9
9002638a:	ea6f 2010 	mvn.w	r0, r0, lsr #8
9002638e:	ea4f 421c 	mov.w	r2, ip, lsr #16
90026392:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90026396:	fa5f fc8c 	uxtb.w	ip, ip
9002639a:	fb12 f205 	smulbb	r2, r2, r5
9002639e:	b2c0      	uxtb	r0, r0
900263a0:	fb1c fc05 	smulbb	ip, ip, r5
900263a4:	fb01 2100 	mla	r1, r1, r0, r2
900263a8:	10da      	asrs	r2, r3, #3
900263aa:	fb1e fe05 	smulbb	lr, lr, r5
900263ae:	00db      	lsls	r3, r3, #3
900263b0:	b289      	uxth	r1, r1
900263b2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900263b6:	b2db      	uxtb	r3, r3
900263b8:	fb02 e200 	mla	r2, r2, r0, lr
900263bc:	fb03 c300 	mla	r3, r3, r0, ip
900263c0:	b292      	uxth	r2, r2
900263c2:	fa1f fc83 	uxth.w	ip, r3
900263c6:	1c4b      	adds	r3, r1, #1
900263c8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900263cc:	f10c 0301 	add.w	r3, ip, #1
900263d0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
900263d4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
900263d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900263dc:	430b      	orrs	r3, r1
900263de:	1c51      	adds	r1, r2, #1
900263e0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900263e4:	0952      	lsrs	r2, r2, #5
900263e6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900263ea:	4313      	orrs	r3, r2
900263ec:	803b      	strh	r3, [r7, #0]
900263ee:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900263f0:	3702      	adds	r7, #2
900263f2:	441c      	add	r4, r3
900263f4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900263f6:	441e      	add	r6, r3
900263f8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900263fa:	3b01      	subs	r3, #1
900263fc:	9318      	str	r3, [sp, #96]	@ 0x60
900263fe:	e698      	b.n	90026132 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90026400:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90026402:	441c      	add	r4, r3
90026404:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90026406:	441e      	add	r6, r3
90026408:	9b07      	ldr	r3, [sp, #28]
9002640a:	3b01      	subs	r3, #1
9002640c:	9307      	str	r3, [sp, #28]
9002640e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90026410:	3302      	adds	r3, #2
90026412:	930a      	str	r3, [sp, #40]	@ 0x28
90026414:	e66d      	b.n	900260f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90026416:	d023      	beq.n	90026460 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90026418:	9b07      	ldr	r3, [sp, #28]
9002641a:	9829      	ldr	r0, [sp, #164]	@ 0xa4
9002641c:	3b01      	subs	r3, #1
9002641e:	fb00 4003 	mla	r0, r0, r3, r4
90026422:	1400      	asrs	r0, r0, #16
90026424:	f53f ae82 	bmi.w	9002612c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026428:	3901      	subs	r1, #1
9002642a:	4288      	cmp	r0, r1
9002642c:	f6bf ae7e 	bge.w	9002612c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026430:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90026432:	fb01 6303 	mla	r3, r1, r3, r6
90026436:	141b      	asrs	r3, r3, #16
90026438:	f53f ae78 	bmi.w	9002612c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002643c:	3a01      	subs	r2, #1
9002643e:	4293      	cmp	r3, r2
90026440:	f6bf ae74 	bge.w	9002612c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90026444:	f8dd b01c 	ldr.w	fp, [sp, #28]
90026448:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
9002644c:	f1bb 0f00 	cmp.w	fp, #0
90026450:	dc6c      	bgt.n	9002652c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90026452:	9b07      	ldr	r3, [sp, #28]
90026454:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90026458:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002645a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002645e:	930a      	str	r3, [sp, #40]	@ 0x28
90026460:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026462:	2b00      	cmp	r3, #0
90026464:	f340 81b3 	ble.w	900267ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90026468:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002646c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002646e:	ee30 0a04 	vadd.f32	s0, s0, s8
90026472:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026476:	eef0 6a62 	vmov.f32	s13, s5
9002647a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002647e:	ee31 1a05 	vadd.f32	s2, s2, s10
90026482:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026486:	ee16 4a90 	vmov	r4, s13
9002648a:	eef0 6a43 	vmov.f32	s13, s6
9002648e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026492:	ee16 6a90 	vmov	r6, s13
90026496:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002649a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002649e:	ee77 2a62 	vsub.f32	s5, s14, s5
900264a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900264a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900264aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900264ae:	ee12 2a90 	vmov	r2, s5
900264b2:	eef0 2a47 	vmov.f32	s5, s14
900264b6:	fb92 f3f3 	sdiv	r3, r2, r3
900264ba:	ee13 2a10 	vmov	r2, s6
900264be:	9329      	str	r3, [sp, #164]	@ 0xa4
900264c0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900264c2:	eeb0 3a67 	vmov.f32	s6, s15
900264c6:	fb92 f3f3 	sdiv	r3, r2, r3
900264ca:	932a      	str	r3, [sp, #168]	@ 0xa8
900264cc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900264ce:	9a19      	ldr	r2, [sp, #100]	@ 0x64
900264d0:	3b01      	subs	r3, #1
900264d2:	9317      	str	r3, [sp, #92]	@ 0x5c
900264d4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900264d6:	bf08      	it	eq
900264d8:	4613      	moveq	r3, r2
900264da:	9307      	str	r3, [sp, #28]
900264dc:	e5fb      	b.n	900260d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900264de:	2900      	cmp	r1, #0
900264e0:	f43f ae6b 	beq.w	900261ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900264e4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900264e8:	9308      	str	r3, [sp, #32]
900264ea:	0e1b      	lsrs	r3, r3, #24
900264ec:	9311      	str	r3, [sp, #68]	@ 0x44
900264ee:	e664      	b.n	900261ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900264f0:	f112 0801 	adds.w	r8, r2, #1
900264f4:	f53f af7b 	bmi.w	900263ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900264f8:	4543      	cmp	r3, r8
900264fa:	f6ff af78 	blt.w	900263ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900264fe:	f11c 0801 	adds.w	r8, ip, #1
90026502:	f53f af74 	bmi.w	900263ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026506:	45c6      	cmp	lr, r8
90026508:	f6ff af71 	blt.w	900263ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002650c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9002650e:	b21b      	sxth	r3, r3
90026510:	9201      	str	r2, [sp, #4]
90026512:	fa0f f28e 	sxth.w	r2, lr
90026516:	e9cd 1504 	strd	r1, r5, [sp, #16]
9002651a:	e9cd c002 	strd	ip, r0, [sp, #8]
9002651e:	9200      	str	r2, [sp, #0]
90026520:	4639      	mov	r1, r7
90026522:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90026524:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90026526:	f7ff fc79 	bl	90025e1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
9002652a:	e760      	b.n	900263ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002652c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
9002652e:	1427      	asrs	r7, r4, #16
90026530:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026532:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026536:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002653a:	1433      	asrs	r3, r6, #16
9002653c:	f3c6 3003 	ubfx	r0, r6, #12, #4
90026540:	fb01 7303 	mla	r3, r1, r3, r7
90026544:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90026548:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
9002654c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90026550:	2a00      	cmp	r2, #0
90026552:	f000 8133 	beq.w	900267bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90026556:	687d      	ldr	r5, [r7, #4]
90026558:	950e      	str	r5, [sp, #56]	@ 0x38
9002655a:	0e2d      	lsrs	r5, r5, #24
9002655c:	9515      	str	r5, [sp, #84]	@ 0x54
9002655e:	b178      	cbz	r0, 90026580 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026560:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90026564:	3901      	subs	r1, #1
90026566:	0089      	lsls	r1, r1, #2
90026568:	3104      	adds	r1, #4
9002656a:	eb07 0e01 	add.w	lr, r7, r1
9002656e:	5879      	ldr	r1, [r7, r1]
90026570:	9109      	str	r1, [sp, #36]	@ 0x24
90026572:	0e09      	lsrs	r1, r1, #24
90026574:	9112      	str	r1, [sp, #72]	@ 0x48
90026576:	f8de 1004 	ldr.w	r1, [lr, #4]
9002657a:	910f      	str	r1, [sp, #60]	@ 0x3c
9002657c:	0e09      	lsrs	r1, r1, #24
9002657e:	9116      	str	r1, [sp, #88]	@ 0x58
90026580:	b292      	uxth	r2, r2
90026582:	9915      	ldr	r1, [sp, #84]	@ 0x54
90026584:	b280      	uxth	r0, r0
90026586:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026588:	fb02 f800 	mul.w	r8, r2, r0
9002658c:	0112      	lsls	r2, r2, #4
9002658e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90026592:	eba2 0e08 	sub.w	lr, r2, r8
90026596:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
9002659a:	b280      	uxth	r0, r0
9002659c:	fa1f fe8e 	uxth.w	lr, lr
900265a0:	1a12      	subs	r2, r2, r0
900265a2:	fb0e f101 	mul.w	r1, lr, r1
900265a6:	b292      	uxth	r2, r2
900265a8:	fb02 110c 	mla	r1, r2, ip, r1
900265ac:	fb00 1105 	mla	r1, r0, r5, r1
900265b0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
900265b2:	fb08 1105 	mla	r1, r8, r5, r1
900265b6:	f3c1 2107 	ubfx	r1, r1, #8, #8
900265ba:	2900      	cmp	r1, #0
900265bc:	f000 80f5 	beq.w	900267aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
900265c0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900265c4:	d019      	beq.n	900265fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
900265c6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900265ca:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900265ce:	fb0c fa0a 	mul.w	sl, ip, sl
900265d2:	fb0c fc03 	mul.w	ip, ip, r3
900265d6:	ea4f 231a 	mov.w	r3, sl, lsr #8
900265da:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900265de:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900265e2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900265e6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900265ea:	4453      	add	r3, sl
900265ec:	0a3f      	lsrs	r7, r7, #8
900265ee:	0a1b      	lsrs	r3, r3, #8
900265f0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900265f4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900265f8:	433b      	orrs	r3, r7
900265fa:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900265fc:	2dff      	cmp	r5, #255	@ 0xff
900265fe:	d020      	beq.n	90026642 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90026600:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026602:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026606:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026608:	436f      	muls	r7, r5
9002660a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002660c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026610:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026614:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026616:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002661a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002661e:	fb05 fa0a 	mul.w	sl, r5, sl
90026622:	44bc      	add	ip, r7
90026624:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026628:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002662c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026630:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026634:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026638:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002663c:	ea4c 050a 	orr.w	r5, ip, sl
90026640:	950e      	str	r5, [sp, #56]	@ 0x38
90026642:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026644:	2dff      	cmp	r5, #255	@ 0xff
90026646:	d020      	beq.n	9002668a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90026648:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002664a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002664e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026650:	436f      	muls	r7, r5
90026652:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026654:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026658:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002665c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002665e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026662:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026666:	fb05 fa0a 	mul.w	sl, r5, sl
9002666a:	44bc      	add	ip, r7
9002666c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026670:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026674:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026678:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002667c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026680:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026684:	ea4c 050a 	orr.w	r5, ip, sl
90026688:	9509      	str	r5, [sp, #36]	@ 0x24
9002668a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9002668c:	2dff      	cmp	r5, #255	@ 0xff
9002668e:	d020      	beq.n	900266d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90026690:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026692:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026696:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90026698:	436f      	muls	r7, r5
9002669a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9002669c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900266a0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900266a4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
900266a6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900266aa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900266ae:	fb05 fa0a 	mul.w	sl, r5, sl
900266b2:	44bc      	add	ip, r7
900266b4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900266b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900266bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900266c0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900266c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900266c8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900266cc:	ea4c 050a 	orr.w	r5, ip, sl
900266d0:	950f      	str	r5, [sp, #60]	@ 0x3c
900266d2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900266d4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900266d8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900266dc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900266e0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900266e2:	fb0e f707 	mul.w	r7, lr, r7
900266e6:	fb02 770c 	mla	r7, r2, ip, r7
900266ea:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900266ee:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900266f0:	fb00 770c 	mla	r7, r0, ip, r7
900266f4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900266f8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900266fa:	fb08 770c 	mla	r7, r8, ip, r7
900266fe:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90026702:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026704:	fb0e fe0c 	mul.w	lr, lr, ip
90026708:	0a3f      	lsrs	r7, r7, #8
9002670a:	fb02 e303 	mla	r3, r2, r3, lr
9002670e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90026710:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90026714:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90026718:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002671a:	fb00 330a 	mla	r3, r0, sl, r3
9002671e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90026722:	f8b9 0000 	ldrh.w	r0, [r9]
90026726:	fb08 3c0c 	mla	ip, r8, ip, r3
9002672a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002672c:	1202      	asrs	r2, r0, #8
9002672e:	4359      	muls	r1, r3
90026730:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026734:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90026738:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002673c:	1c4b      	adds	r3, r1, #1
9002673e:	ea47 070c 	orr.w	r7, r7, ip
90026742:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026746:	0c3b      	lsrs	r3, r7, #16
90026748:	ea6f 2111 	mvn.w	r1, r1, lsr #8
9002674c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90026750:	b2ff      	uxtb	r7, r7
90026752:	fb13 f305 	smulbb	r3, r3, r5
90026756:	b2c9      	uxtb	r1, r1
90026758:	fb17 f705 	smulbb	r7, r7, r5
9002675c:	fb02 3201 	mla	r2, r2, r1, r3
90026760:	10c3      	asrs	r3, r0, #3
90026762:	fb1c fc05 	smulbb	ip, ip, r5
90026766:	00c0      	lsls	r0, r0, #3
90026768:	b292      	uxth	r2, r2
9002676a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002676e:	b2c0      	uxtb	r0, r0
90026770:	fb03 c301 	mla	r3, r3, r1, ip
90026774:	fb00 7001 	mla	r0, r0, r1, r7
90026778:	1c51      	adds	r1, r2, #1
9002677a:	b29b      	uxth	r3, r3
9002677c:	b280      	uxth	r0, r0
9002677e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026782:	f100 0c01 	add.w	ip, r0, #1
90026786:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
9002678a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
9002678e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90026792:	ea4c 0202 	orr.w	r2, ip, r2
90026796:	f103 0c01 	add.w	ip, r3, #1
9002679a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9002679e:	095b      	lsrs	r3, r3, #5
900267a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900267a4:	431a      	orrs	r2, r3
900267a6:	f8a9 2000 	strh.w	r2, [r9]
900267aa:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900267ac:	f109 0902 	add.w	r9, r9, #2
900267b0:	f10b 3bff 	add.w	fp, fp, #4294967295
900267b4:	441c      	add	r4, r3
900267b6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900267b8:	441e      	add	r6, r3
900267ba:	e647      	b.n	9002644c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
900267bc:	2800      	cmp	r0, #0
900267be:	f43f aedf 	beq.w	90026580 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900267c2:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
900267c6:	9109      	str	r1, [sp, #36]	@ 0x24
900267c8:	0e09      	lsrs	r1, r1, #24
900267ca:	9112      	str	r1, [sp, #72]	@ 0x48
900267cc:	e6d8      	b.n	90026580 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900267ce:	b01d      	add	sp, #116	@ 0x74
900267d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900267d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
900267d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900267d8:	b085      	sub	sp, #20
900267da:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
900267de:	9102      	str	r1, [sp, #8]
900267e0:	2c00      	cmp	r4, #0
900267e2:	fb04 7103 	mla	r1, r4, r3, r7
900267e6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
900267ea:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900267ee:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900267f2:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
900267f6:	f2c0 810c 	blt.w	90026a12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900267fa:	45a6      	cmp	lr, r4
900267fc:	f340 8109 	ble.w	90026a12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90026800:	2f00      	cmp	r7, #0
90026802:	f2c0 8104 	blt.w	90026a0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90026806:	42bb      	cmp	r3, r7
90026808:	f340 8101 	ble.w	90026a0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
9002680c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90026810:	1c7a      	adds	r2, r7, #1
90026812:	f100 8101 	bmi.w	90026a18 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90026816:	4293      	cmp	r3, r2
90026818:	f340 80fe 	ble.w	90026a18 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
9002681c:	2e00      	cmp	r6, #0
9002681e:	f000 80fd 	beq.w	90026a1c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90026822:	f8dc 1004 	ldr.w	r1, [ip, #4]
90026826:	3401      	adds	r4, #1
90026828:	f100 80fc 	bmi.w	90026a24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
9002682c:	45a6      	cmp	lr, r4
9002682e:	f340 80f9 	ble.w	90026a24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90026832:	2800      	cmp	r0, #0
90026834:	f000 80f9 	beq.w	90026a2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90026838:	2f00      	cmp	r7, #0
9002683a:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
9002683e:	f2c0 80ef 	blt.w	90026a20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026842:	42bb      	cmp	r3, r7
90026844:	f340 80ec 	ble.w	90026a20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026848:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
9002684c:	3701      	adds	r7, #1
9002684e:	f100 80ef 	bmi.w	90026a30 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026852:	42bb      	cmp	r3, r7
90026854:	f340 80ec 	ble.w	90026a30 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026858:	2e00      	cmp	r6, #0
9002685a:	f000 80eb 	beq.w	90026a34 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
9002685e:	6852      	ldr	r2, [r2, #4]
90026860:	b2b6      	uxth	r6, r6
90026862:	b280      	uxth	r0, r0
90026864:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90026868:	fb00 fe06 	mul.w	lr, r0, r6
9002686c:	0136      	lsls	r6, r6, #4
9002686e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90026872:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90026876:	eba6 070e 	sub.w	r7, r6, lr
9002687a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
9002687e:	ea4f 6914 	mov.w	r9, r4, lsr #24
90026882:	b280      	uxth	r0, r0
90026884:	b2bf      	uxth	r7, r7
90026886:	1a1b      	subs	r3, r3, r0
90026888:	ea4f 6812 	mov.w	r8, r2, lsr #24
9002688c:	fb07 f60a 	mul.w	r6, r7, sl
90026890:	b29b      	uxth	r3, r3
90026892:	fb0b 6603 	mla	r6, fp, r3, r6
90026896:	fb00 6609 	mla	r6, r0, r9, r6
9002689a:	fb0e 6608 	mla	r6, lr, r8, r6
9002689e:	f3c6 2607 	ubfx	r6, r6, #8, #8
900268a2:	9600      	str	r6, [sp, #0]
900268a4:	2e00      	cmp	r6, #0
900268a6:	f000 80af 	beq.w	90026a08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
900268aa:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900268ae:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900268b2:	9e02      	ldr	r6, [sp, #8]
900268b4:	fb0b fc0c 	mul.w	ip, fp, ip
900268b8:	fb0b f505 	mul.w	r5, fp, r5
900268bc:	8836      	ldrh	r6, [r6, #0]
900268be:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900268c2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900268c6:	9501      	str	r5, [sp, #4]
900268c8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900268cc:	44dc      	add	ip, fp
900268ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900268d2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900268d6:	9503      	str	r5, [sp, #12]
900268d8:	9d01      	ldr	r5, [sp, #4]
900268da:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900268de:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900268e2:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900268e6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900268ea:	fb0a fc0c 	mul.w	ip, sl, ip
900268ee:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900268f2:	fb0a fa01 	mul.w	sl, sl, r1
900268f6:	ea4f 251c 	mov.w	r5, ip, lsr #8
900268fa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900268fe:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90026902:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90026906:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002690a:	4465      	add	r5, ip
9002690c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90026910:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90026914:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026918:	fb09 fc0c 	mul.w	ip, r9, ip
9002691c:	0a2d      	lsrs	r5, r5, #8
9002691e:	fb09 f904 	mul.w	r9, r9, r4
90026922:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026926:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002692a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002692e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90026932:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90026936:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002693a:	437d      	muls	r5, r7
9002693c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90026940:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90026944:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026948:	4461      	add	r1, ip
9002694a:	fb08 f404 	mul.w	r4, r8, r4
9002694e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026952:	fb08 f802 	mul.w	r8, r8, r2
90026956:	0a09      	lsrs	r1, r1, #8
90026958:	0a22      	lsrs	r2, r4, #8
9002695a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
9002695e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90026962:	fb07 f70a 	mul.w	r7, r7, sl
90026966:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002696a:	4414      	add	r4, r2
9002696c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90026970:	0a24      	lsrs	r4, r4, #8
90026972:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90026976:	9a03      	ldr	r2, [sp, #12]
90026978:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
9002697c:	fb02 5503 	mla	r5, r2, r3, r5
90026980:	ea4f 2818 	mov.w	r8, r8, lsr #8
90026984:	fb04 540e 	mla	r4, r4, lr, r5
90026988:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
9002698c:	fb01 4100 	mla	r1, r1, r0, r4
90026990:	0a09      	lsrs	r1, r1, #8
90026992:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90026996:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
9002699a:	fb03 7101 	mla	r1, r3, r1, r7
9002699e:	9b00      	ldr	r3, [sp, #0]
900269a0:	fb0e 1e08 	mla	lr, lr, r8, r1
900269a4:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900269a8:	43da      	mvns	r2, r3
900269aa:	1233      	asrs	r3, r6, #8
900269ac:	fb00 e101 	mla	r1, r0, r1, lr
900269b0:	10f0      	asrs	r0, r6, #3
900269b2:	b2d2      	uxtb	r2, r2
900269b4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900269b8:	0a09      	lsrs	r1, r1, #8
900269ba:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900269be:	00f6      	lsls	r6, r6, #3
900269c0:	4353      	muls	r3, r2
900269c2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900269c6:	4350      	muls	r0, r2
900269c8:	b2f6      	uxtb	r6, r6
900269ca:	4321      	orrs	r1, r4
900269cc:	4356      	muls	r6, r2
900269ce:	1c5a      	adds	r2, r3, #1
900269d0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900269d4:	0c0b      	lsrs	r3, r1, #16
900269d6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900269da:	1c42      	adds	r2, r0, #1
900269dc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900269e0:	0a0a      	lsrs	r2, r1, #8
900269e2:	021b      	lsls	r3, r3, #8
900269e4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900269e8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900269ec:	00d2      	lsls	r2, r2, #3
900269ee:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900269f2:	4313      	orrs	r3, r2
900269f4:	1c72      	adds	r2, r6, #1
900269f6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
900269fa:	eb01 2116 	add.w	r1, r1, r6, lsr #8
900269fe:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90026a02:	4319      	orrs	r1, r3
90026a04:	9b02      	ldr	r3, [sp, #8]
90026a06:	8019      	strh	r1, [r3, #0]
90026a08:	b005      	add	sp, #20
90026a0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026a0e:	2500      	movs	r5, #0
90026a10:	e6fe      	b.n	90026810 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90026a12:	2100      	movs	r1, #0
90026a14:	460d      	mov	r5, r1
90026a16:	e706      	b.n	90026826 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026a18:	2100      	movs	r1, #0
90026a1a:	e704      	b.n	90026826 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026a1c:	4631      	mov	r1, r6
90026a1e:	e702      	b.n	90026826 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026a20:	2400      	movs	r4, #0
90026a22:	e713      	b.n	9002684c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90026a24:	2200      	movs	r2, #0
90026a26:	4614      	mov	r4, r2
90026a28:	e71a      	b.n	90026860 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026a2a:	4602      	mov	r2, r0
90026a2c:	4604      	mov	r4, r0
90026a2e:	e717      	b.n	90026860 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026a30:	2200      	movs	r2, #0
90026a32:	e715      	b.n	90026860 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026a34:	4632      	mov	r2, r6
90026a36:	e713      	b.n	90026860 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90026a38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026a38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026a3c:	b09b      	sub	sp, #108	@ 0x6c
90026a3e:	9218      	str	r2, [sp, #96]	@ 0x60
90026a40:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90026a42:	9019      	str	r0, [sp, #100]	@ 0x64
90026a44:	9116      	str	r1, [sp, #88]	@ 0x58
90026a46:	6850      	ldr	r0, [r2, #4]
90026a48:	9307      	str	r3, [sp, #28]
90026a4a:	6812      	ldr	r2, [r2, #0]
90026a4c:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90026a50:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90026a54:	fb00 1303 	mla	r3, r0, r3, r1
90026a58:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90026a5c:	930a      	str	r3, [sp, #40]	@ 0x28
90026a5e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026a60:	681b      	ldr	r3, [r3, #0]
90026a62:	930f      	str	r3, [sp, #60]	@ 0x3c
90026a64:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90026a66:	2b00      	cmp	r3, #0
90026a68:	dc03      	bgt.n	90026a72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90026a6a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90026a6c:	2b00      	cmp	r3, #0
90026a6e:	f340 8387 	ble.w	90027180 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90026a72:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026a74:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026a78:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026a7c:	1e48      	subs	r0, r1, #1
90026a7e:	1e57      	subs	r7, r2, #1
90026a80:	9b07      	ldr	r3, [sp, #28]
90026a82:	2b00      	cmp	r3, #0
90026a84:	f340 8166 	ble.w	90026d54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90026a88:	ea5f 4c24 	movs.w	ip, r4, asr #16
90026a8c:	ea4f 4326 	mov.w	r3, r6, asr #16
90026a90:	d406      	bmi.n	90026aa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90026a92:	4584      	cmp	ip, r0
90026a94:	da04      	bge.n	90026aa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90026a96:	2b00      	cmp	r3, #0
90026a98:	db02      	blt.n	90026aa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90026a9a:	42bb      	cmp	r3, r7
90026a9c:	f2c0 815b 	blt.w	90026d56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90026aa0:	f11c 0c01 	adds.w	ip, ip, #1
90026aa4:	f100 814b 	bmi.w	90026d3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026aa8:	4561      	cmp	r1, ip
90026aaa:	f2c0 8148 	blt.w	90026d3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026aae:	3301      	adds	r3, #1
90026ab0:	f100 8145 	bmi.w	90026d3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026ab4:	429a      	cmp	r2, r3
90026ab6:	f2c0 8142 	blt.w	90026d3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026aba:	9b07      	ldr	r3, [sp, #28]
90026abc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90026abe:	9317      	str	r3, [sp, #92]	@ 0x5c
90026ac0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026ac2:	2b00      	cmp	r3, #0
90026ac4:	f340 8165 	ble.w	90026d92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90026ac8:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
90026aca:	ea4f 4c26 	mov.w	ip, r6, asr #16
90026ace:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026ad0:	f3c4 3103 	ubfx	r1, r4, #12, #4
90026ad4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90026ad8:	1422      	asrs	r2, r4, #16
90026ada:	f3c6 3003 	ubfx	r0, r6, #12, #4
90026ade:	689b      	ldr	r3, [r3, #8]
90026ae0:	f100 81d5 	bmi.w	90026e8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026ae4:	f103 38ff 	add.w	r8, r3, #4294967295
90026ae8:	4542      	cmp	r2, r8
90026aea:	f280 81d0 	bge.w	90026e8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026aee:	f1bc 0f00 	cmp.w	ip, #0
90026af2:	f2c0 81cc 	blt.w	90026e8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026af6:	f10e 38ff 	add.w	r8, lr, #4294967295
90026afa:	45c4      	cmp	ip, r8
90026afc:	f280 81c7 	bge.w	90026e8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026b00:	b21b      	sxth	r3, r3
90026b02:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026b04:	fb0c 2203 	mla	r2, ip, r3, r2
90026b08:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90026b0c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90026b10:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90026b14:	2900      	cmp	r1, #0
90026b16:	f000 8182 	beq.w	90026e1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90026b1a:	f8d8 5004 	ldr.w	r5, [r8, #4]
90026b1e:	950b      	str	r5, [sp, #44]	@ 0x2c
90026b20:	0e2d      	lsrs	r5, r5, #24
90026b22:	9512      	str	r5, [sp, #72]	@ 0x48
90026b24:	b180      	cbz	r0, 90026b48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90026b26:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90026b2a:	3b01      	subs	r3, #1
90026b2c:	009b      	lsls	r3, r3, #2
90026b2e:	3304      	adds	r3, #4
90026b30:	eb08 0c03 	add.w	ip, r8, r3
90026b34:	f858 3003 	ldr.w	r3, [r8, r3]
90026b38:	9308      	str	r3, [sp, #32]
90026b3a:	0e1b      	lsrs	r3, r3, #24
90026b3c:	9310      	str	r3, [sp, #64]	@ 0x40
90026b3e:	f8dc 3004 	ldr.w	r3, [ip, #4]
90026b42:	930c      	str	r3, [sp, #48]	@ 0x30
90026b44:	0e1b      	lsrs	r3, r3, #24
90026b46:	9313      	str	r3, [sp, #76]	@ 0x4c
90026b48:	b289      	uxth	r1, r1
90026b4a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90026b4c:	b280      	uxth	r0, r0
90026b4e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026b50:	fb01 f900 	mul.w	r9, r1, r0
90026b54:	0109      	lsls	r1, r1, #4
90026b56:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90026b5a:	eba1 0809 	sub.w	r8, r1, r9
90026b5e:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
90026b62:	b280      	uxth	r0, r0
90026b64:	fa1f f888 	uxth.w	r8, r8
90026b68:	1a09      	subs	r1, r1, r0
90026b6a:	fb08 f303 	mul.w	r3, r8, r3
90026b6e:	b289      	uxth	r1, r1
90026b70:	fb01 330e 	mla	r3, r1, lr, r3
90026b74:	fb00 3305 	mla	r3, r0, r5, r3
90026b78:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026b7a:	fb09 3305 	mla	r3, r9, r5, r3
90026b7e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026b82:	2b00      	cmp	r3, #0
90026b84:	f000 80d2 	beq.w	90026d2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90026b88:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90026b8c:	d01b      	beq.n	90026bc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90026b8e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90026b92:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026b96:	fb0e fa0a 	mul.w	sl, lr, sl
90026b9a:	fb0e fe02 	mul.w	lr, lr, r2
90026b9e:	ea4f 221a 	mov.w	r2, sl, lsr #8
90026ba2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90026ba6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90026baa:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026bae:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90026bb2:	4452      	add	r2, sl
90026bb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026bb8:	0a12      	lsrs	r2, r2, #8
90026bba:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90026bbe:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90026bc2:	ea42 020c 	orr.w	r2, r2, ip
90026bc6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026bc8:	2dff      	cmp	r5, #255	@ 0xff
90026bca:	d021      	beq.n	90026c10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90026bcc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026bce:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026bd2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026bd4:	fb05 fb0b 	mul.w	fp, r5, fp
90026bd8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026bda:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026bde:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026be0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026be4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026be8:	fb05 fa0a 	mul.w	sl, r5, sl
90026bec:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026bf0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026bf4:	44de      	add	lr, fp
90026bf6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026bfa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026bfe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026c02:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026c06:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026c0a:	ea4e 050a 	orr.w	r5, lr, sl
90026c0e:	950b      	str	r5, [sp, #44]	@ 0x2c
90026c10:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026c12:	2dff      	cmp	r5, #255	@ 0xff
90026c14:	d021      	beq.n	90026c5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90026c16:	9d08      	ldr	r5, [sp, #32]
90026c18:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026c1c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026c1e:	fb05 fb0b 	mul.w	fp, r5, fp
90026c22:	9d08      	ldr	r5, [sp, #32]
90026c24:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90026c28:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026c2a:	fb05 fa0e 	mul.w	sl, r5, lr
90026c2e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026c32:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026c36:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026c3a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026c3e:	44de      	add	lr, fp
90026c40:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026c44:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026c48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026c4c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026c50:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026c54:	ea4e 050a 	orr.w	r5, lr, sl
90026c58:	9508      	str	r5, [sp, #32]
90026c5a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026c5c:	2dff      	cmp	r5, #255	@ 0xff
90026c5e:	d021      	beq.n	90026ca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90026c60:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026c62:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026c66:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026c68:	fb05 fb0b 	mul.w	fp, r5, fp
90026c6c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026c6e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026c72:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026c74:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026c78:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026c7c:	fb05 fa0a 	mul.w	sl, r5, sl
90026c80:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026c84:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026c88:	44de      	add	lr, fp
90026c8a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026c8e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026c92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026c96:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026c9a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026c9e:	ea4e 050a 	orr.w	r5, lr, sl
90026ca2:	950c      	str	r5, [sp, #48]	@ 0x30
90026ca4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026ca6:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90026caa:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026cae:	2bff      	cmp	r3, #255	@ 0xff
90026cb0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026cb4:	9d08      	ldr	r5, [sp, #32]
90026cb6:	fb08 fc0c 	mul.w	ip, r8, ip
90026cba:	fb01 cc0e 	mla	ip, r1, lr, ip
90026cbe:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90026cc2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026cc4:	fb00 cc0e 	mla	ip, r0, lr, ip
90026cc8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90026ccc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026cce:	fb09 cc0e 	mla	ip, r9, lr, ip
90026cd2:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90026cd6:	fb08 f80e 	mul.w	r8, r8, lr
90026cda:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026cde:	fb01 8202 	mla	r2, r1, r2, r8
90026ce2:	9908      	ldr	r1, [sp, #32]
90026ce4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026ce8:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90026cec:	990c      	ldr	r1, [sp, #48]	@ 0x30
90026cee:	fb00 220a 	mla	r2, r0, sl, r2
90026cf2:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
90026cf6:	fb09 2900 	mla	r9, r9, r0, r2
90026cfa:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026cfe:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90026d02:	ea4c 0c09 	orr.w	ip, ip, r9
90026d06:	ea4f 221c 	mov.w	r2, ip, lsr #8
90026d0a:	f040 8091 	bne.w	90026e30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90026d0e:	ea4f 135c 	mov.w	r3, ip, lsr #5
90026d12:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
90026d16:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026d1a:	f022 0207 	bic.w	r2, r2, #7
90026d1e:	431a      	orrs	r2, r3
90026d20:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90026d24:	ea4c 0c02 	orr.w	ip, ip, r2
90026d28:	f8a7 c000 	strh.w	ip, [r7]
90026d2c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90026d2e:	3702      	adds	r7, #2
90026d30:	441c      	add	r4, r3
90026d32:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026d34:	441e      	add	r6, r3
90026d36:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026d38:	3b01      	subs	r3, #1
90026d3a:	9317      	str	r3, [sp, #92]	@ 0x5c
90026d3c:	e6c0      	b.n	90026ac0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90026d3e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90026d40:	441c      	add	r4, r3
90026d42:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026d44:	441e      	add	r6, r3
90026d46:	9b07      	ldr	r3, [sp, #28]
90026d48:	3b01      	subs	r3, #1
90026d4a:	9307      	str	r3, [sp, #28]
90026d4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90026d4e:	3302      	adds	r3, #2
90026d50:	930a      	str	r3, [sp, #40]	@ 0x28
90026d52:	e695      	b.n	90026a80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90026d54:	d024      	beq.n	90026da0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90026d56:	9b07      	ldr	r3, [sp, #28]
90026d58:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90026d5a:	3b01      	subs	r3, #1
90026d5c:	fb00 4003 	mla	r0, r0, r3, r4
90026d60:	1400      	asrs	r0, r0, #16
90026d62:	f53f aeaa 	bmi.w	90026aba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90026d66:	3901      	subs	r1, #1
90026d68:	4288      	cmp	r0, r1
90026d6a:	f6bf aea6 	bge.w	90026aba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90026d6e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90026d70:	fb01 6303 	mla	r3, r1, r3, r6
90026d74:	141b      	asrs	r3, r3, #16
90026d76:	f53f aea0 	bmi.w	90026aba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90026d7a:	3a01      	subs	r2, #1
90026d7c:	4293      	cmp	r3, r2
90026d7e:	f6bf ae9c 	bge.w	90026aba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90026d82:	f8dd b01c 	ldr.w	fp, [sp, #28]
90026d86:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
90026d8a:	f1bb 0f00 	cmp.w	fp, #0
90026d8e:	f300 809a 	bgt.w	90026ec6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90026d92:	9b07      	ldr	r3, [sp, #28]
90026d94:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90026d98:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90026d9a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90026d9e:	930a      	str	r3, [sp, #40]	@ 0x28
90026da0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90026da2:	2b00      	cmp	r3, #0
90026da4:	f340 81ec 	ble.w	90027180 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90026da8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026dac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026dae:	ee30 0a04 	vadd.f32	s0, s0, s8
90026db2:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026db6:	eef0 6a62 	vmov.f32	s13, s5
90026dba:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026dbe:	ee31 1a05 	vadd.f32	s2, s2, s10
90026dc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026dc6:	ee16 4a90 	vmov	r4, s13
90026dca:	eef0 6a43 	vmov.f32	s13, s6
90026dce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026dd2:	ee16 6a90 	vmov	r6, s13
90026dd6:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026dda:	ee61 7a27 	vmul.f32	s15, s2, s15
90026dde:	ee77 2a62 	vsub.f32	s5, s14, s5
90026de2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026de6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026dea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026dee:	ee12 2a90 	vmov	r2, s5
90026df2:	eef0 2a47 	vmov.f32	s5, s14
90026df6:	fb92 f3f3 	sdiv	r3, r2, r3
90026dfa:	ee13 2a10 	vmov	r2, s6
90026dfe:	9327      	str	r3, [sp, #156]	@ 0x9c
90026e00:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026e02:	eeb0 3a67 	vmov.f32	s6, s15
90026e06:	fb92 f3f3 	sdiv	r3, r2, r3
90026e0a:	9328      	str	r3, [sp, #160]	@ 0xa0
90026e0c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90026e0e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90026e10:	3b01      	subs	r3, #1
90026e12:	9316      	str	r3, [sp, #88]	@ 0x58
90026e14:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026e16:	bf08      	it	eq
90026e18:	4613      	moveq	r3, r2
90026e1a:	9307      	str	r3, [sp, #28]
90026e1c:	e622      	b.n	90026a64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90026e1e:	2800      	cmp	r0, #0
90026e20:	f43f ae92 	beq.w	90026b48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90026e24:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90026e28:	9308      	str	r3, [sp, #32]
90026e2a:	0e1b      	lsrs	r3, r3, #24
90026e2c:	9310      	str	r3, [sp, #64]	@ 0x40
90026e2e:	e68b      	b.n	90026b48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90026e30:	8839      	ldrh	r1, [r7, #0]
90026e32:	43db      	mvns	r3, r3
90026e34:	4dd4      	ldr	r5, [pc, #848]	@ (90027188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90026e36:	ea4f 2e21 	mov.w	lr, r1, asr #8
90026e3a:	fa5f f883 	uxtb.w	r8, r3
90026e3e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90026e42:	10c8      	asrs	r0, r1, #3
90026e44:	00cb      	lsls	r3, r1, #3
90026e46:	fb0e fe08 	mul.w	lr, lr, r8
90026e4a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90026e4e:	b2db      	uxtb	r3, r3
90026e50:	f10e 0101 	add.w	r1, lr, #1
90026e54:	fb00 f008 	mul.w	r0, r0, r8
90026e58:	fb03 f308 	mul.w	r3, r3, r8
90026e5c:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90026e60:	ea4f 411c 	mov.w	r1, ip, lsr #16
90026e64:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90026e68:	f100 0e01 	add.w	lr, r0, #1
90026e6c:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90026e70:	b2c9      	uxtb	r1, r1
90026e72:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90026e76:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90026e7a:	00d2      	lsls	r2, r2, #3
90026e7c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026e80:	430a      	orrs	r2, r1
90026e82:	1c59      	adds	r1, r3, #1
90026e84:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90026e88:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90026e8c:	e748      	b.n	90026d20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90026e8e:	f112 0801 	adds.w	r8, r2, #1
90026e92:	f53f af4b 	bmi.w	90026d2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90026e96:	4543      	cmp	r3, r8
90026e98:	f6ff af48 	blt.w	90026d2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90026e9c:	f11c 0801 	adds.w	r8, ip, #1
90026ea0:	f53f af44 	bmi.w	90026d2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90026ea4:	45c6      	cmp	lr, r8
90026ea6:	f6ff af41 	blt.w	90026d2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90026eaa:	b21b      	sxth	r3, r3
90026eac:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90026eb0:	fa0f f28e 	sxth.w	r2, lr
90026eb4:	e9cd 1003 	strd	r1, r0, [sp, #12]
90026eb8:	9200      	str	r2, [sp, #0]
90026eba:	4639      	mov	r1, r7
90026ebc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90026ebe:	9819      	ldr	r0, [sp, #100]	@ 0x64
90026ec0:	f7ff fc88 	bl	900267d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90026ec4:	e732      	b.n	90026d2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90026ec6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026ec8:	1421      	asrs	r1, r4, #16
90026eca:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026ecc:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026ed0:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90026ed4:	1433      	asrs	r3, r6, #16
90026ed6:	f3c6 3003 	ubfx	r0, r6, #12, #4
90026eda:	fb07 1303 	mla	r3, r7, r3, r1
90026ede:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90026ee0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90026ee4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90026ee8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90026eec:	2a00      	cmp	r2, #0
90026eee:	f000 8108 	beq.w	90027102 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90026ef2:	684d      	ldr	r5, [r1, #4]
90026ef4:	950d      	str	r5, [sp, #52]	@ 0x34
90026ef6:	0e2d      	lsrs	r5, r5, #24
90026ef8:	9514      	str	r5, [sp, #80]	@ 0x50
90026efa:	b178      	cbz	r0, 90026f1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90026efc:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
90026f00:	3f01      	subs	r7, #1
90026f02:	00bf      	lsls	r7, r7, #2
90026f04:	3704      	adds	r7, #4
90026f06:	eb01 0e07 	add.w	lr, r1, r7
90026f0a:	59c9      	ldr	r1, [r1, r7]
90026f0c:	9109      	str	r1, [sp, #36]	@ 0x24
90026f0e:	0e09      	lsrs	r1, r1, #24
90026f10:	9111      	str	r1, [sp, #68]	@ 0x44
90026f12:	f8de 1004 	ldr.w	r1, [lr, #4]
90026f16:	910e      	str	r1, [sp, #56]	@ 0x38
90026f18:	0e09      	lsrs	r1, r1, #24
90026f1a:	9115      	str	r1, [sp, #84]	@ 0x54
90026f1c:	b292      	uxth	r2, r2
90026f1e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026f20:	b280      	uxth	r0, r0
90026f22:	fb02 f900 	mul.w	r9, r2, r0
90026f26:	0112      	lsls	r2, r2, #4
90026f28:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90026f2c:	eba2 0e09 	sub.w	lr, r2, r9
90026f30:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90026f34:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90026f36:	b280      	uxth	r0, r0
90026f38:	fa1f fe8e 	uxth.w	lr, lr
90026f3c:	1a09      	subs	r1, r1, r0
90026f3e:	fb0e f202 	mul.w	r2, lr, r2
90026f42:	b289      	uxth	r1, r1
90026f44:	fb01 220c 	mla	r2, r1, ip, r2
90026f48:	fb00 2205 	mla	r2, r0, r5, r2
90026f4c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026f4e:	fb09 2205 	mla	r2, r9, r5, r2
90026f52:	f3c2 2207 	ubfx	r2, r2, #8, #8
90026f56:	2a00      	cmp	r2, #0
90026f58:	f000 80ca 	beq.w	900270f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90026f5c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90026f60:	d019      	beq.n	90026f96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90026f62:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90026f66:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90026f6a:	fb0c fa0a 	mul.w	sl, ip, sl
90026f6e:	fb0c fc03 	mul.w	ip, ip, r3
90026f72:	ea4f 231a 	mov.w	r3, sl, lsr #8
90026f76:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90026f7a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90026f7e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90026f82:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90026f86:	4453      	add	r3, sl
90026f88:	0a3f      	lsrs	r7, r7, #8
90026f8a:	0a1b      	lsrs	r3, r3, #8
90026f8c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90026f90:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90026f94:	433b      	orrs	r3, r7
90026f96:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026f98:	2dff      	cmp	r5, #255	@ 0xff
90026f9a:	d020      	beq.n	90026fde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90026f9c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026f9e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026fa2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026fa4:	436f      	muls	r7, r5
90026fa6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026fa8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026fac:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026fb0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90026fb2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026fb6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026fba:	fb05 fa0a 	mul.w	sl, r5, sl
90026fbe:	44bc      	add	ip, r7
90026fc0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026fc4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026fc8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026fcc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026fd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026fd4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026fd8:	ea4c 050a 	orr.w	r5, ip, sl
90026fdc:	950d      	str	r5, [sp, #52]	@ 0x34
90026fde:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026fe0:	2dff      	cmp	r5, #255	@ 0xff
90026fe2:	d020      	beq.n	90027026 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90026fe4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026fe6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026fea:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026fec:	436f      	muls	r7, r5
90026fee:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026ff0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90026ff4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026ff6:	fb05 fa0c 	mul.w	sl, r5, ip
90026ffa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026ffe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90027002:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027006:	44bc      	add	ip, r7
90027008:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002700c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027010:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027014:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027018:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002701c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027020:	ea4c 050a 	orr.w	r5, ip, sl
90027024:	9509      	str	r5, [sp, #36]	@ 0x24
90027026:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027028:	2dff      	cmp	r5, #255	@ 0xff
9002702a:	d020      	beq.n	9002706e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
9002702c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002702e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90027032:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027034:	436f      	muls	r7, r5
90027036:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027038:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002703c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90027040:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90027042:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90027046:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002704a:	fb05 fa0a 	mul.w	sl, r5, sl
9002704e:	44bc      	add	ip, r7
90027050:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90027054:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027058:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002705c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90027060:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027064:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90027068:	ea4c 050a 	orr.w	r5, ip, sl
9002706c:	950e      	str	r5, [sp, #56]	@ 0x38
9002706e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027070:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90027074:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90027078:	2aff      	cmp	r2, #255	@ 0xff
9002707a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002707e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90027080:	fb0e f707 	mul.w	r7, lr, r7
90027084:	fb01 770c 	mla	r7, r1, ip, r7
90027088:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
9002708c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002708e:	fb00 770c 	mla	r7, r0, ip, r7
90027092:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90027096:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90027098:	fb09 770c 	mla	r7, r9, ip, r7
9002709c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900270a0:	fb0e fe0c 	mul.w	lr, lr, ip
900270a4:	ea4f 2717 	mov.w	r7, r7, lsr #8
900270a8:	fb01 e303 	mla	r3, r1, r3, lr
900270ac:	9909      	ldr	r1, [sp, #36]	@ 0x24
900270ae:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900270b2:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900270b6:	990e      	ldr	r1, [sp, #56]	@ 0x38
900270b8:	fb00 330a 	mla	r3, r0, sl, r3
900270bc:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
900270c0:	fb09 3c0c 	mla	ip, r9, ip, r3
900270c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900270c8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900270cc:	ea47 070c 	orr.w	r7, r7, ip
900270d0:	ea4f 2317 	mov.w	r3, r7, lsr #8
900270d4:	d11e      	bne.n	90027114 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
900270d6:	097a      	lsrs	r2, r7, #5
900270d8:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
900270dc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900270e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900270e4:	f023 0307 	bic.w	r3, r3, #7
900270e8:	4313      	orrs	r3, r2
900270ea:	431f      	orrs	r7, r3
900270ec:	f8a8 7000 	strh.w	r7, [r8]
900270f0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900270f2:	f108 0802 	add.w	r8, r8, #2
900270f6:	f10b 3bff 	add.w	fp, fp, #4294967295
900270fa:	441c      	add	r4, r3
900270fc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900270fe:	441e      	add	r6, r3
90027100:	e643      	b.n	90026d8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90027102:	2800      	cmp	r0, #0
90027104:	f43f af0a 	beq.w	90026f1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027108:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
9002710c:	9109      	str	r1, [sp, #36]	@ 0x24
9002710e:	0e09      	lsrs	r1, r1, #24
90027110:	9111      	str	r1, [sp, #68]	@ 0x44
90027112:	e703      	b.n	90026f1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027114:	f8b8 1000 	ldrh.w	r1, [r8]
90027118:	43d2      	mvns	r2, r2
9002711a:	ea4f 2c21 	mov.w	ip, r1, asr #8
9002711e:	fa5f fe82 	uxtb.w	lr, r2
90027122:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90027126:	10c8      	asrs	r0, r1, #3
90027128:	00ca      	lsls	r2, r1, #3
9002712a:	fb0c fc0e 	mul.w	ip, ip, lr
9002712e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027132:	b2d2      	uxtb	r2, r2
90027134:	f10c 0101 	add.w	r1, ip, #1
90027138:	fb00 f00e 	mul.w	r0, r0, lr
9002713c:	fb02 f20e 	mul.w	r2, r2, lr
90027140:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027144:	0c39      	lsrs	r1, r7, #16
90027146:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002714a:	490f      	ldr	r1, [pc, #60]	@ (90027188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
9002714c:	fa5f fc8c 	uxtb.w	ip, ip
90027150:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90027154:	1c41      	adds	r1, r0, #1
90027156:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002715a:	1c51      	adds	r1, r2, #1
9002715c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027160:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90027164:	00c0      	lsls	r0, r0, #3
90027166:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9002716a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002716e:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90027172:	ea4c 0c00 	orr.w	ip, ip, r0
90027176:	ea47 0c0c 	orr.w	ip, r7, ip
9002717a:	f8a8 c000 	strh.w	ip, [r8]
9002717e:	e7b7      	b.n	900270f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90027180:	b01b      	add	sp, #108	@ 0x6c
90027182:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027186:	bf00      	nop
90027188:	fffff800 	.word	0xfffff800

9002718c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
9002718c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027190:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90027194:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90027198:	2d00      	cmp	r5, #0
9002719a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
9002719e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900271a2:	fb05 0e03 	mla	lr, r5, r3, r0
900271a6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900271aa:	f2c0 808c 	blt.w	900272c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900271ae:	45a9      	cmp	r9, r5
900271b0:	f340 8089 	ble.w	900272c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900271b4:	2800      	cmp	r0, #0
900271b6:	f2c0 8084 	blt.w	900272c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
900271ba:	4580      	cmp	r8, r0
900271bc:	f340 8081 	ble.w	900272c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
900271c0:	ea4f 045e 	mov.w	r4, lr, lsr #1
900271c4:	f01e 0f01 	tst.w	lr, #1
900271c8:	5d16      	ldrb	r6, [r2, r4]
900271ca:	bf0c      	ite	eq
900271cc:	f006 060f 	andeq.w	r6, r6, #15
900271d0:	1136      	asrne	r6, r6, #4
900271d2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
900271d6:	b2f6      	uxtb	r6, r6
900271d8:	1c44      	adds	r4, r0, #1
900271da:	d477      	bmi.n	900272cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900271dc:	45a0      	cmp	r8, r4
900271de:	dd75      	ble.n	900272cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900271e0:	2f00      	cmp	r7, #0
900271e2:	d075      	beq.n	900272d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
900271e4:	f10e 0a01 	add.w	sl, lr, #1
900271e8:	ea4f 045a 	mov.w	r4, sl, lsr #1
900271ec:	f01a 0f01 	tst.w	sl, #1
900271f0:	5d14      	ldrb	r4, [r2, r4]
900271f2:	bf0c      	ite	eq
900271f4:	f004 040f 	andeq.w	r4, r4, #15
900271f8:	1124      	asrne	r4, r4, #4
900271fa:	eb04 1404 	add.w	r4, r4, r4, lsl #4
900271fe:	b2e4      	uxtb	r4, r4
90027200:	3501      	adds	r5, #1
90027202:	d469      	bmi.n	900272d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027204:	45a9      	cmp	r9, r5
90027206:	dd67      	ble.n	900272d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027208:	f1bc 0f00 	cmp.w	ip, #0
9002720c:	d067      	beq.n	900272de <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
9002720e:	2800      	cmp	r0, #0
90027210:	db60      	blt.n	900272d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90027212:	4580      	cmp	r8, r0
90027214:	dd5e      	ble.n	900272d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90027216:	eb03 090e 	add.w	r9, r3, lr
9002721a:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002721e:	f019 0f01 	tst.w	r9, #1
90027222:	5d55      	ldrb	r5, [r2, r5]
90027224:	bf0c      	ite	eq
90027226:	f005 050f 	andeq.w	r5, r5, #15
9002722a:	112d      	asrne	r5, r5, #4
9002722c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90027230:	b2ed      	uxtb	r5, r5
90027232:	3001      	adds	r0, #1
90027234:	d456      	bmi.n	900272e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90027236:	4580      	cmp	r8, r0
90027238:	dd54      	ble.n	900272e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
9002723a:	2f00      	cmp	r7, #0
9002723c:	d054      	beq.n	900272e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
9002723e:	3301      	adds	r3, #1
90027240:	449e      	add	lr, r3
90027242:	ea4f 035e 	mov.w	r3, lr, lsr #1
90027246:	f01e 0f01 	tst.w	lr, #1
9002724a:	5cd0      	ldrb	r0, [r2, r3]
9002724c:	bf0c      	ite	eq
9002724e:	f000 000f 	andeq.w	r0, r0, #15
90027252:	1100      	asrne	r0, r0, #4
90027254:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027258:	b2c3      	uxtb	r3, r0
9002725a:	b2ba      	uxth	r2, r7
9002725c:	fa1f fc8c 	uxth.w	ip, ip
90027260:	fb02 f00c 	mul.w	r0, r2, ip
90027264:	0112      	lsls	r2, r2, #4
90027266:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
9002726a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
9002726e:	1a12      	subs	r2, r2, r0
90027270:	fa1f fc8c 	uxth.w	ip, ip
90027274:	b292      	uxth	r2, r2
90027276:	eba7 070c 	sub.w	r7, r7, ip
9002727a:	4362      	muls	r2, r4
9002727c:	b2bf      	uxth	r7, r7
9002727e:	fb06 2207 	mla	r2, r6, r7, r2
90027282:	fb0c 2505 	mla	r5, ip, r5, r2
90027286:	fb00 5303 	mla	r3, r0, r3, r5
9002728a:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002728e:	b1b3      	cbz	r3, 900272be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027290:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90027294:	435a      	muls	r2, r3
90027296:	1c53      	adds	r3, r2, #1
90027298:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002729c:	4a2d      	ldr	r2, [pc, #180]	@ (90027354 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
9002729e:	121b      	asrs	r3, r3, #8
900272a0:	6812      	ldr	r2, [r2, #0]
900272a2:	2bff      	cmp	r3, #255	@ 0xff
900272a4:	ea4f 2612 	mov.w	r6, r2, lsr #8
900272a8:	d120      	bne.n	900272ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
900272aa:	0950      	lsrs	r0, r2, #5
900272ac:	4b2a      	ldr	r3, [pc, #168]	@ (90027358 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
900272ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900272b2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900272b6:	4033      	ands	r3, r6
900272b8:	4318      	orrs	r0, r3
900272ba:	4302      	orrs	r2, r0
900272bc:	800a      	strh	r2, [r1, #0]
900272be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900272c2:	2600      	movs	r6, #0
900272c4:	e788      	b.n	900271d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
900272c6:	2400      	movs	r4, #0
900272c8:	4626      	mov	r6, r4
900272ca:	e799      	b.n	90027200 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900272cc:	2400      	movs	r4, #0
900272ce:	e797      	b.n	90027200 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900272d0:	463c      	mov	r4, r7
900272d2:	e795      	b.n	90027200 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900272d4:	2500      	movs	r5, #0
900272d6:	e7ac      	b.n	90027232 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
900272d8:	2300      	movs	r3, #0
900272da:	461d      	mov	r5, r3
900272dc:	e7bd      	b.n	9002725a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900272de:	4663      	mov	r3, ip
900272e0:	4665      	mov	r5, ip
900272e2:	e7ba      	b.n	9002725a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900272e4:	2300      	movs	r3, #0
900272e6:	e7b8      	b.n	9002725a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900272e8:	463b      	mov	r3, r7
900272ea:	e7b6      	b.n	9002725a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900272ec:	880d      	ldrh	r5, [r1, #0]
900272ee:	b29f      	uxth	r7, r3
900272f0:	f3c2 4007 	ubfx	r0, r2, #16, #8
900272f4:	43db      	mvns	r3, r3
900272f6:	122c      	asrs	r4, r5, #8
900272f8:	fb10 f007 	smulbb	r0, r0, r7
900272fc:	b2db      	uxtb	r3, r3
900272fe:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90027302:	b2f6      	uxtb	r6, r6
90027304:	b2d2      	uxtb	r2, r2
90027306:	fb04 0403 	mla	r4, r4, r3, r0
9002730a:	10e8      	asrs	r0, r5, #3
9002730c:	fb12 f207 	smulbb	r2, r2, r7
90027310:	00ed      	lsls	r5, r5, #3
90027312:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027316:	b2a4      	uxth	r4, r4
90027318:	fb16 f607 	smulbb	r6, r6, r7
9002731c:	b2ed      	uxtb	r5, r5
9002731e:	fb00 6603 	mla	r6, r0, r3, r6
90027322:	fb05 2303 	mla	r3, r5, r3, r2
90027326:	b2b0      	uxth	r0, r6
90027328:	b29a      	uxth	r2, r3
9002732a:	1c63      	adds	r3, r4, #1
9002732c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90027330:	1c53      	adds	r3, r2, #1
90027332:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027336:	1c42      	adds	r2, r0, #1
90027338:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9002733c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027340:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027344:	0940      	lsrs	r0, r0, #5
90027346:	4323      	orrs	r3, r4
90027348:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002734c:	4303      	orrs	r3, r0
9002734e:	800b      	strh	r3, [r1, #0]
90027350:	e7b5      	b.n	900272be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027352:	bf00      	nop
90027354:	240233e4 	.word	0x240233e4
90027358:	00fff800 	.word	0x00fff800

9002735c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002735c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027360:	b097      	sub	sp, #92	@ 0x5c
90027362:	9214      	str	r2, [sp, #80]	@ 0x50
90027364:	9309      	str	r3, [sp, #36]	@ 0x24
90027366:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90027368:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
9002736c:	9015      	str	r0, [sp, #84]	@ 0x54
9002736e:	910d      	str	r1, [sp, #52]	@ 0x34
90027370:	6850      	ldr	r0, [r2, #4]
90027372:	930f      	str	r3, [sp, #60]	@ 0x3c
90027374:	6812      	ldr	r2, [r2, #0]
90027376:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
9002737a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
9002737e:	fb00 1303 	mla	r3, r0, r3, r1
90027382:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90027386:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027388:	689b      	ldr	r3, [r3, #8]
9002738a:	3301      	adds	r3, #1
9002738c:	f023 0301 	bic.w	r3, r3, #1
90027390:	930a      	str	r3, [sp, #40]	@ 0x28
90027392:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027394:	681f      	ldr	r7, [r3, #0]
90027396:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027398:	2b00      	cmp	r3, #0
9002739a:	dc03      	bgt.n	900273a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002739c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
9002739e:	2b00      	cmp	r3, #0
900273a0:	f340 8289 	ble.w	900278b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
900273a4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900273a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900273aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900273ae:	1e48      	subs	r0, r1, #1
900273b0:	f102 3cff 	add.w	ip, r2, #4294967295
900273b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900273b6:	2b00      	cmp	r3, #0
900273b8:	f340 80c5 	ble.w	90027546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
900273bc:	ea5f 4e24 	movs.w	lr, r4, asr #16
900273c0:	ea4f 4326 	mov.w	r3, r6, asr #16
900273c4:	d406      	bmi.n	900273d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900273c6:	4586      	cmp	lr, r0
900273c8:	da04      	bge.n	900273d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900273ca:	2b00      	cmp	r3, #0
900273cc:	db02      	blt.n	900273d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900273ce:	4563      	cmp	r3, ip
900273d0:	f2c0 80ba 	blt.w	90027548 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900273d4:	f11e 0e01 	adds.w	lr, lr, #1
900273d8:	f100 80ab 	bmi.w	90027532 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900273dc:	4571      	cmp	r1, lr
900273de:	f2c0 80a8 	blt.w	90027532 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900273e2:	3301      	adds	r3, #1
900273e4:	f100 80a5 	bmi.w	90027532 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900273e8:	429a      	cmp	r2, r3
900273ea:	f2c0 80a2 	blt.w	90027532 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900273ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900273f0:	46c8      	mov	r8, r9
900273f2:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
900273f6:	930e      	str	r3, [sp, #56]	@ 0x38
900273f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900273fa:	2b00      	cmp	r3, #0
900273fc:	f340 80c4 	ble.w	90027588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90027400:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90027402:	1430      	asrs	r0, r6, #16
90027404:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027408:	f3c6 3103 	ubfx	r1, r6, #12, #4
9002740c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90027410:	1423      	asrs	r3, r4, #16
90027412:	f100 814f 	bmi.w	900276b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027416:	f10c 3bff 	add.w	fp, ip, #4294967295
9002741a:	455b      	cmp	r3, fp
9002741c:	f280 814a 	bge.w	900276b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027420:	2800      	cmp	r0, #0
90027422:	f2c0 8147 	blt.w	900276b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027426:	f10e 3bff 	add.w	fp, lr, #4294967295
9002742a:	4558      	cmp	r0, fp
9002742c:	f280 8142 	bge.w	900276b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027430:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90027432:	fb00 3305 	mla	r3, r0, r5, r3
90027436:	0858      	lsrs	r0, r3, #1
90027438:	07dd      	lsls	r5, r3, #31
9002743a:	f817 c000 	ldrb.w	ip, [r7, r0]
9002743e:	bf54      	ite	pl
90027440:	f00c 0c0f 	andpl.w	ip, ip, #15
90027444:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027448:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002744c:	fa5f fc8c 	uxtb.w	ip, ip
90027450:	2a00      	cmp	r2, #0
90027452:	f000 80dd 	beq.w	90027610 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90027456:	1c58      	adds	r0, r3, #1
90027458:	ea4f 0e50 	mov.w	lr, r0, lsr #1
9002745c:	07c0      	lsls	r0, r0, #31
9002745e:	f817 e00e 	ldrb.w	lr, [r7, lr]
90027462:	bf54      	ite	pl
90027464:	f00e 0e0f 	andpl.w	lr, lr, #15
90027468:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
9002746c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90027470:	fa5f f08e 	uxtb.w	r0, lr
90027474:	9010      	str	r0, [sp, #64]	@ 0x40
90027476:	b1d9      	cbz	r1, 900274b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027478:	4453      	add	r3, sl
9002747a:	0858      	lsrs	r0, r3, #1
9002747c:	07dd      	lsls	r5, r3, #31
9002747e:	f103 0301 	add.w	r3, r3, #1
90027482:	5c38      	ldrb	r0, [r7, r0]
90027484:	bf54      	ite	pl
90027486:	f000 000f 	andpl.w	r0, r0, #15
9002748a:	1100      	asrmi	r0, r0, #4
9002748c:	07dd      	lsls	r5, r3, #31
9002748e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027492:	b2c0      	uxtb	r0, r0
90027494:	900b      	str	r0, [sp, #44]	@ 0x2c
90027496:	ea4f 0053 	mov.w	r0, r3, lsr #1
9002749a:	f817 e000 	ldrb.w	lr, [r7, r0]
9002749e:	bf54      	ite	pl
900274a0:	f00e 030f 	andpl.w	r3, lr, #15
900274a4:	ea4f 132e 	movmi.w	r3, lr, asr #4
900274a8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900274ac:	b2db      	uxtb	r3, r3
900274ae:	9311      	str	r3, [sp, #68]	@ 0x44
900274b0:	b292      	uxth	r2, r2
900274b2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900274b4:	b289      	uxth	r1, r1
900274b6:	fb02 f301 	mul.w	r3, r2, r1
900274ba:	0112      	lsls	r2, r2, #4
900274bc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900274c0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
900274c4:	1ad2      	subs	r2, r2, r3
900274c6:	b289      	uxth	r1, r1
900274c8:	b292      	uxth	r2, r2
900274ca:	1a40      	subs	r0, r0, r1
900274cc:	436a      	muls	r2, r5
900274ce:	b280      	uxth	r0, r0
900274d0:	fb0c 2c00 	mla	ip, ip, r0, r2
900274d4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900274d6:	fb01 c102 	mla	r1, r1, r2, ip
900274da:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900274dc:	fb03 1302 	mla	r3, r3, r2, r1
900274e0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900274e4:	b1db      	cbz	r3, 9002751e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900274e6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900274e8:	4353      	muls	r3, r2
900274ea:	1c5a      	adds	r2, r3, #1
900274ec:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900274f0:	4ac6      	ldr	r2, [pc, #792]	@ (9002780c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900274f2:	121b      	asrs	r3, r3, #8
900274f4:	6812      	ldr	r2, [r2, #0]
900274f6:	2bff      	cmp	r3, #255	@ 0xff
900274f8:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900274fc:	f040 8099 	bne.w	90027632 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90027500:	0953      	lsrs	r3, r2, #5
90027502:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90027506:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002750a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002750e:	f02c 0c07 	bic.w	ip, ip, #7
90027512:	ea43 0c0c 	orr.w	ip, r3, ip
90027516:	ea4c 0202 	orr.w	r2, ip, r2
9002751a:	f8a8 2000 	strh.w	r2, [r8]
9002751e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90027520:	f108 0802 	add.w	r8, r8, #2
90027524:	441c      	add	r4, r3
90027526:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027528:	441e      	add	r6, r3
9002752a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002752c:	3b01      	subs	r3, #1
9002752e:	930e      	str	r3, [sp, #56]	@ 0x38
90027530:	e762      	b.n	900273f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90027532:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90027534:	f109 0902 	add.w	r9, r9, #2
90027538:	441c      	add	r4, r3
9002753a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002753c:	441e      	add	r6, r3
9002753e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027540:	3b01      	subs	r3, #1
90027542:	9309      	str	r3, [sp, #36]	@ 0x24
90027544:	e736      	b.n	900273b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90027546:	d024      	beq.n	90027592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90027548:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002754a:	9823      	ldr	r0, [sp, #140]	@ 0x8c
9002754c:	3b01      	subs	r3, #1
9002754e:	fb00 4003 	mla	r0, r0, r3, r4
90027552:	1400      	asrs	r0, r0, #16
90027554:	f53f af4b 	bmi.w	900273ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027558:	3901      	subs	r1, #1
9002755a:	4288      	cmp	r0, r1
9002755c:	f6bf af47 	bge.w	900273ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027560:	9924      	ldr	r1, [sp, #144]	@ 0x90
90027562:	fb01 6303 	mla	r3, r1, r3, r6
90027566:	141b      	asrs	r3, r3, #16
90027568:	f53f af41 	bmi.w	900273ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002756c:	3a01      	subs	r2, #1
9002756e:	4293      	cmp	r3, r2
90027570:	f6bf af3d 	bge.w	900273ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027574:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90027578:	46c8      	mov	r8, r9
9002757a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
9002757e:	930e      	str	r3, [sp, #56]	@ 0x38
90027580:	f1bb 0f00 	cmp.w	fp, #0
90027584:	f300 80b7 	bgt.w	900276f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90027588:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002758a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002758e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90027592:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027594:	2b00      	cmp	r3, #0
90027596:	f340 818e 	ble.w	900278b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
9002759a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002759e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900275a0:	ee30 0a04 	vadd.f32	s0, s0, s8
900275a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
900275a8:	eef0 6a62 	vmov.f32	s13, s5
900275ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
900275b0:	ee31 1a05 	vadd.f32	s2, s2, s10
900275b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900275b8:	ee16 4a90 	vmov	r4, s13
900275bc:	eef0 6a43 	vmov.f32	s13, s6
900275c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900275c4:	ee16 6a90 	vmov	r6, s13
900275c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
900275cc:	ee61 7a27 	vmul.f32	s15, s2, s15
900275d0:	ee77 2a62 	vsub.f32	s5, s14, s5
900275d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
900275d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900275dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900275e0:	ee12 2a90 	vmov	r2, s5
900275e4:	eef0 2a47 	vmov.f32	s5, s14
900275e8:	fb92 f3f3 	sdiv	r3, r2, r3
900275ec:	ee13 2a10 	vmov	r2, s6
900275f0:	9323      	str	r3, [sp, #140]	@ 0x8c
900275f2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900275f4:	eeb0 3a67 	vmov.f32	s6, s15
900275f8:	fb92 f3f3 	sdiv	r3, r2, r3
900275fc:	9324      	str	r3, [sp, #144]	@ 0x90
900275fe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027600:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90027602:	3b01      	subs	r3, #1
90027604:	930d      	str	r3, [sp, #52]	@ 0x34
90027606:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027608:	bf08      	it	eq
9002760a:	4613      	moveq	r3, r2
9002760c:	9309      	str	r3, [sp, #36]	@ 0x24
9002760e:	e6c2      	b.n	90027396 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90027610:	2900      	cmp	r1, #0
90027612:	f43f af4d 	beq.w	900274b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027616:	eb0a 0003 	add.w	r0, sl, r3
9002761a:	0843      	lsrs	r3, r0, #1
9002761c:	07c0      	lsls	r0, r0, #31
9002761e:	5cfb      	ldrb	r3, [r7, r3]
90027620:	bf54      	ite	pl
90027622:	f003 030f 	andpl.w	r3, r3, #15
90027626:	111b      	asrmi	r3, r3, #4
90027628:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002762c:	b2db      	uxtb	r3, r3
9002762e:	930b      	str	r3, [sp, #44]	@ 0x2c
90027630:	e73e      	b.n	900274b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027632:	f8b8 e000 	ldrh.w	lr, [r8]
90027636:	fa1f fb83 	uxth.w	fp, r3
9002763a:	f3c2 4107 	ubfx	r1, r2, #16, #8
9002763e:	43db      	mvns	r3, r3
90027640:	ea4f 202e 	mov.w	r0, lr, asr #8
90027644:	fb11 f10b 	smulbb	r1, r1, fp
90027648:	b2db      	uxtb	r3, r3
9002764a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002764e:	fa5f fc8c 	uxtb.w	ip, ip
90027652:	b2d2      	uxtb	r2, r2
90027654:	fb00 1003 	mla	r0, r0, r3, r1
90027658:	ea4f 01ee 	mov.w	r1, lr, asr #3
9002765c:	fb1c fc0b 	smulbb	ip, ip, fp
90027660:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027664:	b280      	uxth	r0, r0
90027666:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002766a:	fb12 fb0b 	smulbb	fp, r2, fp
9002766e:	fa5f fe8e 	uxtb.w	lr, lr
90027672:	fb01 cc03 	mla	ip, r1, r3, ip
90027676:	fb0e bb03 	mla	fp, lr, r3, fp
9002767a:	1c43      	adds	r3, r0, #1
9002767c:	fa1f fc8c 	uxth.w	ip, ip
90027680:	fa1f fb8b 	uxth.w	fp, fp
90027684:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027688:	f10c 0101 	add.w	r1, ip, #1
9002768c:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
90027690:	f10b 0001 	add.w	r0, fp, #1
90027694:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027698:	eb00 201b 	add.w	r0, r0, fp, lsr #8
9002769c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900276a0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900276a4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900276a8:	4318      	orrs	r0, r3
900276aa:	ea40 000c 	orr.w	r0, r0, ip
900276ae:	f8a8 0000 	strh.w	r0, [r8]
900276b2:	e734      	b.n	9002751e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900276b4:	f113 0b01 	adds.w	fp, r3, #1
900276b8:	f53f af31 	bmi.w	9002751e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900276bc:	45dc      	cmp	ip, fp
900276be:	f6ff af2e 	blt.w	9002751e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900276c2:	f110 0b01 	adds.w	fp, r0, #1
900276c6:	f53f af2a 	bmi.w	9002751e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900276ca:	45de      	cmp	lr, fp
900276cc:	f6ff af27 	blt.w	9002751e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900276d0:	9302      	str	r3, [sp, #8]
900276d2:	fa0f f38e 	sxth.w	r3, lr
900276d6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900276d8:	9301      	str	r3, [sp, #4]
900276da:	fa0f f38c 	sxth.w	r3, ip
900276de:	e9cd 0203 	strd	r0, r2, [sp, #12]
900276e2:	e9cd 1505 	strd	r1, r5, [sp, #20]
900276e6:	9300      	str	r3, [sp, #0]
900276e8:	463a      	mov	r2, r7
900276ea:	4653      	mov	r3, sl
900276ec:	4641      	mov	r1, r8
900276ee:	9815      	ldr	r0, [sp, #84]	@ 0x54
900276f0:	f7ff fd4c 	bl	9002718c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
900276f4:	e713      	b.n	9002751e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900276f6:	1422      	asrs	r2, r4, #16
900276f8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
900276fa:	1433      	asrs	r3, r6, #16
900276fc:	f3c4 3103 	ubfx	r1, r4, #12, #4
90027700:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027704:	fb05 2303 	mla	r3, r5, r3, r2
90027708:	085a      	lsrs	r2, r3, #1
9002770a:	07dd      	lsls	r5, r3, #31
9002770c:	5cba      	ldrb	r2, [r7, r2]
9002770e:	bf54      	ite	pl
90027710:	f002 020f 	andpl.w	r2, r2, #15
90027714:	1112      	asrmi	r2, r2, #4
90027716:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9002771a:	b2d2      	uxtb	r2, r2
9002771c:	2900      	cmp	r1, #0
9002771e:	d077      	beq.n	90027810 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90027720:	f103 0e01 	add.w	lr, r3, #1
90027724:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90027728:	f01e 0f01 	tst.w	lr, #1
9002772c:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027730:	bf0c      	ite	eq
90027732:	f00c 0c0f 	andeq.w	ip, ip, #15
90027736:	ea4f 1c2c 	movne.w	ip, ip, asr #4
9002773a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002773e:	fa5f f58c 	uxtb.w	r5, ip
90027742:	9512      	str	r5, [sp, #72]	@ 0x48
90027744:	b308      	cbz	r0, 9002778a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027746:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027748:	442b      	add	r3, r5
9002774a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002774e:	07dd      	lsls	r5, r3, #31
90027750:	f103 0301 	add.w	r3, r3, #1
90027754:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027758:	bf54      	ite	pl
9002775a:	f00c 0c0f 	andpl.w	ip, ip, #15
9002775e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027762:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027766:	fa5f f58c 	uxtb.w	r5, ip
9002776a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002776e:	950c      	str	r5, [sp, #48]	@ 0x30
90027770:	07dd      	lsls	r5, r3, #31
90027772:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027776:	bf54      	ite	pl
90027778:	f00c 0c0f 	andpl.w	ip, ip, #15
9002777c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027780:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027784:	fa5f f38c 	uxtb.w	r3, ip
90027788:	9313      	str	r3, [sp, #76]	@ 0x4c
9002778a:	b289      	uxth	r1, r1
9002778c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002778e:	b280      	uxth	r0, r0
90027790:	fb01 f300 	mul.w	r3, r1, r0
90027794:	0109      	lsls	r1, r1, #4
90027796:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
9002779a:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
9002779e:	1ac9      	subs	r1, r1, r3
900277a0:	b280      	uxth	r0, r0
900277a2:	b289      	uxth	r1, r1
900277a4:	ebac 0c00 	sub.w	ip, ip, r0
900277a8:	4369      	muls	r1, r5
900277aa:	fa1f fc8c 	uxth.w	ip, ip
900277ae:	fb02 120c 	mla	r2, r2, ip, r1
900277b2:	990c      	ldr	r1, [sp, #48]	@ 0x30
900277b4:	fb00 2001 	mla	r0, r0, r1, r2
900277b8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900277ba:	fb03 0302 	mla	r3, r3, r2, r0
900277be:	f3c3 2307 	ubfx	r3, r3, #8, #8
900277c2:	b1d3      	cbz	r3, 900277fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900277c4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900277c6:	4353      	muls	r3, r2
900277c8:	1c5a      	adds	r2, r3, #1
900277ca:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900277ce:	4a0f      	ldr	r2, [pc, #60]	@ (9002780c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900277d0:	121b      	asrs	r3, r3, #8
900277d2:	6812      	ldr	r2, [r2, #0]
900277d4:	2bff      	cmp	r3, #255	@ 0xff
900277d6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900277da:	d12d      	bne.n	90027838 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
900277dc:	0953      	lsrs	r3, r2, #5
900277de:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
900277e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900277e6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900277ea:	f02c 0c07 	bic.w	ip, ip, #7
900277ee:	ea43 0c0c 	orr.w	ip, r3, ip
900277f2:	ea4c 0202 	orr.w	r2, ip, r2
900277f6:	f8a8 2000 	strh.w	r2, [r8]
900277fa:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
900277fc:	f108 0802 	add.w	r8, r8, #2
90027800:	f10b 3bff 	add.w	fp, fp, #4294967295
90027804:	441c      	add	r4, r3
90027806:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027808:	441e      	add	r6, r3
9002780a:	e6b9      	b.n	90027580 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
9002780c:	240233e4 	.word	0x240233e4
90027810:	2800      	cmp	r0, #0
90027812:	d0ba      	beq.n	9002778a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027814:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027816:	442b      	add	r3, r5
90027818:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002781c:	07db      	lsls	r3, r3, #31
9002781e:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027822:	bf54      	ite	pl
90027824:	f00c 0c0f 	andpl.w	ip, ip, #15
90027828:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002782c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027830:	fa5f f38c 	uxtb.w	r3, ip
90027834:	930c      	str	r3, [sp, #48]	@ 0x30
90027836:	e7a8      	b.n	9002778a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027838:	f8b8 e000 	ldrh.w	lr, [r8]
9002783c:	fa1f fa83 	uxth.w	sl, r3
90027840:	f3c2 4107 	ubfx	r1, r2, #16, #8
90027844:	43db      	mvns	r3, r3
90027846:	ea4f 202e 	mov.w	r0, lr, asr #8
9002784a:	fb11 f10a 	smulbb	r1, r1, sl
9002784e:	b2db      	uxtb	r3, r3
90027850:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027854:	b2d2      	uxtb	r2, r2
90027856:	fa5f fc8c 	uxtb.w	ip, ip
9002785a:	fb00 1003 	mla	r0, r0, r3, r1
9002785e:	ea4f 01ee 	mov.w	r1, lr, asr #3
90027862:	fb12 f20a 	smulbb	r2, r2, sl
90027866:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002786a:	b280      	uxth	r0, r0
9002786c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90027870:	fb1c fc0a 	smulbb	ip, ip, sl
90027874:	fa5f fe8e 	uxtb.w	lr, lr
90027878:	fb0e 2203 	mla	r2, lr, r3, r2
9002787c:	fb01 cc03 	mla	ip, r1, r3, ip
90027880:	1c43      	adds	r3, r0, #1
90027882:	b292      	uxth	r2, r2
90027884:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027888:	1c51      	adds	r1, r2, #1
9002788a:	fa1f fc8c 	uxth.w	ip, ip
9002788e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90027892:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90027896:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002789a:	4308      	orrs	r0, r1
9002789c:	f10c 0101 	add.w	r1, ip, #1
900278a0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900278a4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900278a8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900278ac:	ea40 000c 	orr.w	r0, r0, ip
900278b0:	f8a8 0000 	strh.w	r0, [r8]
900278b4:	e7a1      	b.n	900277fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900278b6:	b017      	add	sp, #92	@ 0x5c
900278b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900278bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
900278bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900278c0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
900278c4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900278c8:	2d00      	cmp	r5, #0
900278ca:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
900278ce:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900278d2:	fb05 0e03 	mla	lr, r5, r3, r0
900278d6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900278da:	f2c0 80b0 	blt.w	90027a3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900278de:	45a9      	cmp	r9, r5
900278e0:	f340 80ad 	ble.w	90027a3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900278e4:	2800      	cmp	r0, #0
900278e6:	f2c0 80a8 	blt.w	90027a3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900278ea:	4580      	cmp	r8, r0
900278ec:	f340 80a5 	ble.w	90027a3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900278f0:	ea4f 045e 	mov.w	r4, lr, lsr #1
900278f4:	f01e 0f01 	tst.w	lr, #1
900278f8:	5d16      	ldrb	r6, [r2, r4]
900278fa:	bf0c      	ite	eq
900278fc:	f006 060f 	andeq.w	r6, r6, #15
90027900:	1136      	asrne	r6, r6, #4
90027902:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90027906:	b2f6      	uxtb	r6, r6
90027908:	1c44      	adds	r4, r0, #1
9002790a:	f100 809b 	bmi.w	90027a44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
9002790e:	45a0      	cmp	r8, r4
90027910:	f340 8098 	ble.w	90027a44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90027914:	2f00      	cmp	r7, #0
90027916:	f000 8097 	beq.w	90027a48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
9002791a:	f10e 0a01 	add.w	sl, lr, #1
9002791e:	ea4f 045a 	mov.w	r4, sl, lsr #1
90027922:	f01a 0f01 	tst.w	sl, #1
90027926:	5d14      	ldrb	r4, [r2, r4]
90027928:	bf0c      	ite	eq
9002792a:	f004 040f 	andeq.w	r4, r4, #15
9002792e:	1124      	asrne	r4, r4, #4
90027930:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90027934:	b2e4      	uxtb	r4, r4
90027936:	3501      	adds	r5, #1
90027938:	f100 808a 	bmi.w	90027a50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
9002793c:	45a9      	cmp	r9, r5
9002793e:	f340 8087 	ble.w	90027a50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90027942:	f1bc 0f00 	cmp.w	ip, #0
90027946:	f000 8086 	beq.w	90027a56 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
9002794a:	2800      	cmp	r0, #0
9002794c:	db7e      	blt.n	90027a4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
9002794e:	4580      	cmp	r8, r0
90027950:	dd7c      	ble.n	90027a4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90027952:	eb03 090e 	add.w	r9, r3, lr
90027956:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002795a:	f019 0f01 	tst.w	r9, #1
9002795e:	5d55      	ldrb	r5, [r2, r5]
90027960:	bf0c      	ite	eq
90027962:	f005 050f 	andeq.w	r5, r5, #15
90027966:	112d      	asrne	r5, r5, #4
90027968:	eb05 1505 	add.w	r5, r5, r5, lsl #4
9002796c:	b2ed      	uxtb	r5, r5
9002796e:	3001      	adds	r0, #1
90027970:	d474      	bmi.n	90027a5c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90027972:	4580      	cmp	r8, r0
90027974:	dd72      	ble.n	90027a5c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90027976:	2f00      	cmp	r7, #0
90027978:	d072      	beq.n	90027a60 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
9002797a:	3301      	adds	r3, #1
9002797c:	449e      	add	lr, r3
9002797e:	ea4f 035e 	mov.w	r3, lr, lsr #1
90027982:	f01e 0f01 	tst.w	lr, #1
90027986:	5cd0      	ldrb	r0, [r2, r3]
90027988:	bf0c      	ite	eq
9002798a:	f000 000f 	andeq.w	r0, r0, #15
9002798e:	1100      	asrne	r0, r0, #4
90027990:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027994:	b2c3      	uxtb	r3, r0
90027996:	b2ba      	uxth	r2, r7
90027998:	fa1f fc8c 	uxth.w	ip, ip
9002799c:	fb02 f00c 	mul.w	r0, r2, ip
900279a0:	0112      	lsls	r2, r2, #4
900279a2:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900279a6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
900279aa:	1a12      	subs	r2, r2, r0
900279ac:	fa1f fc8c 	uxth.w	ip, ip
900279b0:	b292      	uxth	r2, r2
900279b2:	eba7 070c 	sub.w	r7, r7, ip
900279b6:	4362      	muls	r2, r4
900279b8:	b2bf      	uxth	r7, r7
900279ba:	fb06 2207 	mla	r2, r6, r7, r2
900279be:	fb0c 2505 	mla	r5, ip, r5, r2
900279c2:	fb00 5303 	mla	r3, r0, r3, r5
900279c6:	f3c3 2307 	ubfx	r3, r3, #8, #8
900279ca:	b3a3      	cbz	r3, 90027a36 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
900279cc:	4a25      	ldr	r2, [pc, #148]	@ (90027a64 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
900279ce:	880e      	ldrh	r6, [r1, #0]
900279d0:	6815      	ldr	r5, [r2, #0]
900279d2:	b29a      	uxth	r2, r3
900279d4:	1234      	asrs	r4, r6, #8
900279d6:	43db      	mvns	r3, r3
900279d8:	f3c5 4007 	ubfx	r0, r5, #16, #8
900279dc:	f3c5 2707 	ubfx	r7, r5, #8, #8
900279e0:	b2db      	uxtb	r3, r3
900279e2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900279e6:	fb10 f002 	smulbb	r0, r0, r2
900279ea:	b2ed      	uxtb	r5, r5
900279ec:	fb17 f702 	smulbb	r7, r7, r2
900279f0:	fb04 0403 	mla	r4, r4, r3, r0
900279f4:	10f0      	asrs	r0, r6, #3
900279f6:	fb15 f202 	smulbb	r2, r5, r2
900279fa:	00f6      	lsls	r6, r6, #3
900279fc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027a00:	b2a4      	uxth	r4, r4
90027a02:	b2f6      	uxtb	r6, r6
90027a04:	fb00 7003 	mla	r0, r0, r3, r7
90027a08:	fb06 2303 	mla	r3, r6, r3, r2
90027a0c:	b280      	uxth	r0, r0
90027a0e:	b29a      	uxth	r2, r3
90027a10:	1c63      	adds	r3, r4, #1
90027a12:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90027a16:	1c53      	adds	r3, r2, #1
90027a18:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027a1c:	1c42      	adds	r2, r0, #1
90027a1e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90027a22:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027a26:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027a2a:	0940      	lsrs	r0, r0, #5
90027a2c:	4323      	orrs	r3, r4
90027a2e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027a32:	4303      	orrs	r3, r0
90027a34:	800b      	strh	r3, [r1, #0]
90027a36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027a3a:	2600      	movs	r6, #0
90027a3c:	e764      	b.n	90027908 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90027a3e:	2400      	movs	r4, #0
90027a40:	4626      	mov	r6, r4
90027a42:	e778      	b.n	90027936 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027a44:	2400      	movs	r4, #0
90027a46:	e776      	b.n	90027936 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027a48:	463c      	mov	r4, r7
90027a4a:	e774      	b.n	90027936 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027a4c:	2500      	movs	r5, #0
90027a4e:	e78e      	b.n	9002796e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90027a50:	2300      	movs	r3, #0
90027a52:	461d      	mov	r5, r3
90027a54:	e79f      	b.n	90027996 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027a56:	4663      	mov	r3, ip
90027a58:	4665      	mov	r5, ip
90027a5a:	e79c      	b.n	90027996 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027a5c:	2300      	movs	r3, #0
90027a5e:	e79a      	b.n	90027996 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027a60:	463b      	mov	r3, r7
90027a62:	e798      	b.n	90027996 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027a64:	240233e4 	.word	0x240233e4

90027a68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027a6c:	b093      	sub	sp, #76	@ 0x4c
90027a6e:	461d      	mov	r5, r3
90027a70:	920c      	str	r2, [sp, #48]	@ 0x30
90027a72:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90027a74:	9011      	str	r0, [sp, #68]	@ 0x44
90027a76:	9107      	str	r1, [sp, #28]
90027a78:	6850      	ldr	r0, [r2, #4]
90027a7a:	6812      	ldr	r2, [r2, #0]
90027a7c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90027a80:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90027a84:	fb00 1303 	mla	r3, r0, r3, r1
90027a88:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90027a8c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027a8e:	689b      	ldr	r3, [r3, #8]
90027a90:	3301      	adds	r3, #1
90027a92:	f023 0301 	bic.w	r3, r3, #1
90027a96:	9306      	str	r3, [sp, #24]
90027a98:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027a9a:	681f      	ldr	r7, [r3, #0]
90027a9c:	9b07      	ldr	r3, [sp, #28]
90027a9e:	2b00      	cmp	r3, #0
90027aa0:	dc03      	bgt.n	90027aaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90027aa2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90027aa4:	2b00      	cmp	r3, #0
90027aa6:	f340 8267 	ble.w	90027f78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90027aaa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027aac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027ab0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027ab4:	1e48      	subs	r0, r1, #1
90027ab6:	f102 3cff 	add.w	ip, r2, #4294967295
90027aba:	2d00      	cmp	r5, #0
90027abc:	f340 80b7 	ble.w	90027c2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90027ac0:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027ac4:	ea4f 4326 	mov.w	r3, r6, asr #16
90027ac8:	d406      	bmi.n	90027ad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90027aca:	4586      	cmp	lr, r0
90027acc:	da04      	bge.n	90027ad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90027ace:	2b00      	cmp	r3, #0
90027ad0:	db02      	blt.n	90027ad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90027ad2:	4563      	cmp	r3, ip
90027ad4:	f2c0 80ac 	blt.w	90027c30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90027ad8:	f11e 0e01 	adds.w	lr, lr, #1
90027adc:	f100 809f 	bmi.w	90027c1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027ae0:	4571      	cmp	r1, lr
90027ae2:	f2c0 809c 	blt.w	90027c1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027ae6:	3301      	adds	r3, #1
90027ae8:	f100 8099 	bmi.w	90027c1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027aec:	429a      	cmp	r2, r3
90027aee:	f2c0 8096 	blt.w	90027c1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027af2:	46c8      	mov	r8, r9
90027af4:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90027af8:	9509      	str	r5, [sp, #36]	@ 0x24
90027afa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027afc:	2b00      	cmp	r3, #0
90027afe:	f340 80b5 	ble.w	90027c6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90027b02:	f3c4 3303 	ubfx	r3, r4, #12, #4
90027b06:	1430      	asrs	r0, r6, #16
90027b08:	f3c6 3103 	ubfx	r1, r6, #12, #4
90027b0c:	9308      	str	r3, [sp, #32]
90027b0e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027b10:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90027b14:	1423      	asrs	r3, r4, #16
90027b16:	f100 813f 	bmi.w	90027d98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027b1a:	f10c 3bff 	add.w	fp, ip, #4294967295
90027b1e:	455b      	cmp	r3, fp
90027b20:	f280 813a 	bge.w	90027d98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027b24:	2800      	cmp	r0, #0
90027b26:	f2c0 8137 	blt.w	90027d98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027b2a:	f10e 3bff 	add.w	fp, lr, #4294967295
90027b2e:	4558      	cmp	r0, fp
90027b30:	f280 8132 	bge.w	90027d98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027b34:	9a06      	ldr	r2, [sp, #24]
90027b36:	fb00 3302 	mla	r3, r0, r2, r3
90027b3a:	0858      	lsrs	r0, r3, #1
90027b3c:	07da      	lsls	r2, r3, #31
90027b3e:	9a08      	ldr	r2, [sp, #32]
90027b40:	f817 c000 	ldrb.w	ip, [r7, r0]
90027b44:	bf54      	ite	pl
90027b46:	f00c 0c0f 	andpl.w	ip, ip, #15
90027b4a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027b4e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027b52:	fa5f fc8c 	uxtb.w	ip, ip
90027b56:	2a00      	cmp	r2, #0
90027b58:	f000 80cc 	beq.w	90027cf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90027b5c:	1c58      	adds	r0, r3, #1
90027b5e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90027b62:	07c0      	lsls	r0, r0, #31
90027b64:	f817 e00e 	ldrb.w	lr, [r7, lr]
90027b68:	bf54      	ite	pl
90027b6a:	f00e 0e0f 	andpl.w	lr, lr, #15
90027b6e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90027b72:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90027b76:	fa5f fe8e 	uxtb.w	lr, lr
90027b7a:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
90027b7e:	b1b9      	cbz	r1, 90027bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90027b80:	4453      	add	r3, sl
90027b82:	0858      	lsrs	r0, r3, #1
90027b84:	07da      	lsls	r2, r3, #31
90027b86:	5c38      	ldrb	r0, [r7, r0]
90027b88:	bf54      	ite	pl
90027b8a:	f000 000f 	andpl.w	r0, r0, #15
90027b8e:	1100      	asrmi	r0, r0, #4
90027b90:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027b94:	b2c0      	uxtb	r0, r0
90027b96:	900a      	str	r0, [sp, #40]	@ 0x28
90027b98:	1c58      	adds	r0, r3, #1
90027b9a:	0843      	lsrs	r3, r0, #1
90027b9c:	07c2      	lsls	r2, r0, #31
90027b9e:	5cfb      	ldrb	r3, [r7, r3]
90027ba0:	bf54      	ite	pl
90027ba2:	f003 030f 	andpl.w	r3, r3, #15
90027ba6:	111b      	asrmi	r3, r3, #4
90027ba8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027bac:	b2db      	uxtb	r3, r3
90027bae:	930e      	str	r3, [sp, #56]	@ 0x38
90027bb0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90027bb4:	b289      	uxth	r1, r1
90027bb6:	fb02 f301 	mul.w	r3, r2, r1
90027bba:	0112      	lsls	r2, r2, #4
90027bbc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90027bc0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90027bc4:	1ad2      	subs	r2, r2, r3
90027bc6:	b289      	uxth	r1, r1
90027bc8:	b292      	uxth	r2, r2
90027bca:	1a40      	subs	r0, r0, r1
90027bcc:	fa1f fe80 	uxth.w	lr, r0
90027bd0:	980d      	ldr	r0, [sp, #52]	@ 0x34
90027bd2:	4342      	muls	r2, r0
90027bd4:	fb0c 2c0e 	mla	ip, ip, lr, r2
90027bd8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90027bda:	fb01 c102 	mla	r1, r1, r2, ip
90027bde:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90027be0:	fb03 1302 	mla	r3, r3, r2, r1
90027be4:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027be8:	2bff      	cmp	r3, #255	@ 0xff
90027bea:	f040 8094 	bne.w	90027d16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90027bee:	4bbf      	ldr	r3, [pc, #764]	@ (90027eec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90027bf0:	681a      	ldr	r2, [r3, #0]
90027bf2:	4bbf      	ldr	r3, [pc, #764]	@ (90027ef0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90027bf4:	0951      	lsrs	r1, r2, #5
90027bf6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90027bfa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027bfe:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027c02:	430b      	orrs	r3, r1
90027c04:	4313      	orrs	r3, r2
90027c06:	f8a8 3000 	strh.w	r3, [r8]
90027c0a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027c0c:	f108 0802 	add.w	r8, r8, #2
90027c10:	441c      	add	r4, r3
90027c12:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027c14:	441e      	add	r6, r3
90027c16:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027c18:	3b01      	subs	r3, #1
90027c1a:	9309      	str	r3, [sp, #36]	@ 0x24
90027c1c:	e76d      	b.n	90027afa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027c1e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027c20:	3d01      	subs	r5, #1
90027c22:	f109 0902 	add.w	r9, r9, #2
90027c26:	441c      	add	r4, r3
90027c28:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027c2a:	441e      	add	r6, r3
90027c2c:	e745      	b.n	90027aba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90027c2e:	d021      	beq.n	90027c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90027c30:	1e6b      	subs	r3, r5, #1
90027c32:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90027c34:	fb00 4003 	mla	r0, r0, r3, r4
90027c38:	1400      	asrs	r0, r0, #16
90027c3a:	f53f af5a 	bmi.w	90027af2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027c3e:	3901      	subs	r1, #1
90027c40:	4288      	cmp	r0, r1
90027c42:	f6bf af56 	bge.w	90027af2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027c46:	9920      	ldr	r1, [sp, #128]	@ 0x80
90027c48:	fb01 6303 	mla	r3, r1, r3, r6
90027c4c:	141b      	asrs	r3, r3, #16
90027c4e:	f53f af50 	bmi.w	90027af2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027c52:	3a01      	subs	r2, #1
90027c54:	4293      	cmp	r3, r2
90027c56:	f6bf af4c 	bge.w	90027af2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027c5a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90027c5e:	46a8      	mov	r8, r5
90027c60:	46ce      	mov	lr, r9
90027c62:	9308      	str	r3, [sp, #32]
90027c64:	f1b8 0f00 	cmp.w	r8, #0
90027c68:	f300 80b6 	bgt.w	90027dd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90027c6c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90027c70:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90027c74:	9b07      	ldr	r3, [sp, #28]
90027c76:	2b00      	cmp	r3, #0
90027c78:	f340 817e 	ble.w	90027f78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90027c7c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027c80:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027c82:	ee30 0a04 	vadd.f32	s0, s0, s8
90027c86:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027c8a:	eef0 6a62 	vmov.f32	s13, s5
90027c8e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027c92:	ee31 1a05 	vadd.f32	s2, s2, s10
90027c96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027c9a:	ee16 4a90 	vmov	r4, s13
90027c9e:	eef0 6a43 	vmov.f32	s13, s6
90027ca2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027ca6:	ee16 6a90 	vmov	r6, s13
90027caa:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027cae:	ee61 7a27 	vmul.f32	s15, s2, s15
90027cb2:	ee77 2a62 	vsub.f32	s5, s14, s5
90027cb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027cba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027cbe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027cc2:	ee12 2a90 	vmov	r2, s5
90027cc6:	eef0 2a47 	vmov.f32	s5, s14
90027cca:	fb92 f3f3 	sdiv	r3, r2, r3
90027cce:	ee13 2a10 	vmov	r2, s6
90027cd2:	931f      	str	r3, [sp, #124]	@ 0x7c
90027cd4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027cd6:	eeb0 3a67 	vmov.f32	s6, s15
90027cda:	fb92 f3f3 	sdiv	r3, r2, r3
90027cde:	9320      	str	r3, [sp, #128]	@ 0x80
90027ce0:	9b07      	ldr	r3, [sp, #28]
90027ce2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90027ce4:	3b01      	subs	r3, #1
90027ce6:	9307      	str	r3, [sp, #28]
90027ce8:	bf08      	it	eq
90027cea:	4615      	moveq	r5, r2
90027cec:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027cee:	bf18      	it	ne
90027cf0:	461d      	movne	r5, r3
90027cf2:	e6d3      	b.n	90027a9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90027cf4:	2900      	cmp	r1, #0
90027cf6:	f43f af5b 	beq.w	90027bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90027cfa:	eb0a 0003 	add.w	r0, sl, r3
90027cfe:	0843      	lsrs	r3, r0, #1
90027d00:	07c0      	lsls	r0, r0, #31
90027d02:	5cfb      	ldrb	r3, [r7, r3]
90027d04:	bf54      	ite	pl
90027d06:	f003 030f 	andpl.w	r3, r3, #15
90027d0a:	111b      	asrmi	r3, r3, #4
90027d0c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027d10:	b2db      	uxtb	r3, r3
90027d12:	930a      	str	r3, [sp, #40]	@ 0x28
90027d14:	e74c      	b.n	90027bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90027d16:	2b00      	cmp	r3, #0
90027d18:	f43f af77 	beq.w	90027c0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90027d1c:	4a73      	ldr	r2, [pc, #460]	@ (90027eec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90027d1e:	fa1f fe83 	uxth.w	lr, r3
90027d22:	f8b8 c000 	ldrh.w	ip, [r8]
90027d26:	43db      	mvns	r3, r3
90027d28:	6810      	ldr	r0, [r2, #0]
90027d2a:	ea4f 212c 	mov.w	r1, ip, asr #8
90027d2e:	f3c0 4207 	ubfx	r2, r0, #16, #8
90027d32:	b2db      	uxtb	r3, r3
90027d34:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90027d38:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90027d3c:	fb12 f20e 	smulbb	r2, r2, lr
90027d40:	b2c0      	uxtb	r0, r0
90027d42:	fb1b fb0e 	smulbb	fp, fp, lr
90027d46:	fb01 2103 	mla	r1, r1, r3, r2
90027d4a:	ea4f 02ec 	mov.w	r2, ip, asr #3
90027d4e:	fb10 fe0e 	smulbb	lr, r0, lr
90027d52:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90027d56:	b289      	uxth	r1, r1
90027d58:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90027d5c:	fa5f fc8c 	uxtb.w	ip, ip
90027d60:	fb02 b203 	mla	r2, r2, r3, fp
90027d64:	1c48      	adds	r0, r1, #1
90027d66:	fb0c e303 	mla	r3, ip, r3, lr
90027d6a:	b292      	uxth	r2, r2
90027d6c:	b29b      	uxth	r3, r3
90027d6e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90027d72:	f102 0b01 	add.w	fp, r2, #1
90027d76:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
90027d7a:	1c59      	adds	r1, r3, #1
90027d7c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90027d80:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90027d84:	0952      	lsrs	r2, r2, #5
90027d86:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90027d8a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027d8e:	4301      	orrs	r1, r0
90027d90:	4311      	orrs	r1, r2
90027d92:	f8a8 1000 	strh.w	r1, [r8]
90027d96:	e738      	b.n	90027c0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90027d98:	f113 0b01 	adds.w	fp, r3, #1
90027d9c:	f53f af35 	bmi.w	90027c0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90027da0:	45dc      	cmp	ip, fp
90027da2:	f6ff af32 	blt.w	90027c0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90027da6:	f110 0b01 	adds.w	fp, r0, #1
90027daa:	f53f af2e 	bmi.w	90027c0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90027dae:	45de      	cmp	lr, fp
90027db0:	f6ff af2b 	blt.w	90027c0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90027db4:	9302      	str	r3, [sp, #8]
90027db6:	fa0f f38e 	sxth.w	r3, lr
90027dba:	9a08      	ldr	r2, [sp, #32]
90027dbc:	9301      	str	r3, [sp, #4]
90027dbe:	fa0f f38c 	sxth.w	r3, ip
90027dc2:	9105      	str	r1, [sp, #20]
90027dc4:	4641      	mov	r1, r8
90027dc6:	9300      	str	r3, [sp, #0]
90027dc8:	4653      	mov	r3, sl
90027dca:	e9cd 0203 	strd	r0, r2, [sp, #12]
90027dce:	463a      	mov	r2, r7
90027dd0:	9811      	ldr	r0, [sp, #68]	@ 0x44
90027dd2:	f7ff fd73 	bl	900278bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
90027dd6:	e718      	b.n	90027c0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90027dd8:	1422      	asrs	r2, r4, #16
90027dda:	9906      	ldr	r1, [sp, #24]
90027ddc:	1433      	asrs	r3, r6, #16
90027dde:	f3c4 3003 	ubfx	r0, r4, #12, #4
90027de2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90027de6:	fb01 2303 	mla	r3, r1, r3, r2
90027dea:	085a      	lsrs	r2, r3, #1
90027dec:	07d9      	lsls	r1, r3, #31
90027dee:	5cba      	ldrb	r2, [r7, r2]
90027df0:	bf54      	ite	pl
90027df2:	f002 020f 	andpl.w	r2, r2, #15
90027df6:	1112      	asrmi	r2, r2, #4
90027df8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90027dfc:	b2d2      	uxtb	r2, r2
90027dfe:	2800      	cmp	r0, #0
90027e00:	d063      	beq.n	90027eca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90027e02:	f103 0a01 	add.w	sl, r3, #1
90027e06:	ea4f 015a 	mov.w	r1, sl, lsr #1
90027e0a:	f01a 0f01 	tst.w	sl, #1
90027e0e:	5c79      	ldrb	r1, [r7, r1]
90027e10:	bf0c      	ite	eq
90027e12:	f001 010f 	andeq.w	r1, r1, #15
90027e16:	1109      	asrne	r1, r1, #4
90027e18:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90027e1c:	b2c9      	uxtb	r1, r1
90027e1e:	910f      	str	r1, [sp, #60]	@ 0x3c
90027e20:	f1bc 0f00 	cmp.w	ip, #0
90027e24:	d01a      	beq.n	90027e5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90027e26:	9908      	ldr	r1, [sp, #32]
90027e28:	440b      	add	r3, r1
90027e2a:	0859      	lsrs	r1, r3, #1
90027e2c:	f013 0f01 	tst.w	r3, #1
90027e30:	f103 0301 	add.w	r3, r3, #1
90027e34:	5c79      	ldrb	r1, [r7, r1]
90027e36:	bf0c      	ite	eq
90027e38:	f001 010f 	andeq.w	r1, r1, #15
90027e3c:	1109      	asrne	r1, r1, #4
90027e3e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90027e42:	b2c9      	uxtb	r1, r1
90027e44:	910b      	str	r1, [sp, #44]	@ 0x2c
90027e46:	0859      	lsrs	r1, r3, #1
90027e48:	07db      	lsls	r3, r3, #31
90027e4a:	5c79      	ldrb	r1, [r7, r1]
90027e4c:	bf54      	ite	pl
90027e4e:	f001 010f 	andpl.w	r1, r1, #15
90027e52:	1109      	asrmi	r1, r1, #4
90027e54:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90027e58:	b2c9      	uxtb	r1, r1
90027e5a:	9110      	str	r1, [sp, #64]	@ 0x40
90027e5c:	b280      	uxth	r0, r0
90027e5e:	fa1f fc8c 	uxth.w	ip, ip
90027e62:	fb00 f30c 	mul.w	r3, r0, ip
90027e66:	0100      	lsls	r0, r0, #4
90027e68:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90027e6c:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
90027e70:	1ac0      	subs	r0, r0, r3
90027e72:	fa1f fc8c 	uxth.w	ip, ip
90027e76:	b280      	uxth	r0, r0
90027e78:	eba1 010c 	sub.w	r1, r1, ip
90027e7c:	fa1f fa81 	uxth.w	sl, r1
90027e80:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90027e82:	4348      	muls	r0, r1
90027e84:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90027e86:	fb02 020a 	mla	r2, r2, sl, r0
90027e8a:	fb0c 2c01 	mla	ip, ip, r1, r2
90027e8e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90027e90:	fb03 c302 	mla	r3, r3, r2, ip
90027e94:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027e98:	2bff      	cmp	r3, #255	@ 0xff
90027e9a:	d12b      	bne.n	90027ef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90027e9c:	4b13      	ldr	r3, [pc, #76]	@ (90027eec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90027e9e:	681a      	ldr	r2, [r3, #0]
90027ea0:	4b13      	ldr	r3, [pc, #76]	@ (90027ef0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90027ea2:	0951      	lsrs	r1, r2, #5
90027ea4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90027ea8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027eac:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027eb0:	430b      	orrs	r3, r1
90027eb2:	4313      	orrs	r3, r2
90027eb4:	f8ae 3000 	strh.w	r3, [lr]
90027eb8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027eba:	f10e 0e02 	add.w	lr, lr, #2
90027ebe:	f108 38ff 	add.w	r8, r8, #4294967295
90027ec2:	441c      	add	r4, r3
90027ec4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027ec6:	441e      	add	r6, r3
90027ec8:	e6cc      	b.n	90027c64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90027eca:	f1bc 0f00 	cmp.w	ip, #0
90027ece:	d0c5      	beq.n	90027e5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90027ed0:	9908      	ldr	r1, [sp, #32]
90027ed2:	440b      	add	r3, r1
90027ed4:	0859      	lsrs	r1, r3, #1
90027ed6:	07db      	lsls	r3, r3, #31
90027ed8:	5c79      	ldrb	r1, [r7, r1]
90027eda:	bf54      	ite	pl
90027edc:	f001 010f 	andpl.w	r1, r1, #15
90027ee0:	1109      	asrmi	r1, r1, #4
90027ee2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90027ee6:	b2c9      	uxtb	r1, r1
90027ee8:	910b      	str	r1, [sp, #44]	@ 0x2c
90027eea:	e7b7      	b.n	90027e5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90027eec:	240233e4 	.word	0x240233e4
90027ef0:	fffff800 	.word	0xfffff800
90027ef4:	2b00      	cmp	r3, #0
90027ef6:	d0df      	beq.n	90027eb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90027ef8:	4a21      	ldr	r2, [pc, #132]	@ (90027f80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90027efa:	fa1f fa83 	uxth.w	sl, r3
90027efe:	f8be c000 	ldrh.w	ip, [lr]
90027f02:	43db      	mvns	r3, r3
90027f04:	6810      	ldr	r0, [r2, #0]
90027f06:	ea4f 212c 	mov.w	r1, ip, asr #8
90027f0a:	f3c0 4207 	ubfx	r2, r0, #16, #8
90027f0e:	b2db      	uxtb	r3, r3
90027f10:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90027f14:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90027f18:	fb12 f20a 	smulbb	r2, r2, sl
90027f1c:	b2c0      	uxtb	r0, r0
90027f1e:	fb1b fb0a 	smulbb	fp, fp, sl
90027f22:	fb01 2103 	mla	r1, r1, r3, r2
90027f26:	ea4f 02ec 	mov.w	r2, ip, asr #3
90027f2a:	fb10 f00a 	smulbb	r0, r0, sl
90027f2e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90027f32:	b289      	uxth	r1, r1
90027f34:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90027f38:	fa5f fc8c 	uxtb.w	ip, ip
90027f3c:	fb02 b203 	mla	r2, r2, r3, fp
90027f40:	fb0c 0003 	mla	r0, ip, r3, r0
90027f44:	1c4b      	adds	r3, r1, #1
90027f46:	b292      	uxth	r2, r2
90027f48:	b280      	uxth	r0, r0
90027f4a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90027f4e:	f100 0b01 	add.w	fp, r0, #1
90027f52:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90027f56:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90027f5a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90027f5e:	ea4b 0101 	orr.w	r1, fp, r1
90027f62:	f102 0b01 	add.w	fp, r2, #1
90027f66:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90027f6a:	0952      	lsrs	r2, r2, #5
90027f6c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027f70:	4311      	orrs	r1, r2
90027f72:	f8ae 1000 	strh.w	r1, [lr]
90027f76:	e79f      	b.n	90027eb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90027f78:	b013      	add	sp, #76	@ 0x4c
90027f7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027f7e:	bf00      	nop
90027f80:	240233e4 	.word	0x240233e4

90027f84 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90027f84:	b570      	push	{r4, r5, r6, lr}
90027f86:	1208      	asrs	r0, r1, #8
90027f88:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90027f8c:	b29e      	uxth	r6, r3
90027f8e:	1213      	asrs	r3, r2, #8
90027f90:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027f94:	10cc      	asrs	r4, r1, #3
90027f96:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90027f9a:	00c9      	lsls	r1, r1, #3
90027f9c:	fb10 f006 	smulbb	r0, r0, r6
90027fa0:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90027fa4:	fb13 f305 	smulbb	r3, r3, r5
90027fa8:	fb14 f406 	smulbb	r4, r4, r6
90027fac:	4418      	add	r0, r3
90027fae:	10d3      	asrs	r3, r2, #3
90027fb0:	00d2      	lsls	r2, r2, #3
90027fb2:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90027fb6:	b280      	uxth	r0, r0
90027fb8:	b2d2      	uxtb	r2, r2
90027fba:	fb13 f305 	smulbb	r3, r3, r5
90027fbe:	fb12 f205 	smulbb	r2, r2, r5
90027fc2:	441c      	add	r4, r3
90027fc4:	b2cb      	uxtb	r3, r1
90027fc6:	fb13 f306 	smulbb	r3, r3, r6
90027fca:	b2a4      	uxth	r4, r4
90027fcc:	4413      	add	r3, r2
90027fce:	1c42      	adds	r2, r0, #1
90027fd0:	b29b      	uxth	r3, r3
90027fd2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027fd6:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
90027fda:	1c58      	adds	r0, r3, #1
90027fdc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90027fe0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90027fe4:	4310      	orrs	r0, r2
90027fe6:	1c62      	adds	r2, r4, #1
90027fe8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90027fec:	0964      	lsrs	r4, r4, #5
90027fee:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90027ff2:	4320      	orrs	r0, r4
90027ff4:	bd70      	pop	{r4, r5, r6, pc}
	...

90027ff8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90027ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027ffc:	b08f      	sub	sp, #60	@ 0x3c
90027ffe:	461c      	mov	r4, r3
90028000:	460d      	mov	r5, r1
90028002:	4616      	mov	r6, r2
90028004:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90028008:	9004      	str	r0, [sp, #16]
9002800a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002800c:	2f00      	cmp	r7, #0
9002800e:	f000 80f6 	beq.w	900281fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90028012:	6820      	ldr	r0, [r4, #0]
90028014:	aa0a      	add	r2, sp, #40	@ 0x28
90028016:	6861      	ldr	r1, [r4, #4]
90028018:	f04f 0802 	mov.w	r8, #2
9002801c:	3604      	adds	r6, #4
9002801e:	c203      	stmia	r2!, {r0, r1}
90028020:	6818      	ldr	r0, [r3, #0]
90028022:	aa0c      	add	r2, sp, #48	@ 0x30
90028024:	6859      	ldr	r1, [r3, #4]
90028026:	c203      	stmia	r2!, {r0, r1}
90028028:	a80a      	add	r0, sp, #40	@ 0x28
9002802a:	f7ee fc21 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002802e:	4621      	mov	r1, r4
90028030:	a80c      	add	r0, sp, #48	@ 0x30
90028032:	f7ee fc45 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028036:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9002803a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
9002803e:	f002 0301 	and.w	r3, r2, #1
90028042:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90028046:	9306      	str	r3, [sp, #24]
90028048:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002804c:	f003 0101 	and.w	r1, r3, #1
90028050:	9105      	str	r1, [sp, #20]
90028052:	9805      	ldr	r0, [sp, #20]
90028054:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90028058:	4403      	add	r3, r0
9002805a:	fb01 2303 	mla	r3, r1, r3, r2
9002805e:	fb93 f3f8 	sdiv	r3, r3, r8
90028062:	441d      	add	r5, r3
90028064:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90028068:	441a      	add	r2, r3
9002806a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9002806e:	4419      	add	r1, r3
90028070:	4b64      	ldr	r3, [pc, #400]	@ (90028204 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90028072:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90028076:	6818      	ldr	r0, [r3, #0]
90028078:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
9002807c:	6803      	ldr	r3, [r0, #0]
9002807e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90028080:	4798      	blx	r3
90028082:	4a61      	ldr	r2, [pc, #388]	@ (90028208 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90028084:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90028088:	2fff      	cmp	r7, #255	@ 0xff
9002808a:	8813      	ldrh	r3, [r2, #0]
9002808c:	4611      	mov	r1, r2
9002808e:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
90028092:	fb03 fb0b 	mul.w	fp, r3, fp
90028096:	fb03 a404 	mla	r4, r3, r4, sl
9002809a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002809e:	d06b      	beq.n	90028178 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
900280a0:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
900280a4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
900280a8:	9303      	str	r3, [sp, #12]
900280aa:	eb04 034b 	add.w	r3, r4, fp, lsl #1
900280ae:	e9cd 3207 	strd	r3, r2, [sp, #28]
900280b2:	9b07      	ldr	r3, [sp, #28]
900280b4:	42a3      	cmp	r3, r4
900280b6:	f240 809d 	bls.w	900281f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
900280ba:	9b06      	ldr	r3, [sp, #24]
900280bc:	2b00      	cmp	r3, #0
900280be:	d039      	beq.n	90028134 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
900280c0:	782b      	ldrb	r3, [r5, #0]
900280c2:	f105 0801 	add.w	r8, r5, #1
900280c6:	f109 3bff 	add.w	fp, r9, #4294967295
900280ca:	8822      	ldrh	r2, [r4, #0]
900280cc:	f003 030f 	and.w	r3, r3, #15
900280d0:	9804      	ldr	r0, [sp, #16]
900280d2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900280d6:	9b03      	ldr	r3, [sp, #12]
900280d8:	9300      	str	r3, [sp, #0]
900280da:	463b      	mov	r3, r7
900280dc:	f7ff ff52 	bl	90027f84 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900280e0:	f824 0b02 	strh.w	r0, [r4], #2
900280e4:	f1bb 0f01 	cmp.w	fp, #1
900280e8:	46a2      	mov	sl, r4
900280ea:	f104 0404 	add.w	r4, r4, #4
900280ee:	dd24      	ble.n	9002813a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
900280f0:	f898 3000 	ldrb.w	r3, [r8]
900280f4:	f1ab 0b02 	sub.w	fp, fp, #2
900280f8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
900280fc:	091b      	lsrs	r3, r3, #4
900280fe:	9804      	ldr	r0, [sp, #16]
90028100:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028104:	9b03      	ldr	r3, [sp, #12]
90028106:	9300      	str	r3, [sp, #0]
90028108:	463b      	mov	r3, r7
9002810a:	f7ff ff3b 	bl	90027f84 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002810e:	f824 0c04 	strh.w	r0, [r4, #-4]
90028112:	f818 3b01 	ldrb.w	r3, [r8], #1
90028116:	f834 2c02 	ldrh.w	r2, [r4, #-2]
9002811a:	f003 030f 	and.w	r3, r3, #15
9002811e:	9804      	ldr	r0, [sp, #16]
90028120:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90028124:	9b03      	ldr	r3, [sp, #12]
90028126:	9300      	str	r3, [sp, #0]
90028128:	463b      	mov	r3, r7
9002812a:	f7ff ff2b 	bl	90027f84 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002812e:	f824 0c02 	strh.w	r0, [r4, #-2]
90028132:	e7d7      	b.n	900280e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90028134:	46a8      	mov	r8, r5
90028136:	46cb      	mov	fp, r9
90028138:	e7d4      	b.n	900280e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
9002813a:	d10e      	bne.n	9002815a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
9002813c:	f898 3000 	ldrb.w	r3, [r8]
90028140:	f8ba 2000 	ldrh.w	r2, [sl]
90028144:	091b      	lsrs	r3, r3, #4
90028146:	9804      	ldr	r0, [sp, #16]
90028148:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002814c:	9b03      	ldr	r3, [sp, #12]
9002814e:	9300      	str	r3, [sp, #0]
90028150:	463b      	mov	r3, r7
90028152:	f7ff ff17 	bl	90027f84 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028156:	f82a 0b02 	strh.w	r0, [sl], #2
9002815a:	9b08      	ldr	r3, [sp, #32]
9002815c:	9a05      	ldr	r2, [sp, #20]
9002815e:	881c      	ldrh	r4, [r3, #0]
90028160:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90028164:	eba4 0409 	sub.w	r4, r4, r9
90028168:	4413      	add	r3, r2
9002816a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002816c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90028170:	fb93 f3f2 	sdiv	r3, r3, r2
90028174:	441d      	add	r5, r3
90028176:	e79c      	b.n	900280b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90028178:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
9002817c:	45a3      	cmp	fp, r4
9002817e:	d939      	bls.n	900281f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90028180:	9b06      	ldr	r3, [sp, #24]
90028182:	b1fb      	cbz	r3, 900281c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90028184:	782b      	ldrb	r3, [r5, #0]
90028186:	1c6a      	adds	r2, r5, #1
90028188:	f109 30ff 	add.w	r0, r9, #4294967295
9002818c:	3402      	adds	r4, #2
9002818e:	f003 030f 	and.w	r3, r3, #15
90028192:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028196:	f824 3c02 	strh.w	r3, [r4, #-2]
9002819a:	2801      	cmp	r0, #1
9002819c:	4623      	mov	r3, r4
9002819e:	f104 0404 	add.w	r4, r4, #4
900281a2:	dd12      	ble.n	900281ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
900281a4:	7813      	ldrb	r3, [r2, #0]
900281a6:	3802      	subs	r0, #2
900281a8:	091b      	lsrs	r3, r3, #4
900281aa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900281ae:	f824 3c04 	strh.w	r3, [r4, #-4]
900281b2:	f812 3b01 	ldrb.w	r3, [r2], #1
900281b6:	f003 030f 	and.w	r3, r3, #15
900281ba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900281be:	f824 3c02 	strh.w	r3, [r4, #-2]
900281c2:	e7ea      	b.n	9002819a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
900281c4:	462a      	mov	r2, r5
900281c6:	4648      	mov	r0, r9
900281c8:	e7e7      	b.n	9002819a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
900281ca:	d106      	bne.n	900281da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
900281cc:	7812      	ldrb	r2, [r2, #0]
900281ce:	3302      	adds	r3, #2
900281d0:	0912      	lsrs	r2, r2, #4
900281d2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
900281d6:	f823 2c02 	strh.w	r2, [r3, #-2]
900281da:	880c      	ldrh	r4, [r1, #0]
900281dc:	9a05      	ldr	r2, [sp, #20]
900281de:	eba4 0409 	sub.w	r4, r4, r9
900281e2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
900281e6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900281ea:	4413      	add	r3, r2
900281ec:	fb93 f3f8 	sdiv	r3, r3, r8
900281f0:	441d      	add	r5, r3
900281f2:	e7c3      	b.n	9002817c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
900281f4:	4b03      	ldr	r3, [pc, #12]	@ (90028204 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
900281f6:	6818      	ldr	r0, [r3, #0]
900281f8:	6803      	ldr	r3, [r0, #0]
900281fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900281fc:	4798      	blx	r3
900281fe:	b00f      	add	sp, #60	@ 0x3c
90028200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028204:	240233d4 	.word	0x240233d4
90028208:	240233ce 	.word	0x240233ce

9002820c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
9002820c:	b5f0      	push	{r4, r5, r6, r7, lr}
9002820e:	f89d 5014 	ldrb.w	r5, [sp, #20]
90028212:	0a0f      	lsrs	r7, r1, #8
90028214:	2dff      	cmp	r5, #255	@ 0xff
90028216:	d10c      	bne.n	90028232 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028218:	2bff      	cmp	r3, #255	@ 0xff
9002821a:	d10a      	bne.n	90028232 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
9002821c:	0948      	lsrs	r0, r1, #5
9002821e:	4b25      	ldr	r3, [pc, #148]	@ (900282b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90028220:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90028224:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90028228:	403b      	ands	r3, r7
9002822a:	4318      	orrs	r0, r3
9002822c:	4308      	orrs	r0, r1
9002822e:	b280      	uxth	r0, r0
90028230:	bdf0      	pop	{r4, r5, r6, r7, pc}
90028232:	fb15 f503 	smulbb	r5, r5, r3
90028236:	1214      	asrs	r4, r2, #8
90028238:	10d6      	asrs	r6, r2, #3
9002823a:	b2ab      	uxth	r3, r5
9002823c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90028240:	00d0      	lsls	r0, r2, #3
90028242:	f3c1 4207 	ubfx	r2, r1, #16, #8
90028246:	1c5d      	adds	r5, r3, #1
90028248:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002824c:	b2c0      	uxtb	r0, r0
9002824e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90028252:	eb05 2513 	add.w	r5, r5, r3, lsr #8
90028256:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9002825a:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002825e:	fa1f fc85 	uxth.w	ip, r5
90028262:	43ed      	mvns	r5, r5
90028264:	fb12 f20c 	smulbb	r2, r2, ip
90028268:	b2eb      	uxtb	r3, r5
9002826a:	b2fd      	uxtb	r5, r7
9002826c:	fb04 2403 	mla	r4, r4, r3, r2
90028270:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90028274:	fb15 f50c 	smulbb	r5, r5, ip
90028278:	b2c8      	uxtb	r0, r1
9002827a:	b2a4      	uxth	r4, r4
9002827c:	fb10 f00c 	smulbb	r0, r0, ip
90028280:	fb06 5503 	mla	r5, r6, r3, r5
90028284:	fb02 0003 	mla	r0, r2, r3, r0
90028288:	b2ad      	uxth	r5, r5
9002828a:	b283      	uxth	r3, r0
9002828c:	1c60      	adds	r0, r4, #1
9002828e:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90028292:	1c58      	adds	r0, r3, #1
90028294:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028298:	1c6b      	adds	r3, r5, #1
9002829a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9002829e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900282a2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900282a6:	096d      	lsrs	r5, r5, #5
900282a8:	4320      	orrs	r0, r4
900282aa:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900282ae:	4328      	orrs	r0, r5
900282b0:	e7be      	b.n	90028230 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
900282b2:	bf00      	nop
900282b4:	00fff800 	.word	0x00fff800

900282b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
900282b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900282bc:	461c      	mov	r4, r3
900282be:	b08d      	sub	sp, #52	@ 0x34
900282c0:	460d      	mov	r5, r1
900282c2:	4616      	mov	r6, r2
900282c4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900282c6:	4680      	mov	r8, r0
900282c8:	6861      	ldr	r1, [r4, #4]
900282ca:	aa08      	add	r2, sp, #32
900282cc:	6820      	ldr	r0, [r4, #0]
900282ce:	f04f 0a02 	mov.w	sl, #2
900282d2:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
900282d6:	3604      	adds	r6, #4
900282d8:	c203      	stmia	r2!, {r0, r1}
900282da:	6818      	ldr	r0, [r3, #0]
900282dc:	aa0a      	add	r2, sp, #40	@ 0x28
900282de:	6859      	ldr	r1, [r3, #4]
900282e0:	c203      	stmia	r2!, {r0, r1}
900282e2:	a808      	add	r0, sp, #32
900282e4:	f7ee fac4 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900282e8:	4621      	mov	r1, r4
900282ea:	a80a      	add	r0, sp, #40	@ 0x28
900282ec:	f7ee fae8 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900282f0:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
900282f4:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
900282f8:	f002 0301 	and.w	r3, r2, #1
900282fc:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
90028300:	9303      	str	r3, [sp, #12]
90028302:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90028306:	f003 0101 	and.w	r1, r3, #1
9002830a:	9102      	str	r1, [sp, #8]
9002830c:	9802      	ldr	r0, [sp, #8]
9002830e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90028312:	4403      	add	r3, r0
90028314:	fb01 2303 	mla	r3, r1, r3, r2
90028318:	fb93 f3fa 	sdiv	r3, r3, sl
9002831c:	441d      	add	r5, r3
9002831e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90028322:	441a      	add	r2, r3
90028324:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
90028328:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9002832c:	4419      	add	r1, r3
9002832e:	4a3e      	ldr	r2, [pc, #248]	@ (90028428 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90028330:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
90028334:	6810      	ldr	r0, [r2, #0]
90028336:	9205      	str	r2, [sp, #20]
90028338:	6803      	ldr	r3, [r0, #0]
9002833a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002833c:	4798      	blx	r3
9002833e:	4b3b      	ldr	r3, [pc, #236]	@ (9002842c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90028340:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
90028344:	8819      	ldrh	r1, [r3, #0]
90028346:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
9002834a:	434f      	muls	r7, r1
9002834c:	fb01 c404 	mla	r4, r1, r4, ip
90028350:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028354:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90028358:	e9cd 3a06 	strd	r3, sl, [sp, #24]
9002835c:	9204      	str	r2, [sp, #16]
9002835e:	9b04      	ldr	r3, [sp, #16]
90028360:	429c      	cmp	r4, r3
90028362:	d258      	bcs.n	90028416 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90028364:	9b03      	ldr	r3, [sp, #12]
90028366:	2b00      	cmp	r3, #0
90028368:	d034      	beq.n	900283d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
9002836a:	782b      	ldrb	r3, [r5, #0]
9002836c:	1c6f      	adds	r7, r5, #1
9002836e:	f003 030f 	and.w	r3, r3, #15
90028372:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028376:	0e0b      	lsrs	r3, r1, #24
90028378:	d006      	beq.n	90028388 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
9002837a:	8822      	ldrh	r2, [r4, #0]
9002837c:	4640      	mov	r0, r8
9002837e:	9300      	str	r3, [sp, #0]
90028380:	464b      	mov	r3, r9
90028382:	f7ff ff43 	bl	9002820c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028386:	8020      	strh	r0, [r4, #0]
90028388:	3402      	adds	r4, #2
9002838a:	f10b 3aff 	add.w	sl, fp, #4294967295
9002838e:	f1ba 0f01 	cmp.w	sl, #1
90028392:	dd22      	ble.n	900283da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90028394:	783b      	ldrb	r3, [r7, #0]
90028396:	091b      	lsrs	r3, r3, #4
90028398:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002839c:	0e0b      	lsrs	r3, r1, #24
9002839e:	d006      	beq.n	900283ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
900283a0:	8822      	ldrh	r2, [r4, #0]
900283a2:	4640      	mov	r0, r8
900283a4:	9300      	str	r3, [sp, #0]
900283a6:	464b      	mov	r3, r9
900283a8:	f7ff ff30 	bl	9002820c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900283ac:	8020      	strh	r0, [r4, #0]
900283ae:	f817 3b01 	ldrb.w	r3, [r7], #1
900283b2:	f003 030f 	and.w	r3, r3, #15
900283b6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900283ba:	0e0b      	lsrs	r3, r1, #24
900283bc:	d006      	beq.n	900283cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
900283be:	8862      	ldrh	r2, [r4, #2]
900283c0:	4640      	mov	r0, r8
900283c2:	9300      	str	r3, [sp, #0]
900283c4:	464b      	mov	r3, r9
900283c6:	f7ff ff21 	bl	9002820c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900283ca:	8060      	strh	r0, [r4, #2]
900283cc:	3404      	adds	r4, #4
900283ce:	f1aa 0a02 	sub.w	sl, sl, #2
900283d2:	e7dc      	b.n	9002838e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
900283d4:	462f      	mov	r7, r5
900283d6:	46da      	mov	sl, fp
900283d8:	e7d9      	b.n	9002838e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
900283da:	d10d      	bne.n	900283f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
900283dc:	783b      	ldrb	r3, [r7, #0]
900283de:	091b      	lsrs	r3, r3, #4
900283e0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900283e4:	0e0b      	lsrs	r3, r1, #24
900283e6:	d006      	beq.n	900283f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
900283e8:	8822      	ldrh	r2, [r4, #0]
900283ea:	4640      	mov	r0, r8
900283ec:	9300      	str	r3, [sp, #0]
900283ee:	464b      	mov	r3, r9
900283f0:	f7ff ff0c 	bl	9002820c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900283f4:	8020      	strh	r0, [r4, #0]
900283f6:	3402      	adds	r4, #2
900283f8:	9b06      	ldr	r3, [sp, #24]
900283fa:	9a02      	ldr	r2, [sp, #8]
900283fc:	881b      	ldrh	r3, [r3, #0]
900283fe:	eba3 030b 	sub.w	r3, r3, fp
90028402:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90028406:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
9002840a:	4413      	add	r3, r2
9002840c:	9a07      	ldr	r2, [sp, #28]
9002840e:	fb93 f3f2 	sdiv	r3, r3, r2
90028412:	441d      	add	r5, r3
90028414:	e7a3      	b.n	9002835e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
90028416:	9b05      	ldr	r3, [sp, #20]
90028418:	6818      	ldr	r0, [r3, #0]
9002841a:	6803      	ldr	r3, [r0, #0]
9002841c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002841e:	4798      	blx	r3
90028420:	b00d      	add	sp, #52	@ 0x34
90028422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028426:	bf00      	nop
90028428:	240233d4 	.word	0x240233d4
9002842c:	240233ce 	.word	0x240233ce

90028430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90028430:	b570      	push	{r4, r5, r6, lr}
90028432:	1214      	asrs	r4, r2, #8
90028434:	788d      	ldrb	r5, [r1, #2]
90028436:	f89d 6010 	ldrb.w	r6, [sp, #16]
9002843a:	10d0      	asrs	r0, r2, #3
9002843c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90028440:	00d2      	lsls	r2, r2, #3
90028442:	fb15 f503 	smulbb	r5, r5, r3
90028446:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002844a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002844e:	b2d2      	uxtb	r2, r2
90028450:	fb04 5506 	mla	r5, r4, r6, r5
90028454:	784c      	ldrb	r4, [r1, #1]
90028456:	7809      	ldrb	r1, [r1, #0]
90028458:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
9002845c:	fb14 f403 	smulbb	r4, r4, r3
90028460:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90028464:	fb11 f303 	smulbb	r3, r1, r3
90028468:	b2ad      	uxth	r5, r5
9002846a:	fb00 4406 	mla	r4, r0, r6, r4
9002846e:	fb02 3306 	mla	r3, r2, r6, r3
90028472:	1c68      	adds	r0, r5, #1
90028474:	b2a4      	uxth	r4, r4
90028476:	b29b      	uxth	r3, r3
90028478:	eb00 2515 	add.w	r5, r0, r5, lsr #8
9002847c:	1c62      	adds	r2, r4, #1
9002847e:	1c58      	adds	r0, r3, #1
90028480:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90028484:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90028488:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002848c:	0964      	lsrs	r4, r4, #5
9002848e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90028492:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90028496:	4328      	orrs	r0, r5
90028498:	4320      	orrs	r0, r4
9002849a:	bd70      	pop	{r4, r5, r6, pc}

9002849c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9002849c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900284a0:	b08f      	sub	sp, #60	@ 0x3c
900284a2:	461c      	mov	r4, r3
900284a4:	4682      	mov	sl, r0
900284a6:	460e      	mov	r6, r1
900284a8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
900284ac:	4615      	mov	r5, r2
900284ae:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900284b0:	2f00      	cmp	r7, #0
900284b2:	f000 8141 	beq.w	90028738 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
900284b6:	6820      	ldr	r0, [r4, #0]
900284b8:	aa0a      	add	r2, sp, #40	@ 0x28
900284ba:	6861      	ldr	r1, [r4, #4]
900284bc:	f04f 0802 	mov.w	r8, #2
900284c0:	3504      	adds	r5, #4
900284c2:	c203      	stmia	r2!, {r0, r1}
900284c4:	6818      	ldr	r0, [r3, #0]
900284c6:	aa0c      	add	r2, sp, #48	@ 0x30
900284c8:	6859      	ldr	r1, [r3, #4]
900284ca:	c203      	stmia	r2!, {r0, r1}
900284cc:	a80a      	add	r0, sp, #40	@ 0x28
900284ce:	f7ee f9cf 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900284d2:	4621      	mov	r1, r4
900284d4:	a80c      	add	r0, sp, #48	@ 0x30
900284d6:	f7ee f9f3 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900284da:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
900284de:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
900284e2:	f002 0301 	and.w	r3, r2, #1
900284e6:	9306      	str	r3, [sp, #24]
900284e8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900284ec:	f003 0101 	and.w	r1, r3, #1
900284f0:	9105      	str	r1, [sp, #20]
900284f2:	9805      	ldr	r0, [sp, #20]
900284f4:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
900284f8:	4403      	add	r3, r0
900284fa:	fb01 2303 	mla	r3, r1, r3, r2
900284fe:	fb93 f3f8 	sdiv	r3, r3, r8
90028502:	441e      	add	r6, r3
90028504:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90028508:	441a      	add	r2, r3
9002850a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9002850e:	4419      	add	r1, r3
90028510:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90028514:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90028518:	9303      	str	r3, [sp, #12]
9002851a:	4b89      	ldr	r3, [pc, #548]	@ (90028740 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
9002851c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90028520:	6818      	ldr	r0, [r3, #0]
90028522:	6803      	ldr	r3, [r0, #0]
90028524:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90028526:	4798      	blx	r3
90028528:	4a86      	ldr	r2, [pc, #536]	@ (90028744 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
9002852a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
9002852e:	2fff      	cmp	r7, #255	@ 0xff
90028530:	8813      	ldrh	r3, [r2, #0]
90028532:	4694      	mov	ip, r2
90028534:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
90028538:	fb03 9404 	mla	r4, r3, r4, r9
9002853c:	fb03 f30b 	mul.w	r3, r3, fp
90028540:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028544:	d071      	beq.n	9002862a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
90028546:	43f9      	mvns	r1, r7
90028548:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002854c:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90028550:	b2c9      	uxtb	r1, r1
90028552:	e9cd 3207 	strd	r3, r2, [sp, #28]
90028556:	9104      	str	r1, [sp, #16]
90028558:	9b07      	ldr	r3, [sp, #28]
9002855a:	42a3      	cmp	r3, r4
9002855c:	f240 80e7 	bls.w	9002872e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90028560:	9b06      	ldr	r3, [sp, #24]
90028562:	2b00      	cmp	r3, #0
90028564:	d03d      	beq.n	900285e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
90028566:	7831      	ldrb	r1, [r6, #0]
90028568:	4650      	mov	r0, sl
9002856a:	9b04      	ldr	r3, [sp, #16]
9002856c:	f106 0801 	add.w	r8, r6, #1
90028570:	f001 010f 	and.w	r1, r1, #15
90028574:	8822      	ldrh	r2, [r4, #0]
90028576:	9300      	str	r3, [sp, #0]
90028578:	463b      	mov	r3, r7
9002857a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002857e:	4429      	add	r1, r5
90028580:	f7ff ff56 	bl	90028430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028584:	9b03      	ldr	r3, [sp, #12]
90028586:	f824 0b02 	strh.w	r0, [r4], #2
9002858a:	f103 3bff 	add.w	fp, r3, #4294967295
9002858e:	f1bb 0f01 	cmp.w	fp, #1
90028592:	46a1      	mov	r9, r4
90028594:	f104 0404 	add.w	r4, r4, #4
90028598:	dd27      	ble.n	900285ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
9002859a:	f898 1000 	ldrb.w	r1, [r8]
9002859e:	4650      	mov	r0, sl
900285a0:	9b04      	ldr	r3, [sp, #16]
900285a2:	f1ab 0b02 	sub.w	fp, fp, #2
900285a6:	0909      	lsrs	r1, r1, #4
900285a8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
900285ac:	9300      	str	r3, [sp, #0]
900285ae:	463b      	mov	r3, r7
900285b0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900285b4:	4429      	add	r1, r5
900285b6:	f7ff ff3b 	bl	90028430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900285ba:	f824 0c04 	strh.w	r0, [r4, #-4]
900285be:	f818 1b01 	ldrb.w	r1, [r8], #1
900285c2:	4650      	mov	r0, sl
900285c4:	9b04      	ldr	r3, [sp, #16]
900285c6:	f001 010f 	and.w	r1, r1, #15
900285ca:	f834 2c02 	ldrh.w	r2, [r4, #-2]
900285ce:	9300      	str	r3, [sp, #0]
900285d0:	463b      	mov	r3, r7
900285d2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900285d6:	4429      	add	r1, r5
900285d8:	f7ff ff2a 	bl	90028430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900285dc:	f824 0c02 	strh.w	r0, [r4, #-2]
900285e0:	e7d5      	b.n	9002858e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900285e2:	46b0      	mov	r8, r6
900285e4:	f8dd b00c 	ldr.w	fp, [sp, #12]
900285e8:	e7d1      	b.n	9002858e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900285ea:	d10f      	bne.n	9002860c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
900285ec:	f898 1000 	ldrb.w	r1, [r8]
900285f0:	4650      	mov	r0, sl
900285f2:	9b04      	ldr	r3, [sp, #16]
900285f4:	0909      	lsrs	r1, r1, #4
900285f6:	f8b9 2000 	ldrh.w	r2, [r9]
900285fa:	9300      	str	r3, [sp, #0]
900285fc:	463b      	mov	r3, r7
900285fe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028602:	4429      	add	r1, r5
90028604:	f7ff ff14 	bl	90028430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028608:	f829 0b02 	strh.w	r0, [r9], #2
9002860c:	9b08      	ldr	r3, [sp, #32]
9002860e:	9a05      	ldr	r2, [sp, #20]
90028610:	881c      	ldrh	r4, [r3, #0]
90028612:	9b03      	ldr	r3, [sp, #12]
90028614:	1ae4      	subs	r4, r4, r3
90028616:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002861a:	4413      	add	r3, r2
9002861c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002861e:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90028622:	fb93 f3f2 	sdiv	r3, r3, r2
90028626:	441e      	add	r6, r3
90028628:	e796      	b.n	90028558 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
9002862a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002862e:	4f46      	ldr	r7, [pc, #280]	@ (90028748 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90028630:	42a3      	cmp	r3, r4
90028632:	d97c      	bls.n	9002872e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90028634:	9a06      	ldr	r2, [sp, #24]
90028636:	2a00      	cmp	r2, #0
90028638:	d054      	beq.n	900286e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
9002863a:	7830      	ldrb	r0, [r6, #0]
9002863c:	1c71      	adds	r1, r6, #1
9002863e:	f000 000f 	and.w	r0, r0, #15
90028642:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028646:	eb05 0e00 	add.w	lr, r5, r0
9002864a:	5c28      	ldrb	r0, [r5, r0]
9002864c:	f89e 2002 	ldrb.w	r2, [lr, #2]
90028650:	f89e e001 	ldrb.w	lr, [lr, #1]
90028654:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90028658:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002865c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90028660:	ea42 020e 	orr.w	r2, r2, lr
90028664:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90028668:	f824 2b02 	strh.w	r2, [r4], #2
9002866c:	9a03      	ldr	r2, [sp, #12]
9002866e:	f102 3eff 	add.w	lr, r2, #4294967295
90028672:	f1be 0f01 	cmp.w	lr, #1
90028676:	4620      	mov	r0, r4
90028678:	f104 0404 	add.w	r4, r4, #4
9002867c:	dd36      	ble.n	900286ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
9002867e:	7808      	ldrb	r0, [r1, #0]
90028680:	f1ae 0e02 	sub.w	lr, lr, #2
90028684:	0900      	lsrs	r0, r0, #4
90028686:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002868a:	eb05 0a00 	add.w	sl, r5, r0
9002868e:	f89a 2001 	ldrb.w	r2, [sl, #1]
90028692:	f89a 9002 	ldrb.w	r9, [sl, #2]
90028696:	00d2      	lsls	r2, r2, #3
90028698:	ea07 2909 	and.w	r9, r7, r9, lsl #8
9002869c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900286a0:	ea49 0202 	orr.w	r2, r9, r2
900286a4:	f815 9000 	ldrb.w	r9, [r5, r0]
900286a8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900286ac:	f824 2c04 	strh.w	r2, [r4, #-4]
900286b0:	f811 0b01 	ldrb.w	r0, [r1], #1
900286b4:	f000 000f 	and.w	r0, r0, #15
900286b8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900286bc:	eb05 0a00 	add.w	sl, r5, r0
900286c0:	f89a 2001 	ldrb.w	r2, [sl, #1]
900286c4:	f89a 9002 	ldrb.w	r9, [sl, #2]
900286c8:	00d2      	lsls	r2, r2, #3
900286ca:	ea07 2909 	and.w	r9, r7, r9, lsl #8
900286ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900286d2:	ea49 0202 	orr.w	r2, r9, r2
900286d6:	f815 9000 	ldrb.w	r9, [r5, r0]
900286da:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900286de:	f824 2c02 	strh.w	r2, [r4, #-2]
900286e2:	e7c6      	b.n	90028672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900286e4:	4631      	mov	r1, r6
900286e6:	f8dd e00c 	ldr.w	lr, [sp, #12]
900286ea:	e7c2      	b.n	90028672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900286ec:	d111      	bne.n	90028712 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
900286ee:	7809      	ldrb	r1, [r1, #0]
900286f0:	0909      	lsrs	r1, r1, #4
900286f2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900286f6:	186c      	adds	r4, r5, r1
900286f8:	5c69      	ldrb	r1, [r5, r1]
900286fa:	78a2      	ldrb	r2, [r4, #2]
900286fc:	7864      	ldrb	r4, [r4, #1]
900286fe:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90028702:	00e4      	lsls	r4, r4, #3
90028704:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90028708:	4322      	orrs	r2, r4
9002870a:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
9002870e:	f820 2b02 	strh.w	r2, [r0], #2
90028712:	9a03      	ldr	r2, [sp, #12]
90028714:	f8bc 4000 	ldrh.w	r4, [ip]
90028718:	9905      	ldr	r1, [sp, #20]
9002871a:	1aa4      	subs	r4, r4, r2
9002871c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90028720:	440a      	add	r2, r1
90028722:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028726:	fb92 f2f8 	sdiv	r2, r2, r8
9002872a:	4416      	add	r6, r2
9002872c:	e780      	b.n	90028630 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
9002872e:	4b04      	ldr	r3, [pc, #16]	@ (90028740 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90028730:	6818      	ldr	r0, [r3, #0]
90028732:	6803      	ldr	r3, [r0, #0]
90028734:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028736:	4798      	blx	r3
90028738:	b00f      	add	sp, #60	@ 0x3c
9002873a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002873e:	bf00      	nop
90028740:	240233d4 	.word	0x240233d4
90028744:	240233ce 	.word	0x240233ce
90028748:	fffff800 	.word	0xfffff800

9002874c <CRC_Lock>:
9002874c:	4a2d      	ldr	r2, [pc, #180]	@ (90028804 <CRC_Lock+0xb8>)
9002874e:	b530      	push	{r4, r5, lr}
90028750:	6813      	ldr	r3, [r2, #0]
90028752:	f24c 2540 	movw	r5, #49728	@ 0xc240
90028756:	f023 0301 	bic.w	r3, r3, #1
9002875a:	6013      	str	r3, [r2, #0]
9002875c:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
90028760:	4b29      	ldr	r3, [pc, #164]	@ (90028808 <CRC_Lock+0xbc>)
90028762:	681c      	ldr	r4, [r3, #0]
90028764:	4014      	ands	r4, r2
90028766:	42ac      	cmp	r4, r5
90028768:	d005      	beq.n	90028776 <CRC_Lock+0x2a>
9002876a:	681c      	ldr	r4, [r3, #0]
9002876c:	f24c 2570 	movw	r5, #49776	@ 0xc270
90028770:	4014      	ands	r4, r2
90028772:	42ac      	cmp	r4, r5
90028774:	d125      	bne.n	900287c2 <CRC_Lock+0x76>
90028776:	4b25      	ldr	r3, [pc, #148]	@ (9002880c <CRC_Lock+0xc0>)
90028778:	681b      	ldr	r3, [r3, #0]
9002877a:	2b00      	cmp	r3, #0
9002877c:	d139      	bne.n	900287f2 <CRC_Lock+0xa6>
9002877e:	4b24      	ldr	r3, [pc, #144]	@ (90028810 <CRC_Lock+0xc4>)
90028780:	681a      	ldr	r2, [r3, #0]
90028782:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028786:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
9002878a:	d00d      	beq.n	900287a8 <CRC_Lock+0x5c>
9002878c:	681a      	ldr	r2, [r3, #0]
9002878e:	f240 4483 	movw	r4, #1155	@ 0x483
90028792:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028796:	42a2      	cmp	r2, r4
90028798:	d006      	beq.n	900287a8 <CRC_Lock+0x5c>
9002879a:	681b      	ldr	r3, [r3, #0]
9002879c:	f240 4285 	movw	r2, #1157	@ 0x485
900287a0:	f3c3 030b 	ubfx	r3, r3, #0, #12
900287a4:	4293      	cmp	r3, r2
900287a6:	d124      	bne.n	900287f2 <CRC_Lock+0xa6>
900287a8:	4b1a      	ldr	r3, [pc, #104]	@ (90028814 <CRC_Lock+0xc8>)
900287aa:	2201      	movs	r2, #1
900287ac:	601a      	str	r2, [r3, #0]
900287ae:	681a      	ldr	r2, [r3, #0]
900287b0:	2a00      	cmp	r2, #0
900287b2:	d1fc      	bne.n	900287ae <CRC_Lock+0x62>
900287b4:	4b18      	ldr	r3, [pc, #96]	@ (90028818 <CRC_Lock+0xcc>)
900287b6:	6018      	str	r0, [r3, #0]
900287b8:	6818      	ldr	r0, [r3, #0]
900287ba:	1a43      	subs	r3, r0, r1
900287bc:	4258      	negs	r0, r3
900287be:	4158      	adcs	r0, r3
900287c0:	e00e      	b.n	900287e0 <CRC_Lock+0x94>
900287c2:	681b      	ldr	r3, [r3, #0]
900287c4:	4013      	ands	r3, r2
900287c6:	f24d 2220 	movw	r2, #53792	@ 0xd220
900287ca:	4293      	cmp	r3, r2
900287cc:	d111      	bne.n	900287f2 <CRC_Lock+0xa6>
900287ce:	4b13      	ldr	r3, [pc, #76]	@ (9002881c <CRC_Lock+0xd0>)
900287d0:	f240 4286 	movw	r2, #1158	@ 0x486
900287d4:	681b      	ldr	r3, [r3, #0]
900287d6:	f3c3 030b 	ubfx	r3, r3, #0, #12
900287da:	4293      	cmp	r3, r2
900287dc:	d001      	beq.n	900287e2 <CRC_Lock+0x96>
900287de:	2000      	movs	r0, #0
900287e0:	bd30      	pop	{r4, r5, pc}
900287e2:	4b0f      	ldr	r3, [pc, #60]	@ (90028820 <CRC_Lock+0xd4>)
900287e4:	2201      	movs	r2, #1
900287e6:	601a      	str	r2, [r3, #0]
900287e8:	681a      	ldr	r2, [r3, #0]
900287ea:	2a00      	cmp	r2, #0
900287ec:	d1fc      	bne.n	900287e8 <CRC_Lock+0x9c>
900287ee:	4b0d      	ldr	r3, [pc, #52]	@ (90028824 <CRC_Lock+0xd8>)
900287f0:	e7e1      	b.n	900287b6 <CRC_Lock+0x6a>
900287f2:	4b0d      	ldr	r3, [pc, #52]	@ (90028828 <CRC_Lock+0xdc>)
900287f4:	2201      	movs	r2, #1
900287f6:	601a      	str	r2, [r3, #0]
900287f8:	681a      	ldr	r2, [r3, #0]
900287fa:	2a00      	cmp	r2, #0
900287fc:	d1fc      	bne.n	900287f8 <CRC_Lock+0xac>
900287fe:	4b0b      	ldr	r3, [pc, #44]	@ (9002882c <CRC_Lock+0xe0>)
90028800:	e7d9      	b.n	900287b6 <CRC_Lock+0x6a>
90028802:	bf00      	nop
90028804:	e0002000 	.word	0xe0002000
90028808:	e000ed00 	.word	0xe000ed00
9002880c:	e0042000 	.word	0xe0042000
90028810:	5c001000 	.word	0x5c001000
90028814:	58024c08 	.word	0x58024c08
90028818:	58024c00 	.word	0x58024c00
9002881c:	46008ff0 	.word	0x46008ff0
90028820:	46024c08 	.word	0x46024c08
90028824:	46024c00 	.word	0x46024c00
90028828:	40023008 	.word	0x40023008
9002882c:	40023000 	.word	0x40023000

90028830 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90028830:	6101      	str	r1, [r0, #16]
90028832:	4770      	bx	lr

90028834 <_ZN8touchgfx8Gestures4tickEv>:
90028834:	7b83      	ldrb	r3, [r0, #14]
90028836:	b14b      	cbz	r3, 9002884c <_ZN8touchgfx8Gestures4tickEv+0x18>
90028838:	8903      	ldrh	r3, [r0, #8]
9002883a:	3301      	adds	r3, #1
9002883c:	b29b      	uxth	r3, r3
9002883e:	2b07      	cmp	r3, #7
90028840:	8103      	strh	r3, [r0, #8]
90028842:	bf81      	itttt	hi
90028844:	2300      	movhi	r3, #0
90028846:	8143      	strhhi	r3, [r0, #10]
90028848:	8183      	strhhi	r3, [r0, #12]
9002884a:	7383      	strbhi	r3, [r0, #14]
9002884c:	4770      	bx	lr
	...

90028850 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90028850:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90028854:	4698      	mov	r8, r3
90028856:	8883      	ldrh	r3, [r0, #4]
90028858:	4604      	mov	r4, r0
9002885a:	4617      	mov	r7, r2
9002885c:	f8ad 3006 	strh.w	r3, [sp, #6]
90028860:	eba8 0303 	sub.w	r3, r8, r3
90028864:	4a19      	ldr	r2, [pc, #100]	@ (900288cc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90028866:	460e      	mov	r6, r1
90028868:	b21b      	sxth	r3, r3
9002886a:	88c1      	ldrh	r1, [r0, #6]
9002886c:	9200      	str	r2, [sp, #0]
9002886e:	2000      	movs	r0, #0
90028870:	2b00      	cmp	r3, #0
90028872:	8aa2      	ldrh	r2, [r4, #20]
90028874:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
90028878:	bfb8      	it	lt
9002887a:	425b      	neglt	r3, r3
9002887c:	f88d 0004 	strb.w	r0, [sp, #4]
90028880:	f8ad 1008 	strh.w	r1, [sp, #8]
90028884:	b21b      	sxth	r3, r3
90028886:	f8ad 800a 	strh.w	r8, [sp, #10]
9002888a:	f8ad 500c 	strh.w	r5, [sp, #12]
9002888e:	4293      	cmp	r3, r2
90028890:	dc07      	bgt.n	900288a2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90028892:	1a69      	subs	r1, r5, r1
90028894:	b209      	sxth	r1, r1
90028896:	2900      	cmp	r1, #0
90028898:	bfb8      	it	lt
9002889a:	4249      	neglt	r1, r1
9002889c:	b209      	sxth	r1, r1
9002889e:	428a      	cmp	r2, r1
900288a0:	da10      	bge.n	900288c4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
900288a2:	6920      	ldr	r0, [r4, #16]
900288a4:	4669      	mov	r1, sp
900288a6:	eba8 0606 	sub.w	r6, r8, r6
900288aa:	1bef      	subs	r7, r5, r7
900288ac:	6803      	ldr	r3, [r0, #0]
900288ae:	685b      	ldr	r3, [r3, #4]
900288b0:	4798      	blx	r3
900288b2:	2300      	movs	r3, #0
900288b4:	2001      	movs	r0, #1
900288b6:	8166      	strh	r6, [r4, #10]
900288b8:	8123      	strh	r3, [r4, #8]
900288ba:	81a7      	strh	r7, [r4, #12]
900288bc:	f8a4 8004 	strh.w	r8, [r4, #4]
900288c0:	80e5      	strh	r5, [r4, #6]
900288c2:	73a0      	strb	r0, [r4, #14]
900288c4:	b004      	add	sp, #16
900288c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900288ca:	bf00      	nop
900288cc:	9002dd30 	.word	0x9002dd30

900288d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
900288d0:	b5f0      	push	{r4, r5, r6, r7, lr}
900288d2:	461e      	mov	r6, r3
900288d4:	1e4b      	subs	r3, r1, #1
900288d6:	b085      	sub	sp, #20
900288d8:	4604      	mov	r4, r0
900288da:	2b01      	cmp	r3, #1
900288dc:	460d      	mov	r5, r1
900288de:	4617      	mov	r7, r2
900288e0:	d84b      	bhi.n	9002897a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
900288e2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900288e6:	1cd3      	adds	r3, r2, #3
900288e8:	b29b      	uxth	r3, r3
900288ea:	2b06      	cmp	r3, #6
900288ec:	d916      	bls.n	9002891c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
900288ee:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 90028990 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900288f2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900288f6:	f8cd c004 	str.w	ip, [sp, #4]
900288fa:	f04f 0c00 	mov.w	ip, #0
900288fe:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90028902:	6900      	ldr	r0, [r0, #16]
90028904:	f8ad 100c 	strh.w	r1, [sp, #12]
90028908:	a901      	add	r1, sp, #4
9002890a:	f88d c008 	strb.w	ip, [sp, #8]
9002890e:	f8ad 200a 	strh.w	r2, [sp, #10]
90028912:	f8ad 300e 	strh.w	r3, [sp, #14]
90028916:	6803      	ldr	r3, [r0, #0]
90028918:	689b      	ldr	r3, [r3, #8]
9002891a:	4798      	blx	r3
9002891c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90028920:	1cd3      	adds	r3, r2, #3
90028922:	b29b      	uxth	r3, r3
90028924:	2b06      	cmp	r3, #6
90028926:	d916      	bls.n	90028956 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028928:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90028990 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002892c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90028930:	f8cd c004 	str.w	ip, [sp, #4]
90028934:	f04f 0c01 	mov.w	ip, #1
90028938:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002893c:	6920      	ldr	r0, [r4, #16]
9002893e:	f8ad 100c 	strh.w	r1, [sp, #12]
90028942:	a901      	add	r1, sp, #4
90028944:	f88d c008 	strb.w	ip, [sp, #8]
90028948:	f8ad 200a 	strh.w	r2, [sp, #10]
9002894c:	f8ad 300e 	strh.w	r3, [sp, #14]
90028950:	6803      	ldr	r3, [r0, #0]
90028952:	689b      	ldr	r3, [r3, #8]
90028954:	4798      	blx	r3
90028956:	4b0d      	ldr	r3, [pc, #52]	@ (9002898c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90028958:	a901      	add	r1, sp, #4
9002895a:	6920      	ldr	r0, [r4, #16]
9002895c:	9301      	str	r3, [sp, #4]
9002895e:	2300      	movs	r3, #0
90028960:	f88d 5008 	strb.w	r5, [sp, #8]
90028964:	f8ad 700a 	strh.w	r7, [sp, #10]
90028968:	f8ad 600c 	strh.w	r6, [sp, #12]
9002896c:	f8ad 300e 	strh.w	r3, [sp, #14]
90028970:	6803      	ldr	r3, [r0, #0]
90028972:	681b      	ldr	r3, [r3, #0]
90028974:	4798      	blx	r3
90028976:	b005      	add	sp, #20
90028978:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002897a:	2900      	cmp	r1, #0
9002897c:	d1eb      	bne.n	90028956 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002897e:	80a2      	strh	r2, [r4, #4]
90028980:	80c6      	strh	r6, [r0, #6]
90028982:	60a1      	str	r1, [r4, #8]
90028984:	81a1      	strh	r1, [r4, #12]
90028986:	73a1      	strb	r1, [r4, #14]
90028988:	e7e5      	b.n	90028956 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002898a:	bf00      	nop
9002898c:	9002dd1c 	.word	0x9002dd1c
90028990:	9002dd44 	.word	0x9002dd44

90028994 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
90028994:	10c9      	asrs	r1, r1, #3
90028996:	2900      	cmp	r1, #0
90028998:	bfb8      	it	lt
9002899a:	4249      	neglt	r1, r1
9002899c:	2801      	cmp	r0, #1
9002899e:	d108      	bne.n	900289b2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
900289a0:	f3c1 0008 	ubfx	r0, r1, #0, #9
900289a4:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
900289a8:	4601      	mov	r1, r0
900289aa:	dd02      	ble.n	900289b2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
900289ac:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
900289b0:	4770      	bx	lr
900289b2:	29ff      	cmp	r1, #255	@ 0xff
900289b4:	bfa8      	it	ge
900289b6:	21ff      	movge	r1, #255	@ 0xff
900289b8:	4608      	mov	r0, r1
900289ba:	4770      	bx	lr

900289bc <_ZN8touchgfx10Rasterizer6lineToEii>:
900289bc:	b410      	push	{r4}
900289be:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900289c2:	429c      	cmp	r4, r3
900289c4:	d803      	bhi.n	900289ce <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
900289c6:	f85d 4b04 	ldr.w	r4, [sp], #4
900289ca:	f7ec ba47 	b.w	90014e5c <_ZN8touchgfx7Outline6lineToEii>
900289ce:	f85d 4b04 	ldr.w	r4, [sp], #4
900289d2:	4770      	bx	lr

900289d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
900289d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900289d8:	b08b      	sub	sp, #44	@ 0x2c
900289da:	4606      	mov	r6, r0
900289dc:	468a      	mov	sl, r1
900289de:	e9cd 2306 	strd	r2, r3, [sp, #24]
900289e2:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900289e6:	9308      	str	r3, [sp, #32]
900289e8:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900289ec:	9309      	str	r3, [sp, #36]	@ 0x24
900289ee:	f7ec fba0 	bl	90015132 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
900289f2:	68b5      	ldr	r5, [r6, #8]
900289f4:	4604      	mov	r4, r0
900289f6:	2d00      	cmp	r5, #0
900289f8:	d044      	beq.n	90028a84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900289fa:	6873      	ldr	r3, [r6, #4]
900289fc:	42ab      	cmp	r3, r5
900289fe:	d33d      	bcc.n	90028a7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90028a00:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90028a04:	f04f 0800 	mov.w	r8, #0
90028a08:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
90028a0c:	eb02 0b03 	add.w	fp, r2, r3
90028a10:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90028a14:	fb02 1203 	mla	r2, r2, r3, r1
90028a18:	9205      	str	r2, [sp, #20]
90028a1a:	1e6a      	subs	r2, r5, #1
90028a1c:	9204      	str	r2, [sp, #16]
90028a1e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90028a22:	f9b4 7000 	ldrsh.w	r7, [r4]
90028a26:	454b      	cmp	r3, r9
90028a28:	463a      	mov	r2, r7
90028a2a:	d008      	beq.n	90028a3e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90028a2c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
90028a30:	eb03 0b09 	add.w	fp, r3, r9
90028a34:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90028a38:	fb03 1309 	mla	r3, r3, r9, r1
90028a3c:	9305      	str	r3, [sp, #20]
90028a3e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90028a42:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90028a46:	4498      	add	r8, r3
90028a48:	9b04      	ldr	r3, [sp, #16]
90028a4a:	3b01      	subs	r3, #1
90028a4c:	9304      	str	r3, [sp, #16]
90028a4e:	9b04      	ldr	r3, [sp, #16]
90028a50:	3301      	adds	r3, #1
90028a52:	d015      	beq.n	90028a80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90028a54:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90028a58:	42bb      	cmp	r3, r7
90028a5a:	d117      	bne.n	90028a8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90028a5c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90028a60:	9b04      	ldr	r3, [sp, #16]
90028a62:	4548      	cmp	r0, r9
90028a64:	f103 33ff 	add.w	r3, r3, #4294967295
90028a68:	d17d      	bne.n	90028b66 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90028a6a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90028a6e:	4401      	add	r1, r0
90028a70:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90028a74:	4480      	add	r8, r0
90028a76:	e7e9      	b.n	90028a4c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90028a78:	461f      	mov	r7, r3
90028a7a:	e042      	b.n	90028b02 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90028a7c:	2000      	movs	r0, #0
90028a7e:	e002      	b.n	90028a86 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90028a80:	2900      	cmp	r1, #0
90028a82:	d16d      	bne.n	90028b60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90028a84:	2001      	movs	r0, #1
90028a86:	b00b      	add	sp, #44	@ 0x2c
90028a88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028a8c:	b379      	cbz	r1, 90028aee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90028a8e:	2f00      	cmp	r7, #0
90028a90:	db29      	blt.n	90028ae6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90028a92:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90028a96:	42bb      	cmp	r3, r7
90028a98:	dd25      	ble.n	90028ae6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90028a9a:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90028a9e:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
90028aa2:	f7ff ff77 	bl	90028994 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90028aa6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028aa8:	fb10 f003 	smulbb	r0, r0, r3
90028aac:	b280      	uxth	r0, r0
90028aae:	1c41      	adds	r1, r0, #1
90028ab0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90028ab4:	1209      	asrs	r1, r1, #8
90028ab6:	f011 0fff 	tst.w	r1, #255	@ 0xff
90028aba:	d014      	beq.n	90028ae6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90028abc:	b2c9      	uxtb	r1, r1
90028abe:	9808      	ldr	r0, [sp, #32]
90028ac0:	b2ba      	uxth	r2, r7
90028ac2:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
90028ac4:	9102      	str	r1, [sp, #8]
90028ac6:	2101      	movs	r1, #1
90028ac8:	4413      	add	r3, r2
90028aca:	4402      	add	r2, r0
90028acc:	9101      	str	r1, [sp, #4]
90028ace:	fa0f f18b 	sxth.w	r1, fp
90028ad2:	f8da 0000 	ldr.w	r0, [sl]
90028ad6:	b21b      	sxth	r3, r3
90028ad8:	9100      	str	r1, [sp, #0]
90028ada:	b212      	sxth	r2, r2
90028adc:	6941      	ldr	r1, [r0, #20]
90028ade:	4650      	mov	r0, sl
90028ae0:	460d      	mov	r5, r1
90028ae2:	9905      	ldr	r1, [sp, #20]
90028ae4:	47a8      	blx	r5
90028ae6:	9b04      	ldr	r3, [sp, #16]
90028ae8:	1c7a      	adds	r2, r7, #1
90028aea:	3301      	adds	r3, #1
90028aec:	d0ca      	beq.n	90028a84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90028aee:	f9b4 7000 	ldrsh.w	r7, [r4]
90028af2:	1abb      	subs	r3, r7, r2
90028af4:	2b00      	cmp	r3, #0
90028af6:	dd31      	ble.n	90028b5c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028af8:	2a00      	cmp	r2, #0
90028afa:	dabd      	bge.n	90028a78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
90028afc:	2f00      	cmp	r7, #0
90028afe:	dd2d      	ble.n	90028b5c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028b00:	2200      	movs	r2, #0
90028b02:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90028b06:	19d1      	adds	r1, r2, r7
90028b08:	4299      	cmp	r1, r3
90028b0a:	db02      	blt.n	90028b12 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90028b0c:	1a9f      	subs	r7, r3, r2
90028b0e:	2f00      	cmp	r7, #0
90028b10:	dd24      	ble.n	90028b5c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028b12:	ea4f 1188 	mov.w	r1, r8, lsl #6
90028b16:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
90028b1a:	f7ff ff3b 	bl	90028994 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90028b1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028b20:	fb10 f003 	smulbb	r0, r0, r3
90028b24:	b280      	uxth	r0, r0
90028b26:	1c41      	adds	r1, r0, #1
90028b28:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90028b2c:	1209      	asrs	r1, r1, #8
90028b2e:	f011 0fff 	tst.w	r1, #255	@ 0xff
90028b32:	d013      	beq.n	90028b5c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028b34:	b292      	uxth	r2, r2
90028b36:	9808      	ldr	r0, [sp, #32]
90028b38:	b2c9      	uxtb	r1, r1
90028b3a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
90028b3c:	b23f      	sxth	r7, r7
90028b3e:	4413      	add	r3, r2
90028b40:	9102      	str	r1, [sp, #8]
90028b42:	4402      	add	r2, r0
90028b44:	fa0f f18b 	sxth.w	r1, fp
90028b48:	f8da 0000 	ldr.w	r0, [sl]
90028b4c:	b21b      	sxth	r3, r3
90028b4e:	9100      	str	r1, [sp, #0]
90028b50:	b212      	sxth	r2, r2
90028b52:	9701      	str	r7, [sp, #4]
90028b54:	9905      	ldr	r1, [sp, #20]
90028b56:	6947      	ldr	r7, [r0, #20]
90028b58:	4650      	mov	r0, sl
90028b5a:	47b8      	blx	r7
90028b5c:	464b      	mov	r3, r9
90028b5e:	e75e      	b.n	90028a1e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90028b60:	2f00      	cmp	r7, #0
90028b62:	da96      	bge.n	90028a92 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90028b64:	e78e      	b.n	90028a84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90028b66:	2900      	cmp	r1, #0
90028b68:	d0f8      	beq.n	90028b5c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028b6a:	e790      	b.n	90028a8e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90028b6c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
90028b6c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90028b70:	461e      	mov	r6, r3
90028b72:	4b36      	ldr	r3, [pc, #216]	@ (90028c4c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
90028b74:	2500      	movs	r5, #0
90028b76:	f100 0814 	add.w	r8, r0, #20
90028b7a:	4604      	mov	r4, r0
90028b7c:	4617      	mov	r7, r2
90028b7e:	e9c0 3100 	strd	r3, r1, [r0]
90028b82:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90028b86:	8185      	strh	r5, [r0, #12]
90028b88:	8103      	strh	r3, [r0, #8]
90028b8a:	f89d 3020 	ldrb.w	r3, [sp, #32]
90028b8e:	81c5      	strh	r5, [r0, #14]
90028b90:	7283      	strb	r3, [r0, #10]
90028b92:	8205      	strh	r5, [r0, #16]
90028b94:	8245      	strh	r5, [r0, #18]
90028b96:	4640      	mov	r0, r8
90028b98:	f7eb fca6 	bl	900144e8 <_ZN8touchgfx7OutlineC1Ev>
90028b9c:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
90028ba0:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
90028ba4:	466b      	mov	r3, sp
90028ba6:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
90028baa:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
90028bae:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
90028bb2:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
90028bb6:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
90028bba:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
90028bbe:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
90028bc2:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
90028bc6:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
90028bca:	6830      	ldr	r0, [r6, #0]
90028bcc:	6871      	ldr	r1, [r6, #4]
90028bce:	8872      	ldrh	r2, [r6, #2]
90028bd0:	8835      	ldrh	r5, [r6, #0]
90028bd2:	c303      	stmia	r3!, {r0, r1}
90028bd4:	887b      	ldrh	r3, [r7, #2]
90028bd6:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
90028bda:	4413      	add	r3, r2
90028bdc:	883a      	ldrh	r2, [r7, #0]
90028bde:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
90028be2:	442a      	add	r2, r5
90028be4:	81e3      	strh	r3, [r4, #14]
90028be6:	8220      	strh	r0, [r4, #16]
90028be8:	4668      	mov	r0, sp
90028bea:	81a2      	strh	r2, [r4, #12]
90028bec:	8261      	strh	r1, [r4, #18]
90028bee:	4639      	mov	r1, r7
90028bf0:	f7ed fe66 	bl	900168c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028bf4:	f104 000c 	add.w	r0, r4, #12
90028bf8:	f7ed fe3a 	bl	90016870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028bfc:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90028c00:	f8bd 2000 	ldrh.w	r2, [sp]
90028c04:	4640      	mov	r0, r8
90028c06:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
90028c0a:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
90028c0e:	f7eb fc4f 	bl	900144b0 <_ZN8touchgfx7Outline5resetEv>
90028c12:	f9bd 3000 	ldrsh.w	r3, [sp]
90028c16:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
90028c1a:	4620      	mov	r0, r4
90028c1c:	015b      	lsls	r3, r3, #5
90028c1e:	64e3      	str	r3, [r4, #76]	@ 0x4c
90028c20:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90028c24:	015b      	lsls	r3, r3, #5
90028c26:	6523      	str	r3, [r4, #80]	@ 0x50
90028c28:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90028c2c:	015b      	lsls	r3, r3, #5
90028c2e:	6563      	str	r3, [r4, #84]	@ 0x54
90028c30:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90028c34:	015b      	lsls	r3, r3, #5
90028c36:	65a3      	str	r3, [r4, #88]	@ 0x58
90028c38:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
90028c3c:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
90028c40:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
90028c44:	b002      	add	sp, #8
90028c46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90028c4a:	bf00      	nop
90028c4c:	9002e080 	.word	0x9002e080

90028c50 <_ZN8touchgfx6Canvas5closeEv>:
90028c50:	b538      	push	{r3, r4, r5, lr}
90028c52:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
90028c56:	4604      	mov	r4, r0
90028c58:	b193      	cbz	r3, 90028c80 <_ZN8touchgfx6Canvas5closeEv+0x30>
90028c5a:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
90028c5e:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
90028c62:	4213      	tst	r3, r2
90028c64:	d10c      	bne.n	90028c80 <_ZN8touchgfx6Canvas5closeEv+0x30>
90028c66:	f100 0514 	add.w	r5, r0, #20
90028c6a:	b123      	cbz	r3, 90028c76 <_ZN8touchgfx6Canvas5closeEv+0x26>
90028c6c:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
90028c70:	4628      	mov	r0, r5
90028c72:	f7ff fea3 	bl	900289bc <_ZN8touchgfx10Rasterizer6lineToEii>
90028c76:	4628      	mov	r0, r5
90028c78:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
90028c7c:	f7ff fe9e 	bl	900289bc <_ZN8touchgfx10Rasterizer6lineToEii>
90028c80:	2300      	movs	r3, #0
90028c82:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90028c86:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
90028c8a:	4298      	cmp	r0, r3
90028c8c:	bf34      	ite	cc
90028c8e:	2000      	movcc	r0, #0
90028c90:	2001      	movcs	r0, #1
90028c92:	bd38      	pop	{r3, r4, r5, pc}

90028c94 <_ZN8touchgfx6Canvas6renderEh>:
90028c94:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90028c98:	7a85      	ldrb	r5, [r0, #10]
90028c9a:	4604      	mov	r4, r0
90028c9c:	4369      	muls	r1, r5
90028c9e:	1c4d      	adds	r5, r1, #1
90028ca0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90028ca4:	122d      	asrs	r5, r5, #8
90028ca6:	f000 8098 	beq.w	90028dda <_ZN8touchgfx6Canvas6renderEh+0x146>
90028caa:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
90028cae:	2b00      	cmp	r3, #0
90028cb0:	f000 8093 	beq.w	90028dda <_ZN8touchgfx6Canvas6renderEh+0x146>
90028cb4:	f7ff ffcc 	bl	90028c50 <_ZN8touchgfx6Canvas5closeEv>
90028cb8:	4607      	mov	r7, r0
90028cba:	2800      	cmp	r0, #0
90028cbc:	d045      	beq.n	90028d4a <_ZN8touchgfx6Canvas6renderEh+0xb6>
90028cbe:	6860      	ldr	r0, [r4, #4]
90028cc0:	4e47      	ldr	r6, [pc, #284]	@ (90028de0 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
90028cc2:	6803      	ldr	r3, [r0, #0]
90028cc4:	6837      	ldr	r7, [r6, #0]
90028cc6:	689b      	ldr	r3, [r3, #8]
90028cc8:	4798      	blx	r3
90028cca:	4601      	mov	r1, r0
90028ccc:	4638      	mov	r0, r7
90028cce:	f7e8 fbf3 	bl	900114b8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90028cd2:	4607      	mov	r7, r0
90028cd4:	f7e7 ffb4 	bl	90010c40 <_ZN8touchgfx3HAL3lcdEv>
90028cd8:	6803      	ldr	r3, [r0, #0]
90028cda:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90028cdc:	4798      	blx	r3
90028cde:	4680      	mov	r8, r0
90028ce0:	f7e7 ffae 	bl	90010c40 <_ZN8touchgfx3HAL3lcdEv>
90028ce4:	6803      	ldr	r3, [r0, #0]
90028ce6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028ce8:	4798      	blx	r3
90028cea:	280b      	cmp	r0, #11
90028cec:	d85a      	bhi.n	90028da4 <_ZN8touchgfx6Canvas6renderEh+0x110>
90028cee:	e8df f000 	tbb	[pc, r0]
90028cf2:	5b50      	.short	0x5b50
90028cf4:	3059066b 	.word	0x3059066b
90028cf8:	64646440 	.word	0x64646440
90028cfc:	6464      	.short	0x6464
90028cfe:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90028d02:	2208      	movs	r2, #8
90028d04:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90028d08:	fb91 f2f2 	sdiv	r2, r1, r2
90028d0c:	fb08 2303 	mla	r3, r8, r3, r2
90028d10:	441f      	add	r7, r3
90028d12:	424b      	negs	r3, r1
90028d14:	f001 0107 	and.w	r1, r1, #7
90028d18:	f003 0307 	and.w	r3, r3, #7
90028d1c:	bf58      	it	pl
90028d1e:	4259      	negpl	r1, r3
90028d20:	b2c9      	uxtb	r1, r1
90028d22:	b2ed      	uxtb	r5, r5
90028d24:	463a      	mov	r2, r7
90028d26:	fa0f f388 	sxth.w	r3, r8
90028d2a:	f104 0014 	add.w	r0, r4, #20
90028d2e:	e9cd 1500 	strd	r1, r5, [sp]
90028d32:	6861      	ldr	r1, [r4, #4]
90028d34:	f7ff fe4e 	bl	900289d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90028d38:	4607      	mov	r7, r0
90028d3a:	6860      	ldr	r0, [r4, #4]
90028d3c:	6803      	ldr	r3, [r0, #0]
90028d3e:	691b      	ldr	r3, [r3, #16]
90028d40:	4798      	blx	r3
90028d42:	6830      	ldr	r0, [r6, #0]
90028d44:	6803      	ldr	r3, [r0, #0]
90028d46:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90028d48:	4798      	blx	r3
90028d4a:	4638      	mov	r0, r7
90028d4c:	b002      	add	sp, #8
90028d4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90028d52:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90028d56:	2204      	movs	r2, #4
90028d58:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90028d5c:	fb91 f2f2 	sdiv	r2, r1, r2
90028d60:	fb08 2303 	mla	r3, r8, r3, r2
90028d64:	441f      	add	r7, r3
90028d66:	424b      	negs	r3, r1
90028d68:	f001 0103 	and.w	r1, r1, #3
90028d6c:	f003 0303 	and.w	r3, r3, #3
90028d70:	e7d4      	b.n	90028d1c <_ZN8touchgfx6Canvas6renderEh+0x88>
90028d72:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90028d76:	2202      	movs	r2, #2
90028d78:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90028d7c:	2900      	cmp	r1, #0
90028d7e:	fb91 f2f2 	sdiv	r2, r1, r2
90028d82:	f001 0101 	and.w	r1, r1, #1
90028d86:	fb08 2303 	mla	r3, r8, r3, r2
90028d8a:	bfb8      	it	lt
90028d8c:	4249      	neglt	r1, r1
90028d8e:	441f      	add	r7, r3
90028d90:	e7c6      	b.n	90028d20 <_ZN8touchgfx6Canvas6renderEh+0x8c>
90028d92:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90028d96:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90028d9a:	fb08 f303 	mul.w	r3, r8, r3
90028d9e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90028da2:	441f      	add	r7, r3
90028da4:	2100      	movs	r1, #0
90028da6:	e7bc      	b.n	90028d22 <_ZN8touchgfx6Canvas6renderEh+0x8e>
90028da8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90028dac:	2103      	movs	r1, #3
90028dae:	fb08 f203 	mul.w	r2, r8, r3
90028db2:	89a3      	ldrh	r3, [r4, #12]
90028db4:	fb13 2301 	smlabb	r3, r3, r1, r2
90028db8:	e7f3      	b.n	90028da2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
90028dba:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90028dbe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90028dc2:	fb08 2303 	mla	r3, r8, r3, r2
90028dc6:	e7ec      	b.n	90028da2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
90028dc8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90028dcc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90028dd0:	fb08 f303 	mul.w	r3, r8, r3
90028dd4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90028dd8:	e7e3      	b.n	90028da2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
90028dda:	2701      	movs	r7, #1
90028ddc:	e7b5      	b.n	90028d4a <_ZN8touchgfx6Canvas6renderEh+0xb6>
90028dde:	bf00      	nop
90028de0:	240233d4 	.word	0x240233d4

90028de4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90028de4:	4b06      	ldr	r3, [pc, #24]	@ (90028e00 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
90028de6:	b510      	push	{r4, lr}
90028de8:	781b      	ldrb	r3, [r3, #0]
90028dea:	2b01      	cmp	r3, #1
90028dec:	d107      	bne.n	90028dfe <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
90028dee:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90028df2:	680b      	ldr	r3, [r1, #0]
90028df4:	6814      	ldr	r4, [r2, #0]
90028df6:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90028dfa:	6013      	str	r3, [r2, #0]
90028dfc:	600c      	str	r4, [r1, #0]
90028dfe:	bd10      	pop	{r4, pc}
90028e00:	240233cc 	.word	0x240233cc

90028e04 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90028e04:	b513      	push	{r0, r1, r4, lr}
90028e06:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
90028e0a:	4604      	mov	r4, r0
90028e0c:	e9cd 2100 	strd	r2, r1, [sp]
90028e10:	b9a3      	cbnz	r3, 90028e3c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90028e12:	466a      	mov	r2, sp
90028e14:	a901      	add	r1, sp, #4
90028e16:	4620      	mov	r0, r4
90028e18:	f7ff ffe4 	bl	90028de4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90028e1c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90028e1e:	9901      	ldr	r1, [sp, #4]
90028e20:	9a00      	ldr	r2, [sp, #0]
90028e22:	1ac9      	subs	r1, r1, r3
90028e24:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90028e26:	1ad2      	subs	r2, r2, r3
90028e28:	9101      	str	r1, [sp, #4]
90028e2a:	2a00      	cmp	r2, #0
90028e2c:	9200      	str	r2, [sp, #0]
90028e2e:	da0b      	bge.n	90028e48 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
90028e30:	2301      	movs	r3, #1
90028e32:	2900      	cmp	r1, #0
90028e34:	da0e      	bge.n	90028e54 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90028e36:	f043 0304 	orr.w	r3, r3, #4
90028e3a:	e013      	b.n	90028e64 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90028e3c:	f7ff ff08 	bl	90028c50 <_ZN8touchgfx6Canvas5closeEv>
90028e40:	2800      	cmp	r0, #0
90028e42:	d1e6      	bne.n	90028e12 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90028e44:	b002      	add	sp, #8
90028e46:	bd10      	pop	{r4, pc}
90028e48:	6da3      	ldr	r3, [r4, #88]	@ 0x58
90028e4a:	429a      	cmp	r2, r3
90028e4c:	bfac      	ite	ge
90028e4e:	2302      	movge	r3, #2
90028e50:	2300      	movlt	r3, #0
90028e52:	e7ee      	b.n	90028e32 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90028e54:	6d60      	ldr	r0, [r4, #84]	@ 0x54
90028e56:	4281      	cmp	r1, r0
90028e58:	bfac      	ite	ge
90028e5a:	2008      	movge	r0, #8
90028e5c:	2000      	movlt	r0, #0
90028e5e:	4318      	orrs	r0, r3
90028e60:	b2c3      	uxtb	r3, r0
90028e62:	b158      	cbz	r0, 90028e7c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90028e64:	2200      	movs	r2, #0
90028e66:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
90028e6a:	9901      	ldr	r1, [sp, #4]
90028e6c:	9a00      	ldr	r2, [sp, #0]
90028e6e:	66e1      	str	r1, [r4, #108]	@ 0x6c
90028e70:	6722      	str	r2, [r4, #112]	@ 0x70
90028e72:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
90028e76:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
90028e7a:	e7e3      	b.n	90028e44 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90028e7c:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90028e80:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90028e84:	4298      	cmp	r0, r3
90028e86:	d803      	bhi.n	90028e90 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90028e88:	f104 0014 	add.w	r0, r4, #20
90028e8c:	f7ec f800 	bl	90014e90 <_ZN8touchgfx7Outline6moveToEii>
90028e90:	2301      	movs	r3, #1
90028e92:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90028e96:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
90028e9a:	2300      	movs	r3, #0
90028e9c:	e7e5      	b.n	90028e6a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

90028e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
90028e9e:	b573      	push	{r0, r1, r4, r5, r6, lr}
90028ea0:	ab02      	add	r3, sp, #8
90028ea2:	4604      	mov	r4, r0
90028ea4:	9101      	str	r1, [sp, #4]
90028ea6:	a901      	add	r1, sp, #4
90028ea8:	f843 2d08 	str.w	r2, [r3, #-8]!
90028eac:	461a      	mov	r2, r3
90028eae:	f7ff ff99 	bl	90028de4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90028eb2:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90028eb4:	9901      	ldr	r1, [sp, #4]
90028eb6:	9a00      	ldr	r2, [sp, #0]
90028eb8:	1ac9      	subs	r1, r1, r3
90028eba:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90028ebc:	1ad2      	subs	r2, r2, r3
90028ebe:	9101      	str	r1, [sp, #4]
90028ec0:	2a00      	cmp	r2, #0
90028ec2:	9200      	str	r2, [sp, #0]
90028ec4:	db1c      	blt.n	90028f00 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90028ec6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
90028ec8:	429a      	cmp	r2, r3
90028eca:	bfac      	ite	ge
90028ecc:	2002      	movge	r0, #2
90028ece:	2000      	movlt	r0, #0
90028ed0:	2900      	cmp	r1, #0
90028ed2:	db17      	blt.n	90028f04 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90028ed4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90028ed6:	4299      	cmp	r1, r3
90028ed8:	bfac      	ite	ge
90028eda:	2308      	movge	r3, #8
90028edc:	2300      	movlt	r3, #0
90028ede:	4303      	orrs	r3, r0
90028ee0:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
90028ee4:	b2dd      	uxtb	r5, r3
90028ee6:	b978      	cbnz	r0, 90028f08 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90028ee8:	f104 0014 	add.w	r0, r4, #20
90028eec:	f7ff fd66 	bl	900289bc <_ZN8touchgfx10Rasterizer6lineToEii>
90028ef0:	9b01      	ldr	r3, [sp, #4]
90028ef2:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
90028ef6:	6623      	str	r3, [r4, #96]	@ 0x60
90028ef8:	9b00      	ldr	r3, [sp, #0]
90028efa:	6663      	str	r3, [r4, #100]	@ 0x64
90028efc:	b002      	add	sp, #8
90028efe:	bd70      	pop	{r4, r5, r6, pc}
90028f00:	2001      	movs	r0, #1
90028f02:	e7e5      	b.n	90028ed0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90028f04:	2304      	movs	r3, #4
90028f06:	e7ea      	b.n	90028ede <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90028f08:	b113      	cbz	r3, 90028f10 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90028f0a:	ea10 0305 	ands.w	r3, r0, r5
90028f0e:	d11c      	bne.n	90028f4a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90028f10:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
90028f14:	f104 0614 	add.w	r6, r4, #20
90028f18:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
90028f1c:	b98b      	cbnz	r3, 90028f42 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
90028f1e:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90028f22:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90028f26:	4298      	cmp	r0, r3
90028f28:	d802      	bhi.n	90028f30 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90028f2a:	4630      	mov	r0, r6
90028f2c:	f7eb ffb0 	bl	90014e90 <_ZN8touchgfx7Outline6moveToEii>
90028f30:	2301      	movs	r3, #1
90028f32:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90028f36:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
90028f3a:	4630      	mov	r0, r6
90028f3c:	e9dd 2100 	ldrd	r2, r1, [sp]
90028f40:	e7d4      	b.n	90028eec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90028f42:	4630      	mov	r0, r6
90028f44:	f7ff fd3a 	bl	900289bc <_ZN8touchgfx10Rasterizer6lineToEii>
90028f48:	e7f7      	b.n	90028f3a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90028f4a:	461d      	mov	r5, r3
90028f4c:	e7d0      	b.n	90028ef0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90028f50 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
90028f50:	b538      	push	{r3, r4, r5, lr}
90028f52:	ed2d 8b10 	vpush	{d8-d15}
90028f56:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
90028f5a:	4605      	mov	r5, r0
90028f5c:	eeb0 ca40 	vmov.f32	s24, s0
90028f60:	460c      	mov	r4, r1
90028f62:	eef0 ca60 	vmov.f32	s25, s1
90028f66:	ed9f ba57 	vldr	s22, [pc, #348]	@ 900290c4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
90028f6a:	eeb0 da41 	vmov.f32	s26, s2
90028f6e:	eef0 da61 	vmov.f32	s27, s3
90028f72:	eeb0 ea42 	vmov.f32	s28, s4
90028f76:	eef0 ea62 	vmov.f32	s29, s5
90028f7a:	eef0 aa6b 	vmov.f32	s21, s23
90028f7e:	2c08      	cmp	r4, #8
90028f80:	d86e      	bhi.n	90029060 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
90028f82:	ee7e 6a4c 	vsub.f32	s13, s28, s24
90028f86:	ee7d 7aee 	vsub.f32	s15, s27, s29
90028f8a:	ee3d 6a4e 	vsub.f32	s12, s26, s28
90028f8e:	ee3e 7aec 	vsub.f32	s14, s29, s25
90028f92:	ee66 7ae7 	vnmul.f32	s15, s13, s15
90028f96:	ee3c fa0d 	vadd.f32	s30, s24, s26
90028f9a:	ee7c faad 	vadd.f32	s31, s25, s27
90028f9e:	eee6 7a07 	vfma.f32	s15, s12, s14
90028fa2:	ee7d 9a0e 	vadd.f32	s19, s26, s28
90028fa6:	ee3d aaae 	vadd.f32	s20, s27, s29
90028faa:	ee2f fa2b 	vmul.f32	s30, s30, s23
90028fae:	ee6f faab 	vmul.f32	s31, s31, s23
90028fb2:	ee69 9aab 	vmul.f32	s19, s19, s23
90028fb6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90028fba:	ee2a aa2b 	vmul.f32	s20, s20, s23
90028fbe:	ee7f 8a29 	vadd.f32	s17, s30, s19
90028fc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028fc6:	ee3f 9a8a 	vadd.f32	s18, s31, s20
90028fca:	ee68 8aab 	vmul.f32	s17, s17, s23
90028fce:	bf48      	it	mi
90028fd0:	eef1 7a67 	vnegmi.f32	s15, s15
90028fd4:	ee29 9a2b 	vmul.f32	s18, s18, s23
90028fd8:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
90028fdc:	eef4 7acb 	vcmpe.f32	s15, s22
90028fe0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028fe4:	dd3f      	ble.n	90029066 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
90028fe6:	ee27 7a07 	vmul.f32	s14, s14, s14
90028fea:	ee67 7aa7 	vmul.f32	s15, s15, s15
90028fee:	eea6 7aa6 	vfma.f32	s14, s13, s13
90028ff2:	ee27 7a06 	vmul.f32	s14, s14, s12
90028ff6:	eef4 7ac7 	vcmpe.f32	s15, s14
90028ffa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028ffe:	d847      	bhi.n	90029090 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90029000:	ee7e 0a4d 	vsub.f32	s1, s28, s26
90029004:	ee3e 0aed 	vsub.f32	s0, s29, s27
90029008:	f000 fa57 	bl	900294ba <atan2f>
9002900c:	eeb0 8a40 	vmov.f32	s16, s0
90029010:	ee7d 0a4c 	vsub.f32	s1, s26, s24
90029014:	ee3d 0aec 	vsub.f32	s0, s27, s25
90029018:	f000 fa4f 	bl	900294ba <atan2f>
9002901c:	ee38 0a40 	vsub.f32	s0, s16, s0
90029020:	eddf 7a29 	vldr	s15, [pc, #164]	@ 900290c8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
90029024:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90029028:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002902c:	bf48      	it	mi
9002902e:	eeb1 0a40 	vnegmi.f32	s0, s0
90029032:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029036:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002903a:	bfa4      	itt	ge
9002903c:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 900290cc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
90029040:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90029044:	eddf 7a22 	vldr	s15, [pc, #136]	@ 900290d0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
90029048:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002904c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029050:	d51e      	bpl.n	90029090 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90029052:	eef0 0a49 	vmov.f32	s1, s18
90029056:	4628      	mov	r0, r5
90029058:	eeb0 0a68 	vmov.f32	s0, s17
9002905c:	f7e9 fb9e 	bl	9001279c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90029060:	ecbd 8b10 	vpop	{d8-d15}
90029064:	bd38      	pop	{r3, r4, r5, pc}
90029066:	ee7c 7a0e 	vadd.f32	s15, s24, s28
9002906a:	eeb0 7a68 	vmov.f32	s14, s17
9002906e:	eef0 6a49 	vmov.f32	s13, s18
90029072:	eea7 7aea 	vfms.f32	s14, s15, s21
90029076:	ee7c 7aae 	vadd.f32	s15, s25, s29
9002907a:	eee7 6aea 	vfms.f32	s13, s15, s21
9002907e:	ee66 7aa6 	vmul.f32	s15, s13, s13
90029082:	eee7 7a07 	vfma.f32	s15, s14, s14
90029086:	eef4 7ac6 	vcmpe.f32	s15, s12
9002908a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002908e:	d9e0      	bls.n	90029052 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
90029090:	3401      	adds	r4, #1
90029092:	eef0 0a6c 	vmov.f32	s1, s25
90029096:	eeb0 0a4c 	vmov.f32	s0, s24
9002909a:	4628      	mov	r0, r5
9002909c:	4621      	mov	r1, r4
9002909e:	eef0 2a49 	vmov.f32	s5, s18
900290a2:	eeb0 2a68 	vmov.f32	s4, s17
900290a6:	eef0 1a6f 	vmov.f32	s3, s31
900290aa:	eeb0 1a4f 	vmov.f32	s2, s30
900290ae:	f7ff ff4f 	bl	90028f50 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
900290b2:	eef0 da4a 	vmov.f32	s27, s20
900290b6:	eeb0 da69 	vmov.f32	s26, s19
900290ba:	eef0 ca49 	vmov.f32	s25, s18
900290be:	eeb0 ca68 	vmov.f32	s24, s17
900290c2:	e75c      	b.n	90028f7e <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
900290c4:	2edbe6ff 	.word	0x2edbe6ff
900290c8:	40490fdb 	.word	0x40490fdb
900290cc:	40c90fdb 	.word	0x40c90fdb
900290d0:	3dcccccd 	.word	0x3dcccccd

900290d4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
900290d4:	b530      	push	{r4, r5, lr}
900290d6:	ed2d 8b10 	vpush	{d8-d15}
900290da:	eef0 8a40 	vmov.f32	s17, s0
900290de:	b085      	sub	sp, #20
900290e0:	eef0 9a60 	vmov.f32	s19, s1
900290e4:	4604      	mov	r4, r0
900290e6:	eef0 fa41 	vmov.f32	s31, s2
900290ea:	460d      	mov	r5, r1
900290ec:	eeb0 fa61 	vmov.f32	s30, s3
900290f0:	eef0 ba42 	vmov.f32	s23, s4
900290f4:	eeb0 ca62 	vmov.f32	s24, s5
900290f8:	eef0 aa43 	vmov.f32	s21, s6
900290fc:	eeb0 ba63 	vmov.f32	s22, s7
90029100:	2d08      	cmp	r5, #8
90029102:	f200 8113 	bhi.w	9002932c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
90029106:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
9002910a:	ee3b 6aaa 	vadd.f32	s12, s23, s21
9002910e:	ee7f 6aab 	vadd.f32	s13, s31, s23
90029112:	ee38 daaf 	vadd.f32	s26, s17, s31
90029116:	ee26 6a27 	vmul.f32	s12, s12, s15
9002911a:	ee7c ca0b 	vadd.f32	s25, s24, s22
9002911e:	ee2d da27 	vmul.f32	s26, s26, s15
90029122:	ed8d 6a01 	vstr	s12, [sp, #4]
90029126:	eea6 6aa7 	vfma.f32	s12, s13, s15
9002912a:	ee6c caa7 	vmul.f32	s25, s25, s15
9002912e:	eeb0 ea4d 	vmov.f32	s28, s26
90029132:	ee79 da8f 	vadd.f32	s27, s19, s30
90029136:	ee3f 7a0c 	vadd.f32	s14, s30, s24
9002913a:	eea6 eaa7 	vfma.f32	s28, s13, s15
9002913e:	ee66 6a27 	vmul.f32	s13, s12, s15
90029142:	ee6d daa7 	vmul.f32	s27, s27, s15
90029146:	edcd 6a03 	vstr	s13, [sp, #12]
9002914a:	eef0 6a6c 	vmov.f32	s13, s25
9002914e:	eef0 ea6d 	vmov.f32	s29, s27
90029152:	ee2e ea27 	vmul.f32	s28, s28, s15
90029156:	eee7 6a27 	vfma.f32	s13, s14, s15
9002915a:	eee7 ea27 	vfma.f32	s29, s14, s15
9002915e:	ee26 7aa7 	vmul.f32	s14, s13, s15
90029162:	ee6e eaa7 	vmul.f32	s29, s29, s15
90029166:	eef0 6a67 	vmov.f32	s13, s15
9002916a:	ed8d 7a02 	vstr	s14, [sp, #8]
9002916e:	ed9d 7a03 	vldr	s14, [sp, #12]
90029172:	ee3e 9a07 	vadd.f32	s18, s28, s14
90029176:	ed9d 7a02 	vldr	s14, [sp, #8]
9002917a:	ee3e aa87 	vadd.f32	s20, s29, s14
9002917e:	ee29 9a27 	vmul.f32	s18, s18, s15
90029182:	ee2a aa27 	vmul.f32	s20, s20, s15
90029186:	2d00      	cmp	r5, #0
90029188:	f000 810b 	beq.w	900293a2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002918c:	ee7a 5ae8 	vsub.f32	s11, s21, s17
90029190:	eddf 4a95 	vldr	s9, [pc, #596]	@ 900293e8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90029194:	ee3f 7a4b 	vsub.f32	s14, s30, s22
90029198:	ee7b 7a69 	vsub.f32	s15, s22, s19
9002919c:	ee3f 6aea 	vsub.f32	s12, s31, s21
900291a0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
900291a4:	ee3b 5aea 	vsub.f32	s10, s23, s21
900291a8:	eea6 7a27 	vfma.f32	s14, s12, s15
900291ac:	ee3c 6a4b 	vsub.f32	s12, s24, s22
900291b0:	ee25 6ac6 	vnmul.f32	s12, s11, s12
900291b4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900291b8:	eea5 6a27 	vfma.f32	s12, s10, s15
900291bc:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
900291c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900291c4:	bf48      	it	mi
900291c6:	eeb1 7a47 	vnegmi.f32	s14, s14
900291ca:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
900291ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900291d2:	eeb4 7ae4 	vcmpe.f32	s14, s9
900291d6:	bf48      	it	mi
900291d8:	eeb1 6a46 	vnegmi.f32	s12, s12
900291dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900291e0:	f340 80a8 	ble.w	90029334 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
900291e4:	eeb4 6ae4 	vcmpe.f32	s12, s9
900291e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900291ec:	dd5a      	ble.n	900292a4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
900291ee:	ee65 5aa5 	vmul.f32	s11, s11, s11
900291f2:	ee37 7a06 	vadd.f32	s14, s14, s12
900291f6:	eee7 5aa7 	vfma.f32	s11, s15, s15
900291fa:	ee27 7a07 	vmul.f32	s14, s14, s14
900291fe:	ee65 7a85 	vmul.f32	s15, s11, s10
90029202:	eeb4 7ae7 	vcmpe.f32	s14, s15
90029206:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002920a:	f200 80ca 	bhi.w	900293a2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002920e:	ee7b 0aef 	vsub.f32	s1, s23, s31
90029212:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90029216:	f000 f950 	bl	900294ba <atan2f>
9002921a:	eeb0 8a40 	vmov.f32	s16, s0
9002921e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90029222:	ee3f 0a69 	vsub.f32	s0, s30, s19
90029226:	f000 f948 	bl	900294ba <atan2f>
9002922a:	ee38 fa40 	vsub.f32	s30, s16, s0
9002922e:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90029232:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90029236:	eeb5 fac0 	vcmpe.f32	s30, #0.0
9002923a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002923e:	bf48      	it	mi
90029240:	eeb1 fa4f 	vnegmi.f32	s30, s30
90029244:	f000 f939 	bl	900294ba <atan2f>
90029248:	ee30 0a48 	vsub.f32	s0, s0, s16
9002924c:	eddf 7a67 	vldr	s15, [pc, #412]	@ 900293ec <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90029250:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90029254:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029258:	eeb4 fae7 	vcmpe.f32	s30, s15
9002925c:	eddf 7a63 	vldr	s15, [pc, #396]	@ 900293ec <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90029260:	bf48      	it	mi
90029262:	eeb1 0a40 	vnegmi.f32	s0, s0
90029266:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002926a:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002926e:	eddf 7a60 	vldr	s15, [pc, #384]	@ 900293f0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90029272:	bfa4      	itt	ge
90029274:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 900293f4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90029278:	ee37 fa4f 	vsubge.f32	s30, s14, s30
9002927c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029280:	bfa4      	itt	ge
90029282:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 900293f4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90029286:	ee37 0a40 	vsubge.f32	s0, s14, s0
9002928a:	ee3f 0a00 	vadd.f32	s0, s30, s0
9002928e:	eeb4 0ae7 	vcmpe.f32	s0, s15
90029292:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029296:	f140 8084 	bpl.w	900293a2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002929a:	eef0 0a4a 	vmov.f32	s1, s20
9002929e:	eeb0 0a49 	vmov.f32	s0, s18
900292a2:	e040      	b.n	90029326 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
900292a4:	ee67 7aa7 	vmul.f32	s15, s15, s15
900292a8:	ee27 7a07 	vmul.f32	s14, s14, s14
900292ac:	eee5 7aa5 	vfma.f32	s15, s11, s11
900292b0:	ee67 7a85 	vmul.f32	s15, s15, s10
900292b4:	eeb4 7ae7 	vcmpe.f32	s14, s15
900292b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900292bc:	d871      	bhi.n	900293a2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
900292be:	ee7b 0aef 	vsub.f32	s1, s23, s31
900292c2:	ee3c 0a4f 	vsub.f32	s0, s24, s30
900292c6:	f000 f8f8 	bl	900294ba <atan2f>
900292ca:	ee7f 0ae8 	vsub.f32	s1, s31, s17
900292ce:	eeb0 8a40 	vmov.f32	s16, s0
900292d2:	ee3f 0a69 	vsub.f32	s0, s30, s19
900292d6:	f000 f8f0 	bl	900294ba <atan2f>
900292da:	ee38 0a40 	vsub.f32	s0, s16, s0
900292de:	eddf 7a43 	vldr	s15, [pc, #268]	@ 900293ec <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
900292e2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
900292e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900292ea:	bf48      	it	mi
900292ec:	eeb1 0a40 	vnegmi.f32	s0, s0
900292f0:	eeb4 0ae7 	vcmpe.f32	s0, s15
900292f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900292f8:	bfa4      	itt	ge
900292fa:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 900293f4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
900292fe:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90029302:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 900293f0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90029306:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002930a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002930e:	d548      	bpl.n	900293a2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90029310:	eef0 0a4f 	vmov.f32	s1, s30
90029314:	4620      	mov	r0, r4
90029316:	eeb0 0a6f 	vmov.f32	s0, s31
9002931a:	f7e9 fa3f 	bl	9001279c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002931e:	eef0 0a4c 	vmov.f32	s1, s24
90029322:	eeb0 0a6b 	vmov.f32	s0, s23
90029326:	4620      	mov	r0, r4
90029328:	f7e9 fa38 	bl	9001279c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002932c:	b005      	add	sp, #20
9002932e:	ecbd 8b10 	vpop	{d8-d15}
90029332:	bd30      	pop	{r4, r5, pc}
90029334:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 900293e8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90029338:	eeb4 6ac7 	vcmpe.f32	s12, s14
9002933c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029340:	dd19      	ble.n	90029376 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
90029342:	ee67 7aa7 	vmul.f32	s15, s15, s15
90029346:	ee26 7a06 	vmul.f32	s14, s12, s12
9002934a:	eee5 7aa5 	vfma.f32	s15, s11, s11
9002934e:	ee67 7a85 	vmul.f32	s15, s15, s10
90029352:	eeb4 7ae7 	vcmpe.f32	s14, s15
90029356:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002935a:	d822      	bhi.n	900293a2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002935c:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90029360:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90029364:	f000 f8a9 	bl	900294ba <atan2f>
90029368:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002936c:	eeb0 8a40 	vmov.f32	s16, s0
90029370:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90029374:	e7af      	b.n	900292d6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
90029376:	ee78 7aaa 	vadd.f32	s15, s17, s21
9002937a:	eeb0 7a49 	vmov.f32	s14, s18
9002937e:	eeb0 6a4a 	vmov.f32	s12, s20
90029382:	eea7 7ae6 	vfms.f32	s14, s15, s13
90029386:	ee79 7a8b 	vadd.f32	s15, s19, s22
9002938a:	eea7 6ae6 	vfms.f32	s12, s15, s13
9002938e:	ee66 7a06 	vmul.f32	s15, s12, s12
90029392:	eee7 7a07 	vfma.f32	s15, s14, s14
90029396:	eef4 7ac5 	vcmpe.f32	s15, s10
9002939a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002939e:	f67f af7c 	bls.w	9002929a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
900293a2:	3501      	adds	r5, #1
900293a4:	eef0 0a69 	vmov.f32	s1, s19
900293a8:	eeb0 0a68 	vmov.f32	s0, s17
900293ac:	4620      	mov	r0, r4
900293ae:	4629      	mov	r1, r5
900293b0:	eef0 3a4a 	vmov.f32	s7, s20
900293b4:	eeb0 3a49 	vmov.f32	s6, s18
900293b8:	eef0 2a6e 	vmov.f32	s5, s29
900293bc:	eeb0 2a4e 	vmov.f32	s4, s28
900293c0:	eef0 1a6d 	vmov.f32	s3, s27
900293c4:	eeb0 1a4d 	vmov.f32	s2, s26
900293c8:	f7ff fe84 	bl	900290d4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
900293cc:	eeb0 ca6c 	vmov.f32	s24, s25
900293d0:	eddd ba01 	vldr	s23, [sp, #4]
900293d4:	eef0 9a4a 	vmov.f32	s19, s20
900293d8:	ed9d fa02 	vldr	s30, [sp, #8]
900293dc:	eef0 8a49 	vmov.f32	s17, s18
900293e0:	eddd fa03 	vldr	s31, [sp, #12]
900293e4:	e68c      	b.n	90029100 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
900293e6:	bf00      	nop
900293e8:	2edbe6ff 	.word	0x2edbe6ff
900293ec:	40490fdb 	.word	0x40490fdb
900293f0:	3dcccccd 	.word	0x3dcccccd
900293f4:	40c90fdb 	.word	0x40c90fdb

900293f8 <_ZN8touchgfx6CanvasD1Ev>:
900293f8:	4b04      	ldr	r3, [pc, #16]	@ (9002940c <_ZN8touchgfx6CanvasD1Ev+0x14>)
900293fa:	b510      	push	{r4, lr}
900293fc:	4604      	mov	r4, r0
900293fe:	f840 3b14 	str.w	r3, [r0], #20
90029402:	f7eb f84d 	bl	900144a0 <_ZN8touchgfx7OutlineD1Ev>
90029406:	4620      	mov	r0, r4
90029408:	bd10      	pop	{r4, pc}
9002940a:	bf00      	nop
9002940c:	9002e080 	.word	0x9002e080

90029410 <_ZN8touchgfx6CanvasD0Ev>:
90029410:	b510      	push	{r4, lr}
90029412:	4604      	mov	r4, r0
90029414:	f7ff fff0 	bl	900293f8 <_ZN8touchgfx6CanvasD1Ev>
90029418:	2174      	movs	r1, #116	@ 0x74
9002941a:	4620      	mov	r0, r4
9002941c:	f000 f826 	bl	9002946c <_ZdlPvj>
90029420:	4620      	mov	r0, r4
90029422:	bd10      	pop	{r4, pc}

90029424 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
90029424:	790b      	ldrb	r3, [r1, #4]
90029426:	2b00      	cmp	r3, #0
90029428:	bf0c      	ite	eq
9002942a:	2301      	moveq	r3, #1
9002942c:	2300      	movne	r3, #0
9002942e:	b570      	push	{r4, r5, r6, lr}
90029430:	4604      	mov	r4, r0
90029432:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
90029436:	460e      	mov	r6, r1
90029438:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
9002943c:	d109      	bne.n	90029452 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
9002943e:	b14d      	cbz	r5, 90029454 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90029440:	7933      	ldrb	r3, [r6, #4]
90029442:	2b01      	cmp	r3, #1
90029444:	d10c      	bne.n	90029460 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90029446:	6823      	ldr	r3, [r4, #0]
90029448:	4620      	mov	r0, r4
9002944a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9002944c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90029450:	4718      	bx	r3
90029452:	b12d      	cbz	r5, 90029460 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90029454:	6823      	ldr	r3, [r4, #0]
90029456:	4620      	mov	r0, r4
90029458:	695b      	ldr	r3, [r3, #20]
9002945a:	4798      	blx	r3
9002945c:	2d00      	cmp	r5, #0
9002945e:	d1ef      	bne.n	90029440 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90029460:	bd70      	pop	{r4, r5, r6, pc}

90029462 <__aeabi_atexit>:
90029462:	460b      	mov	r3, r1
90029464:	4601      	mov	r1, r0
90029466:	4618      	mov	r0, r3
90029468:	f000 bc58 	b.w	90029d1c <__cxa_atexit>

9002946c <_ZdlPvj>:
9002946c:	f000 b812 	b.w	90029494 <_ZdlPv>

90029470 <__cxa_guard_acquire>:
90029470:	6802      	ldr	r2, [r0, #0]
90029472:	07d2      	lsls	r2, r2, #31
90029474:	4603      	mov	r3, r0
90029476:	d405      	bmi.n	90029484 <__cxa_guard_acquire+0x14>
90029478:	7842      	ldrb	r2, [r0, #1]
9002947a:	b102      	cbz	r2, 9002947e <__cxa_guard_acquire+0xe>
9002947c:	deff      	udf	#255	@ 0xff
9002947e:	2001      	movs	r0, #1
90029480:	7058      	strb	r0, [r3, #1]
90029482:	4770      	bx	lr
90029484:	2000      	movs	r0, #0
90029486:	4770      	bx	lr

90029488 <__cxa_guard_release>:
90029488:	2301      	movs	r3, #1
9002948a:	6003      	str	r3, [r0, #0]
9002948c:	4770      	bx	lr

9002948e <__cxa_pure_virtual>:
9002948e:	b508      	push	{r3, lr}
90029490:	f000 f80e 	bl	900294b0 <_ZSt9terminatev>

90029494 <_ZdlPv>:
90029494:	f000 bb8c 	b.w	90029bb0 <free>

90029498 <_ZN10__cxxabiv111__terminateEPFvvE>:
90029498:	b508      	push	{r3, lr}
9002949a:	4780      	blx	r0
9002949c:	f000 fb55 	bl	90029b4a <abort>

900294a0 <_ZSt13get_terminatev>:
900294a0:	4b02      	ldr	r3, [pc, #8]	@ (900294ac <_ZSt13get_terminatev+0xc>)
900294a2:	6818      	ldr	r0, [r3, #0]
900294a4:	f3bf 8f5b 	dmb	ish
900294a8:	4770      	bx	lr
900294aa:	bf00      	nop
900294ac:	24000124 	.word	0x24000124

900294b0 <_ZSt9terminatev>:
900294b0:	b508      	push	{r3, lr}
900294b2:	f7ff fff5 	bl	900294a0 <_ZSt13get_terminatev>
900294b6:	f7ff ffef 	bl	90029498 <_ZN10__cxxabiv111__terminateEPFvvE>

900294ba <atan2f>:
900294ba:	f000 b9cd 	b.w	90029858 <__ieee754_atan2f>
	...

900294c0 <sqrtf>:
900294c0:	b508      	push	{r3, lr}
900294c2:	ed2d 8b02 	vpush	{d8}
900294c6:	eeb0 8a40 	vmov.f32	s16, s0
900294ca:	f000 f9c2 	bl	90029852 <__ieee754_sqrtf>
900294ce:	eeb4 8a48 	vcmp.f32	s16, s16
900294d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900294d6:	d60c      	bvs.n	900294f2 <sqrtf+0x32>
900294d8:	eddf 8a07 	vldr	s17, [pc, #28]	@ 900294f8 <sqrtf+0x38>
900294dc:	eeb4 8ae8 	vcmpe.f32	s16, s17
900294e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900294e4:	d505      	bpl.n	900294f2 <sqrtf+0x32>
900294e6:	f000 fe87 	bl	9002a1f8 <__errno>
900294ea:	ee88 0aa8 	vdiv.f32	s0, s17, s17
900294ee:	2321      	movs	r3, #33	@ 0x21
900294f0:	6003      	str	r3, [r0, #0]
900294f2:	ecbd 8b02 	vpop	{d8}
900294f6:	bd08      	pop	{r3, pc}
900294f8:	00000000 	.word	0x00000000

900294fc <sinf_poly>:
900294fc:	07cb      	lsls	r3, r1, #31
900294fe:	d412      	bmi.n	90029526 <sinf_poly+0x2a>
90029500:	ee21 5b00 	vmul.f64	d5, d1, d0
90029504:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
90029508:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002950c:	eea6 7b01 	vfma.f64	d7, d6, d1
90029510:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
90029514:	ee21 1b05 	vmul.f64	d1, d1, d5
90029518:	eea6 0b05 	vfma.f64	d0, d6, d5
9002951c:	eea7 0b01 	vfma.f64	d0, d7, d1
90029520:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90029524:	4770      	bx	lr
90029526:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002952a:	ee21 5b01 	vmul.f64	d5, d1, d1
9002952e:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
90029532:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
90029536:	eea1 7b06 	vfma.f64	d7, d1, d6
9002953a:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002953e:	eea1 0b06 	vfma.f64	d0, d1, d6
90029542:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
90029546:	ee21 1b05 	vmul.f64	d1, d1, d5
9002954a:	eea5 0b06 	vfma.f64	d0, d5, d6
9002954e:	e7e5      	b.n	9002951c <sinf_poly+0x20>

90029550 <sinf>:
90029550:	b537      	push	{r0, r1, r2, r4, r5, lr}
90029552:	ee10 4a10 	vmov	r4, s0
90029556:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002955a:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002955e:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
90029562:	eef0 7a40 	vmov.f32	s15, s0
90029566:	ea4f 5214 	mov.w	r2, r4, lsr #20
9002956a:	d218      	bcs.n	9002959e <sinf+0x4e>
9002956c:	ee26 1b06 	vmul.f64	d1, d6, d6
90029570:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
90029574:	d20a      	bcs.n	9002958c <sinf+0x3c>
90029576:	f412 6fff 	tst.w	r2, #2040	@ 0x7f8
9002957a:	d103      	bne.n	90029584 <sinf+0x34>
9002957c:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
90029580:	ed8d 1a01 	vstr	s2, [sp, #4]
90029584:	eeb0 0a67 	vmov.f32	s0, s15
90029588:	b003      	add	sp, #12
9002958a:	bd30      	pop	{r4, r5, pc}
9002958c:	483a      	ldr	r0, [pc, #232]	@ (90029678 <sinf+0x128>)
9002958e:	eeb0 0b46 	vmov.f64	d0, d6
90029592:	2100      	movs	r1, #0
90029594:	b003      	add	sp, #12
90029596:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002959a:	f7ff bfaf 	b.w	900294fc <sinf_poly>
9002959e:	f240 422e 	movw	r2, #1070	@ 0x42e
900295a2:	4293      	cmp	r3, r2
900295a4:	d824      	bhi.n	900295f0 <sinf+0xa0>
900295a6:	4b34      	ldr	r3, [pc, #208]	@ (90029678 <sinf+0x128>)
900295a8:	ed93 7b08 	vldr	d7, [r3, #32]
900295ac:	ee26 7b07 	vmul.f64	d7, d6, d7
900295b0:	eefd 7bc7 	vcvt.s32.f64	s15, d7
900295b4:	f103 0070 	add.w	r0, r3, #112	@ 0x70
900295b8:	ee17 1a90 	vmov	r1, s15
900295bc:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
900295c0:	1609      	asrs	r1, r1, #24
900295c2:	ee07 1a90 	vmov	s15, r1
900295c6:	f001 0203 	and.w	r2, r1, #3
900295ca:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
900295ce:	eeb8 5be7 	vcvt.f64.s32	d5, s15
900295d2:	ed92 0b00 	vldr	d0, [r2]
900295d6:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
900295da:	f011 0f02 	tst.w	r1, #2
900295de:	eea5 6b47 	vfms.f64	d6, d5, d7
900295e2:	bf08      	it	eq
900295e4:	4618      	moveq	r0, r3
900295e6:	ee26 1b06 	vmul.f64	d1, d6, d6
900295ea:	ee20 0b06 	vmul.f64	d0, d0, d6
900295ee:	e7d1      	b.n	90029594 <sinf+0x44>
900295f0:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
900295f4:	d237      	bcs.n	90029666 <sinf+0x116>
900295f6:	4921      	ldr	r1, [pc, #132]	@ (9002967c <sinf+0x12c>)
900295f8:	f3c4 6083 	ubfx	r0, r4, #26, #4
900295fc:	eb01 0280 	add.w	r2, r1, r0, lsl #2
90029600:	f3c4 0316 	ubfx	r3, r4, #0, #23
90029604:	f3c4 55c2 	ubfx	r5, r4, #23, #3
90029608:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002960c:	6a10      	ldr	r0, [r2, #32]
9002960e:	6912      	ldr	r2, [r2, #16]
90029610:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
90029614:	40ab      	lsls	r3, r5
90029616:	fba0 5003 	umull	r5, r0, r0, r3
9002961a:	4359      	muls	r1, r3
9002961c:	fbe3 0102 	umlal	r0, r1, r3, r2
90029620:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
90029624:	0f9d      	lsrs	r5, r3, #30
90029626:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002962a:	1ac9      	subs	r1, r1, r3
9002962c:	f7d7 f836 	bl	9000069c <__aeabi_l2d>
90029630:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
90029634:	4b10      	ldr	r3, [pc, #64]	@ (90029678 <sinf+0x128>)
90029636:	f004 0203 	and.w	r2, r4, #3
9002963a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002963e:	ed9f 6b0c 	vldr	d6, [pc, #48]	@ 90029670 <sinf+0x120>
90029642:	ed92 0b00 	vldr	d0, [r2]
90029646:	ec41 0b17 	vmov	d7, r0, r1
9002964a:	f014 0f02 	tst.w	r4, #2
9002964e:	ee27 7b06 	vmul.f64	d7, d7, d6
90029652:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029656:	4629      	mov	r1, r5
90029658:	bf08      	it	eq
9002965a:	4618      	moveq	r0, r3
9002965c:	ee27 1b07 	vmul.f64	d1, d7, d7
90029660:	ee20 0b07 	vmul.f64	d0, d0, d7
90029664:	e796      	b.n	90029594 <sinf+0x44>
90029666:	b003      	add	sp, #12
90029668:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002966c:	f000 b8e2 	b.w	90029834 <__math_invalidf>
90029670:	54442d18 	.word	0x54442d18
90029674:	3c1921fb 	.word	0x3c1921fb
90029678:	9002e0f0 	.word	0x9002e0f0
9002967c:	9002e08c 	.word	0x9002e08c

90029680 <sinf_poly>:
90029680:	07cb      	lsls	r3, r1, #31
90029682:	d412      	bmi.n	900296aa <sinf_poly+0x2a>
90029684:	ee21 5b00 	vmul.f64	d5, d1, d0
90029688:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002968c:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
90029690:	eea6 7b01 	vfma.f64	d7, d6, d1
90029694:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
90029698:	ee21 1b05 	vmul.f64	d1, d1, d5
9002969c:	eea6 0b05 	vfma.f64	d0, d6, d5
900296a0:	eea7 0b01 	vfma.f64	d0, d7, d1
900296a4:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
900296a8:	4770      	bx	lr
900296aa:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
900296ae:	ee21 5b01 	vmul.f64	d5, d1, d1
900296b2:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
900296b6:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
900296ba:	eea1 7b06 	vfma.f64	d7, d1, d6
900296be:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
900296c2:	eea1 0b06 	vfma.f64	d0, d1, d6
900296c6:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
900296ca:	ee21 1b05 	vmul.f64	d1, d1, d5
900296ce:	eea5 0b06 	vfma.f64	d0, d5, d6
900296d2:	e7e5      	b.n	900296a0 <sinf_poly+0x20>
900296d4:	0000      	movs	r0, r0
	...

900296d8 <cosf>:
900296d8:	b538      	push	{r3, r4, r5, lr}
900296da:	ee10 4a10 	vmov	r4, s0
900296de:	f3c4 530a 	ubfx	r3, r4, #20, #11
900296e2:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
900296e6:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
900296ea:	d21f      	bcs.n	9002972c <cosf+0x54>
900296ec:	ee27 7b07 	vmul.f64	d7, d7, d7
900296f0:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
900296f4:	f0c0 8082 	bcc.w	900297fc <cosf+0x124>
900296f8:	ee27 4b07 	vmul.f64	d4, d7, d7
900296fc:	4b44      	ldr	r3, [pc, #272]	@ (90029810 <cosf+0x138>)
900296fe:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
90029702:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
90029706:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
9002970a:	eea7 6b05 	vfma.f64	d6, d7, d5
9002970e:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
90029712:	eea7 0b05 	vfma.f64	d0, d7, d5
90029716:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
9002971a:	ee27 7b04 	vmul.f64	d7, d7, d4
9002971e:	eea4 0b05 	vfma.f64	d0, d4, d5
90029722:	eea6 0b07 	vfma.f64	d0, d6, d7
90029726:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002972a:	bd38      	pop	{r3, r4, r5, pc}
9002972c:	f240 422e 	movw	r2, #1070	@ 0x42e
90029730:	4293      	cmp	r3, r2
90029732:	d829      	bhi.n	90029788 <cosf+0xb0>
90029734:	4b36      	ldr	r3, [pc, #216]	@ (90029810 <cosf+0x138>)
90029736:	ed93 6b08 	vldr	d6, [r3, #32]
9002973a:	ee27 6b06 	vmul.f64	d6, d7, d6
9002973e:	eefd 6bc6 	vcvt.s32.f64	s13, d6
90029742:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029746:	ee16 1a90 	vmov	r1, s13
9002974a:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002974e:	1609      	asrs	r1, r1, #24
90029750:	ee06 1a90 	vmov	s13, r1
90029754:	f001 0203 	and.w	r2, r1, #3
90029758:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002975c:	eeb8 5be6 	vcvt.f64.s32	d5, s13
90029760:	ed92 0b00 	vldr	d0, [r2]
90029764:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
90029768:	f011 0f02 	tst.w	r1, #2
9002976c:	f081 0101 	eor.w	r1, r1, #1
90029770:	eea5 7b46 	vfms.f64	d7, d5, d6
90029774:	bf08      	it	eq
90029776:	4618      	moveq	r0, r3
90029778:	ee27 1b07 	vmul.f64	d1, d7, d7
9002977c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029780:	ee20 0b07 	vmul.f64	d0, d0, d7
90029784:	f7ff bf7c 	b.w	90029680 <sinf_poly>
90029788:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002978c:	d232      	bcs.n	900297f4 <cosf+0x11c>
9002978e:	4921      	ldr	r1, [pc, #132]	@ (90029814 <cosf+0x13c>)
90029790:	f3c4 6083 	ubfx	r0, r4, #26, #4
90029794:	eb01 0280 	add.w	r2, r1, r0, lsl #2
90029798:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002979c:	f3c4 55c2 	ubfx	r5, r4, #23, #3
900297a0:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
900297a4:	6a10      	ldr	r0, [r2, #32]
900297a6:	6912      	ldr	r2, [r2, #16]
900297a8:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
900297ac:	40ab      	lsls	r3, r5
900297ae:	fba0 5003 	umull	r5, r0, r0, r3
900297b2:	4359      	muls	r1, r3
900297b4:	fbe3 0102 	umlal	r0, r1, r3, r2
900297b8:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
900297bc:	0f9d      	lsrs	r5, r3, #30
900297be:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
900297c2:	1ac9      	subs	r1, r1, r3
900297c4:	f7d6 ff6a 	bl	9000069c <__aeabi_l2d>
900297c8:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
900297cc:	4b10      	ldr	r3, [pc, #64]	@ (90029810 <cosf+0x138>)
900297ce:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 90029808 <cosf+0x130>
900297d2:	ec41 0b17 	vmov	d7, r0, r1
900297d6:	f004 0203 	and.w	r2, r4, #3
900297da:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
900297de:	ed92 0b00 	vldr	d0, [r2]
900297e2:	ee27 7b06 	vmul.f64	d7, d7, d6
900297e6:	f103 0070 	add.w	r0, r3, #112	@ 0x70
900297ea:	f014 0f02 	tst.w	r4, #2
900297ee:	f085 0101 	eor.w	r1, r5, #1
900297f2:	e7bf      	b.n	90029774 <cosf+0x9c>
900297f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
900297f8:	f000 b81c 	b.w	90029834 <__math_invalidf>
900297fc:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
90029800:	e793      	b.n	9002972a <cosf+0x52>
90029802:	bf00      	nop
90029804:	f3af 8000 	nop.w
90029808:	54442d18 	.word	0x54442d18
9002980c:	3c1921fb 	.word	0x3c1921fb
90029810:	9002e0f0 	.word	0x9002e0f0
90029814:	9002e08c 	.word	0x9002e08c

90029818 <with_errnof>:
90029818:	b510      	push	{r4, lr}
9002981a:	ed2d 8b02 	vpush	{d8}
9002981e:	eeb0 8a40 	vmov.f32	s16, s0
90029822:	4604      	mov	r4, r0
90029824:	f000 fce8 	bl	9002a1f8 <__errno>
90029828:	eeb0 0a48 	vmov.f32	s0, s16
9002982c:	ecbd 8b02 	vpop	{d8}
90029830:	6004      	str	r4, [r0, #0]
90029832:	bd10      	pop	{r4, pc}

90029834 <__math_invalidf>:
90029834:	eef0 7a40 	vmov.f32	s15, s0
90029838:	ee30 7a40 	vsub.f32	s14, s0, s0
9002983c:	eef4 7a67 	vcmp.f32	s15, s15
90029840:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029844:	ee87 0a07 	vdiv.f32	s0, s14, s14
90029848:	d602      	bvs.n	90029850 <__math_invalidf+0x1c>
9002984a:	2021      	movs	r0, #33	@ 0x21
9002984c:	f7ff bfe4 	b.w	90029818 <with_errnof>
90029850:	4770      	bx	lr

90029852 <__ieee754_sqrtf>:
90029852:	eeb1 0ac0 	vsqrt.f32	s0, s0
90029856:	4770      	bx	lr

90029858 <__ieee754_atan2f>:
90029858:	ee10 2a90 	vmov	r2, s1
9002985c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
90029860:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
90029864:	b510      	push	{r4, lr}
90029866:	eef0 7a40 	vmov.f32	s15, s0
9002986a:	d806      	bhi.n	9002987a <__ieee754_atan2f+0x22>
9002986c:	ee10 0a10 	vmov	r0, s0
90029870:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
90029874:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
90029878:	d904      	bls.n	90029884 <__ieee754_atan2f+0x2c>
9002987a:	ee77 7aa0 	vadd.f32	s15, s15, s1
9002987e:	eeb0 0a67 	vmov.f32	s0, s15
90029882:	bd10      	pop	{r4, pc}
90029884:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
90029888:	d103      	bne.n	90029892 <__ieee754_atan2f+0x3a>
9002988a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002988e:	f000 b881 	b.w	90029994 <atanf>
90029892:	1794      	asrs	r4, r2, #30
90029894:	f004 0402 	and.w	r4, r4, #2
90029898:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
9002989c:	b93b      	cbnz	r3, 900298ae <__ieee754_atan2f+0x56>
9002989e:	2c02      	cmp	r4, #2
900298a0:	d05c      	beq.n	9002995c <__ieee754_atan2f+0x104>
900298a2:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 90029970 <__ieee754_atan2f+0x118>
900298a6:	2c03      	cmp	r4, #3
900298a8:	fe47 7a00 	vseleq.f32	s15, s14, s0
900298ac:	e7e7      	b.n	9002987e <__ieee754_atan2f+0x26>
900298ae:	b939      	cbnz	r1, 900298c0 <__ieee754_atan2f+0x68>
900298b0:	eddf 7a30 	vldr	s15, [pc, #192]	@ 90029974 <__ieee754_atan2f+0x11c>
900298b4:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 90029978 <__ieee754_atan2f+0x120>
900298b8:	2800      	cmp	r0, #0
900298ba:	fe67 7a87 	vselge.f32	s15, s15, s14
900298be:	e7de      	b.n	9002987e <__ieee754_atan2f+0x26>
900298c0:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
900298c4:	d110      	bne.n	900298e8 <__ieee754_atan2f+0x90>
900298c6:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
900298ca:	f104 34ff 	add.w	r4, r4, #4294967295
900298ce:	d107      	bne.n	900298e0 <__ieee754_atan2f+0x88>
900298d0:	2c02      	cmp	r4, #2
900298d2:	d846      	bhi.n	90029962 <__ieee754_atan2f+0x10a>
900298d4:	4b29      	ldr	r3, [pc, #164]	@ (9002997c <__ieee754_atan2f+0x124>)
900298d6:	eb03 0384 	add.w	r3, r3, r4, lsl #2
900298da:	edd3 7a00 	vldr	s15, [r3]
900298de:	e7ce      	b.n	9002987e <__ieee754_atan2f+0x26>
900298e0:	2c02      	cmp	r4, #2
900298e2:	d841      	bhi.n	90029968 <__ieee754_atan2f+0x110>
900298e4:	4b26      	ldr	r3, [pc, #152]	@ (90029980 <__ieee754_atan2f+0x128>)
900298e6:	e7f6      	b.n	900298d6 <__ieee754_atan2f+0x7e>
900298e8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
900298ec:	d0e0      	beq.n	900298b0 <__ieee754_atan2f+0x58>
900298ee:	1a5b      	subs	r3, r3, r1
900298f0:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
900298f4:	ea4f 51e3 	mov.w	r1, r3, asr #23
900298f8:	da1a      	bge.n	90029930 <__ieee754_atan2f+0xd8>
900298fa:	2a00      	cmp	r2, #0
900298fc:	da01      	bge.n	90029902 <__ieee754_atan2f+0xaa>
900298fe:	313c      	adds	r1, #60	@ 0x3c
90029900:	db19      	blt.n	90029936 <__ieee754_atan2f+0xde>
90029902:	ee87 0aa0 	vdiv.f32	s0, s15, s1
90029906:	f000 f919 	bl	90029b3c <fabsf>
9002990a:	f000 f843 	bl	90029994 <atanf>
9002990e:	eef0 7a40 	vmov.f32	s15, s0
90029912:	2c01      	cmp	r4, #1
90029914:	d012      	beq.n	9002993c <__ieee754_atan2f+0xe4>
90029916:	2c02      	cmp	r4, #2
90029918:	d017      	beq.n	9002994a <__ieee754_atan2f+0xf2>
9002991a:	2c00      	cmp	r4, #0
9002991c:	d0af      	beq.n	9002987e <__ieee754_atan2f+0x26>
9002991e:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 90029984 <__ieee754_atan2f+0x12c>
90029922:	ee77 7a87 	vadd.f32	s15, s15, s14
90029926:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 90029988 <__ieee754_atan2f+0x130>
9002992a:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002992e:	e7a6      	b.n	9002987e <__ieee754_atan2f+0x26>
90029930:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90029974 <__ieee754_atan2f+0x11c>
90029934:	e7ed      	b.n	90029912 <__ieee754_atan2f+0xba>
90029936:	eddf 7a15 	vldr	s15, [pc, #84]	@ 9002998c <__ieee754_atan2f+0x134>
9002993a:	e7ea      	b.n	90029912 <__ieee754_atan2f+0xba>
9002993c:	ee17 3a90 	vmov	r3, s15
90029940:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90029944:	ee07 3a90 	vmov	s15, r3
90029948:	e799      	b.n	9002987e <__ieee754_atan2f+0x26>
9002994a:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 90029984 <__ieee754_atan2f+0x12c>
9002994e:	ee77 7a87 	vadd.f32	s15, s15, s14
90029952:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 90029988 <__ieee754_atan2f+0x130>
90029956:	ee77 7a67 	vsub.f32	s15, s14, s15
9002995a:	e790      	b.n	9002987e <__ieee754_atan2f+0x26>
9002995c:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 90029988 <__ieee754_atan2f+0x130>
90029960:	e78d      	b.n	9002987e <__ieee754_atan2f+0x26>
90029962:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 90029990 <__ieee754_atan2f+0x138>
90029966:	e78a      	b.n	9002987e <__ieee754_atan2f+0x26>
90029968:	eddf 7a08 	vldr	s15, [pc, #32]	@ 9002998c <__ieee754_atan2f+0x134>
9002996c:	e787      	b.n	9002987e <__ieee754_atan2f+0x26>
9002996e:	bf00      	nop
90029970:	c0490fdb 	.word	0xc0490fdb
90029974:	3fc90fdb 	.word	0x3fc90fdb
90029978:	bfc90fdb 	.word	0xbfc90fdb
9002997c:	9002e1dc 	.word	0x9002e1dc
90029980:	9002e1d0 	.word	0x9002e1d0
90029984:	33bbbd2e 	.word	0x33bbbd2e
90029988:	40490fdb 	.word	0x40490fdb
9002998c:	00000000 	.word	0x00000000
90029990:	3f490fdb 	.word	0x3f490fdb

90029994 <atanf>:
90029994:	b538      	push	{r3, r4, r5, lr}
90029996:	ee10 5a10 	vmov	r5, s0
9002999a:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
9002999e:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
900299a2:	eef0 7a40 	vmov.f32	s15, s0
900299a6:	d30f      	bcc.n	900299c8 <atanf+0x34>
900299a8:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
900299ac:	d904      	bls.n	900299b8 <atanf+0x24>
900299ae:	ee70 7a00 	vadd.f32	s15, s0, s0
900299b2:	eeb0 0a67 	vmov.f32	s0, s15
900299b6:	bd38      	pop	{r3, r4, r5, pc}
900299b8:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 90029af0 <atanf+0x15c>
900299bc:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 90029af4 <atanf+0x160>
900299c0:	2d00      	cmp	r5, #0
900299c2:	fe77 7a27 	vselgt.f32	s15, s14, s15
900299c6:	e7f4      	b.n	900299b2 <atanf+0x1e>
900299c8:	4b4b      	ldr	r3, [pc, #300]	@ (90029af8 <atanf+0x164>)
900299ca:	429c      	cmp	r4, r3
900299cc:	d810      	bhi.n	900299f0 <atanf+0x5c>
900299ce:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
900299d2:	d20a      	bcs.n	900299ea <atanf+0x56>
900299d4:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 90029afc <atanf+0x168>
900299d8:	ee30 7a07 	vadd.f32	s14, s0, s14
900299dc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
900299e0:	eeb4 7ae6 	vcmpe.f32	s14, s13
900299e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900299e8:	dce3      	bgt.n	900299b2 <atanf+0x1e>
900299ea:	f04f 33ff 	mov.w	r3, #4294967295
900299ee:	e013      	b.n	90029a18 <atanf+0x84>
900299f0:	f000 f8a4 	bl	90029b3c <fabsf>
900299f4:	4b42      	ldr	r3, [pc, #264]	@ (90029b00 <atanf+0x16c>)
900299f6:	429c      	cmp	r4, r3
900299f8:	d84f      	bhi.n	90029a9a <atanf+0x106>
900299fa:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
900299fe:	429c      	cmp	r4, r3
90029a00:	d841      	bhi.n	90029a86 <atanf+0xf2>
90029a02:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
90029a06:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
90029a0a:	eea0 7a27 	vfma.f32	s14, s0, s15
90029a0e:	2300      	movs	r3, #0
90029a10:	ee30 0a27 	vadd.f32	s0, s0, s15
90029a14:	eec7 7a00 	vdiv.f32	s15, s14, s0
90029a18:	1c5a      	adds	r2, r3, #1
90029a1a:	ee27 6aa7 	vmul.f32	s12, s15, s15
90029a1e:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 90029b04 <atanf+0x170>
90029a22:	eddf 5a39 	vldr	s11, [pc, #228]	@ 90029b08 <atanf+0x174>
90029a26:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 90029b0c <atanf+0x178>
90029a2a:	ee66 6a06 	vmul.f32	s13, s12, s12
90029a2e:	eee6 5a87 	vfma.f32	s11, s13, s14
90029a32:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 90029b10 <atanf+0x17c>
90029a36:	eea5 7aa6 	vfma.f32	s14, s11, s13
90029a3a:	eddf 5a36 	vldr	s11, [pc, #216]	@ 90029b14 <atanf+0x180>
90029a3e:	eee7 5a26 	vfma.f32	s11, s14, s13
90029a42:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 90029b18 <atanf+0x184>
90029a46:	eea5 7aa6 	vfma.f32	s14, s11, s13
90029a4a:	eddf 5a34 	vldr	s11, [pc, #208]	@ 90029b1c <atanf+0x188>
90029a4e:	eee7 5a26 	vfma.f32	s11, s14, s13
90029a52:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 90029b20 <atanf+0x18c>
90029a56:	eea6 5a87 	vfma.f32	s10, s13, s14
90029a5a:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 90029b24 <atanf+0x190>
90029a5e:	eea5 7a26 	vfma.f32	s14, s10, s13
90029a62:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 90029b28 <atanf+0x194>
90029a66:	eea7 5a26 	vfma.f32	s10, s14, s13
90029a6a:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 90029b2c <atanf+0x198>
90029a6e:	eea5 7a26 	vfma.f32	s14, s10, s13
90029a72:	ee27 7a26 	vmul.f32	s14, s14, s13
90029a76:	eea5 7a86 	vfma.f32	s14, s11, s12
90029a7a:	ee27 7a87 	vmul.f32	s14, s15, s14
90029a7e:	d121      	bne.n	90029ac4 <atanf+0x130>
90029a80:	ee77 7ac7 	vsub.f32	s15, s15, s14
90029a84:	e795      	b.n	900299b2 <atanf+0x1e>
90029a86:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90029a8a:	ee30 7a67 	vsub.f32	s14, s0, s15
90029a8e:	ee30 0a27 	vadd.f32	s0, s0, s15
90029a92:	2301      	movs	r3, #1
90029a94:	eec7 7a00 	vdiv.f32	s15, s14, s0
90029a98:	e7be      	b.n	90029a18 <atanf+0x84>
90029a9a:	4b25      	ldr	r3, [pc, #148]	@ (90029b30 <atanf+0x19c>)
90029a9c:	429c      	cmp	r4, r3
90029a9e:	d80b      	bhi.n	90029ab8 <atanf+0x124>
90029aa0:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
90029aa4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90029aa8:	eea0 7a27 	vfma.f32	s14, s0, s15
90029aac:	2302      	movs	r3, #2
90029aae:	ee70 6a67 	vsub.f32	s13, s0, s15
90029ab2:	eec6 7a87 	vdiv.f32	s15, s13, s14
90029ab6:	e7af      	b.n	90029a18 <atanf+0x84>
90029ab8:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
90029abc:	eec7 7a00 	vdiv.f32	s15, s14, s0
90029ac0:	2303      	movs	r3, #3
90029ac2:	e7a9      	b.n	90029a18 <atanf+0x84>
90029ac4:	4a1b      	ldr	r2, [pc, #108]	@ (90029b34 <atanf+0x1a0>)
90029ac6:	491c      	ldr	r1, [pc, #112]	@ (90029b38 <atanf+0x1a4>)
90029ac8:	eb02 0283 	add.w	r2, r2, r3, lsl #2
90029acc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
90029ad0:	edd3 6a00 	vldr	s13, [r3]
90029ad4:	ee37 7a66 	vsub.f32	s14, s14, s13
90029ad8:	2d00      	cmp	r5, #0
90029ada:	ee37 7a67 	vsub.f32	s14, s14, s15
90029ade:	edd2 7a00 	vldr	s15, [r2]
90029ae2:	ee77 7ac7 	vsub.f32	s15, s15, s14
90029ae6:	bfb8      	it	lt
90029ae8:	eef1 7a67 	vneglt.f32	s15, s15
90029aec:	e761      	b.n	900299b2 <atanf+0x1e>
90029aee:	bf00      	nop
90029af0:	bfc90fdb 	.word	0xbfc90fdb
90029af4:	3fc90fdb 	.word	0x3fc90fdb
90029af8:	3edfffff 	.word	0x3edfffff
90029afc:	7149f2ca 	.word	0x7149f2ca
90029b00:	3f97ffff 	.word	0x3f97ffff
90029b04:	3c8569d7 	.word	0x3c8569d7
90029b08:	3d4bda59 	.word	0x3d4bda59
90029b0c:	bd6ef16b 	.word	0xbd6ef16b
90029b10:	3d886b35 	.word	0x3d886b35
90029b14:	3dba2e6e 	.word	0x3dba2e6e
90029b18:	3e124925 	.word	0x3e124925
90029b1c:	3eaaaaab 	.word	0x3eaaaaab
90029b20:	bd15a221 	.word	0xbd15a221
90029b24:	bd9d8795 	.word	0xbd9d8795
90029b28:	bde38e38 	.word	0xbde38e38
90029b2c:	be4ccccd 	.word	0xbe4ccccd
90029b30:	401bffff 	.word	0x401bffff
90029b34:	9002e1f8 	.word	0x9002e1f8
90029b38:	9002e1e8 	.word	0x9002e1e8

90029b3c <fabsf>:
90029b3c:	ee10 3a10 	vmov	r3, s0
90029b40:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
90029b44:	ee00 3a10 	vmov	s0, r3
90029b48:	4770      	bx	lr

90029b4a <abort>:
90029b4a:	b508      	push	{r3, lr}
90029b4c:	2006      	movs	r0, #6
90029b4e:	f000 fae1 	bl	9002a114 <raise>
90029b52:	2001      	movs	r0, #1
90029b54:	f7da fbee 	bl	90004334 <_exit>

90029b58 <__assert_func>:
90029b58:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90029b5a:	4614      	mov	r4, r2
90029b5c:	461a      	mov	r2, r3
90029b5e:	4b09      	ldr	r3, [pc, #36]	@ (90029b84 <__assert_func+0x2c>)
90029b60:	681b      	ldr	r3, [r3, #0]
90029b62:	4605      	mov	r5, r0
90029b64:	68d8      	ldr	r0, [r3, #12]
90029b66:	b954      	cbnz	r4, 90029b7e <__assert_func+0x26>
90029b68:	4b07      	ldr	r3, [pc, #28]	@ (90029b88 <__assert_func+0x30>)
90029b6a:	461c      	mov	r4, r3
90029b6c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90029b70:	9100      	str	r1, [sp, #0]
90029b72:	462b      	mov	r3, r5
90029b74:	4905      	ldr	r1, [pc, #20]	@ (90029b8c <__assert_func+0x34>)
90029b76:	f000 f983 	bl	90029e80 <fiprintf>
90029b7a:	f7ff ffe6 	bl	90029b4a <abort>
90029b7e:	4b04      	ldr	r3, [pc, #16]	@ (90029b90 <__assert_func+0x38>)
90029b80:	e7f4      	b.n	90029b6c <__assert_func+0x14>
90029b82:	bf00      	nop
90029b84:	24000134 	.word	0x24000134
90029b88:	9002e243 	.word	0x9002e243
90029b8c:	9002e215 	.word	0x9002e215
90029b90:	9002e208 	.word	0x9002e208

90029b94 <atexit>:
90029b94:	2300      	movs	r3, #0
90029b96:	4601      	mov	r1, r0
90029b98:	461a      	mov	r2, r3
90029b9a:	4618      	mov	r0, r3
90029b9c:	f000 bb68 	b.w	9002a270 <__register_exitproc>

90029ba0 <malloc>:
90029ba0:	4b02      	ldr	r3, [pc, #8]	@ (90029bac <malloc+0xc>)
90029ba2:	4601      	mov	r1, r0
90029ba4:	6818      	ldr	r0, [r3, #0]
90029ba6:	f000 b82d 	b.w	90029c04 <_malloc_r>
90029baa:	bf00      	nop
90029bac:	24000134 	.word	0x24000134

90029bb0 <free>:
90029bb0:	4b02      	ldr	r3, [pc, #8]	@ (90029bbc <free+0xc>)
90029bb2:	4601      	mov	r1, r0
90029bb4:	6818      	ldr	r0, [r3, #0]
90029bb6:	f000 bbb7 	b.w	9002a328 <_free_r>
90029bba:	bf00      	nop
90029bbc:	24000134 	.word	0x24000134

90029bc0 <sbrk_aligned>:
90029bc0:	b570      	push	{r4, r5, r6, lr}
90029bc2:	4e0f      	ldr	r6, [pc, #60]	@ (90029c00 <sbrk_aligned+0x40>)
90029bc4:	460c      	mov	r4, r1
90029bc6:	6831      	ldr	r1, [r6, #0]
90029bc8:	4605      	mov	r5, r0
90029bca:	b911      	cbnz	r1, 90029bd2 <sbrk_aligned+0x12>
90029bcc:	f000 faf2 	bl	9002a1b4 <_sbrk_r>
90029bd0:	6030      	str	r0, [r6, #0]
90029bd2:	4621      	mov	r1, r4
90029bd4:	4628      	mov	r0, r5
90029bd6:	f000 faed 	bl	9002a1b4 <_sbrk_r>
90029bda:	1c43      	adds	r3, r0, #1
90029bdc:	d103      	bne.n	90029be6 <sbrk_aligned+0x26>
90029bde:	f04f 34ff 	mov.w	r4, #4294967295
90029be2:	4620      	mov	r0, r4
90029be4:	bd70      	pop	{r4, r5, r6, pc}
90029be6:	1cc4      	adds	r4, r0, #3
90029be8:	f024 0403 	bic.w	r4, r4, #3
90029bec:	42a0      	cmp	r0, r4
90029bee:	d0f8      	beq.n	90029be2 <sbrk_aligned+0x22>
90029bf0:	1a21      	subs	r1, r4, r0
90029bf2:	4628      	mov	r0, r5
90029bf4:	f000 fade 	bl	9002a1b4 <_sbrk_r>
90029bf8:	3001      	adds	r0, #1
90029bfa:	d1f2      	bne.n	90029be2 <sbrk_aligned+0x22>
90029bfc:	e7ef      	b.n	90029bde <sbrk_aligned+0x1e>
90029bfe:	bf00      	nop
90029c00:	24023e30 	.word	0x24023e30

90029c04 <_malloc_r>:
90029c04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90029c08:	1ccd      	adds	r5, r1, #3
90029c0a:	f025 0503 	bic.w	r5, r5, #3
90029c0e:	3508      	adds	r5, #8
90029c10:	2d0c      	cmp	r5, #12
90029c12:	bf38      	it	cc
90029c14:	250c      	movcc	r5, #12
90029c16:	2d00      	cmp	r5, #0
90029c18:	4606      	mov	r6, r0
90029c1a:	db01      	blt.n	90029c20 <_malloc_r+0x1c>
90029c1c:	42a9      	cmp	r1, r5
90029c1e:	d904      	bls.n	90029c2a <_malloc_r+0x26>
90029c20:	230c      	movs	r3, #12
90029c22:	6033      	str	r3, [r6, #0]
90029c24:	2000      	movs	r0, #0
90029c26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029c2a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 90029d00 <_malloc_r+0xfc>
90029c2e:	f000 f869 	bl	90029d04 <__malloc_lock>
90029c32:	f8d8 3000 	ldr.w	r3, [r8]
90029c36:	461c      	mov	r4, r3
90029c38:	bb44      	cbnz	r4, 90029c8c <_malloc_r+0x88>
90029c3a:	4629      	mov	r1, r5
90029c3c:	4630      	mov	r0, r6
90029c3e:	f7ff ffbf 	bl	90029bc0 <sbrk_aligned>
90029c42:	1c43      	adds	r3, r0, #1
90029c44:	4604      	mov	r4, r0
90029c46:	d158      	bne.n	90029cfa <_malloc_r+0xf6>
90029c48:	f8d8 4000 	ldr.w	r4, [r8]
90029c4c:	4627      	mov	r7, r4
90029c4e:	2f00      	cmp	r7, #0
90029c50:	d143      	bne.n	90029cda <_malloc_r+0xd6>
90029c52:	2c00      	cmp	r4, #0
90029c54:	d04b      	beq.n	90029cee <_malloc_r+0xea>
90029c56:	6823      	ldr	r3, [r4, #0]
90029c58:	4639      	mov	r1, r7
90029c5a:	4630      	mov	r0, r6
90029c5c:	eb04 0903 	add.w	r9, r4, r3
90029c60:	f000 faa8 	bl	9002a1b4 <_sbrk_r>
90029c64:	4581      	cmp	r9, r0
90029c66:	d142      	bne.n	90029cee <_malloc_r+0xea>
90029c68:	6821      	ldr	r1, [r4, #0]
90029c6a:	1a6d      	subs	r5, r5, r1
90029c6c:	4629      	mov	r1, r5
90029c6e:	4630      	mov	r0, r6
90029c70:	f7ff ffa6 	bl	90029bc0 <sbrk_aligned>
90029c74:	3001      	adds	r0, #1
90029c76:	d03a      	beq.n	90029cee <_malloc_r+0xea>
90029c78:	6823      	ldr	r3, [r4, #0]
90029c7a:	442b      	add	r3, r5
90029c7c:	6023      	str	r3, [r4, #0]
90029c7e:	f8d8 3000 	ldr.w	r3, [r8]
90029c82:	685a      	ldr	r2, [r3, #4]
90029c84:	bb62      	cbnz	r2, 90029ce0 <_malloc_r+0xdc>
90029c86:	f8c8 7000 	str.w	r7, [r8]
90029c8a:	e00f      	b.n	90029cac <_malloc_r+0xa8>
90029c8c:	6822      	ldr	r2, [r4, #0]
90029c8e:	1b52      	subs	r2, r2, r5
90029c90:	d420      	bmi.n	90029cd4 <_malloc_r+0xd0>
90029c92:	2a0b      	cmp	r2, #11
90029c94:	d917      	bls.n	90029cc6 <_malloc_r+0xc2>
90029c96:	1961      	adds	r1, r4, r5
90029c98:	42a3      	cmp	r3, r4
90029c9a:	6025      	str	r5, [r4, #0]
90029c9c:	bf18      	it	ne
90029c9e:	6059      	strne	r1, [r3, #4]
90029ca0:	6863      	ldr	r3, [r4, #4]
90029ca2:	bf08      	it	eq
90029ca4:	f8c8 1000 	streq.w	r1, [r8]
90029ca8:	5162      	str	r2, [r4, r5]
90029caa:	604b      	str	r3, [r1, #4]
90029cac:	4630      	mov	r0, r6
90029cae:	f000 f82f 	bl	90029d10 <__malloc_unlock>
90029cb2:	f104 000b 	add.w	r0, r4, #11
90029cb6:	1d23      	adds	r3, r4, #4
90029cb8:	f020 0007 	bic.w	r0, r0, #7
90029cbc:	1ac2      	subs	r2, r0, r3
90029cbe:	bf1c      	itt	ne
90029cc0:	1a1b      	subne	r3, r3, r0
90029cc2:	50a3      	strne	r3, [r4, r2]
90029cc4:	e7af      	b.n	90029c26 <_malloc_r+0x22>
90029cc6:	6862      	ldr	r2, [r4, #4]
90029cc8:	42a3      	cmp	r3, r4
90029cca:	bf0c      	ite	eq
90029ccc:	f8c8 2000 	streq.w	r2, [r8]
90029cd0:	605a      	strne	r2, [r3, #4]
90029cd2:	e7eb      	b.n	90029cac <_malloc_r+0xa8>
90029cd4:	4623      	mov	r3, r4
90029cd6:	6864      	ldr	r4, [r4, #4]
90029cd8:	e7ae      	b.n	90029c38 <_malloc_r+0x34>
90029cda:	463c      	mov	r4, r7
90029cdc:	687f      	ldr	r7, [r7, #4]
90029cde:	e7b6      	b.n	90029c4e <_malloc_r+0x4a>
90029ce0:	461a      	mov	r2, r3
90029ce2:	685b      	ldr	r3, [r3, #4]
90029ce4:	42a3      	cmp	r3, r4
90029ce6:	d1fb      	bne.n	90029ce0 <_malloc_r+0xdc>
90029ce8:	2300      	movs	r3, #0
90029cea:	6053      	str	r3, [r2, #4]
90029cec:	e7de      	b.n	90029cac <_malloc_r+0xa8>
90029cee:	230c      	movs	r3, #12
90029cf0:	6033      	str	r3, [r6, #0]
90029cf2:	4630      	mov	r0, r6
90029cf4:	f000 f80c 	bl	90029d10 <__malloc_unlock>
90029cf8:	e794      	b.n	90029c24 <_malloc_r+0x20>
90029cfa:	6005      	str	r5, [r0, #0]
90029cfc:	e7d6      	b.n	90029cac <_malloc_r+0xa8>
90029cfe:	bf00      	nop
90029d00:	24023e34 	.word	0x24023e34

90029d04 <__malloc_lock>:
90029d04:	4801      	ldr	r0, [pc, #4]	@ (90029d0c <__malloc_lock+0x8>)
90029d06:	f000 baa2 	b.w	9002a24e <__retarget_lock_acquire_recursive>
90029d0a:	bf00      	nop
90029d0c:	24023f78 	.word	0x24023f78

90029d10 <__malloc_unlock>:
90029d10:	4801      	ldr	r0, [pc, #4]	@ (90029d18 <__malloc_unlock+0x8>)
90029d12:	f000 ba9d 	b.w	9002a250 <__retarget_lock_release_recursive>
90029d16:	bf00      	nop
90029d18:	24023f78 	.word	0x24023f78

90029d1c <__cxa_atexit>:
90029d1c:	b510      	push	{r4, lr}
90029d1e:	4604      	mov	r4, r0
90029d20:	4804      	ldr	r0, [pc, #16]	@ (90029d34 <__cxa_atexit+0x18>)
90029d22:	4613      	mov	r3, r2
90029d24:	b120      	cbz	r0, 90029d30 <__cxa_atexit+0x14>
90029d26:	460a      	mov	r2, r1
90029d28:	2002      	movs	r0, #2
90029d2a:	4621      	mov	r1, r4
90029d2c:	f000 faa0 	bl	9002a270 <__register_exitproc>
90029d30:	bd10      	pop	{r4, pc}
90029d32:	bf00      	nop
90029d34:	9002a271 	.word	0x9002a271

90029d38 <std>:
90029d38:	2300      	movs	r3, #0
90029d3a:	b510      	push	{r4, lr}
90029d3c:	4604      	mov	r4, r0
90029d3e:	e9c0 3300 	strd	r3, r3, [r0]
90029d42:	e9c0 3304 	strd	r3, r3, [r0, #16]
90029d46:	6083      	str	r3, [r0, #8]
90029d48:	8181      	strh	r1, [r0, #12]
90029d4a:	6643      	str	r3, [r0, #100]	@ 0x64
90029d4c:	81c2      	strh	r2, [r0, #14]
90029d4e:	6183      	str	r3, [r0, #24]
90029d50:	4619      	mov	r1, r3
90029d52:	2208      	movs	r2, #8
90029d54:	305c      	adds	r0, #92	@ 0x5c
90029d56:	f000 f99b 	bl	9002a090 <memset>
90029d5a:	4b0d      	ldr	r3, [pc, #52]	@ (90029d90 <std+0x58>)
90029d5c:	6263      	str	r3, [r4, #36]	@ 0x24
90029d5e:	4b0d      	ldr	r3, [pc, #52]	@ (90029d94 <std+0x5c>)
90029d60:	62a3      	str	r3, [r4, #40]	@ 0x28
90029d62:	4b0d      	ldr	r3, [pc, #52]	@ (90029d98 <std+0x60>)
90029d64:	62e3      	str	r3, [r4, #44]	@ 0x2c
90029d66:	4b0d      	ldr	r3, [pc, #52]	@ (90029d9c <std+0x64>)
90029d68:	6323      	str	r3, [r4, #48]	@ 0x30
90029d6a:	4b0d      	ldr	r3, [pc, #52]	@ (90029da0 <std+0x68>)
90029d6c:	6224      	str	r4, [r4, #32]
90029d6e:	429c      	cmp	r4, r3
90029d70:	d006      	beq.n	90029d80 <std+0x48>
90029d72:	f103 0268 	add.w	r2, r3, #104	@ 0x68
90029d76:	4294      	cmp	r4, r2
90029d78:	d002      	beq.n	90029d80 <std+0x48>
90029d7a:	33d0      	adds	r3, #208	@ 0xd0
90029d7c:	429c      	cmp	r4, r3
90029d7e:	d105      	bne.n	90029d8c <std+0x54>
90029d80:	f104 0058 	add.w	r0, r4, #88	@ 0x58
90029d84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029d88:	f000 ba60 	b.w	9002a24c <__retarget_lock_init_recursive>
90029d8c:	bd10      	pop	{r4, pc}
90029d8e:	bf00      	nop
90029d90:	90029ee1 	.word	0x90029ee1
90029d94:	90029f03 	.word	0x90029f03
90029d98:	90029f3b 	.word	0x90029f3b
90029d9c:	90029f5f 	.word	0x90029f5f
90029da0:	24023e38 	.word	0x24023e38

90029da4 <stdio_exit_handler>:
90029da4:	4a02      	ldr	r2, [pc, #8]	@ (90029db0 <stdio_exit_handler+0xc>)
90029da6:	4903      	ldr	r1, [pc, #12]	@ (90029db4 <stdio_exit_handler+0x10>)
90029da8:	4803      	ldr	r0, [pc, #12]	@ (90029db8 <stdio_exit_handler+0x14>)
90029daa:	f000 b87b 	b.w	90029ea4 <_fwalk_sglue>
90029dae:	bf00      	nop
90029db0:	24000128 	.word	0x24000128
90029db4:	9002aa65 	.word	0x9002aa65
90029db8:	24000138 	.word	0x24000138

90029dbc <cleanup_stdio>:
90029dbc:	6841      	ldr	r1, [r0, #4]
90029dbe:	4b0c      	ldr	r3, [pc, #48]	@ (90029df0 <cleanup_stdio+0x34>)
90029dc0:	4299      	cmp	r1, r3
90029dc2:	b510      	push	{r4, lr}
90029dc4:	4604      	mov	r4, r0
90029dc6:	d001      	beq.n	90029dcc <cleanup_stdio+0x10>
90029dc8:	f000 fe4c 	bl	9002aa64 <_fflush_r>
90029dcc:	68a1      	ldr	r1, [r4, #8]
90029dce:	4b09      	ldr	r3, [pc, #36]	@ (90029df4 <cleanup_stdio+0x38>)
90029dd0:	4299      	cmp	r1, r3
90029dd2:	d002      	beq.n	90029dda <cleanup_stdio+0x1e>
90029dd4:	4620      	mov	r0, r4
90029dd6:	f000 fe45 	bl	9002aa64 <_fflush_r>
90029dda:	68e1      	ldr	r1, [r4, #12]
90029ddc:	4b06      	ldr	r3, [pc, #24]	@ (90029df8 <cleanup_stdio+0x3c>)
90029dde:	4299      	cmp	r1, r3
90029de0:	d004      	beq.n	90029dec <cleanup_stdio+0x30>
90029de2:	4620      	mov	r0, r4
90029de4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029de8:	f000 be3c 	b.w	9002aa64 <_fflush_r>
90029dec:	bd10      	pop	{r4, pc}
90029dee:	bf00      	nop
90029df0:	24023e38 	.word	0x24023e38
90029df4:	24023ea0 	.word	0x24023ea0
90029df8:	24023f08 	.word	0x24023f08

90029dfc <global_stdio_init.part.0>:
90029dfc:	b510      	push	{r4, lr}
90029dfe:	4b0b      	ldr	r3, [pc, #44]	@ (90029e2c <global_stdio_init.part.0+0x30>)
90029e00:	4c0b      	ldr	r4, [pc, #44]	@ (90029e30 <global_stdio_init.part.0+0x34>)
90029e02:	4a0c      	ldr	r2, [pc, #48]	@ (90029e34 <global_stdio_init.part.0+0x38>)
90029e04:	601a      	str	r2, [r3, #0]
90029e06:	4620      	mov	r0, r4
90029e08:	2200      	movs	r2, #0
90029e0a:	2104      	movs	r1, #4
90029e0c:	f7ff ff94 	bl	90029d38 <std>
90029e10:	f104 0068 	add.w	r0, r4, #104	@ 0x68
90029e14:	2201      	movs	r2, #1
90029e16:	2109      	movs	r1, #9
90029e18:	f7ff ff8e 	bl	90029d38 <std>
90029e1c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
90029e20:	2202      	movs	r2, #2
90029e22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029e26:	2112      	movs	r1, #18
90029e28:	f7ff bf86 	b.w	90029d38 <std>
90029e2c:	24023f70 	.word	0x24023f70
90029e30:	24023e38 	.word	0x24023e38
90029e34:	90029da5 	.word	0x90029da5

90029e38 <__sfp_lock_acquire>:
90029e38:	4801      	ldr	r0, [pc, #4]	@ (90029e40 <__sfp_lock_acquire+0x8>)
90029e3a:	f000 ba08 	b.w	9002a24e <__retarget_lock_acquire_recursive>
90029e3e:	bf00      	nop
90029e40:	24023f7a 	.word	0x24023f7a

90029e44 <__sfp_lock_release>:
90029e44:	4801      	ldr	r0, [pc, #4]	@ (90029e4c <__sfp_lock_release+0x8>)
90029e46:	f000 ba03 	b.w	9002a250 <__retarget_lock_release_recursive>
90029e4a:	bf00      	nop
90029e4c:	24023f7a 	.word	0x24023f7a

90029e50 <__sinit>:
90029e50:	b510      	push	{r4, lr}
90029e52:	4604      	mov	r4, r0
90029e54:	f7ff fff0 	bl	90029e38 <__sfp_lock_acquire>
90029e58:	6a23      	ldr	r3, [r4, #32]
90029e5a:	b11b      	cbz	r3, 90029e64 <__sinit+0x14>
90029e5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029e60:	f7ff bff0 	b.w	90029e44 <__sfp_lock_release>
90029e64:	4b04      	ldr	r3, [pc, #16]	@ (90029e78 <__sinit+0x28>)
90029e66:	6223      	str	r3, [r4, #32]
90029e68:	4b04      	ldr	r3, [pc, #16]	@ (90029e7c <__sinit+0x2c>)
90029e6a:	681b      	ldr	r3, [r3, #0]
90029e6c:	2b00      	cmp	r3, #0
90029e6e:	d1f5      	bne.n	90029e5c <__sinit+0xc>
90029e70:	f7ff ffc4 	bl	90029dfc <global_stdio_init.part.0>
90029e74:	e7f2      	b.n	90029e5c <__sinit+0xc>
90029e76:	bf00      	nop
90029e78:	90029dbd 	.word	0x90029dbd
90029e7c:	24023f70 	.word	0x24023f70

90029e80 <fiprintf>:
90029e80:	b40e      	push	{r1, r2, r3}
90029e82:	b503      	push	{r0, r1, lr}
90029e84:	4601      	mov	r1, r0
90029e86:	ab03      	add	r3, sp, #12
90029e88:	4805      	ldr	r0, [pc, #20]	@ (90029ea0 <fiprintf+0x20>)
90029e8a:	f853 2b04 	ldr.w	r2, [r3], #4
90029e8e:	6800      	ldr	r0, [r0, #0]
90029e90:	9301      	str	r3, [sp, #4]
90029e92:	f000 fabd 	bl	9002a410 <_vfiprintf_r>
90029e96:	b002      	add	sp, #8
90029e98:	f85d eb04 	ldr.w	lr, [sp], #4
90029e9c:	b003      	add	sp, #12
90029e9e:	4770      	bx	lr
90029ea0:	24000134 	.word	0x24000134

90029ea4 <_fwalk_sglue>:
90029ea4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90029ea8:	4607      	mov	r7, r0
90029eaa:	4688      	mov	r8, r1
90029eac:	4614      	mov	r4, r2
90029eae:	2600      	movs	r6, #0
90029eb0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
90029eb4:	f1b9 0901 	subs.w	r9, r9, #1
90029eb8:	d505      	bpl.n	90029ec6 <_fwalk_sglue+0x22>
90029eba:	6824      	ldr	r4, [r4, #0]
90029ebc:	2c00      	cmp	r4, #0
90029ebe:	d1f7      	bne.n	90029eb0 <_fwalk_sglue+0xc>
90029ec0:	4630      	mov	r0, r6
90029ec2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029ec6:	89ab      	ldrh	r3, [r5, #12]
90029ec8:	2b01      	cmp	r3, #1
90029eca:	d907      	bls.n	90029edc <_fwalk_sglue+0x38>
90029ecc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
90029ed0:	3301      	adds	r3, #1
90029ed2:	d003      	beq.n	90029edc <_fwalk_sglue+0x38>
90029ed4:	4629      	mov	r1, r5
90029ed6:	4638      	mov	r0, r7
90029ed8:	47c0      	blx	r8
90029eda:	4306      	orrs	r6, r0
90029edc:	3568      	adds	r5, #104	@ 0x68
90029ede:	e7e9      	b.n	90029eb4 <_fwalk_sglue+0x10>

90029ee0 <__sread>:
90029ee0:	b510      	push	{r4, lr}
90029ee2:	460c      	mov	r4, r1
90029ee4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029ee8:	f000 f93e 	bl	9002a168 <_read_r>
90029eec:	2800      	cmp	r0, #0
90029eee:	bfab      	itete	ge
90029ef0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
90029ef2:	89a3      	ldrhlt	r3, [r4, #12]
90029ef4:	181b      	addge	r3, r3, r0
90029ef6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
90029efa:	bfac      	ite	ge
90029efc:	6563      	strge	r3, [r4, #84]	@ 0x54
90029efe:	81a3      	strhlt	r3, [r4, #12]
90029f00:	bd10      	pop	{r4, pc}

90029f02 <__swrite>:
90029f02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90029f06:	461f      	mov	r7, r3
90029f08:	898b      	ldrh	r3, [r1, #12]
90029f0a:	05db      	lsls	r3, r3, #23
90029f0c:	4605      	mov	r5, r0
90029f0e:	460c      	mov	r4, r1
90029f10:	4616      	mov	r6, r2
90029f12:	d505      	bpl.n	90029f20 <__swrite+0x1e>
90029f14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029f18:	2302      	movs	r3, #2
90029f1a:	2200      	movs	r2, #0
90029f1c:	f000 f912 	bl	9002a144 <_lseek_r>
90029f20:	89a3      	ldrh	r3, [r4, #12]
90029f22:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90029f26:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
90029f2a:	81a3      	strh	r3, [r4, #12]
90029f2c:	4632      	mov	r2, r6
90029f2e:	463b      	mov	r3, r7
90029f30:	4628      	mov	r0, r5
90029f32:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90029f36:	f000 b94d 	b.w	9002a1d4 <_write_r>

90029f3a <__sseek>:
90029f3a:	b510      	push	{r4, lr}
90029f3c:	460c      	mov	r4, r1
90029f3e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029f42:	f000 f8ff 	bl	9002a144 <_lseek_r>
90029f46:	1c43      	adds	r3, r0, #1
90029f48:	89a3      	ldrh	r3, [r4, #12]
90029f4a:	bf15      	itete	ne
90029f4c:	6560      	strne	r0, [r4, #84]	@ 0x54
90029f4e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
90029f52:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
90029f56:	81a3      	strheq	r3, [r4, #12]
90029f58:	bf18      	it	ne
90029f5a:	81a3      	strhne	r3, [r4, #12]
90029f5c:	bd10      	pop	{r4, pc}

90029f5e <__sclose>:
90029f5e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029f62:	f000 b8df 	b.w	9002a124 <_close_r>

90029f66 <__swbuf_r>:
90029f66:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90029f68:	460e      	mov	r6, r1
90029f6a:	4614      	mov	r4, r2
90029f6c:	4605      	mov	r5, r0
90029f6e:	b118      	cbz	r0, 90029f78 <__swbuf_r+0x12>
90029f70:	6a03      	ldr	r3, [r0, #32]
90029f72:	b90b      	cbnz	r3, 90029f78 <__swbuf_r+0x12>
90029f74:	f7ff ff6c 	bl	90029e50 <__sinit>
90029f78:	69a3      	ldr	r3, [r4, #24]
90029f7a:	60a3      	str	r3, [r4, #8]
90029f7c:	89a3      	ldrh	r3, [r4, #12]
90029f7e:	071a      	lsls	r2, r3, #28
90029f80:	d501      	bpl.n	90029f86 <__swbuf_r+0x20>
90029f82:	6923      	ldr	r3, [r4, #16]
90029f84:	b943      	cbnz	r3, 90029f98 <__swbuf_r+0x32>
90029f86:	4621      	mov	r1, r4
90029f88:	4628      	mov	r0, r5
90029f8a:	f000 f82b 	bl	90029fe4 <__swsetup_r>
90029f8e:	b118      	cbz	r0, 90029f98 <__swbuf_r+0x32>
90029f90:	f04f 37ff 	mov.w	r7, #4294967295
90029f94:	4638      	mov	r0, r7
90029f96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90029f98:	6823      	ldr	r3, [r4, #0]
90029f9a:	6922      	ldr	r2, [r4, #16]
90029f9c:	1a98      	subs	r0, r3, r2
90029f9e:	6963      	ldr	r3, [r4, #20]
90029fa0:	b2f6      	uxtb	r6, r6
90029fa2:	4283      	cmp	r3, r0
90029fa4:	4637      	mov	r7, r6
90029fa6:	dc05      	bgt.n	90029fb4 <__swbuf_r+0x4e>
90029fa8:	4621      	mov	r1, r4
90029faa:	4628      	mov	r0, r5
90029fac:	f000 fd5a 	bl	9002aa64 <_fflush_r>
90029fb0:	2800      	cmp	r0, #0
90029fb2:	d1ed      	bne.n	90029f90 <__swbuf_r+0x2a>
90029fb4:	68a3      	ldr	r3, [r4, #8]
90029fb6:	3b01      	subs	r3, #1
90029fb8:	60a3      	str	r3, [r4, #8]
90029fba:	6823      	ldr	r3, [r4, #0]
90029fbc:	1c5a      	adds	r2, r3, #1
90029fbe:	6022      	str	r2, [r4, #0]
90029fc0:	701e      	strb	r6, [r3, #0]
90029fc2:	6962      	ldr	r2, [r4, #20]
90029fc4:	1c43      	adds	r3, r0, #1
90029fc6:	429a      	cmp	r2, r3
90029fc8:	d004      	beq.n	90029fd4 <__swbuf_r+0x6e>
90029fca:	89a3      	ldrh	r3, [r4, #12]
90029fcc:	07db      	lsls	r3, r3, #31
90029fce:	d5e1      	bpl.n	90029f94 <__swbuf_r+0x2e>
90029fd0:	2e0a      	cmp	r6, #10
90029fd2:	d1df      	bne.n	90029f94 <__swbuf_r+0x2e>
90029fd4:	4621      	mov	r1, r4
90029fd6:	4628      	mov	r0, r5
90029fd8:	f000 fd44 	bl	9002aa64 <_fflush_r>
90029fdc:	2800      	cmp	r0, #0
90029fde:	d0d9      	beq.n	90029f94 <__swbuf_r+0x2e>
90029fe0:	e7d6      	b.n	90029f90 <__swbuf_r+0x2a>
	...

90029fe4 <__swsetup_r>:
90029fe4:	b538      	push	{r3, r4, r5, lr}
90029fe6:	4b29      	ldr	r3, [pc, #164]	@ (9002a08c <__swsetup_r+0xa8>)
90029fe8:	4605      	mov	r5, r0
90029fea:	6818      	ldr	r0, [r3, #0]
90029fec:	460c      	mov	r4, r1
90029fee:	b118      	cbz	r0, 90029ff8 <__swsetup_r+0x14>
90029ff0:	6a03      	ldr	r3, [r0, #32]
90029ff2:	b90b      	cbnz	r3, 90029ff8 <__swsetup_r+0x14>
90029ff4:	f7ff ff2c 	bl	90029e50 <__sinit>
90029ff8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90029ffc:	0719      	lsls	r1, r3, #28
90029ffe:	d422      	bmi.n	9002a046 <__swsetup_r+0x62>
9002a000:	06da      	lsls	r2, r3, #27
9002a002:	d407      	bmi.n	9002a014 <__swsetup_r+0x30>
9002a004:	2209      	movs	r2, #9
9002a006:	602a      	str	r2, [r5, #0]
9002a008:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002a00c:	81a3      	strh	r3, [r4, #12]
9002a00e:	f04f 30ff 	mov.w	r0, #4294967295
9002a012:	e033      	b.n	9002a07c <__swsetup_r+0x98>
9002a014:	0758      	lsls	r0, r3, #29
9002a016:	d512      	bpl.n	9002a03e <__swsetup_r+0x5a>
9002a018:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002a01a:	b141      	cbz	r1, 9002a02e <__swsetup_r+0x4a>
9002a01c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002a020:	4299      	cmp	r1, r3
9002a022:	d002      	beq.n	9002a02a <__swsetup_r+0x46>
9002a024:	4628      	mov	r0, r5
9002a026:	f000 f97f 	bl	9002a328 <_free_r>
9002a02a:	2300      	movs	r3, #0
9002a02c:	6363      	str	r3, [r4, #52]	@ 0x34
9002a02e:	89a3      	ldrh	r3, [r4, #12]
9002a030:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
9002a034:	81a3      	strh	r3, [r4, #12]
9002a036:	2300      	movs	r3, #0
9002a038:	6063      	str	r3, [r4, #4]
9002a03a:	6923      	ldr	r3, [r4, #16]
9002a03c:	6023      	str	r3, [r4, #0]
9002a03e:	89a3      	ldrh	r3, [r4, #12]
9002a040:	f043 0308 	orr.w	r3, r3, #8
9002a044:	81a3      	strh	r3, [r4, #12]
9002a046:	6923      	ldr	r3, [r4, #16]
9002a048:	b94b      	cbnz	r3, 9002a05e <__swsetup_r+0x7a>
9002a04a:	89a3      	ldrh	r3, [r4, #12]
9002a04c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
9002a050:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
9002a054:	d003      	beq.n	9002a05e <__swsetup_r+0x7a>
9002a056:	4621      	mov	r1, r4
9002a058:	4628      	mov	r0, r5
9002a05a:	f000 fd51 	bl	9002ab00 <__smakebuf_r>
9002a05e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a062:	f013 0201 	ands.w	r2, r3, #1
9002a066:	d00a      	beq.n	9002a07e <__swsetup_r+0x9a>
9002a068:	2200      	movs	r2, #0
9002a06a:	60a2      	str	r2, [r4, #8]
9002a06c:	6962      	ldr	r2, [r4, #20]
9002a06e:	4252      	negs	r2, r2
9002a070:	61a2      	str	r2, [r4, #24]
9002a072:	6922      	ldr	r2, [r4, #16]
9002a074:	b942      	cbnz	r2, 9002a088 <__swsetup_r+0xa4>
9002a076:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
9002a07a:	d1c5      	bne.n	9002a008 <__swsetup_r+0x24>
9002a07c:	bd38      	pop	{r3, r4, r5, pc}
9002a07e:	0799      	lsls	r1, r3, #30
9002a080:	bf58      	it	pl
9002a082:	6962      	ldrpl	r2, [r4, #20]
9002a084:	60a2      	str	r2, [r4, #8]
9002a086:	e7f4      	b.n	9002a072 <__swsetup_r+0x8e>
9002a088:	2000      	movs	r0, #0
9002a08a:	e7f7      	b.n	9002a07c <__swsetup_r+0x98>
9002a08c:	24000134 	.word	0x24000134

9002a090 <memset>:
9002a090:	4402      	add	r2, r0
9002a092:	4603      	mov	r3, r0
9002a094:	4293      	cmp	r3, r2
9002a096:	d100      	bne.n	9002a09a <memset+0xa>
9002a098:	4770      	bx	lr
9002a09a:	f803 1b01 	strb.w	r1, [r3], #1
9002a09e:	e7f9      	b.n	9002a094 <memset+0x4>

9002a0a0 <strncmp>:
9002a0a0:	b510      	push	{r4, lr}
9002a0a2:	b16a      	cbz	r2, 9002a0c0 <strncmp+0x20>
9002a0a4:	3901      	subs	r1, #1
9002a0a6:	1884      	adds	r4, r0, r2
9002a0a8:	f810 2b01 	ldrb.w	r2, [r0], #1
9002a0ac:	f811 3f01 	ldrb.w	r3, [r1, #1]!
9002a0b0:	429a      	cmp	r2, r3
9002a0b2:	d103      	bne.n	9002a0bc <strncmp+0x1c>
9002a0b4:	42a0      	cmp	r0, r4
9002a0b6:	d001      	beq.n	9002a0bc <strncmp+0x1c>
9002a0b8:	2a00      	cmp	r2, #0
9002a0ba:	d1f5      	bne.n	9002a0a8 <strncmp+0x8>
9002a0bc:	1ad0      	subs	r0, r2, r3
9002a0be:	bd10      	pop	{r4, pc}
9002a0c0:	4610      	mov	r0, r2
9002a0c2:	e7fc      	b.n	9002a0be <strncmp+0x1e>

9002a0c4 <_raise_r>:
9002a0c4:	291f      	cmp	r1, #31
9002a0c6:	b538      	push	{r3, r4, r5, lr}
9002a0c8:	4605      	mov	r5, r0
9002a0ca:	460c      	mov	r4, r1
9002a0cc:	d904      	bls.n	9002a0d8 <_raise_r+0x14>
9002a0ce:	2316      	movs	r3, #22
9002a0d0:	6003      	str	r3, [r0, #0]
9002a0d2:	f04f 30ff 	mov.w	r0, #4294967295
9002a0d6:	bd38      	pop	{r3, r4, r5, pc}
9002a0d8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
9002a0da:	b112      	cbz	r2, 9002a0e2 <_raise_r+0x1e>
9002a0dc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9002a0e0:	b94b      	cbnz	r3, 9002a0f6 <_raise_r+0x32>
9002a0e2:	4628      	mov	r0, r5
9002a0e4:	f000 f864 	bl	9002a1b0 <_getpid_r>
9002a0e8:	4622      	mov	r2, r4
9002a0ea:	4601      	mov	r1, r0
9002a0ec:	4628      	mov	r0, r5
9002a0ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002a0f2:	f000 b84b 	b.w	9002a18c <_kill_r>
9002a0f6:	2b01      	cmp	r3, #1
9002a0f8:	d00a      	beq.n	9002a110 <_raise_r+0x4c>
9002a0fa:	1c59      	adds	r1, r3, #1
9002a0fc:	d103      	bne.n	9002a106 <_raise_r+0x42>
9002a0fe:	2316      	movs	r3, #22
9002a100:	6003      	str	r3, [r0, #0]
9002a102:	2001      	movs	r0, #1
9002a104:	e7e7      	b.n	9002a0d6 <_raise_r+0x12>
9002a106:	2100      	movs	r1, #0
9002a108:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
9002a10c:	4620      	mov	r0, r4
9002a10e:	4798      	blx	r3
9002a110:	2000      	movs	r0, #0
9002a112:	e7e0      	b.n	9002a0d6 <_raise_r+0x12>

9002a114 <raise>:
9002a114:	4b02      	ldr	r3, [pc, #8]	@ (9002a120 <raise+0xc>)
9002a116:	4601      	mov	r1, r0
9002a118:	6818      	ldr	r0, [r3, #0]
9002a11a:	f7ff bfd3 	b.w	9002a0c4 <_raise_r>
9002a11e:	bf00      	nop
9002a120:	24000134 	.word	0x24000134

9002a124 <_close_r>:
9002a124:	b538      	push	{r3, r4, r5, lr}
9002a126:	4d06      	ldr	r5, [pc, #24]	@ (9002a140 <_close_r+0x1c>)
9002a128:	2300      	movs	r3, #0
9002a12a:	4604      	mov	r4, r0
9002a12c:	4608      	mov	r0, r1
9002a12e:	602b      	str	r3, [r5, #0]
9002a130:	f7da f922 	bl	90004378 <_close>
9002a134:	1c43      	adds	r3, r0, #1
9002a136:	d102      	bne.n	9002a13e <_close_r+0x1a>
9002a138:	682b      	ldr	r3, [r5, #0]
9002a13a:	b103      	cbz	r3, 9002a13e <_close_r+0x1a>
9002a13c:	6023      	str	r3, [r4, #0]
9002a13e:	bd38      	pop	{r3, r4, r5, pc}
9002a140:	24023f74 	.word	0x24023f74

9002a144 <_lseek_r>:
9002a144:	b538      	push	{r3, r4, r5, lr}
9002a146:	4d07      	ldr	r5, [pc, #28]	@ (9002a164 <_lseek_r+0x20>)
9002a148:	4604      	mov	r4, r0
9002a14a:	4608      	mov	r0, r1
9002a14c:	4611      	mov	r1, r2
9002a14e:	2200      	movs	r2, #0
9002a150:	602a      	str	r2, [r5, #0]
9002a152:	461a      	mov	r2, r3
9002a154:	f7da f91c 	bl	90004390 <_lseek>
9002a158:	1c43      	adds	r3, r0, #1
9002a15a:	d102      	bne.n	9002a162 <_lseek_r+0x1e>
9002a15c:	682b      	ldr	r3, [r5, #0]
9002a15e:	b103      	cbz	r3, 9002a162 <_lseek_r+0x1e>
9002a160:	6023      	str	r3, [r4, #0]
9002a162:	bd38      	pop	{r3, r4, r5, pc}
9002a164:	24023f74 	.word	0x24023f74

9002a168 <_read_r>:
9002a168:	b538      	push	{r3, r4, r5, lr}
9002a16a:	4d07      	ldr	r5, [pc, #28]	@ (9002a188 <_read_r+0x20>)
9002a16c:	4604      	mov	r4, r0
9002a16e:	4608      	mov	r0, r1
9002a170:	4611      	mov	r1, r2
9002a172:	2200      	movs	r2, #0
9002a174:	602a      	str	r2, [r5, #0]
9002a176:	461a      	mov	r2, r3
9002a178:	f7da f8e2 	bl	90004340 <_read>
9002a17c:	1c43      	adds	r3, r0, #1
9002a17e:	d102      	bne.n	9002a186 <_read_r+0x1e>
9002a180:	682b      	ldr	r3, [r5, #0]
9002a182:	b103      	cbz	r3, 9002a186 <_read_r+0x1e>
9002a184:	6023      	str	r3, [r4, #0]
9002a186:	bd38      	pop	{r3, r4, r5, pc}
9002a188:	24023f74 	.word	0x24023f74

9002a18c <_kill_r>:
9002a18c:	b538      	push	{r3, r4, r5, lr}
9002a18e:	4d07      	ldr	r5, [pc, #28]	@ (9002a1ac <_kill_r+0x20>)
9002a190:	2300      	movs	r3, #0
9002a192:	4604      	mov	r4, r0
9002a194:	4608      	mov	r0, r1
9002a196:	4611      	mov	r1, r2
9002a198:	602b      	str	r3, [r5, #0]
9002a19a:	f7da f8c1 	bl	90004320 <_kill>
9002a19e:	1c43      	adds	r3, r0, #1
9002a1a0:	d102      	bne.n	9002a1a8 <_kill_r+0x1c>
9002a1a2:	682b      	ldr	r3, [r5, #0]
9002a1a4:	b103      	cbz	r3, 9002a1a8 <_kill_r+0x1c>
9002a1a6:	6023      	str	r3, [r4, #0]
9002a1a8:	bd38      	pop	{r3, r4, r5, pc}
9002a1aa:	bf00      	nop
9002a1ac:	24023f74 	.word	0x24023f74

9002a1b0 <_getpid_r>:
9002a1b0:	f7da b8b4 	b.w	9000431c <_getpid>

9002a1b4 <_sbrk_r>:
9002a1b4:	b538      	push	{r3, r4, r5, lr}
9002a1b6:	4d06      	ldr	r5, [pc, #24]	@ (9002a1d0 <_sbrk_r+0x1c>)
9002a1b8:	2300      	movs	r3, #0
9002a1ba:	4604      	mov	r4, r0
9002a1bc:	4608      	mov	r0, r1
9002a1be:	602b      	str	r3, [r5, #0]
9002a1c0:	f7da f8e8 	bl	90004394 <_sbrk>
9002a1c4:	1c43      	adds	r3, r0, #1
9002a1c6:	d102      	bne.n	9002a1ce <_sbrk_r+0x1a>
9002a1c8:	682b      	ldr	r3, [r5, #0]
9002a1ca:	b103      	cbz	r3, 9002a1ce <_sbrk_r+0x1a>
9002a1cc:	6023      	str	r3, [r4, #0]
9002a1ce:	bd38      	pop	{r3, r4, r5, pc}
9002a1d0:	24023f74 	.word	0x24023f74

9002a1d4 <_write_r>:
9002a1d4:	b538      	push	{r3, r4, r5, lr}
9002a1d6:	4d07      	ldr	r5, [pc, #28]	@ (9002a1f4 <_write_r+0x20>)
9002a1d8:	4604      	mov	r4, r0
9002a1da:	4608      	mov	r0, r1
9002a1dc:	4611      	mov	r1, r2
9002a1de:	2200      	movs	r2, #0
9002a1e0:	602a      	str	r2, [r5, #0]
9002a1e2:	461a      	mov	r2, r3
9002a1e4:	f7da f8ba 	bl	9000435c <_write>
9002a1e8:	1c43      	adds	r3, r0, #1
9002a1ea:	d102      	bne.n	9002a1f2 <_write_r+0x1e>
9002a1ec:	682b      	ldr	r3, [r5, #0]
9002a1ee:	b103      	cbz	r3, 9002a1f2 <_write_r+0x1e>
9002a1f0:	6023      	str	r3, [r4, #0]
9002a1f2:	bd38      	pop	{r3, r4, r5, pc}
9002a1f4:	24023f74 	.word	0x24023f74

9002a1f8 <__errno>:
9002a1f8:	4b01      	ldr	r3, [pc, #4]	@ (9002a200 <__errno+0x8>)
9002a1fa:	6818      	ldr	r0, [r3, #0]
9002a1fc:	4770      	bx	lr
9002a1fe:	bf00      	nop
9002a200:	24000134 	.word	0x24000134

9002a204 <__libc_init_array>:
9002a204:	b570      	push	{r4, r5, r6, lr}
9002a206:	4d0d      	ldr	r5, [pc, #52]	@ (9002a23c <__libc_init_array+0x38>)
9002a208:	4c0d      	ldr	r4, [pc, #52]	@ (9002a240 <__libc_init_array+0x3c>)
9002a20a:	1b64      	subs	r4, r4, r5
9002a20c:	10a4      	asrs	r4, r4, #2
9002a20e:	2600      	movs	r6, #0
9002a210:	42a6      	cmp	r6, r4
9002a212:	d109      	bne.n	9002a228 <__libc_init_array+0x24>
9002a214:	4d0b      	ldr	r5, [pc, #44]	@ (9002a244 <__libc_init_array+0x40>)
9002a216:	4c0c      	ldr	r4, [pc, #48]	@ (9002a248 <__libc_init_array+0x44>)
9002a218:	f000 fcd0 	bl	9002abbc <_init>
9002a21c:	1b64      	subs	r4, r4, r5
9002a21e:	10a4      	asrs	r4, r4, #2
9002a220:	2600      	movs	r6, #0
9002a222:	42a6      	cmp	r6, r4
9002a224:	d105      	bne.n	9002a232 <__libc_init_array+0x2e>
9002a226:	bd70      	pop	{r4, r5, r6, pc}
9002a228:	f855 3b04 	ldr.w	r3, [r5], #4
9002a22c:	4798      	blx	r3
9002a22e:	3601      	adds	r6, #1
9002a230:	e7ee      	b.n	9002a210 <__libc_init_array+0xc>
9002a232:	f855 3b04 	ldr.w	r3, [r5], #4
9002a236:	4798      	blx	r3
9002a238:	3601      	adds	r6, #1
9002a23a:	e7f2      	b.n	9002a222 <__libc_init_array+0x1e>
9002a23c:	9002e57c 	.word	0x9002e57c
9002a240:	9002e57c 	.word	0x9002e57c
9002a244:	9002e57c 	.word	0x9002e57c
9002a248:	9002e598 	.word	0x9002e598

9002a24c <__retarget_lock_init_recursive>:
9002a24c:	4770      	bx	lr

9002a24e <__retarget_lock_acquire_recursive>:
9002a24e:	4770      	bx	lr

9002a250 <__retarget_lock_release_recursive>:
9002a250:	4770      	bx	lr

9002a252 <memcpy>:
9002a252:	440a      	add	r2, r1
9002a254:	4291      	cmp	r1, r2
9002a256:	f100 33ff 	add.w	r3, r0, #4294967295
9002a25a:	d100      	bne.n	9002a25e <memcpy+0xc>
9002a25c:	4770      	bx	lr
9002a25e:	b510      	push	{r4, lr}
9002a260:	f811 4b01 	ldrb.w	r4, [r1], #1
9002a264:	f803 4f01 	strb.w	r4, [r3, #1]!
9002a268:	4291      	cmp	r1, r2
9002a26a:	d1f9      	bne.n	9002a260 <memcpy+0xe>
9002a26c:	bd10      	pop	{r4, pc}
	...

9002a270 <__register_exitproc>:
9002a270:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002a274:	4d27      	ldr	r5, [pc, #156]	@ (9002a314 <__register_exitproc+0xa4>)
9002a276:	4607      	mov	r7, r0
9002a278:	6828      	ldr	r0, [r5, #0]
9002a27a:	4691      	mov	r9, r2
9002a27c:	460e      	mov	r6, r1
9002a27e:	4698      	mov	r8, r3
9002a280:	f7ff ffe5 	bl	9002a24e <__retarget_lock_acquire_recursive>
9002a284:	4a24      	ldr	r2, [pc, #144]	@ (9002a318 <__register_exitproc+0xa8>)
9002a286:	6814      	ldr	r4, [r2, #0]
9002a288:	b93c      	cbnz	r4, 9002a29a <__register_exitproc+0x2a>
9002a28a:	4b24      	ldr	r3, [pc, #144]	@ (9002a31c <__register_exitproc+0xac>)
9002a28c:	6013      	str	r3, [r2, #0]
9002a28e:	4a24      	ldr	r2, [pc, #144]	@ (9002a320 <__register_exitproc+0xb0>)
9002a290:	b112      	cbz	r2, 9002a298 <__register_exitproc+0x28>
9002a292:	6812      	ldr	r2, [r2, #0]
9002a294:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
9002a298:	4c20      	ldr	r4, [pc, #128]	@ (9002a31c <__register_exitproc+0xac>)
9002a29a:	6863      	ldr	r3, [r4, #4]
9002a29c:	2b1f      	cmp	r3, #31
9002a29e:	dd06      	ble.n	9002a2ae <__register_exitproc+0x3e>
9002a2a0:	6828      	ldr	r0, [r5, #0]
9002a2a2:	f7ff ffd5 	bl	9002a250 <__retarget_lock_release_recursive>
9002a2a6:	f04f 30ff 	mov.w	r0, #4294967295
9002a2aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002a2ae:	b32f      	cbz	r7, 9002a2fc <__register_exitproc+0x8c>
9002a2b0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9002a2b4:	b968      	cbnz	r0, 9002a2d2 <__register_exitproc+0x62>
9002a2b6:	4b1b      	ldr	r3, [pc, #108]	@ (9002a324 <__register_exitproc+0xb4>)
9002a2b8:	2b00      	cmp	r3, #0
9002a2ba:	d0f1      	beq.n	9002a2a0 <__register_exitproc+0x30>
9002a2bc:	f44f 7084 	mov.w	r0, #264	@ 0x108
9002a2c0:	f7ff fc6e 	bl	90029ba0 <malloc>
9002a2c4:	2800      	cmp	r0, #0
9002a2c6:	d0eb      	beq.n	9002a2a0 <__register_exitproc+0x30>
9002a2c8:	2300      	movs	r3, #0
9002a2ca:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
9002a2ce:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
9002a2d2:	6863      	ldr	r3, [r4, #4]
9002a2d4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002a2d8:	2201      	movs	r2, #1
9002a2da:	409a      	lsls	r2, r3
9002a2dc:	eb00 0183 	add.w	r1, r0, r3, lsl #2
9002a2e0:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
9002a2e4:	4313      	orrs	r3, r2
9002a2e6:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
9002a2ea:	2f02      	cmp	r7, #2
9002a2ec:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
9002a2f0:	bf02      	ittt	eq
9002a2f2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
9002a2f6:	4313      	orreq	r3, r2
9002a2f8:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
9002a2fc:	6863      	ldr	r3, [r4, #4]
9002a2fe:	6828      	ldr	r0, [r5, #0]
9002a300:	1c5a      	adds	r2, r3, #1
9002a302:	3302      	adds	r3, #2
9002a304:	6062      	str	r2, [r4, #4]
9002a306:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
9002a30a:	f7ff ffa1 	bl	9002a250 <__retarget_lock_release_recursive>
9002a30e:	2000      	movs	r0, #0
9002a310:	e7cb      	b.n	9002a2aa <__register_exitproc+0x3a>
9002a312:	bf00      	nop
9002a314:	24000184 	.word	0x24000184
9002a318:	24024008 	.word	0x24024008
9002a31c:	24023f7c 	.word	0x24023f7c
9002a320:	9002e244 	.word	0x9002e244
9002a324:	90029ba1 	.word	0x90029ba1

9002a328 <_free_r>:
9002a328:	b538      	push	{r3, r4, r5, lr}
9002a32a:	4605      	mov	r5, r0
9002a32c:	2900      	cmp	r1, #0
9002a32e:	d041      	beq.n	9002a3b4 <_free_r+0x8c>
9002a330:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002a334:	1f0c      	subs	r4, r1, #4
9002a336:	2b00      	cmp	r3, #0
9002a338:	bfb8      	it	lt
9002a33a:	18e4      	addlt	r4, r4, r3
9002a33c:	f7ff fce2 	bl	90029d04 <__malloc_lock>
9002a340:	4a1d      	ldr	r2, [pc, #116]	@ (9002a3b8 <_free_r+0x90>)
9002a342:	6813      	ldr	r3, [r2, #0]
9002a344:	b933      	cbnz	r3, 9002a354 <_free_r+0x2c>
9002a346:	6063      	str	r3, [r4, #4]
9002a348:	6014      	str	r4, [r2, #0]
9002a34a:	4628      	mov	r0, r5
9002a34c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002a350:	f7ff bcde 	b.w	90029d10 <__malloc_unlock>
9002a354:	42a3      	cmp	r3, r4
9002a356:	d908      	bls.n	9002a36a <_free_r+0x42>
9002a358:	6820      	ldr	r0, [r4, #0]
9002a35a:	1821      	adds	r1, r4, r0
9002a35c:	428b      	cmp	r3, r1
9002a35e:	bf01      	itttt	eq
9002a360:	6819      	ldreq	r1, [r3, #0]
9002a362:	685b      	ldreq	r3, [r3, #4]
9002a364:	1809      	addeq	r1, r1, r0
9002a366:	6021      	streq	r1, [r4, #0]
9002a368:	e7ed      	b.n	9002a346 <_free_r+0x1e>
9002a36a:	461a      	mov	r2, r3
9002a36c:	685b      	ldr	r3, [r3, #4]
9002a36e:	b10b      	cbz	r3, 9002a374 <_free_r+0x4c>
9002a370:	42a3      	cmp	r3, r4
9002a372:	d9fa      	bls.n	9002a36a <_free_r+0x42>
9002a374:	6811      	ldr	r1, [r2, #0]
9002a376:	1850      	adds	r0, r2, r1
9002a378:	42a0      	cmp	r0, r4
9002a37a:	d10b      	bne.n	9002a394 <_free_r+0x6c>
9002a37c:	6820      	ldr	r0, [r4, #0]
9002a37e:	4401      	add	r1, r0
9002a380:	1850      	adds	r0, r2, r1
9002a382:	4283      	cmp	r3, r0
9002a384:	6011      	str	r1, [r2, #0]
9002a386:	d1e0      	bne.n	9002a34a <_free_r+0x22>
9002a388:	6818      	ldr	r0, [r3, #0]
9002a38a:	685b      	ldr	r3, [r3, #4]
9002a38c:	6053      	str	r3, [r2, #4]
9002a38e:	4408      	add	r0, r1
9002a390:	6010      	str	r0, [r2, #0]
9002a392:	e7da      	b.n	9002a34a <_free_r+0x22>
9002a394:	d902      	bls.n	9002a39c <_free_r+0x74>
9002a396:	230c      	movs	r3, #12
9002a398:	602b      	str	r3, [r5, #0]
9002a39a:	e7d6      	b.n	9002a34a <_free_r+0x22>
9002a39c:	6820      	ldr	r0, [r4, #0]
9002a39e:	1821      	adds	r1, r4, r0
9002a3a0:	428b      	cmp	r3, r1
9002a3a2:	bf04      	itt	eq
9002a3a4:	6819      	ldreq	r1, [r3, #0]
9002a3a6:	685b      	ldreq	r3, [r3, #4]
9002a3a8:	6063      	str	r3, [r4, #4]
9002a3aa:	bf04      	itt	eq
9002a3ac:	1809      	addeq	r1, r1, r0
9002a3ae:	6021      	streq	r1, [r4, #0]
9002a3b0:	6054      	str	r4, [r2, #4]
9002a3b2:	e7ca      	b.n	9002a34a <_free_r+0x22>
9002a3b4:	bd38      	pop	{r3, r4, r5, pc}
9002a3b6:	bf00      	nop
9002a3b8:	24023e34 	.word	0x24023e34

9002a3bc <__sfputc_r>:
9002a3bc:	6893      	ldr	r3, [r2, #8]
9002a3be:	3b01      	subs	r3, #1
9002a3c0:	2b00      	cmp	r3, #0
9002a3c2:	b410      	push	{r4}
9002a3c4:	6093      	str	r3, [r2, #8]
9002a3c6:	da08      	bge.n	9002a3da <__sfputc_r+0x1e>
9002a3c8:	6994      	ldr	r4, [r2, #24]
9002a3ca:	42a3      	cmp	r3, r4
9002a3cc:	db01      	blt.n	9002a3d2 <__sfputc_r+0x16>
9002a3ce:	290a      	cmp	r1, #10
9002a3d0:	d103      	bne.n	9002a3da <__sfputc_r+0x1e>
9002a3d2:	f85d 4b04 	ldr.w	r4, [sp], #4
9002a3d6:	f7ff bdc6 	b.w	90029f66 <__swbuf_r>
9002a3da:	6813      	ldr	r3, [r2, #0]
9002a3dc:	1c58      	adds	r0, r3, #1
9002a3de:	6010      	str	r0, [r2, #0]
9002a3e0:	7019      	strb	r1, [r3, #0]
9002a3e2:	4608      	mov	r0, r1
9002a3e4:	f85d 4b04 	ldr.w	r4, [sp], #4
9002a3e8:	4770      	bx	lr

9002a3ea <__sfputs_r>:
9002a3ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a3ec:	4606      	mov	r6, r0
9002a3ee:	460f      	mov	r7, r1
9002a3f0:	4614      	mov	r4, r2
9002a3f2:	18d5      	adds	r5, r2, r3
9002a3f4:	42ac      	cmp	r4, r5
9002a3f6:	d101      	bne.n	9002a3fc <__sfputs_r+0x12>
9002a3f8:	2000      	movs	r0, #0
9002a3fa:	e007      	b.n	9002a40c <__sfputs_r+0x22>
9002a3fc:	f814 1b01 	ldrb.w	r1, [r4], #1
9002a400:	463a      	mov	r2, r7
9002a402:	4630      	mov	r0, r6
9002a404:	f7ff ffda 	bl	9002a3bc <__sfputc_r>
9002a408:	1c43      	adds	r3, r0, #1
9002a40a:	d1f3      	bne.n	9002a3f4 <__sfputs_r+0xa>
9002a40c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9002a410 <_vfiprintf_r>:
9002a410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002a414:	460d      	mov	r5, r1
9002a416:	b09d      	sub	sp, #116	@ 0x74
9002a418:	4614      	mov	r4, r2
9002a41a:	4698      	mov	r8, r3
9002a41c:	4606      	mov	r6, r0
9002a41e:	b118      	cbz	r0, 9002a428 <_vfiprintf_r+0x18>
9002a420:	6a03      	ldr	r3, [r0, #32]
9002a422:	b90b      	cbnz	r3, 9002a428 <_vfiprintf_r+0x18>
9002a424:	f7ff fd14 	bl	90029e50 <__sinit>
9002a428:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002a42a:	07d9      	lsls	r1, r3, #31
9002a42c:	d405      	bmi.n	9002a43a <_vfiprintf_r+0x2a>
9002a42e:	89ab      	ldrh	r3, [r5, #12]
9002a430:	059a      	lsls	r2, r3, #22
9002a432:	d402      	bmi.n	9002a43a <_vfiprintf_r+0x2a>
9002a434:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002a436:	f7ff ff0a 	bl	9002a24e <__retarget_lock_acquire_recursive>
9002a43a:	89ab      	ldrh	r3, [r5, #12]
9002a43c:	071b      	lsls	r3, r3, #28
9002a43e:	d501      	bpl.n	9002a444 <_vfiprintf_r+0x34>
9002a440:	692b      	ldr	r3, [r5, #16]
9002a442:	b99b      	cbnz	r3, 9002a46c <_vfiprintf_r+0x5c>
9002a444:	4629      	mov	r1, r5
9002a446:	4630      	mov	r0, r6
9002a448:	f7ff fdcc 	bl	90029fe4 <__swsetup_r>
9002a44c:	b170      	cbz	r0, 9002a46c <_vfiprintf_r+0x5c>
9002a44e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002a450:	07dc      	lsls	r4, r3, #31
9002a452:	d504      	bpl.n	9002a45e <_vfiprintf_r+0x4e>
9002a454:	f04f 30ff 	mov.w	r0, #4294967295
9002a458:	b01d      	add	sp, #116	@ 0x74
9002a45a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a45e:	89ab      	ldrh	r3, [r5, #12]
9002a460:	0598      	lsls	r0, r3, #22
9002a462:	d4f7      	bmi.n	9002a454 <_vfiprintf_r+0x44>
9002a464:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002a466:	f7ff fef3 	bl	9002a250 <__retarget_lock_release_recursive>
9002a46a:	e7f3      	b.n	9002a454 <_vfiprintf_r+0x44>
9002a46c:	2300      	movs	r3, #0
9002a46e:	9309      	str	r3, [sp, #36]	@ 0x24
9002a470:	2320      	movs	r3, #32
9002a472:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
9002a476:	f8cd 800c 	str.w	r8, [sp, #12]
9002a47a:	2330      	movs	r3, #48	@ 0x30
9002a47c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 9002a62c <_vfiprintf_r+0x21c>
9002a480:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
9002a484:	f04f 0901 	mov.w	r9, #1
9002a488:	4623      	mov	r3, r4
9002a48a:	469a      	mov	sl, r3
9002a48c:	f813 2b01 	ldrb.w	r2, [r3], #1
9002a490:	b10a      	cbz	r2, 9002a496 <_vfiprintf_r+0x86>
9002a492:	2a25      	cmp	r2, #37	@ 0x25
9002a494:	d1f9      	bne.n	9002a48a <_vfiprintf_r+0x7a>
9002a496:	ebba 0b04 	subs.w	fp, sl, r4
9002a49a:	d00b      	beq.n	9002a4b4 <_vfiprintf_r+0xa4>
9002a49c:	465b      	mov	r3, fp
9002a49e:	4622      	mov	r2, r4
9002a4a0:	4629      	mov	r1, r5
9002a4a2:	4630      	mov	r0, r6
9002a4a4:	f7ff ffa1 	bl	9002a3ea <__sfputs_r>
9002a4a8:	3001      	adds	r0, #1
9002a4aa:	f000 80a7 	beq.w	9002a5fc <_vfiprintf_r+0x1ec>
9002a4ae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002a4b0:	445a      	add	r2, fp
9002a4b2:	9209      	str	r2, [sp, #36]	@ 0x24
9002a4b4:	f89a 3000 	ldrb.w	r3, [sl]
9002a4b8:	2b00      	cmp	r3, #0
9002a4ba:	f000 809f 	beq.w	9002a5fc <_vfiprintf_r+0x1ec>
9002a4be:	2300      	movs	r3, #0
9002a4c0:	f04f 32ff 	mov.w	r2, #4294967295
9002a4c4:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002a4c8:	f10a 0a01 	add.w	sl, sl, #1
9002a4cc:	9304      	str	r3, [sp, #16]
9002a4ce:	9307      	str	r3, [sp, #28]
9002a4d0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
9002a4d4:	931a      	str	r3, [sp, #104]	@ 0x68
9002a4d6:	4654      	mov	r4, sl
9002a4d8:	2205      	movs	r2, #5
9002a4da:	f814 1b01 	ldrb.w	r1, [r4], #1
9002a4de:	4853      	ldr	r0, [pc, #332]	@ (9002a62c <_vfiprintf_r+0x21c>)
9002a4e0:	f7d5 fefe 	bl	900002e0 <memchr>
9002a4e4:	9a04      	ldr	r2, [sp, #16]
9002a4e6:	b9d8      	cbnz	r0, 9002a520 <_vfiprintf_r+0x110>
9002a4e8:	06d1      	lsls	r1, r2, #27
9002a4ea:	bf44      	itt	mi
9002a4ec:	2320      	movmi	r3, #32
9002a4ee:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002a4f2:	0713      	lsls	r3, r2, #28
9002a4f4:	bf44      	itt	mi
9002a4f6:	232b      	movmi	r3, #43	@ 0x2b
9002a4f8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002a4fc:	f89a 3000 	ldrb.w	r3, [sl]
9002a500:	2b2a      	cmp	r3, #42	@ 0x2a
9002a502:	d015      	beq.n	9002a530 <_vfiprintf_r+0x120>
9002a504:	9a07      	ldr	r2, [sp, #28]
9002a506:	4654      	mov	r4, sl
9002a508:	2000      	movs	r0, #0
9002a50a:	f04f 0c0a 	mov.w	ip, #10
9002a50e:	4621      	mov	r1, r4
9002a510:	f811 3b01 	ldrb.w	r3, [r1], #1
9002a514:	3b30      	subs	r3, #48	@ 0x30
9002a516:	2b09      	cmp	r3, #9
9002a518:	d94b      	bls.n	9002a5b2 <_vfiprintf_r+0x1a2>
9002a51a:	b1b0      	cbz	r0, 9002a54a <_vfiprintf_r+0x13a>
9002a51c:	9207      	str	r2, [sp, #28]
9002a51e:	e014      	b.n	9002a54a <_vfiprintf_r+0x13a>
9002a520:	eba0 0308 	sub.w	r3, r0, r8
9002a524:	fa09 f303 	lsl.w	r3, r9, r3
9002a528:	4313      	orrs	r3, r2
9002a52a:	9304      	str	r3, [sp, #16]
9002a52c:	46a2      	mov	sl, r4
9002a52e:	e7d2      	b.n	9002a4d6 <_vfiprintf_r+0xc6>
9002a530:	9b03      	ldr	r3, [sp, #12]
9002a532:	1d19      	adds	r1, r3, #4
9002a534:	681b      	ldr	r3, [r3, #0]
9002a536:	9103      	str	r1, [sp, #12]
9002a538:	2b00      	cmp	r3, #0
9002a53a:	bfbb      	ittet	lt
9002a53c:	425b      	neglt	r3, r3
9002a53e:	f042 0202 	orrlt.w	r2, r2, #2
9002a542:	9307      	strge	r3, [sp, #28]
9002a544:	9307      	strlt	r3, [sp, #28]
9002a546:	bfb8      	it	lt
9002a548:	9204      	strlt	r2, [sp, #16]
9002a54a:	7823      	ldrb	r3, [r4, #0]
9002a54c:	2b2e      	cmp	r3, #46	@ 0x2e
9002a54e:	d10a      	bne.n	9002a566 <_vfiprintf_r+0x156>
9002a550:	7863      	ldrb	r3, [r4, #1]
9002a552:	2b2a      	cmp	r3, #42	@ 0x2a
9002a554:	d132      	bne.n	9002a5bc <_vfiprintf_r+0x1ac>
9002a556:	9b03      	ldr	r3, [sp, #12]
9002a558:	1d1a      	adds	r2, r3, #4
9002a55a:	681b      	ldr	r3, [r3, #0]
9002a55c:	9203      	str	r2, [sp, #12]
9002a55e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
9002a562:	3402      	adds	r4, #2
9002a564:	9305      	str	r3, [sp, #20]
9002a566:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 9002a63c <_vfiprintf_r+0x22c>
9002a56a:	7821      	ldrb	r1, [r4, #0]
9002a56c:	2203      	movs	r2, #3
9002a56e:	4650      	mov	r0, sl
9002a570:	f7d5 feb6 	bl	900002e0 <memchr>
9002a574:	b138      	cbz	r0, 9002a586 <_vfiprintf_r+0x176>
9002a576:	9b04      	ldr	r3, [sp, #16]
9002a578:	eba0 000a 	sub.w	r0, r0, sl
9002a57c:	2240      	movs	r2, #64	@ 0x40
9002a57e:	4082      	lsls	r2, r0
9002a580:	4313      	orrs	r3, r2
9002a582:	3401      	adds	r4, #1
9002a584:	9304      	str	r3, [sp, #16]
9002a586:	f814 1b01 	ldrb.w	r1, [r4], #1
9002a58a:	4829      	ldr	r0, [pc, #164]	@ (9002a630 <_vfiprintf_r+0x220>)
9002a58c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
9002a590:	2206      	movs	r2, #6
9002a592:	f7d5 fea5 	bl	900002e0 <memchr>
9002a596:	2800      	cmp	r0, #0
9002a598:	d03f      	beq.n	9002a61a <_vfiprintf_r+0x20a>
9002a59a:	4b26      	ldr	r3, [pc, #152]	@ (9002a634 <_vfiprintf_r+0x224>)
9002a59c:	bb1b      	cbnz	r3, 9002a5e6 <_vfiprintf_r+0x1d6>
9002a59e:	9b03      	ldr	r3, [sp, #12]
9002a5a0:	3307      	adds	r3, #7
9002a5a2:	f023 0307 	bic.w	r3, r3, #7
9002a5a6:	3308      	adds	r3, #8
9002a5a8:	9303      	str	r3, [sp, #12]
9002a5aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002a5ac:	443b      	add	r3, r7
9002a5ae:	9309      	str	r3, [sp, #36]	@ 0x24
9002a5b0:	e76a      	b.n	9002a488 <_vfiprintf_r+0x78>
9002a5b2:	fb0c 3202 	mla	r2, ip, r2, r3
9002a5b6:	460c      	mov	r4, r1
9002a5b8:	2001      	movs	r0, #1
9002a5ba:	e7a8      	b.n	9002a50e <_vfiprintf_r+0xfe>
9002a5bc:	2300      	movs	r3, #0
9002a5be:	3401      	adds	r4, #1
9002a5c0:	9305      	str	r3, [sp, #20]
9002a5c2:	4619      	mov	r1, r3
9002a5c4:	f04f 0c0a 	mov.w	ip, #10
9002a5c8:	4620      	mov	r0, r4
9002a5ca:	f810 2b01 	ldrb.w	r2, [r0], #1
9002a5ce:	3a30      	subs	r2, #48	@ 0x30
9002a5d0:	2a09      	cmp	r2, #9
9002a5d2:	d903      	bls.n	9002a5dc <_vfiprintf_r+0x1cc>
9002a5d4:	2b00      	cmp	r3, #0
9002a5d6:	d0c6      	beq.n	9002a566 <_vfiprintf_r+0x156>
9002a5d8:	9105      	str	r1, [sp, #20]
9002a5da:	e7c4      	b.n	9002a566 <_vfiprintf_r+0x156>
9002a5dc:	fb0c 2101 	mla	r1, ip, r1, r2
9002a5e0:	4604      	mov	r4, r0
9002a5e2:	2301      	movs	r3, #1
9002a5e4:	e7f0      	b.n	9002a5c8 <_vfiprintf_r+0x1b8>
9002a5e6:	ab03      	add	r3, sp, #12
9002a5e8:	9300      	str	r3, [sp, #0]
9002a5ea:	462a      	mov	r2, r5
9002a5ec:	4b12      	ldr	r3, [pc, #72]	@ (9002a638 <_vfiprintf_r+0x228>)
9002a5ee:	a904      	add	r1, sp, #16
9002a5f0:	4630      	mov	r0, r6
9002a5f2:	f3af 8000 	nop.w
9002a5f6:	4607      	mov	r7, r0
9002a5f8:	1c78      	adds	r0, r7, #1
9002a5fa:	d1d6      	bne.n	9002a5aa <_vfiprintf_r+0x19a>
9002a5fc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002a5fe:	07d9      	lsls	r1, r3, #31
9002a600:	d405      	bmi.n	9002a60e <_vfiprintf_r+0x1fe>
9002a602:	89ab      	ldrh	r3, [r5, #12]
9002a604:	059a      	lsls	r2, r3, #22
9002a606:	d402      	bmi.n	9002a60e <_vfiprintf_r+0x1fe>
9002a608:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002a60a:	f7ff fe21 	bl	9002a250 <__retarget_lock_release_recursive>
9002a60e:	89ab      	ldrh	r3, [r5, #12]
9002a610:	065b      	lsls	r3, r3, #25
9002a612:	f53f af1f 	bmi.w	9002a454 <_vfiprintf_r+0x44>
9002a616:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002a618:	e71e      	b.n	9002a458 <_vfiprintf_r+0x48>
9002a61a:	ab03      	add	r3, sp, #12
9002a61c:	9300      	str	r3, [sp, #0]
9002a61e:	462a      	mov	r2, r5
9002a620:	4b05      	ldr	r3, [pc, #20]	@ (9002a638 <_vfiprintf_r+0x228>)
9002a622:	a904      	add	r1, sp, #16
9002a624:	4630      	mov	r0, r6
9002a626:	f000 f879 	bl	9002a71c <_printf_i>
9002a62a:	e7e4      	b.n	9002a5f6 <_vfiprintf_r+0x1e6>
9002a62c:	9002e248 	.word	0x9002e248
9002a630:	9002e252 	.word	0x9002e252
9002a634:	00000000 	.word	0x00000000
9002a638:	9002a3eb 	.word	0x9002a3eb
9002a63c:	9002e24e 	.word	0x9002e24e

9002a640 <_printf_common>:
9002a640:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002a644:	4616      	mov	r6, r2
9002a646:	4698      	mov	r8, r3
9002a648:	688a      	ldr	r2, [r1, #8]
9002a64a:	690b      	ldr	r3, [r1, #16]
9002a64c:	f8dd 9020 	ldr.w	r9, [sp, #32]
9002a650:	4293      	cmp	r3, r2
9002a652:	bfb8      	it	lt
9002a654:	4613      	movlt	r3, r2
9002a656:	6033      	str	r3, [r6, #0]
9002a658:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
9002a65c:	4607      	mov	r7, r0
9002a65e:	460c      	mov	r4, r1
9002a660:	b10a      	cbz	r2, 9002a666 <_printf_common+0x26>
9002a662:	3301      	adds	r3, #1
9002a664:	6033      	str	r3, [r6, #0]
9002a666:	6823      	ldr	r3, [r4, #0]
9002a668:	0699      	lsls	r1, r3, #26
9002a66a:	bf42      	ittt	mi
9002a66c:	6833      	ldrmi	r3, [r6, #0]
9002a66e:	3302      	addmi	r3, #2
9002a670:	6033      	strmi	r3, [r6, #0]
9002a672:	6825      	ldr	r5, [r4, #0]
9002a674:	f015 0506 	ands.w	r5, r5, #6
9002a678:	d106      	bne.n	9002a688 <_printf_common+0x48>
9002a67a:	f104 0a19 	add.w	sl, r4, #25
9002a67e:	68e3      	ldr	r3, [r4, #12]
9002a680:	6832      	ldr	r2, [r6, #0]
9002a682:	1a9b      	subs	r3, r3, r2
9002a684:	42ab      	cmp	r3, r5
9002a686:	dc26      	bgt.n	9002a6d6 <_printf_common+0x96>
9002a688:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9002a68c:	6822      	ldr	r2, [r4, #0]
9002a68e:	3b00      	subs	r3, #0
9002a690:	bf18      	it	ne
9002a692:	2301      	movne	r3, #1
9002a694:	0692      	lsls	r2, r2, #26
9002a696:	d42b      	bmi.n	9002a6f0 <_printf_common+0xb0>
9002a698:	f104 0243 	add.w	r2, r4, #67	@ 0x43
9002a69c:	4641      	mov	r1, r8
9002a69e:	4638      	mov	r0, r7
9002a6a0:	47c8      	blx	r9
9002a6a2:	3001      	adds	r0, #1
9002a6a4:	d01e      	beq.n	9002a6e4 <_printf_common+0xa4>
9002a6a6:	6823      	ldr	r3, [r4, #0]
9002a6a8:	6922      	ldr	r2, [r4, #16]
9002a6aa:	f003 0306 	and.w	r3, r3, #6
9002a6ae:	2b04      	cmp	r3, #4
9002a6b0:	bf02      	ittt	eq
9002a6b2:	68e5      	ldreq	r5, [r4, #12]
9002a6b4:	6833      	ldreq	r3, [r6, #0]
9002a6b6:	1aed      	subeq	r5, r5, r3
9002a6b8:	68a3      	ldr	r3, [r4, #8]
9002a6ba:	bf0c      	ite	eq
9002a6bc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002a6c0:	2500      	movne	r5, #0
9002a6c2:	4293      	cmp	r3, r2
9002a6c4:	bfc4      	itt	gt
9002a6c6:	1a9b      	subgt	r3, r3, r2
9002a6c8:	18ed      	addgt	r5, r5, r3
9002a6ca:	2600      	movs	r6, #0
9002a6cc:	341a      	adds	r4, #26
9002a6ce:	42b5      	cmp	r5, r6
9002a6d0:	d11a      	bne.n	9002a708 <_printf_common+0xc8>
9002a6d2:	2000      	movs	r0, #0
9002a6d4:	e008      	b.n	9002a6e8 <_printf_common+0xa8>
9002a6d6:	2301      	movs	r3, #1
9002a6d8:	4652      	mov	r2, sl
9002a6da:	4641      	mov	r1, r8
9002a6dc:	4638      	mov	r0, r7
9002a6de:	47c8      	blx	r9
9002a6e0:	3001      	adds	r0, #1
9002a6e2:	d103      	bne.n	9002a6ec <_printf_common+0xac>
9002a6e4:	f04f 30ff 	mov.w	r0, #4294967295
9002a6e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002a6ec:	3501      	adds	r5, #1
9002a6ee:	e7c6      	b.n	9002a67e <_printf_common+0x3e>
9002a6f0:	18e1      	adds	r1, r4, r3
9002a6f2:	1c5a      	adds	r2, r3, #1
9002a6f4:	2030      	movs	r0, #48	@ 0x30
9002a6f6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
9002a6fa:	4422      	add	r2, r4
9002a6fc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
9002a700:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
9002a704:	3302      	adds	r3, #2
9002a706:	e7c7      	b.n	9002a698 <_printf_common+0x58>
9002a708:	2301      	movs	r3, #1
9002a70a:	4622      	mov	r2, r4
9002a70c:	4641      	mov	r1, r8
9002a70e:	4638      	mov	r0, r7
9002a710:	47c8      	blx	r9
9002a712:	3001      	adds	r0, #1
9002a714:	d0e6      	beq.n	9002a6e4 <_printf_common+0xa4>
9002a716:	3601      	adds	r6, #1
9002a718:	e7d9      	b.n	9002a6ce <_printf_common+0x8e>
	...

9002a71c <_printf_i>:
9002a71c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002a720:	7e0f      	ldrb	r7, [r1, #24]
9002a722:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002a724:	2f78      	cmp	r7, #120	@ 0x78
9002a726:	4691      	mov	r9, r2
9002a728:	4680      	mov	r8, r0
9002a72a:	460c      	mov	r4, r1
9002a72c:	469a      	mov	sl, r3
9002a72e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
9002a732:	d807      	bhi.n	9002a744 <_printf_i+0x28>
9002a734:	2f62      	cmp	r7, #98	@ 0x62
9002a736:	d80a      	bhi.n	9002a74e <_printf_i+0x32>
9002a738:	2f00      	cmp	r7, #0
9002a73a:	f000 80d2 	beq.w	9002a8e2 <_printf_i+0x1c6>
9002a73e:	2f58      	cmp	r7, #88	@ 0x58
9002a740:	f000 80b9 	beq.w	9002a8b6 <_printf_i+0x19a>
9002a744:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002a748:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
9002a74c:	e03a      	b.n	9002a7c4 <_printf_i+0xa8>
9002a74e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002a752:	2b15      	cmp	r3, #21
9002a754:	d8f6      	bhi.n	9002a744 <_printf_i+0x28>
9002a756:	a101      	add	r1, pc, #4	@ (adr r1, 9002a75c <_printf_i+0x40>)
9002a758:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002a75c:	9002a7b5 	.word	0x9002a7b5
9002a760:	9002a7c9 	.word	0x9002a7c9
9002a764:	9002a745 	.word	0x9002a745
9002a768:	9002a745 	.word	0x9002a745
9002a76c:	9002a745 	.word	0x9002a745
9002a770:	9002a745 	.word	0x9002a745
9002a774:	9002a7c9 	.word	0x9002a7c9
9002a778:	9002a745 	.word	0x9002a745
9002a77c:	9002a745 	.word	0x9002a745
9002a780:	9002a745 	.word	0x9002a745
9002a784:	9002a745 	.word	0x9002a745
9002a788:	9002a8c9 	.word	0x9002a8c9
9002a78c:	9002a7f3 	.word	0x9002a7f3
9002a790:	9002a883 	.word	0x9002a883
9002a794:	9002a745 	.word	0x9002a745
9002a798:	9002a745 	.word	0x9002a745
9002a79c:	9002a8eb 	.word	0x9002a8eb
9002a7a0:	9002a745 	.word	0x9002a745
9002a7a4:	9002a7f3 	.word	0x9002a7f3
9002a7a8:	9002a745 	.word	0x9002a745
9002a7ac:	9002a745 	.word	0x9002a745
9002a7b0:	9002a88b 	.word	0x9002a88b
9002a7b4:	6833      	ldr	r3, [r6, #0]
9002a7b6:	1d1a      	adds	r2, r3, #4
9002a7b8:	681b      	ldr	r3, [r3, #0]
9002a7ba:	6032      	str	r2, [r6, #0]
9002a7bc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002a7c0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9002a7c4:	2301      	movs	r3, #1
9002a7c6:	e09d      	b.n	9002a904 <_printf_i+0x1e8>
9002a7c8:	6833      	ldr	r3, [r6, #0]
9002a7ca:	6820      	ldr	r0, [r4, #0]
9002a7cc:	1d19      	adds	r1, r3, #4
9002a7ce:	6031      	str	r1, [r6, #0]
9002a7d0:	0606      	lsls	r6, r0, #24
9002a7d2:	d501      	bpl.n	9002a7d8 <_printf_i+0xbc>
9002a7d4:	681d      	ldr	r5, [r3, #0]
9002a7d6:	e003      	b.n	9002a7e0 <_printf_i+0xc4>
9002a7d8:	0645      	lsls	r5, r0, #25
9002a7da:	d5fb      	bpl.n	9002a7d4 <_printf_i+0xb8>
9002a7dc:	f9b3 5000 	ldrsh.w	r5, [r3]
9002a7e0:	2d00      	cmp	r5, #0
9002a7e2:	da03      	bge.n	9002a7ec <_printf_i+0xd0>
9002a7e4:	232d      	movs	r3, #45	@ 0x2d
9002a7e6:	426d      	negs	r5, r5
9002a7e8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002a7ec:	4859      	ldr	r0, [pc, #356]	@ (9002a954 <_printf_i+0x238>)
9002a7ee:	230a      	movs	r3, #10
9002a7f0:	e011      	b.n	9002a816 <_printf_i+0xfa>
9002a7f2:	6821      	ldr	r1, [r4, #0]
9002a7f4:	6833      	ldr	r3, [r6, #0]
9002a7f6:	0608      	lsls	r0, r1, #24
9002a7f8:	f853 5b04 	ldr.w	r5, [r3], #4
9002a7fc:	d402      	bmi.n	9002a804 <_printf_i+0xe8>
9002a7fe:	0649      	lsls	r1, r1, #25
9002a800:	bf48      	it	mi
9002a802:	b2ad      	uxthmi	r5, r5
9002a804:	2f6f      	cmp	r7, #111	@ 0x6f
9002a806:	4853      	ldr	r0, [pc, #332]	@ (9002a954 <_printf_i+0x238>)
9002a808:	6033      	str	r3, [r6, #0]
9002a80a:	bf14      	ite	ne
9002a80c:	230a      	movne	r3, #10
9002a80e:	2308      	moveq	r3, #8
9002a810:	2100      	movs	r1, #0
9002a812:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
9002a816:	6866      	ldr	r6, [r4, #4]
9002a818:	60a6      	str	r6, [r4, #8]
9002a81a:	2e00      	cmp	r6, #0
9002a81c:	bfa2      	ittt	ge
9002a81e:	6821      	ldrge	r1, [r4, #0]
9002a820:	f021 0104 	bicge.w	r1, r1, #4
9002a824:	6021      	strge	r1, [r4, #0]
9002a826:	b90d      	cbnz	r5, 9002a82c <_printf_i+0x110>
9002a828:	2e00      	cmp	r6, #0
9002a82a:	d04b      	beq.n	9002a8c4 <_printf_i+0x1a8>
9002a82c:	4616      	mov	r6, r2
9002a82e:	fbb5 f1f3 	udiv	r1, r5, r3
9002a832:	fb03 5711 	mls	r7, r3, r1, r5
9002a836:	5dc7      	ldrb	r7, [r0, r7]
9002a838:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002a83c:	462f      	mov	r7, r5
9002a83e:	42bb      	cmp	r3, r7
9002a840:	460d      	mov	r5, r1
9002a842:	d9f4      	bls.n	9002a82e <_printf_i+0x112>
9002a844:	2b08      	cmp	r3, #8
9002a846:	d10b      	bne.n	9002a860 <_printf_i+0x144>
9002a848:	6823      	ldr	r3, [r4, #0]
9002a84a:	07df      	lsls	r7, r3, #31
9002a84c:	d508      	bpl.n	9002a860 <_printf_i+0x144>
9002a84e:	6923      	ldr	r3, [r4, #16]
9002a850:	6861      	ldr	r1, [r4, #4]
9002a852:	4299      	cmp	r1, r3
9002a854:	bfde      	ittt	le
9002a856:	2330      	movle	r3, #48	@ 0x30
9002a858:	f806 3c01 	strble.w	r3, [r6, #-1]
9002a85c:	f106 36ff 	addle.w	r6, r6, #4294967295
9002a860:	1b92      	subs	r2, r2, r6
9002a862:	6122      	str	r2, [r4, #16]
9002a864:	f8cd a000 	str.w	sl, [sp]
9002a868:	464b      	mov	r3, r9
9002a86a:	aa03      	add	r2, sp, #12
9002a86c:	4621      	mov	r1, r4
9002a86e:	4640      	mov	r0, r8
9002a870:	f7ff fee6 	bl	9002a640 <_printf_common>
9002a874:	3001      	adds	r0, #1
9002a876:	d14a      	bne.n	9002a90e <_printf_i+0x1f2>
9002a878:	f04f 30ff 	mov.w	r0, #4294967295
9002a87c:	b004      	add	sp, #16
9002a87e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002a882:	6823      	ldr	r3, [r4, #0]
9002a884:	f043 0320 	orr.w	r3, r3, #32
9002a888:	6023      	str	r3, [r4, #0]
9002a88a:	4833      	ldr	r0, [pc, #204]	@ (9002a958 <_printf_i+0x23c>)
9002a88c:	2778      	movs	r7, #120	@ 0x78
9002a88e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002a892:	6823      	ldr	r3, [r4, #0]
9002a894:	6831      	ldr	r1, [r6, #0]
9002a896:	061f      	lsls	r7, r3, #24
9002a898:	f851 5b04 	ldr.w	r5, [r1], #4
9002a89c:	d402      	bmi.n	9002a8a4 <_printf_i+0x188>
9002a89e:	065f      	lsls	r7, r3, #25
9002a8a0:	bf48      	it	mi
9002a8a2:	b2ad      	uxthmi	r5, r5
9002a8a4:	6031      	str	r1, [r6, #0]
9002a8a6:	07d9      	lsls	r1, r3, #31
9002a8a8:	bf44      	itt	mi
9002a8aa:	f043 0320 	orrmi.w	r3, r3, #32
9002a8ae:	6023      	strmi	r3, [r4, #0]
9002a8b0:	b11d      	cbz	r5, 9002a8ba <_printf_i+0x19e>
9002a8b2:	2310      	movs	r3, #16
9002a8b4:	e7ac      	b.n	9002a810 <_printf_i+0xf4>
9002a8b6:	4827      	ldr	r0, [pc, #156]	@ (9002a954 <_printf_i+0x238>)
9002a8b8:	e7e9      	b.n	9002a88e <_printf_i+0x172>
9002a8ba:	6823      	ldr	r3, [r4, #0]
9002a8bc:	f023 0320 	bic.w	r3, r3, #32
9002a8c0:	6023      	str	r3, [r4, #0]
9002a8c2:	e7f6      	b.n	9002a8b2 <_printf_i+0x196>
9002a8c4:	4616      	mov	r6, r2
9002a8c6:	e7bd      	b.n	9002a844 <_printf_i+0x128>
9002a8c8:	6833      	ldr	r3, [r6, #0]
9002a8ca:	6825      	ldr	r5, [r4, #0]
9002a8cc:	6961      	ldr	r1, [r4, #20]
9002a8ce:	1d18      	adds	r0, r3, #4
9002a8d0:	6030      	str	r0, [r6, #0]
9002a8d2:	062e      	lsls	r6, r5, #24
9002a8d4:	681b      	ldr	r3, [r3, #0]
9002a8d6:	d501      	bpl.n	9002a8dc <_printf_i+0x1c0>
9002a8d8:	6019      	str	r1, [r3, #0]
9002a8da:	e002      	b.n	9002a8e2 <_printf_i+0x1c6>
9002a8dc:	0668      	lsls	r0, r5, #25
9002a8de:	d5fb      	bpl.n	9002a8d8 <_printf_i+0x1bc>
9002a8e0:	8019      	strh	r1, [r3, #0]
9002a8e2:	2300      	movs	r3, #0
9002a8e4:	6123      	str	r3, [r4, #16]
9002a8e6:	4616      	mov	r6, r2
9002a8e8:	e7bc      	b.n	9002a864 <_printf_i+0x148>
9002a8ea:	6833      	ldr	r3, [r6, #0]
9002a8ec:	1d1a      	adds	r2, r3, #4
9002a8ee:	6032      	str	r2, [r6, #0]
9002a8f0:	681e      	ldr	r6, [r3, #0]
9002a8f2:	6862      	ldr	r2, [r4, #4]
9002a8f4:	2100      	movs	r1, #0
9002a8f6:	4630      	mov	r0, r6
9002a8f8:	f7d5 fcf2 	bl	900002e0 <memchr>
9002a8fc:	b108      	cbz	r0, 9002a902 <_printf_i+0x1e6>
9002a8fe:	1b80      	subs	r0, r0, r6
9002a900:	6060      	str	r0, [r4, #4]
9002a902:	6863      	ldr	r3, [r4, #4]
9002a904:	6123      	str	r3, [r4, #16]
9002a906:	2300      	movs	r3, #0
9002a908:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002a90c:	e7aa      	b.n	9002a864 <_printf_i+0x148>
9002a90e:	6923      	ldr	r3, [r4, #16]
9002a910:	4632      	mov	r2, r6
9002a912:	4649      	mov	r1, r9
9002a914:	4640      	mov	r0, r8
9002a916:	47d0      	blx	sl
9002a918:	3001      	adds	r0, #1
9002a91a:	d0ad      	beq.n	9002a878 <_printf_i+0x15c>
9002a91c:	6823      	ldr	r3, [r4, #0]
9002a91e:	079b      	lsls	r3, r3, #30
9002a920:	d413      	bmi.n	9002a94a <_printf_i+0x22e>
9002a922:	68e0      	ldr	r0, [r4, #12]
9002a924:	9b03      	ldr	r3, [sp, #12]
9002a926:	4298      	cmp	r0, r3
9002a928:	bfb8      	it	lt
9002a92a:	4618      	movlt	r0, r3
9002a92c:	e7a6      	b.n	9002a87c <_printf_i+0x160>
9002a92e:	2301      	movs	r3, #1
9002a930:	4632      	mov	r2, r6
9002a932:	4649      	mov	r1, r9
9002a934:	4640      	mov	r0, r8
9002a936:	47d0      	blx	sl
9002a938:	3001      	adds	r0, #1
9002a93a:	d09d      	beq.n	9002a878 <_printf_i+0x15c>
9002a93c:	3501      	adds	r5, #1
9002a93e:	68e3      	ldr	r3, [r4, #12]
9002a940:	9903      	ldr	r1, [sp, #12]
9002a942:	1a5b      	subs	r3, r3, r1
9002a944:	42ab      	cmp	r3, r5
9002a946:	dcf2      	bgt.n	9002a92e <_printf_i+0x212>
9002a948:	e7eb      	b.n	9002a922 <_printf_i+0x206>
9002a94a:	2500      	movs	r5, #0
9002a94c:	f104 0619 	add.w	r6, r4, #25
9002a950:	e7f5      	b.n	9002a93e <_printf_i+0x222>
9002a952:	bf00      	nop
9002a954:	9002e259 	.word	0x9002e259
9002a958:	9002e26a 	.word	0x9002e26a

9002a95c <__sflush_r>:
9002a95c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002a960:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002a964:	0716      	lsls	r6, r2, #28
9002a966:	4605      	mov	r5, r0
9002a968:	460c      	mov	r4, r1
9002a96a:	d454      	bmi.n	9002aa16 <__sflush_r+0xba>
9002a96c:	684b      	ldr	r3, [r1, #4]
9002a96e:	2b00      	cmp	r3, #0
9002a970:	dc02      	bgt.n	9002a978 <__sflush_r+0x1c>
9002a972:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
9002a974:	2b00      	cmp	r3, #0
9002a976:	dd48      	ble.n	9002aa0a <__sflush_r+0xae>
9002a978:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002a97a:	2e00      	cmp	r6, #0
9002a97c:	d045      	beq.n	9002aa0a <__sflush_r+0xae>
9002a97e:	2300      	movs	r3, #0
9002a980:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
9002a984:	682f      	ldr	r7, [r5, #0]
9002a986:	6a21      	ldr	r1, [r4, #32]
9002a988:	602b      	str	r3, [r5, #0]
9002a98a:	d030      	beq.n	9002a9ee <__sflush_r+0x92>
9002a98c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002a98e:	89a3      	ldrh	r3, [r4, #12]
9002a990:	0759      	lsls	r1, r3, #29
9002a992:	d505      	bpl.n	9002a9a0 <__sflush_r+0x44>
9002a994:	6863      	ldr	r3, [r4, #4]
9002a996:	1ad2      	subs	r2, r2, r3
9002a998:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9002a99a:	b10b      	cbz	r3, 9002a9a0 <__sflush_r+0x44>
9002a99c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002a99e:	1ad2      	subs	r2, r2, r3
9002a9a0:	2300      	movs	r3, #0
9002a9a2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002a9a4:	6a21      	ldr	r1, [r4, #32]
9002a9a6:	4628      	mov	r0, r5
9002a9a8:	47b0      	blx	r6
9002a9aa:	1c43      	adds	r3, r0, #1
9002a9ac:	89a3      	ldrh	r3, [r4, #12]
9002a9ae:	d106      	bne.n	9002a9be <__sflush_r+0x62>
9002a9b0:	6829      	ldr	r1, [r5, #0]
9002a9b2:	291d      	cmp	r1, #29
9002a9b4:	d82b      	bhi.n	9002aa0e <__sflush_r+0xb2>
9002a9b6:	4a2a      	ldr	r2, [pc, #168]	@ (9002aa60 <__sflush_r+0x104>)
9002a9b8:	410a      	asrs	r2, r1
9002a9ba:	07d6      	lsls	r6, r2, #31
9002a9bc:	d427      	bmi.n	9002aa0e <__sflush_r+0xb2>
9002a9be:	2200      	movs	r2, #0
9002a9c0:	6062      	str	r2, [r4, #4]
9002a9c2:	04d9      	lsls	r1, r3, #19
9002a9c4:	6922      	ldr	r2, [r4, #16]
9002a9c6:	6022      	str	r2, [r4, #0]
9002a9c8:	d504      	bpl.n	9002a9d4 <__sflush_r+0x78>
9002a9ca:	1c42      	adds	r2, r0, #1
9002a9cc:	d101      	bne.n	9002a9d2 <__sflush_r+0x76>
9002a9ce:	682b      	ldr	r3, [r5, #0]
9002a9d0:	b903      	cbnz	r3, 9002a9d4 <__sflush_r+0x78>
9002a9d2:	6560      	str	r0, [r4, #84]	@ 0x54
9002a9d4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002a9d6:	602f      	str	r7, [r5, #0]
9002a9d8:	b1b9      	cbz	r1, 9002aa0a <__sflush_r+0xae>
9002a9da:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002a9de:	4299      	cmp	r1, r3
9002a9e0:	d002      	beq.n	9002a9e8 <__sflush_r+0x8c>
9002a9e2:	4628      	mov	r0, r5
9002a9e4:	f7ff fca0 	bl	9002a328 <_free_r>
9002a9e8:	2300      	movs	r3, #0
9002a9ea:	6363      	str	r3, [r4, #52]	@ 0x34
9002a9ec:	e00d      	b.n	9002aa0a <__sflush_r+0xae>
9002a9ee:	2301      	movs	r3, #1
9002a9f0:	4628      	mov	r0, r5
9002a9f2:	47b0      	blx	r6
9002a9f4:	4602      	mov	r2, r0
9002a9f6:	1c50      	adds	r0, r2, #1
9002a9f8:	d1c9      	bne.n	9002a98e <__sflush_r+0x32>
9002a9fa:	682b      	ldr	r3, [r5, #0]
9002a9fc:	2b00      	cmp	r3, #0
9002a9fe:	d0c6      	beq.n	9002a98e <__sflush_r+0x32>
9002aa00:	2b1d      	cmp	r3, #29
9002aa02:	d001      	beq.n	9002aa08 <__sflush_r+0xac>
9002aa04:	2b16      	cmp	r3, #22
9002aa06:	d11e      	bne.n	9002aa46 <__sflush_r+0xea>
9002aa08:	602f      	str	r7, [r5, #0]
9002aa0a:	2000      	movs	r0, #0
9002aa0c:	e022      	b.n	9002aa54 <__sflush_r+0xf8>
9002aa0e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002aa12:	b21b      	sxth	r3, r3
9002aa14:	e01b      	b.n	9002aa4e <__sflush_r+0xf2>
9002aa16:	690f      	ldr	r7, [r1, #16]
9002aa18:	2f00      	cmp	r7, #0
9002aa1a:	d0f6      	beq.n	9002aa0a <__sflush_r+0xae>
9002aa1c:	0793      	lsls	r3, r2, #30
9002aa1e:	680e      	ldr	r6, [r1, #0]
9002aa20:	bf08      	it	eq
9002aa22:	694b      	ldreq	r3, [r1, #20]
9002aa24:	600f      	str	r7, [r1, #0]
9002aa26:	bf18      	it	ne
9002aa28:	2300      	movne	r3, #0
9002aa2a:	eba6 0807 	sub.w	r8, r6, r7
9002aa2e:	608b      	str	r3, [r1, #8]
9002aa30:	f1b8 0f00 	cmp.w	r8, #0
9002aa34:	dde9      	ble.n	9002aa0a <__sflush_r+0xae>
9002aa36:	6a21      	ldr	r1, [r4, #32]
9002aa38:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
9002aa3a:	4643      	mov	r3, r8
9002aa3c:	463a      	mov	r2, r7
9002aa3e:	4628      	mov	r0, r5
9002aa40:	47b0      	blx	r6
9002aa42:	2800      	cmp	r0, #0
9002aa44:	dc08      	bgt.n	9002aa58 <__sflush_r+0xfc>
9002aa46:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002aa4a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002aa4e:	81a3      	strh	r3, [r4, #12]
9002aa50:	f04f 30ff 	mov.w	r0, #4294967295
9002aa54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002aa58:	4407      	add	r7, r0
9002aa5a:	eba8 0800 	sub.w	r8, r8, r0
9002aa5e:	e7e7      	b.n	9002aa30 <__sflush_r+0xd4>
9002aa60:	dfbffffe 	.word	0xdfbffffe

9002aa64 <_fflush_r>:
9002aa64:	b538      	push	{r3, r4, r5, lr}
9002aa66:	690b      	ldr	r3, [r1, #16]
9002aa68:	4605      	mov	r5, r0
9002aa6a:	460c      	mov	r4, r1
9002aa6c:	b913      	cbnz	r3, 9002aa74 <_fflush_r+0x10>
9002aa6e:	2500      	movs	r5, #0
9002aa70:	4628      	mov	r0, r5
9002aa72:	bd38      	pop	{r3, r4, r5, pc}
9002aa74:	b118      	cbz	r0, 9002aa7e <_fflush_r+0x1a>
9002aa76:	6a03      	ldr	r3, [r0, #32]
9002aa78:	b90b      	cbnz	r3, 9002aa7e <_fflush_r+0x1a>
9002aa7a:	f7ff f9e9 	bl	90029e50 <__sinit>
9002aa7e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002aa82:	2b00      	cmp	r3, #0
9002aa84:	d0f3      	beq.n	9002aa6e <_fflush_r+0xa>
9002aa86:	6e62      	ldr	r2, [r4, #100]	@ 0x64
9002aa88:	07d0      	lsls	r0, r2, #31
9002aa8a:	d404      	bmi.n	9002aa96 <_fflush_r+0x32>
9002aa8c:	0599      	lsls	r1, r3, #22
9002aa8e:	d402      	bmi.n	9002aa96 <_fflush_r+0x32>
9002aa90:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002aa92:	f7ff fbdc 	bl	9002a24e <__retarget_lock_acquire_recursive>
9002aa96:	4628      	mov	r0, r5
9002aa98:	4621      	mov	r1, r4
9002aa9a:	f7ff ff5f 	bl	9002a95c <__sflush_r>
9002aa9e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002aaa0:	07da      	lsls	r2, r3, #31
9002aaa2:	4605      	mov	r5, r0
9002aaa4:	d4e4      	bmi.n	9002aa70 <_fflush_r+0xc>
9002aaa6:	89a3      	ldrh	r3, [r4, #12]
9002aaa8:	059b      	lsls	r3, r3, #22
9002aaaa:	d4e1      	bmi.n	9002aa70 <_fflush_r+0xc>
9002aaac:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002aaae:	f7ff fbcf 	bl	9002a250 <__retarget_lock_release_recursive>
9002aab2:	e7dd      	b.n	9002aa70 <_fflush_r+0xc>

9002aab4 <__swhatbuf_r>:
9002aab4:	b570      	push	{r4, r5, r6, lr}
9002aab6:	460c      	mov	r4, r1
9002aab8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002aabc:	2900      	cmp	r1, #0
9002aabe:	b096      	sub	sp, #88	@ 0x58
9002aac0:	4615      	mov	r5, r2
9002aac2:	461e      	mov	r6, r3
9002aac4:	da0d      	bge.n	9002aae2 <__swhatbuf_r+0x2e>
9002aac6:	89a3      	ldrh	r3, [r4, #12]
9002aac8:	f013 0f80 	tst.w	r3, #128	@ 0x80
9002aacc:	f04f 0100 	mov.w	r1, #0
9002aad0:	bf14      	ite	ne
9002aad2:	2340      	movne	r3, #64	@ 0x40
9002aad4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
9002aad8:	2000      	movs	r0, #0
9002aada:	6031      	str	r1, [r6, #0]
9002aadc:	602b      	str	r3, [r5, #0]
9002aade:	b016      	add	sp, #88	@ 0x58
9002aae0:	bd70      	pop	{r4, r5, r6, pc}
9002aae2:	466a      	mov	r2, sp
9002aae4:	f000 f848 	bl	9002ab78 <_fstat_r>
9002aae8:	2800      	cmp	r0, #0
9002aaea:	dbec      	blt.n	9002aac6 <__swhatbuf_r+0x12>
9002aaec:	9901      	ldr	r1, [sp, #4]
9002aaee:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
9002aaf2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
9002aaf6:	4259      	negs	r1, r3
9002aaf8:	4159      	adcs	r1, r3
9002aafa:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9002aafe:	e7eb      	b.n	9002aad8 <__swhatbuf_r+0x24>

9002ab00 <__smakebuf_r>:
9002ab00:	898b      	ldrh	r3, [r1, #12]
9002ab02:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9002ab04:	079d      	lsls	r5, r3, #30
9002ab06:	4606      	mov	r6, r0
9002ab08:	460c      	mov	r4, r1
9002ab0a:	d507      	bpl.n	9002ab1c <__smakebuf_r+0x1c>
9002ab0c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
9002ab10:	6023      	str	r3, [r4, #0]
9002ab12:	6123      	str	r3, [r4, #16]
9002ab14:	2301      	movs	r3, #1
9002ab16:	6163      	str	r3, [r4, #20]
9002ab18:	b003      	add	sp, #12
9002ab1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002ab1c:	ab01      	add	r3, sp, #4
9002ab1e:	466a      	mov	r2, sp
9002ab20:	f7ff ffc8 	bl	9002aab4 <__swhatbuf_r>
9002ab24:	9f00      	ldr	r7, [sp, #0]
9002ab26:	4605      	mov	r5, r0
9002ab28:	4639      	mov	r1, r7
9002ab2a:	4630      	mov	r0, r6
9002ab2c:	f7ff f86a 	bl	90029c04 <_malloc_r>
9002ab30:	b948      	cbnz	r0, 9002ab46 <__smakebuf_r+0x46>
9002ab32:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002ab36:	059a      	lsls	r2, r3, #22
9002ab38:	d4ee      	bmi.n	9002ab18 <__smakebuf_r+0x18>
9002ab3a:	f023 0303 	bic.w	r3, r3, #3
9002ab3e:	f043 0302 	orr.w	r3, r3, #2
9002ab42:	81a3      	strh	r3, [r4, #12]
9002ab44:	e7e2      	b.n	9002ab0c <__smakebuf_r+0xc>
9002ab46:	89a3      	ldrh	r3, [r4, #12]
9002ab48:	6020      	str	r0, [r4, #0]
9002ab4a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9002ab4e:	81a3      	strh	r3, [r4, #12]
9002ab50:	9b01      	ldr	r3, [sp, #4]
9002ab52:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002ab56:	b15b      	cbz	r3, 9002ab70 <__smakebuf_r+0x70>
9002ab58:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002ab5c:	4630      	mov	r0, r6
9002ab5e:	f000 f81d 	bl	9002ab9c <_isatty_r>
9002ab62:	b128      	cbz	r0, 9002ab70 <__smakebuf_r+0x70>
9002ab64:	89a3      	ldrh	r3, [r4, #12]
9002ab66:	f023 0303 	bic.w	r3, r3, #3
9002ab6a:	f043 0301 	orr.w	r3, r3, #1
9002ab6e:	81a3      	strh	r3, [r4, #12]
9002ab70:	89a3      	ldrh	r3, [r4, #12]
9002ab72:	431d      	orrs	r5, r3
9002ab74:	81a5      	strh	r5, [r4, #12]
9002ab76:	e7cf      	b.n	9002ab18 <__smakebuf_r+0x18>

9002ab78 <_fstat_r>:
9002ab78:	b538      	push	{r3, r4, r5, lr}
9002ab7a:	4d07      	ldr	r5, [pc, #28]	@ (9002ab98 <_fstat_r+0x20>)
9002ab7c:	2300      	movs	r3, #0
9002ab7e:	4604      	mov	r4, r0
9002ab80:	4608      	mov	r0, r1
9002ab82:	4611      	mov	r1, r2
9002ab84:	602b      	str	r3, [r5, #0]
9002ab86:	f7d9 fbfb 	bl	90004380 <_fstat>
9002ab8a:	1c43      	adds	r3, r0, #1
9002ab8c:	d102      	bne.n	9002ab94 <_fstat_r+0x1c>
9002ab8e:	682b      	ldr	r3, [r5, #0]
9002ab90:	b103      	cbz	r3, 9002ab94 <_fstat_r+0x1c>
9002ab92:	6023      	str	r3, [r4, #0]
9002ab94:	bd38      	pop	{r3, r4, r5, pc}
9002ab96:	bf00      	nop
9002ab98:	24023f74 	.word	0x24023f74

9002ab9c <_isatty_r>:
9002ab9c:	b538      	push	{r3, r4, r5, lr}
9002ab9e:	4d06      	ldr	r5, [pc, #24]	@ (9002abb8 <_isatty_r+0x1c>)
9002aba0:	2300      	movs	r3, #0
9002aba2:	4604      	mov	r4, r0
9002aba4:	4608      	mov	r0, r1
9002aba6:	602b      	str	r3, [r5, #0]
9002aba8:	f7d9 fbf0 	bl	9000438c <_isatty>
9002abac:	1c43      	adds	r3, r0, #1
9002abae:	d102      	bne.n	9002abb6 <_isatty_r+0x1a>
9002abb0:	682b      	ldr	r3, [r5, #0]
9002abb2:	b103      	cbz	r3, 9002abb6 <_isatty_r+0x1a>
9002abb4:	6023      	str	r3, [r4, #0]
9002abb6:	bd38      	pop	{r3, r4, r5, pc}
9002abb8:	24023f74 	.word	0x24023f74

9002abbc <_init>:
9002abbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002abbe:	bf00      	nop
9002abc0:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002abc2:	bc08      	pop	{r3}
9002abc4:	469e      	mov	lr, r3
9002abc6:	4770      	bx	lr

9002abc8 <_fini>:
9002abc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002abca:	bf00      	nop
9002abcc:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002abce:	bc08      	pop	{r3}
9002abd0:	469e      	mov	lr, r3
9002abd2:	4770      	bx	lr
